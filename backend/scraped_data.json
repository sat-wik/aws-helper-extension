[
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts.html",
        "content": "Amazon Elastic Compute Cloud (Amazon EC2) provides on-demand, scalable computing capacity in the Amazon Web Services (AWS) Cloud. Using Amazon EC2 reduces hardware costs so you can develop and deploy applications faster. You can use Amazon EC2 to launch as many or as few virtual servers as you need, configure security and networking, and manage storage. You can add capacity (scale up) to handle compute-heavy tasks, such as monthly or yearly processes, or spikes in website traffic. When usage decreases, you can reduce capacity (scale down) again.\nAn EC2 instance is a virtual server in the AWS Cloud. When you launch an EC2 instance, the instance type that you specify determines the hardware available to your instance. Each instance type offers a different balance of compute, memory, network, and storage resources. For more information, see the Amazon EC2 Instance Types Guide.\nFeatures of Amazon EC2\nAmazon EC2 provides the following high-level features:\nInstances\nVirtual servers.\nAmazon Machine Images (AMIs)\nPreconfigured templates for your instances that package the components you need for your server (including the operating system and additional software).\nInstance types\nVarious configurations of CPU, memory, storage, networking capacity, and graphics hardware for your instances.\nAmazon EBS volumes\nPersistent storage volumes for your data using Amazon Elastic Block Store (Amazon EBS).\nInstance store volumes\nStorage volumes for temporary data that is deleted when you stop, hibernate, or terminate your instance.\nKey pairs\nSecure login information for your instances. AWS stores the public key and you store the private key in a secure place.\nSecurity groups\nA virtual firewall that allows you to specify the protocols, ports, and source IP ranges that can reach your instances, and the destination IP ranges to which your instances can connect.\nAmazon EC2 supports the processing, storage, and transmission of credit card data by a merchant or service provider, and has been validated as being compliant with Payment Card Industry (PCI) Data Security Standard (DSS). For more information about PCI DSS, including how to request a copy of the AWS PCI Compliance Package, see PCI DSS Level 1.\nRelated services\nServices to use with Amazon EC2\nYou can use other AWS services with the instances that you deploy using Amazon EC2.\nAmazon EC2 Auto Scaling\nHelps ensure you have the correct number of Amazon EC2 instances available to handle the load for your application.\nAWS Backup\nAutomate backing up your Amazon EC2 instances and the Amazon EBS volumes attached to them.\nAmazon CloudWatch\nMonitor your instances and Amazon EBS volumes.\nElastic Load Balancing\nAutomatically distribute incoming application traffic across multiple instances.\nAmazon GuardDuty\nDetect potentially unauthorized or malicious use of your EC2 instances.\nEC2 Image Builder\nAutomate the creation, management, and deployment of customized, secure, and up-to-date server images.\nAWS Launch Wizard\nSize, configure, and deploy AWS resources for third-party applications without having to manually identify and provision individual AWS resources.\nAWS Systems Manager\nPerform operations at scale on EC2 instances with this secure end-to-end management solution.\nAdditional compute services\nYou can launch instances using another AWS compute service instead of using Amazon EC2.\nAmazon Lightsail\nBuild websites or web applications using Amazon Lightsail, a cloud platform that provides the resources that you need to deploy your project quickly, for a low, predictable monthly price. To compare Amazon EC2 and Lightsail, see Amazon Lightsail or Amazon EC2.\nAmazon Elastic Container Service (Amazon ECS)\nDeploy, manage, and scale containerized applications on a cluster of EC2 instances. For more information, see Choosing an AWS container service.\nAmazon Elastic Kubernetes Service (Amazon EKS)\nRun your Kubernetes applications on AWS. For more information, see Choosing an AWS container service.\nAccess Amazon EC2\nYou can create and manage your Amazon EC2 instances using the following interfaces:\nAmazon EC2 console\nA simple web interface to create and manage Amazon EC2 instances and resources. If you've signed up for an AWS account, you can access the Amazon EC2 console by signing into the AWS Management Console and selecting EC2 from the console home page.\nAWS Command Line Interface\nEnables you to interact with AWS services using commands in your command-line shell. It is supported on Windows, Mac, and Linux. For more information about the AWS CLI , see AWS Command Line Interface User Guide. You can find the Amazon EC2 commands in the AWS CLI Command Reference.\nAWS CloudFormation\nAmazon EC2 supports creating resources using AWS CloudFormation. You create a template, in JSON or YAML format, that describes your AWS resources, and AWS CloudFormation provisions and configures those resources for you. You can reuse your CloudFormation templates to provision the same resources multiple times, whether in the same Region and account or in multiple Regions and accounts. For more information about supported resource types and properties for Amazon EC2, see EC2 resource type reference in the AWS CloudFormation User Guide.\nAWS SDKs\nIf you prefer to build applications using language-specific APIs instead of submitting a request over HTTP or HTTPS, AWS provides libraries, sample code, tutorials, and other resources for software developers. These libraries provide basic functions that automate tasks such as cryptographically signing your requests, retrying requests, and handling error responses, making it easier for you to get started. For more information, see Tools to Build on AWS.\nAWS Tools for PowerShell\nA set of PowerShell modules that are built on the functionality exposed by the AWS SDK for .NET. The Tools for PowerShell enable you to script operations on your AWS resources from the PowerShell command line. To get started, see the AWS Tools for Windows PowerShell User Guide. You can find the cmdlets for Amazon EC2, in the AWS Tools for PowerShell Cmdlet Reference.\nQuery API\nAmazon EC2 provides a Query API. These requests are HTTP or HTTPS requests that use the HTTP verbs GET or POST and a Query parameter named Action. For more information about the API actions for Amazon EC2, see Actions in the Amazon EC2 API Reference.\nPricing for Amazon EC2\nAmazon EC2 provides the following pricing options:\nFree Tier\nYou can get started with Amazon EC2 for free. To explore the Free Tier options, see AWS Free Tier.\nOn-Demand Instances\nPay for the instances that you use by the second, with a minimum of 60 seconds, with no long-term commitments or upfront payments.\nSavings Plans\nYou can reduce your Amazon EC2 costs by making a commitment to a consistent amount of usage, in USD per hour, for a term of 1 or 3 years.\nReserved Instances\nYou can reduce your Amazon EC2 costs by making a commitment to a specific instance configuration, including instance type and Region, for a term of 1 or 3 years.\nSpot Instances\nRequest unused EC2 instances, which can reduce your Amazon EC2 costs significantly.\nDedicated Hosts\nReduce costs by using a physical EC2 server that is fully dedicated for your use, either On-Demand or as part of a Savings Plan. You can use your existing server-bound software licenses and get help meeting compliance requirements.\nOn-Demand Capacity Reservations\nReserve compute capacity for your EC2 instances in a specific Availability Zone for any duration of time.\nPer-second billing\nRemoves the cost of unused minutes and seconds from your bill.\nFor a complete list of charges and prices for Amazon EC2 and more information about the purchase models, see Amazon EC2 pricing.\nEstimates, billing, and cost optimization\nTo create estimates for your AWS use cases, use the AWS Pricing Calculator.\nTo estimate the cost of transforming Microsoft workloads to a modern architecture that uses open source and cloud-native services deployed on AWS, use the AWS Modernization Calculator for Microsoft Workloads.\nTo see your bill, go to the Billing and Cost Management Dashboard in the AWS Billing and Cost Management console. Your bill contains links to usage reports that provide details about your bill. To learn more about AWS account billing, see AWS Billing and Cost Management User Guide.\nIf you have questions concerning AWS billing, accounts, and events, contact AWS Support.\nTo calculate the cost of a sample provisioned environment, see Cloud Economics Center. When calculating the cost of a provisioned environment, remember to include incidental costs such as snapshot storage for EBS volumes.\nYou can optimize the cost, security, and performance of your AWS environment using AWS Trusted Advisor.\nYou can use AWS Cost Explorer to analyze the cost and usage of your EC2 instances. You can view data up to the last 13 months, and forecast how much you are likely to spend for the next 12 months. For more information, see Analyzing your costs and usage with AWS Cost Explorer in the AWS Cost Management User Guide.\nResources\nAmazon EC2 features\nAWS re:Post\nAWS Skill Builder\nAWS Support\nHands-on Tutorials\nWeb Hosting\nWindows on AWS"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EC2_GetStarted.html",
        "content": "Use this tutorial to get started with Amazon Elastic Compute Cloud (Amazon EC2). You'll learn how to launch and connect to an EC2 instance. An instance is a virtual server in the AWS Cloud. With Amazon EC2, you can set up and configure the operating system and applications that run on your instance.\nOverview\nThe following diagram shows the key components that you'll use in this tutorial:\nAn image \u2013 A template that contains the software to run on your instance, such as the operating system.\nA key pair \u2013 A set of security credentials that you use to prove your identity when connecting to your instance. The public key is on your instance and the private key is on your computer.\nA network \u2013 A virtual private cloud (VPC) is a virtual network dedicated to your AWS account. To help you get started quickly, your account comes with a default VPC in each AWS Region, and each default VPC has a default subnet in each Availability Zone.\nA security group \u2013 Acts as a virtual firewall to control inbound and outbound traffic.\nAn EBS volume \u2013 We require a root volume for the image. You can optionally add data volumes.\nCost for this tutorial\nWhen you sign up for AWS, you can get started with Amazon EC2 using the AWS Free Tier. If you created your AWS account less than 12 months ago, and have not already exceeded the Free Tier benefits for Amazon EC2, it won't cost you anything to complete this tutorial, because we help you select options that are within the Free Tier benefits. Otherwise, you'll incur the standard Amazon EC2 usage fees from the time that you launch the instance until you terminate the instance (which is the final task of this tutorial), even if it remains idle.\nFor instructions to determine whether you are eligible for the Free Tier, see Track your Free Tier usage for Amazon EC2.\nTasks\nStep 1: Launch an instance\nStep 2: Connect to your instance\nStep 3: Clean up your instance\nNext steps\nStep 1: Launch an instance\nYou can launch an EC2 instance using the AWS Management Console as described in the following procedure. This tutorial is intended to help you quickly launch your first instance, so it doesn't cover all possible options.\nTo launch an instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation bar at the top of the screen, we display the current AWS Region \u2014 for example, Ohio. You can use the selected Region, or optionally select a Region that is closer to you.\nFrom the EC2 console dashboard, in the Launch instance pane, choose Launch instance.\nUnder Name and tags, for Name, enter a descriptive name for your instance.\nUnder Application and OS Images (Amazon Machine Image), do the following:\nChoose Quick Start, and then choose the operating system (OS) for your instance. For your first Linux instance, we recommend that you choose Amazon Linux.\nFrom Amazon Machine Image (AMI), select an AMI that is marked Free Tier eligible.\nUnder Instance type, for Instance type, choose t2.micro, which is eligible for the Free Tier. In Regions where t2.micro is not available, t3.micro is eligible for the Free Tier.\nUnder Key pair (login), for Key pair name, choose an existing key pair or choose Create new key pair to create your first key pair.\nWarning\nIf you choose Proceed without a key pair (Not recommended), you won't be able to connect to your instance using the methods described in this tutorial.\nUnder Network settings, notice that we selected your default VPC, selected the option to use the default subnet in an Availability Zone that we choose for you, and configured a security group with a rule that allows connections to your instance from anywhere. For your first instance, we recommend that you use the default settings. Otherwise, you can update your network settings as follows:\n(Optional) To use a specific default subnet, choose Edit and then choose a subnet.\n(Optional) To use a different VPC, choose Edit and then choose an existing VPC. If the VPC isn't configured for public internet access, you won't be able to connect to your instance.\n(Optional) To restrict inbound connection traffic to a specific network, choose Custom instead of Anywhere, and enter the CIDR block for your network.\n(Optional) To use a different security group, choose Select existing security group and choose an existing security group. If the security group does not have a rule that allows connection traffic from your network, you won't be able to connect to your instance. For a Linux instance, you must allow SSH traffic. For a Windows instance, you must allow RDP traffic.\nUnder Configure storage, notice that we configured a root volume but no data volumes. This is sufficient for test purposes.\nReview a summary of your instance configuration in the Summary panel, and when you're ready, choose Launch instance.\nIf the launch is successful, choose the ID of the instance from the Success notification to open the Instances page and monitor the status of the launch.\nSelect the checkbox for the instance. The initial instance state is pending. After the instance starts, its state changes to running. Choose the Status and alarms tab. After your instance passes its status checks, it is ready to receive connection requests.\nStep 2: Connect to your instance\nThe procedure that you use depends on the operating system of the instance. If you can't connect to your instance, see Troubleshoot issues connecting to your Amazon EC2 Linux instance for assistance.\nLinux instances\nWindows instances\nStep 3: Clean up your instance\nAfter you've finished with the instance that you created for this tutorial, you should clean up by terminating the instance. If you want to do more with this instance before you clean up, see Next steps.\nImportant\nTerminating an instance effectively deletes it; you can't reconnect to an instance after you've terminated it.\nYou'll stop incurring charges for that instance or usage that counts against your Free Tier limits as soon as the instance status changes to shutting down or terminated. To keep your instance for later, but not incur charges or usage that counts against your Free Tier limits, you can stop the instance now and then start it again later. For more information, see Stop and start Amazon EC2 instances.\nTo terminate your instance\nIn the navigation pane, choose Instances. In the list of instances, select the instance.\nChoose Instance state, Terminate instance.\nChoose Terminate when prompted for confirmation.\nAmazon EC2 shuts down and terminates your instance. After your instance is terminated, it remains visible on the console for a short while, and then the entry is automatically deleted. You cannot remove the terminated instance from the console display yourself.\nNext steps\nAfter you start your instance, you might want to explore the following next steps:\nLearn how to track your Amazon EC2 Free Tier usage using the console. For more information, see Track your Free Tier usage for Amazon EC2.\nConfigure a CloudWatch alarm to notify you if your usage exceeds the Free Tier. For more information, see Tracking your AWS Free Tier usage in the AWS Billing User Guide.\nAdd an EBS volume. For more information, see Create an Amazon EBS volume in the Amazon EBS User Guide.\nLearn how to remotely manage your EC2 instance using the Run command. For more information, see AWS Systems Manager Run Command in the AWS Systems Manager User Guide.\nLearn about instance purchasing options. For more information, see Amazon EC2 billing and purchasing options.\nGet advice about instance types. For more information, see Get recommendations from EC2 instance type finder."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-best-practices.html",
        "content": "To ensure the maximum benefit from Amazon EC2, we recommend that you perform the following best practices.\nSecurity\nManage access to AWS resources and APIs using identity federation with an identity provider and IAM roles whenever possible. For more information, see Creating IAM policies in the IAM User Guide.\nImplement the least permissive rules for your security group.\nRegularly patch, update, and secure the operating system and applications on your instance. For more information, see Update management. For guidelines specific to Windows operating systems, see Security best practices for Windows instances.\nUse Amazon Inspector to automatically discover and scan Amazon EC2 instances for software vulnerabilities and unintended network exposure. For more information, see the Amazon Inspector User Guide.\nUse AWS Security Hub controls to monitor your Amazon EC2 resources against security best practices and security standards. For more information about using Security Hub, see Amazon Elastic Compute Cloud controls in the AWS Security Hub User Guide.\nStorage\nUnderstand the implications of the root device type for data persistence, backup, and recovery. For more information, see Root device type.\nUse separate Amazon EBS volumes for the operating system versus your data. Ensure that the volume with your data persists after instance termination. For more information, see Preserve data when an instance is terminated.\nUse the instance store available for your instance to store temporary data. Remember that the data stored in instance store is deleted when you stop, hibernate, or terminate your instance. If you use instance store for database storage, ensure that you have a cluster with a replication factor that ensures fault tolerance.\nEncrypt EBS volumes and snapshots. For more information, see Amazon EBS encryption in the Amazon EBS User Guide.\nResource management\nUse instance metadata and custom resource tags to track and identify your AWS resources. For more information, see Use instance metadata to manage your EC2 instance and Tag your Amazon EC2 resources.\nView your current limits for Amazon EC2. Plan to request any limit increases in advance of the time that you'll need them. For more information, see Amazon EC2 service quotas.\nUse AWS Trusted Advisor to inspect your AWS environment, and then make recommendations when opportunities exist to save money, improve system availability and performance, or help close security gaps. For more information, see AWS Trusted Advisor in the AWS Support User Guide.\nBackup and recovery\nRegularly back up your EBS volumes using Amazon EBS snapshots, and create an Amazon Machine Image (AMI) from your instance to save the configuration as a template for launching future instances. For more information about AWS services that help achieve this use case, see AWS Backup and Amazon Data Lifecycle Manager.\nDeploy critical components of your application across multiple Availability Zones, and replicate your data appropriately.\nDesign your applications to handle dynamic IP addressing when your instance restarts. For more information, see Amazon EC2 instance IP addressing.\nMonitor and respond to events. For more information, see Monitor Amazon EC2 resources.\nEnsure that you are prepared to handle failover. For a basic solution, you can manually attach a network interface or Elastic IP address to a replacement instance. For more information, see Elastic network interfaces. For an automated solution, you can use Amazon EC2 Auto Scaling. For more information, see the Amazon EC2 Auto Scaling User Guide.\nRegularly test the process of recovering your instances and Amazon EBS volumes to ensure data and services are restored successfully.\nNetworking\nSet the time-to-live (TTL) value for your applications to 255, for IPv4 and IPv6. If you use a smaller value, there is a risk that the TTL will expire while application traffic is in transit, causing reachability issues for your instances."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html",
        "content": "An Amazon Machine Image (AMI) is an image that provides the software that is required to set up and boot an Amazon EC2 instance. Each AMI also contains a block device mapping that specifies the block devices to attach to the instances that you launch. You must specify an AMI when you launch an instance. The AMI must be compatible with the instance type that you chose for your instance. You can use an AMI provided by AWS, a public AMI, an AMI that someone else shared with you, or an AMI that you purchased from the AWS Marketplace.\nAn AMI is specific to the following:\nRegion\nOperating system\nProcessor architecture\nRoot device type\nVirtualization type\nYou can launch multiple instances from a single AMI when you require multiple instances with the same configuration. You can use different AMIs to launch instances when you require instances with different configurations, as shown in the following diagram.\nYou can create an AMI from your Amazon EC2 instances and then use it to launch instances with the same configuration. You can copy an AMI to another AWS Region, and then use it to launch instances in that Region. You can also share an AMI that you created with other accounts so that they can launch instances with the same configuration. You can sell your AMI using the AWS Marketplace.\nContents\nAMI characteristics\nFind an AMI\nPaid AMIs in the AWS Marketplace\nAMI lifecycle\nBoot modes\nAMI encryption\nShared AMIs\nMonitor AMI events\nUnderstand AMI billing\nAMI quotas"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ComponentsAMIs.html",
        "content": "When you launch an instance, the AMI that you choose must be compatible with the instance type that you choose. You can select an AMI to use based on the following characteristics:\nRegion\nOperating system\nProcessor architecture\nLaunch permissions\nRoot device type\nVirtualization types\nLaunch permissions\nThe owner of an AMI determines its availability by specifying launch permissions. Launch permissions fall into the following categories.\nLaunch permission Description\npublic The owner grants launch permissions to all AWS accounts.\nexplicit The owner grants launch permissions to specific AWS accounts, organizations, or organizational units (OUs).\nimplicit The owner has implicit launch permissions for an AMI.\nAmazon and the Amazon EC2 community provide a large selection of public AMIs. For more information, see Understand shared AMI usage in Amazon EC2. Developers can charge for their AMIs. For more information, see Paid AMIs in the AWS Marketplace for Amazon EC2 instances.\nRoot device type\nAll AMIs are categorized as either backed by Amazon EBS or backed by instance store.\nAmazon EBS-backed AMI \u2013 The root device for an instance launched from the AMI is an Amazon Elastic Block Store (Amazon EBS) volume created from an Amazon EBS snapshot. Supported for both Linux and Windows AMIs.\nAmazon instance store-backed AMI \u2013 The root device for an instance launched from the AMI is an instance store volume created from a template stored in Amazon S3. Supported for Linux AMIs only. Windows AMIs do not support instance store for the root device.\nFor more information, see Root volumes for your Amazon EC2 instances.\nThe following table summarizes the important differences when using the two types of AMIs.\nCharacteristic Amazon EBS-backed AMI Amazon instance store-backed AMI\nRoot device volume\nEBS volume\nInstance store volume\nBoot time for an instance\nUsually less than 1 minute\nUsually less than 5 minutes\nData persistence\nBy default, the root volume is deleted when the instance terminates.* Data on any other EBS volumes persists after instance termination by default.\nData on any instance store volumes persists only during the life of the instance.\nStopped state\nCan be in a stopped state. Even when the instance is stopped and not running, the root volume is persisted in Amazon EBS\nCannot be in a stopped state; instances are running or terminated\nModifications\nThe instance type, kernel, RAM disk, and user data can be changed while the instance is stopped.\nInstance attributes are fixed for the life of an instance.\nCharges\nYou're charged for instance usage, EBS volume usage, and storing your AMI as an EBS snapshot.\nYou're charged for instance usage and storing your AMI in Amazon S3.\nAMI creation/bundling\nUses a single command/call\nRequires installation and use of AMI tools\n* By default, EBS root volumes have the DeleteOnTermination flag set to true. For information about how to change this flag so that the volume persists after termination, see Keep an Amazon EBS root volume after an Amazon EC2 instance terminates.\n** Supported with io2 EBS Block Express only. For more information, see Provisioned IOPS SSD Block Express volumes in the Amazon EBS User Guide.\nVirtualization types\nAmazon Machine Images use one of two types of virtualization: paravirtual (PV) or hardware virtual machine (HVM). The main differences between PV and HVM AMIs are the way in which they boot and whether they can take advantage of special hardware extensions (CPU, network, and storage) for better performance. Windows AMIs are HVM AMIs.\nThe following table compares HVM and PV AMIs.\nCharacteristic HVM PV\nDescription HVM AMIs are presented with a fully virtualized set of hardware and boot by executing the master boot record of the root block device of your image. This virtualization type provides the ability to run an operating system directly on top of a virtual machine without any modification, as if it were run on the bare-metal hardware. The Amazon EC2 host system emulates some or all of the underlying hardware that is presented to the guest. PV AMIs boot with a special boot loader called PV-GRUB, which starts the boot cycle and then chain loads the kernel specified in the menu.lst file on your image. Paravirtual guests can run on host hardware that does not have explicit support for virtualization. For more information about PV-GRUB and its use in Amazon EC2, see User provided kernels.\nSupported instance types All current generation instance types support HVM AMIs. The following previous generation instance types support PV AMIs: C1, C3, M1, M3, M2, and T1. Current generation instance types do not support PV AMIs.\nSupport for hardware extensions\nHVM guests can take advantage of hardware extensions that provide fast access to the underlying hardware on the host system. They are required to use enhanced networking and GPU processing. To pass through instructions to specialized network and GPU devices, the OS must have access to the native hardware platform, and HVM virtualization provides this access. For more information, see Enhanced networking on Amazon EC2 instances.\nNo, they can't take advantage of special hardware extensions such as enhanced networking or GPU processing.\nHow to find Verify that the virtualization type of the AMI is set to hvm, using the console or the describe-images command. Verify that the virtualization type of the AMI is set to paravirtual, using the console or the describe-images command.\nPV on HVM\nParavirtual guests traditionally performed better with storage and network operations than HVM guests because they could leverage special drivers for I/O that avoided the overhead of emulating network and disk hardware, whereas HVM guests had to translate these instructions to emulated hardware. Now PV drivers are available for HVM guests, so operating systems that cannot be ported to run in a paravirtualized environment can still see performance advantages in storage and network I/O by using them. With these PV on HVM drivers, HVM guests can get the same, or better, performance than paravirtual guests."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/display-ami-root-device-type.html",
        "content": "The AMI that you use to launch an EC2 instance determines the type of the root volume. The root volume of an EC2 instance is either an EBS volume or an instance store volume. Nitro-based instances support only EBS root volumes. The only instance types that support instance store root volumes are C1, C3, D2, I2, M1, M2, M3, R3, and X1.\nTo determine the root device type of an AMI using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose AMIs, and select the AMI.\nOn the Details tab, check the value of Root device type as follows:\nebs \u2013 This is an EBS-backed AMI.\ninstance store \u2013 This is an an instance store-backed AMI.\nTo determine the root device type of an AMI using the command line\nYou can use one of the following commands.\ndescribe-images (AWS CLI)\nGet-EC2Image (AWS Tools for Windows PowerShell)"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-ami.html",
        "content": "An AMI includes the components and applications, such as the operating system and type of root volume, required to launch an instance. To launch an instance, you must find an AMI that meets your needs.\nWhen selecting an AMI, consider the following requirements you might have for the instances that you want to launch:\nThe AWS Region of the AMI as AMI IDs are unique to each Region.\nThe operating system (for example, Linux or Windows).\nThe architecture (for example, 32-bit, 64-bit, or 64-bit ARM).\nThe root device type (for example, Amazon EBS or instance store).\nThe provider (for example, Amazon Web Services).\nAdditional software (for example, SQL Server).\nTo find an Amazon Linux 2023 AMI, see AL2023 on Amazon EC2 in the Amazon Linux 2023 User Guide.\nTo find an Ubuntu AMI, see Amazon EC2 AMI Locator on the Canonical Ubuntu website.\nTo find a RHEL AMI, see Red Hat Enterprise Linux Images (AMI) Available on Amazon Web Services (AWS) on the Red Hat website.\nThere are various ways to find an AMI that meets your needs. You can find an AMI using the Amazon EC2 console, AWS CLI, AWS Tools for Windows PowerShell, and AWS Systems Manager.\nFind an AMI using the Amazon EC2 console\nFind an AMI using the AWS CLI\nFind an AMI using the AWS Tools for Windows PowerShell\nFind an AMI using a Systems Manager parameter\nFind the latest AMIs using a Systems Manager public parameter"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/paid-amis.html",
        "content": "A paid AMI is an AMI that is listed for sale in the AWS Marketplace. The AWS Marketplace is an online store where you can buy software that runs on AWS, including AMIs that you can use to launch your EC2 instance. The AWS Marketplace AMIs are organized into categories, such as Developer Tools, to enable you to find products to suit your requirements. For more information about AWS Marketplace, see the AWS Marketplace website.\nYou can purchase AMIs in the AWS Marketplace from a third party, including AMIs that come with service contracts from organizations such as Red Hat. You can also create an AMI and sell it in the AWS Marketplace to other Amazon EC2 users. Building a safe, secure, usable AMI for public consumption is a fairly straightforward process, if you follow a few simple guidelines. For information about how to create and use shared AMIs, see Understand shared AMI usage in Amazon EC2.\nLaunching an instance from a paid AMI is the same as launching an instance from any other AMI. No additional parameters are required. The instance is charged according to the rates set by the owner of the AMI, as well as the standard usage fees for the related web services, for example, the hourly rate for running an m5.small instance type in Amazon EC2. Additional taxes might also apply. The owner of the paid AMI can confirm whether a specific instance was launched using that paid AMI.\nImportant\nAmazon DevPay is no longer accepting new sellers or products. AWS Marketplace is now the single, unified e-commerce platform for selling software and services through AWS. For information about how to deploy and sell software from AWS Marketplace, see Selling in AWS Marketplace. AWS Marketplace supports AMIs backed by Amazon EBS.\nContents\nSell your AMI in the AWS Marketplace\nFind a paid AMI\nPurchase a paid AMI in the AWS Marketplace\nRetrieve the AWS Marketplace product code from your instance\nUse paid support for supported AWS Marketplace offerings\nBills for paid and supported AMIs\nManage your AWS Marketplace subscriptions\nSell your AMI in the AWS Marketplace\nYou can sell your AMI using AWS Marketplace. AWS Marketplace offers an organized shopping experience. Additionally, AWS Marketplace also supports AWS features such as Amazon EBS-backed AMIs, Reserved Instances, and Spot Instances.\nFor information about how to sell your AMI on the AWS Marketplace, see Selling in AWS Marketplace.\nBills for paid and supported AMIs\nAt the end of each month, you receive an email with the amount your credit card has been charged for using any paid or supported AMIs during the month. This bill is separate from your regular Amazon EC2 bill. For more information, see Paying for products in the AWS Marketplace Buyer Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-paid-amis-finding-paid-ami.html",
        "content": "There are several ways that you can find AMIs that are available for you to purchase. For example, you can use AWS Marketplace, the Amazon EC2 console, or the command line. Alternatively, a developer might let you know about a paid AMI themselves.\nFind a paid AMI using the console\nFind a paid AMI using AWS Marketplace\nFind a paid AMI using the AWS CLI\nFind a paid AMI using the Tools for Windows PowerShell"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-paid-amis-purchasing-paid-ami.html",
        "content": "You must sign up for (purchase) a paid AMI before you can launch an Amazon EC2 instance using the AMI.\nTypically a seller of a paid AMI presents you with information about the AMI, including its price and a link where you can buy it. When you click the link, you're first asked to log into AWS, and then you can purchase the AMI.\nPurchase a paid AMI using the console\nYou can purchase a paid AMI by using the Amazon EC2 launch wizard. For more information, see Launch an Amazon EC2 instance from an AWS Marketplace AMI.\nSubscribe to a product using AWS Marketplace\nTo use the AWS Marketplace, you must have an AWS account. To launch instances from AWS Marketplace products, you must be signed up to use the Amazon EC2 service, and you must be subscribed to the product from which to launch the instance. You can use one of the following methods to subscribe to products in the AWS Marketplace:\nAWS Marketplace website: You can launch preconfigured software quickly with the 1-Click deployment feature. For more information, see AMI-based products in AWS Marketplace.\nAmazon EC2 launch wizard: You can search for an AMI and launch an instance directly from the wizard. For more information, see Launch an Amazon EC2 instance from an AWS Marketplace AMI."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/get-product-code.html",
        "content": "You can retrieve the AWS Marketplace product code for your instance using its instance metadata. If the instance has a product code, Amazon EC2 returns it. For more information about retrieving metadata, see Access instance metadata for an EC2 instance.\nTo retrieve a product code, use the command for your instance's operating system.\nLinux\nWindows"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-paid-amis-support.html",
        "content": "Amazon EC2 also enables developers to offer support for software (or derived AMIs). Developers can create support products that you can sign up to use. During sign-up for the support product, the developer gives you a product code, which you must then associate with your own AMI. This enables the developer to confirm that your instance is eligible for support. It also ensures that when you run instances of the product, you are charged according to the terms for the product specified by the developer.\nImportant\nYou can't use a support product with Reserved Instances. You always pay the price that's specified by the seller of the support product.\nTo associate a product code with your AMI, use one of the following commands, where ami_id is the ID of the AMI and product_code is the product code:\nmodify-image-attribute (AWS CLI)\naws ec2 modify-image-attribute --image-id ami_id --product-codes \"product_code\"\nEdit-EC2ImageAttribute (AWS Tools for Windows PowerShell)\nPS C:\\> Edit-EC2ImageAttribute -ImageId ami_id -ProductCode product_code\nAfter you set the product code attribute, it cannot be changed or removed."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/marketplace-manage-subscriptions.html",
        "content": "On the AWS Marketplace website, you can check your subscription details, view the vendor's usage instructions, manage your subscriptions, and more.\nTo check your subscription details\nLog in to the AWS Marketplace.\nChoose Your Marketplace Account.\nChoose Manage your software subscriptions.\nAll your current subscriptions are listed. Choose Usage Instructions to view specific instructions for using the product, for example, a username for connecting to your running instance.\nTo cancel an AWS Marketplace subscription\nEnsure that you have terminated any instances running from the subscription.\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance, and then choose Instance state, Terminate (delete) instance.\nChoose Terminate (delete) when prompted for confirmation.\nLog in to the AWS Marketplace, and choose Your Marketplace Account, then Manage your software subscriptions.\nChoose Cancel subscription. You are prompted to confirm your cancellation.\nNote\nAfter you've canceled your subscription, you are no longer able to launch any instances from that AMI. To use that AMI again, you need to resubscribe to it, either on the AWS Marketplace website, or through the launch wizard in the Amazon EC2 console."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-lifecycle.html",
        "content": "An Amazon Machine Image (AMI) is an image that provides the software that is required to set up and boot an instance. You must specify an AMI when you launch an instance.\nAmazon provides AMIs that you can use to launch your instances, or you can create your own AMIs. For example, you can launch an instance from an existing AMI, customize the instance (for example, install software and configure operating system settings), and then save this updated environment as a new AMI. Any instance customizations are saved to the AMI, so that the instances that you launch from your new AMI include these customizations.\nYou can use an AMI only in the AWS Region in which it was created. If you need to launch instances with the same configuration in multiple Regions, you can create an AMI in one Region and then copy your AMI to additional Regions.\nTo prevent an instance from being used temporarily, you can disable the AMI. After you disable an AMI, you can't use it to launch new instances. After you enable the AMI, you can use it to launch instances again. Note that deregistering an AMI does not affect the instances that you already launched from the AMI.\nWhen you no longer require an AMI, you can deregister it. After you deregister an AMI, you can't use it to launch new instances. Note that deregistering an AMI does not affect the instances that you already launched from the AMI.\nYou can use Amazon Data Lifecycle Manager to automate the creation, retention, copy, deprecation, and deregistration of Amazon EBS-backed AMIs and their backing snapshots. For more information, see Amazon Data Lifecycle Manager.\nContents\nCreate an AMI\nCreate an instance store-backed AMI\nCreate an AMI using Windows Sysprep\nCopy an AMI\nStore and restore an AMI\nIdentify the source AMI\nCheck when an AMI was last used\nDeprecate an AMI\nDisable an AMI\nDeregister an AMI"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html",
        "content": "You can create your own Amazon EBS-backed AMI from an Amazon EC2 instance or from a snapshot of the root device of an Amazon EC2 instance.\nTo create an Amazon EBS-backed AMI from an instance, start by launching an instance using an existing Amazon EBS-backed AMI. This AMI can be one you obtained from the AWS Marketplace, created using VM Import/Export, or any other AMI that you can access. After customizing the instance to meet your specific requirements, create and register a new AMI. You can then use the new AMI to launch new instances with your customizations.\nThe procedures described below work for Amazon EC2 instances backed by encrypted Amazon Elastic Block Store (Amazon EBS) volumes (including the root volume) as well as for unencrypted volumes.\nThe AMI creation process is different for instance store-backed AMIs. For more information, see Create an instance store-backed AMI.\nContents\nOverview of AMI creation from an instance\nCreate an AMI from an instance\nCreate an AMI from a snapshot\nOverview of AMI creation from an instance\nThe following diagram summarizes the process for creating an Amazon EBS-backed AMI from a running EC2 instance: Start with an existing AMI, launch an instance, customize it, create a new AMI from it, and finally launch an instance of your new AMI. The numbers in the diagram match the numbers in the description that follows.\n1 \u2013 AMI #1: Start with an existing AMI\nFind an existing AMI that is similar to the AMI that you'd like to create. This can be an AMI you have obtained from the AWS Marketplace, an AMI that you have created using VM Import/Export, or any other AMI that you can access. You'll customize this AMI for your needs.\nIn the diagram, EBS root volume snapshot #1 indicates that the AMI is an Amazon EBS-backed AMI and that information about the root volume is stored in this snapshot.\n2 \u2013 Launch instance from existing AMI\nThe way to configure an AMI is to launch an instance from the AMI on which you'd like to base your new AMI, and then customize the instance (indicated at 3 in the diagram). Then, you'll create a new AMI that includes the customizations (indicated at 4 in the diagram).\n3 \u2013 EC2 instance #1: Customize the instance\nConnect to your instance and customize it for your needs. Your new AMI will include these customizations.\nYou can perform any of the following actions on your instance to customize it:\nInstall software and applications\nCopy data\nReduce start time by deleting temporary files and defragmenting your hard drive\nAttach additional EBS volumes\n4 \u2013 Create image\nWhen you create an AMI from an instance, Amazon EC2 powers down the instance before creating the AMI to ensure that everything on the instance is stopped and in a consistent state during the creation process. If you're confident that your instance is in a consistent state appropriate for AMI creation, you can tell Amazon EC2 not to power down and reboot the instance. Some file systems, such as XFS, can freeze and unfreeze activity, making it safe to create the image without rebooting the instance.\nDuring the AMI-creation process, Amazon EC2 creates snapshots of your instance's root volume and any other EBS volumes attached to your instance. You're charged for the snapshots until you deregister the AMI and delete the snapshots. If any volumes attached to the instance are encrypted, the new AMI only launches successfully on instances that support Amazon EBS encryption.\nDepending on the size of the volumes, it can take several minutes for the AMI-creation process to complete (sometimes up to 24 hours). You might find it more efficient to create snapshots of your volumes before creating your AMI. This way, only small, incremental snapshots need to be created when the AMI is created, and the process completes more quickly (the total time for snapshot creation remains the same).\n5 \u2013 AMI #2: New AMI\nAfter the process completes, you have a new AMI and snapshot (snapshot #2) created from the root volume of the instance. If you added instance-store volumes or EBS volumes to the instance, in addition to the root device volume, the block device mapping for the new AMI contains information for these volumes.\nAmazon EC2 automatically registers the AMI for you.\n6 \u2013 Launch instance from new AMI\nYou can use the new AMI to launch an instance.\n7 \u2013 EC2 instance #2: New instance\nWhen you launch an instance using the new AMI, Amazon EC2 creates a new EBS volume for the instance's root volume using the snapshot. If you added instance-store volumes or EBS volumes when you customized the instance, the block device mapping for the new AMI contains information for these volumes, and the block device mappings for instances that you launch from the new AMI automatically contain information for these volumes. The instance-store volumes specified in the block device mapping for the new instance are new and don't contain any data from the instance store volumes of the instance you used to create the AMI. The data on EBS volumes persists. For more information, see Block device mappings for volumes on Amazon EC2 instances.\nWhen you create a new instance from an EBS-backed AMI, you should initialize both its root volume and any additional EBS storage before putting it into production. For more information, see Initialize Amazon EBS volumes in the Amazon EBS User Guide.\nCreate an AMI from an instance\nIf you have an existing instance, you can create an AMI from this instance.\nConsole\nCommand line\nTo create an AMI\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance from which to create the AMI, and then choose Actions, Image and templates, Create image.\nTip\nIf this option is disabled, your instance isn't an Amazon EBS-backed instance.\nOn the Create image page, specify the following information:\nFor Image name, enter a unique name for the image, up to 127 characters.\nFor Image description, enter an optional description of the image, up to 255 characters.\nFor Reboot instance, either keep the checkbox selected (the default), or clear it.\nIf Reboot instance is selected, when Amazon EC2 creates the new AMI, it reboots the instance so that it can take snapshots of the attached volumes while data is at rest, in order to ensure a consistent state.\nIf Reboot instance is cleared, when Amazon EC2 creates the new AMI, it does not shut down and reboot the instance.\nWarning\nIf you clear Reboot instance, we can't guarantee the file system integrity of the created image.\nInstance volumes \u2013 You can modify the root volume, and add additional Amazon EBS and instance store volumes, as follows:\nThe root volume is defined in the first row.\nTo change the size of the root volume, for Size, enter the required value.\nIf you select Delete on termination, when you terminate the instance created from this AMI, the EBS volume is deleted. If you clear Delete on termination, when you terminate the instance, the EBS volume is not deleted. For more information, see Preserve data when an instance is terminated.\nTo add an EBS volume, choose Add volume (which adds a new row). For Storage type, choose EBS, and fill in the fields in the row. When you launch an instance from your new AMI, additional volumes are automatically attached to the instance. Empty volumes must be formatted and mounted. Volumes based on a snapshot must be mounted.\nTo add an instance store volume, see Add instance store volumes to an Amazon EC2 AMI. When you launch an instance from your new AMI, additional volumes are automatically initialized and mounted. These volumes do not contain data from the instance store volumes of the running instance on which you based your AMI.\nTags \u2013 You can tag the AMI and the snapshots with the same tags, or you can tag them with different tags.\nTo tag the AMI and the snapshots with the same tags, choose Tag image and snapshots together. The same tags are applied to the AMI and every snapshot that is created.\nTo tag the AMI and the snapshots with different tags, choose Tag image and snapshots separately. Different tags are applied to the AMI and the snapshots that are created. However, all the snapshots get the same tags; you can't tag each snapshot with a different tag.\nTo add a tag, choose Add tag, and enter the key and value for the tag. Repeat for each tag.\nWhen you're ready to create your AMI, choose Create image.\nTo view the status of your AMI while it is being created:\nIn the navigation pane, choose AMIs.\nSet the filter to Owned by me, and find your AMI in the list.\nInitially, the status is pending but should change to available after a few minutes.\n(Optional) To view the snapshot that was created for the new AMI:\nNote the ID of your AMI that you located in the previous step.\nIn the navigation pane, choose Snapshots.\nSet the filter to Owned by me, and then find the snapshot with the new AMI ID in the Description column.\nWhen you launch an instance from this AMI, Amazon EC2 uses this snapshot to create its root device volume.\nCreate an AMI from a snapshot\nIf you have a snapshot of the root device volume of an instance, you can create an AMI from this snapshot.\nNote\nIn most cases, AMIs for Windows, Red Hat, SUSE, and SQL Server require correct licensing information to be present on the AMI. For more information, see Understand AMI billing information. When creating an AMI from a snapshot, the RegisterImage operation derives the correct billing information from the snapshot's metadata, but this requires the appropriate metadata to be present. To verify if the correct billing information was applied, check the Platform details field on the new AMI. If the field is empty or doesn't match the expected operating system code (for example, Windows, Red Hat, SUSE, or SQL), the AMI creation was unsuccessful, and you should discard the AMI and follow the instructions in Create an AMI from an instance.\nConsole\nCommand line\nTo create an AMI from a snapshot\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Snapshots.\nSelect the snapshot from which to create the AMI, and then choose Actions, Create image from snapshot.\nOn the Create image from snapshot page, specify the following information:\nFor Image name, enter a descriptive name for the image.\nFor Description, enter a brief description for the image.\nFor Architecture, choose the image architecture. Choose i386 for 32-bit, x86_64 for 64-bit, arm64 for 64-bit ARM, or x86_64 for 64-bit macOS.\nFor Root device name, enter the device name to use for the root device volume. For more information, see Device names for volumes on Amazon EC2 instances.\nFor Virtualization type, choose the virtualization type to be used by instances launched from this AMI. For more information, see Virtualization types.\n(For paravirtual virtualization only) For Kernel ID, select the operating system kernel for the image. If you're using a snapshot of the root device volume of an instance, select the same kernel ID as the original instance. If you're unsure, use the default kernel.\n(For paravirtual virtualization only) For RAM disk ID, select the RAM disk for the image. If you select a specific kernel, you may need to select a specific RAM disk with the drivers to support it.\nFor Boot mode, choose the boot mode for the image, or choose Use default so that when an instance is launched with this AMI, it boots with the boot mode supported by the instance type. For more information, see Set the boot mode of an Amazon EC2 AMI.\n(Optional) Under Block device mappings, customize the root volume and add additional data volumes.\nFor each volume, you can specify the size, type, performance characteristics, the behavior of delete on termination, and encryption status. For the root volume, the size can't be smaller than the size of the snapshot. For volume type, General Purpose SSD gp3 is the default selection.\n(Optional) Under Tags, you can add one or more tags to the new AMI. To add a tag, choose Add tag, and enter the key and value for the tag. Repeat for each tag.\nWhen you're ready to create your AMI, choose Create image.\n(Windows, Red Hat, SUSE, and SQL Server only) To verify if the correct billing information was applied, check the Platform details field on the new AMI. If the field is empty or doesn't match the expected operating system code (for example, Windows or Red Hat), the AMI creation was unsuccessful, and you should discard the AMI and follow the instructions in Create an AMI from an instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-instance-store.html",
        "content": "The AMI that you specify when you launch your instance determines the type of root device volume.\nTo create an instance store-backed Linux AMI, start from an instance that you've launched from an existing instance store-backed Linux AMI. After you've customized the instance to suit your needs, bundle the volume and register a new AMI, which you can use to launch new instances with these customizations.\nYou can't create an instance-store backed Windows AMI because Windows AMIs don't support instance store for the root device.\nImportant\nOnly the following instance types support an instance store volume as the root device and require an instance store-backed AMI: C1, C3, D2, I2, M1, M2, M3, R3, and X1.\nThe AMI creation process is different for Amazon EBS-backed AMIs. For more information, see Create an Amazon EBS-backed AMI.\nContents\nOverview of AMI creation\nPrerequisites\nCreate an AMI from an Amazon Linux instance\nSet up the Amazon EC2 AMI tools\nAmazon EC2 AMI tools reference\nConvert your instance store-backed AMI to an EBS-backed AMI\nOverview of AMI creation\nThe following diagram summarizes the process of creating an AMI from an instance store-backed instance.\nFirst, launch an instance from an AMI that's similar to the AMI that you'd like to create. You can connect to your instance and customize it. When the instance is set up the way you want it, you can bundle it. It takes several minutes for the bundling process to complete. After the process completes, you have a bundle, which consists of an image manifest (image.manifest.xml) and files (image.part.xx) that contain a template for the root volume. Next you upload the bundle to your Amazon S3 bucket and then register your AMI.\nNote\nTo upload objects to an S3 bucket for your instance store-backed Linux AMI, ACLs must be enabled for the bucket. Otherwise, Amazon EC2 will not be able to set ACLs on the objects to upload. If your destination bucket uses the bucket owner enforced setting for S3 Object Ownership, this won\u2019t work because ACLs are disabled. For more information, see Controlling ownership of uploaded objects using S3 Object Ownership.\nWhen you launch an instance using the new AMI, we create the root volume for the instance using the bundle that you uploaded to Amazon S3. The storage space used by the bundle in Amazon S3 incurs charges to your account until you delete it. For more information, see Deregister an Amazon EC2 AMI.\nIf you add instance store volumes to your instance in addition to the root device volume, the block device mapping for the new AMI contains information for these volumes, and the block device mappings for instances that you launch from the new AMI automatically contain information for these volumes. For more information, see Block device mappings for volumes on Amazon EC2 instances.\nPrerequisites\nBefore you can create an AMI, you must complete the following tasks:\nInstall the AMI tools. For more information, see Set up the Amazon EC2 AMI tools.\nInstall the AWS CLI. For more information, see Getting started with the AWS CLI.\nEnsure that you have an S3 bucket for the bundle, and that your bucket has ACLs enabled. For more information on configuring ACLs, see Configuring ACLs.\nTo create an S3 bucket using the AWS Management Console, open the Amazon S3 console at https://console.aws.amazon.com/s3/ and choose Create Bucket.\nTo create an S3 bucket with the AWS CLI, you can use the mb command. If your installed version of the AMI tools is 1.5.18 or later, you can also use the ec2-upload-bundle command to create the S3 bucket. For more information, see ec2-upload-bundle.\nEnsure that the files in your bundle aren't encrypted in the S3 bucket. If you require encryption for your AMI, you can use an EBS-backed AMI instead. For more information, see Use encryption with EBS-backed AMIs.\nEnsure that you have your AWS account ID. For more information, see View AWS account identifiers in the AWS Account Management Reference Guide.\nEnsure that you have credentials to use the AWS CLI. For more information, see Authentication and access credentials for the AWS CLI in the AWS Command Line Interface User Guide.\nEnsure that you have an X.509 certificate and corresponding private key.\nIf you need to create an X.509 certificate, see Manage signing certificates. The X.509 certificate and private key are used to encrypt and decrypt your AMI.\n[China (Beijing)] Use the $EC2_AMITOOL_HOME/etc/ec2/amitools/cert-ec2-cn-north-1.pem certificate.\n[AWS GovCloud (US-West)] Use the $EC2_AMITOOL_HOME/etc/ec2/amitools/cert-ec2-gov.pem certificate.\nConnect to your instance and customize it. For example, you can install software and applications, copy data, delete temporary files, and modify the Linux configuration.\nCreate an AMI from an Amazon Linux instance\nThe following procedures describe how to create an AMI from an instance store-backed instance running Amazon Linux 1. They might not work for instances running other Linux distributions.\nTo prepare to use the AMI tools (HVM instances only)\nThe AMI tools require GRUB Legacy to boot properly. Use the following command to install GRUB:\n[ec2-user ~]$ sudo yum install -y grub\nInstall the partition management packages with the following command:\n[ec2-user ~]$ sudo yum install -y gdisk kpartx parted\nTo create an AMI from an instance store-backed Amazon Linux instance\nThis procedure assumes that you have satisfied the prerequisites in Prerequisites.\nIn the following commands, replace each user input placeholder with your own information.\nUpload your credentials to your instance. We use these credentials to ensure that only you and Amazon EC2 can access your AMI.\nCreate a temporary directory on your instance for your credentials as follows:\n[ec2-user ~]$ mkdir /tmp/cert\nThis enables you to exclude your credentials from the created image.\nCopy your X.509 certificate and corresponding private key from your computer to the /tmp/cert directory on your instance using a secure copy tool such as scp. The -i my-private-key.pem option in the following scp command is the private key you use to connect to your instance with SSH, not the X.509 private key. For example:\nyou@your_computer:~ $ scp -i my-private-key.pem /path/to/pk-HKZYKTAIG2ECMXYIBH3HXV4ZBEXAMPLE.pem /path/to/cert-HKZYKTAIG2ECMXYIBH3HXV4ZBEXAMPLE.pem ec2-user@ec2-203-0-113-25.compute-1.amazonaws.com:/tmp/cert/\npk-HKZYKTAIG2ECMXYIBH3HXV4ZBEXAMPLE.pem  100%  717     0.7KB/s   00:00\ncert-HKZYKTAIG2ECMXYIBH3HXV4ZBEXAMPLE.pem  100%  685     0.7KB/s   00:00\nAlternatively, because these are plain text files, you can open the certificate and key in a text editor and copy their contents into new files in /tmp/cert.\nPrepare the bundle to upload to Amazon S3 by running the ec2-bundle-vol command from inside your instance. Be sure to specify the -e option to exclude the directory where your credentials are stored. By default, the bundle process excludes files that might contain sensitive information. These files include *.sw, *.swo, *.swp, *.pem, *.priv, *id_rsa*, *id_dsa* *.gpg, *.jks, */.ssh/authorized_keys, and */.bash_history. To include all of these files, use the --no-filter option. To include some of these files, use the --include option.\nImportant\nBy default, the AMI bundling process creates a compressed, encrypted collection of files in the /tmp directory that represents your root volume. If you do not have enough free disk space in /tmp to store the bundle, you need to specify a different location for the bundle to be stored with the -d /path/to/bundle/storage option. Some instances have ephemeral storage mounted at /mnt or /media/ephemeral0 that you can use, or you can also create, attach, and mount a new Amazon EBS) volume to store the bundle. For more information, see Create an Amazon EBS volume in the Amazon EBS User Guide.\nYou must run the ec2-bundle-vol command as root. For most commands, you can use sudo to gain elevated permissions, but in this case, you should run sudo -E su to keep your environment variables.\n[ec2-user ~]$ sudo -E su\nNote that bash prompt now identifies you as the root user, and that the dollar sign has been replaced by a hash tag, signalling that you are in a root shell:\n[root ec2-user]#\nTo create the AMI bundle, run the ec2-bundle-vol command as follows:\n[root ec2-user]# ec2-bundle-vol -k /tmp/cert/pk-HKZYKTAIG2ECMXYIBH3HXV4ZBEXAMPLE.pem -c /tmp/cert/cert-HKZYKTAIG2ECMXYIBH3HXV4ZBEXAMPLE.pem -u 123456789012 -r x86_64 -e /tmp/cert --partition gpt\nNote\nFor the China (Beijing) and AWS GovCloud (US-West) Regions, use the --ec2cert parameter and specify the certificates as per the prerequisites.\nIt can take a few minutes to create the image. When this command completes, your /tmp (or non-default) directory contains the bundle (image.manifest.xml, plus multiple image.part.xx files).\nExit from the root shell.\n[root ec2-user]# exit\n(Optional) To add more instance store volumes, edit the block device mappings in the image.manifest.xml file for your AMI. For more information, see Block device mappings for volumes on Amazon EC2 instances.\nCreate a backup of your image.manifest.xml file.\n[ec2-user ~]$ sudo cp /tmp/image.manifest.xml /tmp/image.manifest.xml.bak\nReformat the image.manifest.xml file so that it is easier to read and edit.\n[ec2-user ~]$ sudo xmllint --format /tmp/image.manifest.xml.bak > /tmp/image.manifest.xml\nEdit the block device mappings in image.manifest.xml with a text editor. The example below shows a new entry for the ephemeral1 instance store volume.\nNote\nFor a list of excluded files, see ec2-bundle-vol.\n    <block_device_mapping>\n      <mapping>\n        <virtual>ami</virtual>\n        <device>sda</device>\n      </mapping>\n      <mapping>\n        <virtual>ephemeral0</virtual>\n        <device>sdb</device>\n      </mapping>\n      <mapping>\n        <virtual>ephemeral1</virtual>\n        <device>sdc</device>\n      </mapping>\n      <mapping>\n        <virtual>root</virtual>\n        <device>/dev/sda1</device>\n      </mapping>\n    </block_device_mapping>\nSave the image.manifest.xml file and exit your text editor.\nTo upload your bundle to Amazon S3, run the ec2-upload-bundle command as follows.\n[ec2-user ~]$ ec2-upload-bundle -b amzn-s3-demo-bucket/bundle_folder/bundle_name -m /tmp/image.manifest.xml -a your_access_key_id -s your_secret_access_key\nImportant\nTo register your AMI in a Region other than US East (N. Virginia), you must specify both the target Region with the --region option and a bucket path that already exists in the target Region or a unique bucket path that can be created in the target Region.\n(Optional) After the bundle is uploaded to Amazon S3, you can remove the bundle from the /tmp directory on the instance using the following rm command:\n[ec2-user ~]$ sudo rm /tmp/image.manifest.xml /tmp/image.part.* /tmp/image\nImportant\nIf you specified a path with the -d /path/to/bundle/storage option in Step 2, use that path instead of /tmp.\nTo register your AMI, run the register-image command as follows.\n[ec2-user ~]$ aws ec2 register-image --image-location amzn-s3-demo-bucket/bundle_folder/bundle_name/image.manifest.xml --name AMI_name --virtualization-type hvm\nImportant\nIf you previously specified a Region for the ec2-upload-bundle command, specify that Region again for this command."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/set-up-ami-tools.html",
        "content": "You can use the AMI tools to create and manage instance store-backed Linux AMIs. To use the tools, you must install them on your Linux instance. The AMI tools are available as both an RPM and as a .zip file for Linux distributions that don't support RPM.\nTo set up the AMI tools using the RPM\nInstall Ruby using the package manager for your Linux distribution, such as yum. For example:\n[ec2-user ~]$ sudo yum install -y ruby\nDownload the RPM file using a tool such as wget or curl. For example:\n[ec2-user ~]$ wget https://s3.amazonaws.com/ec2-downloads/ec2-ami-tools.noarch.rpm\nVerify the RPM file's signature using the following command:\n[ec2-user ~]$ rpm -K ec2-ami-tools.noarch.rpm\nThe command above should indicate that the file's SHA1 and MD5 hashes are OK. If the command indicates that the hashes are NOT OK, use the following command to view the file's Header SHA1 and MD5 hashes:\n[ec2-user ~]$ rpm -Kv ec2-ami-tools.noarch.rpm\nThen, compare your file's Header SHA1 and MD5 hashes with the following verified AMI tools hashes to confirm the file's authenticity:\nHeader SHA1: a1f662d6f25f69871104e6a62187fa4df508f880\nMD5: 9faff05258064e2f7909b66142de6782\nIf your file's Header SHA1 and MD5 hashes match the verified AMI tools hashes, continue to the next step.\nInstall the RPM using the following command:\n[ec2-user ~]$ sudo yum install ec2-ami-tools.noarch.rpm\nVerify your AMI tools installation using the ec2-ami-tools-version command.\n[ec2-user ~]$ ec2-ami-tools-version\nNote\nIf you receive a load error such as \"cannot load such file -- ec2/amitools/version (LoadError)\", complete the next step to add the location of your AMI tools installation to your RUBYLIB path.\n(Optional) If you received an error in the previous step, add the location of your AMI tools installation to your RUBYLIB path.\nRun the following command to determine the paths to add.\n[ec2-user ~]$ rpm -qil ec2-ami-tools | grep ec2/amitools/version\n/usr/lib/ruby/site_ruby/ec2/amitools/version.rb\n/usr/lib64/ruby/site_ruby/ec2/amitools/version.rb\nIn the above example, the missing file from the previous load error is located at /usr/lib/ruby/site_ruby and /usr/lib64/ruby/site_ruby.\nAdd the locations from the previous step to your RUBYLIB path.\n[ec2-user ~]$ export RUBYLIB=$RUBYLIB:/usr/lib/ruby/site_ruby:/usr/lib64/ruby/site_ruby\nVerify your AMI tools installation using the ec2-ami-tools-version command.\n[ec2-user ~]$ ec2-ami-tools-version\nTo set up the AMI tools using the .zip file\nInstall Ruby and unzip using the package manager for your Linux distribution, such as apt-get. For example:\n[ec2-user ~]$ sudo apt-get update -y && sudo apt-get install -y ruby unzip\nDownload the .zip file using a tool such as wget or curl. For example:\n[ec2-user ~]$ wget https://s3.amazonaws.com/ec2-downloads/ec2-ami-tools.zip\nUnzip the files into a suitable installation directory, such as /usr/local/ec2.\n[ec2-user ~]$ sudo mkdir -p /usr/local/ec2\n$ sudo unzip ec2-ami-tools.zip -d /usr/local/ec2\nNotice that the .zip file contains a folder ec2-ami-tools-x.x.x, where x.x.x is the version number of the tools (for example, ec2-ami-tools-1.5.7).\nSet the EC2_AMITOOL_HOME environment variable to the installation directory for the tools. For example:\n[ec2-user ~]$ export EC2_AMITOOL_HOME=/usr/local/ec2/ec2-ami-tools-x.x.x\nAdd the tools to your PATH environment variable. For example:\n[ec2-user ~]$ export PATH=$EC2_AMITOOL_HOME/bin:$PATH\nYou can verify your AMI tools installation using the ec2-ami-tools-version command.\n[ec2-user ~]$ ec2-ami-tools-version\nManage signing certificates\nCertain commands in the AMI tools require a signing certificate (also known as X.509 certificate). You must create the certificate and then upload it to AWS. For example, you can use a third-party tool such as OpenSSL to create the certificate.\nTo create a signing certificate\nInstall and configure OpenSSL.\nCreate a private key using the openssl genrsa command and save the output to a .pem file. We recommend that you create a 2048- or 4096-bit RSA key.\nopenssl genrsa 2048 > private-key.pem\nGenerate a certificate using the openssl req command.\nopenssl req -new -x509 -nodes -sha256 -days 365 -key private-key.pem -outform PEM -out certificate.pem\nTo upload the certificate to AWS, use the upload-signing-certificate command.\naws iam upload-signing-certificate --user-name user-name --certificate-body file://path/to/certificate.pem\nTo list the certificates for a user, use the list-signing-certificates command:\naws iam list-signing-certificates --user-name user-name\nTo disable or re-enable a signing certificate for a user, use the update-signing-certificate command. The following command disables the certificate:\naws iam update-signing-certificate --certificate-id OFHPLP4ZULTHYPMSYEX7O4BEXAMPLE --status Inactive --user-name user-name\nTo delete a certificate, use the delete-signing-certificate command:\naws iam delete-signing-certificate --user-name user-name --certificate-id OFHPLP4ZULTHYPMSYEX7O4BEXAMPLE"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-tools-commands.html",
        "content": "You can use the AMI tools commands to create and manage instance store-backed Linux AMIs. To set up the tools, see Set up the Amazon EC2 AMI tools.\nFor information about your access keys, see Managing access keys for IAM users in the IAM User Guide.\nCommands\nec2-ami-tools-version\nec2-bundle-image\nec2-bundle-vol\nec2-delete-bundle\nec2-download-bundle\nec2-migrate-manifest\nec2-unbundle\nec2-upload-bundle\nCommon options for AMI tools\nec2-ami-tools-version\nDescription\nDescribes the version of the AMI tools.\nSyntax\nec2-ami-tools-version\nOutput\nThe version information.\nExample\nThis example command displays the version information for the AMI tools that you're using.\n[ec2-user ~]$ ec2-ami-tools-version\n1.5.2 20071010\nec2-bundle-image\nDescription\nCreates an instance store-backed Linux AMI from an operating system image created in a loopback file.\nSyntax\nec2-bundle-image -c path -k path -u account -i path [-d path] [--ec2cert path] [-r architecture] [--productcodes code1,code2,...] [-B mapping] [-p prefix]\nOptions\n-c, --cert path\nThe user's PEM encoded RSA public key certificate file.\nRequired: Yes\n-k, --privatekey path\nThe path to a PEM-encoded RSA key file. You'll need to specify this key to unbundle this bundle, so keep it in a safe place. Note that the key doesn't have to be registered to your AWS account.\nRequired: Yes\n-u, --user account\nThe user's AWS account ID, without dashes.\nRequired: Yes\n-i, --image path\nThe path to the image to bundle.\nRequired: Yes\n-d, --destination path\nThe directory in which to create the bundle.\nDefault: /tmp\nRequired: No\n--ec2cert path\nThe path to the Amazon EC2 X.509 public key certificate used to encrypt the image manifest.\nThe us-gov-west-1 and cn-north-1 Regions use a non-default public key certificate and the path to that certificate must be specified with this option. The path to the certificate varies based on the installation method of the AMI tools. For Amazon Linux, the certificates are located at /opt/aws/amitools/ec2/etc/ec2/amitools/. If you installed the AMI tools from the RPM or ZIP file in Set up the Amazon EC2 AMI tools, the certificates are located at $EC2_AMITOOL_HOME/etc/ec2/amitools/.\nRequired: Only for the us-gov-west-1 and cn-north-1 Regions.\n-r, --arch architecture\nImage architecture. If you don't provide the architecture on the command line, you'll be prompted for it when bundling starts.\nValid values: i386 | x86_64\nRequired: No\n--productcodes code1,code2,...\nProduct codes to attach to the image at registration time, separated by commas.\nRequired: No\n-B, --block-device-mapping mapping\nDefines how block devices are exposed to an instance of this AMI if its instance type supports the specified device.\nSpecify a comma-separated list of key-value pairs, where each key is a virtual name and each value is the corresponding device name. Virtual names include the following:\nami\u2014The root file system device, as seen by the instance\nroot\u2014The root file system device, as seen by the kernel\nswap\u2014The swap device, as seen by the instance\nephemeralN\u2014The Nth instance store volume\nRequired: No\n-p, --prefix prefix\nThe filename prefix for bundled AMI files.\nDefault: The name of the image file. For example, if the image path is /var/spool/my-image/version-2/debian.img, then the default prefix is debian.img.\nRequired: No\n--kernel kernel_id\nDeprecated. Use register-image to set the kernel.\nRequired: No\n--ramdisk ramdisk_id\nDeprecated. Use register-image to set the RAM disk if required.\nRequired: No\nOutput\nStatus messages describing the stages and status of the bundling process.\nExample\nThis example creates a bundled AMI from an operating system image that was created in a loopback file.\n[ec2-user ~]$ ec2-bundle-image -k pk-HKZYKTAIG2ECMXYIBH3HXV4ZBEXAMPLE.pem -c cert-HKZYKTAIG2ECMXYIBH3HXV4ZBEXAMPLE.pem -u 111122223333 -i image.img -d bundled/ -r x86_64\nPlease specify a value for arch [i386]: \nBundling image file...\nSplitting bundled/image.gz.crypt...\nCreated image.part.00\nCreated image.part.01\nCreated image.part.02\nCreated image.part.03\nCreated image.part.04\nCreated image.part.05\nCreated image.part.06\nCreated image.part.07\nCreated image.part.08\nCreated image.part.09\nCreated image.part.10\nCreated image.part.11\nCreated image.part.12\nCreated image.part.13\nCreated image.part.14\nGenerating digests for each part...\nDigests generated.\nCreating bundle manifest...\nec2-bundle-image complete.\nec2-bundle-vol\nDescription\nCreates an instance store-backed Linux AMI by compressing, encrypting, and signing a copy of the root device volume for the instance.\nAmazon EC2 attempts to inherit product codes, kernel settings, RAM disk settings, and block device mappings from the instance.\nBy default, the bundle process excludes files that might contain sensitive information. These files include *.sw, *.swo, *.swp, *.pem, *.priv, *id_rsa*, *id_dsa* *.gpg, *.jks, */.ssh/authorized_keys, and */.bash_history. To include all of these files, use the --no-filter option. To include some of these files, use the --include option.\nFor more information, see Create an instance store-backed AMI.\nSyntax\nec2-bundle-vol -c path -k path -u account [-d path] [--ec2cert path] [-r architecture] [--productcodes code1,code2,...] [-B mapping] [--all] [-e directory1,directory2,...] [-i file1,file2,...] [--no-filter] [-p prefix] [-s size] [--[no-]inherit] [-v volume] [-P type] [-S script] [--fstab path] [--generate-fstab] [--grub-config path]\nOptions\n-c, --cert path\nThe user's PEM encoded RSA public key certificate file.\nRequired: Yes\n-k, --privatekey path\nThe path to the user's PEM-encoded RSA key file.\nRequired: Yes\n-u, --user account\nThe user's AWS account ID, without dashes.\nRequired: Yes\n-d, --destination destination\nThe directory in which to create the bundle.\nDefault: /tmp\nRequired: No\n--ec2cert path\nThe path to the Amazon EC2 X.509 public key certificate used to encrypt the image manifest.\nThe us-gov-west-1 and cn-north-1 Regions use a non-default public key certificate and the path to that certificate must be specified with this option. The path to the certificate varies based on the installation method of the AMI tools. For Amazon Linux, the certificates are located at /opt/aws/amitools/ec2/etc/ec2/amitools/. If you installed the AMI tools from the RPM or ZIP file in Set up the Amazon EC2 AMI tools, the certificates are located at $EC2_AMITOOL_HOME/etc/ec2/amitools/.\nRequired: Only for the us-gov-west-1 and cn-north-1 Regions.\n-r, --arch architecture\nThe image architecture. If you don't provide this on the command line, you'll be prompted to provide it when the bundling starts.\nValid values: i386 | x86_64\nRequired: No\n--productcodes code1,code2,...\nProduct codes to attach to the image at registration time, separated by commas.\nRequired: No\n-B, --block-device-mapping mapping\nDefines how block devices are exposed to an instance of this AMI if its instance type supports the specified device.\nSpecify a comma-separated list of key-value pairs, where each key is a virtual name and each value is the corresponding device name. Virtual names include the following:\nami\u2014The root file system device, as seen by the instance\nroot\u2014The root file system device, as seen by the kernel\nswap\u2014The swap device, as seen by the instance\nephemeralN\u2014The Nth instance store volume\nRequired: No\n-a, --all\nBundle all directories, including those on remotely mounted file systems.\nRequired: No\n-e, --exclude directory1,directory2,...\nA list of absolute directory paths and files to exclude from the bundle operation. This parameter overrides the --all option. When exclude is specified, the directories and subdirectories listed with the parameter will not be bundled with the volume.\nRequired: No\n-i, --include file1,file2,...\nA list of files to include in the bundle operation. The specified files would otherwise be excluded from the AMI because they might contain sensitive information.\nRequired: No\n--no-filter\nIf specified, we won't exclude files from the AMI because they might contain sensitive information.\nRequired: No\n-p, --prefix prefix\nThe file name prefix for bundled AMI files.\nDefault: image\nRequired: No\n-s, --size size\nThe size, in MB (1024 * 1024 bytes), of the image file to create. The maximum size is 10240 MB.\nDefault: 10240\nRequired: No\n--[no-]inherit\nIndicates whether the image should inherit the instance's metadata (the default is to inherit). Bundling fails if you enable --inherit but the instance metadata is not accessible.\nRequired: No\n-v, --volume volume\nThe absolute path to the mounted volume from which to create the bundle.\nDefault: The root directory (/)\nRequired: No\n-P, --partition type\nIndicates whether the disk image should use a partition table. If you don't specify a partition table type, the default is the type used on the parent block device of the volume, if applicable, otherwise the default is gpt.\nValid values: mbr | gpt | none\nRequired: No\n-S, --script script\nA customization script to be run right before bundling. The script must expect a single argument, the mount point of the volume.\nRequired: No\n--fstab path\nThe path to the fstab to bundle into the image. If this is not specified, Amazon EC2 bundles /etc/fstab.\nRequired: No\n--generate-fstab\nBundles the volume using an Amazon EC2-provided fstab.\nRequired: No\n--grub-config\nThe path to an alternate grub configuration file to bundle into the image. By default, ec2-bundle-vol expects either /boot/grub/menu.lst or /boot/grub/grub.conf to exist on the cloned image. This option allows you to specify a path to an alternative grub configuration file, which will then be copied over the defaults (if present).\nRequired: No\n--kernel kernel_id\nDeprecated. Use register-image to set the kernel.\nRequired: No\n--ramdiskramdisk_id\nDeprecated. Use register-image to set the RAM disk if required.\nRequired: No\nOutput\nStatus messages describing the stages and status of the bundling.\nExample\nThis example creates a bundled AMI by compressing, encrypting and signing a snapshot of the local machine's root file system.\n[ec2-user ~]$ ec2-bundle-vol -d /mnt -k pk-HKZYKTAIG2ECMXYIBH3HXV4ZBEXAMPLE.pem -c cert-HKZYKTAIG2ECMXYIBH3HXV4ZBEXAMPLE.pem -u 111122223333 -r x86_64\n  Copying / into the image file /mnt/image...\n  Excluding:\n       sys\n       dev/shm\n       proc\n       dev/pts\n       proc/sys/fs/binfmt_misc\n       dev\n       media\n       mnt\n       proc\n       sys\n       tmp/image\n       mnt/img-mnt\n  1+0 records in\n  1+0 records out\n  mke2fs 1.38 (30-Jun-2005)\n  warning: 256 blocks unused.\n\n  Splitting /mnt/image.gz.crypt...\n  Created image.part.00\n  Created image.part.01\n  Created image.part.02\n  Created image.part.03\n  ...\n  Created image.part.22\n  Created image.part.23\n  Generating digests for each part...\n  Digests generated.\n  Creating bundle manifest...\n  Bundle Volume complete.\nec2-delete-bundle\nDescription\nDeletes the specified bundle from Amazon S3 storage. After you delete a bundle, you can't launch instances from the corresponding AMI.\nSyntax\nec2-delete-bundle -b bucket -a access_key_id -s secret_access_key [-t token] [--url url] [--region region] [--sigv version] [-m path] [-p prefix] [--clear] [--retry] [-y]\nOptions\n-b, --bucket bucket\nThe name of the Amazon S3 bucket containing the bundled AMI, followed by an optional '/'-delimited path prefix\nRequired: Yes\n-a, --access-key access_key_id\nThe AWS access key ID.\nRequired: Yes\n-s, --secret-key secret_access_key\nThe AWS secret access key.\nRequired: Yes\n-t, --delegation-token token\nThe delegation token to pass along to the AWS request. For more information, see Temporary security credentials in the IAM User Guide.\nRequired: Only when you are using temporary security credentials.\nDefault: The value of the AWS_DELEGATION_TOKEN environment variable (if set).\n--regionregion\nThe Region to use in the request signature.\nDefault: us-east-1\nRequired: Required if using signature version 4\n--sigvversion\nThe signature version to use when signing the request.\nValid values: 2 | 4\nDefault: 4\nRequired: No\n-m, --manifestpath\nThe path to the manifest file.\nRequired: You must specify --prefix or --manifest.\n-p, --prefix prefix\nThe bundled AMI filename prefix. Provide the entire prefix. For example, if the prefix is image.img, use -p image.img and not -p image.\nRequired: You must specify --prefix or --manifest.\n--clear\nDeletes the Amazon S3 bucket if it's empty after deleting the specified bundle.\nRequired: No\n--retry\nAutomatically retries on all Amazon S3 errors, up to five times per operation.\nRequired: No\n-y, --yes\nAutomatically assumes the answer to all prompts is yes.\nRequired: No\nOutput\nAmazon EC2 displays status messages indicating the stages and status of the delete process.\nExample\nThis example deletes a bundle from Amazon S3.\n[ec2-user ~]$ ec2-delete-bundle -b amzn-s3-demo-bucket -a your_access_key_id -s your_secret_access_key\nDeleting files:\namzn-s3-demo-bucket/image.manifest.xml\namzn-s3-demo-bucket/image.part.00\namzn-s3-demo-bucket/image.part.01\namzn-s3-demo-bucket/image.part.02\namzn-s3-demo-bucket/image.part.03\namzn-s3-demo-bucket/image.part.04\namzn-s3-demo-bucket/image.part.05\namzn-s3-demo-bucket/image.part.06\nContinue? [y/n]\ny\nDeleted amzn-s3-demo-bucket/image.manifest.xml\nDeleted amzn-s3-demo-bucket/image.part.00\nDeleted amzn-s3-demo-bucket/image.part.01\nDeleted amzn-s3-demo-bucket/image.part.02\nDeleted amzn-s3-demo-bucket/image.part.03\nDeleted amzn-s3-demo-bucket/image.part.04\nDeleted amzn-s3-demo-bucket/image.part.05\nDeleted amzn-s3-demo-bucket/image.part.06\nec2-delete-bundle complete.\nec2-download-bundle\nDescription\nDownloads the specified instance store-backed Linux AMIs from Amazon S3 storage.\nSyntax\nec2-download-bundle -b bucket -a access_key_id -s secret_access_key -k path [--url url] [--region region] [--sigv version] [-m file] [-p prefix] [-d directory] [--retry]\nOptions\n-b, --bucket bucket\nThe name of the Amazon S3 bucket where the bundle is located, followed by an optional '/'-delimited path prefix.\nRequired: Yes\n-a, --access-key access_key_id\nThe AWS access key ID.\nRequired: Yes\n-s, --secret-key secret_access_key\nThe AWS secret access key.\nRequired: Yes\n-k, --privatekey path\nThe private key used to decrypt the manifest.\nRequired: Yes\n--url url\nThe Amazon S3 service URL.\nDefault: https://s3.amazonaws.com/\nRequired: No\n--region region\nThe Region to use in the request signature.\nDefault: us-east-1\nRequired: Required if using signature version 4\n--sigv version\nThe signature version to use when signing the request.\nValid values: 2 | 4\nDefault: 4\nRequired: No\n-m, --manifest file\nThe name of the manifest file (without the path). We recommend that you specify either the manifest (-m) or a prefix (-p).\nRequired: No\n-p, --prefix prefix\nThe filename prefix for the bundled AMI files.\nDefault: image\nRequired: No\n-d, --directory directory\nThe directory where the downloaded bundle is saved. The directory must exist.\nDefault: The current working directory.\nRequired: No\n--retry\nAutomatically retries on all Amazon S3 errors, up to five times per operation.\nRequired: No\nOutput\nStatus messages indicating the various stages of the download process are displayed.\nExample\nThis example creates the bundled directory (using the Linux mkdir command) and downloads the bundle from the amzn-s3-demo-bucket Amazon S3 bucket.\n[ec2-user ~]$ mkdir bundled\n[ec2-user ~]$ ec2-download-bundle -b amzn-s3-demo-bucket/bundles/bundle_name -m image.manifest.xml -a your_access_key_id -s your_secret_access_key -k pk-HKZYKTAIG2ECMXYIBH3HXV4ZBEXAMPLE.pem -d mybundle\nDownloading manifest image.manifest.xml from amzn-s3-demo-bucket to mybundle/image.manifest.xml ...\nDownloading part image.part.00 from amzn-s3-demo-bucket/bundles/bundle_name to mybundle/image.part.00 ...\nDownloaded image.part.00 from amzn-s3-demo-bucket\nDownloading part image.part.01 from amzn-s3-demo-bucket/bundles/bundle_name to mybundle/image.part.01 ...\nDownloaded image.part.01 from amzn-s3-demo-bucket\nDownloading part image.part.02 from amzn-s3-demo-bucket/bundles/bundle_name to mybundle/image.part.02 ...\nDownloaded image.part.02 from amzn-s3-demo-bucket\nDownloading part image.part.03 from amzn-s3-demo-bucket/bundles/bundle_name to mybundle/image.part.03 ...\nDownloaded image.part.03 from amzn-s3-demo-bucket\nDownloading part image.part.04 from amzn-s3-demo-bucket/bundles/bundle_name to mybundle/image.part.04 ...\nDownloaded image.part.04 from amzn-s3-demo-bucket\nDownloading part image.part.05 from amzn-s3-demo-bucket/bundles/bundle_name to mybundle/image.part.05 ...\nDownloaded image.part.05 from amzn-s3-demo-bucket\nDownloading part image.part.06 from amzn-s3-demo-bucket/bundles/bundle_name to mybundle/image.part.06 ...\nDownloaded image.part.06 from amzn-s3-demo-bucket\nec2-migrate-manifest\nDescription\nModifies an instance store-backed Linux AMI (for example, its certificate, kernel, and RAM disk) so that it supports a different Region.\nSyntax\nec2-migrate-manifest -c path -k path -m path {(-a access_key_id -s secret_access_key --region region) | (--no-mapping)} [--ec2cert ec2_cert_path] [--kernel kernel-id] [--ramdisk ramdisk_id]\nOptions\n-c, --cert path\nThe user's PEM encoded RSA public key certificate file.\nRequired: Yes\n-k, --privatekey path\nThe path to the user's PEM-encoded RSA key file.\nRequired: Yes\n--manifest path\nThe path to the manifest file.\nRequired: Yes\n-a, --access-key access_key_id\nThe AWS access key ID.\nRequired: Required if using automatic mapping.\n-s, --secret-key secret_access_key\nThe AWS secret access key.\nRequired: Required if using automatic mapping.\n--region region\nThe Region to look up in the mapping file.\nRequired: Required if using automatic mapping.\n--no-mapping\nDisables automatic mapping of kernels and RAM disks.\nDuring migration, Amazon EC2 replaces the kernel and RAM disk in the manifest file with a kernel and RAM disk designed for the destination region. Unless the --no-mapping parameter is given, ec2-migrate-bundle might use the DescribeRegions and DescribeImages operations to perform automated mappings.\nRequired: Required if you're not providing the -a, -s, and --region options used for automatic mapping.\n--ec2cert path\nThe path to the Amazon EC2 X.509 public key certificate used to encrypt the image manifest.\nThe us-gov-west-1 and cn-north-1 Regions use a non-default public key certificate and the path to that certificate must be specified with this option. The path to the certificate varies based on the installation method of the AMI tools. For Amazon Linux, the certificates are located at /opt/aws/amitools/ec2/etc/ec2/amitools/. If you installed the AMI tools from the ZIP file in Set up the Amazon EC2 AMI tools, the certificates are located at $EC2_AMITOOL_HOME/etc/ec2/amitools/.\nRequired: Only for the us-gov-west-1 and cn-north-1 Regions.\n--kernel kernel_id\nThe ID of the kernel to select.\nImportant\nWe recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see User provided kernels in the Amazon Linux 2 User Guide.\nRequired: No\n--ramdisk ramdisk_id\nThe ID of the RAM disk to select.\nImportant\nWe recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see User provided kernels in the Amazon Linux 2 User Guide.\nRequired: No\nOutput\nStatus messages describing the stages and status of the bundling process.\nExample\nThis example copies the AMI specified in the my-ami.manifest.xml manifest from the US to the EU.\n[ec2-user ~]$ ec2-migrate-manifest --manifest my-ami.manifest.xml --cert cert-HKZYKTAIG2ECMXYIBH3HXV4ZBZQ55CLO.pem --privatekey pk-HKZYKTAIG2ECMXYIBH3HXV4ZBZQ55CLO.pem --region eu-west-1 \n\nBacking up manifest...\nSuccessfully migrated my-ami.manifest.xml It is now suitable for use in eu-west-1.\nec2-unbundle\nDescription\nRe-creates the bundle from an instance store-backed Linux AMI.\nSyntax\nec2-unbundle -k path -m path [-s source_directory] [-d destination_directory]\nOptions\n-k, --privatekey path\nThe path to your PEM-encoded RSA key file.\nRequired: Yes\n-m, --manifest path\nThe path to the manifest file.\nRequired: Yes\n-s, --source source_directory\nThe directory containing the bundle.\nDefault: The current directory.\nRequired: No\n-d, --destination destination_directory\nThe directory in which to unbundle the AMI. The destination directory must exist.\nDefault: The current directory.\nRequired: No\nExample\nThis Linux and UNIX example unbundles the AMI specified in the image.manifest.xml file.\n[ec2-user ~]$ mkdir unbundled\n$ ec2-unbundle -m mybundle/image.manifest.xml -k pk-HKZYKTAIG2ECMXYIBH3HXV4ZBEXAMPLE.pem -s mybundle -d unbundled\n$ ls -l unbundled\ntotal 1025008\n-rw-r--r-- 1 root root 1048578048 Aug 25 23:46 image.img\nOutput\nStatus messages indicating the various stages of the unbundling process are displayed.\nec2-upload-bundle\nDescription\nUploads the bundle for an instance store-backed Linux AMI to Amazon S3 and sets the appropriate access control lists (ACLs) on the uploaded objects. For more information, see Create an instance store-backed AMI.\nNote\nTo upload objects to an S3 bucket for your instance store-backed Linux AMI, ACLs must be enabled for the bucket. Otherwise, Amazon EC2 will not be able to set ACLs on the objects to upload. If your destination bucket uses the bucket owner enforced setting for S3 Object Ownership, this won\u2019t work because ACLs are disabled. For more information, see Controlling ownership of uploaded objects using S3 Object Ownership.\nSyntax\nec2-upload-bundle -b bucket -a access_key_id -s secret_access_key [-t token] -m path [--url url] [--region region] [--sigv version] [--acl acl] [-d directory] [--part part] [--retry] [--skipmanifest]\nOptions\n-b, --bucket bucket\nThe name of the Amazon S3 bucket in which to store the bundle, followed by an optional '/'-delimited path prefix. If the bucket doesn't exist, it's created if the bucket name is available. Additionally, if the bucket doesn't exist and the AMI tools version is 1.5.18 or later, this command sets the ACLs for the bucket.\nRequired: Yes\n-a, --access-key access_key_id\nYour AWS access key ID.\nRequired: Yes\n-s, --secret-key secret_access_key\nYour AWS secret access key.\nRequired: Yes\n-t, --delegation-token token\nThe delegation token to pass along to the AWS request. For more information, see Temporary security credentials in the IAM User Guide.\nRequired: Only when you are using temporary security credentials.\nDefault: The value of the AWS_DELEGATION_TOKEN environment variable (if set).\n-m, --manifest path\nThe path to the manifest file. The manifest file is created during the bundling process and can be found in the directory containing the bundle.\nRequired: Yes\n--url url\nDeprecated. Use the --region option instead unless your bucket is constrained to the EU location (and not eu-west-1). The --location flag is the only way to target that specific location restraint.\nThe Amazon S3 endpoint service URL.\nDefault: https://s3.amazonaws.com/\nRequired: No\n--region region\nThe Region to use in the request signature for the destination S3 bucket.\nIf the bucket doesn't exist and you don't specify a Region, the tool creates the bucket without a location constraint (in us-east-1).\nIf the bucket doesn't exist and you specify a Region, the tool creates the bucket in the specified Region.\nIf the bucket exists and you don't specify a Region, the tool uses the bucket's location.\nIf the bucket exists and you specify us-east-1 as the Region, the tool uses the bucket's actual location without any error message, any existing matching files are over-written.\nIf the bucket exists and you specify a Region (other than us-east-1) that doesn't match the bucket's actual location, the tool exits with an error.\nIf your bucket is constrained to the EU location (and not eu-west-1), use the --location flag instead. The --location flag is the only way to target that specific location restraint.\nDefault: us-east-1\nRequired: Required if using signature version 4\n--sigv version\nThe signature version to use when signing the request.\nValid values: 2 | 4\nDefault: 4\nRequired: No\n--acl acl\nThe access control list policy of the bundled image.\nValid values: public-read | aws-exec-read\nDefault: aws-exec-read\nRequired: No\n-d, --directory directory\nThe directory containing the bundled AMI parts.\nDefault: The directory containing the manifest file (see the -m option).\nRequired: No\n--part part\nStarts uploading the specified part and all subsequent parts. For example, --part 04.\nRequired: No\n--retry\nAutomatically retries on all Amazon S3 errors, up to five times per operation.\nRequired: No\n--skipmanifest\nDoes not upload the manifest.\nRequired: No\n--location location\nDeprecated. Use the --region option instead, unless your bucket is constrained to the EU location (and not eu-west-1). The --location flag is the only way to target that specific location restraint.\nThe location constraint of the destination Amazon S3 bucket. If the bucket exists and you specify a location that doesn't match the bucket's actual location, the tool exits with an error. If the bucket exists and you don't specify a location, the tool uses the bucket's location. If the bucket doesn't exist and you specify a location, the tool creates the bucket in the specified location. If the bucket doesn't exist and you don't specify a location, the tool creates the bucket without a location constraint (in us-east-1).\nDefault: If --region is specified, the location is set to that specified Region. If --region is not specified, the location defaults to us-east-1.\nRequired: No\nOutput\nAmazon EC2 displays status messages that indicate the stages and status of the upload process.\nExample\nThis example uploads the bundle specified by the image.manifest.xml manifest.\n[ec2-user ~]$ ec2-upload-bundle -b amzn-s3-demo-bucket/bundles/bundle_name -m image.manifest.xml -a your_access_key_id -s your_secret_access_key\nCreating bucket...\nUploading bundled image parts to the S3 bucket amzn-s3-demo-bucket ...\nUploaded image.part.00\nUploaded image.part.01\nUploaded image.part.02\nUploaded image.part.03\nUploaded image.part.04\nUploaded image.part.05\nUploaded image.part.06\nUploaded image.part.07\nUploaded image.part.08\nUploaded image.part.09\nUploaded image.part.10\nUploaded image.part.11\nUploaded image.part.12\nUploaded image.part.13\nUploaded image.part.14\nUploading manifest ...\nUploaded manifest.\nBundle upload completed.\nCommon options for AMI tools\nMost of the AMI tools accept the following optional parameters.\n--help, -h\nDisplays the help message.\n--version\nDisplays the version and copyright notice.\n--manual\nDisplays the manual entry.\n--batch\nRuns in batch mode, suppressing interactive prompts.\n--debug\nDisplays information that can be useful when troubleshooting problems."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_ConvertingS3toEBS.html",
        "content": "You can convert an instance store-backed Linux AMI that you own to an Amazon EBS-backed Linux AMI.\nImportant\nYou can't convert an AMI that you don't own.\nTo convert an instance store-backed AMI to an Amazon EBS-backed AMI\nLaunch an Amazon Linux instance from an Amazon EBS-backed AMI. For more information, see Launch an EC2 instance using the launch instance wizard in the console. Amazon Linux instances have the AWS CLI and AMI tools pre-installed.\nUpload the X.509 private key that you used to bundle your instance store-backed AMI to your instance. We use this key to ensure that only you and Amazon EC2 can access your AMI.\nCreate a temporary directory on your instance for your X.509 private key as follows:\n[ec2-user ~]$ mkdir /tmp/cert\nCopy your X.509 private key from your computer to the /tmp/cert directory on your instance, using a secure copy tool such as scp. The my-private-key parameter in the following command is the private key you use to connect to your instance with SSH. For example:\nyou@your_computer:~ $ scp -i my-private-key.pem /path/to/pk-HKZYKTAIG2ECMXYIBH3HXV4ZBEXAMPLE.pem ec2-user@ec2-203-0-113-25.compute-1.amazonaws.com:/tmp/cert/\npk-HKZYKTAIG2ECMXYIBH3HXV4ZBEXAMPLE.pem  100%  717     0.7KB/s   00:00\nConfigure your environment variables to use the AWS CLI. For more information, see Environment variables.\n(Recommended) Set environment variables for your AWS access key, secret key, and session token.\n[ec2-user ~]$ export AWS_ACCESS_KEY_ID=your_access_key_id\n[ec2-user ~]$ export AWS_SECRET_ACCESS_KEY=your_secret_access_key\n[ec2-user ~]$ export AWS_SESSION_TOKEN=your_session_token\nSet environment variables for your AWS access key, and secret key.\n[ec2-user ~]$ export AWS_ACCESS_KEY_ID=your_access_key_id\n[ec2-user ~]$ export AWS_SECRET_ACCESS_KEY=your_secret_access_key\nPrepare an Amazon Elastic Block Store (Amazon EBS) volume for your new AMI.\nCreate an empty EBS volume in the same Availability Zone as your instance using the create-volume command. Note the volume ID in the command output.\nImportant\nThis EBS volume must be the same size or larger than the original instance store root volume.\n[ec2-user ~]$ aws ec2 create-volume --size 10 --region us-west-2 --availability-zone us-west-2b      \nAttach the volume to your Amazon EBS-backed instance using the attach-volume command.\n[ec2-user ~]$ aws ec2 attach-volume --volume-id volume_id --instance-id instance_id --device /dev/sdb --region us-west-2\nCreate a folder for your bundle.\n[ec2-user ~]$ mkdir /tmp/bundle\nDownload the bundle for your instance store-based AMI to /tmp/bundle using the ec2-download-bundle command.\n[ec2-user ~]$ ec2-download-bundle -b amzn-s3-demo-bucket/bundle_folder/bundle_name -m image.manifest.xml -a $AWS_ACCESS_KEY_ID -s $AWS_SECRET_ACCESS_KEY --privatekey /path/to/pk-HKZYKTAIG2ECMXYIBH3HXV4ZBEXAMPLE.pem -d /tmp/bundle\nReconstitute the image file from the bundle using the ec2-unbundle command.\nChange directories to the bundle folder.\n[ec2-user ~]$ cd /tmp/bundle/\nRun the ec2-unbundle command.\n[ec2-user bundle]$ ec2-unbundle -m image.manifest.xml --privatekey /path/to/pk-HKZYKTAIG2ECMXYIBH3HXV4ZBEXAMPLE.pem\nCopy the files from the unbundled image to the new EBS volume.\n[ec2-user bundle]$ sudo dd if=/tmp/bundle/image of=/dev/sdb bs=1M\nProbe the volume for any new partitions that were unbundled.\n[ec2-user bundle]$ sudo partprobe /dev/sdb1\nList the block devices to find the device name to mount.\n[ec2-user bundle]$ lsblk\nNAME         MAJ:MIN RM SIZE RO TYPE MOUNTPOINT\n/dev/sda    202:0    0   8G  0 disk\n\u2514\u2500/dev/sda1 202:1    0   8G  0 part /\n/dev/sdb    202:80   0  10G  0 disk\n\u2514\u2500/dev/sdb1 202:81   0  10G  0 part\nIn this example, the partition to mount is /dev/sdb1, but your device name will likely be different. If your volume is not partitioned, then the device to mount will be similar to /dev/sdb (without a device partition trailing digit).\nCreate a mount point for the new EBS volume and mount the volume.\n[ec2-user bundle]$ sudo mkdir /mnt/ebs\n[ec2-user bundle]$ sudo mount /dev/sdb1 /mnt/ebs\nOpen the /etc/fstab file on the EBS volume with your favorite text editor (such as vim or nano) and remove any entries for instance store (ephemeral) volumes. Because the EBS volume is mounted on /mnt/ebs, the fstab file is located at /mnt/ebs/etc/fstab.\n[ec2-user bundle]$ sudo nano /mnt/ebs/etc/fstab\n#\nLABEL=/     /           ext4    defaults,noatime  1   1\ntmpfs       /dev/shm    tmpfs   defaults        0   0\ndevpts      /dev/pts    devpts  gid=5,mode=620  0   0\nsysfs       /sys        sysfs   defaults        0   0\nproc        /proc       proc    defaults        0   0\n/dev/sdb        /media/ephemeral0       auto    defaults,comment=cloudconfig    0       2\nIn this example, the last line should be removed.\nUnmount the volume and detach it from the instance.\n[ec2-user bundle]$ sudo umount /mnt/ebs\n[ec2-user bundle]$ aws ec2 detach-volume --volume-id volume_id --region us-west-2\nCreate an AMI from the new EBS volume as follows.\nCreate a snapshot of the new EBS volume.\n[ec2-user bundle]$ aws ec2 create-snapshot --region us-west-2 --description \"your_snapshot_description\" --volume-id volume_id\nCheck to see that your snapshot is complete.\n[ec2-user bundle]$ aws ec2 describe-snapshots --region us-west-2 --snapshot-id snapshot_id\nIdentify the processor architecture, virtualization type, and the kernel image (aki) used on the original AMI with the describe-images command. You need the AMI ID of the original instance store-backed AMI for this step.\n[ec2-user bundle]$ aws ec2 describe-images --region us-west-2 --image-id ami-id --output text\nIMAGES x86_64 amazon/amzn-ami-pv-2013.09.2.x86_64-s3 ami-8ef297be amazon available public machine aki-fc8f11cc instance-store paravirtual xen\nIn this example, the architecture is x86_64 and the kernel image ID is aki-fc8f11cc. Use these values in the following step. If the output of the above command also lists an ari ID, take note of that as well.\nRegister your new AMI with the snapshot ID of your new EBS volume and the values from the previous step. If the previous command output listed an ari ID, include that in the following command with --ramdisk-id ari_id.\n[ec2-user bundle]$ aws ec2 register-image --region us-west-2 --name your_new_ami_name --block-device-mappings DeviceName=device-name,Ebs={SnapshotId=snapshot_id} --virtualization-type paravirtual --architecture x86_64 --kernel-id aki-fc8f11cc --root-device-name device-name\n(Optional) After you have tested that you can launch an instance from your new AMI, you can delete the EBS volume that you created for this procedure.\naws ec2 delete-volume --volume-id volume_id"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-create-win-sysprep.html",
        "content": "The Microsoft System Preparation (Windows Sysprep) tool creates a generalized version of the operating system, with instance-specific system configuration removed before it captures a new image.\nWe recommend that you use EC2 Image Builder to automate the creation, management, and deployment of customized, secure, and up-to-date \"golden\" server images that are pre-installed and preconfigured with software and settings.\nYou can also use Windows Sysprep to create a standardized AMI using the Windows launch agents. For more information, see Use Windows Sysprep with a launch agent.\nImportant\nDo not use Windows Sysprep to create an instance backup. Windows Sysprep removes system-specific information; removing this information might have unintended consequences for an instance backup.\nTo troubleshoot Windows Sysprep, see Troubleshoot Sysprep issues with Amazon EC2 Windows instances.\nContents\nWindows Sysprep phases\nBefore you begin\nUse Windows Sysprep with a launch agent\nWindows Sysprep phases\nWindows Sysprep runs through the following phases:\nGeneralize: The Sysprep tool removes image-specific information and configurations. For example, Windows Sysprep removes the security identifier (SID), the computer name, the event logs, and specific drivers, to name a few. After this phase is completed, the operating system (OS) is ready to create an AMI.\nNote\nWhen you run Windows Sysprep with the Windows launch agents, the system prevents drivers from being removed because PersistAllDeviceInstalls is set to true by default.\nSpecialize: Plug and Play scans the computer and installs drivers for any detected devices. The Sysprep tool generates OS requirements, like the computer name and SID. Optionally, you can run commands in this phase.\nOut-of-Box Experience (OOBE): The system runs an abbreviated version of Windows Setup and asks you to enter information such as system language, time zone, and registered organization. When you run Windows Sysprep with Windows launch agents, the answer file automates this phase.\nBefore you begin\nBefore performing Windows Sysprep, we recommend that you remove all local user accounts and all account profiles other than a single administrator account under which Windows Sysprep will be run. If you perform Windows Sysprep with additional accounts and profiles, unexpected behavior could result, including loss of profile data or failure to complete Windows Sysprep.\nLearn more about Sysprep Overview.\nLearn which Sysprep Support for Server Roles.\nUse Windows Sysprep with a launch agent\nYou can use Windows Sysprep to create a standardized Amazon Machine Image (AMI) when you start with an AMI that has one of the Windows launch agents installed.\nUse Windows Sysprep with EC2Launch v2\nUse Windows Sysprep with EC2Launch\nUse Windows Sysprep with EC2Config"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/CopyingAMIs.html",
        "content": "You can create a copy an Amazon Machine Image (AMI) within the same Region or across Regions in the same partition. To copy an AMI to another partition, see Store and restore an AMI.\nContents\nConsiderations\nCosts\nGrant permissions to copy Amazon EC2 AMIs\nCopy an AMI\nStop a pending AMI copy operation\nHow Amazon EC2 AMI copy works\nConsiderations\nPermission to copy AMIs \u2013 You can use IAM policies to grant or deny users permission to copy AMIs. Starting October 28, 2024, you can specify resource-level permissions for the CopyImage action on the source AMI. Resource-level permissions for the target AMI are available as before.\nLaunch permissions and Amazon S3 bucket permissions \u2013 AWS does not copy launch permissions or Amazon S3 bucket permissions from the source AMI to the new AMI. After the copy operation is complete, you can apply launch permissions and Amazon S3 bucket permissions to the new AMI.\nTags \u2013 You can only copy user-defined AMI tags that you attached to the source AMI. System tags (prefixed with aws:) and user-defined tags that are attached by other AWS accounts will not be copied. When copying an AMI, you can attach new tags to the target AMI and its backing snapshots.\nCosts\nThere are no charges for copying an AMI. However, standard storage and data transfer rates apply. If you copy an EBS-backed AMI, you will incur charges for the storage of any additional EBS snapshots.\nCopy an AMI\nYou can copy an AMI using the following procedures.\nConsole\nAWS CLI\nPowerShell\nTo copy an AMI\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nFrom the console navigation bar, select the Region that contains the AMI.\nIn the navigation pane, choose AMIs to display the list of AMIs available to you in the Region.\nIf you don't see the AMI you want to copy, choose a different filter. You can filter by AMIs Owned by me, Private images, Public images, and Disabled images.\nSelect the AMI to copy, and then choose Actions, Copy AMI.\nOn the Copy AMI page, specify the following information:\nAMI copy name: A name for the new AMI. You can include the operating system information in the name because Amazon EC2 does not provide this information when displaying details about the AMI.\nAMI copy description: By default, the description includes information about the source AMI so that you can distinguish a copy from its original. You can change this description as needed.\nDestination Region: The Region in which to copy the AMI. For more information, see Cross-Region copying.\nCopy tags: Select this checkbox to include your user-defined AMI tags when copying the AMI. System tags (prefixed with aws:) and user-defined tags that are attached by other AWS accounts will not be copied.\n(EBS-backed AMIs only) Encrypt EBS snapshots of AMI copy: Select this checkbox to encrypt the target snapshots, or to re-encrypt them using a different key. If encryption by default is enabled, the Encrypt EBS snapshots of AMI copy checkbox is selected and cannot be cleared. For more information, see Encryption and copying.\n(EBS-backed AMIs only) KMS key: The KMS key to used to encrypt the target snapshots.\nTags: You can tag the new AMI and the new snapshots with the same tags, or you can tag them with different tags.\nTo tag the new AMI and the new snapshots with the same tags, choose Tag image and snapshots together. The same tags are applied to the new AMI and every snapshot that is created.\nTo tag the new AMI and the new snapshots with different tags, choose Tag image and snapshots separately. Different tags are applied to the new AMI and the snapshots that are created. Note, however, that all the new snapshots that are created get the same tags; you can't tag each new snapshot with a different tag.\nTo add a tag, choose Add tag, and enter the key and value for the tag. Repeat for each tag.\nWhen you're ready to copy the AMI, choose Copy AMI.\nThe initial status of the new AMI is Pending. The AMI copy operation is complete when the status is Available.\nStop a pending AMI copy operation\nYou can stop a pending AMI copy using the following procedures.\nConsole\nCommand line\nTo stop an AMI copy operation using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nFrom the navigation bar, select the destination Region from the Region selector.\nIn the navigation pane, choose AMIs.\nSelect the AMI to stop copying, and then choose Actions, Deregister AMI.\nWhen asked for confirmation, choose Deregister AMI."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/copy-ami-permissions.html",
        "content": "To copy an EBS-backed or instance store-backed AMI, you need the following IAM permissions:\nec2:CopyImage \u2013 To copy the AMI. For EBS-backed AMIs, it also grants permission to copy the AMI's backing snapshots.\nec2:CreateTags \u2013 To tag the target AMI. For EBS-backed AMIs, it also grants permission to tag the target AMI\u2019s backing snapshots.\nIf you're copying an instance stored-backed AMI, you need the following additional IAM permissions:\ns3:CreateBucket \u2013 To create the S3 bucket in the target Region for the new AMI\ns3:GetBucketAcl \u2013 To read the ACL permissions for the source bucket\ns3:ListAllMyBuckets \u2013 To find an existing S3 bucket for AMIs in the target Region\ns3:GetObject \u2013 To read the objects in the source bucket\ns3:PutObject \u2013 To write the objects in the target bucket\ns3:PutObjectAcl \u2013 To write the permissions for the new objects in the target bucket\nNote\nStarting October 28, 2024, you can specify resource-level permissions for the CopyImage action on the source AMI. Resource-level permissions for the target AMI are available as before. For more information, see CopyImage in the table under Actions defined by Amazon EC2 in the Service Authorization Reference.\nExample IAM policy for copying an EBS-backed AMI and tagging the target AMI and snapshots\nThe following example policy grants you permission to copy any EBS-backed AMI and tag the target AMI and its backing snapshots.\nNote\nStarting October 28, 2024, you can specify snapshots in the Resource element. For more information, see CopyImage in the table under Actions defined by Amazon EC2 in the Service Authorization Reference.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Sid\": \"PermissionToCopyAllImages\",\n        \"Effect\": \"Allow\",\n        \"Action\": [\n            \"ec2:CopyImage\",\n            \"ec2:CreateTags\"\n        ],\n        \"Resource\": [\n            \"arn:aws:ec2:*::image/*\",\n            \"arn:aws:ec2:*::snapshot/*\"\n        ]\n    }]\n}\nExample IAM policy for copying an EBS-backed AMI but denying tagging the new snapshots\nThe ec2:CopySnapshot permission is automatically granted when you get the ec2:CopyImage permission. Permission to tag the new backing snapshots can be explicitly denied, overriding the Allow effect for the ec2:CreateTags action.\nThe following example policy grants you permission to copy any EBS-backed AMI, but denies you from tagging the new backing snapshots of the target AMI.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CopyImage\",\n                \"ec2:CreateTags\"\n            ],\n            \"Resource\": [\n                \"arn:aws:ec2:*::image/*\",\n                \"arn:aws:ec2:*::snapshot/*\"\n            ]\n        },\n        {\n            \"Effect\": \"Deny\",\n            \"Action\": \"ec2:CreateTags\",\n            \"Resource\": \"arn:aws:ec2:::snapshot/*\"\n        }\n    ]\n}\nExample IAM policy for copying an instance store-backed AMI and tagging the target AMI\nThe following example policy grants you permission to copy any instance store-backed AMI in the specified source bucket to the specified Region, and tag the target AMI.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n            \"Sid\": \"PermissionToCopyAllImages\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CopyImage\",\n                \"ec2:CreateTags\"\n            ],\n            \"Resource\": \"arn:aws:ec2:*::image/*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"s3:ListAllMyBuckets\",\n            \"Resource\": [\n                \"arn:aws:s3:::*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"s3:GetObject\",\n            \"Resource\": [\n                \"arn:aws:s3:::amzn-s3-demo-source-bucket/*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:CreateBucket\",\n                \"s3:GetBucketAcl\",\n                \"s3:PutObjectAcl\",\n                \"s3:PutObject\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::amis-for-account-in-region-hash\"\n            ]\n        }\n    ]\n}\nTo find the Amazon Resource Name (ARN) of the AMI source bucket, open the Amazon EC2 console at https://console.aws.amazon.com/ec2/, in the navigation pane choose AMIs, and locate the bucket name in the Source column.\nNote\nThe s3:CreateBucket permission is only needed the first time that you copy an instance store-backed AMI to an individual Region. After that, the Amazon S3 bucket that is already created in the Region is used to store all future AMIs that you copy to that Region."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/how-ami-copy-works.html",
        "content": "Copying a source AMI results in an identical but distinct new AMI that we also refer to as the target AMI. The target AMI has its own unique AMI ID. You can change or deregister the source AMI with no effect on the target AMI. The reverse is also true.\nWith an EBS-backed AMI, each of its backing snapshots is copied to an identical but distinct target snapshot. If you copy an AMI to a new Region, the snapshots are complete (non-incremental) copies. If you encrypt unencrypted backing snapshots or encrypt them to a new KMS key, the snapshots are complete (non-incremental) copies. Subsequent copy operations of an AMI result in incremental copies of the backing snapshots.\nContents\nCross-Region copying\nCross-account copying\nEncryption and copying\nCross-Region copying\nCopying an AMI across geographically diverse Regions provides the following benefits:\nConsistent global deployment: Copying an AMI from one Region to another enables you to launch consistent instances in different Regions based on the same AMI.\nScalability: You can more easily design and build global applications that meet the needs of your users, regardless of their location.\nPerformance: You can increase performance by distributing your application, as well as locating critical components of your application in closer proximity to your users. You can also take advantage of Region-specific features, such as instance types or other AWS services.\nHigh availability: You can design and deploy applications across AWS Regions, to increase availability.\nThe following diagram shows the relationship between a source AMI and two copied AMIs in different Regions, as well as the EC2 instances launched from each. When you launch an instance from an AMI, it resides in the same Region where the AMI resides. If you make changes to the source AMI and want those changes to be reflected in the AMIs in the target Regions, you must recopy the source AMI to the target Regions.\nWhen you first copy an instance store-backed AMI to a Region, we create an Amazon S3 bucket for the AMIs copied to that Region. All instance store-backed AMIs that you copy to that Region are stored in this bucket. The bucket names have the following format: amis-for-account-in-region-hash. For example: amis-for-123456789012-in-us-east-2-yhjmxvp6.\nPrerequisite\nPrior to copying an AMI, you must ensure that the contents of the source AMI are updated to support running in a different Region. For example, you should update any database connection strings or similar application configuration data to point to the appropriate resources. Otherwise, instances launched from the new AMI in the destination Region might still use the resources from the source Region, which can impact performance and cost.\nLimitations\nDestination Regions are limited to 100 concurrent AMI copies.\nYou can't copy a paravirtual (PV) AMI to a Region that does not support PV AMIs. For more information, see Virtualization types.\nCross-account copying\nIf an AMI from another AWS account is shared with your AWS account, you can copy the shared AMI. This is known as cross-account copying. The AMI that is shared with you is the source AMI. When you copy the source AMI, you create a new AMI. The new AMI is often referred to as the target AMI.\nAMI costs\nFor a shared AMI, the account of the shared AMI is charged for the storage in the Region.\nIf you copy an AMI that is shared with your account, you are the owner of the target AMI in your account.\nThe owner of the source AMI is charged standard Amazon EBS or Amazon S3 transfer fees.\nYou are charged for the storage of the target AMI in the destination Region.\nResource permissions\nTo copy an AMI that was shared with you from another account, the owner of the source AMI must grant you read permissions for the storage that backs the AMI. The storage is either the associated EBS snapshot (for an Amazon EBS-backed AMI) or an associated S3 bucket (for an instance store-backed AMI). If the shared AMI has encrypted snapshots, the owner must share the key or keys with you. For more information about granting resource permissions, for EBS snapshots, see Share an Amazon EBS snapshot with other AWS accounts in the Amazon EBS User Guide, and for S3 buckets, see Identity and access management for Amazon S3 in the Amazon S3 User Guide.\nNote\nTags that are attached to the source AMI are not copied across accounts to the target AMI.\nEncryption and copying\nThe following table shows encryption support for various AMI-copying scenarios. While it is possible to copy an unencrypted snapshot to yield an encrypted snapshot, you cannot copy an encrypted snapshot to yield an unencrypted one.\nScenario Description Supported\n1 Unencrypted to unencrypted Yes\n2 Encrypted to encrypted Yes\n3 Unencrypted to encrypted Yes\n4 Encrypted to unencrypted No\nNote\nEncrypting during the CopyImage action applies only to Amazon EBS-backed AMIs. Because an instance store-backed AMI does not use snapshots, you can't use copying to change its encryption status.\nWhen you copy an AMI without specifying encryption parameters, the backing snapshot is copied with its original encryption status by default. Therefore, if the source AMI is backed by an unencrypted snapshot, the resulting target snapshot will also be unencrypted. Similarly, if the source AMI's snapshot is encrypted, the resulting target snapshot will also be encrypted by the same AWS KMS key. For AMIs backed by multiple snapshots, each target snapshot preserves the encryption state of its corresponding source snapshot.\nTo change the encryption state of the target backing snapshots during an AMI copy, you can specify encryption parameters. The following example shows a non-default case, where encryption parameters are specified with the CopyImage action to change the target AMI's encryption state.\nCopy an unencrypted source AMI to an encrypted target AMI\nIn this scenario, an AMI backed by an unencrypted root snapshot is copied to an AMI with an encrypted root snapshot. The CopyImage action is invoked with two encryption parameters, including a customer managed key. As a result, the encryption status of the root snapshot changes, so that the target AMI is backed by a root snapshot containing the same data as the source snapshot, but encrypted using the specified key. You incur storage costs for the snapshots in both AMIs, as well as charges for any instances you launch from either AMI.\nNote\nEnabling encryption by default has the same effect as setting the Encrypted parameter to true for all snapshots in the AMI.\nSetting the Encrypted parameter encrypts the single snapshot for this instance. If you do not specify the KmsKeyId parameter, the default customer managed key is used to encrypt the snapshot copy.\nFor more information about copying AMIs with encrypted snapshots, see Use encryption with EBS-backed AMIs."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-store-restore.html",
        "content": "You can store an Amazon Machine Image (AMI) in an Amazon S3 bucket, copy the AMI to another S3 bucket, and then restore it from the S3 bucket. By storing and restoring an AMI using S3 buckets, you can copy AMIs from one AWS partition to another, for example, from the main commercial partition to the AWS GovCloud (US) partition. You can also make archival copies of AMIs by storing them in an S3 bucket.\nThe supported APIs for storing and restoring an AMI using S3 are CreateStoreImageTask, DescribeStoreImageTasks, and CreateRestoreImageTask.\nCopyImage is the recommended API to use for copying AMIs within an AWS partition. However, CopyImage can\u2019t copy an AMI to another partition.\nFor information about the AWS partitions, see partition on the Amazon Resource Names (ARNs) page in the IAM User Guide.\nWarning\nEnsure that you comply with all applicable laws and business requirements when moving data between AWS partitions or AWS Regions, including, but not limited to, any applicable government regulations and data residency requirements.\nContents\nUse cases\nLimitations\nCosts\nHow AMI store and restore works\nCreate a store image task\nUse cases\nUse the store and restore APIs to do the following:\nCopy an AMI between AWS partitions\nMake archival copies of AMIs\nCopy an AMI between AWS partitions\nBy storing and restoring an AMI using S3 buckets, you can copy an AMI from one AWS partition to another, or from one AWS Region to another. In the following example, you copy an AMI from the main commercial partition to the AWS GovCloud (US) partition, specifically from the us-east-2 Region to the us-gov-east-1 Region.\nTo copy an AMI from one partition to another, follow these steps:\nStore the AMI in an S3 bucket in the current Region by using CreateStoreImageTask. In this example, the S3 bucket is located in us-east-2.\nMonitor the progress of the store task by using DescribeStoreImageTasks. The object becomes visible in the S3 bucket when the task is completed.\nCopy the stored AMI object to an S3 bucket in the target partition using a procedure of your choice. In this example, the S3 bucket is located in us-gov-east-1.\nNote\nBecause you need different AWS credentials for each partition, you can\u2019t copy an S3 object directly from one partition to another. The process for copying an S3 object across partitions is outside the scope of this documentation. We provide the following copy processes as examples, but you must use the copy process that meets your security requirements.\nTo copy one AMI across partitions, the copy process could be as straightforward as the following: Download the object from the source bucket to an intermediate host (for example, an EC2 instance or a laptop), and then upload the object from the intermediate host to the target bucket. For each stage of the process, use the AWS credentials for the partition.\nFor more sustained usage, consider developing an application that manages the copies, potentially using S3 multipart downloads and uploads.\nRestore the AMI from the S3 bucket in the target partition by using CreateRestoreImageTask. In this example, the S3 bucket is located in us-gov-east-1.\nMonitor the progress of the restore task by describing the AMI to check when its state becomes available. You can also monitor the progress percentages of the snapshots that make up the restored AMI by describing the snapshots.\nMake archival copies of AMIs\nYou can make archival copies of AMIs by storing them in an S3 bucket. The AMI is packed into a single object in S3, and all of the AMI metadata (excluding sharing information) is preserved as part of the stored AMI. The AMI data is compressed as part of the storage process. AMIs that contain data that can easily be compressed will result in smaller objects in S3. To reduce costs, you can use less expensive S3 storage tiers. For more information, see Amazon S3 Storage Classes and Amazon S3 pricing\nLimitations\nTo store an AMI, your AWS account must either own the AMI and its snapshots, or the AMI and its snapshots must be shared directly with your account. You can't store an AMI if it is only publicly shared.\nOnly EBS-backed AMIs can be stored using these APIs.\nParavirtual (PV) AMIs are not supported.\nThe size of an AMI (before compression) that can be stored is limited to 5,000 GB.\nQuota on store image requests: 600 GB of storage work (snapshot data) in progress.\nQuota on restore image requests: 300 GB of restore work (snapshot data) in progress.\nFor the duration of the store task, the snapshots must not be deleted and the IAM principal doing the store must have access to the snapshots, otherwise the store process will fail.\nYou can\u2019t create multiple copies of an AMI in the same S3 bucket.\nAn AMI that is stored in an S3 bucket can\u2019t be restored with its original AMI ID. You can mitigate this by using AMI aliasing.\nCurrently the store and restore APIs are only supported by using the AWS Command Line Interface, AWS SDKs, and Amazon EC2 API. You can\u2019t store and restore an AMI using the Amazon EC2 console.\nCosts\nWhen you store and restore AMIs using S3, you are charged for the services that are used by the store and restore APIs, and for data transfer. The APIs use S3 and the EBS Direct API (used internally by these APIs to access the snapshot data). For more information, see Amazon S3 pricing and Amazon EBS pricing."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/how-it-works.html",
        "content": "To store and restore an AMI using S3, you use the following APIs:\nCreateStoreImageTask \u2013 Stores the AMI in an S3 bucket\nDescribeStoreImageTasks \u2013 Provides the progress of the AMI store task\nCreateRestoreImageTask \u2013 Restores the AMI from an S3 bucket\nHow the APIs work\nCreateStoreImageTask\nDescribeStoreImageTasks\nCreateRestoreImageTask\nFile paths\nCreateStoreImageTask\nThe CreateStoreImageTask API stores an AMI as a single object in an S3 bucket.\nThe API creates a task that reads all of the data from the AMI and its snapshots, and then uses an S3 multipart upload to store the data in an S3 object. The API takes all of the components of the AMI, including most of the non-Region-specific AMI metadata, and all the EBS snapshots contained in the AMI, and packs them into a single object in S3. The data is compressed as part of the upload process to reduce the amount of space used in S3, so the object in S3 might be smaller than the sum of the sizes of the snapshots in the AMI.\nIf there are AMI and snapshot tags visible to the account calling this API, they are preserved.\nThe object in S3 has the same ID as the AMI, but with a .bin extension. The following data is also stored as S3 metadata tags on the S3 object: AMI name, AMI description, AMI registration date, AMI owner account, and a timestamp for the store operation.\nThe time it takes to complete the task depends on the size of the AMI. It also depends on how many other tasks are in progress because tasks are queued. You can track the progress of the task by calling the DescribeStoreImageTasks API.\nThe sum of the sizes of all the AMIs in progress is limited to 600 GB of EBS snapshot data per account. Further task creation will be rejected until the tasks in progress are less than the limit. For example, if an AMI with 100 GB of snapshot data and another AMI with 200 GB of snapshot data are currently being stored, another request will be accepted, because the total in progress is 300 GB, which is less than the limit. But if a single AMI with 800 GB of snapshot data is currently being stored, further tasks are rejected until the task is completed.\nDescribeStoreImageTasks\nThe DescribeStoreImageTasks API describes the progress of the AMI store tasks. You can describe tasks for specified AMIs. If you don't specify AMIs, you get a paginated list of all of the store image tasks that have been processed in the last 31 days.\nFor each AMI task, the response indicates if the task is InProgress, Completed, or Failed. For tasks InProgress, the response shows an estimated progress as a percentage.\nTasks are listed in reverse chronological order.\nCurrently, only tasks from the previous month can be viewed.\nCreateRestoreImageTask\nThe CreateRestoreImageTask API starts a task that restores an AMI from an S3 object that was previously created by using a CreateStoreImageTask request.\nThe restore task can be performed in the same or a different Region in which the store task was performed.\nThe S3 bucket from which the AMI object will be restored must be in the same Region in which the restore task is requested. The AMI will be restored in this Region.\nThe AMI is restored with its metadata, such as the name, description, and block device mappings corresponding to the values of the stored AMI. The name must be unique for AMIs in the Region for this account. If you do not provide a name, the new AMI gets the same name as the original AMI. The AMI gets a new AMI ID that is generated at the time of the restore process.\nThe time it takes to complete the AMI restoration task depends on the size of the AMI. It also depends on how many other tasks are in progress because tasks are queued. You can view the progress of the task by describing the AMI (describe-images) or its EBS snapshots (describe-snapshots). If the task fails, the AMI and snapshots are moved to a failed state.\nThe sum of the sizes of all of the AMIs in progress is limited to 300 GB (based on the size after restoration) of EBS snapshot data per account. Further task creation will be rejected until the tasks in progress are less than the limit.\nFile paths\nYou can use file paths when storing and restoring AMIs, in the following way:\nWhen storing an AMI in S3, the file path can be added to the bucket name. Internally, the system separates the path from the bucket name, and then adds the path to the object key that is generated to store the AMI. The full object path is shown in the response from the API call.\nWhen restoring the AMI, because an object key parameter is available, the path can be added to the beginning of the object key value.\nExample: Use a file path when storing and restoring an AMI (AWS CLI)\nThe following example first stores an AMI in S3, with the file path appended to the bucket name. The example then restores the AMI from S3, with the file path prepended to the object key parameter.\nWhen you store the AMI, specify the file path after the bucket name, as follows:\naws ec2 create-store-image-task \\\n    --image-id ami-1234567890abcdef0 \\\n    --bucket amzn-s3-demo-bucket/path1/path2\nThe following is example output.\n{\n  \"ObjectKey\": \"path1/path2/ami-1234567890abcdef0.bin\"\n}\nWhen you restore the AMI, specify the value from the output in the previous step, which includes the file path.\naws ec2 create-restore-image-task \\\n    --object-key path1/path2/ami-1234567890abcdef0.bin \\\n    --bucket amzn-s3-demo-bucket \\\n    --name \"New AMI Name\""
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/work-with-ami-store-restore.html",
        "content": "When you store an AMI in an S3 bucket, a store image task is created. You can use the store image task to monitor the progress and outcome of the process.\nContents\nSecuring your AMIs\nPermissions for storing and restoring AMIs using S3\nCreate store and restore image tasks\nSecuring your AMIs\nIt is important to ensure that the S3 bucket is configured with sufficient security to secure the content of the AMI and that the security is maintained for as long as the AMI objects remain in the bucket. If this can't be done, use of these APIs is not recommended. Ensure that public access to the S3 bucket is not allowed. We recommend enabling Server-side encryption for the S3 buckets in which you store the AMIs, although it\u2019s not required.\nFor information about how to set the appropriate security settings for your S3 buckets, review the following security topics:\nBlocking public access to your Amazon S3 storage\nSetting default server-side encryption behavior for Amazon S3 buckets\nWhat S3 bucket policy can I use to comply with the AWS Config rule s3-bucket-ssl-requests-only?\nEnabling Amazon S3 server access logging\nWhen the AMI snapshots are copied to the S3 object, the data is then copied over TLS connections. You can store AMIs with encrypted snapshots, but the snapshots are decrypted as part of the store process.\nPermissions for storing and restoring AMIs using S3\nIf your IAM principals will store or restore AMIs using Amazon S3, you need to grant them the required permissions.\nThe following example policy includes all of the actions that are required to allow an IAM principal to carry out the store and restore tasks.\nYou can also create IAM policies that grant principals access to specific resources only. For more example policies, see Access management for AWS resources in the IAM User Guide.\nNote\nIf the snapshots that make up the AMI are encrypted, or if your account is enabled for encryption by default, your IAM principal must have permission to use the KMS key.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:DeleteObject\",\n                \"s3:GetObject\",\n                \"s3:ListBucket\",\n                \"s3:PutObject\",\n                \"s3:PutObjectTagging\",\n                \"s3:AbortMultipartUpload\",\n                \"ebs:CompleteSnapshot\",\n                \"ebs:GetSnapshotBlock\",\n                \"ebs:ListChangedBlocks\",\n                \"ebs:ListSnapshotBlocks\",\n                \"ebs:PutSnapshotBlock\",\n                \"ebs:StartSnapshot\",\n                \"ec2:CreateStoreImageTask\",\n                \"ec2:DescribeStoreImageTasks\",\n                \"ec2:CreateRestoreImageTask\",\n                \"ec2:GetEbsEncryptionByDefault\",\n                \"ec2:DescribeTags\",\n                \"ec2:CreateTags\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\nCreate store and restore image tasks\nTo store an AMI in an S3 bucket, start by creating a store image task. The time it takes to complete the task depends on the size of the AMI. You can track the progress of the task until it either succeeds or fails.\nTo create the store image task\nUse the create-store-image-task command. Specify the ID of the AMI and the name of the S3 bucket in which to store the AMI.\naws ec2 create-store-image-task \\\n    --image-id ami-1234567890abcdef0 \\\n    --bucket amzn-s3-demo-bucket\nThe following is example output.\n{\n  \"ObjectKey\": \"ami-1234567890abcdef0.bin\"\n}\nTo describe the progress of the store image task\nUse the describe-store-image-tasks command.\naws ec2 describe-store-image-tasks\nThe following is example output.\n{\n    \"StoreImageTaskResults\": [\n        {\n            \"AmiId\": \"ami-1234567890abcdef0\",\n            \"Bucket\": \"amzn-s3-demo-bucket\",\n            \"ProgressPercentage\": 17,\n            \"S3objectKey\": \"ami-1234567890abcdef0.bin\",\n            \"StoreTaskState\": \"InProgress\",\n            \"StoreTaskFailureReason\": null,\n            \"TaskStartTime\": \"2022-01-01T01:01:01.001Z\"\n        }\n    ]\n}\nTo create a restore image task\nUse the create-restore-image-task command. Using the values for S3ObjectKey and Bucket from the describe-store-image-tasks output, specify the object key of the AMI and the name of the S3 bucket to which the AMI was copied. Also specify a name for the restored AMI. The name must be unique for AMIs in the Region for this account.\nNote\nThe restored AMI gets a new AMI ID.\naws ec2 create-restore-image-task \\\n    --object-key ami-1234567890abcdef0.bin \\\n    --bucket amzn-s3-demo-bucket \\\n    --name \"New AMI Name\"\nThe following is example output.\n{\n   \"ImageId\": \"ami-0eab20fe36f83e1a8\"\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/identify-source-ami-used-to-create-new-ami.html",
        "content": "You can identify the source AMI used to create a new AMI by checking the Source AMI ID (console) or sourceImageId (AWS CLI) field on the new AMI. This field contains the ID of the original AMI that was copied to create the new AMI.\nYou can also find the Region where the source AMI was located by checking the Source AMI Region (console) or sourceImageRegion (AWS CLI) field.\nConsiderations\nThe ID and Region of the source AMI only appear if the AMI was created by using the following API commands:\nCreateImage \u2013 Creates an AMI from an instance.\nCopyImage \u2013 Copies an AMI within the same Region or across Regions in the same partition.\nCreateRestoreImageTask \u2013 Copies an AMI to another partition.\nIf the AMI was created with any other API command, the ID and Region of the source AMI don't appear.\nFor some older AMIs, the ID and Region of the source AMI might not be available.\nIf the source AMI has been deleted, the ID and Region fields of the source AMI still appear on the new AMI.\nFor AMIs created by using CreateImage (creates an AMI from an instance), the source AMI ID is the ID of the AMI used to launch the instance.\nConsole\nAWS CLI\nTo identify the source AMI used to create an AMI\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose AMIs.\nSelect the AMI to view its details.\nThe source AMI information appears in the following fields: Source AMI ID and Source AMI Region"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-last-launched-time.html",
        "content": "Amazon EC2 keeps track of the date and time when your AMI was last used to launch an instance. If you have an AMI that has not been used to launch an instance in a long time, consider whether the AMI is a good candidate for deregistration or deprecation.\nConsiderations\nWhen the AMI is used to launch an instance, there is a 24-hour delay before that usage is reported.\nYou must be the owner of the AMI to get the last launched time.\nThis data about AMI usage is available starting April 2017.\nConsole\nAWS CLI\nTo view the last launched time of an AMI\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigation pane, choose AMIs.\nFrom the filter bar, choose Owned by me.\nSelect the AMI, and then check the Last launched time field (if you selected the checkbox next to the AMI, it's located on the Details tab). The field shows the date and time when the AMI was last used to launch an instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-deprecate.html",
        "content": "You can deprecate an AMI to indicate that it is out of date and should not be used. You can also specify a future deprecation date for an AMI, indicating when the AMI will be out of date. For example, you might deprecate an AMI that is no longer actively maintained, or you might deprecate an AMI that has been superseded by a newer version. By default, deprecated AMIs do not appear in AMI listings, preventing new users from using out-of-date AMIs. However, existing users and launch services, such as launch templates and Auto Scaling groups, can continue to use a deprecated AMI by specifying its ID. To delete the AMI so that users and services cannot use it, you must deregister it.\nAfter an AMI is deprecated:\nFor AMI users, the deprecated AMI does not appear in DescribeImages API calls unless you specify its ID or specify that deprecated AMIs must appear. AMI owners continue to see deprecated AMIs in DescribeImages API calls.\nFor AMI users, the deprecated AMI is not available to select via the EC2 console. For example, a deprecated AMI does not appear in the AMI catalog in the launch instance wizard. AMI owners continue to see deprecated AMIs in the EC2 console.\nFor AMI users, if you know the ID of a deprecated AMI, you can continue to launch instances using the deprecated AMI by using the API, CLI, or the SDKs.\nLaunch services, such as launch templates and Auto Scaling groups, can continue to reference deprecated AMIs.\nEC2 instances that were launched using an AMI that is subsequently deprecated are not affected, and can be stopped, started, and rebooted.\nYou can deprecate both private and public AMIs.\nYou can also create Amazon Data Lifecycle Manager EBS-backed AMI policies to automate the deprecation of EBS-backed AMIs. For more information, see Automate AMI lifecycles.\nNote\nBy default, the deprecation date of all public AMIs is set to two years from the AMI creation date. You can set the deprecation date to earlier than two years. To cancel the deprecation date, or to move the deprecation to a later date, you must make the AMI private by only sharing it with specific AWS accounts.\nContents\nCosts\nLimitations\nDeprecate an AMI\nDescribe deprecated AMIs\nCancel AMI deprecation\nCosts\nWhen you deprecate an AMI, the AMI is not deleted. The AMI owner continues to pay for the AMI's snapshots. To stop paying for the snapshots, the AMI owner must delete the AMI by deregistering it.\nLimitations\nTo deprecate an AMI, you must be the owner of the AMI.\nDeprecate an AMI\nYou can deprecate an AMI on a specific date and time. You must be the AMI owner to perform this procedure.\nConsole\nAWS CLI\nTo deprecate an AMI on a specific date\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigator, choose AMIs.\nFrom the filter bar, choose Owned by me.\nSelect the AMI, and then choose Actions, Manage AMI Deprecation. You can select multiple AMIs to set the same deprecation date of several AMIs at once.\nSelect the Enable checkbox, and then enter the deprecation date and time.\nThe upper limit for the deprecation date is 10 years from now, except for public AMIs, where the upper limit is 2 years from the creation date. You can\u2019t specify a date in the past.\nChoose Save.\nCheck when an AMI was last used\nLastLaunchedTime is a timestamp that indicates when your AMI was last used to launch an instance. AMIs that have not been used recently to launch an instance might be good candidates for deprecation or deregistering.\nNote\nWhen an AMI is used to launch an instance, there is a 24-hour delay before that usage is reported.\nlastLaunchedTime data is available starting April 2017.\nConsole\nAWS CLI\nTo view the last launched time of an AMI\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigator, choose AMIs.\nFrom the filter bar, choose Owned by me.\nSelect the AMI, and then check the Last launched time field (if you selected the checkbox next to the AMI, it's located on the Details tab). The field shows the date and time when the AMI was last used to launch an instance.\nDescribe deprecated AMIs\nYou can view the deprecation date and time of an AMI, and filter all the AMIs by deprecation date. You can also use the AWS CLI to describe all the AMIs that have been deprecated, where the deprecation date is in the past.\nConsole\nAWS CLI\nTo view the deprecation date of an AMI\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigator, choose AMIs, and then select the AMI.\nCheck the Deprecation time field (if you selected the checkbox next to the AMI, it's located on the Details tab). The field shows the deprecation date and time of the AMI. If the field is empty, the AMI is not deprecated.\nTo filter AMIs by deprecation date\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigator, choose AMIs.\nFrom the filter bar, choose Owned by me or Private images (private images include AMIs that are shared with you as well as owned by you).\nIn the Search bar, enter Deprecation time (as you enter the letters, the Deprecation time filter appears), and then choose an operator and a date and time.\nCancel AMI deprecation\nYou can cancel the deprecation of an AMI, which removes the date and time from the Deprecation time field (console) or the DeprecationTime field from the describe-images output (AWS CLI). You must be the AMI owner to perform this procedure.\nConsole\nAWS CLI\nTo cancel the deprecation of an AMI\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigator, choose AMIs.\nFrom the filter bar, choose Owned by me.\nSelect the AMI, and then choose Actions, Manage AMI Deprecation. You can select multiple AMIs to cancel the deprecation of several AMIs at once.\nClear the Enable checkbox, and then choose Save."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/disable-an-ami.html",
        "content": "You can disable an AMI to prevent it from being used for instance launches. You can't launch new instances from a disabled AMI. You can re-enable a disabled AMI so that it can be used again for instance launches.\nWarning\nDisabling an AMI removes all its launch permissions.\nWhen an AMI is disabled:\nThe AMI's state changes to disabled.\nA disabled AMI can't be shared. If an AMI was public or previously shared, it is made private. If an AMI was shared with an AWS account, organization, or Organizational Unit, they lose access to the disabled AMI.\nA disabled AMI does not appear in DescribeImages API calls by default.\nA disabled AMI does not appear under the Owned by me console filter. To find disabled AMIs, use the Disabled images console filter.\nA disabled AMI is not available to select for instance launches in the EC2 console. For example, a disabled AMI does not appear in the AMI catalog in the launch instance wizard or when creating a launch template.\nLaunch services, such as launch templates and Auto Scaling groups, can continue to reference disabled AMIs. Subsequent instance launches from a disabled AMI will fail, so we recommend updating launch templates and Auto Scaling groups to reference available AMIs only.\nEC2 instances that were previously launched using an AMI that is subsequently disabled are not affected, and can be stopped, started, and rebooted.\nYou can't delete snapshots associated with disabled AMIs. Attempting to delete an associated snapshot results in the snapshot is currently in use error.\nWhen an AMI is re-enabled:\nThe AMI's state changes to available, and it can be used to launch instances.\nThe AMI can be shared.\nAWS accounts, organizations, and Organizational Units that lost access to the AMI when it was disabled do not regain access automatically, but the AMI can be shared with them again.\nYou can disable both private and public AMIs.\nYou can archive the snapshots that are associated with your disabled EBS-backed AMIs. This can help you to reduce the storage costs associated with your rarely-used AMIs that need to be retained for long periods. For more information, see Archive Amazon EBS snapshots in the Amazon EBS User Guide.\nContents\nCosts\nPrerequisites\nRequired IAM permissions\nDisable an AMI\nDescribe disabled AMIs\nRe-enable a disabled AMI\nCosts\nWhen you disable an AMI, the AMI is not deleted. If the AMI is an EBS-backed AMI, you continue to pay for the AMI's EBS snapshots. If you want to keep the AMI, you might be able to reduce your storage costs by archiving the snapshots. For more information, see Archive Amazon EBS snapshots in the Amazon EBS User Guide. If you don't want to keep the AMI and its snapshots, you must deregister the AMI and delete the snapshots. For more information, see EBS-backed AMIs.\nPrerequisites\nTo disable or re-enable an AMI, you must be the owner of the AMI.\nRequired IAM permissions\nTo disable and re-enable an AMI, you must have the following IAM permissions:\nec2:DisableImage\nec2:EnableImage\nDisable an AMI\nYou can disable an AMI by using the EC2 console or the AWS Command Line Interface (AWS CLI). You must be the AMI owner to perform this procedure.\nConsole\nAWS CLI\nTo disable an AMI\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigation pane, choose AMIs.\nFrom the filter bar, choose Owned by me.\nSelect the AMI, and then choose Actions, Disable AMI. You can select multiple AMIs to disable at once.\nIn the Disable AMI window, choose Disable AMI.\nDescribe disabled AMIs\nYou can view disabled AMIs in the EC2 console and by using the AWS CLI.\nYou must be the AMI owner to view disabled AMIs. Because disabled AMIs are made private, you can't view disabled AMIs if you're not the owner.\nConsole\nAWS CLI\nTo view disabled AMIs\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigation pane, choose AMIs.\nFrom the filter bar, choose Disabled images.\nRe-enable a disabled AMI\nYou can re-enable a disabled AMI. You must be the AMI owner to perform this procedure.\nConsole\nAWS CLI\nTo re-enable a disabled AMI\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigation pane, choose AMIs.\nFrom the filter bar, choose Disabled images.\nSelect the AMI, and then choose Actions, Enable AMI. You can select multiple AMIs to re-enable several AMIs at once.\nIn the Enable AMI window, choose Enable."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/deregister-ami.html",
        "content": "When you deregister an AMI, Amazon EC2 permanently deletes it. After you deregister an AMI, you can't use it to launch new instances. You might consider deregistering an AMI when you have finished using it.\nTo protect against accidental or malicious deregistering of an AMI, you can turn on deregistration protection. If you accidentally deregister an EBS-backed AMI, you can use the Recycle Bin to restore it only if you restore it within the allowed time period before it is permanently deleted.\nDeregistering an AMI has no effect on any instances that were launched from the AMI. You can continue to use these instances. Deregistering an AMI also has no effect on any snapshots that were created during the AMI creation process. You'll continue to incur usage costs for these instances and storage costs for the snapshots. Therefore, to avoid incurring unnecessary costs, we recommend that you terminate any instances and delete any snapshots that you do not need. For more information, see Avoid costs from unused resources.\nFor instances launched from an AMI that is subsequently deregistered, you can still view some high-level information about the AMI by using the describe-instance-image-metadata AWS CLI command. For more information, see describe-instance-image-metadata.\nContents\nConsiderations\nDeregister an AMI\nAvoid costs from unused resources\nProtect an Amazon EC2 AMI from deregistration\nConsiderations\nYou can't deregister an AMI that is not owned by your account.\nYou can't use Amazon EC2 to deregister an AMI that is managed by the AWS Backup service. Instead, use AWS Backup to delete the corresponding recovery points in the backup vault. For more information, see Deleting backups in the AWS Backup Developer Guide.\nDeregister an AMI\nUse any of the following methods to deregister an EBS-backed AMI or instance store-backed AMI.\nTip\nTo avoid incurring unnecessary costs, you should delete any resources that you do not need. For example, for EBS-backed AMIs, if you do not need the snapshots associated with the deregistered AMI, you should delete them. For more information, see Avoid costs from unused resources.\nConsole\nAWS CLI\nPowerShell\nTo deregister an AMI\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose AMIs.\nFrom the filter bar, choose Owned by me to list your available AMIs, or choose Disabled images to list your disabled AMIs.\nSelect the AMI to deregister.\nChoose Actions, Deregister AMI.\nWhen you are prompted for confirmation, choose Deregister AMI.\nIt might take a few minutes before the console removes the AMI from the list. Choose Refresh to refresh the status.\nAvoid costs from unused resources\nWhen you deregister an AMI, you don't delete the resources that are associated with the AMI. These resources include the snapshots for EBS-backed AMIs and the files in Amazon S3 for instance store-backed AMIs. When you deregister an AMI, you also don't terminate or stop any instances launched from the AMI.\nYou will continue to incur costs for storing the snapshots and files, and you will incur costs for any running instances.\nTo avoid incurring these types of unnecessary costs, we recommend deleting any resources that you don't need.\nEBS-backed AMIs\nUse any of the following methods to delete the resources associated with your EBS-backed AMI.\nConsole\nAWS CLI\nPowerShell\nTo delete resources associated with your EBS-backed AMI\nDeregister the AMI.\nNote the AMI ID\u2014this can help you find the snapshots to delete in the next step.\nDelete snapshots that you don't need.\nThe ID of the associated AMI is displayed in the Description column on the Snapshots screen.\nTerminate instances that you don't need.\nThe following diagram illustrates the flow for you to delete resources associated with an EBS-backed AMI.\nInstance store-backed AMI"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-deregistration-protection.html",
        "content": "You can turn on deregistration protection on an AMI to prevent accidental or malicious deletion. When you turn on deregistration protection, the AMI can\u2019t be deregistered by any user, regardless of their IAM permissions. If you want to deregister the AMI, you must first turn off the deregistration protection on it.\nWhen you turn on deregistration protection on an AMI, you have the option to include a 24-hour cooldown period. This cooldown period is the time during which deregistration protection remains in effect after you turn it off. During this cooldown period, the AMI can\u2019t be deregistered. When the cooldown period ends, the AMI can be deregistered.\nDeregistration protection is turned off by default on all existing and new AMIs.\nTurn on deregistration protection\nUse the following procedures to turn on deregistration protection.\nConsole\nAWS CLI\nTo turn on deregistration protection on an AMI\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose AMIs.\nFrom the filter bar, choose Owned by me to list your available AMIs, or choose Disabled images to list your disabled AMIs.\nSelect the AMI on which you want to turn on deregistration protection, and then choose Actions, Manage AMI deregistration protection.\nIn the Manage AMI deregistration protection dialog box, you can turn on deregistration protection with or without a cooldown period. Choose one of the following options:\nEnable with a 24-hour cooldown period \u2013 With a cooldown period, the AMI can\u2019t be deregistered for 24 hours when deregistration protection is turned off.\nEnable without cooldown \u2013 Without a cooldown period, the AMI can be deregistered immediately when deregistration protection is turned off.\nChoose Save.\nTurn off deregistration protection\nUse the following procedures to turn off deregistration protection.\nIf you chose to include a 24-hour cooldown period when you turned on deregistration protection for the AMI, then, when you turn off deregistration protection, you won\u2019t immediately be able to deregister the AMI. The cooldown period is the 24-hour time period during which deregistration protection remains in effect even after you turn it off. During this cooldown period, the AMI can\u2019t be deregistered. After the cooldown period ends, the AMI can be deregistered.\nConsole\nAWS CLI\nTo turn off deregistration protection on an AMI\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose AMIs.\nFrom the filter bar, choose Owned by me to list your available AMIs, or choose Disabled images to list your disabled AMIs.\nSelect the AMI to turn off deregistration protection, and then choose Actions, Manage AMI deregistration protection.\nIn the Manage AMI deregistration protection dialog box, choose Disable.\nChoose Save."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html",
        "content": "When a computer boots, the first software that it runs is responsible for initializing the platform and providing an interface for the operating system to perform platform-specific operations.\nIn Amazon EC2, two variants of the boot mode software are supported: Unified Extensible Firmware Interface (UEFI) and Legacy BIOS.\nPossible boot mode parameters on an AMI\nAn AMI can have one of the following boot mode parameter values: uefi, legacy-bios, or uefi-preferred. The AMI boot mode parameter is optional. For AMIs with no boot mode parameter, the instances launched from these AMIs use the default boot mode value of the instance type.\nPurpose of the AMI boot mode parameter\nThe AMI boot mode parameter signals to Amazon EC2 which boot mode to use when launching an instance. When the boot mode parameter is set to uefi, EC2 attempts to launch the instance on UEFI. If the operating system is not configured to support UEFI, the instance launch will be unsuccessful.\nUEFI Preferred boot mode parameter\nYou can create AMIs that support both UEFI and Legacy BIOS by using the uefi-preferred boot mode parameter. When the boot mode parameter is set to uefi-preferred, and if the instance type supports UEFI, the instance is launched on UEFI. If the instance type does not support UEFI, the instance is launched on Legacy BIOS.\nWarning\nSome features, like UEFI Secure Boot, are only available on instances that boot on UEFI. When you use the uefi-preferred AMI boot mode parameter with an instance type that does not support UEFI, the instance will launch as Legacy BIOS and the UEFI-dependent feature will be disabled. If you rely on the availability of a UEFI-dependent feature, set your AMI boot mode parameter to uefi.\nDefault boot modes for instance types\nGraviton instance types: UEFI\nIntel and AMD instance types: Legacy BIOS\nZone support\nUEFI boot is not supported in Local Zones, Wavelength Zones, or AWS Outposts.\nBoot mode topics\nRequirements to launch an EC2 instance in UEFI boot mode\nDetermine the boot mode parameter of an Amazon EC2 AMI\nDetermine the supported boot modes of an EC2 instance type\nDetermine the boot mode of an EC2 instance\nDetermine the boot mode of the operating system for your EC2 instance\nSet the boot mode of an Amazon EC2 AMI\nUEFI variables for Amazon EC2 instances\nUEFI Secure Boot for Amazon EC2 instances"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/launch-instance-boot-mode.html",
        "content": "The boot mode of an instance is determined by the configuration of the AMI, the operating system contained in it, and the instance type. To launch an instance in UEFI boot mode, you must meet the following requirements.\nAMI\nThe AMI must be configured for UEFI as follows:\nOperating system \u2013 The operating system contained in the AMI must be configured to use UEFI; otherwise, the instance launch will fail. For more information, see Determine the boot mode of the operating system for your EC2 instance.\nAMI boot mode parameter \u2013 The boot mode parameter of the AMI must be set to uefi or uefi-preferred. For more information, see Determine the boot mode parameter of an Amazon EC2 AMI.\nLinux \u2013 The following Linux AMIs support UEFI:\nAmazon Linux 2023\nAmazon Linux 2 (Graviton instance types only)\nFor other Linux AMIs, you must configure the AMI, import the AMI through VM Import/Export, or import the AMI through CloudEndure.\nWindows \u2013 The following Windows AMIs support UEFI:\nTPM-Windows_Server-2022-English-Full-Base\nTPM-Windows_Server-2022-English-Core-Base\nTPM-Windows_Server-2019-English-Full-Base\nTPM-Windows_Server-2019-English-Core-Base\nTPM-Windows_Server-2016-English-Full-Base\nTPM-Windows_Server-2016-English-Core-Base\nInstance type\nAll instances built on the AWS Nitro System support both UEFI and Legacy BIOS, except the following: bare metal instances, DL1, G4ad, P4, u-3tb1, u-6tb1, u-9tb1, u-12tb1, u-18tb1, u-24tb1, and VT1. For more information, see Determine the supported boot modes of an EC2 instance type.\nThe following table shows that the boot mode of an instance (indicated by the Resulting instance boot mode column) is determined by a combination of the boot mode parameter of the AMI (column 1), the boot mode configuration of the operating system contained in the AMI (column 2), and the boot mode support of the instance type (column 3).\nAMI boot mode parameter Operating system boot mode configuration Instance type boot mode support Resulting instance boot mode\nUEFI UEFI UEFI UEFI\nLegacy BIOS Legacy BIOS Legacy BIOS Legacy BIOS\nUEFI Preferred UEFI UEFI UEFI\nUEFI Preferred UEFI UEFI and Legacy BIOS UEFI\nUEFI Preferred Legacy BIOS Legacy BIOS Legacy BIOS\nUEFI Preferred Legacy BIOS UEFI and Legacy BIOS Legacy BIOS\nNo boot mode specified - ARM UEFI UEFI UEFI\nNo boot mode specified - x86 Legacy BIOS UEFI and Legacy BIOS Legacy BIOS"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot-mode.html",
        "content": "The AMI boot mode parameter is optional. An AMI can have one of the following boot mode parameter values: uefi, legacy-bios, or uefi-preferred.\nSome AMIs don't have a boot mode parameter. When an AMI has no boot mode parameter, the instances launched from the AMI use the default value of the instance type, which is uefi on Graviton, and legacy-bios on Intel and AMD instance types.\nConsole\nAWS CLI\nPowerShell\nTo determine the boot mode parameter of an AMI (console)\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose AMIs, and then select the AMI.\nInspect the Boot mode field.\nA value of uefi indicates that the AMI supports UEFI.\nA value of uefi-preferred indicates that the AMI supports both UEFI and Legacy BIOS.\nIf there is no value, the instances launched from the AMI use the default value of the instance type.\nTo determine the boot mode parameter of an AMI when launching an instance (console)\nWhen launching an instance using the launch instance wizard, at the step to select an AMI, inspect the Boot mode field. For more information, see Application and OS Images (Amazon Machine Image)."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-type-boot-mode.html",
        "content": "You can use the AWS CLI or the Tools for PowerShell to determine the supported boot modes of an instance type.\nTo determine the supported boot modes of an instance type\nYou can use the following methods to determine the supported boot modes of an instance type.\nAWS CLI\nPowerShell\nUse the describe-instance-types command to determine the supported boot modes of an instance type. The --query parameter filters the output to return only the supported boot modes.\nThe following example shows that m5.2xlarge supports both UEFI and Legacy BIOS boot modes.\naws ec2 describe-instance-types --region us-east-1 --instance-types m5.2xlarge --query \"InstanceTypes[*].SupportedBootModes\"\nThe following is example output.\n[\n    [\n        \"legacy-bios\",\n        \"uefi\"\n    ]\n]\nThe following example shows that t2.xlarge supports only Legacy BIOS.\naws ec2 describe-instance-types --region us-east-1 --instance-types t2.xlarge --query \"InstanceTypes[*].SupportedBootModes\"\nThe following is example output.\n[\n    [\n        \"legacy-bios\"\n    ]\n]\nTo determine the instance types that support UEFI\nYou can use the following methods to determine the instance types that support UEFI;\nAWS CLI\nPowerShell\nThe available instance types vary by AWS Region. To see the available instance types that support UEFI in a Region, use the describe-instance-types command with the --region parameter. If you omit the --region parameter, your configured default Region is used in the request. Include the --filters parameter to scope the results to the instance types that support UEFI and the --query parameter to scope the output to the value of InstanceType.\naws ec2 describe-instance-types --filters Name=supported-boot-mode,Values=uefi --query \"InstanceTypes[*].[InstanceType]\" --output text | sort\n     \nThe following is example output.\na1.2xlarge\na1.4xlarge\na1.large\na1.medium\na1.metal\na1.xlarge\nc5.12xlarge\n...\nTo determine the instance types that support UEFI Secure Boot and persist non-volatile variables\nBare metal instances do not support UEFI Secure Boot and non-volatile variables, so these examples exclude them from the output. For information about UEFI Secure Boot, see UEFI Secure Boot for Amazon EC2 instances.\nAWS CLI\nPowerShell\nUse the describe-instance-types command, and exclude the bare metal instances from the output by including the Name=bare-metal,Values=false filter.\naws ec2 describe-instance-types --filters Name=supported-boot-mode,Values=uefi Name=bare-metal,Values=false --query \"InstanceTypes[*].[InstanceType]\" --output text | sort\nThe following is example output.\na1.2xlarge\na1.4xlarge\na1.large\na1.medium\n..."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-boot-mode.html",
        "content": "The boot mode of an instance is displayed in the Boot mode field in the Amazon EC2 console, and by the currentInstanceBootMode parameter in the AWS CLI.\nWhen an instance is launched, the value for its boot mode parameter is determined by the value of the boot mode parameter of the AMI used to launch it, as follows:\nAn AMI with a boot mode parameter of uefi creates an instance with a currentInstanceBootMode parameter of uefi.\nAn AMI with a boot mode parameter of legacy-bios creates an instance with a currentInstanceBootMode parameter of legacy-bios.\nAn AMI with a boot mode parameter of uefi-preferred creates an instance with a currentInstanceBootMode parameter of uefi if the instance type supports UEFI; otherwise, it creates an instance with a currentInstanceBootMode parameter of legacy-bios.\nAn AMI with no boot mode parameter value creates an instance with a currentInstanceBootMode parameter value that is dependent on whether the AMI architecture is ARM or x86 and the supported boot mode of the instance type. The default boot mode is uefi on Graviton instance types, and legacy-bios on Intel and AMD instance types.\nConsole\nAWS CLI\nPowerShell\nTo determine the boot mode of an instance (console)\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances, and then select your instance.\nOn the Details tab, inspect the Boot mode field."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/os-boot-mode.html",
        "content": "The boot mode of the AMI guides Amazon EC2 on which boot mode to use to boot an instance. To view whether the operating system of your instance is configured for UEFI, you need to connect to your instance using SSH (Linux instances) or RDP (Windows instances).\nUse the instructions for your instance's operating system.\nLinux\nWindows"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/set-ami-boot-mode.html",
        "content": "When you create an AMI using the register-image command, you can set the boot mode of the AMI to either uefi, legacy-bios, or uefi-preferred.\nWhen the AMI boot mode is set to uefi-preferred, the instance boots as follows:\nFor instance types that support both UEFI and Legacy BIOS (for example, m5.large), the instance boots using UEFI.\nFor instance types that support only Legacy BIOS (for example, m4.large), the instance boots using Legacy BIOS.\nNote\nIf you set the AMI boot mode to uefi-preferred, the operating system must support the ability to boot both UEFI and Legacy BIOS.\nCurrently, you can't use the register-image command to create an AMI that supports both NitroTPM and UEFI Preferred.\nWarning\nSome features, like UEFI Secure Boot, are only available on instances that boot on UEFI. When you use the uefi-preferred AMI boot mode parameter with an instance type that does not support UEFI, the instance will launch as Legacy BIOS and the UEFI-dependent feature will be disabled. If you rely on the availability of a UEFI-dependent feature, set your AMI boot mode parameter to uefi.\nTo convert an existing Legacy BIOS-based instance to UEFI, or an existing UEFI-based instance to Legacy BIOS, you need to perform a number of steps: First, modify the instance's volume and operating system to support the selected boot mode. Then, create a snapshot of the volume. Finally, use register-image to create the AMI using the snapshot.\nYou can't set the boot mode of an AMI using the create-image command. With create-image, the AMI inherits the boot mode of the EC2 instance used for creating the AMI. For example, if you create an AMI from an EC2 instance running on Legacy BIOS, the AMI boot mode will be configured as legacy-bios. If you create an AMI from an EC2 instance that was launched using an AMI with a boot mode set to uefi-preferred, the AMI that is created will also have its boot mode set to uefi-preferred.\nWarning\nSetting the AMI boot mode parameter does not automatically configure the operating system for the specified boot mode. Before proceeding with these steps, you must first make suitable modifications to the instance's volume and operating system to support booting using the selected boot mode; otherwise, the resulting AMI will not be usable. For example, if you are converting a Legacy BIOS-based Windows instance to UEFI, you can use the MBR2GPT tool from Microsoft to convert the system disk from MBR to GPT. The modifications that are required are operating system-specific. For more information, see the manual for your operating system.\nTo set the boot mode of an AMI (AWS CLI)\nMake suitable modifications to the instance's volume and operating system to support booting via the selected boot mode. The modifications that are required are operating system-specific. For more information, see the manual for your operating system.\nNote\nIf you don't perform this step, the AMI will not be usable.\nTo find the volume ID of the instance, use the describe-instances command. You'll create a snapshot of this volume in the next step.\naws ec2 describe-instances --region us-east-1 --instance-ids i-1234567890abcdef0 \nExpected output\n...\n            \"BlockDeviceMappings\": [\n                        {\n                            \"DeviceName\": \"/dev/sda1\",\n                            \"Ebs\": {\n                                \"AttachTime\": \"\",\n                                \"DeleteOnTermination\": true,\n                                \"Status\": \"attached\",\n                                \"VolumeId\": \"vol-1234567890abcdef0\"\n                            }\n                        }\n                        ...\nTo create a snapshot of the volume, use the create-snapshot command. Use the volume ID from the previous step.\naws ec2 create-snapshot --region us-east-1 --volume-id vol-1234567890abcdef0 --description \"add text\"\nExpected output\n{\n \"Description\": \"add text\",\n \"Encrypted\": false,\n \"OwnerId\": \"123\",\n \"Progress\": \"\",\n \"SnapshotId\": \"snap-01234567890abcdef\",\n \"StartTime\": \"\",\n \"State\": \"pending\",\n \"VolumeId\": \"vol-1234567890abcdef0\",\n \"VolumeSize\": 30,\n \"Tags\": []\n}\nNote the snapshot ID in the output from the previous step.\nWait until the snapshot creation is completed before going to the next step. To query the state of the snapshot, use the describe-snapshots command.\naws ec2 describe-snapshots --region us-east-1 --snapshot-ids snap-01234567890abcdef\nExample output\n{\n    \"Snapshots\": [\n        {\n            \"Description\": \"This is my snapshot\",\n            \"Encrypted\": false,\n            \"VolumeId\": \"vol-049df61146c4d7901\",\n            \"State\": \"completed\",\n            \"VolumeSize\": 8,\n            \"StartTime\": \"2019-02-28T21:28:32.000Z\",\n            \"Progress\": \"100%\",\n            \"OwnerId\": \"012345678910\",\n            \"SnapshotId\": \"snap-01234567890abcdef\",\n...\nTo create a new AMI, use the register-image command. Use the snapshot ID that you noted in the earlier step.\nTo set the boot mode to UEFI, add the --boot-mode parameter to the command and specify uefi as the value.\naws ec2 register-image \\\n   --region us-east-1 \\\n   --description \"add description\" \\\n   --name \"add name\" \\\n   --block-device-mappings \"DeviceName=/dev/sda1,Ebs={SnapshotId=snap-01234567890abcdef,DeleteOnTermination=true}\" \\\n   --architecture x86_64 \\\n   --root-device-name /dev/sda1 \\\n   --virtualization-type hvm \\\n   --ena-support \\\n   --boot-mode uefi\nTo set the boot mode to uefi-preferred, add the --boot-mode parameter to the command and specify uefi-preferred as the value.\naws ec2 register-image \\\n   --region us-east-1 \\\n   --description \"add description\" \\\n   --name \"add name\" \\\n   --block-device-mappings \"DeviceName=/dev/sda1,Ebs={SnapshotId=snap-01234567890abcdef,DeleteOnTermination=true}\" \\\n   --architecture x86_64 \\\n   --root-device-name /dev/sda1 \\\n   --virtualization-type hvm \\\n   --ena-support \\\n   --boot-mode uefi-preferred\nExpected output\n{\n\"ImageId\": \"ami-new_ami_123\"\n}\nTo verify that the newly-created AMI has the boot mode that you specified in the previous step, use the describe-images command.\naws ec2 describe-images --region us-east-1 --image-id ami-new_ami_123\nExpected output\n{\n  \"Images\": [\n   {\n   \"Architecture\": \"x86_64\",\n   \"CreationDate\": \"2021-01-06T14:31:04.000Z\",\n   \"ImageId\": \"ami-new_ami_123\",\n   \"ImageLocation\": \"\",\n   ...\n   \"BootMode\": \"uefi\"\n   }\n   ]\n}\nLaunch a new instance using the newly-created AMI.\nIf the AMI boot mode is uefi or legacy-bios, instances created from this AMI will have the same boot mode as the AMI. If the AMI boot mode is uefi-preferred, the instance will boot using UEFI if the instance type supports UEFI; otherwise, the instance will boot using Legacy BIOS.\nTo verify that the new instance has the expected boot mode, use the describe-instances command."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/uefi-variables.html",
        "content": "When you launch an instance where the boot mode is set to UEFI, a key-value store for variables is created. The store can be used by UEFI and the instance operating system for storing UEFI variables.\nUEFI variables are used by the boot loader and the operating system to configure early system startup. They allow the operating system to manage certain settings of the boot process, like the boot order, or managing the keys for UEFI Secure Boot.\nWarning\nAnyone who can connect to the instance (and potentially any software running on the instance), or anyone with permissions to use the GetInstanceUefiData API on the instance can read the variables. You should never store sensitive data, such as passwords or personally identifiable information, in the UEFI variable store.\nUEFI variable persistence\nFor instances that were launched on or before May 10, 2022, UEFI variables are wiped on reboot or stop.\nFor instances that are launched on or after May 11, 2022, UEFI variables that are marked as non-volatile are persisted on reboot and stop/start.\nBare metal instances don't preserve UEFI non-volatile variables across instance stop/start operations."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/uefi-secure-boot.html",
        "content": "UEFI Secure Boot builds on the long-standing secure boot process of Amazon EC2, and provides additional defense-in-depth that helps customers secure software from threats that persist across reboots. It ensures that the instance only boots software that is signed with cryptographic keys. The keys are stored in the key database of the UEFI non-volatile variable store. UEFI Secure Boot prevents unauthorized modification of the instance boot flow.\nContents\nHow UEFI Secure Boot works with Amazon EC2 instances\nLaunch an Amazon EC2 instance with UEFI Secure Boot support\nVerify whether an Amazon EC2 instance is enabled for UEFI Secure Boot\nCreate a Linux AMI with custom UEFI Secure Boot keys\nCreate the AWS binary blob for UEFI Secure Boot"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/how-uefi-secure-boot-works.html",
        "content": "UEFI Secure Boot is a feature specified in UEFI, which provides verification about the state of the boot chain. It is designed to ensure that only cryptographically verified UEFI binaries are executed after the self-initialization of the firmware. These binaries include UEFI drivers and the main bootloader, as well as chain-loaded components.\nUEFI Secure Boot specifies four key databases, which are used in a chain of trust. The databases are stored in the UEFI variable store.\nThe chain of trust is as follows:\nPlatform key (PK) database\nThe PK database is the root of trust. It contains a single public PK key that is used in the chain of trust for updating the key exchange key (KEK) database.\nTo change the PK database, you must have the private PK key to sign an update request. This includes deleting the PK database by writing an empty PK key.\nKey exchange key (KEK) database\nThe KEK database is a list of public KEK keys that are used in the chain of trust for updating the signature (db) and denylist (dbx) databases.\nTo change the public KEK database, you must have the private PK key to sign an update request.\nSignature (db) database\nThe db database is a list of public keys and hashes that are used in the chain of trust to validate all UEFI boot binaries.\nTo change the db database, you must have the private PK key or any of the private KEK keys to sign an update request.\nSignature denylist (dbx) database\nThe dbx database is a list of public keys and binary hashes that are not trusted, and are used in the chain of trust as a revocation file.\nThe dbx database always takes precedence over all other key databases.\nTo change the dbx database, you must have the private PK key or any of the private KEK keys to sign an update request.\nThe UEFI Forum maintains a publicly available dbx for many known-bad binaries and certs at https://uefi.org/revocationlistfile.\nImportant\nUEFI Secure Boot enforces signature validation on any UEFI binaries. To permit execution of a UEFI binary in UEFI Secure Boot, you sign it with any of the private db keys described above.\nBy default, UEFI Secure Boot is disabled and the system is in SetupMode. When the system is in SetupMode, all key variables can be updated without a cryptographic signature. When the PK is set, UEFI Secure Boot is enabled and the SetupMode is exited."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/launch-instance-with-uefi-sb.html",
        "content": "When you launch an Amazon EC2 instance with a supported AMI and a supported instance type, that instance will automatically validate UEFI boot binaries against its UEFI Secure Boot database. No additional configuration is required. You can also configure UEFI Secure Boot on an instance after launch.\nNote\nUEFI Secure Boot protects your instance and its operating system against boot flow modifications. If you create a new AMI from a source AMI that has UEFI Secure Boot enabled and modify certain parameters during the copy process, such as changing the UefiData within the AMI, you can disable UEFI Secure Boot.\nContents\nSupported AMIs\nSupported instance types\nSupported AMIs\nLinux AMIs\nTo launch a Linux instance, the Linux AMI must have UEFI Secure Boot enabled.\nAmazon Linux supports UEFI Secure Boot starting with AL2023 release 2023.1. However, UEFI Secure Boot isn't enabled in the default AMIs. For more information, see UEFI Secure Boot in the AL2023 User Guide. Older versions of Amazon Linux AMIs aren't enabled for UEFI Secure Boot. To use a supported AMI, you must perform a number of configuration steps on your own Linux AMI. For more information, see Create a Linux AMI with custom UEFI Secure Boot keys.\nWindows AMIs\nTo launch a Windows instance, the Windows AMI must have UEFI Secure Boot enabled. The following Windows AMIs are preconfigured to enable UEFI Secure Boot with Microsoft keys:\nTPM-Windows_Server-2022-English-Core-Base\nTPM-Windows_Server-2022-English-Full-Base\nTPM-Windows_Server-2022-English-Full-SQL_2022_Enterprise\nTPM-Windows_Server-2022-English-Full-SQL_2022_Standard\nTPM-Windows_Server-2019-English-Core-Base\nTPM-Windows_Server-2019-English-Full-Base\nTPM-Windows_Server-2019-English-Full-SQL_2019_Enterprise\nTPM-Windows_Server-2019-English-Full-SQL_2019_Standard\nTPM-Windows_Server-2016-English-Core-Base\nTPM-Windows_Server-2016-English-Full-Base\nCurrently, we do not support importing Windows with UEFI Secure Boot by using the import-image command.\nSupported instance types\nAll virtualized instance types that support UEFI also support UEFI Secure Boot. For the instance types that support UEFI Secure Boot, see Requirements for UEFI boot mode.\nNote\nBare metal instance types do not support UEFI Secure Boot."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/verify-uefi-secure-boot.html",
        "content": "You can use the following procedures to determine whether an Amazon EC2 is enabled for UEFI Secure Boot.\nLinux instances\nYou can use the mokutil utility to verify whether a Linux instance is enabled for UEFI Secure Boot. If mokutil is not installed on your instance, you must install it. For the installation instructions for Amazon Linux 2, see Find and install software packages on an Amazon Linux 2 instance. For other Linux distributions, see their specific documentation.\nTo verify whether a Linux instance is enabled for UEFI Secure Boot\nConnect to your instance and run the following command as root in a terminal window.\nmokutil --sb-state \nThe following is example output.\nIf UEFI Secure Boot is enabled, the output contains SecureBoot enabled.\nIf UEFI Secure Boot is not enabled, the output contains SecureBoot disabled or Failed to read SecureBoot.\nWindows instances"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/create-ami-with-uefi-secure-boot.html",
        "content": "This procedure shows you how to create a Linux AMI with UEFI Secure Boot and custom-made private keys. Amazon Linux supports UEFI Secure Boot starting with AL2023 release 2023.1. For more information, see UEFI Secure Boot in the AL2023 User Guide.\nImportant\nThe following procedure is intended for advanced users only. You must have sufficient knowledge of SSL and Linux distribution boot flow to use these procedures.\nPrerequisites\nThe following tools will be used:\nOpenSSL \u2013 https://www.openssl.org/\nefivar \u2013 https://github.com/rhboot/efivar\nefitools \u2013 https://git.kernel.org/pub/scm/linux/kernel/git/jejb/efitools.git/\nget-instance-uefi-data command\nYour Linux instance must have been launched with a Linux AMI that supports UEFI boot mode, and have non-volatile data present.\nNewly created instances without UEFI Secure Boot keys are created in SetupMode, which allows you to enroll your own keys. Some AMIs come preconfigured with UEFI Secure Boot and you cannot change the existing keys. If you want to change the keys, you must create a new AMI based on the original AMI.\nYou have two ways to propagate the keys in the variable store, which are described in Option A and Option B that follow. Option A describes how to do this from within the instance, mimicking the flow of real hardware. Option B describes how to create a binary blob, which is then passed as a base64-encoded file when you create the AMI. For both options, you must first create the three key pairs, which are used for the chain of trust.\nTo create a Linux AMI that supports UEFI Secure Boot, first create the three key pairs, and then complete either Option A or Option B, but not both:\nStep 1: Create three key pairs\nStep 2 (Option A): Add keys to the variable store from within the instance\nStep 2 (Option B): Create a binary blob containing a pre-filled variable store"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/aws-binary-blob-creation.html",
        "content": "You can use the following steps to customize the UEFI Secure Boot variables during AMI creation. The KEK that is used in these steps is current as of September 2021. If Microsoft updates the KEK, you must use the latest KEK.\nTo create the AWS binary blob\nCreate an empty PK signature list.\ntouch empty_key.crt\ncert-to-efi-sig-list empty_key.crt PK.esl\nDownload the KEK certificates.\nhttps://go.microsoft.com/fwlink/?LinkId=321185\nWrap the KEK certificates in a UEFI signature list (siglist).\nsbsiglist --owner 77fa9abd-0359-4d32-bd60-28f4e78f784b --type x509 --output MS_Win_KEK.esl MicCorKEKCA2011_2011-06-24.crt \nDownload Microsoft's db certificates.\nhttps://www.microsoft.com/pkiops/certs/MicWinProPCA2011_2011-10-19.crt\nhttps://www.microsoft.com/pkiops/certs/MicCorUEFCA2011_2011-06-27.crt\nGenerate the db signature list.\nsbsiglist --owner 77fa9abd-0359-4d32-bd60-28f4e78f784b --type x509 --output MS_Win_db.esl MicWinProPCA2011_2011-10-19.crt\nsbsiglist --owner 77fa9abd-0359-4d32-bd60-28f4e78f784b --type x509 --output MS_UEFI_db.esl MicCorUEFCA2011_2011-06-27.crt\ncat MS_Win_db.esl MS_UEFI_db.esl > MS_db.esl\nDownload an updated dbx change request from the following link.\nhttps://uefi.org/revocationlistfile\nThe dbx change request that you downloaded in the previous step is already signed with the Microsoft KEK, so you need to strip or unpack it. You can use the following links.\nhttps://gist.github.com/out0xb2/f8e0bae94214889a89ac67fceb37f8c0\nhttps://support.microsoft.com/en-us/topic/microsoft-guidance-for-applying-secure-boot-dbx-update-e3b9e4cb-a330-b3ba-a602-15083965d9ca\nBuild a UEFI variable store using the uefivars.py script.\n./uefivars.py -i none -o aws -O uefiblob-microsoft-keys-empty-pk.bin -P ~/PK.esl -K ~/MS_Win_KEK.esl --db ~/MS_db.esl  --dbx ~/dbx-2021-April.bin \nCheck the binary blob and the UEFI variable store.\n./uefivars.py -i aws -I uefiblob-microsoft-keys-empty-pk.bin -o json | less\nYou can update the blob by passing it to the same tool again.\n./uefivars.py -i aws -I uefiblob-microsoft-keys-empty-pk.bin -o aws -O uefiblob-microsoft-keys-empty-pk.bin -P ~/PK.esl -K ~/MS_Win_KEK.esl --db ~/MS_db.esl  --dbx ~/dbx-2021-April.bin      \nExpected output\nReplacing PK\nReplacing KEK\nReplacing db\nReplacing dbx"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIEncryption.html",
        "content": "AMIs that are backed by Amazon EBS snapshots can take advantage of Amazon EBS encryption. Snapshots of both data and root volumes can be encrypted and attached to an AMI. You can launch instances and copy images with full EBS encryption support included. Encryption parameters for these operations are supported in all Regions where AWS KMS is available.\nEC2 instances with encrypted EBS volumes are launched from AMIs in the same way as other instances. In addition, when you launch an instance from an AMI backed by unencrypted EBS snapshots, you can encrypt some or all of the volumes during launch.\nLike EBS volumes, snapshots in AMIs can be encrypted by either your default AWS KMS key, or to a customer managed key that you specify. You must in all cases have permission to use the selected KMS key.\nAMIs with encrypted snapshots can be shared across AWS accounts. For more information, see Understand shared AMI usage in Amazon EC2.\nEncryption with EBS-backed AMIs topics\nInstance-launching scenarios\nImage-copying scenarios\nInstance-launching scenarios\nAmazon EC2 instances are launched from AMIs using the RunInstances action with parameters supplied through block device mapping, either by means of the AWS Management Console or directly using the Amazon EC2 API or CLI. For more information, see Block device mappings for volumes on Amazon EC2 instances. For examples of controlling block device mapping from the AWS CLI, see Launch, List, and Terminate EC2 Instances.\nBy default, without explicit encryption parameters, a RunInstances action maintains the existing encryption state of an AMI's source snapshots while restoring EBS volumes from them. If encryption by default is enabled, all volumes created from the AMI (whether from encrypted or unencrypted snapshots) are encrypted. If encryption by default is not enabled, the instance maintains the encryption state of the AMI.\nYou can also launch an instance and simultaneously apply a new encryption state to the resulting volumes by supplying encryption parameters. Consequently, the following behaviors are observed:\nLaunch with no encryption parameters\nAn unencrypted snapshot is restored to an unencrypted volume, unless encryption by default is enabled, in which case all the newly created volumes will be encrypted.\nAn encrypted snapshot that you own is restored to a volume that is encrypted to the same KMS key.\nAn encrypted snapshot that you do not own (for example, the AMI is shared with you) is restored to a volume that is encrypted by your AWS account's default KMS key.\nThe default behaviors can be overridden by supplying encryption parameters. The available parameters are Encrypted and KmsKeyId. Setting only the Encrypted parameter results in the following:\nInstance launch behaviors with Encrypted set, but no KmsKeyId specified\nAn unencrypted snapshot is restored to an EBS volume that is encrypted by your AWS account's default KMS key.\nAn encrypted snapshot that you own is restored to an EBS volume encrypted by the same KMS key. (In other words, the Encrypted parameter has no effect.)\nAn encrypted snapshot that you do not own (i.e., the AMI is shared with you) is restored to a volume that is encrypted by your AWS account's default KMS key. (In other words, the Encrypted parameter has no effect.)\nSetting both the Encrypted and KmsKeyId parameters allows you to specify a non-default KMS key for an encryption operation. The following behaviors result:\nInstance with both Encrypted and KmsKeyId set\nAn unencrypted snapshot is restored to an EBS volume encrypted by the specified KMS key.\nAn encrypted snapshot is restored to an EBS volume encrypted not to the original KMS key, but instead to the specified KMS key.\nSubmitting a KmsKeyId without also setting the Encrypted parameter results in an error.\nThe following sections provide examples of launching instances from AMIs using non-default encryption parameters. In each of these scenarios, parameters supplied to the RunInstances action result in a change of encryption state during restoration of a volume from a snapshot.\nFor information about using the console to launch an instance from an AMI, see Launch an Amazon EC2 instance.\nEncrypt a volume during launch\nIn this example, an AMI backed by an unencrypted snapshot is used to launch an EC2 instance with an encrypted EBS volume.\nThe Encrypted parameter alone results in the volume for this instance being encrypted. Providing a KmsKeyId parameter is optional. If no KMS key ID is specified, the AWS account's default KMS key is used to encrypt the volume. To encrypt the volume to a different KMS key that you own, supply the KmsKeyId parameter.\nRe-encrypt a volume during launch\nIn this example, an AMI backed by an encrypted snapshot is used to launch an EC2 instance with an EBS volume encrypted by a new KMS key.\nIf you own the AMI and supply no encryption parameters, the resulting instance has a volume encrypted by the same KMS key as the snapshot. If the AMI is shared rather than owned by you, and you supply no encryption parameters, the volume is encrypted by your default KMS key. With encryption parameters supplied as shown, the volume is encrypted by the specified KMS key.\nChange encryption state of multiple volumes during launch\nIn this more complex example, an AMI backed by multiple snapshots (each with its own encryption state) is used to launch an EC2 instance with a newly encrypted volume and a re-encrypted volume.\nIn this scenario, the RunInstances action is supplied with encryption parameters for each of the source snapshots. When all possible encryption parameters are specified, the resulting instance is the same regardless of whether you own the AMI.\nImage-copying scenarios\nAmazon EC2 AMIs are copied using the CopyImage action, either through the AWS Management Console or directly using the Amazon EC2 API or CLI.\nBy default, without explicit encryption parameters, a CopyImage action maintains the existing encryption state of an AMI's source snapshots during copy. You can also copy an AMI and simultaneously apply a new encryption state to its associated EBS snapshots by supplying encryption parameters. Consequently, the following behaviors are observed:\nCopy with no encryption parameters\nAn unencrypted snapshot is copied to another unencrypted snapshot, unless encryption by default is enabled, in which case all the newly created snapshots will be encrypted.\nAn encrypted snapshot that you own is copied to a snapshot encrypted with the same KMS key.\nAn encrypted snapshot that you do not own (that is, the AMI is shared with you) is copied to a snapshot that is encrypted by your AWS account's default KMS key.\nAll of these default behaviors can be overridden by supplying encryption parameters. The available parameters are Encrypted and KmsKeyId. Setting only the Encrypted parameter results in the following:\nCopy-image behaviors with Encrypted set, but no KmsKeyId specified\nAn unencrypted snapshot is copied to a snapshot encrypted by the AWS account's default KMS key.\nAn encrypted snapshot is copied to a snapshot encrypted by the same KMS key. (In other words, the Encrypted parameter has no effect.)\nAn encrypted snapshot that you do not own (i.e., the AMI is shared with you) is copied to a volume that is encrypted by your AWS account's default KMS key. (In other words, the Encrypted parameter has no effect.)\nSetting both the Encrypted and KmsKeyId parameters allows you to specify a customer managed KMS key for an encryption operation. The following behaviors result:\nCopy-image behaviors with both Encrypted and KmsKeyId set\nAn unencrypted snapshot is copied to a snapshot encrypted by the specified KMS key.\nAn encrypted snapshot is copied to a snapshot encrypted not to the original KMS key, but instead to the specified KMS key.\nSubmitting a KmsKeyId without also setting the Encrypted parameter results in an error.\nThe following section provides an example of copying an AMI using non-default encryption parameters, resulting in a change of encryption state.\nFor detailed instructions using the console, see Copy an Amazon EC2 AMI.\nEncrypt an unencrypted image during copy\nIn this scenario, an AMI backed by an unencrypted root snapshot is copied to an AMI with an encrypted root snapshot. The CopyImage action is invoked with two encryption parameters, including a customer managed key. As a result, the encryption status of the root snapshot changes, so that the target AMI is backed by a root snapshot containing the same data as the source snapshot, but encrypted using the specified key. You incur storage costs for the snapshots in both AMIs, as well as charges for any instances you launch from either AMI.\nNote\nEnabling encryption by default has the same effect as setting the Encrypted parameter to true for all snapshots in the AMI.\nSetting the Encrypted parameter encrypts the single snapshot for this instance. If you do not specify the KmsKeyId parameter, the default customer managed key is used to encrypt the snapshot copy.\nNote\nYou can also copy an image with multiple snapshots and configure the encryption state of each individually."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/sharing-amis.html",
        "content": "A shared AMI is an AMI that a developer created and made available for others to use. One of the easiest ways to get started with Amazon EC2 is to use a shared AMI that has the components you need and then add custom content. You can also create your own AMIs and share them with others.\nYou use a shared AMI at your own risk. Amazon can't vouch for the integrity or security of AMIs shared by other Amazon EC2 users. Therefore, you should treat shared AMIs as you would any foreign code that you might consider deploying in your own data center, and perform the appropriate due diligence. We recommend that you get an AMI from a trusted source, such as a verified provider.\nVerified provider\nIn the Amazon EC2 console, public AMIs that are owned by Amazon or a verified Amazon partner are marked Verified provider.\nYou can also use the describe-images AWS CLI command to identify the public AMIs that come from a verified provider. Public images that are owned by Amazon or a verified partner have an aliased owner, which is either amazon, aws-backup-vault, or aws-marketplace. In the CLI output, these values appear for ImageOwnerAlias. Other users can't alias their AMIs. This enables you to easily find AMIs from Amazon or verified partners.\nTo become a verified provider, you must register as a seller on the AWS Marketplace. Once registered, you can list your AMI on the AWS Marketplace. For more information, see Getting started as a seller and AMI-based products in the AWS Marketplace Seller Guide.\nShared AMI topics\nFind shared AMIs to use for Amazon EC2 instances\nPrepare to use shared AMIs for Linux\nControl the discovery and use of AMIs in Amazon EC2 with Allowed AMIs\nMake your AMI publicly available for use in Amazon EC2\nUnderstand block public access for AMIs\nShare an AMI with organizations and organizational units\nShare an AMI with specific AWS accounts\nCancel having an AMI shared with your AWS account\nRecommendations for creating shared Linux AMIs\nIf you're looking for information about other topics\nFor information about creating an AMI, see Create an instance store-backed AMI or Create an Amazon EBS-backed AMI.\nFor information about building, delivering, and maintaining your applications on the AWS Marketplace, see the AWS Marketplace Documentation."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/usingsharedamis-finding.html",
        "content": "You can use the Amazon EC2 console or the command line to find public or private shared AMIs to use with your Amazon EC2 instances.\nAMIs are a Regional resource. When you search for a shared AMI (public or private), you must search for it from the same Region from which it is shared. To make an AMI available in a different Region, copy the AMI to the Region, and then share it. For more information, see Copy an Amazon EC2 AMI.\nFind a shared AMI (console)\nFind a shared AMI using the AWS CLI\nFind a shared AMI (Tools for Windows PowerShell)"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/usingsharedamis-confirm.html",
        "content": "Before you use a shared AMI for Linux, take the following steps to confirm that there are no pre-installed credentials that would allow unwanted access to your instance by a third party and no pre-configured remote logging that could transmit sensitive data to a third party. Check the documentation for the Linux distribution used by the AMI for information about improving the security of the system.\nTo ensure that you don't accidentally lose access to your instance, we recommend that you initiate two SSH sessions and keep the second session open until you've removed credentials that you don't recognize and confirmed that you can still log into your instance using SSH.\nIdentify and disable any unauthorized public SSH keys. The only key in the file should be the key you used to launch the AMI. The following command locates authorized_keys files:\n[ec2-user ~]$ sudo find / -name \"authorized_keys\" -print -exec cat {} \\;\nDisable password-based authentication for the root user. Open the sshd_config file and edit the PermitRootLogin line as follows:\nPermitRootLogin without-password\nAlternatively, you can disable the ability to log into the instance as the root user:\nPermitRootLogin No\nRestart the sshd service.\nCheck whether there are any other users that are able to log in to your instance. Users with superuser privileges are particularly dangerous. Remove or lock the password of any unknown accounts.\nCheck for open ports that you aren't using and running network services listening for incoming connections.\nTo prevent preconfigured remote logging, you should delete the existing configuration file and restart the rsyslog service. For example:\n[ec2-user ~]$ sudo rm /etc/rsyslog.conf\n[ec2-user ~]$ sudo service rsyslog restart\nVerify that all cron jobs are legitimate.\nIf you discover a public AMI that you feel presents a security risk, contact the AWS security team. For more information, see the AWS Security Center."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-allowed-amis.html",
        "content": "To control the discovery and use of Amazon Machine Images (AMIs) by users in your AWS account, you can use the Allowed AMIs feature. This feature allows you to specify criteria that AMIs must meet to be visible and available within your account. When the criteria are enabled, users launching instances will only see and have access to AMIs that comply with the specified criteria. For example, you can specify a list of trusted AMI providers as the criteria, and only AMIs from these providers will be visible and available for use.\nBefore enabling the Allowed AMIs settings, you can enable audit mode to preview which AMIs will or won't be visible and available for use. This lets you refine the criteria as needed to ensure that only the intended AMIs are visible and available to users in your account. Additionally, you can run the describe-instance-image-metadata command and filter the response to identify any instances that were launched with AMIs that don't meet the specified criteria. This information can guide your decision to either update your launch configurations to use compliant AMIs (for example, specifying a different AMI in a launch template) or adjust your criteria to allow these AMIs.\nYou specify the Allowed AMIs settings at the account level, either directly in the account or by using a declarative policy. These settings must be configured in each AWS Region where you want to control the discovery and use of AMIs. Using a declarative policy allows you to apply the settings across multiple Regions simultaneously, as well as across multiple accounts simultaneously. When a declarative policy is in use, you can't modify the settings directly within an account. This topic describes how to configure the settings directly within an account. For information about using declarative policies, see Declarative policies in the AWS Organizations User Guide.\nNote\nThe Allowed AMIs feature only controls the discovery and use of public AMIs or AMIs shared with your account. It does not restrict the AMIs owned by your account. Regardless of the criteria you set, the AMIs created by your account will always be discoverable and usable by users in your account.\nKey benefits of Allowed AMIs\nCompliance and security: Users can only discover and use AMIs that meet the specified criteria, reducing the risk of non-compliant AMI usage.\nEfficient management: By reducing the number of allowed AMIs, managing the remaining ones becomes easier and more efficient.\nCentralized account-level implementation: Configure the Allowed AMIs settings at the account level, either directly within the account or through a declarative policy. This provides a centralized and efficient way to control AMI usage across the entire account.\nContents\nHow Allowed AMIs works\nBest practices for implementing Allowed AMIs\nRequired IAM permissions\nEnable audit mode and specify criteria\nEnable Allowed AMIs\nDisable Allowed AMIs\nUpdate Allowed AMIs criteria\nIdentify Allowed AMIs state and criteria\nIdentify AMIs that meet the Allowed AMIs criteria\nIdentify whether instances were launched with AMIs that aren't allowed\nHow Allowed AMIs works\nYou specify criteria that automatically filter and determine which AMIs can be discovered and used in your account. You specify the criteria in JSON configuration, and then enable the criteria by running the enable API operation.\nJSON configuration for the Allowed AMIs criteria\nThe core configuration for Allowed AMIs is the JSON configuration that defines the criteria for allowed AMIs.\nCurrently, the only supported criteria are AMI providers. Valid values are aliases that are defined by AWS, and AWS account IDs, as follows:\namazon \u2013 An alias that identifies AMIs created by AWS\naws-marketplace \u2013 An alias that identifies AMIs created by verified providers in the AWS Marketplace\naws-backup-vault \u2013 An alias that identifies backup AMIs that reside in logically air-gapped AWS Backup vault accounts. If you use the AWS Backup logically air-gapped vault feature, ensure this alias is included as an AMI provider.\nAWS account IDs \u2013 One or more 12-digit AWS account IDs\nnone \u2013 Indicates that only AMIs created by your account can be discovered and used. Public or shared AMIs can't be discovered and used. If you specify none, you can't specify an alias or account ID.\nThe AMI criteria are specified in JSON format. Here's an example that specifies two aliases and three AWS account IDs:\n{\n    \"ImageCriteria\": [\n        {\n            \"ImageProviders\": [\n                \"amazon\",\n                \"aws-marketplace\",\n                \"123456789012\",\n                \"112233445566\",\n                \"009988776655\"\n            ]\n        }\n    ]\n}\nLimits for the JSON configuration\nImageCriteria objects: Maximum of 10 ImageCriteria objects can be specified in a single configuration.\nImageProviders values: Maximum of 200 values across all ImageCriteria objects.\nExample of limits\nConsider the following example to illustrate these limits, where different ImageProviders lists are used to group the AMI provider accounts:\n{\n    \"ImageCriteria\": [\n        {\n            \"ImageProviders\": [\"amazon\", \"aws-marketplace\"]\n        },\n        {\n            \"ImageProviders\": [\"123456789012\", \"112233445566\", \"121232343454\"]\n        },\n        {\n            \"ImageProviders\": [\"998877665555\", \"987654321098\"]\n        }\n        // Up to 7 more ImageCriteria objects can be added\n        // Up to 193 more ImageProviders values can be added\n    ]\n}\nIn this example:\nThere are 3 imageCriteria objects (up to 7 more can be added to reach the limit of 10).\nThere are 7 total imageProviders values across all objects (up to 193 more can be added to reach the limit of 200).\nIn this example, AMIs are allowed from any of the specified AMI providers in all of the ImageCriteria objects.\nAllowed AMIs operations\nThe Allowed AMIs feature has three operational modes for managing the image criteria: enabled, disabled, and audit mode. These allow you to enable or disable the image criteria, or review them as needed.\nEnabled\nWhen Allowed AMIs is enabled:\nThe ImageCriteria are applied.\nOnly allowed AMIs are discoverable in the EC2 console and by APIs that use images (for example, that describe, copy, store, or perform other actions that use images).\nInstances can only be launched using allowed AMIs.\nDisabled\nWhen Allowed AMIs is disabled:\nThe ImageCriteria are not applied.\nNo restrictions are placed on AMI discoverability or usage.\nAudit mode\nIn audit mode:\nThe ImageCriteria are applied, but no restrictions are placed on AMI discoverability or usage.\nIn the EC2 console, for each AMI, the Allowed image field displays either Yes or No to indicate whether the AMI will be discoverable and available to users in the account when Allowed AMIs is enabled.\nIn the command line, the response for the describe-image operation includes \"ImageAllowed\": true or \"ImageAllowed\": false to indicate whether the AMI will be discoverable and available to users in the account when Allowed AMIs is enabled.\nIn the EC2 console, the AMI Catalog displays Not allowed next to AMIs that won't be discoverable or available to users in the account when Allowed AMIs is enabled.\nBest practices for implementing Allowed AMIs\nWhen implementing Allowed AMIs, consider these best practices to ensure a smooth transition and minimize potential disruptions to your AWS environment.\nEnable audit mode\nBegin by enabling Allowed AMIs in audit mode. This mode allows you to see which AMIs would be affected by your criteria without actually restricting access, providing a risk-free evaluation period.\nSet Allowed AMIs criteria\nCarefully establish which AMI providers align with your organization's security policies, compliance requirements, and operational needs.\nNote\nWe recommend specifying the amazon alias to allow AMIs created by AWS, ensuring that AWS managed services you use can continue to launch EC2 instances in your account.\nCheck for impact on expected business processes\nRun the describe-instance-image-metadata command and filter the response to identify any instances that were launched with AMIs that don't meet the specified criteria. This information can guide your decision to either update your launch configurations to use compliant AMIs (for example, specifying a different AMI in a launch template) or adjust your criteria to allow these AMIs.\nEnable Allowed AMIs\nOnce you've confirmed that the criteria will not adversely affect expected business processes, enable Allowed AMIs.\nMonitor instance launches\nContinue to monitor instance launches from AMIs across your applications and the AWS managed services you use, such as Amazon EMR, Amazon ECR, Amazon EKS, and AWS Elastic Beanstalk. Check for any unexpected issues and make necessary adjustments to the Allowed AMIs criteria.\nPilot new AMIs\nTo test third-party AMIs that do not comply with your current Allowed AMIs settings, AWS recommends the following approaches:\nUse a separate AWS account: Create an account with no access to your business-critical resources. Ensure that the Allowed AMIs setting is not enabled in this account, or that the AMIs you want to test are explicitly allowed, so that you can test them.\nTest in another AWS Region: Use a Region where the third-party AMIs are available, but where you have not yet enabled the Allowed AMIs settings.\nThese approaches help ensure your business-critical resources remain secure while you test new AMIs.\nRequired IAM permissions\nTo use the Allowed AMIs feature, you need the following IAM permissions:\nGetAllowedImagesSettings\nEnableAllowedImagesSettings\nDisableAllowedImagesSettings\nReplaceImageCriteriaInAllowedImagesSettings\nEnable audit mode and specify criteria\nUse the following procedures to enable the audit mode for Allowed AMIs and specify the Allowed AMIs criteria in your account for the specified Region.\nConsole\nAWS CLI\nTo enable audit mode and specify criteria for Allowed AMIs\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Dashboard.\nUnder Account attributes (top right), choose Allowed AMIs.\nOn the Allowed AMIs page, do the following:\nChoose Manage.\nFor Allowed AMIs settings, choose Audit mode.\nFor AMI criteria, specify the criteria in JSON format. Currently, only image providers can be specified as criteria.\nFor the correct configuration and valid values, see JSON configuration for the Allowed AMIs criteria.\nChoose Update.\nEnable Allowed AMIs\nUse the following procedures to enable Allowed AMIs in your account for the specified Region.\nConsole\nAWS CLI\nTo enable Allowed AMIs\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Dashboard.\nUnder Account attributes (top right), choose Allowed AMIs.\nOn the Allowed AMIs page, do the following:\nChoose Manage.\nFor Allowed AMIs settings, choose Enabled.\nFor AMI criteria, specify the criteria in JSON format. Currently, only image providers can be specified as criteria.\nFor the correct configuration and valid values, see JSON configuration for the Allowed AMIs criteria.\nChoose Update.\nDisable Allowed AMIs\nUse the following procedures to disable Allowed AMIs in your account for the specified Region.\nConsole\nAWS CLI\nTo disable Allowed AMIs\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Dashboard.\nUnder Account attributes (top right), choose Allowed AMIs.\nOn the Allowed AMIs page, do the following:\nChoose Manage.\nFor Allowed AMIs settings, choose Disabled.\nChoose Update.\nUpdate Allowed AMIs criteria\nUse the following procedures to update the Allowed AMIs criteria in your account for the specified Region.\nConsole\nAWS CLI\nTo update the Allowed AMIs criteria\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Dashboard.\nUnder Account attributes (top right), choose Allowed AMIs.\nOn the Allowed AMIs page, do the following:\nChoose Manage.\nFor Allowed AMIs settings, choose either Enabled or Audit mode.\nFor AMI criteria, specify the criteria in JSON format. Currently, only image providers can be specified as criteria.\nFor the configuration and valid values, see JSON configuration for the Allowed AMIs criteria.\nChoose Update.\nIdentify Allowed AMIs state and criteria\nUse the following procedures to identify the current state of the Allowed AMIs setting and the Allowed AMIs criteria.\nConsole\nAWS CLI\nTo identify the Allowed AMIs state and criteria\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Dashboard.\nUnder Account attributes (top right), choose Allowed AMIs.\nOn the Allowed AMIs page, do the following:\nChoose Manage.\nFor Allowed AMIs settings, check the current selection. It is either Enabled, Disabled, or Audit mode.\nFor AMI criteria, check the criteria in JSON format. If the state is Disabled, the criteria are not displayed. To display the criteria, choose either Enabled or Audit mode.\nChoose Cancel to close the screen without making any changes.\nIdentify AMIs that meet the Allowed AMIs criteria\nUse the following procedures to identify the AMIs that are allowed or not allowed for the account.\nNote\nThe following can only be done when Allowed AMIs is in audit mode.\nConsole\nAWS CLI\nTo identify the AMIs that meet the Allowed AMIs criteria\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose AMIs.\nSelect an AMI you want to check.\nOn the Details tab (if you selected the checkbox) or in the summary area (if you selected the AMI ID), find the Allowed image field.\nA value of Yes indicates an AMI that meets the Allowed AMIs criteria. This AMI will be visible and available to users in your account when Allowed AMIs is enabled.\nA value of No indicates an AMI that does not meet the Allowed AMIs criteria. This AMI won't be visible or available to users in your account when Allowed AMIs is enabled.\nIn the navigation pane, choose AMI Catalog.\nAn AMI marked Not allowed indicates an AMI that does not meet the Allowed AMIs criteria. This AMI won't be visible or available to users in your account when Allowed AMIs is enabled.\nIdentify whether instances were launched with AMIs that aren't allowed\nUse the following procedures to identify the instances that were launched with an AMI that does not meet the Allowed AMIs criteria.\nConsole\nAWS CLI\nTo identify whether an instance was launched with an AMI that isn't allowed\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect an instance you want to check.\nOn the Details tab, under Instance details, find the Allowed image field.\nA value of Yes indicates an AMI that meets the Allowed AMIs criteria.\nA value of No indicates an AMI that does not meet the Allowed AMIs criteria."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/sharingamis-intro.html",
        "content": "You can make your AMI publicly available by sharing it with all AWS accounts.\nIf you want to prevent the public sharing of your AMIs, you can enable block public access for AMIs. This blocks any attempts to make an AMI public, helping to prevent unauthorized access and potential misuse of AMI data. Note that enabling block public access does not affect your AMIs that are already publicly available; they remain publicly available. For more information, see Understand block public access for AMIs.\nTo allow only specific accounts to use your AMI to launch instances, see Share an AMI with specific AWS accounts.\nContents\nConsiderations\nShare an AMI with all AWS accounts (share publicly)\nConsiderations\nConsider the following before making an AMI public.\nOwnership \u2013 To make an AMI public, your AWS account must own the AMI.\nRegion \u2013 AMIs are a Regional resource. When you share an AMI, it is available only in the Region from which you shared it. To make an AMI available in a different Region, copy the AMI to the Region and then share it. For more information, see Copy an Amazon EC2 AMI.\nBlock public access \u2013 To publicly share an AMI, block public access for AMIs must be disabled in each Region in which the AMI will be publicly shared. After you've publicly shared the AMI, you can re-enable block public access for AMIs to prevent further public sharing of your AMIs.\nSome AMIs can't be made public \u2013 If your AMI includes one of the following components, you can't make it public (but you can share the AMI with specific AWS accounts):\nEncrypted volumes\nSnapshots of encrypted volumes\nProduct codes\nAvoid exposing sensitive data \u2013 To avoid exposing sensitive data when you share an AMI, read the security considerations in Recommendations for creating shared Linux AMIs and follow the recommended actions.\nUsage \u2013 When you share an AMI, users can only launch instances from the AMI. They can\u2019t delete, share, or modify it. However, after they have launched an instance using your AMI, they can then create an AMI from the instance they launched.\nAutomatic deprecation \u2013 By default, the deprecation date of all public AMIs is set to two years from the AMI creation date. You can set the deprecation date to earlier than two years. To cancel the deprecation date, or to move the deprecation to a later date, you must make the AMI private by only sharing it with specific AWS accounts.\nRemove obsolete AMIs \u2013 After a public AMI reaches its deprecation date, if no new instances were launched from the AMI for six or more months, AWS eventually removes the public sharing property so that obsolete AMIs don\u2019t appear in the public AMI lists.\nBilling \u2013 You are not billed when your AMI is used by other AWS accounts to launch instances. The accounts that launch instances using the AMI are billed for the instances that they launch.\nShare an AMI with all AWS accounts (share publicly)\nAfter you make an AMI public, it is available in Community AMIs in the console, which you can access from the AMI Catalog in the left navigator in the EC2 console or when launching an instance using the console. Note that it can take a short while for an AMI to appear in Community AMIs after you make it public.\nConsole\nAWS CLI\nPowerShell\nTo make an AMI public\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose AMIs.\nSelect your AMI from the list, and then choose Actions, Edit AMI permissions.\nUnder AMI availability, choose Public.\nChoose Save changes."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-public-access-to-amis.html",
        "content": "To prevent the public sharing of your AMIs, you can enable block public access for AMIs at the account level.\nWhen block public access is enabled, any attempt to make an AMI public is automatically blocked. However, if you already have public AMIs, they remain publicly available.\nTo publicly share AMIs, you must disable block public access. When you\u2019re done sharing, it's best practice to re-enable block public access to prevent any unintended public sharing of your AMIs.\nNote\nThis setting is configured at the account level, either directly in the account or by using a declarative policy. It must be configured in each AWS Region where you want to prevent the public sharing of your AMIs. Using a declarative policy allows you to apply the setting across multiple Regions simultaneously, as well as across multiple accounts simultaneously. When a declarative policy is in use, you can't modify the setting directly within an account. This topic describes how to configure the setting directly within an account. For information about using declarative policies, see Declarative policies in the AWS Organizations User Guide.\nYou can restrict IAM permissions to an administrator user so that only they can enable or disable block public access for AMIs.\nTopics\nDefault settings\nManage the block public access setting for AMIs\nDefault settings\nThe Block public access for AMIs setting is either enabled or disabled by default depending on whether your account is new or existing, and whether you have public AMIs. The following table lists the default settings:\nAWS account Block public access for AMIs default setting\nNew accounts Enabled\nExisting accounts with no public AMIs \u00b9\nEnabled\nExisting accounts with one or more public AMIs\nDisabled\n\u00b9 If your account had one or more public AMIs on or after July 15, 2023, Block public access for AMIs is disabled by default for your account, even if you subsequently made all the AMIs private."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-block-public-access-for-amis.html",
        "content": "You can manage the block public access setting for your AMIs to control whether they can be publicly shared. You can enable, disable, or view the current block public access state for your AMIs using the Amazon EC2 console or the AWS CLI.\nView the block public access state for AMIs\nTo see whether the public sharing of your AMIs is blocked in your account, you can view the state for block public access for AMIs. You must view the state in each AWS Region in which you want to see whether the public sharing of your AMIs is blocked.\nRequired permissions\nTo get the current block public access setting for AMIs, you must have the GetImageBlockPublicAccessState IAM permission.\nConsole\nAWS CLI\nPowerShell\nTo view the block public access state for AMIs in the specified Region\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nFrom the navigation bar (at the top of the screen), select the Region in which to view the block public access state for AMIs.\nIf the dashboard is not displayed, in the navigation pane, choose EC2 Dashboard.\nUnder Account attributes, choose Data protection and security.\nUnder Block public access for AMIs, check the Public access field. The value is either New public sharing blocked or New public sharing allowed.\nEnable block public access for AMIs\nTo prevent the public sharing of your AMIs, enable block public access for AMIs at the account level. You must enable block public access for AMIs in each AWS Region in which you want to prevent the public sharing of your AMIs. If you already have public AMIs, they will remain publicly available.\nRequired permissions\nTo enable the block public access setting for AMIs, you must have the EnableImageBlockPublicAccess IAM permission.\nConsole\nAWS CLI\nPowerShell\nTo enable block public access for AMIs in the specified Region\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nFrom the navigation bar (at the top of the screen), select the Region in which to enable block public access for AMIs.\nIf the dashboard is not displayed, in the navigation pane, choose EC2 Dashboard.\nUnder Account attributes, choose Data protection and security.\nUnder Block public access for AMIs, choose Manage.\nSelect the Block new public sharing checkbox, and then choose Update.\nNote\nThe API can take up to 10 minutes to configure this setting. During this time, the value will be New public sharing allowed. When the API has completed the configuration, the value will automatically change to New public sharing blocked.\nDisable block public access for AMIs\nTo allow the users in your account to publicly share your AMIs, disable block public access at the account level. You must disable block public access for AMIs in each AWS Region in which you want to allow the public sharing of your AMIs.\nRequired permissions\nTo disable the block public access setting for AMIs, you must have the DisableImageBlockPublicAccess IAM permission.\nConsole\nAWS CLI\nPowerShell\nTo disable block public access for AMIs in the specified Region\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nFrom the navigation bar (at the top of the screen), select the Region in which to disable block public access for AMIs.\nIf the dashboard is not displayed, in the navigation pane, choose EC2 Dashboard.\nUnder Account attributes, choose Data protection and security.\nUnder Block public access for AMIs, choose Manage.\nClear the Block new public sharing checkbox, and then choose Update.\nEnter confirm when prompted for confirmation, and then choose Allow public sharing.\nNote\nThe API can take up to 10 minutes to configure this setting. During this time, the value will be New public sharing blocked. When the API has completed the configuration, the value will automatically change to New public sharing allowed."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/share-amis-with-organizations-and-OUs.html",
        "content": "AWS Organizations is an account management service that enables you to consolidate multiple AWS accounts into an organization that you create and centrally manage. You can share an AMI with an organization or an organizational unit (OU) that you have created, in addition to sharing it with specific accounts.\nAn organization is an entity that you create to consolidate and centrally manage your AWS accounts. You can organize the accounts in a hierarchical, tree-like structure, with a root at the top and organizational units nested under the organization root. Each account can be added directly to the root, or placed in one of the OUs in the hierarchy. For more information, see AWS Organizations terminology and concepts in the AWS Organizations User Guide.\nWhen you share an AMI with an organization or an OU, all of the children accounts gain access to the AMI. For example, in the following diagram, the AMI is shared with a top-level OU (indicated by the arrow at the number 1). All of the OUs and accounts that are nested underneath that top-level OU (indicated by the dotted line at number 2) also have access to the AMI. The accounts in the organization and OU outside the dotted line (indicated by the number 3) do not have access to the AMI because they are not children of the OU that the AMI is shared with.\nTopics\nConsiderations\nGet the ARN of an organization or organizational unit\nAllow organizations and OUs to use a KMS key\nManage AMI sharing with an organization or OU\nConsiderations\nConsider the following when sharing AMIs with specific organizations or organizational units.\nOwnership \u2013 To share an AMI, your AWS account must own the AMI.\nSharing limits \u2013 The AMI owner can share an AMI with any organization or OU, including organizations and OUs that they\u2019re not a member of.\nFor the maximum number of entities to which an AMI can be shared within a Region, see the Amazon EC2 service quotas.\nTags \u2013 You can't share user-defined tags (tags that you attach to an AMI). When you share an AMI, your user-defined tags are not available to any AWS account in an organization or OU with which the AMI is shared.\nARN format \u2013 When you specify an organization or OU in a command, make sure to use the correct ARN format. You'll get an error if you specify only the ID, for example, if you specify only o-123example or ou-1234-5example.\nCorrect ARN formats:\nOrganization ARN: arn:aws:organizations::account-id:organization/organization-id\nOU ARN: arn:aws:organizations::account-id:ou/organization-id/ou-id\nWhere:\naccount-id is the 12-digit management account number, for example, 123456789012. If you don't know the management account number, you can describe the organization or the organizational unit to get the ARN, which includes the management account number. For more information, see Get the ARN of an organization or organizational unit.\norganization-id is the organization ID, for example, o-123example.\nou-id is the organizational unit ID, for example, ou-1234-5example.\nFor more information about the format of ARNs, see Amazon Resource Names (ARNs) in the IAM User Guide.\nEncryption and keys \u2013 You can share AMIs that are backed by unencrypted and encrypted snapshots.\nThe encrypted snapshots must be encrypted with a customer managed key. You can\u2019t share AMIs that are backed by snapshots that are encrypted with the default AWS managed key.\nIf you share an AMI that is backed by encrypted snapshots, you must allow the organizations or OUs to use the customer managed keys that were used to encrypt the snapshots. For more information, see Allow organizations and OUs to use a KMS key.\nRegion \u2013 AMIs are a Regional resource. When you share an AMI, it is available only in the Region from which you shared it. To make an AMI available in a different Region, copy the AMI to the Region and then share it. For more information, see Copy an Amazon EC2 AMI.\nUsage \u2013 When you share an AMI, users can only launch instances from the AMI. They can\u2019t delete, share, or modify it. However, after they have launched an instance using your AMI, they can then create an AMI from the instance they launched.\nBilling \u2013 You are not billed when your AMI is used by other AWS accounts to launch instances. The accounts that launch instances using the AMI are billed for the instances that they launch."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/get-org-ou-ARN.html",
        "content": "The organization and the organizational unit ARNs contain the 12-digit management account number. If you don't know the management account number, you can describe the organization and the organizational unit to get the ARN for each. In the following examples, 123456789012 is the management account number.\nBefore you can get the ARNs, you must have the permission to describe organizations and organizational units. The following policy provides the necessary permission.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"organizations:Describe*\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\nTo get the ARN of an organization\nUse the describe-organization command and the --query parameter set to 'Organization.Arn' to return only the organization ARN.\naws organizations describe-organization --query 'Organization.Arn'\nExample response\n\"arn:aws:organizations::123456789012:organization/o-123example\"\nTo get the ARN of an organizational unit\nUse the describe-organizational-unit command, specify the OU ID, and set the --query parameter to 'OrganizationalUnit.Arn' to return only the organizational unit ARN.\naws organizations describe-organizational-unit --organizational-unit-id ou-1234-5example --query 'OrganizationalUnit.Arn'\nThe following is an example response.\n\"arn:aws:organizations::123456789012:ou/o-123example/ou-1234-5example\""
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/allow-org-ou-to-use-key.html",
        "content": "If you share an AMI that is backed by encrypted snapshots, you must also allow the organizations or organizational units (OUs) to use the KMS keys that were used to encrypt the snapshots.\nNote\nThe encrypted snapshots must be encrypted with a customer managed key. You can\u2019t share AMIs that are backed by snapshots that are encrypted with the default AWS managed key.\nTo control access to the KMS key, in the key policy you can use the aws:PrincipalOrgID and aws:PrincipalOrgPaths condition keys to allow only specific principals permission to the specified actions. A principal can be a user, IAM role, federated user, or AWS account root user.\nThe condition keys are used as follows:\naws:PrincipalOrgID \u2013 Allows any principal belonging to the organization represented by the specified ID.\naws:PrincipalOrgPaths \u2013 Allows any principal belonging to the OUs represented by the specified paths.\nTo give an organization (including the OUs and accounts that belong to it) permission to use a KMS key, add the following statement to the key policy.\n{\n    \"Sid\": \"Allow access for organization root\",\n    \"Effect\": \"Allow\",\n    \"Principal\": \"*\",\n    \"Action\": [\n        \"kms:Describe*\",\n        \"kms:List*\",\n        \"kms:Get*\",\n        \"kms:Encrypt\",\n        \"kms:Decrypt\",\n        \"kms:ReEncrypt*\",\n        \"kms:GenerateDataKey*\"\n    ],\n    \"Resource\": \"*\",\n    \"Condition\": {\n        \"StringEquals\": {\n            \"aws:PrincipalOrgID\": \"o-123example\"\n        }\n    }\n}\nTo give specific OUs (and the accounts that belong to it) permission to use a KMS key, you can use a policy similar to the following example.\n{\n        \"Sid\": \"Allow access for specific OUs and their descendants\",\n        \"Effect\": \"Allow\",\n        \"Principal\": \"*\",\n        \"Action\": [\n            \"kms:Describe*\",\n            \"kms:List*\",\n            \"kms:Get*\",\n            \"kms:Encrypt\",\n            \"kms:Decrypt\",\n            \"kms:ReEncrypt*\",\n            \"kms:GenerateDataKey*\"\n        ],\n        \"Resource\": \"*\",\n        \"Condition\": {\n            \"StringEquals\": {\n                \"aws:PrincipalOrgID\": \"o-123example\"\n            },\n            \"ForAnyValue:StringLike\": {\n                \"aws:PrincipalOrgPaths\": [\n                    \"o-123example/r-ab12/ou-ab12-33333333/*\",\n                    \"o-123example/r-ab12/ou-ab12-22222222/*\"\n                ]\n            }\n        }\n}\nFor more example condition statements, see aws:PrincipalOrgID and aws:PrincipalOrgPaths in the IAM User Guide.\nFor information about cross-account access, see Allowing users in other accounts to use a KMS key in the AWS Key Management Service Developer Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/share-amis-org-ou-manage.html",
        "content": "You can manage AMI sharing with organizations and organization units (OU) to control whether they can launch Amazon EC2 instances.\nView the organizations and OUs with which an AMI is shared\nYou can use the Amazon EC2 console or the AWS CLI to check with which organizations and OUs you've shared your AMI.\nConsole\nAWS CLI\nTo check with which organizations and OUs you've shared your AMI\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose AMIs.\nSelect your AMI in the list, choose the Permissions tab, and scroll down to Shared organizations/OUs.\nTo find AMIs that are shared with you, see Find shared AMIs to use for Amazon EC2 instances.\nShare an AMI with an organization or OU\nYou can use the Amazon EC2 console or the AWS CLI to share an AMI with an organization or OU.\nNote\nYou do not need to share the Amazon EBS snapshots that an AMI references in order to share the AMI. Only the AMI itself needs to be shared, and the system automatically provides the instance with access to the referenced Amazon EBS snapshots for the launch. However, you do need to share the KMS keys used to encrypt snapshots that the AMI references. For more information, see Allow organizations and OUs to use a KMS key.\nConsole\nAWS CLI\nPowerShell\nTo share an AMI with an organization or an OU\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose AMIs.\nSelect your AMI in the list, and then choose Actions, Edit AMI permissions.\nUnder AMI availability, choose Private.\nNext to Shared organizations/OUs, choose Add organization/OU ARN.\nFor Organization/OU ARN, enter the organization ARN or OU ARN with which you want to share the AMI, and then choose Share AMI. Note that you must specify the full ARN, not just the ID.\nTo share this AMI with multiple organizations or OUs, repeat this step until you have added all of the required organizations or OUs.\nChoose Save changes when you're done.\n(Optional) To view the organizations or OUs with which you have shared the AMI, select the AMI in the list, choose the Permissions tab, and scroll down to Shared organizations/OUs. To find AMIs that are shared with you, see Find shared AMIs to use for Amazon EC2 instances.\nStop sharing an AMI with an organization or OU\nYou can use the Amazon EC2 console or the AWS CLI to stop sharing an AMI with an organization or OU.\nNote\nYou can't stop sharing an AMI with a specific account if it's in an organization or OU with which an AMI is shared. If you try to stop sharing the AMI by removing launch permissions for the account, Amazon EC2 returns a success message. However, the AMI continues to be shared with the account.\nConsole\nAWS CLI\nTo stop sharing an AMI with an organization or OU\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose AMIs.\nSelect your AMI in the list, and then choose Actions, Edit AMI permissions.\nUnder Shared organizations/OUs, select the organizations or OUs with which you want to stop sharing the AMI, and then choose Remove selected.\nChoose Save changes when you're done.\n(Optional) To confirm that you have stopped sharing the AMI with the organizations or OUs, select the AMI in the list, choose the Permissions tab, and scroll down to Shared organizations/OUs."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/sharingamis-explicit.html",
        "content": "You can share an AMI with specific AWS accounts without making the AMI public. All you need are the AWS account IDs.\nAn AWS account ID is a 12-digit number, such as 012345678901, that uniquely identifies an AWS account. For more information, see Viewing AWS account identifiers in the AWS Account Management Reference Guide.\nConsiderations\nConsider the following when sharing AMIs with specific AWS accounts.\nOwnership \u2013 To share an AMI, your AWS account must own the AMI.\nSharing limits \u2013 For the maximum number of entities to which an AMI can be shared within a Region, see the Amazon EC2 service quotas.\nTags \u2013 You can't share user-defined tags (tags that you attach to an AMI). When you share an AMI, your user-defined tags are not available to any AWS account that the AMI is shared with.\nEncryption and keys \u2013 You can share AMIs that are backed by unencrypted and encrypted snapshots.\nThe encrypted snapshots must be encrypted with a KMS key. You can\u2019t share AMIs that are backed by snapshots that are encrypted with the default AWS managed key.\nIf you share an AMI that is backed by encrypted snapshots, you must allow the AWS accounts to use the KMS keys that were used to encrypt the snapshots. For more information, see Allow organizations and OUs to use a KMS key. To set up the key policy that you need to launch Auto Scaling instances when you use a customer managed key for encryption, see Required AWS KMS key policy for use with encrypted volumes in the Amazon EC2 Auto Scaling User Guide.\nRegion \u2013 AMIs are a Regional resource. When you share an AMI, it is only available in that Region. To make an AMI available in a different Region, copy the AMI to the Region and then share it. For more information, see Copy an Amazon EC2 AMI.\nUsage \u2013 When you share an AMI, users can only launch instances from the AMI. They can\u2019t delete, share, or modify it. However, after they have launched an instance using your AMI, they can then create an AMI from their instance.\nCopying shared AMIs \u2013 If users in another account want to copy a shared AMI, you must grant them read permissions for the storage that backs the AMI. For more information, see Cross-account copying.\nBilling \u2013 You are not billed when your AMI is used by other AWS accounts to launch instances. The accounts that launch instances using the AMI are billed for the instances that they launch.\nShare an AMI (console)\nShare an AMI using the AWS CLI\nShare an AMI (Tools for Windows PowerShell)"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cancel-sharing-an-AMI.html",
        "content": "An Amazon Machine Image (AMI) can be shared with specific AWS accounts by adding the accounts to the AMI's launch permissions. If an AMI has been shared with your AWS account and you no longer want it shared with your account, you can remove your account from the AMI's launch permissions. You do this by running the cancel-image-launch-permission AWS CLI command. When running this command, your AWS account is removed from the launch permissions for the specified AMI. To find the AMIs that are shared with your AWS account, see Find shared AMIs to use for Amazon EC2 instances.\nYou might cancel having an AMI shared with your account, for example, to reduce the likelihood of launching an instance with an unused or deprecated AMI that was shared with you. When you cancel having an AMI shared with your account, it no longer appears in any AMI lists in the EC2 console or in the output for describe-images.\nTopics\nLimitations\nCancel having an AMI shared with your account\nLimitations\nYou can remove your account from the launch permissions of an AMI that is shared with your AWS account only. You can't use cancel-image-launch-permission to remove your account from the launch permissions of an AMI shared with an organization or organizational unit (OU) or to remove access to public AMIs.\nYou can\u2019t permanently remove your account from the launch permissions of an AMI. An AMI owner can share an AMI with your account again.\nAMIs are a Regional resource. When running cancel-image-launch-permission, you must specify the Region in which the AMI is located. Either specify the Region in the command, or use the AWS_DEFAULT_REGION environment variable.\nOnly the AWS CLI and SDKs support removing your account from the launch permissions of an AMI. The EC2 console does not currently support this action.\nCancel having an AMI shared with your account\nNote\nAfter you cancel having an AMI shared with your account, you can't undo it. To regain access to the AMI, the AMI owner must share it with your account.\nAWS CLI\nPowerShell\nTo cancel having an AMI shared with your AWS account\nUse the cancel-image-launch-permission command and specify the AMI ID.\naws ec2 cancel-image-launch-permission \\\n    --image-id ami-0123456789example \\\n    --region us-east-1\nExpected output\n{\n    \"Return\": true\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/building-shared-amis.html",
        "content": "Use the following guidelines to reduce the attack surface and improve the reliability of the AMIs you create.\nImportant\nNo list of security guidelines can be exhaustive. Build your shared AMIs carefully and take time to consider where you might expose sensitive data.\nContents\nDisable password-based remote logins for the root user\nDisable local root access\nRemove SSH host key pairs\nInstall public key credentials\nDisable sshd DNS checks (optional)\nRemove sensitive data\nIf you are building AMIs for AWS Marketplace, see Best practices for building AMIs in the AWS Marketplace Seller Guide for guidelines, policies, and best practices.\nFor additional information about sharing AMIs safely, see the following articles:\nHow To Share and Use Public AMIs in A Secure Manner\nPublic AMI Publishing: Hardening and Clean-up Requirements\nDisable password-based remote logins for the root user\nUsing a fixed root password for a public AMI is a security risk that can quickly become known. Even relying on users to change the password after the first login opens a small window of opportunity for potential abuse.\nTo solve this problem, disable password-based remote logins for the root user.\nTo disable password-based remote logins for the root user\nOpen the /etc/ssh/sshd_config file with a text editor and locate the following line:\n#PermitRootLogin yes\nChange the line to:\nPermitRootLogin without-password\nThe location of this configuration file might differ for your distribution, or if you are not running OpenSSH. If this is the case, consult the relevant documentation.\nDisable local root access\nWhen you work with shared AMIs, a best practice is to disable direct root logins. To do this, log into your running instance and issue the following command:\n[ec2-user ~]$ sudo passwd -l root\nNote\nThis command does not impact the use of sudo.\nRemove SSH host key pairs\nIf you plan to share an AMI derived from a public AMI, remove the existing SSH host key pairs located in /etc/ssh. This forces SSH to generate new unique SSH key pairs when someone launches an instance using your AMI, improving security and reducing the likelihood of \"man-in-the-middle\" attacks.\nRemove all of the following key files that are present on your system.\nssh_host_dsa_key\nssh_host_dsa_key.pub\nssh_host_key\nssh_host_key.pub\nssh_host_rsa_key\nssh_host_rsa_key.pub\nssh_host_ecdsa_key\nssh_host_ecdsa_key.pub\nssh_host_ed25519_key\nssh_host_ed25519_key.pub\nYou can securely remove all of these files with the following command.\n[ec2-user ~]$ sudo shred -u /etc/ssh/*_key /etc/ssh/*_key.pub\nWarning\nSecure deletion utilities such as shred may not remove all copies of a file from your storage media. Hidden copies of files may be created by journalling file systems (including Amazon Linux default ext4), snapshots, backups, RAID, and temporary caching. For more information see the shred documentation.\nImportant\nIf you forget to remove the existing SSH host key pairs from your public AMI, our routine auditing process notifies you and all customers running instances of your AMI of the potential security risk. After a short grace period, we mark the AMI private.\nInstall public key credentials\nAfter configuring the AMI to prevent logging in using a password, you must make sure users can log in using another mechanism.\nAmazon EC2 allows users to specify a public-private key pair name when launching an instance. When a valid key pair name is provided to the RunInstances API call (or through the command line API tools), the public key (the portion of the key pair that Amazon EC2 retains on the server after a call to CreateKeyPair or ImportKeyPair) is made available to the instance through an HTTP query against the instance metadata.\nTo log in through SSH, your AMI must retrieve the key value at boot and append it to /root/.ssh/authorized_keys (or the equivalent for any other user account on the AMI). Users can launch instances of your AMI with a key pair and log in without requiring a root password.\nMany distributions, including Amazon Linux and Ubuntu, use the cloud-init package to inject public key credentials for a configured user. If your distribution does not support cloud-init, you can add the following code to a system start-up script (such as /etc/rc.local) to pull in the public key you specified at launch for the root user.\nNote\nIn the following example, the IP address http://169.254.169.254/ is a link-local address and is valid only from the instance.\nIMDSv2\nIMDSv1\nif [ ! -d /root/.ssh ] ; then\n        mkdir -p /root/.ssh\n        chmod 700 /root/.ssh\nfi\n# Fetch public key using HTTP\nTOKEN=`curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"` \\\n&& curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/public-keys/0/openssh-key > /tmp/my-key\nif [ $? -eq 0 ] ; then\n        cat /tmp/my-key >> /root/.ssh/authorized_keys\n        chmod 700 /root/.ssh/authorized_keys\n        rm /tmp/my-key\nfi\nThis can be applied to any user; you do not need to restrict it to the root user.\nNote\nRebundling an instance based on this AMI includes the key with which it was launched. To prevent the key's inclusion, you must clear out (or delete) the authorized_keys file or exclude this file from rebundling.\nDisable sshd DNS checks (optional)\nDisabling sshd DNS checks slightly weakens your sshd security. However, if DNS resolution fails, SSH logins still work. If you do not disable sshd checks, DNS resolution failures prevent all logins.\nTo disable sshd DNS checks\nOpen the /etc/ssh/sshd_config file with a text editor and locate the following line:\n#UseDNS yes\nChange the line to:\nUseDNS no\nNote\nThe location of this configuration file can differ for your distribution or if you are not running OpenSSH. If this is the case, consult the relevant documentation.\nRemove sensitive data\nWe recommend against storing sensitive data or software on any AMI that you share. Users who launch a shared AMI might be able to rebundle it and register it as their own. Follow these guidelines to help you to avoid some easily overlooked security risks:\nWe recommend using the --exclude directory option on ec2-bundle-vol to skip any directories and subdirectories that contain secret information that you would not like to include in your bundle. In particular, exclude all user-owned SSH public/private key pairs and SSH authorized_keys files when bundling the image. The Amazon public AMIs store these in /root/.ssh for the root user, and /home/user_name/.ssh/ for regular users. For more information, see ec2-bundle-vol.\nAlways delete the shell history before bundling. If you attempt more than one bundle upload in the same AMI, the shell history contains your access key. The following example should be the last command you run before bundling from within the instance.\n[ec2-user ~]$ shred -u ~/.*history\nWarning\nThe limitations of shred described in the warning above apply here as well.\nBe aware that bash writes the history of the current session to the disk on exit. If you log out of your instance after deleting ~/.bash_history, and then log back in, you will find that ~/.bash_history has been re-created and contains all of the commands you ran during your previous session.\nOther programs besides bash also write histories to disk, Use caution and remove or exclude unnecessary dot-files and dot-directories.\nBundling a running instance requires your private key and X.509 certificate. Put these and other credentials in a location that is not bundled (such as the instance store)."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitor-ami-events.html",
        "content": "When the state of an Amazon Machine Image (AMI) changes, Amazon EC2 generates an event that is sent to Amazon EventBridge (formerly known as Amazon CloudWatch Events). The events are sent to the default EventBridge event bus in JSON format. You can use Amazon EventBridge to detect and react to these events. You do this by creating rules in EventBridge that trigger an action in response to an event. For example, you can create an EventBridge rule that detects when the AMI creation process has completed and then invokes an Amazon SNS topic to send an email notification to you.\nAmazon EC2 generates an EC2 AMI State Change event when an AMI enters any of the following states:\navailable\nfailed\nderegistered\ndisabled\nEvents are generated on a best effort basis.\nThe following table lists the AMI operations and the states that an AMI can enter. In the table, Yes indicates the states that the AMI can enter when the corresponding operation runs.\nAMI operations available failed deregistered disabled\nCopyImage\nYes\nYes\nCreateImage\nYes\nYes\nCreateRestoreImageTask\nYes\nYes\nDeregisterImage\nYes\nDisableImage\nYes\nEnableImage\nYes\nRegisterImage\nYes\nYes\nEC2 AMI State Change events\nEvent details\navailable events\nfailed events\nderegistered events\ndisabled events\nEvent details\nYou can use the following fields in the event to create rules that trigger an action:\n\"source\": \"aws.ec2\"\nIdentifies that the event is from Amazon EC2.\n\"detail-type\": \"EC2 AMI State Change\"\nIdentifies the event name.\n\"detail\": { \"ImageId\": \"ami-0123456789example\", \"State\": \"available\", }\nProvides the AMI ID and the state of the AMI (available, failed, deregistered, or disabled).\nFor more information, see the following in the Amazon EventBridge User Guide:\nAmazon EventBridge events\nAmazon EventBridge event patterns\nAmazon EventBridge rules\nFor a tutorial about how to create a Lambda function and an EventBridge rule that runs the Lambda function, see Tutorial: Log the state of an Amazon EC2 instance using EventBridge in the AWS Lambda Developer Guide.\navailable events\nThe following is an example of an event that Amazon EC2 generates when the AMI enters the available state following a successful CreateImage, CopyImage, RegisterImage, CreateRestoreImageTask, or EnableImage operation.\n\"State\": \"available\" indicates that the operation was successful.\n{\n    \"version\": \"0\",\n    \"id\": \"example-9f07-51db-246b-d8b8441bcdf0\",\n    \"detail-type\": \"EC2 AMI State Change\",\n    \"source\": \"aws.ec2\",\n    \"account\": \"012345678901\",\n    \"time\": \"yyyy-mm-ddThh:mm:ssZ\",\n    \"region\": \"us-east-1\",\n    \"resources\": [\"arn:aws:ec2:us-east-1::image/ami-0123456789example\"],\n    \"detail\": {\n        \"RequestId\": \"example-9dcc-40a6-aa77-7ce457d5442b\",\n        \"ImageId\": \"ami-0123456789example\",\n        \"State\": \"available\",\n        \"ErrorMessage\": \"\"\n    }\n}\nfailed events\nThe following is an example of an event that Amazon EC2 generates when the AMI enters the failed state following a failed CreateImage, CopyImage, RegisterImage, or CreateRestoreImageTask operation.\nThe following fields provide pertinent information:\n\"State\": \"failed\" \u2013 Indicates that the operation failed.\n\"ErrorMessage\": \"\" \u2013 Provides the reason for the failed operation.\n{\n    \"version\": \"0\",\n    \"id\": \"example-9f07-51db-246b-d8b8441bcdf0\",\n    \"detail-type\": \"EC2 AMI State Change\",\n    \"source\": \"aws.ec2\",\n    \"account\": \"012345678901\",\n    \"time\": \"yyyy-mm-ddThh:mm:ssZ\",\n    \"region\": \"us-east-1\",\n    \"resources\": [\"arn:aws:ec2:us-east-1::image/ami-0123456789example\"],\n    \"detail\": {\n        \"RequestId\": \"example-9dcc-40a6-aa77-7ce457d5442b\",\n        \"ImageId\": \"ami-0123456789example\",\n        \"State\": \"failed\",\n        \"ErrorMessage\": \"Description of failure\"\n    }\n}\nderegistered events\nThe following is an example of an event that Amazon EC2 generates when the AMI enters the deregistered state following a successful DeregisterImage operation. If the operation fails, no event is generated. Any failure is known immediately because DeregisterImage is a synchronous operation.\n\"State\": \"deregistered\" indicates that the DeregisterImage operation was successful.\n{\n    \"version\": \"0\",\n    \"id\": \"example-9f07-51db-246b-d8b8441bcdf0\",\n    \"detail-type\": \"EC2 AMI State Change\",\n    \"source\": \"aws.ec2\",\n    \"account\": \"012345678901\",\n    \"time\": \"yyyy-mm-ddThh:mm:ssZ\",\n    \"region\": \"us-east-1\",\n    \"resources\": [\"arn:aws:ec2:us-east-1::image/ami-0123456789example\"],\n    \"detail\": {\n        \"RequestId\": \"example-9dcc-40a6-aa77-7ce457d5442b\",\n        \"ImageId\": \"ami-0123456789example\",\n        \"State\": \"deregistered\",\n        \"ErrorMessage\": \"\"\n    }\n}\ndisabled events\nThe following is an example of an event that Amazon EC2 generates when the AMI enters the disabled state following a successful DisableImage operation. If the operation fails, no event is generated. Any failure is known immediately because DisableImage is a synchronous operation.\n\"State\": \"disabled\" indicates that the DisableImage operation was successful.\n{\n    \"version\": \"0\",\n    \"id\": \"example-9f07-51db-246b-d8b8441bcdf0\",\n    \"detail-type\": \"EC2 AMI State Change\",\n    \"source\": \"aws.ec2\",\n    \"account\": \"012345678901\",\n    \"time\": \"yyyy-mm-ddThh:mm:ssZ\",\n    \"region\": \"us-east-1\",\n    \"resources\": [\"arn:aws:ec2:us-east-1::image/ami-0123456789example\"],\n    \"detail\": {\n        \"RequestId\": \"example-9dcc-40a6-aa77-7ce457d5442b\",\n        \"ImageId\": \"ami-0123456789example\",\n        \"State\": \"disabled\",\n        \"ErrorMessage\": \"\"\n    }\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-billing-info.html",
        "content": "There are many Amazon Machine Images (AMIs) to choose from when launching your instances, and they support a variety of operating system platforms and features. To understand how the AMI you choose when launching your instance affects the bottom line on your AWS bill, you can research the associated operating system platform and billing information. Do this before you launch any On-Demand or Spot Instances, or purchase a Reserved Instance.\nHere are two examples of how researching your AMI in advance can help you choose the AMI that best suits your needs:\nFor Spot Instances, you can use the AMI Platform details to confirm that the AMI is supported for Spot Instances.\nWhen purchasing a Reserved Instance, you can make sure that you select the operating system platform (Platform) that maps to the AMI Platform details.\nFor more information about instance pricing, see Amazon EC2 pricing.\nContents\nAMI billing information fields\nFinding AMI billing and usage details\nVerify AMI charges on your bill"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html",
        "content": "The following fields provide billing information associated with an AMI:\nPlatform details\nThe platform details associated with the billing code of the AMI. For example, Red Hat Enterprise Linux.\nUsage operation\nThe operation of the Amazon EC2 instance and the billing code that is associated with the AMI. For example, RunInstances:0010. Usage operation corresponds to the lineitem/Operation column on your AWS Cost and Usage Report (CUR) and in the AWS Price List API.\nYou can view these fields on the Instances or AMIs page in the Amazon EC2 console, or in the response that is returned by the describe-images or Get-EC2Image command.\nSample data: usage operation by platform\nThe following table lists some of the platform details and usage operation values that can be displayed on the Instances or AMIs pages in the Amazon EC2 console, or in the response that is returned by the describe-images or Get-EC2Image command.\nPlatform details Usage operation 2\nLinux/UNIX\nRunInstances\nRed Hat BYOL Linux\nRunInstances:00g0 3\nRed Hat Enterprise Linux\nRunInstances:0010\nRed Hat Enterprise Linux with HA\nRunInstances:1010\nRed Hat Enterprise Linux with SQL Server Standard and HA\nRunInstances:1014\nRed Hat Enterprise Linux with SQL Server Enterprise and HA\nRunInstances:1110\nRed Hat Enterprise Linux with SQL Server Standard\nRunInstances:0014\nRed Hat Enterprise Linux with SQL Server Web\nRunInstances:0210\nRed Hat Enterprise Linux with SQL Server Enterprise\nRunInstances:0110\nSQL Server Enterprise\nRunInstances:0100\nSQL Server Standard\nRunInstances:0004\nSQL Server Web\nRunInstances:0200\nSUSE Linux\nRunInstances:000g\nUbuntu Pro\nRunInstances:0g00\nWindows\nRunInstances:0002\nWindows BYOL\nRunInstances:0800\nWindows with SQL Server Enterprise 1\nRunInstances:0102\nWindows with SQL Server Standard 1\nRunInstances:0006\nWindows with SQL Server Web 1\nRunInstances:0202\n1 If two software licenses are associated with an AMI, the Platform details field shows both.\n2 If you are running Spot Instances, the lineitem/Operation on your AWS Cost and Usage Report might be different from the Usage operation value that is listed here. For example, if lineitem/Operation displays RunInstances:0010:SV006, it means that Amazon EC2 is running Red Hat Enterprise Linux Spot Instance-hour in US East (N. Virginia) in Zone 6.\n3 This appears as RunInstances (Linux/UNIX) in your usage reports."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/view-billing-info.html",
        "content": "In the Amazon EC2 console, you can view the AMI billing information from the AMIs page or from the Instances page. You can also find billing information using the AWS CLI or the instance metadata service.\nThe following fields can help you verify AMI charges on your bill:\nPlatform details\nUsage operation\nAMI ID\nFind AMI billing information (console)\nFollow these steps to view AMI billing information in the Amazon EC2 console:\nLook up AMI billing information from the AMIs page\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose AMIs, and then select an AMI.\nOn the Details tab, check the values for Platform details and Usage operation.\nLook up AMI billing information from the Instances page\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances, and then select an instance.\nOn the Details tab (or the Description tab if you are using the prior version of the console), check the values for Platform details and Usage operation.\nFind AMI billing information (AWS CLI)\nTo find the AMI billing information using the AWS CLI, you need to know the AMI ID. If you don't know the AMI ID, you can get it from the instance using the describe-instances command.\nTo find the AMI ID\nIf you know the instance ID, you can get the AMI ID for the instance by using the describe-instances command.\naws ec2 describe-instances --instance-ids i-123456789abcde123\nIn the output, the AMI ID is specified in the ImageId field.\n...\"Instances\": [\n{\n    \"AmiLaunchIndex\": 0,\n    \"ImageId\": \"ami-0123456789EXAMPLE\",\n    \"InstanceId\": \"i-123456789abcde123\",\n    ...\n}]\nTo find the AMI billing information\nIf you know the AMI ID, you can use the describe-images command to get the AMI platform and usage operation details.\n$ aws ec2 describe-images --image-ids ami-0123456789EXAMPLE\nThe following example output shows the PlatformDetails and UsageOperation fields. In this example, the ami-0123456789EXAMPLE platform is Red Hat Enterprise Linux and the usage operation and billing code is RunInstances:0010.\n{\n    \"Images\": [\n        {\n            \"VirtualizationType\": \"hvm\", \n            \"Description\": \"Provided by Red Hat, Inc.\",\n            \"Hypervisor\": \"xen\", \n            \"EnaSupport\": true, \n            \"SriovNetSupport\": \"simple\", \n            \"ImageId\": \"ami-0123456789EXAMPLE\",\n            \"State\": \"available\", \n            \"BlockDeviceMappings\": [\n                {\n                    \"DeviceName\": \"/dev/sda1\", \n                    \"Ebs\": {\n                        \"SnapshotId\": \"snap-111222333444aaabb\", \n                        \"DeleteOnTermination\": true, \n                        \"VolumeType\": \"gp2\", \n                        \"VolumeSize\": 10, \n                        \"Encrypted\": false\n                    }\n                }\n            ], \n            \"Architecture\": \"x86_64\", \n            \"ImageLocation\": \"123456789012/RHEL-8.0.0_HVM-20190618-x86_64-1-Hourly2-GP2\", \n            \"RootDeviceType\": \"ebs\", \n            \"OwnerId\": \"123456789012\",\n            \"PlatformDetails\": \"Red Hat Enterprise Linux\",\n            \"UsageOperation\": \"RunInstances:0010\", \n            \"RootDeviceName\": \"/dev/sda1\", \n            \"CreationDate\": \"2019-05-10T13:17:12.000Z\", \n            \"Public\": true, \n            \"ImageType\": \"machine\", \n            \"Name\": \"RHEL-8.0.0_HVM-20190618-x86_64-1-Hourly2-GP2\"\n        }\n    ]\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/verify-ami-charges.html",
        "content": "To ensure that you're not incurring unplanned costs, you can verify that the billing information for an instance in your AWS Cost and Usage Report (CUR) matches the billing information that's associated with the AMI that you used to launch the instance.\nTo verify the billing information, find the instance ID in your CUR and check the corresponding value in the lineitem/Operation column. That value should match the value for Usage operation that's associated with the AMI.\nFor example, the AMI ami-0123456789EXAMPLE has the following billing information:\nPlatform details = Red Hat Enterprise Linux\nUsage operation = RunInstances:0010\nIf you launched an instance using this AMI, you can find the instance ID in your CUR, and check the corresponding value in the lineitem/Operation column. In this example, the value should be RunInstances:0010."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-quotas.html",
        "content": "The following quotas apply to creating and sharing AMIs. The quotas apply per AWS Region.\nQuota name Description Default quota per Region\nAMIs The maximum number of public and private AMIs allowed per Region. These include available, pending, and disabled AMIs, and AMIs in the Recycle Bin. 50,000\nPublic AMIs The maximum number of public AMIs, including public AMIs in the Recycle Bin, allowed per Region. 5\nAMI sharing The maximum number of entities (organizations, organizational units (OUs), and accounts) that an AMI can be shared with in a Region. Note that if you share an AMI with an organization or OU, the number of accounts in the organization or OU does not count towards the quota. 1,000\nIf you exceed your quotas and you want to create or share more AMIs, you can do the following:\nIf you exceed your total AMIs or public AMIs quota, consider deregistering unused images.\nIf you exceed your public AMIs quota, consider making one or more public AMIs private.\nIf you exceed your AMI sharing quota, consider sharing your AMIs with an organization or OU instead of separate accounts.\nRequest a quota increase for AMIs.\nRequest a quota increase for AMIs\nIf you need more than the default quota for AMIs, you can request a quota increase.\nTo request a quota increase for AMIs\nOpen the Service Quotas console at https://console.aws.amazon.com/servicequotas/.\nIn the navigation pane, choose AWS services.\nChoose Amazon Elastic Compute Cloud (Amazon EC2) from the list, or type the name of the service in the search box.\nChoose the AMI quota to request an increase. The AMI quotas you can select are:\nAMIs\nPublic AMIs\nAMI sharing\nChoose Request quota increase.\nFor Change quota value, enter the new quota value, and then choose Request.\nTo view any pending or recently resolved requests, choose Dashboard from the navigation pane. For pending requests, choose the status of the request to open the request receipt. The initial status of a request is Pending. After the status changes to Quota requested, you'll see the case number under Support Center case number. Choose the case number to open the ticket for your request.\nAfter the request is resolved, the Applied quota value for the quota is set to the new value.\nFor more information, see the Service Quotas User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Instances.html",
        "content": "An Amazon EC2 instance is a virtual server in the AWS cloud environment. You have full control over your instance, from the time that you first start it (referred to as launching an instance) until you delete it (referred to as terminating an instance). You can choose from a variety of operating systems when you launch your instance. You can connect to your instance and customize it to meet your needs. For example, you can configure the operating system, install operating system updates, and install applications on your instance.\nAmazon EC2 provides a wide range of instance types. You can choose an instance type that provides the compute resources, memory, storage, and network performance that you need to run your applications.\nWith Amazon EC2, you pay only for what you use. Billing for your instance starts when you launch your instance and it transitions to the running state. Billing stops when you stop your instance and resumes when you start your instance. When you terminate your instance, billing stops when it transitions to the shutting down state.\nAmazon EC2 provides features that you can use to optimize the performance and the cost of your instances. For example, you can use Amazon EC2 Fleet or Amazon EC2 Auto Scaling to scale your capacity up or down as your instance utilization changes. You can reduce the costs for your instances using Spot Instances or Savings Plans.\nA managed instance is managed by a service provider, such as Amazon EKS Auto Mode. You can\u2019t directly modify the settings of a managed instance. Managed instances are identified by a true value in the Managed field. For more information, see Amazon EC2 managed instances.\nFeatures and tasks\nAmazon EC2 instance types\nAmazon EC2 managed instances\nAmazon EC2 billing and purchasing options\nStore instance launch parameters in Amazon EC2 launch templates\nLaunch an Amazon EC2 instance\nConnect to your EC2 instance\nAmazon EC2 instance state changes\nAutomatic instance recovery\nUse instance metadata to manage your EC2 instance\nDetect whether a host is an EC2 instance\nInstance identity documents for Amazon EC2 instances\nPrecision clock and time synchronization on your EC2 instance\nManage device drivers for your EC2 instance\nConfigure your Amazon EC2 Windows instance\nUpgrade an EC2 Windows instance to a newer version of Windows Server\nTutorial: Connect an Amazon EC2 instance to an Amazon RDS database"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html",
        "content": "When you launch an instance, the instance type that you specify determines the hardware of the host computer used for your instance. Each instance type offers different compute, memory, and storage capabilities, and is grouped in an instance family based on these capabilities. Select an instance type based on the requirements of the application or software that you plan to run on your instance. For more information about features and use cases, see Amazon EC2 Instance Types Details.\nAmazon EC2 dedicates some resources of the host computer, such as CPU, memory, and instance storage, to a particular instance. Amazon EC2 shares other resources of the host computer, such as the network and the disk subsystem, among instances. If each instance on a host computer tries to use as much of one of these shared resources as possible, each receives an equal share of that resource. However, when a resource is underused, an instance can consume a higher share of that resource while it's available.\nEach instance type provides higher or lower minimum performance from a shared resource. For example, instance types with high I/O performance have a larger allocation of shared resources. Allocating a larger share of shared resources also reduces the variance of I/O performance. For most applications, moderate I/O performance is more than enough. However, for applications that require greater or more consistent I/O performance, consider an instance type with higher I/O performance.\nContents\nAvailable instance types\nHardware specifications\nHypervisor type\nAMI virtualization types\nProcessors\nFind an Amazon EC2 instance type\nGet recommendations from EC2 instance type finder\nGet EC2 instance recommendations from Compute Optimizer\nAmazon EC2 instance type changes\nBurstable performance instances\nPerformance acceleration with GPU instances\nAmazon EC2 Mac instances\nAmazon EBS-optimized instance types\nCPU options for Amazon EC2 instances\nAMD SEV-SNP for Amazon EC2 instances\nProcessor state control for Amazon EC2 Linux instances\nAvailable instance types\nAmazon EC2 provides a wide selection of instance types optimized to fit different use cases. Instance types comprise varying combinations of CPU, memory, storage, and networking capacity and give you the flexibility to choose the appropriate mix of resources for your applications. Each instance type includes one or more instance sizes, allowing you to scale your resources to the requirements of your target workload.\nInstance type naming conventions\nNames are based on instance family, generation, processor family, capabilities, and size. For more information, see Naming conventions in the Amazon EC2 Instance Types Guide.\nFind an instance type\nTo determine which instance types meet your requirements, such as supported Regions, compute resources, or storage resources, see Find an Amazon EC2 instance type and Amazon EC2 instance type specifications in the Amazon EC2 Instance Types Guide.\nHardware specifications\nFor detailed instance type specifications, see Specifications in the Amazon EC2 Instance Types Guide. For pricing information, see Amazon EC2 On-Demand Pricing.\nTo determine which instance type best meets your needs, we recommend that you launch an instance and use your own benchmark application. Because you pay by the instance second, it's convenient and inexpensive to test multiple instance types before making a decision. If your needs change, even after you make a decision, you can change the instance type later. For more information, see Amazon EC2 instance type changes.\nHypervisor type\nAmazon EC2 supports the following hypervisors: Xen and Nitro.\nNitro-based instances\nGeneral purpose: M5 | M5a | M5ad | M5d | M5dn | M5n | M5zn | M6a | M6g | M6gd | M6i | M6id | M6idn | M6in | M7a | M7g | M7gd | M7i | M7i-flex | M8g | T3 | T3a | T4g\nCompute optimized: C5 | C5a | C5ad | C5d | C5n | C6a | C6g | C6gd | C6gn | C6i | C6id | C6in | C7a | C7g | C7gd | C7gn | C7i | C7i-flex | C8g\nMemory optimized: R5 | R5a | R5ad | R5b | R5d | R5dn | R5n | R6a | R6g | R6gd | R6i | R6idn | R6in | R6id | R7a | R7g | R7gd | R7i | R7iz | R8g | U-3tb1 | U-6tb1 | U-9tb1 | U-12tb1 | U-18tb1 | U-24tb1 | U7i-6tb | U7i-8tb | U7i-12tb | U7in-16tb | U7in-24tb | U7in-32tb | U7inh-32tb | X2gd | X2idn | X2iedn | X2iezn | X8g | z1d\nStorage optimized: D3 | D3en | I3en | I4g | I4i | I7ie | I8g | Im4gn | Is4gen\nAccelerated computing: DL1 | DL2q | F2 | G4ad | G4dn | G5 | G5g | G6 | G6e | Gr6 | Inf1 | Inf2 | P3dn | P4d | P4de | P5 | P5e | P5en | Trn1 | Trn1n | Trn2 | Trn2u | VT1\nHigh-performance computing: Hpc6a | Hpc6id | Hpc7a | Hpc7g\nPrevious generation: A1\nFor more information about the supported versions of Nitro hypervisor, see Network feature support in the Amazon EC2 Instance Types Guide.\nXen-based instances\nGeneral purpose: M1 | M2 | M3 | M4 | T1 | T2\nCompute optimized: C1 | C3 | C4\nMemory optimized: R3 | R4 | X1 | X1e\nStorage optimized: D2 | H1 | I2 | I3\nAccelerated computing: F1 | G3 | P2 | P3\nAMI virtualization types\nThe virtualization type of your instance is determined by the AMI that you use to launch it. Current generation instance types support hardware virtual machine (HVM) only. Some previous generation instance types support paravirtual (PV) and some AWS Regions support PV instances. For more information, see Virtualization types.\nFor best performance, we recommend that you use an HVM AMI. In addition, HVM AMIs are required to take advantage of enhanced networking. HVM virtualization uses hardware-assist technology provided by the AWS platform. With HVM virtualization, the guest VM runs as if it were on a native hardware platform, except that it still uses PV network and storage drivers for improved performance.\nProcessors\nEC2 instances support a variety of processors.\nProcessors\nIntel processors\nAMD processors\nAWS Graviton processors\nAWS Trainium\nAWS Inferentia\nIntel processors\nAmazon EC2 instances that run on Intel processors might include the following processor features. Not all instances that run on Intel processors support all of these processor features. For information about which features are available for each instance type, see Amazon EC2 Instance types.\nIntel AES New Instructions (AES-NI) \u2014 Intel AES-NI encryption instruction set improves upon the original Advanced Encryption Standard (AES) algorithm to provide faster data protection and greater security. All current generation EC2 instances support this processor feature.\nIntel Advanced Vector Extensions (Intel AVX, Intel AVX2, and Intel AVX-512) \u2014 Intel AVX and Intel AVX2 are 256-bit, and Intel AVX-512 is a 512-bit instruction set extension designed for applications that are Floating Point (FP) intensive. Intel AVX instructions improve performance for applications like image and audio/video processing, scientific simulations, financial analytics, and 3D modeling and analysis. These features are only available on instances launched with HVM AMIs.\nIntel Turbo Boost Technology \u2014 Intel Turbo Boost Technology processors automatically run cores faster than the base operating frequency.\nIntel Deep Learning Boost (Intel DL Boost) \u2014 Accelerates AI deep learning use cases. The 2nd Gen Intel Xeon Scalable processors extend Intel AVX-512 with a new Vector Neural Network Instruction (VNNI/INT8) that significantly increases deep learning inference performance over previous generation Intel Xeon Scalable processors (with FP32) for image recognition/segmentation, object detection, speech recognition, language translation, recommendation systems, reinforcement learning, and more. VNNI may not be compatible with all Linux distributions.\nThe following instances support VNNI: M5n, R5n, M5dn, M5zn, R5b, R5dn, D3, D3en, and C6i. C5 and C5d instances support VNNI for only 12xlarge, 24xlarge, and metal instances.\nConfusion can result from industry naming conventions for 64-bit CPUs. Chip manufacturer Advanced Micro Devices (AMD) introduced the first commercially successful 64-bit architecture based on the Intel x86 instruction set. Consequently, the architecture is widely referred to as AMD64 regardless of the chip manufacturer. Windows and several Linux distributions follow this practice. This explains why the internal system information on an instance running Ubuntu or Windows displays the CPU architecture as AMD64 even though the instances are running on Intel hardware.\nAMD processors\nAmazon EC2 instances that run on AMD EPYC processors can help you optimize both cost and performance for your workloads. These instances might support the following processor features. Not all instances that run on AMD processors support all of these processor features. For information about which features are available for each instance type, see Amazon EC2 Instance types.\nAMD Secure Memory Encryption (SME)\nAMD Transparent Single Key Memory Encryption (TSME)\nAMD Advanced Vector Extensions (AVX)\nAMD Secure Encrypted Virtualization-Secure Nested Paging (SEV-SNP)\nVector Neural Network Instructions (VNNI)\nBFloat16\nAWS Graviton processors\nAWS Graviton is a family of processors designed to deliver the best price performance for your workloads running on Amazon EC2 instances.\nFor more information, see Getting started with Graviton.\nAWS Trainium\nInstances powered by AWS Trainium are purpose built for high-performance, cost-effective deep learning training. You can use these instances to train natural language processing, computer vision, and recommender models used across a broad set of applications, such as speech recognition, recommendation, fraud detection, and image and video classification. Use your existing workflows in popular ML frameworks, such as PyTorch and TensorFlow.\nAWS Inferentia\nInstances powered by AWS Inferentia are designed to accelerate machine learning. They provide high performance and low latency machine learning inference. These instances are optimized for deploying deep learning (DL) models for applications, such as natural language processing, object detection and classification, content personalization and filtering, and speech recognition.\nThere are a variety of ways that you can get started:\nUse SageMaker AI, a fully-managed service that is the easiest way to get started with machine learning models. For more information, see Get Started with SageMaker AI in the Amazon SageMaker AI Developer Guide.\nLaunch an Inf1 or Inf2 instance using the Deep Learning AMI. For more information, see AWS Inferentia with DLAMI in the AWS Deep Learning AMIs Developer Guide.\nLaunch an Inf1 or Inf2 instance using your own AMI and install the AWS Neuron SDK, which enables you to compile, run, and profile deep learning models for AWS Inferentia.\nLaunch a container instance using an Inf1 or Inf2 instance and an Amazon ECS-optimized AMI. For more information, see Amazon Linux 2 (Inferentia) AMIs in the Amazon Elastic Container Service Developer Guide.\nCreate an Amazon EKS cluster with nodes running Inf1 instances. For more information, see Inferentia support in the Amazon EKS User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-discovery.html",
        "content": "Before you can launch an instance, you must select an instance type to use. The instance type that you choose might depend on the resources that your workload requires, such as compute, memory, or storage resources. It can be beneficial to identify several instance types that might suit your workload and evaluate their performance in a test environment. There is no substitute for measuring the performance of your application under load.\nYou can get suggestions and guidance for EC2 instance types using the EC2 instance type finder. For more information, see Get recommendations from EC2 instance type finder.\nIf you already have running EC2 instances, you can use AWS Compute Optimizer to get recommendations about the instance types that you should use to improve performance, save money, or both. For more information, see Get EC2 instance recommendations from Compute Optimizer.\nTasks\nFind an instance type using the console\nDescribe an instance type using the AWS CLI\nFind an instance type using the AWS CLI\nFind an instance type using the console\nYou can find an instance type that meets your needs using the Amazon EC2 console.\nTo find an instance type using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nFrom the navigation bar, select the Region in which to launch your instances. You can select any Region that's available to you, regardless of your location.\nIn the navigation pane, choose Instance Types.\n(Optional) Choose the preferences (gear) icon to select which instance type attributes to display, such as On-Demand Linux pricing, and then choose Confirm. Alternatively, select the name of an instance type to open its details page and view all attributes available through the console. The console does not display all the attributes available through the API or the command line.\nUse the instance type attributes to filter the list of displayed instance types to only the instance types that meet your needs. For example, you can filter on the following attributes:\nAvailability zones \u2013 The name of the Availability Zone, Local Zone, or Wavelength Zone. For more information, see Regions and Zones.\nvCPUs or Cores \u2013 The number of vCPUs or cores.\nMemory (GiB) \u2013 The memory size, in GiB.\nNetwork performance \u2013 The network performance, in Gigabits.\nLocal instance storage \u2013 Indicates whether the instance type has local instance storage (true | false).\n(Optional) To see a side-by-side comparison, select the checkbox for multiple instance types. The comparison is displayed at the bottom of the screen.\n(Optional) To save the list of instance types to a comma-separated values (.csv) file for further review, choose Actions, Download list CSV. The file includes all instance types that match the filters you set.\n(Optional) To launch instances using an instance type that meet your needs, select the checkbox for the instance type and choose Actions, Launch instance. For more information, see Launch an EC2 instance using the launch instance wizard in the console.\nDescribe an instance type using the AWS CLI\nYou can use the describe-instance-types command to describe a specific instance type.\nTo fully describe an instance type\nThe following command displays all available details for the specified instance type. The output is lengthy, so it is omitted here.\naws ec2 describe-instance-types \\\n    --instance-types t2.micro \\\n    --region us-east-2\nThe describe an instance type and filter the output\nThe following command displays the networking details for the specified instance type.\naws ec2 describe-instance-types \\\n    --instance-types t2.micro \\\n    --region us-east-2 \\\n    --query \"InstanceTypes[].NetworkInfo\"\nThe following is example output.\n[\n    {\n        \"NetworkPerformance\": \"Low to Moderate\",\n        \"MaximumNetworkInterfaces\": 2,\n        \"MaximumNetworkCards\": 1,\n        \"DefaultNetworkCardIndex\": 0,\n        \"NetworkCards\": [\n            {\n                \"NetworkCardIndex\": 0,\n                \"NetworkPerformance\": \"Low to Moderate\",\n                \"MaximumNetworkInterfaces\": 2,\n                \"BaselineBandwidthInGbps\": 0.064,\n                \"PeakBandwidthInGbps\": 1.024\n            }\n        ],\n        \"Ipv4AddressesPerInterface\": 2,\n        \"Ipv6AddressesPerInterface\": 2,\n        \"Ipv6Supported\": true,\n        \"EnaSupport\": \"unsupported\",\n        \"EfaSupported\": false,\n        \"EncryptionInTransitSupported\": false,\n        \"EnaSrdSupported\": false\n    }\n]\nThe following command displays the available memory for the specified instance type.\naws ec2 describe-instance-types \\\n    --instance-types t2.micro \\\n    --region us-east-2 \\\n    --query \"InstanceTypes[].MemoryInfo\"\nThe following is example output.\n[\n    {\n        \"SizeInMiB\": 1024\n    }\n]\nFind an instance type using the AWS CLI\nYou can use the describe-instance-types and describe-instance-type-offerings commands to find the instance types that meet your needs.\nExamples\nFind an instance type by Availability Zone\nFind an instance type by available memory size\nFind an instance type by available instance storage\nFind an instance type that supports hibernation\nExample 1: Find an instance type by Availability Zone\nThe following example displays only the instance types offered in the specified Availability Zone.\naws ec2 describe-instance-type-offerings --location-type \"availability-zone\" \\\n    --filters \"Name=location,Values=us-east-2a\" \\\n    --region us-east-2 \\\n    --query \"InstanceTypeOfferings[*].[InstanceType]\" --output text | sort\nThe output is a list of instance types, sorted alphabetically. The following is the start of the output only.\na1.2xlarge\na1.4xlarge\na1.large\na1.medium\na1.metal\na1.xlarge\nc4.2xlarge\n   ...\nExample 2: Find an instance type by available memory size\nThe following example displays only current generation instance types with 64 GiB (65536 MiB) of memory.\naws ec2 describe-instance-types \\\n    --filters \"Name=current-generation,Values=true\" \"Name=memory-info.size-in-mib,Values=65536\" \\\n    --region us-east-2 \\\n    --query \"InstanceTypes[*].[InstanceType]\" --output text | sort\nThe output is a list of instance types, sorted alphabetically. The following is the start of the output only.\nc5a.8xlarge\nc5ad.8xlarge\nc6a.8xlarge\nc6g.8xlarge\nc6gd.8xlarge\nc6gn.8xlarge\nc6i.8xlarge\nc6id.8xlarge\nc6in.8xlarge\n   ...\nExample 3: Find an instance type by available instance storage\nThe following example displays the total size of instance storage for all R7 instances with instance store volumes.\naws ec2 describe-instance-types \\\n    --filters \"Name=instance-type,Values=r7*\" \"Name=instance-storage-supported,Values=true\" \\\n    --region us-east-2 \\\n    --query \"InstanceTypes[].[InstanceType, InstanceStorageInfo.TotalSizeInGB]\" \\\n    --output table\nThe following is example output.\n---------------------------\n|  DescribeInstanceTypes  |\n+----------------+--------+\n|  r7gd.xlarge   |  237   |\n|  r7gd.8xlarge  |  1900  |\n|  r7gd.16xlarge |  3800  |\n|  r7gd.medium   |  59    |\n|  r7gd.4xlarge  |  950   |\n|  r7gd.2xlarge  |  474   |\n|  r7gd.metal    |  3800  |\n|  r7gd.large    |  118   |\n|  r7gd.12xlarge |  2850  |\n+----------------+--------+\nExample 4: Find an instance type that supports hibernation\nThe following example displays the instance types that support hibernation.\naws ec2 describe-instance-types \\\n    --filters \"Name=hibernation-supported,Values=true\" \\\n    --region us-east-2 \\\n    --query \"InstanceTypes[*].[InstanceType]\" \\\n    --output text | sort\nThe output is a list of instance types, sorted alphabetically. The following is the start of the output only.\nc4.2xlarge\nc4.4xlarge\nc4.8xlarge\nc4.large\nc4.xlarge\nc5.12xlarge\nc5.18xlarge\nc5.2xlarge\nc5.4xlarge\nc5.9xlarge\n..."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/get-ec2-instance-type-recommendations.html",
        "content": "EC2 instance type finder considers your use case, workload type, CPU manufacturer preference, and how you prioritize price and performance, as well as additional parameters that you can specify. It then uses this data to provide suggestions and guidance for Amazon EC2 instance types that are best suited to your new workloads.\nWith so many instance types available, finding the right instance types for your workload can be time-consuming and complex. By using the EC2 instance type finder, you can remain up to date with the latest instance types and achieve the best price-performance for your workloads.\nYou can get suggestions and guidance for EC2 instance types using the Amazon EC2 console. You can also go directly to Amazon Q to ask for instance type advice. For more information, see the Amazon Q Developer User Guide.\nIf you're looking for instance type recommendations for an existing workload, use AWS Compute Optimizer. For more information, see Get EC2 instance recommendations from Compute Optimizer.\nUse the EC2 instance type finder\nIn the Amazon EC2 console, you can get instance type suggestions from the EC2 instance type finder in the launch instance wizard, when creating a launch template, or on the Instance types page.\nUse the following instructions to get suggestions and guidance for EC2 instance types using the EC2 instance type finder in the Amazon EC2 console. To view an animation of the steps, see View an animation: Get instance type suggestions using the EC2 instance type finder.\nTo get instance type suggestions using the EC2 instance type finder\nStart your process using any of the following:\nFollow the procedure to launch an instance. Next to Instance type, choose the Get advice link.\nFollow the procedure to create a launch template. Next to Instance type, choose the Get advice link.\nIn the navigation pane, choose Instance Types, and then choose the Instance type finder button.\nIn the Get advice on instance type selection screen, do the following:\nSpecify your instance type requirements by selecting options for Workload type, Use case, Priority, and CPU manufacturers.\n(Optional) To specify more detailed requirements for your workload, do the following:\nExpand Advanced parameters.\nTo add a parameter, select a parameter, choose Add, and specify a value for the parameter. Repeat for each additional parameter that you want to add. To indicate no minimum or maximum value, leave the field empty.\nTo remove a parameter after adding it, choose the X next to the parameter.\nChoose Get instance type advice.\nAmazon EC2 provides you with suggestions for instance families matching your specified requirements.\nTo view the details of each instance type within the suggested instance families, choose View recommended instance family details.\nSelect an instance type that meets your requirements, and then choose Actions, Launch instance or Actions, Create launch template.\nAlternatively, if you started the process in the launch instance wizard or the launch template page, and you prefer to go back to your original flow, make note of the instance type you\u2019d like to use. Then, in the launch instance wizard or launch template, for Instance type, choose the instance type, and complete the procedure to launch an instance or create a launch template.\nView an animation: Get instance type suggestions using the EC2 instance type finder"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-recommendations.html",
        "content": "AWS Compute Optimizer provides Amazon EC2 recommendations to help you improve performance, save money, or both. You can use these recommendations to decide whether to change to a new instance type.\nTo make recommendations, Compute Optimizer analyzes your existing instance specifications and utilization metrics. The compiled data is then used to recommend which Amazon EC2 instance types are best able to handle the existing workload. Recommendations are returned along with per-hour instance pricing. For more information, see Amazon EC2 instance metrics in the AWS Compute Optimizer User Guide.\nContents\nRequirements\nFinding classifications\nView recommendations\nConsiderations for evaluating recommendations\nRequirements\nTo get recommendations from Compute Optimizer, you must first opt in to Compute Optimizer. For more information, see Getting started with AWS Compute Optimizer in the AWS Compute Optimizer User Guide.\nCompute Optimizer generates recommendations for some instance types, but not all instance types. If you're using an unsupported instance type, Compute Optimizer will not generate recommendations. For the list of supported instance types, see Amazon EC2 instance requirements in the AWS Compute Optimizer User Guide.\nFinding classifications\nCompute Optimizer classifies its findings for EC2 instances as follows:\nUnder-provisioned \u2013 An EC2 instance is considered under-provisioned when at least one specification of your instance, such as CPU, memory, or network, does not meet the performance requirements of your workload. Under-provisioned EC2 instances might lead to poor application performance.\nOver-provisioned \u2013 An EC2 instance is considered over-provisioned when at least one specification of your instance, such as CPU, memory, or network, can be sized down while still meeting the performance requirements of your workload, and when no specification is under-provisioned. Over-provisioned EC2 instances might lead to unnecessary infrastructure cost.\nOptimized \u2013 An EC2 instance is considered optimized when all specifications of your instance, such as CPU, memory, and network, meet the performance requirements of your workload, and the instance is not over-provisioned. An optimized EC2 instance runs your workloads with optimal performance and infrastructure cost. For optimized instances, Compute Optimizer might sometimes recommend a new generation instance type.\nNone \u2013 There are no recommendations for this instance. This might occur if you've been opted in to Compute Optimizer for less than 12 hours, or when the instance has been running for less than 30 hours, or when the instance type is not supported by Compute Optimizer.\nView recommendations\nAfter you opt in to Compute Optimizer, you can view the findings that Compute Optimizer generates for your EC2 instances in the Amazon EC2 console. You can then access the Compute Optimizer console to view the recommendations. If you recently opted in, findings might not be reflected in the EC2 console for up to 12 hours.\nTo view recommendations for an instance using the Amazon EC2 console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nChoose the instance ID to open the instance detail page.\nOn the instance detail page, in the top summary section, locate AWS Compute Optimizer finding. If there is a finding, we display the finding classification and a link to view the details. Otherwise, we display No recommendations available for this instance.\nIf there is a finding, choose View detail. This opens the Recommendations for EC2 instances page in the Compute Optimizer console. The current instance type is labeled Current. There are also up to three instance type recommendations, labeled Option 1, Option 2, and Option 3. This page also shows recent CloudWatch metric data for the instance.\nTo view recommendations for all instances in all Regions\nYou can view recommendations for all of your Amazon EC2 instances in all Regions using the Compute Optimizer console. For more information, see Viewing EC2 instances recommendations and Viewing EC2 instance details in the AWS Compute Optimizer User Guide.\nConsiderations for evaluating recommendations\nWhen you receive a recommendation, you must decide whether to act on it. Before changing an instance type, consider the following:\nThe recommendations don\u2019t forecast your usage. Recommendations are based on your historical usage over the most recent 14-day time period. Be sure to choose an instance type that is expected to meet your future resource needs.\nFocus on the graphed metrics to determine whether actual usage is lower than instance capacity. You can also view metric data (average, peak, percentile) in CloudWatch to further evaluate your EC2 instance recommendations. For example, notice how CPU percentage metrics change during the day and whether there are peaks that need to be accommodated. For more information, see Viewing Available Metrics in the Amazon CloudWatch User Guide.\nCompute Optimizer might supply recommendations for burstable performance instances, which are T3, T3a, and T2 instances. If you periodically burst above the baseline, make sure that you can continue to do so based on the vCPUs of the new instance type. For more information, see Key concepts for burstable performance instances.\nIf you\u2019ve purchased a Reserved Instance, your On-Demand Instance might be billed as a Reserved Instance. Before you change your current instance type, first evaluate the impact on Reserved Instance utilization and coverage.\nConsider conversions to newer generation instances, where possible.\nWhen migrating to a different instance family, make sure the current instance type and the new instance type are compatible, for example, in terms of virtualization, architecture, or network type. For more information, see Compatibility for changing the instance type.\nFinally, consider the performance risk rating that's provided for each recommendation. Performance risk indicates the amount of effort you might need to spend in order to validate whether the recommended instance type meets the performance requirements of your workload. We also recommend rigorous load and performance testing before and after making any changes."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-resize.html",
        "content": "As your needs change, you might find that your instance is over-utilized (the instance type is too small) or under-utilized (the instance type is too large). If this is the case, you can resize your instance by changing its instance type. For example, if your t2.micro instance is too small for its workload, you can increase its size by changing it to a bigger T2 instance type, such as t2.large. Or you can change it to another instance type, such as m5.large. You might also want to change from a previous generation to a current generation instance type to take advantage of some features, such as support for IPv6.\nIf you want a recommendation for an instance type that is best able to handle your existing workload, you can use AWS Compute Optimizer. For more information, see Get EC2 instance recommendations from Compute Optimizer.\nWhen you change the instance type, you'll start paying the rate of the new instance type. For the on-demand rates of all instance types, see Amazon EC2 On-Demand Pricing.\nTo add additional storage to your instance without changing the instance type, add an EBS volume to the instance. For more information, see Attach an Amazon EBS volume to an instance in the Amazon EBS User Guide.\nWhich instructions to follow?\nThere are different instructions for changing the instance type. The instructions to use depend on the instance's root volume, and whether the instance type is compatible with the instance's current configuration. For information about how compatibility is determined, see Compatibility for changing the instance type.\nUse the following table to determine which instructions to follow.\nRoot volume Compatibility Use these instructions\nEBS Compatible Change the instance type\nEBS Not compatible Migrate to a new instance type\nInstance store Not applicable Migrate to a new instance type"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resize-limitations.html",
        "content": "You can change the instance type only if the instance's current configuration is compatible with the instance type that you want. If the instance type that you want is not compatible with the instance's current configuration, you must launch a new instance with a configuration that is compatible with the instance type, and then migrate your application to the new instance.\nCompatibility is determined through the following:\nVirtualization type\nLinux AMIs use one of two types of virtualization: paravirtual (PV) or hardware virtual machine (HVM). If an instance was launched from a PV AMI, you can't change to an instance type that is HVM only. For more information, see Virtualization types. To check the virtualization type of your instance, check the Virtualization value on the details pane of the Instances screen in the Amazon EC2 console.\nArchitecture\nAMIs are specific to the architecture of the processor, so you must select an instance type with the same processor architecture as the current instance type. For example:\nIf the current instance type has a processor based on the Arm architecture, you are limited to the instance types that support a processor based on the Arm architecture, such as C6g and M6g.\nThe following instance types are the only instance types that support 32-bit AMIs: t2.nano, t2.micro, t2.small, t2.medium, c3.large, t1.micro, m1.small, m1.medium, and c1.medium. If you are changing the instance type of a 32-bit instance, you are limited to these instance types.\nNetwork adapters\nIf you switch from a driver for one network adapter to another, the network adapter settings are reset when the operating system creates the new adapter. To reconfigure the settings, you might need access to a local account with administrator permissions. The following are examples of moving from one network adapter to another:\nAWS PV (T2 instances) to Intel 82599 VF (M4 instances)\nIntel 82599 VF (most M4 instances) to ENA (M5 instances)\nENA (M5 instances) to high-bandwidth ENA (M5n instances)\nEnhanced networking\nInstance types that support enhanced networking require the necessary drivers installed. For example, Nitro-based instances require EBS-backed AMIs with the Elastic Network Adapter (ENA) drivers installed. To change from an instance type that does not support enhanced networking to an instance type that supports enhanced networking, you must install the ENA drivers or ixgbevf drivers on the instance, as appropriate.\nNote\nWhen you resize an instance with ENA Express enabled, the new instance type must also support ENA Express. For a list of instance types that support ENA Express, see Supported instance types for ENA Express.\nTo change from an instance type that supports ENA Express to an instance type that does not support it, ensure that ENA Express is not currently enabled before you resize the instance.\nNVMe\nEBS volumes are exposed as NVMe block devices on Nitro-based instances. If you change from an instance type that does not support NVMe to an instance type that supports NVMe, you must first install the NVMe drivers on your instance. Also, the device names for devices that you specify in the block device mapping are renamed using NVMe device names (/dev/nvme[0-26]n1).\n[Linux instances] Therefore, to mount file systems at boot time using /etc/fstab, you must use UUID/Label instead of device names.\nVolume limit\nThe maximum number of Amazon EBS volumes that you can attach to an instance depends on the instance type and instance size. For more information, see Amazon EBS volume limits for Amazon EC2 instances.\nYou can only change to an instance type or instance size that supports the same number or a larger number of volumes than is currently attached to the instance. If you change to an instance type or instance size that does not support the number of currently attached volumes, the request fails. For example, if you change from an m7i.4xlarge instance with 32 attached volumes to an m6i.4xlarge, which supports a maximum of 27 volumes, the request fails.\nNitroTPM\nIf you launched the instance using an AMI with NitroTPM enabled and an instance type that supports NitroTPM, the instance launches with NitroTPM enabled. You can only change to an instance type that also supports NitroTPM."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/change-instance-type-of-ebs-backed-instance.html",
        "content": "Use the following instructions to change the instance type of an Amazon EBS-backed instance if the instance type that you need is compatible with the current configuration of your instance. For more information, see Compatibility for changing the instance type.\nConsiderations\nYou must stop your instance before you can change its instance type. Ensure that you plan for downtime while your instance is stopped. Stopping the instance and changing its instance type might take a few minutes, and restarting your instance might take a variable amount of time depending on your application's startup scripts. For more information, see Stop and start Amazon EC2 instances.\nWhen you stop and start an instance, we move the instance to new hardware. If your instance has a public IPv4 address, that is not an Elastic IP, we release the address and give your instance a new public IPv4 address. For more information on IP address behavior throughout the lifecycle of an instance, see Differences between instance states.\nYou can't change the instance type of a Spot Instance.\n[Windows instances] We recommend that you update the AWS PV driver package before changing the instance type. For more information, see Upgrade PV drivers on EC2 Windows instances.\nIf your instance is in an Auto Scaling group, the Amazon EC2 Auto Scaling service marks the stopped instance as unhealthy, and might terminate it and launch a replacement instance. To prevent this, you can suspend the scaling processes for the group while you're changing the instance type. For more information, see Suspending and resuming a process for an Auto Scaling group in the Amazon EC2 Auto Scaling User Guide.\nWhen you change the instance type of an instance with NVMe instance store volumes, the updated instance might have additional instance store volumes, because all NVMe instance store volumes are available even if they are not specified in the AMI or instance block device mapping. Otherwise, the updated instance has the same number of instance store volumes that you specified when you launched the original instance.\nThe maximum number of Amazon EBS volumes that you can attach to an instance depends on the instance type and instance size. You can't change to an instance type or instance size that does not support the number of volumes that are already attached to your instance. For more information, see Amazon EBS volume limits for Amazon EC2 instances.\n[Linux instances] You can use the AWSSupport-MigrateXenToNitroLinux runbook to migrate compatible Linux instances from a Xen instance type to a Nitro instance type. For more information, see AWSSupport-MigrateXenToNitroLinux runbook in the AWS Systems Manager Automation runbook reference.\n[Windows instances] For additional guidance on migrating compatible Windows instances from a Xen instance type to a Nitro instance type, see Migrate to latest generation instance types.\nTo change the instance type of an Amazon EBS-backed instance\n(Optional) If the new instance type requires drivers that are not installed on the existing instance, you must connect to your instance and install the drivers first. For more information, see Compatibility for changing the instance type.\n[Windows instances] If you configured your Windows instance to use static IP addressing and you change from an instance type that doesn't support enhanced networking to an instance type that does support enhanced networking, you might get a warning about a potential IP address conflict when you reconfigure static IP addressing. To prevent this, enable DHCP on the network interface for your instance before you change the instance type. From your instance, open the Network and Sharing Center, open Internet Protocol Version 4 (TCP/IPv4) Properties for the network interface, and choose Obtain an IP address automatically. Change the instance type and reconfigure static IP addressing on the network interface.\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance and choose Instance state, Stop instance. When prompted for confirmation, choose Stop. It can take a few minutes for the instance to stop.\nWith the instance still selected, choose Actions, Instance settings, Change instance type. This option is grayed out if the instance state is not stopped.\nOn the Change instance type page, do the following:\nFor Instance type, select the instance type that you want.\nIf the instance type is not in the list, then it's not compatible with the configuration of your instance. Instead, use the following instructions: Migrate to a new instance type by launching a new EC2 instance.\n(Optional) If the instance type that you selected supports EBS optimization, select EBS-optimized to enable EBS optimization, or deselect EBS-optimized to disable EBS optimization.\nIf the instance type that you selected is EBS optimized by default, EBS-optimized is selected and you can't deselect it.\n(Optional) Configure vCPU options on the new instance type.\nChanging the instance type resets CPU options to None. This option uses default vCPUs for the new instance type.\nIf the instance type that you selected supports vCPU configuration, select Specify CPU options in the Advanced details panel to configure vCPUs for your new instance type.\nChoose Change to accept the new settings.\nTo start the instance, select the instance and choose Instance state, Start instance. It can take a few minutes for the instance to enter the running state. If your instance won't start, see Troubleshoot changing the instance type.\n[Windows instances] If your instance runs Windows Server 2016 or Windows Server 2019 with EC2Launch v1, connect to your Windows instance and run the following EC2Launch PowerShell script to configure the instance after the instance type is changed.\nImportant\nThe administrator password will reset when you enable the initialize instance EC2 Launch script. You can modify the configuration file to disable the administrator password reset by specifying it in the settings for the initialization tasks. For steps on how to disable password reset, see Configure initialization tasks (EC2Launch) or Change settings (EC2Launch v2).\nPS C:\\> C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Scripts\\InitializeInstance.ps1 -Schedule"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/migrate-instance-configuration.html",
        "content": "You can change the instance type of an EC2 instance only if it is an EBS-backed instance with a configuration that is compatible with the new instance type that you want. Otherwise, if the configuration or your instance is not compatible with the new instance type, or it is an instance store-based instance, you must launch a replacement instance that is compatible with the instance type that you want. For more information about how compatibility is determined, see Compatibility for changing the instance type.\nOverview of the migration process\nBack up the data on the original instance.\nLaunch a new instance with a configuration that is compatible with the new instance type that you want, attaching any EBS volumes that were attached to your original instance.\nInstall your application on your new instance.\nRestore any data.\nIf the original instance has an Elastic IP address, you must associate it with your new instance to ensure that your users can continue to use your application without interruption.\nTo migrate an instance to a new instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nBack up any data that you still need as follows:\nConnect to your instance and copy the data on your instance store volumes to persistent storage.\nCreate snapshots of your EBS volumes so that you can create new volumes with the same data, or detach the volumes from the original instance so that you can attach them to the new instance.\nIn the navigation pane, choose Instances.\nChoose Launch instances. When you configure the instance, do the following:\nSelect an AMI that supports the instance type that you want. For example, you must select an AMI that supports the processor type of the new instance type. Also, current generation instance types require an HVM AMI.\nSelect the new instance type that you want. If the instance type that you want isn't available, then it's not compatible with the configuration of the AMI that you selected.\nIf you want to allow the same traffic to reach the new instance, select the same VPC and security group that are used with the original instance.\nWhen you're done configuring your new instance, complete the steps to select a key pair and launch your instance. It can take a few minutes for the instance to enter the running state.\nIf you backed up data to an EBS snapshot, create a volume from the snapshot and then attach the volume to the new instance.\nTo move an EBS volume from the original instance to the new instance, detach the volume from the original instance and then attach the volume to the new instance.\nInstall your application and any required software on the new instance.\nRestore any data that you backed up from the instance store volumes of the original instance.\nIf the original instance has an Elastic IP address, assign it to the new instance as follows:\nIn the navigation pane, choose Elastic IPs.\nSelect the Elastic IP address that is associated with the original instance and choose Actions, Disassociate Elastic IP address. When prompted for confirmation, choose Disassociate.\nWith the Elastic IP address still selected, choose Actions, Associate Elastic IP address.\nFor Resource type, choose Instance.\nFor Instance, choose the new instance.\n(Optional) For Private IP address, specify a private IP address with which to associate the Elastic IP address.\nChoose Associate.\n(Optional) You can terminate the original instance if it's no longer needed. Select the instance, verify that you are about to terminate the original instance and not the new instance (for example, check the name or launch time), and then choose Instance state, Terminate instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/troubleshoot-change-instance-type.html",
        "content": "Use the following information to help diagnose and fix issues that you might encounter when changing the instance type.\nInstance won't start after changing instance type\nPossible cause: Requirements for new instance type not met\nIf your instance won't boot, it is possible that one of the requirements for the new instance type was not met. For more information, see Why is my Linux instance not booting after I changed its type?\nPossible cause: AMI does not support instance type\nIf you use the EC2 console to change the instance type, only the instance types that are supported by the selected AMI are available. However, if you use the AWS CLI to launch an instance, you can specify an incompatible AMI and instance type. If the AMI and instance type are incompatible, the instance can't start. For more information, see Compatibility for changing the instance type.\nPossible cause: Instance is in cluster placement group\nIf your instance is in a cluster placement group and, after changing the instance type, the instance fails to start, try the following:\nStop all the instances in the cluster placement group.\nChange the instance type of the affected instance.\nStart all the instances in the cluster placement group.\nApplication or website not reachable from the internet after changing instance type\nPossible cause: Public IPv4 address is released\nWhen you change the instance type, you must first stop the instance. When you stop an instance, we release the public IPv4 address and give your instance a new public IPv4 address.\nTo retain the public IPv4 address between instance stops and starts, we recommend that you use an Elastic IP address, at no extra cost provided your instance is running. For more information, see Elastic IP addresses."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html",
        "content": "Many general purpose workloads are on average not busy, and do not require a high level of sustained CPU performance. The following graph illustrates the CPU utilization for many common workloads that customers run in the AWS Cloud today.\nThese low-to-moderate CPU utilization workloads lead to wastage of CPU cycles and, as a result, you pay for more than you use. To overcome this, you can leverage the low-cost burstable general purpose instances, which are the T instances.\nThe T instance family provides a baseline CPU performance with the ability to burst above the baseline at any time for as long as required. The baseline CPU is defined to meet the needs of the majority of general purpose workloads, including large-scale micro-services, web servers, small and medium databases, data logging, code repositories, virtual desktops, development and test environments, and business-critical applications. The T instances offer a balance of compute, memory, and network resources, and provide you with the most cost-effective way to run a broad spectrum of general purpose applications that have a low-to-moderate CPU usage. They can save you up to 15% in costs when compared to M instances, and can lead to even more cost savings with smaller, more economical instance sizes, offering as low as 2 vCPUs and 0.5 GiB of memory. The smaller T instance sizes, such as nano, micro, small, and medium, are well suited for workloads that need a small amount of memory and do not expect high CPU usage.\nNote\nThis topic describes burstable CPU. For information about burstable network performance, see Amazon EC2 instance network bandwidth.\nEC2 burstable instance types\nThe EC2 burstable instances consist of T4g, T3a, and T3 instance types, and the previous generation T2 instance types.\nThe T4g instance types are the latest generation of burstable instances. They provide the best price for performance, and provide you with the lowest cost of all the EC2 instance types. The T4g instance types are powered by Arm-based AWS Graviton2 processors with extensive ecosystem support from operating systems vendors, independent software vendors, and popular AWS services and applications.\nThe following table summarizes the key differences between the burstable instance types.\nType Description Processor family\nLatest generation\nT4g\nLowest cost EC2 instance type with up to 40% higher price/performance and 20% lower costs vs T3\nAWS Graviton2 processors with Arm Neoverse N1 cores\nT3a\nLowest cost x86-based instances with 10% lower costs vs T3 instances\nAMD 1st gen EPYC processors\nT3\nBest peak price/performance for x86 workloads with up to 30% lower price/performance vs previous generation T2 instances\nIntel Xeon Scalable (Skylake, Cascade Lake processors)\nPrevious generation\nT2\nPrevious generation burstable instances\nIntel Xeon processors\nFor information about instance pricing and additional specifications, see Amazon EC2 Pricing and Amazon EC2 Instance Types. For information about burstable network performance, see Amazon EC2 instance network bandwidth.\nIf your account is less than 12 months old, you can use a t2.micro instance for free (or a t3.micro instance in Regions where t2.micro is unavailable) within certain usage limits. For more information, see AWS Free Tier.\nSupported purchasing options for T instances\nOn-Demand Instances\nReserved Instances\nDedicated Instances (T3 only)\nDedicated Hosts (T3 only, in standard mode only)\nSpot Instances\nFor more information, see Amazon EC2 billing and purchasing options.\nContents\nBest practices\nKey concepts for burstable performance instances\nUnlimited mode for burstable performance instances\nStandard mode for burstable performance instances\nWork with burstable performance instances\nMonitor CPU credits for burstable instances\nBest practices\nFollow these best practices to get the maximum benefit from burstable performance instances.\nEnsure that the instance size you choose passes the minimum memory requirements of your operating system and applications. Operating systems with graphical user interfaces that consume significant memory and CPU resources (for example, Windows) might require a t3.micro or larger instance size for many use cases. As the memory and CPU requirements of your workload grow over time, you have the flexibility with the T instances to scale to larger instance sizes of the same instance type, or to select another instance type.\nEnable AWS Compute Optimizer for your account and review the Compute Optimizer recommendations for your workload. Compute Optimizer can help assess whether instances should be upsized to improve performance or downsized for cost savings. Compute Optimizer may also recommend a different instance type based on your scenario. For more information, see Viewing EC2 instance recommendations in the AWS Compute Optimizer User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-credits-baseline-concepts.html",
        "content": "Traditional Amazon EC2 instance types provide fixed CPU resources, while burstable performance instances provide a baseline level of CPU utilization with the ability to burst CPU utilization above the baseline level. This ensures that you pay only for baseline CPU plus any additional burst CPU usage resulting in lower compute costs. The baseline utilization and ability to burst are governed by CPU credits. Burstable performance instances are the only instance types that use credits for CPU usage.\nEach burstable performance instance continuously earns credits when it stays below the CPU baseline, and continuously spends credits when it bursts above the baseline. The amount of credits earned or spent depends on the CPU utilization of the instance:\nIf the CPU utilization is below baseline, then credits earned are greater than credits spent.\nIf the CPU utilization is equal to baseline, then credits earned are equal to credits spent.\nIf the CPU utilization is higher than baseline, then credits spent are higher than credits earned.\nWhen the credits earned are greater than credits spent, then the difference is called accrued credits, which can be used later to burst above baseline CPU utilization. Similarly, when the credits spent are more than credits earned, then the instance behavior depends on the credit configuration mode\u2014Standard mode or Unlimited mode.\nIn Standard mode, when credits spent are more than credits earned, the instance uses the accrued credits to burst above baseline CPU utilization. If there are no accrued credits remaining, then the instance gradually comes down to baseline CPU utilization and cannot burst above baseline until it accrues more credits.\nIn Unlimited mode, if the instance bursts above baseline CPU utilization, then the instance first uses the accrued credits to burst. If there are no accrued credits remaining, then the instance spends surplus credits to burst. When its CPU utilization falls below the baseline, it uses the CPU credits that it earns to pay down the surplus credits that it spent earlier. The ability to earn CPU credits to pay down surplus credits enables Amazon EC2 to average the CPU utilization of an instance over a 24-hour period. If the average CPU usage over a 24-hour period exceeds the baseline, the instance is billed for the additional usage at a flat additional rate per vCPU-hour.\nContents\nKey concepts and definitions\nEarn CPU credits\nCPU credit earn rate\nCPU credit accrual limit\nAccrued CPU credits life span\nBaseline utilization\nKey concepts and definitions\nThe following key concepts and definitions are applicable to burstable performance instances.\nCPU utilization\nCPU utilization is the percentage of allocated EC2 compute units that are currently in use on the instance. This metric measures the percentage of allocated CPU cycles that are being utilized on an instance. The CPU Utilization CloudWatch metric shows CPU usage per instance and not CPU usage per core. The baseline CPU specification of an instance is also based on the CPU usage per instance. To measure CPU utilization using the AWS Management Console or the AWS CLI, see Get statistics for a specific instance.\nCPU credit\nA unit of vCPU-time.\nExamples:\n1 CPU credit = 1 vCPU * 100% utilization * 1 minute.\n1 CPU credit = 1 vCPU * 50% utilization * 2 minutes\n1 CPU credit = 2 vCPU * 25% utilization * 2 minutes\nBaseline utilization\nThe baseline utilization is the level at which the CPU can be utilized for a net credit balance of zero, when the number of CPU credits being earned matches the number of CPU credits being used. Baseline utilization is also known as the baseline. Baseline utilization is expressed as a percentage of vCPU utilization, which is calculated as follows: Baseline utilization % = (number of credits earned/number of vCPUs)/60 minutes.\nFor the baseline utilization of each burstable performance instance type, see the credit table.\nEarned credits\nCredits earned continuously by an instance when it is running.\nNumber of credits earned per hour = % baseline utilization * number of vCPUs * 60 minutes\nExample:\nA t3.nano with 2 vCPUs and a baseline utilization of 5% earns 6 credits per hour, calculated as follows:\n2 vCPUs * 5% baseline * 60 minutes = 6 credits per hour\nSpent or used credits\nCredits used continuously by an instance when it is running.\nCPU credits spent per minute = Number of vCPUs * CPU utilization * 1 minute\nAccrued credits\nUnspent CPU credits when an instance uses fewer credits than is required for baseline utilization. In other words, accrued credits = (Earned credits \u2013 Used credits) below baseline.\nExample:\nIf a t3.nano is running at 2% CPU utilization, which is below its baseline of 5% for an hour, the accrued credits is calculated as follows:\nAccrued CPU credits = (Earned credits per hour \u2013 Used credits per hour) = 6 \u2013 2 vCPUs * 2% CPU utilization * 60 minutes = 6 \u2013 2.4 = 3.6 accrued credits per hour\nCredit accrual limit\nDepends on the instance size but in general is equal to the number of maximum credits earned in 24 hours.\nExample:\nFor t3.nano, the credit accrual limit = 24 * 6 = 144 credits\nLaunch credits\nOnly applicable for T2 instances configured for Standard mode. Launch credits are a limited number of CPU credits that are allocated to a new T2 instance so that, when launched in Standard mode, it can burst above the baseline.\nSurplus credits\nCredits that are spent by an instance after it depletes its accrued credit balance. The surplus credits are designed for burstable instances to sustain high performance for an extended period of time, and are only used in Unlimited mode. The surplus credits balance is used to determine how many credits were used by the instance for bursting in Unlimited mode.\nStandard mode\nCredit configuration mode, which allows an instance to burst above the baseline by spending credits it has accrued in its credit balance.\nUnlimited mode\nCredit configuration mode, which allows an instance to burst above the baseline by sustaining high CPU utilization for any period of time whenever required. The hourly instance price automatically covers all CPU usage spikes if the average CPU utilization of the instance is at or below the baseline over a rolling 24-hour period or the instance lifetime, whichever is shorter. If the instance runs at higher CPU utilization for a prolonged period, it can do so for a flat additional rate per vCPU-hour.\nThe following table summarizes the key credit differences between the burstable instance types.\nType Type of CPU credits supported Credit configuration modes Accrued CPU credits lifespan between instance starts and stops\nLatest generation\nT4g\nEarned credits, Accrued credits, Spent credits, Surplus credits (Unlimited mode only)\nStandard, Unlimited (default)\n7 days (credits persist for 7 days after an instance stops)\nT3a\nEarned credits, Accrued credits, Spent credits, Surplus credits (Unlimited mode only)\nStandard, Unlimited (default)\n7 days (credits persist for 7 days after an instance stops)\nT3\nEarned credits, Accrued credits, Spent credits, Surplus credits (Unlimited mode only)\nStandard, Unlimited (default)\n7 days (credits persist for 7 days after an instance stops)\nPrevious generation\nT2\nEarned credits, Accrued credits, Spent credits, Launch credits (Standard mode only), Surplus credits (Unlimited mode only)\nStandard (default), Unlimited\n0 days (credits are lost when an instance stops)\nNote\nUnlimited mode is not supported for T3 instances that are launched on a Dedicated Host.\nEarn CPU credits\nEach burstable performance instance continuously earns (at a millisecond-level resolution) a set rate of CPU credits per hour, depending on the instance size. The accounting process for whether credits are accrued or spent also happens at a millisecond-level resolution, so you don't have to worry about overspending CPU credits; a short burst of CPU uses a small fraction of a CPU credit.\nIf a burstable performance instance uses fewer CPU resources than is required for baseline utilization (such as when it is idle), the unspent CPU credits are accrued in the CPU credit balance. If a burstable performance instance needs to burst above the baseline utilization level, it spends the accrued credits. The more credits that a burstable performance instance has accrued, the more time it can burst beyond its baseline when more CPU utilization is needed.\nThe following table lists the burstable performance instance types, the rate at which CPU credits are earned per hour, the maximum number of earned CPU credits that an instance can accrue, the number of vCPUs per instance, and the baseline utilization as a percentage of a full core (using a single vCPU).\nInstance type\nCPU credits earned per hour\nMaximum earned credits that can be accrued*\nvCPUs***\nBaseline utilization per vCPU\nT2\nt2.nano\n3\n72\n1\n5%\nt2.micro\n6\n144\n1\n10%\nt2.small\n12\n288\n1\n20%\nt2.medium\n24\n576\n2\n20%**\nt2.large\n36\n864\n2\n30%**\nt2.xlarge\n54\n1296\n4\n22.5%**\nt2.2xlarge\n81.6\n1958.4\n8\n17%**\nT3\nt3.nano\n6\n144\n2\n5%**\nt3.micro\n12\n288\n2\n10%**\nt3.small\n24\n576\n2\n20%**\nt3.medium\n24\n576\n2\n20%**\nt3.large\n36\n864\n2\n30%**\nt3.xlarge\n96\n2304\n4\n40%**\nt3.2xlarge\n192\n4608\n8\n40%**\nT3a\nt3a.nano\n6\n144\n2\n5%**\nt3a.micro\n12\n288\n2\n10%**\nt3a.small\n24\n576\n2\n20%**\nt3a.medium\n24\n576\n2\n20%**\nt3a.large\n36\n864\n2\n30%**\nt3a.xlarge\n96\n2304\n4\n40%**\nt3a.2xlarge\n192\n4608\n8\n40%**\nT4g\nt4g.nano\n6\n144\n2\n5%**\nt4g.micro\n12\n288\n2\n10%**\nt4g.small\n24\n576\n2\n20%**\nt4g.medium\n24\n576\n2\n20%**\nt4g.large\n36\n864\n2\n30%**\nt4g.xlarge\n96\n2304\n4\n40%**\nt4g.2xlarge\n192\n4608\n8\n40%**\n* The number of credits that can be accrued is equivalent to the number of credits that can be earned in a 24-hour period.\n** The percentage baseline utilization in the table is per vCPU. In CloudWatch, CPU utilization is shown per vCPU. For example, the CPU utilization for a t3.large instance operating at the baseline level is shown as 30% in CloudWatch CPU metrics. For information about how to calculate the baseline utilization, see Baseline utilization.\n*** Each vCPU is a thread of either an Intel Xeon core or an AMD EPYC core, except for T2 and T4g instances.\nCPU credit earn rate\nThe number of CPU credits earned per hour is determined by the instance size. For example, a t3.nano earns six credits per hour, while a t3.small earns 24 credits per hour. The preceding table lists the credit earn rate for all instances.\nCPU credit accrual limit\nWhile earned credits never expire on a running instance, there is a limit to the number of earned credits that an instance can accrue. The limit is determined by the CPU credit balance limit. After the limit is reached, any new credits that are earned are discarded, as indicated by the following image. The full bucket indicates the CPU credit balance limit, and the spillover indicates the newly earned credits that exceed the limit.\nThe CPU credit balance limit differs for each instance size. For example, a t3.micro instance can accrue a maximum of 288 earned CPU credits in the CPU credit balance. The preceding table lists the maximum number of earned credits that each instance can accrue.\nT2 Standard instances also earn launch credits. Launch credits do not count towards the CPU credit balance limit. If a T2 instance has not spent its launch credits, and remains idle over a 24-hour period while accruing earned credits, its CPU credit balance appears as over the limit. For more information, see Launch credits.\nT4g, T3a, and T3 instances do not earn launch credits. These instances launch as unlimited by default, and therefore can burst immediately upon start without any launch credits. T3 instances launched on a Dedicated Host launch as standard by default; unlimited mode is not supported for T3 instances on a Dedicated Host.\nAccrued CPU credits life span\nCPU credits on a running instance do not expire.\nFor T2, the CPU credit balance does not persist between instance stops and starts. If you stop a T2 instance, the instance loses all its accrued credits.\nFor T4g, T3a, and T3, the CPU credit balance persists for seven days after an instance stops and the credits are lost thereafter. If you start the instance within seven days, no credits are lost.\nFor more information, see CPUCreditBalance in the CloudWatch metrics table.\nBaseline utilization\nThe baseline utilization is the level at which the CPU can be utilized for a net credit balance of zero, when the number of CPU credits being earned matches the number of CPU credits being used. Baseline utilization is also known as the baseline.\nBaseline utilization is expressed as a percentage of vCPU utilization, which is calculated as follows:\n(number of credits earned/number of vCPUs)/60 minutes = % baseline utilization\nFor example, a t3.nano instance, with 2 vCPUs, earns 6 credits per hour, resulting in a baseline utilization of 5% , which is calculated as follows:\n(6 credits earned/2 vCPUs)/60 minutes = 5% baseline utilization\nA t3.large instance, with 2 vCPUs, earns 36 credits per hour, resulting in a baseline utilization of 30% ((36/2)/60).\nThe following graph provides an example of a t3.large with an average CPU utilization below the baseline."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances-unlimited-mode.html",
        "content": "A burstable performance instance configured as unlimited can sustain high CPU utilization for any period of time whenever required. The hourly instance price automatically covers all CPU usage spikes if the average CPU utilization of the instance is at or below the baseline over a rolling 24-hour period or the instance lifetime, whichever is shorter.\nFor the vast majority of general-purpose workloads, instances configured as unlimited provide ample performance without any additional charges. If the instance runs at higher CPU utilization for a prolonged period, it can do so for a flat additional rate per vCPU-hour. For information about pricing, see Amazon EC2 pricing and T2/T3/T4 Unlimited Mode Pricing.\nIf you use a t2.micro or t3.micro instance under the AWS Free Tier offer and use it in unlimited mode, charges might apply if your average utilization over a rolling 24-hour period exceeds the baseline utilization of the instance.\nT4g, T3a, and T3 instances launch as unlimited by default (unless you change the default). If the average CPU usage over a 24-hour period exceeds the baseline, you incur charges for surplus credits. If you launch Spot Instances as unlimited and plan to use them immediately and for a short duration, with no idle time for accruing CPU credits, you incur charges for surplus credits. We recommend that you launch your Spot Instances in standard mode to avoid paying higher costs. For more information, see Surplus credits can incur charges and Launch burstable performance instances.\nNote\nT3 instances launched on a Dedicated Host launch as standard by default; unlimited mode is not supported for T3 instances on a Dedicated Host.\nContents\nUnlimited mode concepts for burstable instances\nHow Unlimited burstable performance instances work\nWhen to use unlimited mode versus fixed CPU\nSurplus credits can incur charges\nNo launch credits for T2 Unlimited instances\nEnable unlimited mode\nWhat happens to credits when switching between Unlimited and Standard\nMonitor credit usage\nUnlimited mode examples for burstable instances\nExample 1: Explain credit use with T3 Unlimited\nExample 2: Explain credit use with T2 Unlimited"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances-unlimited-mode-concepts.html",
        "content": "The unlimited mode is a credit configuration option for burstable performance instances. It can be enabled or disabled at any time for a running or stopped instance. You can set unlimited as the default credit option at the account level per AWS Region, per burstable performance instance family, so that all new burstable performance instances in the account launch using the default credit option.\nHow Unlimited burstable performance instances work\nIf a burstable performance instance configured as unlimited depletes its CPU credit balance, it can spend surplus credits to burst beyond the baseline. When its CPU utilization falls below the baseline, it uses the CPU credits that it earns to pay down the surplus credits that it spent earlier. The ability to earn CPU credits to pay down surplus credits enables Amazon EC2 to average the CPU utilization of an instance over a 24-hour period. If the average CPU usage over a 24-hour period exceeds the baseline, the instance is billed for the additional usage at a flat additional rate per vCPU-hour.\nThe following graph shows the CPU usage of a t3.large. The baseline CPU utilization for a t3.large is 30%. If the instance runs at 30% CPU utilization or less on average over a 24-hour period, there is no additional charge because the cost is already covered by the instance hourly price. However, if the instance runs at 40% CPU utilization on average over a 24-hour period, as shown in the graph, the instance is billed for the additional 10% CPU usage at a flat additional rate per vCPU-hour.\nFor more information about the baseline utilization per vCPU for each instance type and how many credits each instance type earns, see the credit table.\nWhen to use unlimited mode versus fixed CPU\nWhen determining whether you should use a burstable performance instance in unlimited mode, such as T3, or a fixed performance instance, such as M5, you need to determine the breakeven CPU usage. The breakeven CPU usage for a burstable performance instance is the point at which a burstable performance instance costs the same as a fixed performance instance. The breakeven CPU usage helps you determine the following:\nIf the average CPU usage over a 24-hour period is at or below the breakeven CPU usage, use a burstable performance instance in unlimited mode so that you can benefit from the lower price of a burstable performance instance while getting the same performance as a fixed performance instance.\nIf the average CPU usage over a 24-hour period is above the breakeven CPU usage, the burstable performance instance will cost more than the equivalently-sized fixed performance instance. If a T3 instance continuously bursts at 100% CPU, you end up paying approximately 1.5 times the price of an equivalently-sized M5 instance.\nThe following graph shows the breakeven CPU usage point where a t3.large costs the same as an m5.large. The breakeven CPU usage point for a t3.large is 42.5%. If the average CPU usage is at 42.5%, the cost of running the t3.large is the same as an m5.large, and is more expensive if the average CPU usage is above 42.5%. If the workload needs less than 42.5% average CPU usage, you can benefit from the lower price of the t3.large while getting the same performance as an m5.large.\nThe following table shows how to calculate the breakeven CPU usage threshold so that you can determine when it's less expensive to use a burstable performance instance in unlimited mode or a fixed performance instance. The columns in the table are labeled A through K.\nInstance type\nvCPUs\nT3 price*/hour\nM5 price*/hour\nPrice difference\nT3 baseline utilization per vCPU (%)\nCharge per vCPU hour for surplus credits\nCharge per vCPU minute\nAdditional burst minutes available per vCPU\nAdditional CPU % available\nBreakeven CPU %\nA\nB\nC\nD\nE = D - C\nF\nG\nH = G / 60\nI = E / H\nJ = (I / 60) / B\nK = F + J\nt3.large\n2\n$0.0835\n$0.096\n$0.0125\n30%\n$0.05\n$0.000833\n15\n12.5%\n42.5%\n* Price is based on us-east-1 and Linux OS.\nThe table provides the following information:\nColumn A shows the instance type, t3.large.\nColumn B shows the number of vCPUs for the t3.large.\nColumn C shows the price of a t3.large per hour.\nColumn D shows the price of an m5.large per hour.\nColumn E shows the price difference between the t3.large and the m5.large.\nColumn F shows the baseline utilization per vCPU of the t3.large, which is 30%. At the baseline, the hourly cost of the instance covers the cost of the CPU usage.\nColumn G shows the flat additional rate per vCPU-hour that an instance is charged if it bursts at 100% CPU after it has depleted its earned credits.\nColumn H shows the flat additional rate per vCPU-minute that an instance is charged if it bursts at 100% CPU after it has depleted its earned credits.\nColumn I shows the number of additional minutes that the t3.large can burst per hour at 100% CPU while paying the same price per hour as an m5.large.\nColumn J shows the additional CPU usage (in %) over baseline that the instance can burst while paying the same price per hour as an m5.large.\nColumn K shows the breakeven CPU usage (in %) that the t3.large can burst without paying more than the m5.large. Anything above this, and the t3.large costs more than the m5.large.\nThe following table shows the breakeven CPU usage (in %) for T3 instance types compared to the similarly-sized M5 instance types.\nT3 instance type Breakeven CPU usage (in %) for T3 compared to M5\nt3.large 42.5%\nt3.xlarge 52.5%\nt3.2xlarge 52.5%\nSurplus credits can incur charges\nIf the average CPU utilization of an instance is at or below the baseline, the instance incurs no additional charges. Because an instance earns a maximum number of credits in a 24-hour period (for example, a t3.micro instance can earn a maximum of 288 credits in a 24-hour period), it can spend surplus credits up to that maximum without being charged.\nHowever, if CPU utilization stays above the baseline, the instance cannot earn enough credits to pay down the surplus credits that it has spent. The surplus credits that are not paid down are charged at a flat additional rate per vCPU-hour. For information about the rate, see T2/T3/T4g Unlimited Mode Pricing.\nSurplus credits that were spent earlier are charged when any of the following occurs:\nThe spent surplus credits exceed the maximum number of credits the instance can earn in a 24-hour period. Spent surplus credits above the maximum are charged at the end of the hour.\nThe instance is stopped or terminated.\nThe instance is switched from unlimited to standard.\nSpent surplus credits are tracked by the CloudWatch metric CPUSurplusCreditBalance. Surplus credits that are charged are tracked by the CloudWatch metric CPUSurplusCreditsCharged. For more information, see Additional CloudWatch metrics for burstable performance instances.\nNo launch credits for T2 Unlimited instances\nT2 Standard instances receive launch credits, but T2 Unlimited instances do not. A T2 Unlimited instance can burst beyond the baseline at any time with no additional charge, as long as its average CPU utilization is at or below the baseline over a rolling 24-hour window or its lifetime, whichever is shorter. As such, T2 Unlimited instances do not require launch credits to achieve high performance immediately after launch.\nIf a T2 instance is switched from standard to unlimited, any accrued launch credits are removed from the CPUCreditBalance before the remaining CPUCreditBalance is carried over.\nT4g, T3a, and T3 instances never receive launch credits because they launch in Unlimited mode by default, and therefore can burst immediately upon start. The Unlimited mode credit configuration enables T4g, T3a, and T3 instances to use as much CPU as needed to burst beyond the baseline and for as long as needed.\nEnable unlimited mode\nYou can switch from unlimited to standard, and from standard to unlimited, at any time on a running or stopped instance. For more information, see Launch a burstable performance instance as Unlimited or Standard and Modify the credit specification of a burstable performance instance.\nYou can set unlimited as the default credit option at the account level per AWS Region, per burstable performance instance family, so that all new burstable performance instances in the account launch using the default credit option. For more information, see Set the default credit specification for the account.\nYou can check whether your burstable performance instance is configured as unlimited or standard using the Amazon EC2 console or the AWS CLI. For more information, see View the credit specification of a burstable performance instance and View the default credit specification.\nWhat happens to credits when switching between Unlimited and Standard\nCPUCreditBalance is a CloudWatch metric that tracks the number of credits accrued by an instance. CPUSurplusCreditBalance is a CloudWatch metric that tracks the number of surplus credits spent by an instance.\nWhen you change an instance configured as unlimited to standard, the following occurs:\nThe CPUCreditBalance value remains unchanged and is carried over.\nThe CPUSurplusCreditBalance value is immediately charged.\nWhen a standard instance is switched to unlimited, the following occurs:\nThe CPUCreditBalance value containing accrued earned credits is carried over.\nFor T2 Standard instances, any launch credits are removed from the CPUCreditBalance value, and the remaining CPUCreditBalance value containing accrued earned credits is carried over.\nMonitor credit usage\nTo see if your instance is spending more credits than the baseline provides, you can use CloudWatch metrics to track usage, and you can set up hourly alarms to be notified of credit usage. For more information, see Monitor CPU credits for burstable instances."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/unlimited-mode-examples.html",
        "content": "The following examples explain credit use for instances that are configured as unlimited.\nExamples\nExample 1: Explain credit use with T3 Unlimited\nExample 2: Explain credit use with T2 Unlimited\nExample 1: Explain credit use with T3 Unlimited\nIn this example, you see the CPU utilization of a t3.nano instance launched as unlimited, and how it spends earned and surplus credits to sustain CPU utilization.\nA t3.nano instance earns 144 CPU credits over a rolling 24-hour period, which it can redeem for 144 minutes of vCPU use. When it depletes its CPU credit balance (represented by the CloudWatch metric CPUCreditBalance), it can spend surplus CPU credits\u2014that it has not yet earned\u2014to burst for as long as it needs. Because a t3.nano instance earns a maximum of 144 credits in a 24-hour period, it can spend surplus credits up to that maximum without being charged immediately. If it spends more than 144 CPU credits, it is charged for the difference at the end of the hour.\nThe intent of the example, illustrated by the following graph, is to show how an instance can burst using surplus credits even after it depletes its CPUCreditBalance. The following workflow references the numbered points on the graph:\nP1 \u2013 At 0 hours on the graph, the instance is launched as unlimited and immediately begins to earn credits. The instance remains idle from the time it is launched\u2014CPU utilization is 0%\u2014and no credits are spent. All unspent credits are accrued in the credit balance. For the first 24 hours, CPUCreditUsage is at 0, and the CPUCreditBalance value reaches its maximum of 144.\nP2 \u2013 For the next 12 hours, CPU utilization is at 2.5%, which is below the 5% baseline. The instance earns more credits than it spends, but the CPUCreditBalance value cannot exceed its maximum of 144 credits.\nP3 \u2013 For the next 24 hours, CPU utilization is at 7% (above the baseline), which requires a spend of 57.6 credits. The instance spends more credits than it earns, and the CPUCreditBalance value reduces to 86.4 credits.\nP4 \u2013 For the next 12 hours, CPU utilization decreases to 2.5% (below the baseline), which requires a spend of 36 credits. In the same time, the instance earns 72 credits. The instance earns more credits than it spends, and the CPUCreditBalance value increases to 122 credits.\nP5 \u2013 For the next 5 hours, the instance bursts at 100% CPU utilization, and spends a total of 570 credits to sustain the burst. About an hour into this period, the instance depletes its entire CPUCreditBalance of 122 credits, and starts to spend surplus credits to sustain the high CPU utilization, totaling 448 surplus credits in this period (570-122=448). When the CPUSurplusCreditBalance value reaches 144 CPU credits (the maximum a t3.nano instance can earn in a 24-hour period), any surplus credits spent thereafter cannot be offset by earned credits. The surplus credits spent thereafter amounts to 304 credits (448-144=304), which results in a small additional charge at the end of the hour for 304 credits.\nP6 \u2013 For the next 13 hours, CPU utilization is at 5% (the baseline). The instance earns as many credits as it spends, with no excess to pay down the CPUSurplusCreditBalance. The CPUSurplusCreditBalance value remains at 144 credits.\nP7 \u2013 For the last 24 hours in this example, the instance is idle and CPU utilization is 0%. During this time, the instance earns 144 credits, which it uses to pay down the CPUSurplusCreditBalance.\nExample 2: Explain credit use with T2 Unlimited\nIn this example, you see the CPU utilization of a t2.nano instance launched as unlimited, and how it spends earned and surplus credits to sustain CPU utilization.\nA t2.nano instance earns 72 CPU credits over a rolling 24-hour period, which it can redeem for 72 minutes of vCPU use. When it depletes its CPU credit balance (represented by the CloudWatch metric CPUCreditBalance), it can spend surplus CPU credits\u2014that it has not yet earned\u2014to burst for as long as it needs. Because a t2.nano instance earns a maximum of 72 credits in a 24-hour period, it can spend surplus credits up to that maximum without being charged immediately. If it spends more than 72 CPU credits, it is charged for the difference at the end of the hour.\nThe intent of the example, illustrated by the following graph, is to show how an instance can burst using surplus credits even after it depletes its CPUCreditBalance. You can assume that, at the start of the time line in the graph, the instance has an accrued credit balance equal to the maximum number of credits it can earn in 24 hours. The following workflow references the numbered points on the graph:\n1 \u2013 In the first 10 minutes, CPUCreditUsage is at 0, and the CPUCreditBalance value remains at its maximum of 72.\n2 \u2013 At 23:40, as CPU utilization increases, the instance spends CPU credits and the CPUCreditBalance value decreases.\n3 \u2013 At around 00:47, the instance depletes its entire CPUCreditBalance, and starts to spend surplus credits to sustain high CPU utilization.\n4 \u2013 Surplus credits are spent until 01:55, when the CPUSurplusCreditBalance value reaches 72 CPU credits. This is equal to the maximum a t2.nano instance can earn in a 24-hour period. Any surplus credits spent thereafter cannot be offset by earned credits within the 24-hour period, which results in a small additional charge at the end of the hour.\n5 \u2013 The instance continues to spend surplus credits until around 02:20. At this time, CPU utilization falls below the baseline, and the instance starts to earn credits at 3 credits per hour (or 0.25 credits every 5 minutes), which it uses to pay down the CPUSurplusCreditBalance. After the CPUSurplusCreditBalance value reduces to 0, the instance starts to accrue earned credits in its CPUCreditBalance at 0.25 credits every 5 minutes.\nCalculating the bill (Linux instance)\nSurplus credits cost $0.05 per vCPU-hour. The instance spent approximately 25 surplus credits between 01:55 and 02:20, which is equivalent to 0.42 vCPU-hours. Additional charges for this instance are 0.42 vCPU-hours x $0.05/vCPU-hour = $0.021, rounded to $0.02. Here is the month-end bill for this T2 Unlimited instance:\nCalculating the bill (Windows instance)\nSurplus credits cost $0.096 per vCPU-hour. The instance spent approximately 25 surplus credits between 01:55 and 02:20, which is equivalent to 0.42 vCPU-hours. Additional charges for this instance are 0.42 vCPU-hours x $0.096/vCPU-hour = $0.04032, rounded to $0.04. Here is the month-end bill for this T2 Unlimited instance:\nYou can set billing alerts to be notified every hour of any accruing charges, and take action if required."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances-standard-mode.html",
        "content": "A burstable performance instance configured as standard is suited to workloads with an average CPU utilization that is consistently below the baseline CPU utilization of the instance. To burst above the baseline, the instance spends credits that it has accrued in its CPU credit balance. If the instance is running low on accrued credits, CPU utilization is gradually lowered to the baseline level, so that the instance does not experience a sharp performance drop-off when its accrued CPU credit balance is depleted. For more information, see Key concepts for burstable performance instances.\nContents\nStandard mode concepts for burstable instances\nHow standard burstable performance instances work\nLaunch credits\nLaunch credit limits\nDifferences between launch credits and earned credits\nStandard mode examples for burstable instances\nExample 1: Explain credit use with T3 Standard\nExample 2: Explain credit use with T2 Standard\nPeriod 1: 1 \u2013 24 hours\nPeriod 2: 25 \u2013 36 hours\nPeriod 3: 37 \u2013 61 hours\nPeriod 4: 62 \u2013 72 hours\nPeriod 5: 73 \u2013 75 hours\nPeriod 6: 76 \u2013 90 hours\nPeriod 7: 91 \u2013 96 hours"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances-standard-mode-concepts.html",
        "content": "The standard mode is a configuration option for burstable performance instances. It can be enabled or disabled at any time for a running or stopped instance. You can set standard as the default credit option at the account level per AWS Region, per burstable performance instance family, so that all new burstable performance instances in the account launch using the default credit option.\nHow standard burstable performance instances work\nWhen a burstable performance instance configured as standard is in a running state, it continuously earns (at a millisecond-level resolution) a set rate of earned credits per hour. For T2 Standard, when the instance is stopped, it loses all its accrued credits, and its credit balance is reset to zero. When it is restarted, it receives a new set of launch credits, and begins to accrue earned credits. For T4g, T3a, and T3 Standard instances, the CPU credit balance persists for seven days after the instance stops and the credits are lost thereafter. If you start the instance within seven days, no credits are lost.\nT2 Standard instances receive two types of CPU credits: earned credits and launch credits. When a T2 Standard instance is in a running state, it continuously earns (at a millisecond-level resolution) a set rate of earned credits per hour. At start, it has not yet earned credits for a good startup experience; therefore, to provide a good startup experience, it receives launch credits at start, which it spends first while it accrues earned credits.\nT4g, T3a, and T3 instances do not receive launch credits because they support Unlimited mode. The Unlimited mode credit configuration enables T4g, T3a, and T3 instances to use as much CPU as needed to burst beyond baseline and for as long as needed.\nLaunch credits\nT2 Standard instances get 30 launch credits per vCPU at launch or start, and T1 Standard instances get 15 launch credits. For example, a t2.micro instance has one vCPU and gets 30 launch credits, while a t2.xlarge instance has four vCPUs and gets 120 launch credits. Launch credits are designed to provide a good startup experience to allow instances to burst immediately after launch before they have accrued earned credits.\nLaunch credits are spent first, before earned credits. Unspent launch credits are accrued in the CPU credit balance, but do not count towards the CPU credit balance limit. For example, a t2.micro instance has a CPU credit balance limit of 144 earned credits. If it is launched and remains idle for 24 hours, its CPU credit balance reaches 174 (30 launch credits + 144 earned credits), which is over the limit. However, after the instance spends the 30 launch credits, the credit balance cannot exceed 144. For more information about the CPU credit balance limit for each instance size, see the credit table.\nThe following table lists the initial CPU credit allocation received at launch or start, and the number of vCPUs.\nInstance type\nLaunch credits\nvCPUs\nt1.micro\n15\n1\nt2.nano\n30\n1\nt2.micro\n30\n1\nt2.small\n30\n1\nt2.medium\n60\n2\nt2.large\n60\n2\nt2.xlarge\n120\n4\nt2.2xlarge\n240\n8\nLaunch credit limits\nThere is a limit to the number of times T2 Standard instances can receive launch credits. The default limit is 100 launches or starts of all T2 Standard instances combined per account, per Region, per rolling 24-hour period. For example, the limit is reached when one instance is stopped and started 100 times within a 24-hour period, or when 100 instances are launched within a 24-hour period, or other combinations that equate to 100 starts. New accounts may have a lower limit, which increases over time based on your usage.\nTip\nTo ensure that your workloads always get the performance they need, switch to Unlimited mode for burstable performance instances or consider using a larger instance size.\nDifferences between launch credits and earned credits\nThe following table lists the differences between launch credits and earned credits.\nLaunch credits\nEarned credits\nCredit earn rate\nT2 Standard instances get 30 launch credits per vCPU at launch or start.\nIf a T2 instance is switched from unlimited to standard, it does not get launch credits at the time of switching.\nEach T2 instance continuously earns (at a millisecond-level resolution) a set rate of CPU credits per hour, depending on the instance size. For more information about the number of CPU credits earned per instance size, see the credit table.\nCredit earn limit\nThe limit for receiving launch credits is 100 launches or starts of all T2 Standard instances combined per account, per Region, per rolling 24-hour period. New accounts may have a lower limit, which increases over time based on your usage.\nA T2 instance cannot accrue more credits than the CPU credit balance limit. If the CPU credit balance has reached its limit, any credits that are earned after the limit is reached are discarded. Launch credits do not count towards the limit. For more information about the CPU credit balance limit for each T2 instance size, see the credit table.\nCredit use\nLaunch credits are spent first, before earned credits.\nEarned credits are spent only after all launch credits are spent.\nCredit expiration\nWhen a T2 Standard instance is running, launch credits do not expire. When a T2 Standard instance stops or is switched to T2 Unlimited, all launch credits are lost.\nWhen a T2 instance is running, earned credits that have accrued do not expire. When the T2 instance stops, all accrued earned credits are lost.\nThe number of accrued launch credits and accrued earned credits is tracked by the CloudWatch metric CPUCreditBalance. For more information, see CPUCreditBalance in the CloudWatch metrics table."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/standard-mode-examples.html",
        "content": "The following examples explain credit use when instances are configured as standard.\nExamples\nExample 1: Explain credit use with T3 Standard\nExample 2: Explain credit use with T2 Standard\nExample 1: Explain credit use with T3 Standard\nIn this example, you see how a t3.nano instance launched as standard earns, accrues, and spends earned credits. You see how the credit balance reflects the accrued earned credits.\nA running t3.nano instance earns 144 credits every 24 hours. Its credit balance limit is 144 earned credits. After the limit is reached, new credits that are earned are discarded. For more information about the number of credits that can be earned and accrued, see the credit table.\nYou might launch a T3 Standard instance and use it immediately. Or, you might launch a T3 Standard instance and leave it idle for a few days before running applications on it. Whether an instance is used or remains idle determines if credits are spent or accrued. If an instance remains idle for 24 hours from the time it is launched, the credit balance reaches it limit, which is the maximum number of earned credits that can be accrued.\nThis example describes an instance that remains idle for 24 hours from the time it is launched, and walks you through seven periods of time over a 96-hour period, showing the rate at which credits are earned, accrued, spent, and discarded, and the value of the credit balance at the end of each period.\nThe following workflow references the numbered points on the graph:\nP1 \u2013 At 0 hours on the graph, the instance is launched as standard and immediately begins to earn credits. The instance remains idle from the time it is launched\u2014CPU utilization is 0%\u2014and no credits are spent. All unspent credits are accrued in the credit balance. For the first 24 hours, CPUCreditUsage is at 0, and the CPUCreditBalance value reaches its maximum of 144.\nP2 \u2013 For the next 12 hours, CPU utilization is at 2.5%, which is below the 5% baseline. The instance earns more credits than it spends, but the CPUCreditBalance value cannot exceed its maximum of 144 credits. Any credits that are earned in excess of the limit are discarded.\nP3 \u2013 For the next 24 hours, CPU utilization is at 7% (above the baseline), which requires a spend of 57.6 credits. The instance spends more credits than it earns, and the CPUCreditBalance value reduces to 86.4 credits.\nP4 \u2013 For the next 12 hours, CPU utilization decreases to 2.5% (below the baseline), which requires a spend of 36 credits. In the same time, the instance earns 72 credits. The instance earns more credits than it spends, and the CPUCreditBalance value increases to 122 credits.\nP5 \u2013 For the next two hours, the instance bursts at 60% CPU utilization, and depletes its entire CPUCreditBalance value of 122 credits. At the end of this period, with the CPUCreditBalance at zero, CPU utilization is forced to drop to the baseline utilization level of 5%. At the baseline, the instance earns as many credits as it spends.\nP6 \u2013 For the next 14 hours, CPU utilization is at 5% (the baseline). The instance earns as many credits as it spends. The CPUCreditBalance value remains at 0.\nP7 \u2013 For the last 24 hours in this example, the instance is idle and CPU utilization is 0%. During this time, the instance earns 144 credits, which it accrues in its CPUCreditBalance.\nExample 2: Explain credit use with T2 Standard\nIn this example, you see how a t2.nano instance launched as standard earns, accrues, and spends launch and earned credits. You see how the credit balance reflects not only accrued earned credits, but also accrued launch credits.\nA t2.nano instance gets 30 launch credits when it is launched, and earns 72 credits every 24 hours. Its credit balance limit is 72 earned credits; launch credits do not count towards the limit. After the limit is reached, new credits that are earned are discarded. For more information about the number of credits that can be earned and accrued, see the credit table. For more information about limits, see Launch credit limits.\nYou might launch a T2 Standard instance and use it immediately. Or, you might launch a T2 Standard instance and leave it idle for a few days before running applications on it. Whether an instance is used or remains idle determines if credits are spent or accrued. If an instance remains idle for 24 hours from the time it is launched, the credit balance appears to exceed its limit because the balance reflects both accrued earned credits and accrued launch credits. However, after CPU is used, the launch credits are spent first. Thereafter, the limit always reflects the maximum number of earned credits that can be accrued.\nThis example describes an instance that remains idle for 24 hours from the time it is launched, and walks you through seven periods of time over a 96-hour period, showing the rate at which credits are earned, accrued, spent, and discarded, and the value of the credit balance at the end of each period.\nPeriod 1: 1 \u2013 24 hours\nAt 0 hours on the graph, the T2 instance is launched as standard and immediately gets 30 launch credits. It earns credits while in the running state. The instance remains idle from the time it is launched\u2014CPU utilization is 0%\u2014and no credits are spent. All unspent credits are accrued in the credit balance. At approximately 14 hours after launch, the credit balance is 72 (30 launch credits + 42 earned credits), which is equivalent to what the instance can earn in 24 hours. At 24 hours after launch, the credit balance exceeds 72 credits because the unspent launch credits are accrued in the credit balance\u2014the credit balance is 102 credits: 30 launch credits + 72 earned credits.\nCredit Spend Rate 0 credits per 24 hours (0% CPU utilization)\nCredit Earn Rate 72 credits per 24 hours\nCredit Discard Rate 0 credits per 24 hours\nCredit Balance\n102 credits (30 launch credits + 72 earned credits)\nConclusion\nIf there is no CPU utilization after launch, the instance accrues more credits than what it can earn in 24 hours (30 launch credits + 72 earned credits = 102 credits).\nIn a real-world scenario, an EC2 instance consumes a small number of credits while launching and running, which prevents the balance from reaching the maximum theoretical value in this example.\nPeriod 2: 25 \u2013 36 hours\nFor the next 12 hours, the instance continues to remain idle and earn credits, but the credit balance does not increase. It plateaus at 102 credits (30 launch credits + 72 earned credits). The credit balance has reached its limit of 72 accrued earned credits, so newly earned credits are discarded.\nCredit Spend Rate 0 credits per 24 hours (0% CPU utilization)\nCredit Earn Rate 72 credits per 24 hours (3 credits per hour)\nCredit Discard Rate 72 credits per 24 hours (100% of credit earn rate)\nCredit Balance\n102 credits (30 launch credits + 72 earned credits)\u2014balance is unchanged\nConclusion\nAn instance constantly earns credits, but it cannot accrue more earned credits if the credit balance has reached its limit. After the limit is reached, newly earned credits are discarded. Launch credits do not count towards the credit balance limit. If the balance includes accrued launch credits, the balance appears to be over the limit.\nPeriod 3: 37 \u2013 61 hours\nFor the next 25 hours, the instance uses 2% CPU, which requires 30 credits. In the same period, it earns 75 credits, but the credit balance decreases. The balance decreases because the accrued launch credits are spent first, while newly earned credits are discarded because the credit balance is already at its limit of 72 earned credits.\nCredit Spend Rate 28.8 credits per 24 hours (1.2 credits per hour, 2% CPU utilization, 40% of credit earn rate)\u201430 credits over 25 hours\nCredit Earn Rate 72 credits per 24 hours\nCredit Discard Rate 72 credits per 24 hours (100% of credit earn rate)\nCredit Balance\n72 credits (30 launch credits were spent; 72 earned credits remain unspent)\nConclusion\nAn instance spends launch credits first, before spending earned credits. Launch credits do not count towards the credit limit. After the launch credits are spent, the balance can never go higher than what can be earned in 24 hours. Furthermore, while an instance is running, it cannot get more launch credits.\nPeriod 4: 62 \u2013 72 hours\nFor the next 11 hours, the instance uses 2% CPU, which requires 13.2 credits. This is the same CPU utilization as in the previous period, but the balance does not decrease. It stays at 72 credits.\nThe balance does not decrease because the credit earn rate is higher than the credit spend rate. In the time that the instance spends 13.2 credits, it also earns 33 credits. However, the balance limit is 72 credits, so any earned credits that exceed the limit are discarded. The balance plateaus at 72 credits, which is different from the plateau of 102 credits during Period 2, because there are no accrued launch credits.\nCredit Spend Rate 28.8 credits per 24 hours (1.2 credits per hour, 2% CPU utilization, 40% of credit earn rate)\u201413.2 credits over 11 hours\nCredit Earn Rate 72 credits per 24 hours\nCredit Discard Rate 43.2 credits per 24 hours (60% of credit earn rate)\nCredit Balance\n72 credits (0 launch credits, 72 earned credits)\u2014balance is at its limit\nConclusion\nAfter launch credits are spent, the credit balance limit is determined by the number of credits that an instance can earn in 24 hours. If the instance earns more credits than it spends, newly earned credits over the limit are discarded.\nPeriod 5: 73 \u2013 75 hours\nFor the next three hours, the instance bursts at 20% CPU utilization, which requires 36 credits. The instance earns nine credits in the same three hours, which results in a net balance decrease of 27 credits. At the end of three hours, the credit balance is 45 accrued earned credits.\nCredit Spend Rate 288 credits per 24 hours (12 credits per hour, 20% CPU utilization, 400% of credit earn rate)\u201436 credits over 3 hours\nCredit Earn Rate 72 credits per 24 hours (9 credits over 3 hours)\nCredit Discard Rate 0 credits per 24 hours\nCredit Balance\n45 credits (previous balance (72) - spent credits (36) + earned credits (9))\u2014balance decreases at a rate of 216 credits per 24 hours (spend rate 288/24 + earn rate 72/24 = balance decrease rate 216/24)\nConclusion\nIf an instance spends more credits than it earns, its credit balance decreases.\nPeriod 6: 76 \u2013 90 hours\nFor the next 15 hours, the instance uses 2% CPU, which requires 18 credits. This is the same CPU utilization as in Periods 3 and 4. However, the balance increases in this period, whereas it decreased in Period 3 and plateaued in Period 4.\nIn Period 3, the accrued launch credits were spent, and any earned credits that exceeded the credit limit were discarded, resulting in a decrease in the credit balance. In Period 4, the instance spent fewer credits than it earned. Any earned credits that exceeded the limit were discarded, so the balance plateaued at its maximum of 72 credits.\nIn this period, there are no accrued launch credits, and the number of accrued earned credits in the balance is below the limit. No earned credits are discarded. Furthermore, the instance earns more credits than it spends, resulting in an increase in the credit balance.\nCredit Spend Rate 28.8 credits per 24 hours (1.2 credits per hour, 2% CPU utilization, 40% of credit earn rate)\u201418 credits over 15 hours\nCredit Earn Rate 72 credits per 24 hours (45 credits over 15 hours)\nCredit Discard Rate 0 credits per 24 hours\nCredit Balance\n72 credits (balance increases at a rate of 43.2 credits per 24 hours\u2014change rate = spend rate 28.8/24 + earn rate 72/24)\nConclusion\nIf an instance spends fewer credits than it earns, its credit balance increases.\nPeriod 7: 91 \u2013 96 hours\nFor the next six hours, the instance remains idle\u2014CPU utilization is 0%\u2014and no credits are spent. This is the same CPU utilization as in Period 2, but the balance does not plateau at 102 credits\u2014it plateaus at 72 credits, which is the credit balance limit for the instance.\nIn Period 2, the credit balance included 30 accrued launch credits. The launch credits were spent in Period 3. A running instance cannot get more launch credits. After its credit balance limit is reached, any earned credits that exceed the limit are discarded.\nCredit Spend Rate 0 credits per 24 hours (0% CPU utilization)\nCredit Earn Rate 72 credits per 24 hours\nCredit Discard Rate 72 credits per 24 hours (100% of credit earn rate)\nCredit Balance\n72 credits (0 launch credits, 72 earned credits)\nConclusion\nAn instance constantly earns credits, but cannot accrue more earned credits if the credit balance limit has been reached. After the limit is reached, newly earned credits are discarded. The credit balance limit is determined by the number of credits that an instance can earn in 24 hours. For more information about credit balance limits, see the credit table."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances-how-to.html",
        "content": "The steps for launching, monitoring, and modifying burstable performance instances (T instances) are similar. The key difference is the default credit specification when they launch.\nEach T instance family comes with the following default credit specification:\nT4g, T3a, and T3 instances launch as unlimited\nT3 instances on a Dedicated Host can only launch as standard\nT2 instances launch as standard\nYou can change the default credit specification for the account.\nContents\nLaunch a burstable performance instance as Unlimited or Standard\nUse an Auto Scaling group to launch a burstable performance instance as Unlimited\nView the credit specification of a burstable performance instance\nModify the credit specification of a burstable performance instance\nSet the default credit specification for the account\nView the default credit specification\nLaunch a burstable performance instance as Unlimited or Standard\nYou can launch your T instances as unlimited or standard using the Amazon EC2 console, an AWS SDK, a command line tool, or with an Auto Scaling group.\nThe following procedures describe how to use the EC2 console or the AWS CLI. For information about using an Auto Scaling group, see Use an Auto Scaling group to launch a burstable performance instance as Unlimited.\nConsole\nAWS CLI\nTo launch a T instance as Unlimited or Standard\nFollow the procedure to launch an instance.\nUnder Instance type, select a T instance type.\nExpand Advanced details, and for Credit specification, select a credit specification. If you do not make a selection, the default is used, which is standard for T2, and unlimited for T4g, T3a, and T3.\nIn the Summary panel, review your instance configuration, and then choose Launch instance. For more information, see Launch an EC2 instance using the launch instance wizard in the console.\nUse an Auto Scaling group to launch a burstable performance instance as Unlimited\nWhen T instances are launched or started, they require CPU credits for a good bootstrapping experience. If you use an Auto Scaling group to launch your instances, we recommend that you configure your instances as unlimited. If you do, the instances use surplus credits when they are automatically launched or restarted by the Auto Scaling group. Using surplus credits prevents performance restrictions.\nCreate a launch template\nYou must use a launch template for launching instances as unlimited in an Auto Scaling group. A launch configuration does not support launching instances as unlimited.\nNote\nunlimited mode is not supported for T3 instances that are launched on a Dedicated Host.\nConsole\nAWS CLI\nTo create a launch template that launches instances as Unlimited\nFollow the Create a launch template using advanced settings procedure in the Amazon EC2 Auto Scaling User Guide.\nIn Launch template contents, for Instance type, choose an instance size.\nTo launch instances as unlimited in an Auto Scaling group, under Advanced details, for Credit specification, choose Unlimited.\nWhen you've finished defining the launch template parameters, choose Create launch template.\nAssociate an Auto Scaling group with a launch template\nTo associate the launch template with an Auto Scaling group, create the Auto Scaling group using the launch template, or add the launch template to an existing Auto Scaling group.\nConsole\nAWS CLI\nTo create an Auto Scaling group using a launch template\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nOn the navigation bar at the top of the screen, select the same Region that you used when you created the launch template.\nIn the navigation pane, choose Auto Scaling Groups, Create Auto Scaling group.\nChoose Launch Template, select your launch template, and then choose Next Step.\nComplete the fields for the Auto Scaling group. When you've finished reviewing your configuration settings on the Review page, choose Create Auto Scaling group. For more information, see Creating an Auto Scaling Group Using a Launch Template in the Amazon EC2 Auto Scaling User Guide.\nConsole\nAWS CLI\nTo add a launch template to an existing Auto Scaling group\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nOn the navigation bar at the top of the screen, select the same Region that you used when you created the launch template.\nIn the navigation pane, choose Auto Scaling Groups.\nFrom the Auto Scaling group list, select an Auto Scaling group, and choose Actions, Edit.\nOn the Details tab, for Launch Template, choose a launch template, and then choose Save.\nView the credit specification of a burstable performance instance\nYou can view the credit specification (unlimited or standard) of a running or stopped T instance.\nConsole\nAWS CLI\nTo view the credit specification of a T instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigation pane, choose Instances.\nSelect the instance.\nChoose Details and view the Credit specification field. The value is either unlimited or standard.\nModify the credit specification of a burstable performance instance\nYou can switch the credit specification of a running or stopped T instance at any time between unlimited and standard.\nNote that in unlimited mode, an instance can spend surplus credits, which might incur an additional charge. For more information, see Surplus credits can incur charges.\nConsole\nAWS CLI\nTo modify the credit specification of a T instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigation pane, choose Instances.\nSelect the instance. To modify the credit specification for several instances at one time, select all applicable instances.\nChoose Actions, Instance settings, Change credit specification. This option is enabled only if you selected a T instance.\nTo change the credit specification to unlimited, select the checkbox next to the instance ID. To change the credit specification to standard, clear the checkbox next to the instance ID.\nSet the default credit specification for the account\nEach T instance family comes with a default credit specification. You can change the default credit specification for each T instance family at the account level per AWS Region.\nIf you use the launch instance wizard in the EC2 console to launch instances, the value you select for the credit specification overrides the account-level default credit specification. If you use the AWS CLI to launch instances, all new T instances in the account launch using the default credit specification. The credit specification for existing running or stopped instances is not affected.\nConsideration\nThe default credit specification for an instance family can be modified only once in a rolling 5-minute period, and up to four times in a rolling 24-hour period.\nConsole\nAWS CLI\nTo set the default credit specification at the account level per Region\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nTo change the AWS Region, use the Region selector in the upper-right corner of the page.\nOn the left navigation pane, choose EC2 Dashboard.\nFrom Account attributes, choose Default credit specification.\nChoose Manage.\nFor each instance family, choose Unlimited or Standard, and then choose Update.\nView the default credit specification\nYou can view the default credit specification of a T instance family at the account level per AWS Region.\nConsole\nAWS CLI\nTo view the default credit specification at the account level\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nTo change the AWS Region, use the Region selector in the upper-right corner of the page.\nOn the left navigation pane, choose EC2 Dashboard.\nFrom Account attributes, choose Default credit specification."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances-monitoring-cpu-credits.html",
        "content": "EC2 sends metrics to Amazon CloudWatch. You can see the CPU credit metrics in the Amazon EC2 per-instance metrics of the CloudWatch console or by using the AWS CLI to list the metrics for each instance. For more information, see CloudWatch metrics that are available for your instances.\nContents\nAdditional CloudWatch metrics for burstable performance instances\nCalculate CPU credit usage\nAdditional CloudWatch metrics for burstable performance instances\nBurstable performance instances have these additional CloudWatch metrics, which are updated every five minutes:\nCPUCreditUsage \u2013 The number of CPU credits spent during the measurement period.\nCPUCreditBalance \u2013 The number of CPU credits that an instance has accrued. This balance is depleted when the CPU bursts and CPU credits are spent more quickly than they are earned.\nCPUSurplusCreditBalance \u2013 The number of surplus CPU credits spent to sustain CPU utilization when the CPUCreditBalance value is zero.\nCPUSurplusCreditsCharged \u2013 The number of surplus CPU credits exceeding the maximum number of CPU credits that can be earned in a 24-hour period, and thus attracting an additional charge.\nThe last two metrics apply only to instances configured as unlimited.\nThe following table describes the CloudWatch metrics for burstable performance instances. For more information, see CloudWatch metrics that are available for your instances.\nMetric Description\nCPUCreditUsage\nThe number of CPU credits spent by the instance for CPU utilization. One CPU credit equals one vCPU running at 100% utilization for one minute or an equivalent combination of vCPUs, utilization, and time (for example, one vCPU running at 50% utilization for two minutes or two vCPUs running at 25% utilization for two minutes).\nCPU credit metrics are available at a five-minute frequency only. If you specify a period greater than five minutes, use the Sum statistic instead of the Average statistic.\nUnits: Credits (vCPU-minutes)\nCPUCreditBalance\nThe number of earned CPU credits that an instance has accrued since it was launched or started. For T2 Standard, the CPUCreditBalance also includes the number of launch credits that have been accrued.\nCredits are accrued in the credit balance after they are earned, and removed from the credit balance when they are spent. The credit balance has a maximum limit, determined by the instance size. After the limit is reached, any new credits that are earned are discarded. For T2 Standard, launch credits do not count towards the limit.\nThe credits in the CPUCreditBalance are available for the instance to spend to burst beyond its baseline CPU utilization.\nWhen an instance is running, credits in the CPUCreditBalance do not expire. When a T4g, T3a or T3 instance stops, the CPUCreditBalance value persists for seven days. Thereafter, all accrued credits are lost. When a T2 instance stops, the CPUCreditBalance value does not persist, and all accrued credits are lost.\nCPU credit metrics are available at a five-minute frequency only.\nUnits: Credits (vCPU-minutes)\nCPUSurplusCreditBalance\nThe number of surplus credits that have been spent by an unlimited instance when its CPUCreditBalance value is zero.\nThe CPUSurplusCreditBalance value is paid down by earned CPU credits. If the number of surplus credits exceeds the maximum number of credits that the instance can earn in a 24-hour period, the spent surplus credits above the maximum incur an additional charge.\nUnits: Credits (vCPU-minutes)\nCPUSurplusCreditsCharged\nThe number of spent surplus credits that are not paid down by earned CPU credits, and which thus incur an additional charge.\nSpent surplus credits are charged when any of the following occurs:\nThe spent surplus credits exceed the maximum number of credits that the instance can earn in a 24-hour period. Spent surplus credits above the maximum are charged at the end of the hour.\nThe instance is stopped or terminated.\nThe instance is switched from unlimited to standard.\nUnits: Credits (vCPU-minutes)\nCalculate CPU credit usage\nThe CPU credit usage of instances is calculated using the instance CloudWatch metrics described in the preceding table.\nAmazon EC2 sends the metrics to CloudWatch every five minutes. A reference to the prior value of a metric at any point in time implies the previous value of the metric, sent five minutes ago.\nCalculate CPU credit usage for Standard instances\nThe CPU credit balance increases if CPU utilization is below the baseline, when the credits spent are less than the credits earned in the prior five-minute interval.\nThe CPU credit balance decreases if CPU utilization is above the baseline, when the credits spent are more than the credits earned in the prior five-minute interval.\nMathematically, this is captured by the following equation:\nCPUCreditBalance = prior CPUCreditBalance + [Credits earned per hour * (5/60) - CPUCreditUsage]\nThe size of the instance determines the number of credits that the instance can earn per hour and the number of earned credits that it can accrue in the credit balance. For information about the number of credits earned per hour, and the credit balance limit for each instance size, see the credit table.\nExample\nThis example uses a t3.nano instance. To calculate the CPUCreditBalance value of the instance, use the preceding equation as follows:\nCPUCreditBalance \u2013 The current credit balance to calculate.\nprior CPUCreditBalance \u2013 The credit balance five minutes ago. In this example, the instance had accrued two credits.\nCredits earned per hour \u2013 A t3.nano instance earns six credits per hour.\n5/60 \u2013 Represents the five-minute interval between CloudWatch metric publication. Multiply the credits earned per hour by 5/60 (five minutes) to get the number of credits that the instance earned in the past five minutes. A t3.nano instance earns 0.5 credits every five minutes.\nCPUCreditUsage \u2013 How many credits the instance spent in the past five minutes. In this example, the instance spent one credit in the past five minutes.\nUsing these values, you can calculate the CPUCreditBalance value:\nCPUCreditBalance = 2 + [0.5 - 1] = 1.5\nCalculate CPU credit usage for Unlimited instances\nWhen a burstable performance instance needs to burst above the baseline, it always spends accrued credits before spending surplus credits. When it depletes its accrued CPU credit balance, it can spend surplus credits to burst CPU for as long as it needs. When CPU utilization falls below the baseline, surplus credits are always paid down before the instance accrues earned credits.\nWe use the term Adjusted balance in the following equations to reflect the activity that occurs in this five-minute interval. We use this value to arrive at the values for the CPUCreditBalance and CPUSurplusCreditBalance CloudWatch metrics.\nAdjusted balance = [prior CPUCreditBalance - prior CPUSurplusCreditBalance] + [Credits earned per hour * (5/60) - CPUCreditUsage]\nA value of 0 for Adjusted balance indicates that the instance spent all its earned credits for bursting, and no surplus credits were spent. As a result, both CPUCreditBalance and CPUSurplusCreditBalance are set to 0.\nA positive Adjusted balance value indicates that the instance accrued earned credits, and previous surplus credits, if any, were paid down. As a result, the Adjusted balance value is assigned to CPUCreditBalance, and the CPUSurplusCreditBalance is set to 0. The instance size determines the maximum number of credits that it can accrue.\nCPUCreditBalance = min [max earned credit balance, Adjusted balance]\nCPUSurplusCreditBalance = 0\nA negative Adjusted balance value indicates that the instance spent all its earned credits that it accrued and, in addition, also spent surplus credits for bursting. As a result, the Adjusted balance value is assigned to CPUSurplusCreditBalance and CPUCreditBalance is set to 0. Again, the instance size determines the maximum number of credits that it can accrue.\nCPUSurplusCreditBalance = min [max earned credit balance, -Adjusted balance]\nCPUCreditBalance = 0\nIf the surplus credits spent exceed the maximum credits that the instance can accrue, the surplus credit balance is set to the maximum, as shown in the preceding equation. The remaining surplus credits are charged as represented by the CPUSurplusCreditsCharged metric.\nCPUSurplusCreditsCharged = max [-Adjusted balance - max earned credit balance, 0]\nFinally, when the instance terminates, any surplus credits tracked by the CPUSurplusCreditBalance are charged. If the instance is switched from unlimited to standard, any remaining CPUSurplusCreditBalance is also charged."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configure-gpu-instances.html",
        "content": "GPU-based instances provide access to NVIDIA GPUs with thousands of compute cores. You can use these instances to accelerate scientific, engineering, and rendering applications by leveraging the CUDA or Open Computing Language (OpenCL) parallel computing frameworks. You can also use them for graphics applications, including game streaming, 3-D application streaming, and other graphics workloads.\nBefore you can activate or optimize a GPU-based instance, you must install the appropriate drivers, as follows:\nTo install NVIDIA drivers on an instance with an attached NVIDIA GPU, such as a P3 or G4dn instance, see NVIDIA drivers.\nTo install AMD drivers on an instance with an attached AMD GPU, such as a G4ad instance, see AMD drivers.\nContents\nActivate NVIDIA GRID Virtual Applications\nOptimize GPU settings\nSet up dual 4K displays on G4ad\nGet started with GPU accelerated instances"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/activate_grid.html",
        "content": "To activate the GRID Virtual Applications on GPU-based instances that have NVIDIA GPUs (NVIDIA GRID Virtual Workstation is enabled by default), you must define the product type for the driver. The process that you use depends on the operating system of your instance.\nLinux instances\nTo activate GRID Virtual Applications on your Linux instances\nCreate the /etc/nvidia/gridd.conf file from the provided template file.\n[ec2-user ~]$ sudo cp /etc/nvidia/gridd.conf.template /etc/nvidia/gridd.conf\nOpen the /etc/nvidia/gridd.conf file in your favorite text editor.\nFind the FeatureType line, and set it equal to 0. Then add a line with IgnoreSP=TRUE.\nFeatureType=0 IgnoreSP=TRUE\nSave the file and exit.\nReboot the instance to pick up the new configuration.\n[ec2-user ~]$ sudo reboot\nWindows instances"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/optimize_gpu.html",
        "content": "There are several GPU setting optimizations that you can perform to achieve the best performance on NVIDIA GPU instances. With some of these instance types, the NVIDIA driver uses an autoboost feature, which varies the GPU clock speeds. By disabling autoboost and setting the GPU clock speeds to their maximum frequency, you can consistently achieve the maximum performance with your GPU instances.\nOptimize GPU settings on Linux\nConfigure the GPU settings to be persistent. This command can take several minutes to run.\n[ec2-user ~]$ sudo nvidia-persistenced\n[G3, and P2 instances only] Disable the autoboost feature for all GPUs on the instance.\n[ec2-user ~]$ sudo nvidia-smi --auto-boost-default=0\nSet all GPU clock speeds to their maximum frequency. Use the memory and graphics clock speeds specified in the following commands.\nSome versions of the NVIDIA driver do not support setting the application clock speed, and display the error \"Setting applications clocks is not supported for GPU...\", which you can ignore.\nG3 instances:\n[ec2-user ~]$ sudo nvidia-smi -ac 2505,1177\nG4dn instances:\n[ec2-user ~]$ sudo nvidia-smi -ac 5001,1590\nG5 instances:\n[ec2-user ~]$ sudo nvidia-smi -ac 6250,1710\nG6 and Gr6 instances:\n[ec2-user ~]$ sudo nvidia-smi -ac 6251,2040\nG6e instances:\n[ec2-user ~]$ sudo nvidia-smi -ac 9001,2520\nP2 instances:\n[ec2-user ~]$ sudo nvidia-smi -ac 2505,875\nP3 and P3dn instances:\n[ec2-user ~]$ sudo nvidia-smi -ac 877,1530\nP4d instances:\n[ec2-user ~]$ sudo nvidia-smi -ac 1215,1410\nP4de instances:\n[ec2-user ~]$ sudo nvidia-smi -ac 1593,1410\nP5 instances:\n[ec2-user ~]$ sudo nvidia-smi -ac 2619,1980\nOptimize GPU settings on Windows"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/activate_g4ad_4k.html",
        "content": "After you launch a G4ad instance, you can set up dual 4K displays.\nTo install the AMD drivers and configure dual screens\nConnect to your Linux instance to get the PCI Bus address of the GPU you want to target for dual 4K (2x4k):\nlspci -vv | grep -i amd\nYou will get output similar to the following:\n00:1e.0 Display controller: Advanced Micro Devices, Inc. [*AMD*/ATI] Device 7362 (rev c3)\nSubsystem: Advanced Micro Devices, Inc. [AMD/ATI] Device 0a34\nNote the PCI bus address is 00:1e.0 in the above output. Create a file named /etc/modprobe.d/amdgpu.conf and add:\noptions amdgpu virtual_display=0000:00:1e.0,2\nTo install the AMD drivers on Linux, see AMD drivers for your EC2 instance. If you already have the AMD GPU driver installed, you will need to rebuild the amdgpu kernel modules through dkms.\nUse the below xorg.conf file to define the dual (2x4K) screen topology and save the file in /etc/X11/xorg.conf:\n~$ cat /etc/X11/xorg.conf\nSection \"ServerLayout\"\n    Identifier     \"Layout0\"\n    Screen          0 \"Screen0\"\n    Screen        1 \"Screen1\"\n    InputDevice     \"Keyboard0\" \"CoreKeyboard\"\n    InputDevice     \"Mouse0\" \"CorePointer\"\n    Option          \"Xinerama\" \"1\"\nEndSection\nSection \"Files\"\n    ModulePath \"/opt/amdgpu/lib64/xorg/modules/drivers\"\n    ModulePath \"/opt/amdgpu/lib/xorg/modules\"\n    ModulePath \"/opt/amdgpu-pro/lib/xorg/modules/extensions\"\n    ModulePath \"/opt/amdgpu-pro/lib64/xorg/modules/extensions\"\n    ModulePath \"/usr/lib64/xorg/modules\"\n    ModulePath \"/usr/lib/xorg/modules\"\nEndSection\nSection \"InputDevice\"\n    # generated from default\n    Identifier     \"Mouse0\"\n    Driver         \"mouse\"\n    Option         \"Protocol\" \"auto\"\n    Option         \"Device\" \"/dev/psaux\"\n    Option         \"Emulate3Buttons\" \"no\"\n    Option         \"ZAxisMapping\" \"4 5\"\nEndSection\nSection \"InputDevice\"\n    # generated from default\n    Identifier     \"Keyboard0\"\n    Driver         \"kbd\"\nEndSection\n\nSection \"Monitor\"\n    Identifier     \"Virtual\"\n    VendorName     \"Unknown\"\n    ModelName      \"Unknown\"\n    Option         \"Primary\" \"true\"\nEndSection\n\nSection \"Monitor\"\n    Identifier     \"Virtual-1\"\n    VendorName     \"Unknown\"\n    ModelName      \"Unknown\"\n    Option         \"RightOf\" \"Virtual\"\nEndSection\n\nSection \"Device\"\n    Identifier     \"Device0\"\n    Driver         \"amdgpu\"\n    VendorName     \"AMD\"\n    BoardName      \"Radeon MxGPU V520\"\n    BusID          \"PCI:0:30:0\"\nEndSection\n\nSection \"Device\"\n    Identifier     \"Device1\"\n    Driver         \"amdgpu\"\n    VendorName     \"AMD\"\n    BoardName      \"Radeon MxGPU V520\"\n    BusID          \"PCI:0:30:0\"\nEndSection\n\nSection \"Extensions\"\n    Option         \"DPMS\" \"Disable\"\nEndSection\n\nSection \"Screen\"\n    Identifier     \"Screen0\"\n    Device         \"Device0\"\n    Monitor        \"Virtual\"\n    DefaultDepth   24\n    Option         \"AllowEmptyInitialConfiguration\" \"True\"\n    SubSection \"Display\"\n        Virtual    3840 2160\n        Depth      32\n    EndSubSection\nEndSection\n\nSection \"Screen\"\n    Identifier     \"Screen1\"\n    Device         \"Device1\"\n    Monitor        \"Virtual\"\n    DefaultDepth   24\n    Option         \"AllowEmptyInitialConfiguration\" \"True\"\n    SubSection \"Display\"\n        Virtual    3840 2160\n        Depth      32\n    EndSubSection\nEndSection\nSet up DCV by following the instructions in setting up an interactive desktop.\nAfter the DCV set up is complete, reboot.\nConfirm that the driver is functional:\ndmesg | grep amdgpu\nThe response should look like the following:\nInitialized amdgpu\nYou should see in the output for DISPLAY=:0 xrandr -q that you have 2 virtual displays connected:\n~$ DISPLAY=:0 xrandr -q\nScreen 0: minimum 320 x 200, current 3840 x 1080, maximum 16384 x 16384\nVirtual connected primary 1920x1080+0+0 (normal left inverted right x axis y axis) 0mm x 0mm\n 4096x3112  60.00\n 3656x2664  59.99\n 4096x2160  60.00\n 3840x2160  60.00\n 1920x1200  59.95\n 1920x1080  60.00\n 1600x1200  59.95\n 1680x1050  60.00\n 1400x1050  60.00\n 1280x1024  59.95\n 1440x900 59.99\n 1280x960 59.99\n 1280x854 59.95\n 1280x800 59.96\n 1280x720 59.97\n 1152x768 59.95\n 1024x768 60.00 59.95\n 800x600  60.32 59.96 56.25\n 848x480  60.00 59.94\n 720x480  59.94\n 640x480  59.94 59.94\nVirtual-1 connected 1920x1080+1920+0 (normal left inverted right x axis y axis) 0mm x 0mm\n 4096x3112  60.00\n 3656x2664  59.99\n 4096x2160  60.00\n 3840x2160  60.00\n 1920x1200  59.95\n 1920x1080  60.00\n 1600x1200  59.95\n 1680x1050  60.00\n 1400x1050  60.00\n 1280x1024  59.95\n 1440x900 59.99\n 1280x960 59.99\n 1280x854 59.95\n 1280x800 59.96\n 1280x720 59.97\n 1152x768 59.95\n 1024x768 60.00 59.95\n 800x600  60.32 59.96 56.25\n 848x480  60.00 59.94\n 720x480  59.94\n640x480  59.94 59.94\nWhen you connect into DCV, change the resolution to 2x4K, confirming the dual monitor support is registered by DCV.\nSet up an interactive desktop for Linux\nAfter you confirm that your Linux instance has the AMD GPU driver installed and amdgpu is in use, you can install an interactive desktop manager. We recommend the MATE desktop environment for the best compatibility and performance.\nPrerequisite\nOpen a text editor and save the following as a file named xorg.conf. You'll need this file on your instance.\nSection \"ServerLayout\"\nIdentifier     \"Layout0\"\nScreen          0 \"Screen0\"\nInputDevice     \"Keyboard0\" \"CoreKeyboard\"\nInputDevice     \"Mouse0\" \"CorePointer\"\nEndSection\nSection \"Files\"\nModulePath \"/opt/amdgpu/lib64/xorg/modules/drivers\"\nModulePath \"/opt/amdgpu/lib/xorg/modules\"\nModulePath \"/opt/amdgpu-pro/lib/xorg/modules/extensions\"\nModulePath \"/opt/amdgpu-pro/lib64/xorg/modules/extensions\"\nModulePath \"/usr/lib64/xorg/modules\"\nModulePath \"/usr/lib/xorg/modules\"\nEndSection\nSection \"InputDevice\"\n# generated from default\nIdentifier     \"Mouse0\"\nDriver         \"mouse\"\nOption         \"Protocol\" \"auto\"\nOption         \"Device\" \"/dev/psaux\"\nOption         \"Emulate3Buttons\" \"no\"\nOption         \"ZAxisMapping\" \"4 5\"\nEndSection\nSection \"InputDevice\"\n# generated from default\nIdentifier     \"Keyboard0\"\nDriver         \"kbd\"\nEndSection\nSection \"Monitor\"\nIdentifier     \"Monitor0\"\nVendorName     \"Unknown\"\nModelName      \"Unknown\"\nEndSection\nSection \"Device\"\nIdentifier     \"Device0\"\nDriver         \"amdgpu\"\nVendorName     \"AMD\"\nBoardName      \"Radeon MxGPU V520\"\nBusID          \"PCI:0:30:0\"\nEndSection\nSection \"Extensions\"\nOption         \"DPMS\" \"Disable\"\nEndSection\nSection \"Screen\"\nIdentifier     \"Screen0\"\nDevice         \"Device0\"\nMonitor        \"Monitor0\"\nDefaultDepth   24\nOption         \"AllowEmptyInitialConfiguration\" \"True\"\nSubSection \"Display\"\n    Virtual    3840 2160\n    Depth      32\nEndSubSection\nEndSection\nTo set up an interactive desktop on Amazon Linux 2\nInstall the EPEL repository.\n[ec2-user ~]$ sudo amazon-linux-extras install epel -y\nInstall the MATE desktop.\n[ec2-user ~]$ sudo amazon-linux-extras install mate-desktop1.x -y\n[ec2-user ~]$ sudo yum groupinstall \"MATE Desktop\" -y\n[ec2-user ~]$ sudo systemctl disable firewalld\nCopy the xorg.conf file to /etc/X11/xorg.conf.\nReboot the instance.\n[ec2-user ~]$ sudo reboot\n(Optional) Install the Amazon DCV server to use Amazon DCV as a high-performance display protocol, and then connect to a Amazon DCV session using your preferred client.\nTo set up an interactive desktop on Ubuntu\nInstall the MATE desktop.\n$ sudo apt install xorg-dev ubuntu-mate-desktop -y\n$ sudo apt purge ifupdown -y\nCopy the xorg.conf file to /etc/X11/xorg.conf.\nReboot the instance.\n$ sudo reboot\nInstall the AMF encoder for the appropriate version of Ubuntu.\n$ sudo apt install ./amdgpu-pro-20.20-*/amf-amdgpu-pro_20.20-*_amd64.deb\n(Optional) Install the Amazon DCV server to use Amazon DCV as a high-performance display protocol, and then connect to a Amazon DCV session using your preferred client.\nAfter the DCV installation give the DCV User video permissions:\n$ sudo usermod -aG video dcv\nTo set up an interactive desktop on CentOS\nInstall the EPEL repository.\n$ sudo yum update -y\n$ sudo yum install epel-release -y\nInstall the MATE desktop.\n$ sudo yum groupinstall \"MATE Desktop\" -y\n$ sudo systemctl disable firewalld\nCopy the xorg.conf file to /etc/X11/xorg.conf.\nReboot the instance.\n$ sudo reboot\n(Optional) Install the Amazon DCV server to use Amazon DCV as a high-performance display protocol, and then connect to a Amazon DCV session using your preferred client."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/p5-instances-started.html",
        "content": "Fifth generation GPU accelerated instance types, such as those shown in the following list deliver the highest performance capabilities for deep learning and high performance computing (HPC) applications. Select the instance type link to learn more about its capabilities.\nP5 and P5e\nFor a complete list of instance type specifications for accelerated instance types, see Accelerated computing in the Amazon EC2 Instance Types reference.\nSoftware configuration\nThe easiest way to get started with fifth generation GPU accelerated instance types is to launch an instance from an AWS Deep Learning AMI that's preconfigured with all of the required software. For the latest AWS Deep Learning AMIs for use with GPU accelerated instance types, see the AWS Deep Learning Base GPU AMI (Ubuntu 20.04).\nIf you need to build a custom AMI to launch instances that host deep learning or HPC applications, we recommend that you install the following minimum software versions on top of your base image:\nSoftware Instance type Minimum version\nNVIDIA driver P5 530\nP5e, P5en 550\nCUDA P5, P5e, P5en 12.1\nNVIDIA GDRCopy P5, P5e, P5en 2.3\nEFA installer P5, P5e, P5en 1.24.1\nNCCL P5, P5e, P5en 2.18.3\naws-ofi-nccl plugin P5, P5e, P5en 1.7.2-aws\nWe also recommend that you configure the instance to not use deeper C-states. For more information, see High performance and low latency by limiting deeper C-states in the Amazon Linux 2 User Guide. The latest AWS Deep Learning Base GPU AMI is preconfigured to not use deeper C-states.\nFor networking and Elastic Fabric Adapter (EFA) configuration see Maximize network bandwidth on Amazon EC2 instances with multiple network cards.\nUbuntu 20.04 specific recommendations\nThe following recommendations for Ubuntu 20.04 help prevent unpredictable interface naming on boot:\nEnsure you are running systemd 245.4-4ubuntu3.19 or later with the following command:\n$ systemd --version\nEnsure you have configured GRUB:\nOpen the /etc/default/grub configuration file in a text editor.\nEdit the GRUB_CMDLINE_LINUX_DEFAULT entry to include net.naming-scheme=v247.\nReboot your instance by running sudo update-grub."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-mac-instances.html",
        "content": "EC2 Mac instances are ideal for developing, building, testing, and signing applications for Apple platforms, such as iPhone, iPad, Mac, Vision Pro, Apple Watch, Apple TV, and Safari. You can connect to your Mac instance using SSH or Apple Remote Desktop (ARD).\nNote\nThe unit of billing is the dedicated host. The instances running on that host have no additional charge.\nAmazon EC2 Mac instances natively support the macOS operating system.\nEC2 x86 Mac instances (mac1.metal) are built on 2018 Mac mini hardware powered by 3.2 GHz Intel eighth-generation (Coffee Lake) Core i7 processors.\nEC2 M1 Mac instances (mac2.metal) are built on 2020 Mac mini hardware powered by Apple silicon M1 processors.\nEC2 M1 Ultra Mac instances (mac2-m1ultra.metal) are built on 2022 Mac Studio hardware powered by Apple silicon M1 Ultra processors.\nEC2 M2 Mac instances (mac2-m2.metal) are built on 2023 Mac mini hardware powered by Apple silicon M2 processors.\nEC2 M2 Pro Mac instances (mac2-m2pro.metal) are built on 2023 Mac mini hardware powered by Apple silicon M2 Pro processors.\nContents\nConsiderations\nInstance readiness\nEC2 macOS AMIs\nEC2 macOS Init\nAmazon EC2 System Monitor for macOS\nRelated resources\nLaunch a Mac instance using the AWS Management Console or the AWS CLI\nConnect to your Mac instance using SSH or a GUI\nUpdate the operating system and software on Mac instances\nIncrease the size of an EBS volume on your Mac instance\nStop or terminate your Amazon EC2 Mac instance\nFind supported macOS versions for your Amazon EC2 Mac Dedicated Host\nSubscribe to macOS AMI notifications\nRetrieve macOS AMI IDs using AWS Systems Manager Parameter Store API\nAmazon EC2 macOS AMIs release notes\nConsiderations\nThe following considerations apply to Mac instances:\nMac instances are available only as bare metal instances on Dedicated Hosts, with a minimum allocation period of 24 hours before you can release the Dedicated Host. You can launch one Mac instance per Dedicated Host. You can share the Dedicated Host with the AWS accounts or organizational units within your AWS organization, or the entire AWS organization.\nMac instances are available in different AWS Regions. For a list of Mac instance availability in each of the AWS Regions, see Amazon EC2 instance types by Region.\nMac instances are available only as On-Demand Instances. They are not available as Spot Instances or Reserved Instances. You can save money on Mac instances by purchasing a Savings Plan.\nThe compatibility of different Mac instance types with specific macOS Amazon Machine Images (AMIs) varies. For more information, see Amazon EC2 macOS AMIs release notes.\nEBS hotplug is supported.\nAWS does not manage or support the internal SSD on the Apple hardware. We strongly recommend that you use Amazon EBS volumes instead. EBS volumes provide the same elasticity, availability, and durability benefits on Mac instances as they do on any other EC2 instance.\nWe recommend using an Amazon EBS volume with 10,000 IOPS and 400 MiB/s throughput with Mac instances for optimal performance. For more information, see Amazon EBS volume types in the Amazon EBS User Guide.\nMac instances support Amazon EC2 Auto Scaling.\nOn x86 Mac instances, automatic software updates are disabled. We recommend that you apply updates and test them on your instance before you put the instance into production. For more information, see Update the operating system and software on Mac instances.\nWhen you stop or terminate a Mac instance, a scrubbing workflow is performed on the Dedicated Host. For more information, see Stop or terminate your Amazon EC2 Mac instance.\nImportant\nApple Intelligence features are not available when booting Mac hardware from an external volume. As EC2 Mac instances boot from external EBS volumes by default, they do not support Apple Intelligence features.\nWarning\nDo not use FileVault. If you enable FileVault, the host fails to boot because the partitions are locked. If data encryption is required, use Amazon EBS encryption to avoid boot issues and performance impact. With Amazon EBS encryption, encryption operations occur on the host servers, ensuring the security of both data-at-rest and data-in-transit between the instances and their attached EBS storage. For more information, see Amazon EBS encryption in the Amazon EBS User Guide.\nInstance readiness\nAfter you launch a Mac instance, you'll need to wait until the instance is ready before you can connect to it. For an AWS vended AMI with a x86 Mac instance or a Apple silicon Mac instance, the launch time can range from approximately 6 minutes to 20 minutes. Depending on the chosen Amazon EBS volume sizes, the inclusion of additional scripts to user data, or additional loaded software on a custom macOS AMI, the launch time might increase.\nYou can use a small shell script, like the one below, to poll the describe-instance-status API to know when the instance is ready to be connected to. In the following command, replace the example instance ID with your own.\nfor i in $(seq 1 200); do aws ec2 describe-instance-status --instance-ids=i-0123456789example \\\n    --query='InstanceStatuses[0].InstanceStatus.Status'; sleep 5; done;\nEC2 macOS AMIs\nAmazon EC2 macOS is designed to provide a stable, secure, and high-performance environment for developer workloads running on Amazon EC2 Mac instances. EC2 macOS AMIs includes packages that enable easy integration with AWS, such as launch configuration tools and popular AWS libraries and tools.\nFor more information about EC2 macOS AMIs, see Amazon EC2 macOS AMIs release notes.\nAWS provides updated EC2 macOS AMIs on a regular basis that include updates to packages owned by AWS and the latest fully-tested macOS version. Additionally, AWS provides updated AMIs with the latest minor version updates or major version updates as soon as they can be fully tested and vetted. If you do not need to preserve data or customizations to your Mac instances, you can get the latest updates by launching a new instance using the current AMI and then terminating the previous instance. Otherwise, you can choose which updates to apply to your Mac instances.\nFor information about how to subscribe to macOS AMI notifications, see Subscribe to macOS AMI notifications.\nEC2 macOS Init\nEC2 macOS Init is used to initialize EC2 Mac instances at launch. It uses priority groups to run logical groups of tasks at the same time.\nThe launchd plist file is /Library/LaunchDaemons/com.amazon.ec2.macos-init.plist. The files for EC2 macOS Init are located in /usr/local/aws/ec2-macos-init.\nFor more information, see https://github.com/aws/ec2-macos-init.\nAmazon EC2 System Monitor for macOS\nAmazon EC2 System Monitor for macOS provides CPU utilization metrics to Amazon CloudWatch. It sends these metrics to CloudWatch over a custom serial device in 1-minute periods. You can enable or disable this agent as follows. It is enabled by default.\nsudo setup-ec2monitoring [enable | disable]\nNote\nAmazon EC2 System Monitor for macOS is not currently supported on Apple silicon Mac instances.\nRelated resources\nFor information about pricing, see Pricing.\nFor more information about Mac instances, see Amazon EC2 Mac Instances.\nFor more information about hardware specifications and network performance of Mac instances, see General purpose instances."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/mac-instance-launch.html",
        "content": "EC2 Mac instances require a Dedicated Host. You first need to allocate a host to your account, and then launch the instance onto the host.\nYou can launch a Mac instance using the AWS Management Console or the AWS CLI.\nLaunch a Mac instance using the console\nTo launch a Mac instance onto a Dedicated Host\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nAllocate the Dedicated Host, as follows:\nIn the navigation pane, choose Dedicated Hosts.\nChoose Allocate Dedicated Host and then do the following:\nFor Instance family, choose mac1, mac2, mac2-m2, mac2-m2pro, or mac2-m1ultra. If the instance family doesn\u2019t appear in the list, it\u2019s not supported in the currently selected Region.\nFor Instance type, choose mac1.metal, mac2.metal, mac2-m2.metal, mac2-m2pro.metal, or mac2-m1ultra.metal based on the instance family chosen.\nFor Availability Zone, choose the Availability Zone for the Dedicated Host.\nFor Quantity, keep 1.\nChoose Allocate.\nLaunch the instance on the host, as follows:\nSelect the Dedicated Host that you created and then do the following:\nChoose Actions, Launch instance(s) onto host.\nUnder Application and OS Images (Amazon Machine Image), select a macOS AMI.\nUnder Instance type, select the appropriate instance type (mac1.metal, mac2.metal, mac2-m2.metal, mac2-m2pro.metal, or mac2-m1ultra.metal).\nUnder Advanced details, verify that Tenancy, Tenancy host by, and Tenancy host ID are preconfigured based on the Dedicated Host you created. Update Tenancy affinity as needed.\nComplete the wizard, specifying EBS volumes, security groups, and key pairs as needed.\nIn the Summary panel, choose Launch instance.\nA confirmation page lets you know that your instance is launching. Choose View all instances to close the confirmation page and return to the console. The initial state of an instance is pending. The instance is ready when its state changes to running and it passes status checks.\nLaunch a Mac instance using the AWS CLI\nAllocate the Dedicated Host\nUse the following allocate-hosts command to allocate a Dedicated Host for your Mac instance, replacing the instance-type with either mac1.metal, mac2.metal, mac2-m2.metal, mac2-m2pro.metal, or mac2-m1ultra.metal, and the region and availability-zone with the appropriate ones for your environment.\naws ec2 allocate-hosts --region us-east-1 --instance-type mac1.metal --availability-zone us-east-1b --auto-placement \"on\" --quantity 1\nLaunch the instance on the host\nUse the following run-instances command to launch a Mac instance, again replacing the instance-type with either mac1.metal, mac2.metal, mac2-m2.metal, mac2-m2pro.metal, or mac2-m1ultra.metal, and the region and availability-zone with the ones used previously.\naws ec2 run-instances --region us-east-1 --instance-type mac1.metal --placement Tenancy=host --image-id ami_id --key-name my-key-pair\nThe initial state of an instance is pending. The instance is ready when its state changes to running and it passes status checks. Use the following describe-instance-status command to display status information for your instance.\naws ec2 describe-instance-status --instance-ids i-017f8354e2dc69c4f\nThe following is example output for an instance that is running and has passed status checks.\n{\n    \"InstanceStatuses\": [\n        {\n            \"AvailabilityZone\": \"us-east-1b\",\n            \"InstanceId\": \"i-017f8354e2dc69c4f\",\n            \"InstanceState\": {\n                \"Code\": 16,\n                \"Name\": \"running\"\n            },\n            \"InstanceStatus\": {\n                \"Details\": [\n                    {\n                        \"Name\": \"reachability\",\n                        \"Status\": \"passed\"\n                    }\n                ],\n                \"Status\": \"ok\"\n            },\n            \"SystemStatus\": {\n                \"Details\": [\n                    {\n                        \"Name\": \"reachability\",\n                        \"Status\": \"passed\"\n                    }\n                ],\n                \"Status\": \"ok\"\n            }\n        }\n    ]\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/connect-to-mac-instance.html",
        "content": "You can connect to your Mac instance using SSH or a graphical user interface (GUI).\nConnect to your instance using SSH\nImportant\nMultiple users can access the OS simultaneously. Typically there is a 1:1 user:GUI session due to the built-in Screen Sharing service on port 5900. Using SSH within macOS supports multiple sessions up until the \"Max Sessions\" limit in the sshd_config file.\nAmazon EC2 Mac instances do not allow remote root SSH by default. Password authentication is disabled to prevent brute-force password attacks. The ec2-user account is configured to log in remotely using SSH. The ec2-user account also has sudo privileges. After you connect to your instance, you can add other users.\nTo support connecting to your instance using SSH, launch the instance using a key pair and a security group that allows SSH access, and ensure that the instance has internet connectivity. You provide the .pem file for the key pair when you connect to the instance.\nUse the following procedure to connect to your Mac instance using an SSH client. If you receive an error while attempting to connect to your instance, see Troubleshoot issues connecting to your Amazon EC2 Linux instance.\nTo connect to your instance using SSH\nVerify that your local computer has an SSH client installed by entering ssh at the command line. If your computer doesn't recognize the command, search for an SSH client for your operating system and install it.\nGet the public DNS name of your instance. Using the Amazon EC2 console, you can find the public DNS name on both the Details and the Networking tabs. Using the AWS CLI, you can find the public DNS name using the describe-instances command.\nLocate the .pem file for the key pair that you specified when you launched the instance.\nConnect to your instance using the following ssh command, specifying the public DNS name of the instance and the .pem file.\nssh -i /path/key-pair-name.pem ec2-user@instance-public-dns-name\nConnect to your instance's graphical user interface (GUI)\nUse the following procedure to connect to your instance's GUI using VNC, Apple Remote Desktop (ARD), or the Apple Screen Sharing application (included with macOS).\nNote\nmacOS 10.14 and later only allows control if Screen Sharing is enabled through System Preferences.\nTo connect to your instance using ARD client or VNC client\nVerify that your local computer has an ARD client or a VNC client that supports ARD installed. On macOS, you can leverage the built-in Screen Sharing application. Otherwise, search for ARD for your operating system and install it.\nFrom your local computer, connect to your instance using SSH.\nSet up a password for the ec2-user account using the passwd command as follows.\n[ec2-user ~]$ sudo passwd ec2-user\nInstall and start macOS Screen Sharing using the following command.\n[ec2-user ~]$ sudo launchctl enable system/com.apple.screensharing\nsudo launchctl load -w /System/Library/LaunchDaemons/com.apple.screensharing.plist\nDisconnect from your instance by typing exit and pressing Enter.\nFrom your computer, connect to your instance using the following ssh command. In addition to the options shown in the previous section, use the -L option to enable port forwarding and forward all traffic on local port 5900 to the ARD server on the instance.\nssh -L 5900:localhost:5900 -i /path/key-pair-name.pem ec2-user@instance-public-dns-name\nFrom your local computer, use the ARD client or VNC client that supports ARD to connect to localhost:5900. For example, use the Screen Sharing application on macOS as follows:\nOpen Finder and select Go.\nSelect Connect to Server.\nIn the Server Address field, enter vnc://localhost:5900.\nLog in as prompted, using ec2-user as the username and the password that you created for the ec2-user account.\nModify macOS screen resolution on Mac instances\nAfter you connect to your EC2 Mac instance using ARD or a VNC client that supports ARD, you can modify the screen resolution of your macOS environment using any of the publicly available macOS tools or utilities, such as displayplacer.\nTo modify the screen resolution using displayplacer\nInstall displayplacer.\n[ec2-user ~]$ brew tap jakehilborn/jakehilborn && brew install displayplacer\nShow the current screen information and possible screen resolutions.\n[ec2-user ~]$ displayplacer list\nApply the desired screen resolution.\n[ec2-user ~]$ displayplacer \"id:<screenID> res:<width>x<height> origin:(0,0) degree:0\"\nFor example:\nRES=\"2560x1600\"\ndisplayplacer \"id:69784AF1-CD7D-B79B-E5D4-60D937407F68 res:${RES} scaling:off origin:(0,0) degree:0\""
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/mac-instance-updates.html",
        "content": "Warning\nInstallation of beta or preview macOS versions is only available on Apple silicon Mac instances. Amazon EC2 doesn't qualify beta or preview macOS versions and doesn't ensure instances will remain functional after an update to a pre-production macOS version.\nAttempting to install beta or preview macOS versions on Amazon EC2 x86 Mac instances will lead to degradation of your Amazon EC2 Mac Dedicated Host when you stop or terminate your instances, and will prevent you from starting or launching a new instance on that host.\nSteps to update software on x86 Mac instances and Apple silicon Mac instances.\nUpdate software on x86 Mac instances\nUpdate software on Apple silicon Mac instances\nUpdate software on x86 Mac instances\nOn x86 Mac instances, you can install operating system updates from Apple using the softwareupdate command.\nTo install operating system updates from Apple on x86 Mac instances\nList the packages with available updates using the following command.\n[ec2-user ~]$ softwareupdate --list\nInstall all updates or only specific updates. To install specific updates, use the following command.\n[ec2-user ~]$ sudo softwareupdate --install label\nTo install all updates instead, use the following command.\n[ec2-user ~]$ sudo softwareupdate --install --all --restart\nSystem administrators can use AWS Systems Manager to roll out pre-approved operating system updates on x86 Mac instances. For more information, see the AWS Systems Manager User Guide.\nYou can use Homebrew to install updates to packages in the EC2 macOS AMIs, so that you have the latest version of these packages on your instances. You can also use Homebrew to install and run common macOS applications on Amazon EC2 macOS. For more information, see the Homebrew Documentation.\nTo install updates using Homebrew\nUpdate Homebrew using the following command.\n[ec2-user ~]$ brew update\nList the packages with available updates using the following command.\n[ec2-user ~]$ brew outdated\nInstall all updates or only specific updates. To install specific updates, use the following command.\n[ec2-user ~]$ brew upgrade package name\nTo install all updates instead, use the following command.\n[ec2-user ~]$ brew upgrade\nUpdate software on Apple silicon Mac instances\nConsiderations\nElastic Network Adapter (ENA) driver\nDue to an update in the network driver configuration, ENA driver version 1.0.2 isn't compatible with macOS 13.3 or greater. If you want to install any beta, preview, or production macOS version 13.3 or later and have not installed the latest ENA driver, use the following procedure to install a new version of the driver.\nTo install a new version of the ENA driver\nIn a Terminal window, connect to your Apple silicon Mac instance using SSH.\nDownload the ENA application into the Applications file using the following command.\n[ec2-user ~]$ brew install amazon-ena-ethernet-dext\nTroubleshooting tip\nIf you receive the warning No available formula with the name amazon-ena-ethernet-dext, run the following command.\n[ec2-user ~]$ brew update\nDisconnect from your instance by typing exit and pressing return.\nUse the VNC client to activate the ENA application.\nSetup the VNC client using Connect to your instance's graphical user interface (GUI).\nOnce you have connected to your instance using the Screen Sharing application, go to the Applications folder and open the ENA application.\nChoose Activate\nTo confirm the driver was activated correctly, run the following command in the Terminal window. The output of the command shows that the old driver is in the terminating state and the new driver is in the activated state.\nsystemextensionsctl list;\nAfter you restart the instance, only the new driver will be present.\nSoftware update on Apple silicon Mac instances\nOn Apple silicon Mac instances, you must complete several steps to perform an in-place operating system update. First, access the internal disk of the instance using the GUI with a VNC (Virtual Network Computing) client. This procedure uses macOS Screen Sharing, the built in VNC client. Then, delegate ownership to the administrative user (ec2-user) by signing in as aws-managed-user on the Amazon EBS volume.\nAs you work through this procedure, you create two passwords. One password is for the administrative user (ec2-user) and the other password is for a special administrative user (aws-managed-user). Remember these passwords since you will use them as you work through the procedure.\nNote\nWith this procedure on macOS Big Sur, you can only perform minor updates such as updating from macOS Big Sur 11.7.3 to macOS Big Sur 11.7.4. For macOS Monterey or above, you can perform major software updates.\nTo access the internal disk\nFrom your local computer, in the Terminal, connect to your Apple silicon Mac instance using SSH with the following command. For more information, see Connect to your instance using SSH.\nssh -i /path/key-pair-name.pem ec2-user@instance-public-dns-name\nInstall and start macOS Screen Sharing using the following command.\n[ec2-user ~]$ sudo launchctl enable system/com.apple.screensharing\nsudo launchctl load -w /System/Library/LaunchDaemons/com.apple.screensharing.plist\nSet a password for ec2-user with the following command. Remember the password as you will use it later.\n[ec2-user ~]$ sudo /usr/bin/dscl . -passwd /Users/ec2-user\nDisconnect from the instance by typing exit and pressing return.\nFrom your local computer, in the Terminal, reconnect to your instance with an SSH tunnel to the VNC port using the following command.\nssh -i /path/key-pair-name.pem -L 5900:localhost:5900 ec2-user@instance-public-dns-name\nNote\nDo not exit this SSH session until the following VNC connection and GUI steps are completed. When the instance is restarted, the connection will close automatically.\nFrom your local computer, connect to localhost:5900 using the following steps:\nOpen Finder and select Go.\nSelect Connect to Server.\nIn the Server Address field, enter vnc://localhost:5900.\nIn the macOS window, connect to the remote session of the Apple silicon Mac instance as ec2-user with the password you created in Step 3.\nAccess the internal disk, named InternalDisk, using one of the following options.\nFor macOS Ventura or above: Open System Settings, select General in the left pane, then Startup Disk at the lower right of the pane.\nFor macOS Monterey or below: Open System Preferences, select Startup Disk, then unlock the pane by choosing the lock icon in the lower left of the window.\nTroubleshooting tip\nIf you need to mount the internal disk, run the following command in the Terminal.\nAPFSVolumeName=\"InternalDisk\" ; SSDContainer=$(diskutil list | grep \"Physical Store disk0\" -B 3 | grep \"/dev/disk\" | awk {'print $1'} ) ; diskutil apfs addVolume $SSDContainer APFS $APFSVolumeName\nChoose the internal disk, named InternalDisk, and select Restart. Select Restart again when prompted.\nImportant\nIf the internal disk is named Macintosh HD instead of InternalDisk, your instance needs to be stopped and restarted so the dedicated host can be updated. For more information, see Stop or terminate your Amazon EC2 Mac instance.\nUse the following procedure to delegate ownership to the administrative user. When you reconnect to your instance with SSH, you boot from the internal disk using the special administrative user (aws-managed-user). The initial password for aws-managed-user is blank, so you need to overwrite it on your first connection. Then, you need to repeat the steps to install and start macOS Screen Sharing since the boot volume has changed.\nTo delegate ownership to the administrator on an Amazon EBS volume\nFrom your local computer, in the Terminal, connect to your Apple silicon Mac instance using the following command.\nssh -i /path/key-pair-name.pem aws-managed-user@instance-public-dns-name\nWhen you receive the warning WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!, use one of the following commands to resolve this issue.\nClear out the known hosts using the following command. Then, repeat the previous step.\nrm ~/.ssh/known_hosts\nAdd the following to the SSH command in the previous step.\n-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no\nSet the password for aws-managed-user with the following command. The aws-managed-user initial password is blank, so you need to overwrite it on your first connection.\n[aws-managed-user ~]$ sudo /usr/bin/dscl . -passwd /Users/aws-managed-user password\nWhen you receive the prompt, Permission denied. Please enter user's old password:, press enter.\nTroubleshooting tip\nIf you get the error passwd: DS error: eDSAuthFailed, use the following command.\n[aws-managed-user ~]$ sudo passwd aws-managed-user\nInstall and start macOS Screen Sharing using the following command.\n[aws-managed-user ~]$ sudo launchctl enable system/com.apple.screensharing\nsudo launchctl load -w /System/Library/LaunchDaemons/com.apple.screensharing.plist\nDisconnect from the instance by typing exit and pressing return.\nFrom your local computer, in the Terminal, reconnect to your instance with an SSH tunnel to the VNC port using the following command.\nssh -i /path/key-pair-name.pem -L 5900:localhost:5900 aws-managed-user@instance-public-dns-name\nFrom your local computer, connect to localhost:5900 using the following steps:\nOpen Finder and select Go.\nSelect Connect to Server.\nIn the Server Address field, enter vnc://localhost:5900.\nIn the macOS window, connect to the remote session of the Apple silicon Mac instance as aws-managed-user with the password you created in Step 3.\nNote\nWhen prompted to sign in with your Apple ID, select Set Up Later.\nAccess the Amazon EBS volume using one of the following options.\nFor macOS Ventura or later: Open System Settings, select General in the left pane, then Startup Disk at the lower right of the pane.\nFor macOS Monterey or earlier: Open System Preferences, select Startup Disk, then unlock the pane using the lock icon in the lower left of the window.\nNote\nUntil the reboot takes place, when prompted for an administrator password, use the password you set above for aws-managed-user. This password might be different from the one you set for ec2-user or the default administrator account on your instance. The following instructions specify when to use your instance's administrator password.\nSelect the Amazon EBS volume (the volume not named InternalDisk in the Startup Disk window) and choose Restart.\nNote\nIf you have multiple bootable Amazon EBS volumes attached to your Apple silicon Mac instance, be sure to use a unique name for each volume.\nConfirm the restart, then choose Authorize Users when prompted.\nOn the Authorize user on this volume pane, verify that the administrative user (ec2-user by default) is selected, then select Authorize.\nEnter the ec2-user password you created in Step 3 of the previous procedure, then select Continue.\nEnter the password for the special administrative user (aws-managed-user) when prompted.\nFrom your local computer, in the Terminal, reconnect to your instance using SSH with username ec2-user.\nTroubleshooting tip\nIf you get the warning WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!, run the following command and reconnect to your instance using SSH.\nrm ~/.ssh/known_hosts\nTo perform the software update, use the commands under Update software on x86 Mac instances."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/mac-instance-increase-volume.html",
        "content": "You can increase the size of your Amazon EBS volumes on your Mac instance. For more information, see Amazon EBS Elastic Volumes in the Amazon EBS User Guide.\nAfter you increase the size of the volume, you must increase the size of your APFS container as follows.\nMake increased disk space available for use\nDetermine if a restart is required. If you resized an existing EBS volume on a running Mac instance, you must reboot the instance to make the new size available. If disk space modification was done during launch time, a reboot will not be required.\nView current status of disk sizes:\n[ec2-user ~]$  diskutil list external physical\n/dev/disk0 (external, physical):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:                 GUID_partition_scheme            *322.1 GB     disk0\n   1:                 EFI EFI                           209.7 MB     disk0s1\n   2:                 Apple_APFS Container disk2        321.9 GB     disk0s2\nCopy and paste the following command.\n[ec2-user ~]$ PDISK=$(diskutil list physical external | head -n1 | cut -d\" \" -f1)\nAPFSCONT=$(diskutil list physical external | grep \"Apple_APFS\" | tr -s \" \" | cut -d\" \" -f8)\nyes | sudo diskutil repairDisk $PDISK\nCopy and paste the following command.\n[ec2-user ~]$ sudo diskutil apfs resizeContainer $APFSCONT 0"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/mac-instance-stop.html",
        "content": "When you stop a Mac instance, the instance remains in the stopping state for about 15 minutes before it enters the stopped state.\nWhen you stop or terminate a Mac instance, Amazon EC2 performs a scrubbing workflow on the underlying Dedicated Host to erase the internal SSD, to clear the persistent NVRAM variables, and to update to the latest device firmware. This ensures that Mac instances provide the same security and data privacy as other EC2 Nitro instances. It also allows you to run the latest macOS AMIs. During the scrubbing workflow, the Dedicated Host temporarily enters the pending state. On x86 Mac instances, the scrubbing workflow might take up to 50 minutes to complete. On Apple silicon Mac instances, the scrubbing workflow might take up to 110 minutes to complete. Additionally, on x86 Mac instances, if the device firmware needs to be updated, the scrubbing workflow might take up to 3 hours to complete.\nYou can't start the stopped Mac instance or launch a new Mac instance until after the scrubbing workflow completes, at which point the Dedicated Host enters the available state.\nMetering and billing is paused when the Dedicated Host enters the pending state. You are not charged for the duration of the scrubbing workflow.\nRelease the Dedicated Host for your Mac instance\nWhen you are finished with your Mac instance, you can release the Dedicated Host. Before you can release the Dedicated Host, you must stop or terminate the Mac instance. You cannot release the host until the allocation period exceeds the 24-hour minimum.\nTo release the Dedicated Host\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance and choose Instance state, then choose either Stop instance or Terminate instance.\nIn the navigation pane, choose Dedicated Hosts.\nSelect the Dedicated Host and choose Actions, Release host.\nWhen prompted for confirmation, choose Release."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/macos-firmware-visibility.html",
        "content": "You can view the latest macOS versions supported by your Amazon EC2 Mac Dedicated Host. With this functionality, you can validate whether your Dedicated Host can support instance launches with your preferred macOS versions.\nEach macOS version requires a minimum firmware version on the underlying Apple Mac to successfully boot. The Apple Mac firmware version can become outdated if an allocated Mac Dedicated Host has remained idle for an extended period of time or if it has a long running instance on it.\nTo ensure supportability for the latest macOS versions, you can stop or terminate instances on your allocated Mac Dedicated Host. This triggers the host scrubbing workflow and updates the firmware on the underlying Apple Mac to support the latest macOS versions. A Dedicated Host with a long running instance will automatically be updated when you stop or terminate a running instance.\nFor more information about the scrubbing workflow, see Stop or terminate your Amazon EC2 Mac instance.\nFor more information about launching Mac instances, see Launch a Mac instance using the AWS Management Console or the AWS CLI.\nYou can view information about the latest macOS versions supported on your allocated Dedicated Host using the Amazon EC2 console or the AWS CLI.\nConsole\nAWS CLI\nTo view Dedicated Host firmware information using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Dedicated Hosts.\nOn the Dedicated Hosts details page, under Latest supported macOS versions, you can see the latest macOS versions that the host can support."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/macos-subscribe-notifications.html",
        "content": "To be notified when new AMIs are released or when bridgeOS has been updated, subscribe for notifications using Amazon SNS.\nFor more information about EC2 macOS AMIs, see Amazon EC2 macOS AMIs release notes.\nTo subscribe to macOS AMI notifications\nOpen the Amazon SNS console at https://console.aws.amazon.com/sns/v3/home.\nIn the navigation bar, change the Region to US East (N. Virginia), if necessary. You must use this Region because the SNS notifications that you are subscribing to were created in this Region.\nIn the navigation pane, choose Subscriptions.\nChoose Create subscription.\nFor the Create subscription dialog box, do the following:\nFor Topic ARN, copy and paste one of the following Amazon Resource Names (ARNs):\narn:aws:sns:us-east-1:898855652048:amazon-ec2-macos-ami-updates\narn:aws:sns:us-east-1:898855652048:amazon-ec2-bridgeos-updates\nFor Protocol, choose one of the following:\nEmail:\nFor Endpoint, type an email address that you can use to receive the notifications. After you create your subscription you'll receive a confirmation message with the subject line AWS Notification - Subscription Confirmation. Open the email and choose Confirm subscription to complete your subscription\nSMS:\nFor Endpoint, type a phone number that you can use to receive the notifications.\nAWS Lambda, Amazon SQS, Amazon Data Firehose (Notifications come in JSON format):\nFor Endpoint, enter the ARN for the Lambda function, SQS queue, or Firehose stream you can use to receive the notifications.\nChoose Create subscription.\nWhenever macOS AMIs are released, we send notifications to the subscribers of the amazon-ec2-macos-ami-updates topic. Whenever bridgeOS is updated, we send notifications to the subscribers of the amazon-ec2-bridgeos-updates topic. If you no longer want to receive these notifications, use the following procedure to unsubscribe.\nTo unsubscribe from macOS AMI notifications\nOpen the Amazon SNS console at https://console.aws.amazon.com/sns/v3/home.\nIn the navigation bar, change the Region to US East (N. Virginia), if necessary. You must use this Region because the SNS notifications were created in this Region.\nIn the navigation pane, choose Subscriptions.\nSelect the subscriptions and then choose Actions, Delete subscriptions When prompted for confirmation, choose Delete."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/macos-ami-ids-parameter-store.html",
        "content": "You must specify an AMI when you launch an instance. An AMI is specific to an AWS Region, operating system, and processor architecture. You can view all of the macOS AMIs in an AWS Region and retrieve the latest macOS AMI by querying the AWS Systems Manager Parameter Store API. Using these public parameters, you don't need to manually look up macOS AMI IDs. Public parameters are available for both x86 and ARM64 macOS AMIs, and can be integrated with your existing AWS CloudFormation templates.\nRequired permissions\nTo perform this action, the IAM principal must have permissions to call the ssm:GetParameter API action.\nTo view a list of all macOS AMIs in the current AWS Region using the AWS CLI\nUse the following get-parameters-by-path command to view a list of all macOS AMIs in the current Region.\naws ssm get-parameters-by-path --path /aws/service/ec2-macos --recursive --query \"Parameters[].Name\"\nTo retrieve the AMI ID of the latest major macOS AMI using the AWS CLI\nUse the following get-parameter command with the sub-parameter image_id. In the following example, replace sonoma with a macOS supported major version, x86_64_mac with the processor, and region-code with a supported AWS Region for which you want the latest macOS AMI ID.\naws ssm get-parameter --name /aws/service/ec2-macos/sonoma/x86_64_mac/latest/image_id --region region-code\nFor more information, see Calling AMI public parameters for macOS in the AWS Systems Manager User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/macos-ami-overview.html",
        "content": "The following information provides details about the packages included by default in the EC2 macOS AMIs and summarizes the changes for each EC2 macOS AMI release.\nFor information about how to subscribe to macOS AMI notifications, see Subscribe to macOS AMI notifications.\nMac instances can run one of the following operating systems:\nmacOS Mojave (version 10.14) (x86 Mac instances only)\nmacOS Catalina (version 10.15) (x86 Mac instances only)\nmacOS Big Sur (version 11) (x86 and M1 Mac instances)\nmacOS Monterey (version 12) (x86 and M1 Mac instances)\nmacOS Ventura (version 13) (all Mac instances, M2 and M2 Pro Mac instances support macOS Ventura version 13.2 or later)\nmacOS Sonoma (version 14) (all Mac instances)\nmacOS Sequoia (version 15) (all Mac instances)\nApprove Local Network Privacy policies for macOS Sequoia\nmacOS Sequoia (version 15) has a new Local Network Privacy feature that impacts users of local IP-based services, including Amazon EC2 Instance Metadata Service (IMDS).\nImportant\nTo make sure that you have uninterrupted access to local IP-based services, use the following steps to approve the Local Network Privacy policies.\nTo approve Local Network Privacy policies\nConnect to your instance's graphical user interface (GUI).\nFollow the prompts on the screen to approve the Local Network Privacy policies.\nAfter you have approved the policies, create an AMI of your EC2 Mac instance. For more information, see Create an Amazon EBS-backed AMI.\nAny EC2 Mac instances that are launched from the newly created AMI will retain the Local Network Privacy permissions.\nDefault packages included in Amazon EC2 macOS AMIs\nThe following table describes packages that are included by default in the EC2 macOS AMIs.\nPackages Release notes\nEC2 macOS Init\nhttps://github.com/aws/ec2-macos-init/tags\nEC2 macOS Utils\nhttps://github.com/aws/ec2-macos-utils/tags\nAmazon SSM Agent\nhttps://github.com/aws/amazon-ssm-agent/releases\nAWS Command Line Interface (AWS CLI) version 2\nhttps://raw.githubusercontent.com/aws/aws-cli/v2/CHANGELOG.rst\nCommand Line Tools for Xcode\nhttps://developer.apple.com/documentation/xcode-release-notes\nHomebrew\nhttps://github.com/Homebrew/brew/releases\nEC2 Instance Connect\nhttps://github.com/aws/aws-ec2-instance-connect-config/releases\nSafari\nhttps://developer.apple.com/documentation/safari-release-notes\nAmazon EC2 macOS AMI updates\nThe following table describes changes included in the EC2 macOS AMI releases. Note that some changes apply to all EC2 macOS AMIs, whereas others apply to only a subset of these AMIs.\nEC2 macOS AMI updates\nRelease Changes\n2024.12.20\nAll AMIs\nUpdated Homebrew to 4.4.8\nUpdated aws-cli to 2.22.5\nUpdated amazon-ssm-agent to 3.3.987.0\nRelease of macOS sequoia 15.1.1\nSecurity content of macOS Sequoia 15.1.1\nRelease of macOS Sonoma 14.7.1\nSecurity content of macOS Sonoma 14.7.1\nUpdated Safari to 18.1.1\nRelease of macOS Ventura 13.7.1\nSecurity content of macOS Ventura 13.7.1\nUpdated Safari to 18.1.1\n2024.10.28\nAll AMIs\nUpdated Homebrew to 4.4.2\nUpdated aws-cli to 2.18.13\nUpdated amazon-ssm-agent to 3.3.987.0\nUpdated ec2-macos-init to 1.5.10\nUpdated ec2-macos-utils to 1.0.4\nRelease of macOS Sequoia 15.0\nSecurity content of macOS Sequoia 15\nRelease of macOS Sonoma 14.7\nSecurity content of macOS Sonoma 14.7.\nUpdated Command Line Tools to 16.0\nUpdated Safari to 18.0.1\nSecurity content of Safari 18\nRelease of macOS Ventura 13.7\nSecurity content of macOS Ventura 13.7\nUpdated Safari to 18.0.1\nSecurity content of Safari 18\n2024.08.20\nAll AMIs\nUpdated Homebrew to 4.3.14\nUpdated aws-cli to 2.17.29\nRelease of macOS Sonoma 14.6.1\nNo published CVE entries.\nRelease of macOS Ventura 13.6.9\nNo published CVE entries.\nUpdated Safari to 17.6\nSecurity content of Safari 17.6\nRelease of macOS Monterey 12.7.6\nSecurity content of macOS Monterey 12.7.6\nUpdated Safari to 17.6\nSecurity content of Safari 17.6\n2024.06.07\nAll AMIs\nUpdated Homebrew to 4.3.1-1\nUpdated aws-cli to 2.15.56\nUpdated amazon-ssm-agent to 3.3.380.0-1\nRelease of macOS Sonoma 14.5\nSecurity content of macOS Sonoma 14.5\nRelease of macOS Ventura 13.6.7\nSecurity content of macOS Ventura 13.6.7\nUpdated Safari to 17.5\nSecurity content of Safari 17.5\nRelease of macOS Monterey 12.7.5\nSecurity content of macOS Monterey 12.7.5\nUpdated Safari to 17.5\nSecurity content of Safari 17.5\n2024.04.12\nAll AMIs\nUpdated Homebrew to 4.2.16-1\nUpdated aws-cli to 2.15.36\nRelease of macOS Sonoma 14.4.1\nSecurity content of macOS Sonoma 14.4.1\nRelease of macOS Ventura 13.6.6\nSecurity content of macOS Ventura 13.6.6\nUpdated Safari to 17.4.1\nSecurity content of Safari 17.4.1\nFor macOS Monterey\nUpdated Safari to 17.4.1\nSecurity content of Safari 17.4.1"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html",
        "content": "Amazon EBS\u2013optimized instances use an optimized configuration stack and provide additional, dedicated bandwidth for Amazon EBS I/O. This optimization provides the best performance for your EBS volumes by minimizing contention between Amazon EBS I/O and other traffic from your instance.\nWhen attached to an EBS\u2013optimized instance, General Purpose SSD (gp2 and gp3) volumes are designed to deliver at least 90 percent of their provisioned IOPS performance 99 percent of the time in a given year, and Provisioned IOPS SSD (io1 and io2) volumes are designed to deliver at least 90 percent of their provisioned IOPS performance 99.9 percent of the time in a given year. Throughput Optimized HDD (st1) and Cold HDD (sc1) deliver at least 90 percent of their expected throughput performance 99 percent of the time in a given year. Non-compliant periods are approximately uniformly distributed, targeting 99 percent of expected total throughput each hour. For more information, see Amazon EBS volume types in the Amazon EBS User Guide.\nSome instance types are EBS-optimized by default, and there is no need to enable it and no effect if you attempt to disable it. Other instance types optionally support EBS optimization and you can enable it during or after launch for an additional hourly fee. Some instance types do not support EBS optimization.\nFor detailed instance type specifications and features, see the Amazon EC2 Instance Types Guide.\nTopics\nEBS-optimized by default\nEBS optimization supported\nGet maximum EBS performance\nFind EBS-optimized instance types\nEnable EBS optimization\nEBS-optimized by default\nThe following instance types are EBS\u2013optimized by default. There is no need to enable EBS optimization and no effect if you disable EBS optimization.\nImportant\nAn instance's EBS performance is bounded by the instance type's performance limits, or the aggregated performance of its attached volumes, whichever is smaller. To achieve maximum EBS performance, an instance must have attached volumes that provide a combined performance equal to or greater than the maximum instance performance. For example, to achieve 80,000 IOPS for r6i.16xlarge, the instance must have at least 5 gp3 volumes provisioned with 16,000 IOPS each (5 volumes x 16,000 IOPS = 80,000 IOPS). We recommend that you choose an instance type that provides more dedicated Amazon EBS throughput than your application needs; otherwise, the connection between Amazon EBS and Amazon EC2 can become a performance bottleneck.\nThe maximum IOPS and throughput limits are interdependent. Depending on your I/O size, you might reach one limit before the other, which can affect overall performance. For optimal results, consider both limits when planning your workload.\nNote\n1 These instances can sustain the maximum performance for 30 minutes at least once every 24 hours, after which they revert to their baseline performance.\n2 These instances can sustain their stated performance indefinitely. If your workload requires sustained maximum performance for longer than 30 minutes, use one of these instances.\nGeneral purpose instances\nNote\nM8g instance types support configurable bandwidth weightings. With these instance types, you can optimize an instance's bandwidth for either networking performance or Amazon EBS performance. The following table shows the default Amazon EBS bandwidth performance for these instance types. For the supported configurable weightings, see Configurable bandwidth weighting preferences.\nInstance size Baseline bandwidth (Mbps) Maximum bandwidth (Mbps) Baseline throughput (MB/s, 128 KiB I/O) Maximum throughput (MB/s, 128 KiB I/O) Baseline IOPS (16 KiB I/O) Maximum IOPS (16 KiB I/O)\na1.medium 1 300 3500 37.50 437.50 2500 20000\na1.large 1 525 3500 65.62 437.50 4000 20000\na1.xlarge 1 800 3500 100.00 437.50 6000 20000\na1.2xlarge 1 1750 3500 218.75 437.50 10000 20000\na1.4xlarge 2 3500 437.5 20000\na1.metal 2 3500 437.5 20000\nm4.large 2 450 56.25 3600\nm4.xlarge 2 750 93.75 6000\nm4.2xlarge 2 1000 125.0 8000\nm4.4xlarge 2 2000 250.0 16000\nm4.10xlarge 2 4000 500.0 32000\nm4.16xlarge 2 10000 1250.0 65000\nm5.large 1 650 4750 81.25 593.75 3600 18750\nm5.xlarge 1 1150 4750 143.75 593.75 6000 18750\nm5.2xlarge 1 2300 4750 287.50 593.75 12000 18750\nm5.4xlarge 2 4750 593.75 18750\nm5.8xlarge 2 6800 850.0 30000\nm5.12xlarge 2 9500 1187.5 40000\nm5.16xlarge 2 13600 1700.0 60000\nm5.24xlarge 2 19000 2375.0 80000\nm5.metal 2 19000 2375.0 80000\nm5a.large 1 650 2880 81.25 360.00 3600 16000\nm5a.xlarge 1 1085 2880 135.62 360.00 6000 16000\nm5a.2xlarge 1 1580 2880 197.50 360.00 8333 16000\nm5a.4xlarge 2 2880 360.0 16000\nm5a.8xlarge 2 4750 593.75 20000\nm5a.12xlarge 2 6780 847.5 30000\nm5a.16xlarge 2 9500 1187.5 40000\nm5a.24xlarge 2 13750 1718.75 60000\nm5ad.large 1 650 2880 81.25 360.00 3600 16000\nm5ad.xlarge 1 1085 2880 135.62 360.00 6000 16000\nm5ad.2xlarge 1 1580 2880 197.50 360.00 8333 16000\nm5ad.4xlarge 2 2880 360.0 16000\nm5ad.8xlarge 2 4750 593.75 20000\nm5ad.12xlarge 2 6780 847.5 30000\nm5ad.16xlarge 2 9500 1187.5 40000\nm5ad.24xlarge 2 13750 1718.75 60000\nm5d.large 1 650 4750 81.25 593.75 3600 18750\nm5d.xlarge 1 1150 4750 143.75 593.75 6000 18750\nm5d.2xlarge 1 2300 4750 287.50 593.75 12000 18750\nm5d.4xlarge 2 4750 593.75 18750\nm5d.8xlarge 2 6800 850.0 30000\nm5d.12xlarge 2 9500 1187.5 40000\nm5d.16xlarge 2 13600 1700.0 60000\nm5d.24xlarge 2 19000 2375.0 80000\nm5d.metal 2 19000 2375.0 80000\nm5dn.large 1 650 4750 81.25 593.75 3600 18750\nm5dn.xlarge 1 1150 4750 143.75 593.75 6000 18750\nm5dn.2xlarge 1 2300 4750 287.50 593.75 12000 18750\nm5dn.4xlarge 2 4750 593.75 18750\nm5dn.8xlarge 2 6800 850.0 30000\nm5dn.12xlarge 2 9500 1187.5 40000\nm5dn.16xlarge 2 13600 1700.0 60000\nm5dn.24xlarge 2 19000 2375.0 80000\nm5dn.metal 2 19000 2375.0 80000\nm5n.large 1 650 4750 81.25 593.75 3600 18750\nm5n.xlarge 1 1150 4750 143.75 593.75 6000 18750\nm5n.2xlarge 1 2300 4750 287.50 593.75 12000 18750\nm5n.4xlarge 2 4750 593.75 18750\nm5n.8xlarge 2 6800 850.0 30000\nm5n.12xlarge 2 9500 1187.5 40000\nm5n.16xlarge 2 13600 1700.0 60000\nm5n.24xlarge 2 19000 2375.0 80000\nm5n.metal 2 19000 2375.0 80000\nm5zn.large 1 800 3170 100.00 396.25 3333 13333\nm5zn.xlarge 1 1564 3170 195.50 396.25 6667 13333\nm5zn.2xlarge 2 3170 396.25 13333\nm5zn.3xlarge 2 4750 593.75 20000\nm5zn.6xlarge 2 9500 1187.5 40000\nm5zn.12xlarge 2 19000 2375.0 80000\nm5zn.metal 2 19000 2375.0 80000\nm6a.large 1 650 10000 81.25 1250.00 3600 40000\nm6a.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nm6a.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nm6a.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nm6a.8xlarge 2 10000 1250.0 40000\nm6a.12xlarge 2 15000 1875.0 60000\nm6a.16xlarge 2 20000 2500.0 80000\nm6a.24xlarge 2 30000 3750.0 120000\nm6a.32xlarge 2 40000 5000.0 160000\nm6a.48xlarge 2 40000 5000.0 240000\nm6a.metal 2 40000 5000.0 240000\nm6g.medium 1 315 4750 39.38 593.75 2500 20000\nm6g.large 1 630 4750 78.75 593.75 3600 20000\nm6g.xlarge 1 1188 4750 148.50 593.75 6000 20000\nm6g.2xlarge 1 2375 4750 296.88 593.75 12000 20000\nm6g.4xlarge 2 4750 593.75 20000\nm6g.8xlarge 2 9500 1187.5 40000\nm6g.12xlarge 2 14250 1781.25 50000\nm6g.16xlarge 2 19000 2375.0 80000\nm6g.metal 2 19000 2375.0 80000\nm6gd.medium 1 315 4750 39.38 593.75 2500 20000\nm6gd.large 1 630 4750 78.75 593.75 3600 20000\nm6gd.xlarge 1 1188 4750 148.50 593.75 6000 20000\nm6gd.2xlarge 1 2375 4750 296.88 593.75 12000 20000\nm6gd.4xlarge 2 4750 593.75 20000\nm6gd.8xlarge 2 9500 1187.5 40000\nm6gd.12xlarge 2 14250 1781.25 50000\nm6gd.16xlarge 2 19000 2375.0 80000\nm6gd.metal 2 19000 2375.0 80000\nm6i.large 1 650 10000 81.25 1250.00 3600 40000\nm6i.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nm6i.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nm6i.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nm6i.8xlarge 2 10000 1250.0 40000\nm6i.12xlarge 2 15000 1875.0 60000\nm6i.16xlarge 2 20000 2500.0 80000\nm6i.24xlarge 2 30000 3750.0 120000\nm6i.32xlarge 2 40000 5000.0 160000\nm6i.metal 2 40000 5000.0 160000\nm6id.large 1 650 10000 81.25 1250.00 3600 40000\nm6id.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nm6id.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nm6id.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nm6id.8xlarge 2 10000 1250.0 40000\nm6id.12xlarge 2 15000 1875.0 60000\nm6id.16xlarge 2 20000 2500.0 80000\nm6id.24xlarge 2 30000 3750.0 120000\nm6id.32xlarge 2 40000 5000.0 160000\nm6id.metal 2 40000 5000.0 160000\nm6idn.large 1 1562 25000 195.31 3125.00 6250 100000\nm6idn.xlarge 1 3125 25000 390.62 3125.00 12500 100000\nm6idn.2xlarge 1 6250 25000 781.25 3125.00 25000 100000\nm6idn.4xlarge 1 12500 25000 1562.50 3125.00 50000 100000\nm6idn.8xlarge 2 25000 3125.0 100000\nm6idn.12xlarge 2 37500 4687.5 150000\nm6idn.16xlarge 2 50000 6250.0 200000\nm6idn.24xlarge 2 75000 9375.0 300000\nm6idn.32xlarge 2 100000 12500.0 400000\nm6idn.metal 2 100000 12500.0 400000\nm6in.large 1 1562 25000 195.31 3125.00 6250 100000\nm6in.xlarge 1 3125 25000 390.62 3125.00 12500 100000\nm6in.2xlarge 1 6250 25000 781.25 3125.00 25000 100000\nm6in.4xlarge 1 12500 25000 1562.50 3125.00 50000 100000\nm6in.8xlarge 2 25000 3125.0 100000\nm6in.12xlarge 2 37500 4687.5 150000\nm6in.16xlarge 2 50000 6250.0 200000\nm6in.24xlarge 2 75000 9375.0 300000\nm6in.32xlarge 2 100000 12500.0 400000\nm6in.metal 2 100000 12500.0 400000\nm7a.medium 1 325 10000 40.62 1250.00 2500 40000\nm7a.large 1 650 10000 81.25 1250.00 3600 40000\nm7a.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nm7a.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nm7a.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nm7a.8xlarge 2 10000 1250.0 40000\nm7a.12xlarge 2 15000 1875.0 60000\nm7a.16xlarge 2 20000 2500.0 80000\nm7a.24xlarge 2 30000 3750.0 120000\nm7a.32xlarge 2 40000 5000.0 160000\nm7a.48xlarge 2 40000 5000.0 240000\nm7a.metal-48xl 2 40000 5000.0 240000\nm7g.medium 1 315 10000 39.38 1250.00 2500 40000\nm7g.large 1 630 10000 78.75 1250.00 3600 40000\nm7g.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nm7g.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nm7g.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nm7g.8xlarge 2 10000 1250.0 40000\nm7g.12xlarge 2 15000 1875.0 60000\nm7g.16xlarge 2 20000 2500.0 80000\nm7g.metal 2 20000 2500.0 80000\nm7gd.medium 1 315 10000 39.38 1250.00 2500 40000\nm7gd.large 1 630 10000 78.75 1250.00 3600 40000\nm7gd.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nm7gd.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nm7gd.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nm7gd.8xlarge 2 10000 1250.0 40000\nm7gd.12xlarge 2 15000 1875.0 60000\nm7gd.16xlarge 2 20000 2500.0 80000\nm7gd.metal 2 20000 2500.0 80000\nm7i.large 1 650 10000 81.25 1250.00 3600 40000\nm7i.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nm7i.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nm7i.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nm7i.8xlarge 2 10000 1250.0 40000\nm7i.12xlarge 2 15000 1875.0 60000\nm7i.16xlarge 2 20000 2500.0 80000\nm7i.24xlarge 2 30000 3750.0 120000\nm7i.48xlarge 2 40000 5000.0 240000\nm7i.metal-24xl 2 30000 3750.0 120000\nm7i.metal-48xl 2 40000 5000.0 240000\nm7i-flex.large 1 312 10000 39.06 1250.00 2500 40000\nm7i-flex.xlarge 1 625 10000 78.12 1250.00 3600 40000\nm7i-flex.2xlarge 1 1250 10000 156.25 1250.00 6000 40000\nm7i-flex.4xlarge 1 2500 10000 312.50 1250.00 12000 40000\nm7i-flex.8xlarge 1 5000 10000 625.00 1250.00 20000 40000\nm7i-flex.12xlarge 1 7500 15000 937.50 1875.00 30000 60000\nm7i-flex.16xlarge 1 10000 20000 1250.00 2500.00 40000 80000\nm8g.medium 1 315 10000 39.38 1250.00 2500 40000\nm8g.large 1 630 10000 78.75 1250.00 3600 40000\nm8g.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nm8g.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nm8g.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nm8g.8xlarge 2 10000 1250.0 40000\nm8g.12xlarge 2 15000 1875.0 60000\nm8g.16xlarge 2 20000 2500.0 80000\nm8g.24xlarge 2 30000 3750.0 120000\nm8g.48xlarge 2 40000 5000.0 240000\nm8g.metal-24xl 2 30000 3750.0 120000\nm8g.metal-48xl 2 40000 5000.0 240000\nmac1.metal 2 14000 1750.0 80000\nmac2.metal 2 10000 1250.0 55000\nmac2-m1ultra.metal 2 10000 1250.0 55000\nmac2-m2.metal 2 8000 1000.0 55000\nmac2-m2pro.metal 2 8000 1000.0 55000\nt3.nano 1 43 2085 5.38 260.62 250 11800\nt3.micro 1 87 2085 10.88 260.62 500 11800\nt3.small 1 174 2085 21.75 260.62 1000 11800\nt3.medium 1 347 2085 43.38 260.62 2000 11800\nt3.large 1 695 2780 86.88 347.50 4000 15700\nt3.xlarge 1 695 2780 86.88 347.50 4000 15700\nt3.2xlarge 1 695 2780 86.88 347.50 4000 15700\nt3a.nano 1 45 2085 5.62 260.62 250 11800\nt3a.micro 1 90 2085 11.25 260.62 500 11800\nt3a.small 1 175 2085 21.88 260.62 1000 11800\nt3a.medium 1 350 2085 43.75 260.62 2000 11800\nt3a.large 1 695 2780 86.88 347.50 4000 15700\nt3a.xlarge 1 695 2780 86.88 347.50 4000 15700\nt3a.2xlarge 1 695 2780 86.88 347.50 4000 15700\nt4g.nano 1 43 2085 5.38 260.62 250 11800\nt4g.micro 1 87 2085 10.88 260.62 500 11800\nt4g.small 1 174 2085 21.75 260.62 1000 11800\nt4g.medium 1 347 2085 43.38 260.62 2000 11800\nt4g.large 1 695 2780 86.88 347.50 4000 15700\nt4g.xlarge 1 695 2780 86.88 347.50 4000 15700\nt4g.2xlarge 1 695 2780 86.88 347.50 4000 15700\nCompute optimized\nNote\nC8g instance types support configurable bandwidth weightings. With these instance types, you can optimize an instance's bandwidth for either networking performance or Amazon EBS performance. The following table shows the default Amazon EBS bandwidth performance for these instance types. For the supported configurable weightings, see Configurable bandwidth weighting preferences.\nInstance size Baseline bandwidth (Mbps) Maximum bandwidth (Mbps) Baseline throughput (MB/s, 128 KiB I/O) Maximum throughput (MB/s, 128 KiB I/O) Baseline IOPS (16 KiB I/O) Maximum IOPS (16 KiB I/O)\nc4.large 2 500 62.5 4000\nc4.xlarge 2 750 93.75 6000\nc4.2xlarge 2 1000 125.0 8000\nc4.4xlarge 2 2000 250.0 16000\nc4.8xlarge 2 4000 500.0 32000\nc5.large 1 650 4750 81.25 593.75 4000 20000\nc5.xlarge 1 1150 4750 143.75 593.75 6000 20000\nc5.2xlarge 1 2300 4750 287.50 593.75 10000 20000\nc5.4xlarge 2 4750 593.75 20000\nc5.9xlarge 2 9500 1187.5 40000\nc5.12xlarge 2 9500 1187.5 40000\nc5.18xlarge 2 19000 2375.0 80000\nc5.24xlarge 2 19000 2375.0 80000\nc5.metal 2 19000 2375.0 80000\nc5a.large 1 200 3170 25.00 396.25 800 13300\nc5a.xlarge 1 400 3170 50.00 396.25 1600 13300\nc5a.2xlarge 1 800 3170 100.00 396.25 3200 13300\nc5a.4xlarge 1 1580 3170 197.50 396.25 6600 13300\nc5a.8xlarge 2 3170 396.25 13300\nc5a.12xlarge 2 4750 593.75 20000\nc5a.16xlarge 2 6300 787.5 26700\nc5a.24xlarge 2 9500 1187.5 40000\nc5ad.large 1 200 3170 25.00 396.25 800 13300\nc5ad.xlarge 1 400 3170 50.00 396.25 1600 13300\nc5ad.2xlarge 1 800 3170 100.00 396.25 3200 13300\nc5ad.4xlarge 1 1580 3170 197.50 396.25 6600 13300\nc5ad.8xlarge 2 3170 396.25 13300\nc5ad.12xlarge 2 4750 593.75 20000\nc5ad.16xlarge 2 6300 787.5 26700\nc5ad.24xlarge 2 9500 1187.5 40000\nc5d.large 1 650 4750 81.25 593.75 4000 20000\nc5d.xlarge 1 1150 4750 143.75 593.75 6000 20000\nc5d.2xlarge 1 2300 4750 287.50 593.75 10000 20000\nc5d.4xlarge 2 4750 593.75 20000\nc5d.9xlarge 2 9500 1187.5 40000\nc5d.12xlarge 2 9500 1187.5 40000\nc5d.18xlarge 2 19000 2375.0 80000\nc5d.24xlarge 2 19000 2375.0 80000\nc5d.metal 2 19000 2375.0 80000\nc5n.large 1 650 4750 81.25 593.75 4000 20000\nc5n.xlarge 1 1150 4750 143.75 593.75 6000 20000\nc5n.2xlarge 1 2300 4750 287.50 593.75 10000 20000\nc5n.4xlarge 2 4750 593.75 20000\nc5n.9xlarge 2 9500 1187.5 40000\nc5n.18xlarge 2 19000 2375.0 80000\nc5n.metal 2 19000 2375.0 80000\nc6a.large 1 650 10000 81.25 1250.00 3600 40000\nc6a.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nc6a.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nc6a.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nc6a.8xlarge 2 10000 1250.0 40000\nc6a.12xlarge 2 15000 1875.0 60000\nc6a.16xlarge 2 20000 2500.0 80000\nc6a.24xlarge 2 30000 3750.0 120000\nc6a.32xlarge 2 40000 5000.0 160000\nc6a.48xlarge 2 40000 5000.0 240000\nc6a.metal 2 40000 5000.0 240000\nc6g.medium 1 315 4750 39.38 593.75 2500 20000\nc6g.large 1 630 4750 78.75 593.75 3600 20000\nc6g.xlarge 1 1188 4750 148.50 593.75 6000 20000\nc6g.2xlarge 1 2375 4750 296.88 593.75 12000 20000\nc6g.4xlarge 2 4750 593.75 20000\nc6g.8xlarge 2 9500 1187.5 40000\nc6g.12xlarge 2 14250 1781.25 50000\nc6g.16xlarge 2 19000 2375.0 80000\nc6g.metal 2 19000 2375.0 80000\nc6gd.medium 1 315 4750 39.38 593.75 2500 20000\nc6gd.large 1 630 4750 78.75 593.75 3600 20000\nc6gd.xlarge 1 1188 4750 148.50 593.75 6000 20000\nc6gd.2xlarge 1 2375 4750 296.88 593.75 12000 20000\nc6gd.4xlarge 2 4750 593.75 20000\nc6gd.8xlarge 2 9500 1187.5 40000\nc6gd.12xlarge 2 14250 1781.25 50000\nc6gd.16xlarge 2 19000 2375.0 80000\nc6gd.metal 2 19000 2375.0 80000\nc6gn.medium 1 760 9500 95.00 1187.50 2500 40000\nc6gn.large 1 1235 9500 154.38 1187.50 5000 40000\nc6gn.xlarge 1 2375 9500 296.88 1187.50 10000 40000\nc6gn.2xlarge 1 4750 9500 593.75 1187.50 20000 40000\nc6gn.4xlarge 2 9500 1187.5 40000\nc6gn.8xlarge 2 19000 2375.0 80000\nc6gn.12xlarge 2 28500 3562.5 120000\nc6gn.16xlarge 2 38000 4750.0 160000\nc6i.large 1 650 10000 81.25 1250.00 3600 40000\nc6i.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nc6i.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nc6i.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nc6i.8xlarge 2 10000 1250.0 40000\nc6i.12xlarge 2 15000 1875.0 60000\nc6i.16xlarge 2 20000 2500.0 80000\nc6i.24xlarge 2 30000 3750.0 120000\nc6i.32xlarge 2 40000 5000.0 160000\nc6i.metal 2 40000 5000.0 160000\nc6id.large 1 650 10000 81.25 1250.00 3600 40000\nc6id.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nc6id.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nc6id.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nc6id.8xlarge 2 10000 1250.0 40000\nc6id.12xlarge 2 15000 1875.0 60000\nc6id.16xlarge 2 20000 2500.0 80000\nc6id.24xlarge 2 30000 3750.0 120000\nc6id.32xlarge 2 40000 5000.0 160000\nc6id.metal 2 40000 5000.0 160000\nc6in.large 1 1562 25000 195.31 3125.00 6250 100000\nc6in.xlarge 1 3125 25000 390.62 3125.00 12500 100000\nc6in.2xlarge 1 6250 25000 781.25 3125.00 25000 100000\nc6in.4xlarge 1 12500 25000 1562.50 3125.00 50000 100000\nc6in.8xlarge 2 25000 3125.0 100000\nc6in.12xlarge 2 37500 4687.5 150000\nc6in.16xlarge 2 50000 6250.0 200000\nc6in.24xlarge 2 75000 9375.0 300000\nc6in.32xlarge 2 100000 12500.0 400000\nc6in.metal 2 100000 12500.0 400000\nc7a.medium 1 325 10000 40.62 1250.00 2500 40000\nc7a.large 1 650 10000 81.25 1250.00 3600 40000\nc7a.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nc7a.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nc7a.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nc7a.8xlarge 2 10000 1250.0 40000\nc7a.12xlarge 2 15000 1875.0 60000\nc7a.16xlarge 2 20000 2500.0 80000\nc7a.24xlarge 2 30000 3750.0 120000\nc7a.32xlarge 2 40000 5000.0 160000\nc7a.48xlarge 2 40000 5000.0 240000\nc7a.metal-48xl 2 40000 5000.0 240000\nc7g.medium 1 315 10000 39.38 1250.00 2500 40000\nc7g.large 1 630 10000 78.75 1250.00 3600 40000\nc7g.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nc7g.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nc7g.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nc7g.8xlarge 2 10000 1250.0 40000\nc7g.12xlarge 2 15000 1875.0 60000\nc7g.16xlarge 2 20000 2500.0 80000\nc7g.metal 2 20000 2500.0 80000\nc7gd.medium 1 315 10000 39.38 1250.00 2500 40000\nc7gd.large 1 630 10000 78.75 1250.00 3600 40000\nc7gd.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nc7gd.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nc7gd.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nc7gd.8xlarge 2 10000 1250.0 40000\nc7gd.12xlarge 2 15000 1875.0 60000\nc7gd.16xlarge 2 20000 2500.0 80000\nc7gd.metal 2 20000 2500.0 80000\nc7gn.medium 1 521 10000 65.12 1250.00 2083 40000\nc7gn.large 1 1042 10000 130.25 1250.00 4167 40000\nc7gn.xlarge 1 2083 10000 260.38 1250.00 8333 40000\nc7gn.2xlarge 1 4167 10000 520.88 1250.00 16667 40000\nc7gn.4xlarge 1 8333 10000 1041.62 1250.00 33333 40000\nc7gn.8xlarge 1 16667 20000 2083.38 2500.00 66667 80000\nc7gn.12xlarge 1 25000 30000 3125.00 3750.00 100000 120000\nc7gn.16xlarge 1 33333 40000 4166.62 5000.00 133333 160000\nc7gn.metal 1 33333 40000 4166.62 5000.00 133333 160000\nc7i.large 1 650 10000 81.25 1250.00 3600 40000\nc7i.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nc7i.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nc7i.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nc7i.8xlarge 2 10000 1250.0 40000\nc7i.12xlarge 2 15000 1875.0 60000\nc7i.16xlarge 2 20000 2500.0 80000\nc7i.24xlarge 2 30000 3750.0 120000\nc7i.48xlarge 2 40000 5000.0 240000\nc7i.metal-24xl 2 30000 3750.0 120000\nc7i.metal-48xl 2 40000 5000.0 240000\nc7i-flex.large 1 312 10000 39.06 1250.00 2500 40000\nc7i-flex.xlarge 1 625 10000 78.12 1250.00 3600 40000\nc7i-flex.2xlarge 1 1250 10000 156.25 1250.00 6000 40000\nc7i-flex.4xlarge 1 2500 10000 312.50 1250.00 12000 40000\nc7i-flex.8xlarge 1 5000 10000 625.00 1250.00 20000 40000\nc7i-flex.12xlarge 1 7500 15000 937.50 1875.00 30000 60000\nc7i-flex.16xlarge 1 10000 20000 1250.00 2500.00 40000 80000\nc8g.medium 1 315 10000 39.38 1250.00 2500 40000\nc8g.large 1 630 10000 78.75 1250.00 3600 40000\nc8g.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nc8g.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nc8g.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nc8g.8xlarge 2 10000 1250.0 40000\nc8g.12xlarge 2 15000 1875.0 60000\nc8g.16xlarge 2 20000 2500.0 80000\nc8g.24xlarge 2 30000 3750.0 120000\nc8g.48xlarge 2 40000 5000.0 240000\nc8g.metal-24xl 2 30000 3750.0 120000\nc8g.metal-48xl 2 40000 5000.0 240000\nMemory optimized\nNote\nR8g and X8g instance types support configurable bandwidth weightings. With these instance types, you can optimize an instance's bandwidth for either networking performance or Amazon EBS performance. The following table shows the default Amazon EBS bandwidth performance for these instance types. For the supported configurable weightings, see Configurable bandwidth weighting preferences.\nInstance size Baseline bandwidth (Mbps) Maximum bandwidth (Mbps) Baseline throughput (MB/s, 128 KiB I/O) Maximum throughput (MB/s, 128 KiB I/O) Baseline IOPS (16 KiB I/O) Maximum IOPS (16 KiB I/O)\nr4.large 2 425 53.125 3000\nr4.xlarge 2 850 106.25 6000\nr4.2xlarge 2 1700 212.5 12000\nr4.4xlarge 2 3500 437.5 18750\nr4.8xlarge 2 7000 875.0 37500\nr4.16xlarge 2 14000 1750.0 75000\nr5.large 1 650 4750 81.25 593.75 3600 18750\nr5.xlarge 1 1150 4750 143.75 593.75 6000 18750\nr5.2xlarge 1 2300 4750 287.50 593.75 12000 18750\nr5.4xlarge 2 4750 593.75 18750\nr5.8xlarge 2 6800 850.0 30000\nr5.12xlarge 2 9500 1187.5 40000\nr5.16xlarge 2 13600 1700.0 60000\nr5.24xlarge 2 19000 2375.0 80000\nr5.metal 2 19000 2375.0 80000\nr5a.large 1 650 2880 81.25 360.00 3600 16000\nr5a.xlarge 1 1085 2880 135.62 360.00 6000 16000\nr5a.2xlarge 1 1580 2880 197.50 360.00 8333 16000\nr5a.4xlarge 2 2880 360.0 16000\nr5a.8xlarge 2 4750 593.75 20000\nr5a.12xlarge 2 6780 847.5 30000\nr5a.16xlarge 2 9500 1187.5 40000\nr5a.24xlarge 2 13570 1696.25 60000\nr5ad.large 1 650 2880 81.25 360.00 3600 16000\nr5ad.xlarge 1 1085 2880 135.62 360.00 6000 16000\nr5ad.2xlarge 1 1580 2880 197.50 360.00 8333 16000\nr5ad.4xlarge 2 2880 360.0 16000\nr5ad.8xlarge 2 4750 593.75 20000\nr5ad.12xlarge 2 6780 847.5 30000\nr5ad.16xlarge 2 9500 1187.5 40000\nr5ad.24xlarge 2 13570 1696.25 60000\nr5b.large 1 1250 10000 156.25 1250.00 5417 43333\nr5b.xlarge 1 2500 10000 312.50 1250.00 10833 43333\nr5b.2xlarge 1 5000 10000 625.00 1250.00 21667 43333\nr5b.4xlarge 2 10000 1250.0 43333\nr5b.8xlarge 2 20000 2500.0 86667\nr5b.12xlarge 2 30000 3750.0 130000\nr5b.16xlarge 2 40000 5000.0 173333\nr5b.24xlarge 2 60000 7500.0 260000\nr5b.metal 2 60000 7500.0 260000\nr5d.large 1 650 4750 81.25 593.75 3600 18750\nr5d.xlarge 1 1150 4750 143.75 593.75 6000 18750\nr5d.2xlarge 1 2300 4750 287.50 593.75 12000 18750\nr5d.4xlarge 2 4750 593.75 18750\nr5d.8xlarge 2 6800 850.0 30000\nr5d.12xlarge 2 9500 1187.5 40000\nr5d.16xlarge 2 13600 1700.0 60000\nr5d.24xlarge 2 19000 2375.0 80000\nr5d.metal 2 19000 2375.0 80000\nr5dn.large 1 650 4750 81.25 593.75 3600 18750\nr5dn.xlarge 1 1150 4750 143.75 593.75 6000 18750\nr5dn.2xlarge 1 2300 4750 287.50 593.75 12000 18750\nr5dn.4xlarge 2 4750 593.75 18750\nr5dn.8xlarge 2 6800 850.0 30000\nr5dn.12xlarge 2 9500 1187.5 40000\nr5dn.16xlarge 2 13600 1700.0 60000\nr5dn.24xlarge 2 19000 2375.0 80000\nr5dn.metal 2 19000 2375.0 80000\nr5n.large 1 650 4750 81.25 593.75 3600 18750\nr5n.xlarge 1 1150 4750 143.75 593.75 6000 18750\nr5n.2xlarge 1 2300 4750 287.50 593.75 12000 18750\nr5n.4xlarge 2 4750 593.75 18750\nr5n.8xlarge 2 6800 850.0 30000\nr5n.12xlarge 2 9500 1187.5 40000\nr5n.16xlarge 2 13600 1700.0 60000\nr5n.24xlarge 2 19000 2375.0 80000\nr5n.metal 2 19000 2375.0 80000\nr6a.large 1 650 10000 81.25 1250.00 3600 40000\nr6a.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nr6a.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nr6a.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nr6a.8xlarge 2 10000 1250.0 40000\nr6a.12xlarge 2 15000 1875.0 60000\nr6a.16xlarge 2 20000 2500.0 80000\nr6a.24xlarge 2 30000 3750.0 120000\nr6a.32xlarge 2 40000 5000.0 160000\nr6a.48xlarge 2 40000 5000.0 240000\nr6a.metal 2 40000 5000.0 240000\nr6g.medium 1 315 4750 39.38 593.75 2500 20000\nr6g.large 1 630 4750 78.75 593.75 3600 20000\nr6g.xlarge 1 1188 4750 148.50 593.75 6000 20000\nr6g.2xlarge 1 2375 4750 296.88 593.75 12000 20000\nr6g.4xlarge 2 4750 593.75 20000\nr6g.8xlarge 2 9500 1187.5 40000\nr6g.12xlarge 2 14250 1781.25 50000\nr6g.16xlarge 2 19000 2375.0 80000\nr6g.metal 2 19000 2375.0 80000\nr6gd.medium 1 315 4750 39.38 593.75 2500 20000\nr6gd.large 1 630 4750 78.75 593.75 3600 20000\nr6gd.xlarge 1 1188 4750 148.50 593.75 6000 20000\nr6gd.2xlarge 1 2375 4750 296.88 593.75 12000 20000\nr6gd.4xlarge 2 4750 593.75 20000\nr6gd.8xlarge 2 9500 1187.5 40000\nr6gd.12xlarge 2 14250 1781.25 50000\nr6gd.16xlarge 2 19000 2375.0 80000\nr6gd.metal 2 19000 2375.0 80000\nr6i.large 1 650 10000 81.25 1250.00 3600 40000\nr6i.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nr6i.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nr6i.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nr6i.8xlarge 2 10000 1250.0 40000\nr6i.12xlarge 2 15000 1875.0 60000\nr6i.16xlarge 2 20000 2500.0 80000\nr6i.24xlarge 2 30000 3750.0 120000\nr6i.32xlarge 2 40000 5000.0 160000\nr6i.metal 2 40000 5000.0 160000\nr6idn.large 1 1562 25000 195.31 3125.00 6250 100000\nr6idn.xlarge 1 3125 25000 390.62 3125.00 12500 100000\nr6idn.2xlarge 1 6250 25000 781.25 3125.00 25000 100000\nr6idn.4xlarge 1 12500 25000 1562.50 3125.00 50000 100000\nr6idn.8xlarge 2 25000 3125.0 100000\nr6idn.12xlarge 2 37500 4687.5 150000\nr6idn.16xlarge 2 50000 6250.0 200000\nr6idn.24xlarge 2 75000 9375.0 300000\nr6idn.32xlarge 2 100000 12500.0 400000\nr6idn.metal 2 100000 12500.0 400000\nr6in.large 1 1562 25000 195.31 3125.00 6250 100000\nr6in.xlarge 1 3125 25000 390.62 3125.00 12500 100000\nr6in.2xlarge 1 6250 25000 781.25 3125.00 25000 100000\nr6in.4xlarge 1 12500 25000 1562.50 3125.00 50000 100000\nr6in.8xlarge 2 25000 3125.0 100000\nr6in.12xlarge 2 37500 4687.5 150000\nr6in.16xlarge 2 50000 6250.0 200000\nr6in.24xlarge 2 75000 9375.0 300000\nr6in.32xlarge 2 100000 12500.0 400000\nr6in.metal 2 100000 12500.0 400000\nr6id.large 1 650 10000 81.25 1250.00 3600 40000\nr6id.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nr6id.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nr6id.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nr6id.8xlarge 2 10000 1250.0 40000\nr6id.12xlarge 2 15000 1875.0 60000\nr6id.16xlarge 2 20000 2500.0 80000\nr6id.24xlarge 2 30000 3750.0 120000\nr6id.32xlarge 2 40000 5000.0 160000\nr6id.metal 2 40000 5000.0 160000\nr7a.medium 1 325 10000 40.62 1250.00 2500 40000\nr7a.large 1 650 10000 81.25 1250.00 3600 40000\nr7a.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nr7a.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nr7a.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nr7a.8xlarge 2 10000 1250.0 40000\nr7a.12xlarge 2 15000 1875.0 60000\nr7a.16xlarge 2 20000 2500.0 80000\nr7a.24xlarge 2 30000 3750.0 120000\nr7a.32xlarge 2 40000 5000.0 160000\nr7a.48xlarge 2 40000 5000.0 240000\nr7a.metal-48xl 2 40000 5000.0 240000\nr7g.medium 1 315 10000 39.38 1250.00 2500 40000\nr7g.large 1 630 10000 78.75 1250.00 3600 40000\nr7g.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nr7g.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nr7g.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nr7g.8xlarge 2 10000 1250.0 40000\nr7g.12xlarge 2 15000 1875.0 60000\nr7g.16xlarge 2 20000 2500.0 80000\nr7g.metal 2 20000 2500.0 80000\nr7gd.medium 1 315 10000 39.38 1250.00 2500 40000\nr7gd.large 1 630 10000 78.75 1250.00 3600 40000\nr7gd.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nr7gd.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nr7gd.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nr7gd.8xlarge 2 10000 1250.0 40000\nr7gd.12xlarge 2 15000 1875.0 60000\nr7gd.16xlarge 2 20000 2500.0 80000\nr7gd.metal 2 20000 2500.0 80000\nr7i.large 1 650 10000 81.25 1250.00 3600 40000\nr7i.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nr7i.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nr7i.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nr7i.8xlarge 2 10000 1250.0 40000\nr7i.12xlarge 2 15000 1875.0 60000\nr7i.16xlarge 2 20000 2500.0 80000\nr7i.24xlarge 2 30000 3750.0 120000\nr7i.48xlarge 2 40000 5000.0 240000\nr7i.metal-24xl 2 30000 3750.0 120000\nr7i.metal-48xl 2 40000 5000.0 240000\nr7iz.large 1 792 10000 99.00 1250.00 3600 40000\nr7iz.xlarge 1 1584 10000 198.00 1250.00 6667 40000\nr7iz.2xlarge 1 3168 10000 396.00 1250.00 13333 40000\nr7iz.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nr7iz.8xlarge 2 10000 1250.0 40000\nr7iz.12xlarge 2 19000 2375.0 76000\nr7iz.16xlarge 2 20000 2500.0 80000\nr7iz.32xlarge 2 40000 5000.0 160000\nr7iz.metal-16xl 2 20000 2500.0 80000\nr7iz.metal-32xl 2 40000 5000.0 160000\nr8g.medium 1 315 10000 39.38 1250.00 2500 40000\nr8g.large 1 630 10000 78.75 1250.00 3600 40000\nr8g.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nr8g.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nr8g.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nr8g.8xlarge 2 10000 1250.0 40000\nr8g.12xlarge 2 15000 1875.0 60000\nr8g.16xlarge 2 20000 2500.0 80000\nr8g.24xlarge 2 30000 3750.0 120000\nr8g.48xlarge 2 40000 5000.0 240000\nr8g.metal-24xl 2 30000 3750.0 120000\nr8g.metal-48xl 2 40000 5000.0 240000\nu-3tb1.56xlarge 2 19000 2375.0 80000\nu-6tb1.56xlarge 2 38000 4750.0 160000\nu-6tb1.112xlarge 2 38000 4750.0 160000\nu-6tb1.metal 2 38000 4750.0 160000\nu-9tb1.112xlarge 2 38000 4750.0 160000\nu-9tb1.metal 2 38000 4750.0 160000\nu-12tb1.112xlarge 2 38000 4750.0 160000\nu-12tb1.metal 2 38000 4750.0 160000\nu-18tb1.112xlarge 2 38000 4750.0 160000\nu-18tb1.metal 2 38000 4750.0 160000\nu-24tb1.112xlarge 2 38000 4750.0 160000\nu-24tb1.metal 2 38000 4750.0 160000\nu7i-6tb.112xlarge 2 60000 7500.0 420000\nu7i-8tb.112xlarge 2 60000 7500.0 420000\nu7i-12tb.224xlarge 2 60000 7500.0 420000\nu7in-16tb.224xlarge 2 100000 12500.0 420000\nu7in-24tb.224xlarge 2 100000 12500.0 420000\nu7in-32tb.224xlarge 2 100000 12500.0 420000\nu7inh-32tb.480xlarge 2 160000 20000.0 840000\nx1.16xlarge 2 7000 875.0 40000\nx1.32xlarge 2 14000 1750.0 80000\nx1e.xlarge 2 500 62.5 3700\nx1e.2xlarge 2 1000 125.0 7400\nx1e.4xlarge 2 1750 218.75 10000\nx1e.8xlarge 2 3500 437.5 20000\nx1e.16xlarge 2 7000 875.0 40000\nx1e.32xlarge 2 14000 1750.0 80000\nx2gd.medium 1 315 4750 39.38 593.75 2500 20000\nx2gd.large 1 630 4750 78.75 593.75 3600 20000\nx2gd.xlarge 1 1188 4750 148.50 593.75 6000 20000\nx2gd.2xlarge 1 2375 4750 296.88 593.75 12000 20000\nx2gd.4xlarge 2 4750 593.75 20000\nx2gd.8xlarge 2 9500 1187.5 40000\nx2gd.12xlarge 2 14250 1781.25 60000\nx2gd.16xlarge 2 19000 2375.0 80000\nx2gd.metal 2 19000 2375.0 80000\nx2idn.16xlarge 2 40000 5000.0 173333\nx2idn.24xlarge 2 60000 7500.0 260000\nx2idn.32xlarge 2 80000 10000.0 260000\nx2idn.metal 2 80000 10000.0 260000\nx2iedn.xlarge 1 2500 20000 312.50 2500.00 8125 65000\nx2iedn.2xlarge 1 5000 20000 625.00 2500.00 16250 65000\nx2iedn.4xlarge 1 10000 20000 1250.00 2500.00 32500 65000\nx2iedn.8xlarge 2 20000 2500.0 65000\nx2iedn.16xlarge 2 40000 5000.0 130000\nx2iedn.24xlarge 2 60000 7500.0 195000\nx2iedn.32xlarge 2 80000 10000.0 260000\nx2iedn.metal 2 80000 10000.0 260000\nx2iezn.2xlarge 2 3170 396.25 13333\nx2iezn.4xlarge 2 4750 593.75 20000\nx2iezn.6xlarge 2 9500 1187.5 40000\nx2iezn.8xlarge 2 12000 1500.0 55000\nx2iezn.12xlarge 2 19000 2375.0 80000\nx2iezn.metal 2 19000 2375.0 80000\nx8g.medium 1 315 10000 39.38 1250.00 2500 40000\nx8g.large 1 630 10000 78.75 1250.00 3600 40000\nx8g.xlarge 1 1250 10000 156.25 1250.00 6000 40000\nx8g.2xlarge 1 2500 10000 312.50 1250.00 12000 40000\nx8g.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\nx8g.8xlarge 2 10000 1250.0 40000\nx8g.12xlarge 2 15000 1875.0 60000\nx8g.16xlarge 2 20000 2500.0 80000\nx8g.24xlarge 2 30000 3750.0 120000\nx8g.48xlarge 2 40000 5000.0 240000\nx8g.metal-24xl 2 30000 3750.0 120000\nx8g.metal-48xl 2 40000 5000.0 240000\nz1d.large 1 800 3170 100.00 396.25 3333 13333\nz1d.xlarge 1 1580 3170 197.50 396.25 6667 13333\nz1d.2xlarge 2 3170 396.25 13333\nz1d.3xlarge 2 4750 593.75 20000\nz1d.6xlarge 2 9500 1187.5 40000\nz1d.12xlarge 2 19000 2375.0 80000\nz1d.metal 2 19000 2375.0 80000\nStorage optimized\nInstance size Baseline bandwidth (Mbps) Maximum bandwidth (Mbps) Baseline throughput (MB/s, 128 KiB I/O) Maximum throughput (MB/s, 128 KiB I/O) Baseline IOPS (16 KiB I/O) Maximum IOPS (16 KiB I/O)\nd2.xlarge 2 750 93.75 6000\nd2.2xlarge 2 1000 125.0 8000\nd2.4xlarge 2 2000 250.0 16000\nd2.8xlarge 2 4000 500.0 32000\nd3.xlarge 1 850 2800 106.25 350.00 5000 15000\nd3.2xlarge 1 1700 2800 212.50 350.00 10000 15000\nd3.4xlarge 2 2800 350.0 15000\nd3.8xlarge 2 5000 625.0 30000\nd3en.xlarge 1 850 2800 106.25 350.00 5000 15000\nd3en.2xlarge 1 1700 2800 212.50 350.00 10000 15000\nd3en.4xlarge 2 2800 350.0 15000\nd3en.6xlarge 2 4000 500.0 25000\nd3en.8xlarge 2 5000 625.0 30000\nd3en.12xlarge 2 7000 875.0 40000\nh1.2xlarge 2 1750 218.75 12000\nh1.4xlarge 2 3500 437.5 20000\nh1.8xlarge 2 7000 875.0 40000\nh1.16xlarge 2 14000 1750.0 80000\ni3.large 2 425 53.125 3000\ni3.xlarge 2 850 106.25 6000\ni3.2xlarge 2 1700 212.5 12000\ni3.4xlarge 2 3500 437.5 16000\ni3.8xlarge 2 7000 875.0 32500\ni3.16xlarge 2 14000 1750.0 65000\ni3.metal 2 19000 2375.0 80000\ni3en.large 1 576 4750 72.10 593.75 3000 20000\ni3en.xlarge 1 1153 4750 144.20 593.75 6000 20000\ni3en.2xlarge 1 2307 4750 288.39 593.75 12000 20000\ni3en.3xlarge 1 3800 4750 475.00 593.75 15000 20000\ni3en.6xlarge 2 4750 593.75 20000\ni3en.12xlarge 2 9500 1187.5 40000\ni3en.24xlarge 2 19000 2375.0 80000\ni3en.metal 2 19000 2375.0 80000\ni4g.large 1 625 10000 78.12 1250.00 2500 40000\ni4g.xlarge 1 1250 10000 156.25 1250.00 5000 40000\ni4g.2xlarge 1 2500 10000 312.50 1250.00 10000 40000\ni4g.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\ni4g.8xlarge 2 10000 1250.0 40000\ni4g.16xlarge 2 20000 2500.0 80000\ni4i.large 1 625 10000 78.12 1250.00 2500 40000\ni4i.xlarge 1 1250 10000 156.25 1250.00 5000 40000\ni4i.2xlarge 1 2500 10000 312.50 1250.00 10000 40000\ni4i.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\ni4i.8xlarge 2 10000 1250.0 40000\ni4i.12xlarge 2 15000 1875.0 60000\ni4i.16xlarge 2 20000 2500.0 80000\ni4i.24xlarge 2 30000 3750.0 120000\ni4i.32xlarge 2 40000 5000.0 160000\ni4i.metal 2 40000 5000.0 160000\ni7ie.large 1 625 10000 78.12 1250.00 2500 40000\ni7ie.xlarge 1 1250 10000 156.25 1250.00 5000 40000\ni7ie.2xlarge 1 2500 10000 312.50 1250.00 10000 40000\ni7ie.3xlarge 1 3750 10000 468.75 1250.00 15000 40000\ni7ie.6xlarge 1 7500 10000 937.50 1250.00 30000 40000\ni7ie.12xlarge 2 15000 1875.0 60000\ni7ie.18xlarge 2 22500 2812.5 90000\ni7ie.24xlarge 2 30000 3750.0 120000\ni7ie.48xlarge 2 60000 7500.0 240000\ni8g.large 1 625 10000 78.12 1250.00 2500 40000\ni8g.xlarge 1 1250 10000 156.25 1250.00 5000 40000\ni8g.2xlarge 1 2500 10000 312.50 1250.00 10000 40000\ni8g.4xlarge 1 5000 10000 625.00 1250.00 20000 40000\ni8g.8xlarge 2 10000 1250.0 40000\ni8g.12xlarge 2 15000 1875.0 60000\ni8g.16xlarge 2 20000 2500.0 80000\ni8g.24xlarge 2 30000 3750.0 120000\ni8g.metal-24xl 2 30000 3750.0 120000\nim4gn.large 1 1250 10000 156.25 1250.00 5000 40000\nim4gn.xlarge 1 2500 10000 312.50 1250.00 10000 40000\nim4gn.2xlarge 1 5000 10000 625.00 1250.00 20000 40000\nim4gn.4xlarge 2 10000 1250.0 40000\nim4gn.8xlarge 2 20000 2500.0 80000\nim4gn.16xlarge 2 40000 5000.0 160000\nis4gen.medium 1 625 10000 78.12 1250.00 2500 40000\nis4gen.large 1 1250 10000 156.25 1250.00 5000 40000\nis4gen.xlarge 1 2500 10000 312.50 1250.00 10000 40000\nis4gen.2xlarge 1 5000 10000 625.00 1250.00 20000 40000\nis4gen.4xlarge 2 10000 1250.0 40000\nis4gen.8xlarge 2 20000 2500.0 80000\nAccelerated computing\nInstance size Baseline bandwidth (Mbps) Maximum bandwidth (Mbps) Baseline throughput (MB/s, 128 KiB I/O) Maximum throughput (MB/s, 128 KiB I/O) Baseline IOPS (16 KiB I/O) Maximum IOPS (16 KiB I/O)\ndl1.24xlarge 2 19000 2375.0 80000\ndl2q.24xlarge 2 19000 2375.0 80000\nf1.2xlarge 2 1700 212.5 12000\nf1.4xlarge 2 3500 437.5 44000\nf1.16xlarge 2 14000 1750.0 75000\nf2.12xlarge 2 15000 1875.0 60000\nf2.48xlarge 2 60000 7500.0 240000\ng3.4xlarge 2 3500 437.5 20000\ng3.8xlarge 2 7000 875.0 40000\ng3.16xlarge 2 14000 1750.0 80000\ng4ad.xlarge 1 400 3170 50.00 396.25 1700 13333\ng4ad.2xlarge 1 800 3170 100.00 396.25 3400 13333\ng4ad.4xlarge 1 1580 3170 197.50 396.25 6700 13333\ng4ad.8xlarge 2 3170 396.25 13333\ng4ad.16xlarge 2 6300 787.5 26667\ng4dn.xlarge 1 950 3500 118.75 437.50 3000 20000\ng4dn.2xlarge 1 1150 3500 143.75 437.50 6000 20000\ng4dn.4xlarge 2 4750 593.75 20000\ng4dn.8xlarge 2 9500 1187.5 40000\ng4dn.12xlarge 2 9500 1187.5 40000\ng4dn.16xlarge 2 9500 1187.5 40000\ng4dn.metal 2 19000 2375.0 80000\ng5.xlarge 1 700 3500 87.50 437.50 3000 15000\ng5.2xlarge 1 850 3500 106.25 437.50 3500 15000\ng5.4xlarge 2 4750 593.75 20000\ng5.8xlarge 2 16000 2000.0 65000\ng5.12xlarge 2 16000 2000.0 65000\ng5.16xlarge 2 16000 2000.0 65000\ng5.24xlarge 2 19000 2375.0 80000\ng5.48xlarge 2 19000 2375.0 80000\ng5g.xlarge 1 1188 4750 148.50 593.75 6000 20000\ng5g.2xlarge 1 2375 4750 296.88 593.75 12000 20000\ng5g.4xlarge 2 4750 593.75 20000\ng5g.8xlarge 2 9500 1187.5 40000\ng5g.16xlarge 2 19000 2375.0 80000\ng5g.metal 2 19000 2375.0 80000\ng6.xlarge 1 1000 5000 125.00 625.00 4000 20000\ng6.2xlarge 1 2000 5000 250.00 625.00 8000 20000\ng6.4xlarge 2 8000 1000.0 32000\ng6.8xlarge 2 16000 2000.0 64000\ng6.12xlarge 2 20000 2500.0 80000\ng6.16xlarge 2 20000 2500.0 80000\ng6.24xlarge 2 30000 3750.0 120000\ng6.48xlarge 2 60000 7500.0 240000\ng6e.xlarge 1 1000 5000 125.00 625.00 4000 20000\ng6e.2xlarge 1 2000 5000 250.00 625.00 8000 20000\ng6e.4xlarge 2 8000 1000.0 32000\ng6e.8xlarge 2 16000 2000.0 64000\ng6e.12xlarge 2 20000 2500.0 80000\ng6e.16xlarge 2 20000 2500.0 80000\ng6e.24xlarge 2 30000 3750.0 120000\ng6e.48xlarge 2 60000 7500.0 240000\ngr6.4xlarge 2 8000 1000.0 32000\ngr6.8xlarge 2 16000 2000.0 64000\ninf1.xlarge 1 1190 4750 148.75 593.75 4000 20000\ninf1.2xlarge 1 1190 4750 148.75 593.75 6000 20000\ninf1.6xlarge 2 4750 593.75 20000\ninf1.24xlarge 2 19000 2375.0 80000\ninf2.xlarge 1 1250 10000 156.25 1250.00 6000 40000\ninf2.8xlarge 2 10000 1250.0 40000\ninf2.24xlarge 2 30000 3750.0 120000\ninf2.48xlarge 2 60000 7500.0 240000\np2.xlarge 2 750 93.75 6000\np2.8xlarge 2 5000 625.0 32500\np2.16xlarge 2 10000 1250.0 65000\np3.2xlarge 2 1750 218.75 10000\np3.8xlarge 2 7000 875.0 40000\np3.16xlarge 2 14000 1750.0 80000\np3dn.24xlarge 2 19000 2375.0 80000\np4d.24xlarge 2 19000 2375.0 80000\np4de.24xlarge 2 19000 2375.0 80000\np5.48xlarge 2 80000 10000.0 260000\np5e.48xlarge 2 80000 10000.0 260000\np5en.48xlarge 2 100000 12500.0 400000\ntrn1.2xlarge 1 5000 20000 625.00 2500.00 16250 65000\ntrn1.32xlarge 2 80000 10000.0 260000\ntrn1n.32xlarge 2 80000 10000.0 260000\ntrn2.48xlarge 2 80000 10000.0 260000\ntrn2u.48xlarge 2 80000 10000.0 260000\nvt1.3xlarge 1 2375 4750 296.88 593.75 10000 20000\nvt1.6xlarge 2 4750 593.75 20000\nvt1.24xlarge 2 19000 2375.0 80000\nHigh-performance computing\nInstance size Baseline bandwidth (Mbps) Maximum bandwidth (Mbps) Baseline throughput (MB/s, 128 KiB I/O) Maximum throughput (MB/s, 128 KiB I/O) Baseline IOPS (16 KiB I/O) Maximum IOPS (16 KiB I/O)\nhpc6a.48xlarge 1 87 2085 10.88 260.62 500 11000\nhpc6id.32xlarge 1 87 2085 10.88 260.62 500 11000\nhpc7a.12xlarge 1 87 2085 10.88 260.62 500 11000\nhpc7a.24xlarge 1 87 2085 10.88 260.62 500 11000\nhpc7a.48xlarge 1 87 2085 10.88 260.62 500 11000\nhpc7a.96xlarge 1 87 2085 10.88 260.62 500 11000\nhpc7g.4xlarge 1 87 2085 10.88 260.62 500 11000\nhpc7g.8xlarge 1 87 2085 10.88 260.62 500 11000\nhpc7g.16xlarge 1 87 2085 10.88 260.62 500 11000\nEBS optimization supported\nThe following instance types support EBS optimization but EBS optimization is not enabled by default. You must enable EBS optimization, at an additional hourly fee, during or after launch to achieve the level of EBS performance described.\nInstance size Maximum bandwidth (Mbps) Maximum throughput (MB/s, 128 KiB I/O) Maximum IOPS (16 KiB I/O)\nc1.xlarge 1000 125.0 8000\nc3.xlarge 500 62.5 4000\nc3.2xlarge 1000 125.0 8000\nc3.4xlarge 2000 250.0 16000\ni2.xlarge 500 62.5 4000\ni2.2xlarge 1000 125.0 8000\ni2.4xlarge 2000 250.0 16000\nm1.large 500 62.5 4000\nm1.xlarge 1000 125.0 8000\nm2.2xlarge 500 62.5 4000\nm2.4xlarge 1000 125.0 8000\nm3.xlarge 500 62.5 4000\nm3.2xlarge 1000 125.0 8000\nr3.xlarge 500 62.5 4000\nr3.2xlarge 1000 125.0 8000\nr3.4xlarge 2000 250.0 16000\nNote\nThe i2.8xlarge, c3.8xlarge, and r3.8xlarge instances do not have dedicated EBS bandwidth and therefore do not offer EBS optimization. On these instances, network traffic and Amazon EBS traffic share the same 10-gigabit network interface."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimization-performance.html",
        "content": "An instance's EBS performance is bounded by the instance type's performance limits, or the aggregated performance of its attached volumes, whichever is smaller. To achieve maximum EBS performance, an instance must have attached volumes that provide a combined performance equal to or greater than the maximum instance performance. For example, to achieve 80,000 IOPS for r6i.16xlarge, the instance must have at least 5 gp3 volumes provisioned with 16,000 IOPS each (5 volumes x 16,000 IOPS = 80,000 IOPS). We recommend that you choose an instance type that provides more dedicated Amazon EBS throughput than your application needs; otherwise, the connection between Amazon EBS and Amazon EC2 can become a performance bottleneck.\nImportant\nWhen using configurable bandwidth weightings, the EBS bandwidth limits for your instance might change. For instances with the VPC-1 weighting configuration, which increases networking bandwidth, you might experience lower than expected IOPS for EBS volumes due to reaching the EBS bandwidth limit before the IOPS limit. This is particularly noticeable with larger I/O sizes. Always test your specific workload to ensure it meets your performance requirements with your selected bandwidth weighting. For more information, see EC2 instance bandwidth weighting configuration.\nYou can use the EBSIOBalance% and EBSByteBalance% metrics to help you determine whether your instances are sized correctly. You can view these metrics in the CloudWatch console and set an alarm that is triggered based on a threshold you specify. These metrics are expressed as a percentage. Instances with a consistently low balance percentage are candidates to size up. Instances where the balance percentage never drops below 100% are candidates for downsizing. For more information, see Monitor your instances using CloudWatch.\nThe high memory instances are designed to run large in-memory databases, including production deployments of the SAP HANA in-memory database, in the cloud. To maximize EBS performance, use high memory instances with an even number of io1 or io2 volumes with identical provisioned performance. For example, for IOPS heavy workloads, use four io1 or io2 volumes with 40,000 provisioned IOPS to get the maximum 160,000 instance IOPS. Similarly, for throughput heavy workloads, use six io1 or io2 volumes with 48,000 provisioned IOPS to get the maximum 4,750 MB/s throughput. For additional recommendations, see Storage Configuration for SAP HANA.\nConsiderations\nG4dn, I3en, Inf1, M5a, M5ad, R5a, R5ad, T3, T3a, and Z1d instances launched after February 26, 2020 provide the maximum EBS optimized performance. To get the maximum performance from an instance launched before February 26, 2020, stop and start it.\nC5, C5d, C5n, M5, M5d, M5n, M5dn, R5, R5d, R5n, R5dn, and P3dn instances launched after December 3, 2019 provide the maximum EBS optimized performance. To get the maximum performance from an instance launched before December 3, 2019, stop and start it.\nu-6tb1.metal, u-9tb1.metal, and u-12tb1.metal instances launched after March 12, 2020 provide the maximum EBS optimized performance. Instances of these types launched before March 12, 2020 might provide lower performance. To get the maximum performance from an instance launched before March 12, 2020, contact your account team to upgrade the instance at no additional cost."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/describe-ebs-optimization.html",
        "content": "You can use the AWS CLI to view the instances types in the current Region that support EBS optimization.\nTo find instance types that are Amazon EBS-optimized by default\nUse the following describe-instance-types command. If running this command at a Windows Command Prompt, replace the \\ line continuation characters with the ^ character.\naws ec2 describe-instance-types \\\n--query 'InstanceTypes[].{InstanceType:InstanceType,\"MaxBandwidth(Mb/s)\":EbsInfo.EbsOptimizedInfo.MaximumBandwidthInMbps,MaxIOPS:EbsInfo.EbsOptimizedInfo.MaximumIops,\"MaxThroughput(MB/s)\":EbsInfo.EbsOptimizedInfo.MaximumThroughputInMBps}' \\\n--filters Name=ebs-info.ebs-optimized-support,Values=default --output=table\nExample output for eu-west-1:\n-------------------------------------------------------------------------------\n|                            DescribeInstanceTypes                            |\n+-------------------+---------------------+-----------+-----------------------+\n|   InstanceType    | MaxBandwidth(Mb/s)  |  MaxIOPS  |  MaxThroughput(MB/s)  |\n+-------------------+---------------------+-----------+-----------------------+\n|  m5dn.8xlarge     |  6800               |  30000    |  850.0                |\n|  m6gd.xlarge      |  4750               |  20000    |  593.75               |\n|  c4.4xlarge       |  2000               |  16000    |  250.0                |\n|  r4.16xlarge      |  14000              |  75000    |  1750.0               |\n|  m5ad.large       |  2880               |  16000    |  360.0                |\n...\nTo find instance types that optionally support Amazon EBS optimization\nUse the following describe-instance-types command.\naws ec2 describe-instance-types \\\n--query 'InstanceTypes[].{InstanceType:InstanceType,\"MaxBandwidth(Mb/s)\":EbsInfo.EbsOptimizedInfo.MaximumBandwidthInMbps,MaxIOPS:EbsInfo.EbsOptimizedInfo.MaximumIops,\"MaxThroughput(MB/s)\":EbsInfo.EbsOptimizedInfo.MaximumThroughputInMBps}' \\\n--filters Name=ebs-info.ebs-optimized-support,Values=supported --output=table\nExample output for eu-west-1:\n--------------------------------------------------------------------------\n|                         DescribeInstanceTypes                          |\n+--------------+----------------------+----------+-----------------------+\n| InstanceType | MaxBandwidth(Mb/s)   | MaxIOPS  |  MaxThroughput(MB/s)  |\n+--------------+----------------------+----------+-----------------------+\n|  i2.2xlarge  |  1000                |  8000    |  125.0                |\n|  m2.4xlarge  |  1000                |  8000    |  125.0                |\n|  m2.2xlarge  |  500                 |  4000    |  62.5                 |\n|  c1.xlarge   |  1000                |  8000    |  125.0                |\n|  i2.xlarge   |  500                 |  4000    |  62.5                 |\n|  m3.xlarge   |  500                 |  4000    |  62.5                 |\n|  m1.xlarge   |  1000                |  8000    |  125.0                |\n|  r3.4xlarge  |  2000                |  16000   |  250.0                |\n|  r3.2xlarge  |  1000                |  8000    |  125.0                |\n|  c3.xlarge   |  500                 |  4000    |  62.5                 |\n|  m3.2xlarge  |  1000                |  8000    |  125.0                |\n|  r3.xlarge   |  500                 |  4000    |  62.5                 |\n|  i2.4xlarge  |  2000                |  16000   |  250.0                |\n|  c3.4xlarge  |  2000                |  16000   |  250.0                |\n|  c3.2xlarge  |  1000                |  8000    |  125.0                |\n|  m1.large    |  500                 |  4000    |  62.5                 |\n+--------------+----------------------+----------+-----------------------+"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/modify-ebs-optimized-attribute.html",
        "content": "You can manually enable Amazon EBS optimization only for instances types that optionally support Amazon EBS optimization, but are not Amazon EBS-optimized by default. For these instance types you can enable Amazon EBS optimization during or after launch for an additional hourly fee.\nConsole\nCommand line\nTo enable Amazon EBS optimization during launch\nIn the Launch instances wizard, select the required instance type. Expand the Advanced details section, then for EBS-optimized instance, select Enable.\nIf the selected instance type does not support Amazon EBS optimization, the drop-down is disabled. If the instance type is Amazon EBS-optimized by default, Enable is already selected.\nTo enable Amazon EBS optimization after launch\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances, and select the instance.\nStop the instance. Choose Actions, Instance state, Stop instance.\nWarning\nWhen you stop an instance, the data on any instance store volumes is erased. To keep data from instance store volumes, be sure to back it up to persistent storage.\nWith the instance still selected, choose Actions, Instance settings, Change instance type.\nSelect EBS-optimized and then choose Apply.\nIf the instance type is Amazon EBS-optimized by default, or if it does not support Amazon EBS optimization, the checkbox is disabled.\nRestart the instance. Choose Instance state, Start instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html",
        "content": "Many Amazon EC2 instances support simultaneous multithreading (SMT), which enables multiple threads to run concurrently on a single CPU core. Each thread is represented as a virtual CPU (vCPU) on the instance. An instance has a default number of CPU cores, which varies according to instance type. For example, an m5.xlarge instance type has two CPU cores and two threads per core by default\u2014four vCPUs in total.\nNote\nEach vCPU is a thread of a CPU core, except for T2 instances, M7a instances, Apple silicon Mac instances, and 64-bit ARM platforms such as instances powered by AWS Graviton processors.\nIn most cases, there is an Amazon EC2 instance type that has a combination of memory and number of vCPUs to suit your workloads. However, you can specify the following CPU options both during and after instance launch to optimize your instance for specific workloads or business needs:\nNumber of CPU cores: You can customize the number of CPU cores for the instance. You might do this to potentially optimize the licensing costs of your software with an instance that has sufficient amounts of RAM for memory-intensive workloads but fewer CPU cores.\nThreads per core: You can disable SMT by specifying a single thread per CPU core. You might do this for certain workloads, such as high performance computing (HPC) workloads.\nPricing\nThere is no additional or reduced charge for specifying CPU options. You're charged the same as instances that are launched with the default CPU options.\nContents\nRules for specifying CPU options for an Amazon EC2 instance\nSupported CPU options for Amazon EC2 instance types\nSpecify CPU options for an Amazon EC2 instance\nView CPU threads and cores for an Amazon EC2 instance"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-cpu-options-rules.html",
        "content": "To specify the CPU options for your instance, be aware of the following rules:\nYou can't specify CPU options for bare metal instances.\nYou can specify CPU options both during and after instance launch.\nTo configure CPU options, you must specify both the number of CPU cores and threads per core in the request. For example requests, see Specify CPU options for an Amazon EC2 instance.\nThe number of vCPUs for the instance is the number of CPU cores multiplied by the threads per core. To specify a custom number of vCPUs, you must specify a valid number of CPU cores and threads per core for the instance type. You cannot exceed the default number of vCPUs for the instance. For more information, see Supported CPU options for Amazon EC2 instance types.\nTo disable simultaneous multithreading (SMT), also referred to as hyper-threading, specify one thread per core.\nIn the console, when you change the instance type of an existing instance, the CPU options reset to None. This option uses default vCPUs for the new instance type. To update settings for the new instance, select Specify CPU options under Advanced details in the Change instance type view.\nThe specified CPU options persist after you stop, start, or reboot an instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cpu-options-supported-instances-values.html",
        "content": "The following tables list the instance types that support specifying CPU options.\nContents\nGeneral purpose instances\nCompute optimized instances\nMemory optimized instances\nStorage optimized instances\nAccelerated computing instances\nHigh-performance computing instances\nGeneral purpose instances\nInstance type Default vCPUs Default CPU cores Default threads per core Valid CPU cores Valid threads per core\nm2.xlarge 2 2 1 1, 2 1\nm2.2xlarge 4 4 1 1, 2, 3, 4 1\nm2.4xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nm3.large 2 1 2 1 1, 2\nm3.xlarge 4 2 2 1, 2 1, 2\nm3.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nm4.large 2 1 2 1 1, 2\nm4.xlarge 4 2 2 1, 2 1, 2\nm4.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nm4.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\nm4.10xlarge 40 20 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20 1, 2\nm4.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nm5.large 2 1 2 1 1, 2\nm5.xlarge 4 2 2 2 1, 2\nm5.2xlarge 8 4 2 2, 4 1, 2\nm5.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nm5.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\nm5.12xlarge 48 24 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24 1, 2\nm5.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nm5.24xlarge 96 48 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nm5a.large 2 1 2 1 1, 2\nm5a.xlarge 4 2 2 2 1, 2\nm5a.2xlarge 8 4 2 2, 4 1, 2\nm5a.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nm5a.8xlarge 32 16 2 4, 6, 8, 10, 12, 14, 16 1, 2\nm5a.12xlarge 48 24 2 6, 12, 18, 24 1, 2\nm5a.16xlarge 64 32 2 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nm5a.24xlarge 96 48 2 12, 18, 24, 36, 48 1, 2\nm5ad.large 2 1 2 1 1, 2\nm5ad.xlarge 4 2 2 2 1, 2\nm5ad.2xlarge 8 4 2 2, 4 1, 2\nm5ad.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nm5ad.8xlarge 32 16 2 4, 6, 8, 10, 12, 14, 16 1, 2\nm5ad.12xlarge 48 24 2 6, 12, 18, 24 1, 2\nm5ad.16xlarge 64 32 2 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nm5ad.24xlarge 96 48 2 12, 18, 24, 36, 48 1, 2\nm5d.large 2 1 2 1 1, 2\nm5d.xlarge 4 2 2 2 1, 2\nm5d.2xlarge 8 4 2 2, 4 1, 2\nm5d.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nm5d.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\nm5d.12xlarge 48 24 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24 1, 2\nm5d.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nm5d.24xlarge 96 48 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nm5dn.large 2 1 2 1 1, 2\nm5dn.xlarge 4 2 2 1, 2 1, 2\nm5dn.2xlarge 8 4 2 2, 4 1, 2\nm5dn.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nm5dn.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\nm5dn.12xlarge 48 24 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24 1, 2\nm5dn.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nm5dn.24xlarge 96 48 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nm5n.large 2 1 2 1 1, 2\nm5n.xlarge 4 2 2 1, 2 1, 2\nm5n.2xlarge 8 4 2 2, 4 1, 2\nm5n.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nm5n.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\nm5n.12xlarge 48 24 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24 1, 2\nm5n.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nm5n.24xlarge 96 48 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nm5zn.large 2 1 2 1 1, 2\nm5zn.xlarge 4 2 2 1, 2 1, 2\nm5zn.2xlarge 8 4 2 2, 4 1, 2\nm5zn.3xlarge 12 6 2 2, 4, 6 1, 2\nm5zn.6xlarge 24 12 2 2, 4, 6, 8, 10, 12 1, 2\nm5zn.12xlarge 48 24 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24 1, 2\nm6a.large 2 1 2 1 1, 2\nm6a.xlarge 4 2 2 1, 2 1, 2\nm6a.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nm6a.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\nm6a.8xlarge 32 16 2 4, 6, 8, 10, 12, 14, 16 1, 2\nm6a.12xlarge 48 24 2 1, 2, 3, 4, 5, 6, 7, 8, 16, 24 1, 2\nm6a.16xlarge 64 32 2 4, 6, 8, 10, 12, 14, 16, 32 1, 2\nm6a.24xlarge 96 48 2 4, 6, 8, 10, 12, 14, 16, 32, 48 1, 2\nm6a.32xlarge 128 64 2 8, 12, 16, 20, 24, 28, 32, 64 1, 2\nm6a.48xlarge 192 96 2 8, 12, 16, 20, 24, 28, 32, 64, 96 1, 2\nm6g.large 2 2 1 1, 2 1\nm6g.xlarge 4 4 1 1, 2, 3, 4 1\nm6g.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nm6g.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\nm6g.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\nm6g.12xlarge 48 48 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1\nm6g.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 1\nm6gd.large 2 2 1 1, 2 1\nm6gd.xlarge 4 4 1 1, 2, 3, 4 1\nm6gd.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nm6gd.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\nm6gd.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\nm6gd.12xlarge 48 48 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1\nm6gd.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 1\nm6i.large 2 1 2 1 1, 2\nm6i.xlarge 4 2 2 1, 2 1, 2\nm6i.2xlarge 8 4 2 2, 4 1, 2\nm6i.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nm6i.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\nm6i.12xlarge 48 24 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24 1, 2\nm6i.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nm6i.24xlarge 96 48 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nm6i.32xlarge 128 64 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64 1, 2\nm6id.large 2 1 2 1 1, 2\nm6id.xlarge 4 2 2 1, 2 1, 2\nm6id.2xlarge 8 4 2 2, 4 1, 2\nm6id.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nm6id.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\nm6id.12xlarge 48 24 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24 1, 2\nm6id.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nm6id.24xlarge 96 48 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nm6id.32xlarge 128 64 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64 1, 2\nm6idn.large 2 1 2 1 1, 2\nm6idn.xlarge 4 2 2 1, 2 1, 2\nm6idn.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nm6idn.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\nm6idn.8xlarge 32 16 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1, 2\nm6idn.12xlarge 48 24 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 1, 2\nm6idn.16xlarge 64 32 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1, 2\nm6idn.24xlarge 96 48 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nm6idn.32xlarge 128 64 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64 1, 2\nm6in.large 2 1 2 1 1, 2\nm6in.xlarge 4 2 2 1, 2 1, 2\nm6in.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nm6in.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\nm6in.8xlarge 32 16 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1, 2\nm6in.12xlarge 48 24 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 1, 2\nm6in.16xlarge 64 32 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1, 2\nm6in.24xlarge 96 48 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nm6in.32xlarge 128 64 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64 1, 2\nm7a.large 2 2 1 1, 2 1\nm7a.xlarge 4 4 1 1, 2, 3, 4 1\nm7a.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nm7a.4xlarge 16 16 1 1, 2, 4, 6, 8, 10, 12, 14, 16 1\nm7a.8xlarge 32 32 1 1, 2, 3, 4, 8, 12, 16, 20, 24, 28, 32 1\nm7a.12xlarge 48 48 1 1, 2, 3, 4, 5, 6, 12, 18, 24, 30, 36, 42, 48 1\nm7a.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 16, 24, 32, 40, 48, 56, 64 1\nm7a.24xlarge 96 96 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36, 48, 60, 72, 84, 96 1\nm7a.32xlarge 128 128 1 4, 6, 8, 10, 12, 14, 16, 32, 48, 64, 80, 96, 112, 128 1\nm7a.48xlarge 192 192 1 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 48, 72, 96, 120, 144, 168, 192 1\nm7g.large 2 2 1 1, 2 1\nm7g.xlarge 4 4 1 1, 2, 3, 4 1\nm7g.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nm7g.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\nm7g.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\nm7g.12xlarge 48 48 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1\nm7g.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 1\nm7gd.large 2 2 1 1, 2 1\nm7gd.xlarge 4 4 1 1, 2, 3, 4 1\nm7gd.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nm7gd.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\nm7gd.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\nm7gd.12xlarge 48 48 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1\nm7gd.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 1\nm7i.large 2 1 2 1 1, 2\nm7i.xlarge 4 2 2 1, 2 1, 2\nm7i.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nm7i.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\nm7i.8xlarge 32 16 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1, 2\nm7i.12xlarge 48 24 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 1, 2\nm7i.16xlarge 64 32 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1, 2\nm7i.24xlarge 96 48 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1, 2\nm7i.48xlarge 192 96 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96 1, 2\nm7i-flex.large 2 1 2 1 1, 2\nm7i-flex.xlarge 4 2 2 1, 2 1, 2\nm7i-flex.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nm7i-flex.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\nm7i-flex.8xlarge 32 16 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1, 2\nm7i-flex.12xlarge 48 24 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 1, 2\nm7i-flex.16xlarge 64 32 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1, 2\nm8g.large 2 2 1 1, 2 1\nm8g.xlarge 4 4 1 1, 2, 3, 4 1\nm8g.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nm8g.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\nm8g.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\nm8g.12xlarge 48 48 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1\nm8g.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 1\nm8g.24xlarge 96 96 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96 1\nm8g.48xlarge 192 192 1 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192 1\nt3.nano 2 1 2 1 1, 2\nt3.micro 2 1 2 1 1, 2\nt3.small 2 1 2 1 1, 2\nt3.medium 2 1 2 1 1, 2\nt3.large 2 1 2 1 1, 2\nt3.xlarge 4 2 2 2 1, 2\nt3.2xlarge 8 4 2 2, 4 1, 2\nt3a.nano 2 1 2 1 1, 2\nt3a.micro 2 1 2 1 1, 2\nt3a.small 2 1 2 1 1, 2\nt3a.medium 2 1 2 1 1, 2\nt3a.large 2 1 2 1 1, 2\nt3a.xlarge 4 2 2 2 1, 2\nt3a.2xlarge 8 4 2 2, 4 1, 2\nt4g.nano 2 2 1 1, 2 1\nt4g.micro 2 2 1 1, 2 1\nt4g.small 2 2 1 1, 2 1\nt4g.medium 2 2 1 1, 2 1\nt4g.large 2 2 1 1, 2 1\nt4g.xlarge 4 4 1 1, 2, 3, 4 1\nt4g.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nCompute optimized instances\nInstance type Default vCPUs Default CPU cores Default threads per core Valid CPU cores Valid threads per core\nc3.large 2 1 2 1 1, 2\nc3.xlarge 4 2 2 1, 2 1, 2\nc3.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nc3.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\nc3.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\nc4.large 2 1 2 1 1, 2\nc4.xlarge 4 2 2 1, 2 1, 2\nc4.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nc4.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\nc4.8xlarge 36 18 2 2, 4, 6, 8, 10, 12, 14, 16, 18 1, 2\nc5.large 2 1 2 1 1, 2\nc5.xlarge 4 2 2 2 1, 2\nc5.2xlarge 8 4 2 2, 4 1, 2\nc5.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nc5.9xlarge 36 18 2 2, 4, 6, 8, 10, 12, 14, 16, 18 1, 2\nc5.12xlarge 48 24 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24 1, 2\nc5.18xlarge 72 36 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36 1, 2\nc5.24xlarge 96 48 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nc5a.large 2 1 2 1 1, 2\nc5a.xlarge 4 2 2 1, 2 1, 2\nc5a.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nc5a.4xlarge 16 8 2 1, 2, 3, 4, 8 1, 2\nc5a.8xlarge 32 16 2 1, 2, 3, 4, 8, 12, 16 1, 2\nc5a.12xlarge 48 24 2 1, 2, 3, 4, 8, 12, 16, 20, 24 1, 2\nc5a.16xlarge 64 32 2 1, 2, 3, 4, 8, 12, 16, 20, 24, 28, 32 1, 2\nc5a.24xlarge 96 48 2 1, 2, 3, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48 1, 2\nc5ad.large 2 1 2 1 1, 2\nc5ad.xlarge 4 2 2 1, 2 1, 2\nc5ad.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nc5ad.4xlarge 16 8 2 1, 2, 3, 4, 8 1, 2\nc5ad.8xlarge 32 16 2 1, 2, 3, 4, 8, 12, 16 1, 2\nc5ad.12xlarge 48 24 2 1, 2, 3, 4, 8, 12, 16, 20, 24 1, 2\nc5ad.16xlarge 64 32 2 1, 2, 3, 4, 8, 12, 16, 20, 24, 28, 32 1, 2\nc5ad.24xlarge 96 48 2 1, 2, 3, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48 1, 2\nc5d.large 2 1 2 1 1, 2\nc5d.xlarge 4 2 2 2 1, 2\nc5d.2xlarge 8 4 2 2, 4 1, 2\nc5d.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nc5d.9xlarge 36 18 2 2, 4, 6, 8, 10, 12, 14, 16, 18 1, 2\nc5d.12xlarge 48 24 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24 1, 2\nc5d.18xlarge 72 36 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36 1, 2\nc5d.24xlarge 96 48 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nc5n.large 2 1 2 1 1, 2\nc5n.xlarge 4 2 2 2 1, 2\nc5n.2xlarge 8 4 2 2, 4 1, 2\nc5n.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nc5n.9xlarge 36 18 2 2, 4, 6, 8, 10, 12, 14, 16, 18 1, 2\nc5n.18xlarge 72 36 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36 1, 2\nc6a.large 2 1 2 1 1, 2\nc6a.xlarge 4 2 2 1, 2 1, 2\nc6a.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nc6a.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\nc6a.8xlarge 32 16 2 4, 6, 8, 10, 12, 14, 16 1, 2\nc6a.12xlarge 48 24 2 1, 2, 3, 4, 5, 6, 7, 8, 16, 24 1, 2\nc6a.16xlarge 64 32 2 4, 6, 8, 10, 12, 14, 16, 32 1, 2\nc6a.24xlarge 96 48 2 4, 6, 8, 10, 12, 14, 16, 32, 48 1, 2\nc6a.32xlarge 128 64 2 8, 12, 16, 20, 24, 28, 32, 64 1, 2\nc6a.48xlarge 192 96 2 8, 12, 16, 20, 24, 28, 32, 64, 96 1, 2\nc6g.large 2 2 1 1, 2 1\nc6g.xlarge 4 4 1 1, 2, 3, 4 1\nc6g.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nc6g.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\nc6g.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\nc6g.12xlarge 48 48 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1\nc6g.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 1\nc6gd.large 2 2 1 1, 2 1\nc6gd.xlarge 4 4 1 1, 2, 3, 4 1\nc6gd.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nc6gd.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\nc6gd.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\nc6gd.12xlarge 48 48 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1\nc6gd.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 1\nc6gn.medium 1 1 1 1 1\nc6gn.large 2 2 1 1, 2 1\nc6gn.xlarge 4 4 1 1, 2, 3, 4 1\nc6gn.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nc6gn.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\nc6gn.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\nc6gn.12xlarge 48 48 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1\nc6gn.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 1\nc6i.large 2 1 2 1 1, 2\nc6i.xlarge 4 2 2 1, 2 1, 2\nc6i.2xlarge 8 4 2 2, 4 1, 2\nc6i.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nc6i.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\nc6i.12xlarge 48 24 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24 1, 2\nc6i.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nc6i.24xlarge 96 48 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nc6i.32xlarge 128 64 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64 1, 2\nc6id.large 2 1 2 1 1, 2\nc6id.xlarge 4 2 2 1, 2 1, 2\nc6id.2xlarge 8 4 2 2, 4 1, 2\nc6id.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nc6id.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\nc6id.12xlarge 48 24 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24 1, 2\nc6id.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nc6id.24xlarge 96 48 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nc6id.32xlarge 128 64 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64 1, 2\nc6in.large 2 1 2 1 1, 2\nc6in.xlarge 4 2 2 1, 2 1, 2\nc6in.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nc6in.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\nc6in.8xlarge 32 16 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1, 2\nc6in.12xlarge 48 24 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 1, 2\nc6in.16xlarge 64 32 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1, 2\nc6in.24xlarge 96 48 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nc6in.32xlarge 128 64 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64 1, 2\nc7a.large 2 2 1 1, 2 1\nc7a.xlarge 4 4 1 1, 2, 3, 4 1\nc7a.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nc7a.4xlarge 16 16 1 1, 2, 4, 6, 8, 10, 12, 14, 16 1\nc7a.8xlarge 32 32 1 1, 2, 3, 4, 8, 12, 16, 20, 24, 28, 32 1\nc7a.12xlarge 48 48 1 1, 2, 3, 4, 5, 6, 12, 18, 24, 30, 36, 42, 48 1\nc7a.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 16, 24, 32, 40, 48, 56, 64 1\nc7a.24xlarge 96 96 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36, 48, 60, 72, 84, 96 1\nc7a.32xlarge 128 128 1 4, 6, 8, 10, 12, 14, 16, 32, 48, 64, 80, 96, 112, 128 1\nc7a.48xlarge 192 192 1 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 48, 72, 96, 120, 144, 168, 192 1\nc7g.large 2 2 1 1, 2 1\nc7g.xlarge 4 4 1 1, 2, 3, 4 1\nc7g.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nc7g.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\nc7g.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\nc7g.12xlarge 48 48 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1\nc7g.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 1\nc7gd.large 2 2 1 1, 2 1\nc7gd.xlarge 4 4 1 1, 2, 3, 4 1\nc7gd.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nc7gd.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\nc7gd.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\nc7gd.12xlarge 48 48 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1\nc7gd.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 1\nc7gn.large 2 2 1 1, 2 1\nc7gn.xlarge 4 4 1 1, 2, 3, 4 1\nc7gn.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nc7gn.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\nc7gn.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\nc7gn.12xlarge 48 48 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1\nc7gn.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 1\nc7i.large 2 1 2 1 1, 2\nc7i.xlarge 4 2 2 1, 2 1, 2\nc7i.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nc7i.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\nc7i.8xlarge 32 16 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1, 2\nc7i.12xlarge 48 24 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 1, 2\nc7i.16xlarge 64 32 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1, 2\nc7i.24xlarge 96 48 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1, 2\nc7i.48xlarge 192 96 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96 1, 2\nc7i-flex.large 2 1 2 1 1, 2\nc7i-flex.xlarge 4 2 2 1, 2 1, 2\nc7i-flex.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nc7i-flex.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\nc7i-flex.8xlarge 32 16 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1, 2\nc7i-flex.12xlarge 48 24 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 1, 2\nc7i-flex.16xlarge 64 32 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1, 2\nc8g.large 2 2 1 1, 2 1\nc8g.xlarge 4 4 1 1, 2, 3, 4 1\nc8g.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nc8g.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\nc8g.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\nc8g.12xlarge 48 48 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1\nc8g.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 1\nc8g.24xlarge 96 96 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96 1\nc8g.48xlarge 192 192 1 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192 1\nMemory optimized instances\nInstance type Default vCPUs Default CPU cores Default threads per core Valid CPU cores Valid threads per core\nr3.large 2 1 2 1 1, 2\nr3.xlarge 4 2 2 1, 2 1, 2\nr3.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nr3.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\nr3.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\nr4.large 2 1 2 1 1, 2\nr4.xlarge 4 2 2 1, 2 1, 2\nr4.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nr4.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\nr4.8xlarge 32 16 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1, 2\nr4.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nr5.large 2 1 2 1 1, 2\nr5.xlarge 4 2 2 2 1, 2\nr5.2xlarge 8 4 2 2, 4 1, 2\nr5.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nr5.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\nr5.12xlarge 48 24 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24 1, 2\nr5.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nr5.24xlarge 96 48 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nr5a.large 2 1 2 1 1, 2\nr5a.xlarge 4 2 2 2 1, 2\nr5a.2xlarge 8 4 2 2, 4 1, 2\nr5a.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nr5a.8xlarge 32 16 2 4, 6, 8, 10, 12, 14, 16 1, 2\nr5a.12xlarge 48 24 2 6, 12, 18, 24 1, 2\nr5a.16xlarge 64 32 2 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nr5a.24xlarge 96 48 2 12, 18, 24, 36, 48 1, 2\nr5ad.large 2 1 2 1 1, 2\nr5ad.xlarge 4 2 2 2 1, 2\nr5ad.2xlarge 8 4 2 2, 4 1, 2\nr5ad.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nr5ad.8xlarge 32 16 2 4, 6, 8, 10, 12, 14, 16 1, 2\nr5ad.12xlarge 48 24 2 6, 12, 18, 24 1, 2\nr5ad.16xlarge 64 32 2 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nr5ad.24xlarge 96 48 2 12, 18, 24, 36, 48 1, 2\nr5b.large 2 1 2 1 1, 2\nr5b.xlarge 4 2 2 1, 2 1, 2\nr5b.2xlarge 8 4 2 2, 4 1, 2\nr5b.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nr5b.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\nr5b.12xlarge 48 24 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24 1, 2\nr5b.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nr5b.24xlarge 96 48 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nr5d.large 2 1 2 1 1, 2\nr5d.xlarge 4 2 2 2 1, 2\nr5d.2xlarge 8 4 2 2, 4 1, 2\nr5d.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nr5d.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\nr5d.12xlarge 48 24 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24 1, 2\nr5d.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nr5d.24xlarge 96 48 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nr5dn.large 2 1 2 1 1, 2\nr5dn.xlarge 4 2 2 1, 2 1, 2\nr5dn.2xlarge 8 4 2 2, 4 1, 2\nr5dn.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nr5dn.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\nr5dn.12xlarge 48 24 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24 1, 2\nr5dn.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nr5dn.24xlarge 96 48 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nr5n.large 2 1 2 1 1, 2\nr5n.xlarge 4 2 2 1, 2 1, 2\nr5n.2xlarge 8 4 2 2, 4 1, 2\nr5n.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nr5n.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\nr5n.12xlarge 48 24 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24 1, 2\nr5n.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nr5n.24xlarge 96 48 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nr6a.large 2 1 2 1 1, 2\nr6a.xlarge 4 2 2 1, 2 1, 2\nr6a.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nr6a.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\nr6a.8xlarge 32 16 2 4, 6, 8, 10, 12, 14, 16 1, 2\nr6a.12xlarge 48 24 2 1, 2, 3, 4, 5, 6, 7, 8, 16, 24 1, 2\nr6a.16xlarge 64 32 2 4, 6, 8, 10, 12, 14, 16, 32 1, 2\nr6a.24xlarge 96 48 2 4, 6, 8, 10, 12, 14, 16, 32, 48 1, 2\nr6a.32xlarge 128 64 2 8, 12, 16, 20, 24, 28, 32, 64 1, 2\nr6a.48xlarge 192 96 2 8, 12, 16, 20, 24, 28, 32, 64, 96 1, 2\nr6g.large 2 2 1 1, 2 1\nr6g.xlarge 4 4 1 1, 2, 3, 4 1\nr6g.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nr6g.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\nr6g.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\nr6g.12xlarge 48 48 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1\nr6g.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 1\nr6gd.large 2 2 1 1, 2 1\nr6gd.xlarge 4 4 1 1, 2, 3, 4 1\nr6gd.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nr6gd.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\nr6gd.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\nr6gd.12xlarge 48 48 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1\nr6gd.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 1\nr6i.large 2 1 2 1 1, 2\nr6i.xlarge 4 2 2 1, 2 1, 2\nr6i.2xlarge 8 4 2 2, 4 1, 2\nr6i.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nr6i.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\nr6i.12xlarge 48 24 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24 1, 2\nr6i.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nr6i.24xlarge 96 48 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nr6i.32xlarge 128 64 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64 1, 2\nr6idn.large 2 1 2 1 1, 2\nr6idn.xlarge 4 2 2 1, 2 1, 2\nr6idn.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nr6idn.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\nr6idn.8xlarge 32 16 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1, 2\nr6idn.12xlarge 48 24 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 1, 2\nr6idn.16xlarge 64 32 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1, 2\nr6idn.24xlarge 96 48 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nr6idn.32xlarge 128 64 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64 1, 2\nr6in.large 2 1 2 1 1, 2\nr6in.xlarge 4 2 2 1, 2 1, 2\nr6in.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nr6in.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\nr6in.8xlarge 32 16 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1, 2\nr6in.12xlarge 48 24 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 1, 2\nr6in.16xlarge 64 32 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1, 2\nr6in.24xlarge 96 48 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nr6in.32xlarge 128 64 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64 1, 2\nr6id.large 2 1 2 1 1, 2\nr6id.xlarge 4 2 2 1, 2 1, 2\nr6id.2xlarge 8 4 2 2, 4 1, 2\nr6id.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nr6id.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\nr6id.12xlarge 48 24 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24 1, 2\nr6id.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nr6id.24xlarge 96 48 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nr6id.32xlarge 128 64 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64 1, 2\nr7a.large 2 2 1 1, 2 1\nr7a.xlarge 4 4 1 1, 2, 3, 4 1\nr7a.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nr7a.4xlarge 16 16 1 1, 2, 4, 6, 8, 10, 12, 14, 16 1\nr7a.8xlarge 32 32 1 1, 2, 3, 4, 8, 12, 16, 20, 24, 28, 32 1\nr7a.12xlarge 48 48 1 1, 2, 3, 4, 5, 6, 12, 18, 24, 30, 36, 42, 48 1\nr7a.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 16, 24, 32, 40, 48, 56, 64 1\nr7a.24xlarge 96 96 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36, 48, 60, 72, 84, 96 1\nr7a.32xlarge 128 128 1 4, 6, 8, 10, 12, 14, 16, 32, 48, 64, 80, 96, 112, 128 1\nr7a.48xlarge 192 192 1 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 48, 72, 96, 120, 144, 168, 192 1\nr7g.large 2 2 1 1, 2 1\nr7g.xlarge 4 4 1 1, 2, 3, 4 1\nr7g.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nr7g.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\nr7g.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\nr7g.12xlarge 48 48 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1\nr7g.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 1\nr7gd.large 2 2 1 1, 2 1\nr7gd.xlarge 4 4 1 1, 2, 3, 4 1\nr7gd.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nr7gd.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\nr7gd.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\nr7gd.12xlarge 48 48 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1\nr7gd.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 1\nr7i.large 2 1 2 1 1, 2\nr7i.xlarge 4 2 2 1, 2 1, 2\nr7i.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nr7i.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\nr7i.8xlarge 32 16 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1, 2\nr7i.12xlarge 48 24 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 1, 2\nr7i.16xlarge 64 32 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1, 2\nr7i.24xlarge 96 48 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1, 2\nr7i.48xlarge 192 96 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96 1, 2\nr7iz.large 2 1 2 1 1, 2\nr7iz.xlarge 4 2 2 1, 2 1, 2\nr7iz.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nr7iz.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\nr7iz.8xlarge 32 16 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1, 2\nr7iz.12xlarge 48 24 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 1, 2\nr7iz.16xlarge 64 32 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1, 2\nr7iz.32xlarge 128 64 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64 1, 2\nr8g.large 2 2 1 1, 2 1\nr8g.xlarge 4 4 1 1, 2, 3, 4 1\nr8g.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nr8g.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\nr8g.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\nr8g.12xlarge 48 48 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1\nr8g.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 1\nr8g.24xlarge 96 96 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96 1\nr8g.48xlarge 192 192 1 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192 1\nu-3tb1.56xlarge 224 112 2 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112 1, 2\nu-6tb1.56xlarge 224 224 1 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224 1\nu-6tb1.112xlarge 448 224 2 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224 1, 2\nu-9tb1.112xlarge 448 224 2 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224 1, 2\nu-12tb1.112xlarge 448 224 2 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224 1, 2\nu-18tb1.112xlarge 448 224 2 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224 1, 2\nu-24tb1.112xlarge 448 224 2 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224 1, 2\nu7i-6tb.112xlarge 448 224 2 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224 1, 2\nu7i-8tb.112xlarge 448 224 2 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224 1, 2\nu7i-12tb.224xlarge 896 448 2 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224, 232, 240, 248, 256, 264, 272, 280, 288, 296, 304, 312, 320, 328, 336, 344, 352, 360, 368, 376, 384, 392, 400, 408, 416, 424, 432, 440, 448 1, 2\nu7in-16tb.224xlarge 896 448 2 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224, 232, 240, 248, 256, 264, 272, 280, 288, 296, 304, 312, 320, 328, 336, 344, 352, 360, 368, 376, 384, 392, 400, 408, 416, 424, 432, 440, 448 1, 2\nu7in-24tb.224xlarge 896 448 2 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224, 232, 240, 248, 256, 264, 272, 280, 288, 296, 304, 312, 320, 328, 336, 344, 352, 360, 368, 376, 384, 392, 400, 408, 416, 424, 432, 440, 448 1, 2\nu7in-32tb.224xlarge 896 448 2 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224, 232, 240, 248, 256, 264, 272, 280, 288, 296, 304, 312, 320, 328, 336, 344, 352, 360, 368, 376, 384, 392, 400, 408, 416, 424, 432, 440, 448 1, 2\nu7inh-32tb.480xlarge 1920 960 2 32, 48, 64, 80, 96, 112, 128, 144, 160, 176, 192, 208, 224, 240, 256, 272, 288, 304, 320, 336, 352, 368, 384, 400, 416, 432, 448, 464, 480, 496, 512, 528, 544, 560, 576, 592, 608, 624, 640, 656, 672, 688, 704, 720, 736, 752, 768, 784, 800, 816, 832, 848, 864, 880, 896, 912, 928, 944, 960 1, 2\nx1.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nx1.32xlarge 128 64 2 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64 1, 2\nx1e.xlarge 4 2 2 1, 2 1, 2\nx1e.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nx1e.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\nx1e.8xlarge 32 16 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1, 2\nx1e.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nx1e.32xlarge 128 64 2 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64 1, 2\nx2gd.large 2 2 1 1, 2 1\nx2gd.xlarge 4 4 1 1, 2, 3, 4 1\nx2gd.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nx2gd.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\nx2gd.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\nx2gd.12xlarge 48 48 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1\nx2gd.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 1\nx2idn.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nx2idn.24xlarge 96 48 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nx2idn.32xlarge 128 64 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64 1, 2\nx2iedn.xlarge 4 2 2 1, 2 1, 2\nx2iedn.2xlarge 8 4 2 2, 4 1, 2\nx2iedn.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nx2iedn.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\nx2iedn.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nx2iedn.24xlarge 96 48 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nx2iedn.32xlarge 128 64 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64 1, 2\nx2iezn.2xlarge 8 4 2 2, 4 1, 2\nx2iezn.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nx2iezn.6xlarge 24 12 2 2, 4, 6, 8, 10, 12 1, 2\nx2iezn.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\nx2iezn.12xlarge 48 24 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24 1, 2\nx8g.large 2 2 1 1, 2 1\nx8g.xlarge 4 4 1 1, 2, 3, 4 1\nx8g.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nx8g.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\nx8g.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\nx8g.12xlarge 48 48 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1\nx8g.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 1\nx8g.24xlarge 96 96 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96 1\nx8g.48xlarge 192 192 1 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192 1\nz1d.large 2 1 2 1 1, 2\nz1d.xlarge 4 2 2 1, 2 1, 2\nz1d.2xlarge 8 4 2 2, 4 1, 2\nz1d.3xlarge 12 6 2 2, 4, 6 1, 2\nz1d.6xlarge 24 12 2 2, 4, 6, 8, 10, 12 1, 2\nz1d.12xlarge 48 24 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24 1, 2\nStorage optimized instances\nInstance type Default vCPUs Default CPU cores Default threads per core Valid CPU cores Valid threads per core\nd2.xlarge 4 2 2 1, 2 1, 2\nd2.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nd2.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\nd2.8xlarge 36 18 2 2, 4, 6, 8, 10, 12, 14, 16, 18 1, 2\nd3.xlarge 4 2 2 1, 2 1, 2\nd3.2xlarge 8 4 2 2, 4 1, 2\nd3.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nd3.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\nd3en.xlarge 4 2 2 1, 2 1, 2\nd3en.2xlarge 8 4 2 2, 4 1, 2\nd3en.4xlarge 16 8 2 2, 4, 6, 8 1, 2\nd3en.6xlarge 24 12 2 2, 4, 6, 8, 10, 12 1, 2\nd3en.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\nd3en.12xlarge 48 24 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24 1, 2\nh1.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nh1.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\nh1.8xlarge 32 16 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1, 2\nh1.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\ni2.xlarge 4 2 2 1, 2 1, 2\ni2.2xlarge 8 4 2 1, 2, 3, 4 1, 2\ni2.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\ni2.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\ni3.large 2 1 2 1 1, 2\ni3.xlarge 4 2 2 1, 2 1, 2\ni3.2xlarge 8 4 2 1, 2, 3, 4 1, 2\ni3.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\ni3.8xlarge 32 16 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1, 2\ni3.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\ni3en.large 2 1 2 1 1, 2\ni3en.xlarge 4 2 2 1, 2 1, 2\ni3en.2xlarge 8 4 2 2, 4 1, 2\ni3en.3xlarge 12 6 2 2, 4, 6 1, 2\ni3en.6xlarge 24 12 2 2, 4, 6, 8, 10, 12 1, 2\ni3en.12xlarge 48 24 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24 1, 2\ni3en.24xlarge 96 48 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\ni4g.large 2 2 1 1, 2 1\ni4g.xlarge 4 4 1 1, 2, 3, 4 1\ni4g.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\ni4g.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\ni4g.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\ni4g.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 1\ni4i.large 2 1 2 1 1, 2\ni4i.xlarge 4 2 2 1, 2 1, 2\ni4i.2xlarge 8 4 2 1, 2, 3, 4 1, 2\ni4i.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\ni4i.8xlarge 32 16 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1, 2\ni4i.12xlarge 48 24 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 1, 2\ni4i.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\ni4i.24xlarge 96 48 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\ni4i.32xlarge 128 64 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64 1, 2\ni7ie.large 2 1 2 1 1, 2\ni7ie.xlarge 4 2 2 1, 2 1, 2\ni7ie.2xlarge 8 4 2 1, 2, 3, 4 1, 2\ni7ie.3xlarge 12 6 2 1, 2, 3, 4, 5, 6 1, 2\ni7ie.6xlarge 24 12 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 1, 2\ni7ie.12xlarge 48 24 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 1, 2\ni7ie.18xlarge 72 36 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 1, 2\ni7ie.24xlarge 96 48 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1, 2\ni7ie.48xlarge 192 96 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96 1, 2\ni8g.large 2 2 1 1, 2 1\ni8g.xlarge 4 4 1 1, 2, 3, 4 1\ni8g.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\ni8g.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\ni8g.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\ni8g.12xlarge 48 48 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 1\ni8g.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 1\ni8g.24xlarge 96 96 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96 1\nim4gn.large 2 2 1 1, 2 1\nim4gn.xlarge 4 4 1 1, 2, 3, 4 1\nim4gn.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nim4gn.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\nim4gn.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\nim4gn.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 1\nis4gen.medium 1 1 1 1 1\nis4gen.large 2 2 1 1, 2 1\nis4gen.xlarge 4 4 1 1, 2, 3, 4 1\nis4gen.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\nis4gen.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\nis4gen.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\nAccelerated computing instances\nInstance type Default vCPUs Default CPU cores Default threads per core Valid CPU cores Valid threads per core\ndl1.24xlarge 96 48 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\ndl2q.24xlarge 96 48 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\nf1.2xlarge 8 4 2 1, 2, 3, 4 1, 2\nf1.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\nf1.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\nf2.12xlarge 48 24 2 1, 2, 3, 6, 9, 12, 15, 18, 21, 24 1, 2\nf2.48xlarge 192 96 2 4, 6, 8, 10, 12, 24, 36, 48, 60, 72, 84, 96 1, 2\ng3.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\ng3.8xlarge 32 16 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1, 2\ng3.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\ng4ad.xlarge 4 2 2 2 1, 2\ng4ad.2xlarge 8 4 2 2, 4 1, 2\ng4ad.4xlarge 16 8 2 2, 4, 8 1, 2\ng4ad.8xlarge 32 16 2 2, 4, 8, 16 1, 2\ng4ad.16xlarge 64 32 2 2, 4, 8, 16, 32 1, 2\ng4dn.xlarge 4 2 2 2 1, 2\ng4dn.2xlarge 8 4 2 2, 4 1, 2\ng4dn.4xlarge 16 8 2 2, 4, 6, 8 1, 2\ng4dn.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\ng4dn.12xlarge 48 24 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24 1, 2\ng4dn.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\ng5g.xlarge 4 4 1 1, 2, 3, 4 1\ng5g.2xlarge 8 8 1 1, 2, 3, 4, 5, 6, 7, 8 1\ng5g.4xlarge 16 16 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1\ng5g.8xlarge 32 32 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 1\ng5g.16xlarge 64 64 1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 1\ng6.xlarge 4 2 2 1, 2 1, 2\ng6.2xlarge 8 4 2 1, 2, 3, 4 1, 2\ng6.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\ng6.8xlarge 32 16 2 1, 2, 4, 6, 8, 10, 12, 14, 16 1, 2\ng6.12xlarge 48 24 2 1, 2, 3, 6, 9, 12, 15, 18, 21, 24 1, 2\ng6.16xlarge 64 32 2 1, 2, 3, 4, 8, 12, 16, 20, 24, 28, 32 1, 2\ng6.24xlarge 96 48 2 1, 2, 3, 4, 5, 6, 12, 18, 24, 30, 36, 42, 48 1, 2\ng6.48xlarge 192 96 2 4, 6, 8, 10, 12, 24, 36, 48, 60, 72, 84, 96 1, 2\ng6e.xlarge 4 2 2 1, 2 1, 2\ng6e.2xlarge 8 4 2 1, 2, 3, 4 1, 2\ng6e.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\ng6e.8xlarge 32 16 2 2, 4, 6, 8, 10, 12, 14, 16 1, 2\ng6e.12xlarge 48 24 2 3, 6, 9, 12, 15, 18, 21, 24 1, 2\ng6e.16xlarge 64 32 2 4, 8, 12, 16, 20, 24, 28, 32 1, 2\ng6e.24xlarge 96 48 2 6, 12, 18, 24, 30, 36, 42, 48 1, 2\ng6e.48xlarge 192 96 2 12, 24, 36, 48, 60, 72, 84, 96 1, 2\ngr6.4xlarge 16 8 2 1, 2, 3, 4, 5, 6, 7, 8 1, 2\ngr6.8xlarge 32 16 2 1, 2, 4, 6, 8, 10, 12, 14, 16 1, 2\ninf1.xlarge 4 2 2 2 1, 2\ninf1.2xlarge 8 4 2 2, 4 1, 2\ninf1.6xlarge 24 12 2 2, 4, 6, 8, 10, 12 1, 2\ninf1.24xlarge 96 48 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\ninf2.xlarge 4 2 2 1, 2 1, 2\ninf2.8xlarge 32 16 2 4, 6, 8, 10, 12, 14, 16 1, 2\ninf2.24xlarge 96 48 2 4, 6, 8, 10, 12, 14, 16, 32, 48 1, 2\ninf2.48xlarge 192 96 2 4, 8, 12, 16, 20, 24, 28, 32, 64, 96 1, 2\np2.xlarge 4 2 2 1, 2 1, 2\np2.8xlarge 32 16 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1, 2\np2.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\np3.2xlarge 8 4 2 1, 2, 3, 4 1, 2\np3.8xlarge 32 16 2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 1, 2\np3.16xlarge 64 32 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32 1, 2\np3dn.24xlarge 96 48 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\np4d.24xlarge 96 48 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\np4de.24xlarge 96 48 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48 1, 2\np5.48xlarge 192 96 2 12, 24, 36, 48, 60, 72, 84, 96 1, 2\np5e.48xlarge 192 96 2 12, 24, 36, 48, 60, 72, 84, 96 1, 2\np5en.48xlarge 192 96 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96 1, 2\ntrn1.2xlarge 8 4 2 2, 4 1, 2\ntrn1.32xlarge 128 64 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64 1, 2\ntrn1n.32xlarge 128 64 2 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64 1, 2\ntrn2.48xlarge 192 96 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96 1, 2\ntrn2u.48xlarge 192 96 2 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96 1, 2\nvt1.3xlarge 12 6 2 6 1, 2\nvt1.6xlarge 24 12 2 6, 12 1, 2\nvt1.24xlarge 96 48 2 6, 12, 48 1, 2\nHigh-performance computing instances\nInstance type Default vCPUs Default CPU cores Default threads per core Valid CPU cores Valid threads per core\nhpc6id.32xlarge 64 64 1 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64 1"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-specify-cpu-options.html",
        "content": "You can specify CPU options during or after instance launch through the AWS Management Console, AWS CLI, EC2 API, or SDKs. This page covers the AWS Management Console and AWS CLI methods, as follows.\nDisable simultaneous multithreading from the AWS Management Console or AWS CLI.\nSpecify a custom number of vCPUs at launch from the AWS Management Console or AWS CLI.\nSpecify a custom number of vCPUs in a launch template from the AWS Management Console or AWS CLI.\nChange CPU options for your EC2 instance from the AWS Management Console or AWS CLI.\nDisable simultaneous multithreading\nTo disable simultaneous multithreading (SMT), also known as hyper-threading, specify 1 thread per core.\nConsole\nAWS CLI\nTo disable SMT during instance launch\nFollow the Launch an EC2 instance using the launch instance wizard in the console procedure and configure your instance as needed.\nExpand Advanced details, and select the Specify CPU options checkbox.\nFor Core count, choose the number of required CPU cores. In this example, to specify the default CPU core count for an r5.4xlarge instance, choose 8.\nTo disable SMT, for Threads per core, choose 1.\nIn the Summary panel, review your instance configuration, and then choose Launch instance. For more information, see Launch an EC2 instance using the launch instance wizard in the console.\nNote\nTo disable SMT for an existing instance, follow the process shown in Change CPU options for your EC2 instance, and change the number of threads that run per core to 1.\nSpecify a custom number of vCPUs at launch\nYou can customize the number of CPU cores and threads per core when you launch an instance from the EC2 console or AWS CLI. The examples in this section use an r5.4xlarge instance type, which has the following default settings:\nCPU cores: 8\nThreads per core: 2\nInstances launch with the maximum number of vCPUs available for the instance type by default. For this instance type, that's 16 total vCPUs (8 cores running 2 threads each). For more information about this instance type, see Memory optimized instances.\nThe following example launches an r5.4xlarge instance with 4 vCPUs.\nConsole\nAWS CLI\nTo specify a custom number of vCPUs during instance launch\nFollow the Launch an EC2 instance using the launch instance wizard in the console procedure and configure your instance as needed.\nExpand Advanced details, and select the Specify CPU options checkbox.\nTo get 4 vCPUs, specify 2 CPU cores and 2 threads per core, as follows:\nFor Core count, choose 2.\nFor Threads per core, choose 2.\nIn the Summary panel, review your instance configuration, and then choose Launch instance. For more information, see Launch an EC2 instance using the launch instance wizard in the console.\nSpecify a custom number of vCPUs in a launch template\nYou can customize the number of CPU cores and threads per core for the instance in a launch template. The examples in this section use an r5.4xlarge instance type, which has the following default settings:\nCPU cores: 8\nThreads per core: 2\nInstances launch with the maximum number of vCPUs available for the instance type by default. For this instance type, that's 16 total vCPUs (8 cores running 2 threads each). For more information about this instance type, see Memory optimized instances.\nThe following example creates a launch template that specifies the configuration for an r5.4xlarge instance with 4 vCPUs.\nConsole\nAWS CLI\nTo specify a custom number of vCPUs in a launch template\nFollow the Create a launch template by specifying parameters procedure and configure your launch template as needed.\nExpand Advanced details, and select the Specify CPU options checkbox.\nTo get 4 vCPUs, specify 2 CPU cores and 2 threads per core, as follows:\nFor Core count, choose 2.\nFor Threads per core, choose 2.\nIn the Summary panel, review your instance configuration, and then choose Create launch template. For more information, see Store instance launch parameters in Amazon EC2 launch templates.\nChange CPU options for your EC2 instance\nAs your needs change over time, you might want to change the configuration of CPU options for an existing instance. Each thread that runs on your instance is known as a virtual CPU (vCPU). You can change the number of vCPUs that run for an existing instance in the Amazon EC2 console, AWS CLI, API, or SDKs. The instance state must be Stopped before you can make this change.\nTo view console or command line steps, select the tab that matches your environment. For API request and response information, see ModifyInstanceCpuOptions in the Amazon EC2 API Reference.\nConsole\nAWS CLI\nFollow this procedure to change the number of active vCPUs for your instance from the AWS Management Console.\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigation pane, choose Instances. This opens the list of instances that are defined for the current AWS Region.\nSelect the instance from the Instances list. Alternatively, you can select the instance link to open the instance detail page.\nIf the instance is running, you must stop it before you proceed. Choose Stop instance from the Instance state menu.\nTo change your vCPU configuration, choose Change CPU options from Instance settings in the Actions menu. This opens the Change CPU options page.\nChoose one of the following CPU options to change the configuration for your instance.\nNone\nThis option resets your instance to the default number of vCPUs for your instance type. The default is to run all threads for all CPU cores.\nSpecify CPU options\nThis option enables configuration of the number of vCPUs that are running on your instance.\nIf you selected Specify CPU options, the Active vCPU configuration is displayed.\nThe first selector configures the number of threads that run for each CPU core. To disable simultaneous multithreading, you can change the number of threads that run per core to 1.\nThe second selector configures the number of CPUs that are running for your instance.\nThe following fields are updated dynamically, as you make changes to the CPU option selectors.\nActive vCPUs: The number of CPU cores multiplied by the threads per core, based on the selections that you made. For example, if you selected 2 threads and 4 cores, that would equal 8 vCPUs.\nTotal vCPUs: The maximum number of vCPUs for the instance type. For example, for an m6i.4xlarge instance type, this is 16 vCPUs (8 cores running 2 threads each).\nTo apply your updates, choose Change."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/view-cpu-options.html",
        "content": "You can view the CPU options for an existing instance in the Amazon EC2 console or by describing the instance using the AWS CLI.\nConsole\nAWS CLI\nTo view the CPU options for an instance using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigation pane, choose Instances and select the instance.\nOn the Details tab, under Host and placement group, find Number of vCPUs.\nAlternatively, to view CPU information, you can connect to your instance and use one of the following system tools:\nWindows Task Manager on your Windows instance\nThe lscpu command on your Linux instance\nYou can use AWS Config to record, assess, audit, and evaluate configuration changes for instances, including terminated instances. For more information, see Getting Started with AWS Config in the AWS Config Developer Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/sev-snp.html",
        "content": "AMD Secure Encrypted Virtualization-Secure Nested Paging (AMD SEV-SNP) is a CPU feature that provides the following properties:\nAttestation \u2013 AMD SEV-SNP enables you to retrieve a signed attestation report that contains a cryptographic measure that can be used to validate the instance\u2019s state and identity, and that it is running on genuine AMD hardware. For more information, see Attest an Amazon EC2 instance with AMD SEV-SNP.\nMemory encryption \u2013 Starting with AMD EPYC (Milan), AWS Graviton2, and Intel Xeon Scalable (Ice Lake) processors, instance memory is always encrypted. Instances that are enabled for AMD SEV-SNP use an instance-specific key for their memory encryption.\nTopics\nConcepts and terminology\nRequirements\nConsiderations\nPricing\nCheck supported instance types\nEnable AMD SEV-SNP\nAttestation with AMD SEV-SNP\nConcepts and terminology\nBefore you begin using AMD SEV-SNP, ensure that you are familiar with the following concepts and terminology.\nAMD SEV-SNP attestation report\nThe AMD SEV-SNP attestation report is a document that an instance can request from the CPU. The AMD SEV-SNP attestation report can be used to validate the state and identity of an instance, and to verify that it is running in a sanctioned AMD environment. The report includes a launch measurement, which is a cryptographic hash of the initial boot state of an instance, including its initial instance memory contents and initial state of the vCPUs. The AMD SEV-SNP attestation report is signed with a VLEK signature that chains back to an AMD root of trust.\nVLEK\nThe Versioned Loaded Endorsement Key (VLEK) is a versioned signing key that is certified by AMD and used by the AMD CPU to sign the AMD SEV-SNP attestation reports. VLEK signatures can be validated using certificates provided by AMD.\nOVMF binary\nThe Open Virtual Machine Firmware (OVMF) is the early-boot code that is used to provide a UEFI environment for the instance. The early-boot code is run before the code in the AMI is booted. The OVMF also finds and runs the boot loader provided in the AMI. For more information, see the OVMF repository.\nRequirements\nTo use AMD SEV-SNP, you must do the following:\nUse one of the following supported instance types:\nGeneral purpose: m6a.large | m6a.xlarge | m6a.2xlarge | m6a.4xlarge | m6a.8xlarge\nCompute optimized: c6a.large | c6a.xlarge | c6a.2xlarge | c6a.4xlarge | c6a.8xlarge | c6a.12xlarge | c6a.16xlarge\nMemory optimized: r6a.large | r6a.xlarge | r6a.2xlarge | r6a.4xlarge\nLaunch your instance in a supported AWS Region. Currently, only US East (Ohio) and Europe (Ireland) are supported.\nUse an AMI with uefi or uefi-preferred boot mode and an operating system that supports AMD SEV-SNP. For more information about AMD SEV-SNP support on your operating system, refer to the respective operating system's documentation. For AWS, AMD SEV-SNP is supported on AL2023, RHEL 9.3, SLES 15 SP4, and Ubuntu 23.04 and later.\nConsiderations\nYou can only enable AMD SEV-SNP when you launch an instance. When AMD SEV-SNP is enabled for your instance launch, the following rules apply.\nOnce it is enabled, AMD SEV-SNP can't be disabled. It remains enabled throughout the instance lifecycle.\nYou can only change the instance type to another instance type that supports AMD SEV-SNP.\nHibernation and Nitro Enclaves aren't supported.\nDedicated Hosts aren't supported.\nIf the underlying host for your instance is scheduled for maintenance, you'll receive a scheduled event notification 14 days before the event. You must manually stop or restart your instance to move it to a new host.\nPricing\nWhen you launch an Amazon EC2 instance with AMD SEV-SNP enabled, you are charged an additional hourly usage fee that is equivalent to 10 percent of the On-Demand hourly rate of the selected instance type.\nThis AMD SEV-SNP usage fee is a separate charge to your Amazon EC2 instance usage. Reserved Instances, Savings Plans, and operating system usage don't impact this fee.\nIf you configure a Spot Instance to launch with AMD SEV-SNP enabled, you are charged an additional hourly usage fee that is equivalent to 10 percent of the On-Demand hourly rate of the selected instance type. If the allocation strategy uses price as an input, Spot Fleet does not include this additional fee; only the Spot price is used."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snp-work.html",
        "content": "Topics\nFind Amazon EC2 instance types that support AMD SEV-SNP\nCheck if an Amazon EC2 instance is enabled for AMD SEV-SNP\nFind Amazon EC2 instance types that support AMD SEV-SNP\nYou can use the AWS CLI to find instance types that support AMD SEV-SNP.\nTo find the instance types that support AMD SEV-SNP using the AWS CLI, use the following describe-instance-types command.\n$ aws ec2 describe-instance-types \\\n--filters Name=processor-info.supported-features,Values=amd-sev-snp \\\n--query 'InstanceTypes[*].InstanceType'\nExample output.\n[\n \"r6a.2xlarge\", \n \"m6a.large\", \n \"m6a.2xlarge\", \n \"r6a.xlarge\", \n \"c6a.16xlarge\", \n \"c6a.8xlarge\", \n \"m6a.4xlarge\", \n \"c6a.12xlarge\", \n \"r6a.4xlarge\", \n \"c6a.xlarge\", \n...\n]\nCheck if an Amazon EC2 instance is enabled for AMD SEV-SNP\nYou can use one of the following methods to check the status of AMD SEV-SNP.\nAWS CLI\nAWS CloudTrail\nTo check whether AMD SEV-SNP is enabled for an instance using the AWS CLI, use the describe-instances command. For --instance-ids, specify the ID of the instance to check.\n$ aws ec2 describe-instances --instance-ids instance_id\nIn the command output, the value for AmdSevSnp in CpuOptions indicates whether AMD SEV-SNP is enabled or disabled."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snp-work-launch.html",
        "content": "You can use the AWS CLI to launch an instance with AMD SEV-SNP enabled. You can't enable AMD SEV-SNP after launch.\nTo launch an instance with AMD SEV-SNP enabled, you must use the AWS CLI. Use the run-instances command and include the --cpu-options AmdSevSnp=enabled option. For --image-id, specify an AMI with the uefi or uefi-prefered boot mode and an operating system that supports AMD SEV-SNP. For --instance-type, specify a supported instance type.\n$ aws ec2 run-instances \\\n--image-id supported_ami_id \\\n--instance-type supported_instance_type \\\n--key-name key_pair_name \\\n--subnet-id subnet_id \\\n--cpu-options AmdSevSnp=enabled"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snp-attestation.html",
        "content": "Attestation is a process that allows your instance to prove its state and identity. After you enable AMD SEV-SNP for your instance, you can request an AMD SEV-SNP attestation report from the underlying processor. The AMD SEV-SNP attestation report contains a cryptographic hash, called the launch measurement, of the initial guest memory contents and initial vCPU state. The attestation report is signed with a VLEK signature that chains back to an AMD root of trust. You can use the launch measurement included in the attestation report to validate that the instance is running in a genuine AMD environment and to validate the initial boot code that was used to launch the instance.\nPrerequisite\nLaunch an instance that is enabled for AMD SEV-SNP. For more information, see Enable AMD SEV-SNP for an Amazon EC2 instance.\nSteps\nStep 1: Get the attestation report\nStep 2: Validate the attestation report signature\nStep 1: Get the attestation report\nIn this step, you install and build the snpguest utility, and then use it to request the AMD SEV-SNP attestation report and certificates.\nConnect to your instance.\nRun the following commands to build the snpguest utility from the snpguest repository.\n$ git clone https://github.com/virtee/snpguest.git\n$ cd snpguest\n$ cargo build -r\n$ cd target/release\nGenerate a request for the attestation report. The utility requests the attestation report from the host, and writes it to a binary file with the provided request data.\nThe following example creates a random request string, and uses it as the request file (request-file.txt). When the command returns the attestation report it's stored in the file path that you specify (report.bin). In this case, the utility stores the report in the current directory.\n$ ./snpguest report report.bin request-file.txt --random\nRequest the certificates from host memory, and store them as PEM files. The following example stores the files in the same directory as the snpguest utility. If certificates already exist in the specified directory, those certificates are overwritten.\n$ ./snpguest certificates PEM ./\nStep 2: Validate the attestation report signature\nThe attestation report is signed with a certificate, called the Versioned Loaded Endorsement Key (VLEK), which is issued by AMD for AWS. In this step, you can validate that the VLEK certificate is issued by AMD, and that the attestation report is signed by that VLEK certificate.\nDownload the VLEK root of trust certificates from the official AMD website to the current directory.\n$ sudo curl --proto '=https' --tlsv1.2 -sSf https://kdsintf.amd.com/vlek/v1/Milan/cert_chain -o ./cert_chain.pem\nUse openssl to validate that the VLEK certificate is signed by the AMD root of trust certificates.\n$ sudo openssl verify --CAfile ./cert_chain.pem vlek.pem\nExpected output:\ncerts/vcek.pem: OK\nUse the snpguest utility to validate that the attestation report is signed by the VLEK certificate.\n$ ./snpguest verify attestation ./ report.bin\nExpected output.\nReported TCB Boot Loader from certificate matches the attestation report.\nReported TCB TEE from certificate matches the attestation report.\nReported TCB SNP from certificate matches the attestation report.\nReported TCB Microcode from certificate matches the attestation report.\nVEK signed the Attestation Report!"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/processor_state_control.html",
        "content": "C-states control the sleep levels that a core can enter when it is idle. C-states are numbered starting with C0 (the shallowest state where the core is totally awake and executing instructions) and go to C6 (the deepest idle state where a core is powered off).\nP-states control the desired performance (in CPU frequency) from a core. P-states are numbered starting from P0 (the highest performance setting where the core is allowed to use Intel Turbo Boost Technology to increase frequency if possible), and they go from P1 (the P-state that requests the maximum baseline frequency) to P15 (the lowest possible frequency).\nNote\nAWS Graviton processors have built-in power saving modes and operate at a fixed frequency. Therefore, they do not provide the ability for the operating system to control C-states and P-states.\nC-states and P-states\nThe following instance types provide the ability for an operating system to control processor C-states and P-states:\nGeneral purpose: m4.10xlarge | m4.16xlarge\nCompute optimized: c4.8xlarge\nMemory optimized: r4.8xlarge | r4.16xlarge | x1.16xlarge | x1.32xlarge | x1e.8xlarge | x1e.16xlarge | x1e.32xlarge\nStorage optimized: d2.8xlarge | i3.8xlarge | i3.16xlarge | h1.8xlarge | h1.16xlarge\nAccelerated computing: f1.16xlarge | g3.16xlarge | p2.16xlarge | p3.16xlarge\nBare metal: All bare metal instances with Intel and AMD processors\nC-states only\nThe following instance types provide the ability for an operating system to control processor C-states:\nGeneral purpose: m5.12xlarge | m5.24xlarge | m5d.12xlarge | m5d.24xlarge | m5n.12xlarge | m5n.24xlarge | m5dn.12xlarge | m5dn.24xlarge | m5zn.6xlarge | m5zn.12xlarge | m6a.24xlarge | m6a.48xlarge | m6i.16xlarge | m6i.32xlarge | m6id.16xlarge | m6id.32xlarge | m6idn.16xlarge | m6in.16xlarge | m6in.32xlarge | m7a.medium | m7a.large | m7a.xlarge | m7a.2xlarge | m7a.4xlarge | m7a.8xlarge | m7a.12xlarge | m7a.16xlarge | m7a.24xlarge | m7a.32xlarge | m7a.48xlarge | m7i.large | m7i.xlarge | m7i.2xlarge | m7i.4xlarge | m7i.8xlarge | m7i.12xlarge | m7i.16xlarge | m7i.24xlarge | m7i.48xlarge\nCompute optimized: c5.9xlarge | c5.12xlarge | c5.18xlarge | c5.24xlarge | c5a.24xlarge | c5ad.24xlarge | c5d.9xlarge | c5d.12xlarge | c5d.18xlarge | c5d.24xlarge | c5n.9xlarge | c5n.18xlarge | c6a.24xlarge | c6a.32xlarge | c6a.48xlarge | c6i.16xlarge | c6i.32xlarge | c6id.24xlarge | c6id.32xlarge | c6in.32xlarge | c7a.medium | c7a.large | c7a.xlarge | c7a.2xlarge | c7a.4xlarge | c7a.8xlarge | c7a.12xlarge | c7a.16xlarge | c7a.24xlarge | c7a.32xlarge | c7a.48xlarge | c7i.large | c7i.xlarge | c7i.2xlarge | c7i.4xlarge | c7i.8xlarge | c7i.12xlarge | c7i.16xlarge | c7i.24xlarge | c7i.48xlarge\nMemory optimized: r5.12xlarge | r5.24xlarge | r5b.12xlarge | r5d.12xlarge | r5d.24xlarge | r5n.12xlarge | r5n.24xlarge | r5dn.12xlarge | r5dn.24xlarge | r6a.24xlarge | r6a.48xlarge | r6i.16xlarge | r6i.32xlarge | r6id.16xlarge | r6id.32xlarge | r6in.16xlarge | r6in.32xlarge | r7a.medium | r7a.large | r7a.xlarge | r7a.2xlarge | r7a.4xlarge | r7a.8xlarge | r7a.12xlarge | r7a.16xlarge | r7a.24xlarge | r7a.32xlarge | r7a.48xlarge | r7i.large | r7i.xlarge | r7i.2xlarge | r7i.4xlarge | r7i.8xlarge | r7i.12xlarge | r7i.16xlarge | r7i.24xlarge | r7i.48xlarge | r7iz.large | r7iz.xlarge | r7iz.2xlarge | r7iz.4xlarge | r7iz.8xlarge | r7iz.12xlarge | r7iz.16xlarge | r7iz.32xlarge | u-3tb1.56xlarge | u-6tb1.56xlarge | u-6tb1.112xlarge | u-9tb1.112xlarge | u-12tb1.112xlarge | u-18tb1.112xlarge | u-24tb1.112xlarge | u7i-6tb.112xlarge | u7i-8tb.112xlarge | u7i-12tb.224xlarge | u7in-16tb.224xlarge | u7in-24tb.224xlarge | u7in-32tb.224xlarge | u7inh-32tb.480xlarge | x2idn.32xlarge | x2iedn.16xlarge | x2iezn.12xlarge | z1d.6xlarge | z1d.12xlarge\nStorage optimized: d3en.12xlarge | dl1.24xlarge | i3en.12xlarge | i3en.24xlarge | i4i.16xlarge | i7ie.large | i7ie.xlarge | i7ie.2xlarge | i7ie.3xlarge | i7ie.6xlarge | i7ie.12xlarge | i7ie.18xlarge | i7ie.24xlarge | i7ie.48xlarge | r5b.12xlarge | r5b.24xlarge\nAccelerated computing: dl1.24xlarge | f2.12xlarge | f2.48xlarge | g5.24xlarge | g5.48xlarge | g6.24xlarge | g6.48xlarge | g6e.12xlarge | g6e.24xlarge | g6e.48xlarge | inf1.24xlarge | p3dn.24xlarge | p4d.24xlarge | p4de.24xlarge |p5.48xlarge | p5e.48xlarge | p5en.48xlarge | trn1.32xlarge | trn2.3xlarge | trn2.48xlarge | trn2a.3xlarge | trn2a.48xlarge | trn2n.3xlarge | trn2n.48xlarge | trn2p.48xlarge | trn2u.48xlarge | vt1.24xlarge\nYou might want to change the C-state or P-state settings to increase processor performance consistency, reduce latency, or tune your instance for a specific workload. The default C-state and P-state settings provide maximum performance, which is optimal for most workloads. However, if your application would benefit from reduced latency at the cost of higher single- or dual-core frequencies, or from consistent performance at lower frequencies as opposed to bursty Turbo Boost frequencies, consider experimenting with the C-state or P-state settings that are available to these instances.\nFor information about different processor configurations and how to monitor the effects of your configuration for Amazon Linux, see Processor state control for Amazon EC2 Amazon Linux instance in the Amazon Linux 2 User Guide. These procedures were written for, and apply to Amazon Linux; however, they might also work for other Linux distributions with a Linux kernel of 3.9 or newer. For more information about other Linux distributions and processor state control, see your system-specific documentation."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/amazon-ec2-managed-instances.html",
        "content": "An Amazon EC2 managed instance is an EC2 instance that is provisioned and managed by a designated service provider, such as Amazon EKS through EKS Auto Mode. Managed instances provide a simplified way for running compute workloads on Amazon EC2 by allowing you to delegate operational control of the instance to a service provider.\nDelegated control is the only change introduced for managed instances. The technical specifications and billing remain the same as non-managed EC2 instances. Because managed instances allow you to delegate control to the service provider, you can benefit from the service provider\u2019s operational expertise and best practices. When an instance is managed, the service provider is responsible for tasks such as provisioning the instance, configuring software, scaling capacity, and handling instance failures and replacements.\nYou can\u2019t directly modify the settings of a managed instance. The service and specific operations are determined by the agreement between you and the service provider. However, you can add, modify, or remove tags from your managed instances, allowing you to categorize them within your AWS environment.\nContents\nBilling for managed instances\nIdentify managed instances\nGet started with managed instances\nBilling for managed instances\nAn Amazon EC2 managed instance incurs the same base charge as a non-managed Amazon EC2 instance, plus a separate fee for the service provider. This additional fee is charged by the service provider managing your instance and is billed separately. It covers the cost of services provided for operating and maintaining your managed instance.\nAll Amazon EC2 purchasing options are available for managed instances, including On-Demand Instances, Reserved Instances, Spot Instances, and Savings Plans. By sourcing your compute directly from EC2 and then providing it to your service provider, you benefit from any existing Reserved Instances or Savings Plans applied to your account, ensuring that you're using the most cost-effective compute capacity available.\nFor example, when using Amazon EKS Auto Mode, you pay the standard EC2 instance rate for the underlying instances, plus an additional charge from Amazon EKS for managing the instances on your behalf. If you then decide to sign up for a Savings Plan, the EC2 instance rate is reduced by the Savings Plan, while the additional charge from Amazon EKS remains unchanged.\nIdentify managed instances\nManaged instances are identified by a true value in the Managed field. The service provider is identified in the Operator field (in the console) or Principal field (in the CLI).\nUse the following procedures to identify managed instances.\nConsole\nAWS CLI\nTo identify a managed instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance you want to check.\nOn the Details tab (if you selected the checkbox) or in the summary area (if you selected the instance ID), find the Managed field.\nA value of true indicates a managed instance.\nA value of false indicates a non-managed instance.\nIf Managed is set to true, the Operator field displays a value identifying the service provider responsible for managing the instance. For example, a value of eks.amazonaws.com identifies Amazon EKS as the service provider.\nGet started with managed instances\nFor guidance on using managed instances, see Automate cluster infrastructure with EKS Auto Mode in the Amazon EKS User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-purchasing-options.html",
        "content": "You can use the following options to optimize your costs for Amazon EC2:\nOn-Demand Instances \u2013 Pay, by the second, for the instances that you launch.\nSavings Plans \u2013 Reduce your Amazon EC2 costs by making a commitment to a consistent amount of usage, in USD per hour, for a term of 1 or 3 years.\nReserved Instances \u2013 Reduce your Amazon EC2 costs by making a commitment to a consistent instance configuration, including instance type and Region, for a term of 1 or 3 years.\nSpot Instances \u2013 Request unused EC2 instances, which can reduce your Amazon EC2 costs significantly.\nDedicated Hosts \u2013 Pay for a physical host that is fully dedicated to running your instances, and bring your existing per-socket, per-core, or per-VM software licenses to reduce costs.\nDedicated Instances \u2013 Pay, by the hour, for instances that run on single-tenant hardware.\nCapacity Reservations \u2013 Reserve capacity for your EC2 instances in a specific Availability Zone.\nIf you can't make a commitment to a specific instance configuration, but you can commit to a usage amount, purchase Savings Plans to reduce your On-Demand Instance costs. If you require a capacity reservation, purchase Reserved Instances or Capacity Reservations for a specific Availability Zone. Capacity Blocks can be used to reserve a cluster of GPU instances. Spot Instances are a cost-effective choice if you can be flexible about when your applications run and if they can be interrupted. Dedicated Hosts or Dedicated Instances can help you address compliance requirements and reduce costs by using your existing server-bound software licenses.\nFor more information, see Amazon EC2 Pricing and Amazon EC2 managed instances."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-on-demand-instances.html",
        "content": "With On-Demand Instances, you pay for compute capacity by the second with no long-term commitments. You have full control over the instance's lifecycle\u2014you decide when to launch, stop, hibernate, start, reboot, or terminate it.\nThere is no long-term commitment required when you purchase On-Demand Instances. You pay only for the seconds that your On-Demand Instances are in the running state, with a 60-second minimum. The price per second for a running On-Demand Instance is fixed, and is listed on the Amazon EC2 Pricing, On-Demand Pricing page.\nWe recommend that you use On-Demand Instances for applications with short-term, irregular workloads that cannot be interrupted.\nFor significant savings over On-Demand Instances, use AWS Savings Plans, Spot Instances, or Reserved Instances for Amazon EC2 overview.\nContents\nOn-Demand Instance quotas\nMonitor On-Demand Instance quotas and usage\nRequest a quota increase\nQuery the prices of On-Demand Instances\nOn-Demand Instance quotas\nThere are quotas for the number of running On-Demand Instances per AWS account per Region. On-Demand Instance quotas are managed in terms of the number of virtual central processing units (vCPUs) that your running On-Demand Instances are using, regardless of the instance type. Each quota type specifies the maximum number of vCPUs for one or more instance families.\nYour account includes the following quotas for On-Demand Instances. Instances that are in the pending, stopping, stopped, and hibernated states do not count towards your On-Demand Instance quotas. Capacity Reservations count toward your On-Demand Instance quotas, even if they are unused.\nName Default Adjustable\nRunning On-Demand DL instances 0 Yes\nRunning On-Demand F instances 0 Yes\nRunning On-Demand G and VT instances 0 Yes\nRunning On-Demand HPC instances 0 Yes\nRunning On-Demand High Memory instances 0 Yes\nRunning On-Demand Inf instances 0 Yes\nRunning On-Demand P instances 0 Yes\nRunning On-Demand Standard (A, C, D, H, I, M, R, T, Z) instances 5 Yes\nRunning On-Demand Trn instances 0 Yes\nRunning On-Demand X instances 0 Yes\nFor information about the different instance families, generations, and sizes, see the Amazon EC2 Instance Types Guide.\nYou can launch any combination of instance types that meet your changing application needs, as long as the number of vCPUs does not exceed your account quota. For example, with a Standard instance quota of 256 vCPUs, you could launch 32 m5.2xlarge instances (32 x 8 vCPUs) or 16 c5.4xlarge instances (16 x 16 vCPUs). For more information, see EC2 On-Demand Instance limits.\nTasks\nMonitor On-Demand Instance quotas and usage\nRequest a quota increase\nMonitor On-Demand Instance quotas and usage\nYou can view and manage your On-Demand Instance quotas for each Region using the following methods.\nTo view your current quotas using the Service Quotas console\nOpen the Service Quotas console at https://console.aws.amazon.com/servicequotas/home/services/ec2/quotas/.\nFrom the navigation bar, select a Region.\nIn the filter field, enter On-Demand.\nThe Applied quota value column displays the maximum number of vCPUs for each On-Demand Instance quota type for your account.\nTo view your current quotas using the AWS Trusted Advisor console\nOpen Service limits page in the AWS Trusted Advisor console.\nTo configure CloudWatch alarms\nWith Amazon CloudWatch metrics integration, you can monitor your EC2 usage against your quotas. You can also configure alarms to warn about approaching quotas. For more information, see Service Quotas and Amazon CloudWatch alarms in the Service Quotas User Guide.\nRequest a quota increase\nEven though Amazon EC2 automatically increases your On-Demand Instance quotas based on your usage, you can request a quota increase if necessary. For example, if you intend to launch more instances than your current quota allows, you can request a quota increase by using the Service Quotas console described in Amazon EC2 service quotas.\nQuery the prices of On-Demand Instances\nYou can use the Price List Service API or the AWS Price List API to query the prices of On-Demand Instances. For more information, see Using the AWS Price List API in the AWS Billing User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-reserved-instances.html",
        "content": "Important\nWe recommend Savings Plans over Reserved Instances. Saving Plans are the easiest and most flexible way to save money on your AWS compute costs and offer lower prices (up to 72% off On-Demand pricing), just like Reserved Instances. However, Savings Plans are different to Reserved Instances. With Reserved Instances, you make a commitment to a specific instance configuration, whereas with Savings Plans, you have the flexibility to use the instance configurations that best meet your needs. To use Savings Plans, you make a commitment to a consistent usage amount, measured in USD per hour. For more information, see the AWS Savings Plans User Guide.\nReserved Instances provide you with significant savings on your Amazon EC2 costs compared to On-Demand Instance pricing. Reserved Instances are not physical instances, but rather a billing discount applied to the use of On-Demand Instances in your account. These On-Demand Instances must match certain attributes, such as instance type and Region, in order to benefit from the billing discount.\nReserved Instances topics\nReserved Instance example scenario\nKey variables that determine Reserved Instance pricing\nRegional and zonal Reserved Instances (scope)\nTypes of Reserved Instances (offering classes)\nHow Reserved Instance discounts are applied\nUse your Reserved Instances\nHow billing works with Reserved Instances\nBuy Reserved Instances for Amazon EC2\nSell Reserved Instances for Amazon EC2 in the Reserved Instance Marketplace\nModify Reserved Instances\nExchange Convertible Reserved Instances\nReserved Instance quotas\nReserved Instance example scenario\nThe following diagram shows a basic scenario of purchasing and using Reserved Instances.\nIn this scenario, you have a running On-Demand Instance (T2) in your account, for which you're currently paying On-Demand rates. You purchase a Reserved Instance that matches the attributes of your running instance, and the billing benefit is immediately applied. Next, you purchase a Reserved Instance for a C4 instance. You do not have any running instances in your account that match the attributes of this Reserved Instance. In the final step, you launch an instance that matches the attributes of the C4 Reserved Instance, and the billing benefit is immediately applied.\nKey variables that determine Reserved Instance pricing\nThe Reserved Instance pricing is determined by the following key variables.\nInstance attributes\nA Reserved Instance has four instance attributes that determine its price.\nInstance type: For example, m4.large. This is composed of the instance family (for example, m4) and the instance size (for example, large).\nRegion: The Region in which the Reserved Instance is purchased.\nTenancy: Whether your instance runs on shared (default) or single-tenant (dedicated) hardware. For more information, see Amazon EC2 Dedicated Instances.\nPlatform: The operating system; for example, Windows or Linux/Unix. For more information, see Choosing a platform.\nTerm commitment\nYou can purchase a Reserved Instance for a one-year or three-year commitment, with the three-year commitment offering a bigger discount.\nOne-year: A year is defined as 31536000 seconds (365 days).\nThree-year: Three years is defined as 94608000 seconds (1095 days).\nReserved Instances do not renew automatically; when they expire, you can continue using the EC2 instance without interruption, but you are charged On-Demand rates. In the above example, when the Reserved Instances that cover the T2 and C4 instances expire, you go back to paying the On-Demand rates until you terminate the instances or purchase new Reserved Instances that match the instance attributes.\nImportant\nAfter you purchase a Reserved Instance, you cannot cancel your purchase. However, you might be able to modify, exchange, or sell your Reserved Instance if your needs change.\nPayment options\nThe following payment options are available for Reserved Instances:\nAll Upfront: Full payment is made at the start of the term, with no other costs or additional hourly charges incurred for the remainder of the term, regardless of hours used.\nPartial Upfront: A portion of the cost must be paid upfront and the remaining hours in the term are billed at a discounted hourly rate, regardless of whether the Reserved Instance is being used.\nNo Upfront: You are billed a discounted hourly rate for every hour within the term, regardless of whether the Reserved Instance is being used. No upfront payment is required.\nNote\nNo Upfront Reserved Instances are based on a contractual obligation to pay monthly for the entire term of the reservation. For this reason, a successful billing history is required before you can purchase No Upfront Reserved Instances.\nGenerally speaking, you can save more money making a higher upfront payment for Reserved Instances. You can also find Reserved Instances offered by third-party sellers at lower prices and shorter term lengths on the Reserved Instance Marketplace. For more information, see Sell Reserved Instances for Amazon EC2 in the Reserved Instance Marketplace.\nOffering class\nIf your computing needs change, you might be able to modify or exchange your Reserved Instance, depending on the offering class.\nStandard: These provide the most significant discount, but can only be modified. Standard Reserved Instances can't be exchanged.\nConvertible: These provide a lower discount than Standard Reserved Instances, but can be exchanged for another Convertible Reserved Instance with different instance attributes. Convertible Reserved Instances can also be modified.\nFor more information, see Types of Reserved Instances (offering classes).\nImportant\nAfter you purchase a Reserved Instance, you cannot cancel your purchase. However, you might be able to modify, exchange, or sell your Reserved Instance if your needs change.\nFor more information, see the Amazon EC2 Reserved Instances Pricing page."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/reserved-instances-scope.html",
        "content": "When you purchase a Reserved Instance, you determine the scope of the Reserved Instance. The scope is either regional or zonal.\nRegional: When you purchase a Reserved Instance for a Region, it's referred to as a regional Reserved Instance.\nZonal: When you purchase a Reserved Instance for a specific Availability Zone, it's referred to as a zonal Reserved Instance.\nThe scope does not affect the price. You pay the same price for a regional or zonal Reserved Instance. For more information about Reserved Instance pricing, see Key variables that determine Reserved Instance pricing and Amazon EC2 Reserved Instances Pricing.\nFor more information about how to specify the scope of a Reserved Instance, see RI Attributes, specifically the Availability Zone bullet.\nDifferences between regional and zonal Reserved Instances\nThe following table highlights some key differences between regional Reserved Instances and zonal Reserved Instances:\nRegional Reserved Instances Zonal Reserved Instances\nAbility to reserve capacity\nA regional Reserved Instance does not reserve capacity.\nA zonal Reserved Instance reserves capacity in the specified Availability Zone.\nAvailability Zone flexibility\nThe Reserved Instance discount applies to instance usage in any Availability Zone in the specified Region.\nNo Availability Zone flexibility\u2014the Reserved Instance discount applies to instance usage in the specified Availability Zone only.\nInstance size flexibility\nThe Reserved Instance discount applies to instance usage within the instance family, regardless of size.\nOnly supported on Amazon Linux/Unix Reserved Instances with default tenancy. For more information, see Instance size flexibility determined by normalization factor.\nNo instance size flexibility\u2014the Reserved Instance discount applies to instance usage for the specified instance type and size only.\nQueuing a purchase\nYou can queue purchases for regional Reserved Instances.\nYou can't queue purchases for zonal Reserved Instances.\nFor more information and examples, see How Reserved Instance discounts are applied."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/reserved-instances-types.html",
        "content": "The offering class of a Reserved Instance is either Standard or Convertible. A Standard Reserved Instance provides a more significant discount than a Convertible Reserved Instance, but you can't exchange a Standard Reserved Instance. You can exchange Convertible Reserved Instances. You can modify Standard and Convertible Reserved Instances.\nThe configuration of a Reserved Instance comprises a single instance type, platform, scope, and tenancy over a term. If your computing needs change, you might be able to modify or exchange your Reserved Instance.\nDifferences between Standard and Convertible Reserved Instances\nThe following are the differences between Standard and Convertible Reserved Instances.\nStandard Reserved Instance Convertible Reserved Instance\nModify Reserved Instances Some attributes can be modified. For more information, see Modify Reserved Instances. Some attributes can be modified. For more information, see Modify Reserved Instances.\nExchange Reserved Instances Can't be exchanged. Can be exchanged during the term for another Convertible Reserved Instance with new attributes, including instance family, instance type, platform, scope, or tenancy. For more information, see Exchange Convertible Reserved Instances.\nSell in the Reserved Instance Marketplace Can be sold in the Reserved Instance Marketplace. Can't be sold in the Reserved Instance Marketplace.\nBuy in the Reserved Instance Marketplace Can be bought in the Reserved Instance Marketplace. Can't be bought in the Reserved Instance Marketplace."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/apply_ri.html",
        "content": "Reserved Instances are not physical instances, but rather a billing discount that is applied to the running On-Demand Instances in your account. The On-Demand Instances must match certain specifications of the Reserved Instances in order to benefit from the billing discount.\nIf you purchase a Reserved Instance and you already have a running On-Demand Instance that matches the specifications of the Reserved Instance, the billing discount is applied immediately and automatically. You do not have to restart your instances. If you do not have an eligible running On-Demand Instance, launch an On-Demand Instance with the same specifications as your Reserved Instance. For more information, see Use your Reserved Instances.\nThe offering class (Standard or Convertible) of the Reserved Instance does not affect how the billing discount is applied.\nTopics\nHow zonal Reserved Instances are applied\nHow regional Reserved Instances are applied\nInstance size flexibility\nExamples of applying Reserved Instances\nHow zonal Reserved Instances are applied\nA Reserved Instance that is purchased to reserve capacity in a specific Availability Zone is called a zonal Reserved Instance.\nThe Reserved Instance discount applies to matching instance usage in that Availability Zone.\nThe attributes (tenancy, platform, Availability Zone, instance type, and instance size) of the running instances must match that of the Reserved Instances.\nFor example, if you purchase two c4.xlarge default tenancy Linux/Unix Standard Reserved Instances for Availability Zone us-east-1a, then up to two c4.xlarge default tenancy Linux/Unix instances running in the Availability Zone us-east-1a can benefit from the Reserved Instance discount.\nHow regional Reserved Instances are applied\nA Reserved Instance that is purchased for a Region is called a regional Reserved Instance, and provides Availability Zone and instance size flexibility.\nThe Reserved Instance discount applies to instance usage in any Availability Zone in that Region.\nThe Reserved Instance discount applies to instance usage within the instance family, regardless of size\u2014this is known as instance size flexibility.\nInstance size flexibility\nWith instance size flexibility, the Reserved Instance discount applies to instance usage for instances that have the same family. The Reserved Instance is applied from the smallest to the largest instance size within the instance family based on the normalization factor. For an example of how the Reserved Instance discount is applied, see Scenario 2: Reserved Instances in a single account using the normalization factor.\nLimitations\nSupported: Instance size flexibility is only supported for Regional Reserved Instances.\nNot supported: Instance size flexibility is not supported for the following Reserved Instances:\nReserved Instances that are purchased for a specific Availability Zone (zonal Reserved Instances)\nReserved Instances for G4ad, G4dn, G5, G5g, G6, G6e, Gr6, hpc7a, P5, Inf1, Inf2, u7i-6tb, and u7i-8tb instances\nReserved Instances for Windows Server, Windows Server with SQL Standard, Windows Server with SQL Server Enterprise, Windows Server with SQL Server Web, RHEL, and SUSE Linux Enterprise Server\nReserved Instances with dedicated tenancy\nInstance size flexibility determined by normalization factor\nInstance size flexibility is determined by the normalization factor of the instance size. The discount applies either fully or partially to running instances of the same instance family, depending on the instance size of the reservation, in any Availability Zone in the Region. The only attributes that must be matched are the instance family, tenancy, and platform.\nThe following table lists the different sizes within an instance family, and the corresponding normalization factor. This scale is used to apply the discounted rate of Reserved Instances to the normalized usage of the instance family.\nInstance size Normalization factor\nnano 0.25\nmicro 0.5\nsmall 1\nmedium 2\nlarge 4\nxlarge 8\n2xlarge 16\n3xlarge 24\n4xlarge 32\n6xlarge 48\n8xlarge 64\n9xlarge 72\n10xlarge 80\n12xlarge 96\n16xlarge 128\n18xlarge 144\n24xlarge 192\n32xlarge 256\n48xlarge 384\n56xlarge 448\n112xlarge 896\nFor example, a t2.medium instance has a normalization factor of 2. If you purchase a t2.medium default tenancy Amazon Linux/Unix Reserved Instance in the US East (N. Virginia) and you have two running t2.small instances in your account in that Region, the billing benefit is applied in full to both instances.\nOr, if you have one t2.large instance running in your account in the US East (N. Virginia) Region, the billing benefit is applied to 50% of the usage of the instance.\nThe normalization factor is also applied when modifying Reserved Instances. For more information, see Modify Reserved Instances.\nNormalization factor for bare metal instances\nInstance size flexibility also applies to bare metal instances within the instance family. If you have regional Amazon Linux/Unix Reserved Instances with shared tenancy on bare metal instances, you can benefit from the Reserved Instance savings within the same instance family. The opposite is also true: if you have regional Amazon Linux/Unix Reserved Instances with shared tenancy on instances in the same family as a bare metal instance, you can benefit from the Reserved Instance savings on the bare metal instance.\nThe metal instance size does not have a single normalization factor. A bare metal instance has the same normalization factor as the equivalent virtualized instance size within the same instance family. For example, an i3.metal instance has the same normalization factor as an i3.16xlarge instance.\nInstance size Normalization factor\na1.metal 32\nm5zn.metal | x2iezn.metal z1d.metal 96\nc6g.metal | c6gd.metal | i3.metal | m6g.metal | m6gd.metal | r6g.metal | r6gd.metal | x2gd.metal 128\nc5n.metal 144\nc5.metal | c5d.metal | i3en.metal | m5.metal | m5d.metal | m5dn.metal | m5n.metal | r5.metal | r5b.metal | r5d.metal | r5dn.metal | r5n.metal 192\nc6i.metal | c6id.metal | m6i.metal | m6id.metal | r6d.metal | r6id.metal 256\nu-18tb1.metal | u-24tb1.metal 448\nu-6tb1.metal | u-9tb1.metal | u-12tb1.metal 896\nFor example, an i3.metal instance has a normalization factor of 128. If you purchase an i3.metal default tenancy Amazon Linux/Unix Reserved Instance in the US East (N. Virginia), the billing benefit can apply as follows:\nIf you have one running i3.16xlarge in your account in that Region, the billing benefit is applied in full to the i3.16xlarge instance (i3.16xlarge normalization factor = 128).\nOr, if you have two running i3.8xlarge instances in your account in that Region, the billing benefit is applied in full to both i3.8xlarge instances (i3.8xlarge normalization factor = 64).\nOr, if you have four running i3.4xlarge instances in your account in that Region, the billing benefit is applied in full to all four i3.4xlarge instances (i3.4xlarge normalization factor = 32).\nThe opposite is also true. For example, if you purchase two i3.8xlarge default tenancy Amazon Linux/Unix Reserved Instances in the US East (N. Virginia), and you have one running i3.metal instance in that Region, the billing benefit is applied in full to the i3.metal instance.\nExamples of applying Reserved Instances\nThe following scenarios cover the ways in which Reserved Instances are applied.\nScenario 1: Reserved Instances in a single account\nScenario 2: Reserved Instances in a single account using the normalization factor\nScenario 3: Regional Reserved Instances in linked accounts\nScenario 4: Zonal Reserved Instances in a linked account\nScenario 1: Reserved Instances in a single account\nYou are running the following On-Demand Instances in account A:\n4 x m3.large Linux, default tenancy instances in Availability Zone us-east-1a\n2 x m4.xlarge Amazon Linux, default tenancy instances in Availability Zone us-east-1b\n1 x c4.xlarge Amazon Linux, default tenancy instances in Availability Zone us-east-1c\nYou purchase the following Reserved Instances in account A:\n4 x m3.large Linux, default tenancy Reserved Instances in Availability Zone us-east-1a (capacity is reserved)\n4 x m4.large Amazon Linux, default tenancy Reserved Instances in Region us-east-1\n1 x c4.large Amazon Linux, default tenancy Reserved Instances in Region us-east-1\nThe Reserved Instance benefits are applied in the following way:\nThe discount and capacity reservation of the four m3.large zonal Reserved Instances is used by the four m3.large instances because the attributes (instance size, Region, platform, tenancy) between them match.\nThe m4.large regional Reserved Instances provide Availability Zone and instance size flexibility, because they are regional Amazon Linux Reserved Instances with default tenancy.\nAn m4.large is equivalent to 4 normalized units/hour.\nYou've purchased four m4.large regional Reserved Instances, and in total, they are equal to 16 normalized units/hour (4x4). Account A has two m4.xlarge instances running, which is equivalent to 16 normalized units/hour (2x8). In this case, the four m4.large regional Reserved Instances provide the full billing benefit to the usage of the two m4.xlarge instances.\nThe c4.large regional Reserved Instance in us-east-1 provides Availability Zone and instance size flexibility, because it is a regional Amazon Linux Reserved Instance with default tenancy, and applies to the c4.xlarge instance. A c4.large instance is equivalent to 4 normalized units/hour and a c4.xlarge is equivalent to 8 normalized units/hour.\nIn this case, the c4.large regional Reserved Instance provides partial benefit to c4.xlarge usage. This is because the c4.large Reserved Instance is equivalent to 4 normalized units/hour of usage, but the c4.xlarge instance requires 8 normalized units/hour. Therefore, the c4.large Reserved Instance billing discount applies to 50% of c4.xlarge usage. The remaining c4.xlarge usage is charged at the On-Demand rate.\nScenario 2: Reserved Instances in a single account using the normalization factor\nYou are running the following On-Demand Instances in account A:\n2 x m3.xlarge Amazon Linux, default tenancy instances in Availability Zone us-east-1a\n2 x m3.large Amazon Linux, default tenancy instances in Availability Zone us-east-1b\nYou purchase the following Reserved Instance in account A:\n1 x m3.2xlarge Amazon Linux, default tenancy Reserved Instance in Region us-east-1\nThe Reserved Instance benefits are applied in the following way:\nThe m3.2xlarge regional Reserved Instance in us-east-1 provides Availability Zone and instance size flexibility, because it is a regional Amazon Linux Reserved Instance with default tenancy. It applies first to the m3.large instances and then to the m3.xlarge instances, because it applies from the smallest to the largest instance size within the instance family based on the normalization factor.\nAn m3.large instance is equivalent to 4 normalized units/hour.\nAn m3.xlarge instance is equivalent to 8 normalized units/hour.\nAn m3.2xlarge instance is equivalent to 16 normalized units/hour.\nThe benefit is applied as follows:\nThe m3.2xlarge regional Reserved Instance provides full benefit to 2 x m3.large usage, because together these instances account for 8 normalized units/hour. This leaves 8 normalized units/hour to apply to the m3.xlarge instances.\nWith the remaining 8 normalized units/hour, the m3.2xlarge regional Reserved Instance provides full benefit to 1 x m3.xlarge usage, because each m3.xlarge instance is equivalent to 8 normalized units/hour. The remaining m3.xlarge usage is charged at the On-Demand rate.\nScenario 3: Regional Reserved Instances in linked accounts\nReserved Instances are first applied to usage within the purchasing account, followed by qualifying usage in any other account in the organization. For more information, see Reserved Instances and consolidated billing. For regional Reserved Instances that offer instance size flexibility, the benefit is applied from the smallest to the largest instance size within the instance family.\nYou're running the following On-Demand Instances in account A (the purchasing account):\n2 x m4.xlarge Linux, default tenancy instances in Availability Zone us-east-1a\n1 x m4.2xlarge Linux, default tenancy instances in Availability Zone us-east-1b\n2 x c4.xlarge Linux, default tenancy instances in Availability Zone us-east-1a\n1 x c4.2xlarge Linux, default tenancy instances in Availability Zone us-east-1b\nAnother customer is running the following On-Demand Instances in account B\u2014a linked account:\n2 x m4.xlarge Linux, default tenancy instances in Availability Zone us-east-1a\nYou purchase the following regional Reserved Instances in account A:\n4 x m4.xlarge Linux, default tenancy Reserved Instances in Region us-east-1\n2 x c4.xlarge Linux, default tenancy Reserved Instances in Region us-east-1\nThe regional Reserved Instance benefits are applied in the following way:\nThe discount of the four m4.xlarge Reserved Instances is used by the two m4.xlarge instances and the single m4.2xlarge instance in account A (purchasing account). All three instances match the attributes (instance family, Region, platform, tenancy). The discount is applied to instances in the purchasing account (account A) first, even though account B (linked account) has two m4.xlarge that also match the Reserved Instances. There is no capacity reservation because the Reserved Instances are regional Reserved Instances.\nThe discount of the two c4.xlarge Reserved Instances applies to the two c4.xlarge instances, because they are a smaller instance size than the c4.2xlarge instance. There is no capacity reservation because the Reserved Instances are regional Reserved Instances.\nScenario 4: Zonal Reserved Instances in a linked account\nIn general, Reserved Instances that are owned by an account are applied first to usage in that account. However, if there are qualifying, unused Reserved Instances for a specific Availability Zone (zonal Reserved Instances) in other accounts in the organization, they are applied to the account before regional Reserved Instances owned by the account. This is done to ensure maximum Reserved Instance utilization and a lower bill. For billing purposes, all the accounts in the organization are treated as one account. The following example might help explain this.\nYou're running the following On-Demand Instance in account A (the purchasing account):\n1 x m4.xlarge Linux, default tenancy instance in Availability Zone us-east-1a\nA customer is running the following On-Demand Instance in linked account B:\n1 x m4.xlarge Linux, default tenancy instance in Availability Zone us-east-1b\nYou purchase the following regional Reserved Instances in account A:\n1 x m4.xlarge Linux, default tenancy Reserved Instance in Region us-east-1\nA customer also purchases the following zonal Reserved Instances in linked account C:\n1 x m4.xlarge Linux, default tenancy Reserved Instances in Availability Zone us-east-1a\nThe Reserved Instance benefits are applied in the following way:\nThe discount of the m4.xlarge zonal Reserved Instance owned by account C is applied to the m4.xlarge usage in account A.\nThe discount of the m4.xlarge regional Reserved Instance owned by account A is applied to the m4.xlarge usage in account B.\nIf the regional Reserved Instance owned by account A was first applied to the usage in account A, the zonal Reserved Instance owned by account C remains unused and usage in account B is charged at On-Demand rates.\nFor more information, see Understanding your reservations in the AWS Cost and Usage Report.\nNote\nZonal Reserved Instances reserve capacity only for the owning account and cannot be shared with other AWS accounts. If you need to share capacity with other AWS accounts, use Reserve compute capacity with EC2 On-Demand Capacity Reservations."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-reserved-instances.html",
        "content": "Reserved Instances are automatically applied to running On-Demand Instances provided that the specifications match. If you have no running On-Demand Instances that match the specifications of your Reserved Instance, the Reserved Instance is unused until you launch an instance with the required specifications.\nIf you're launching an On-Demand Instance to take advantage of the billing benefit of a Reserved Instance, ensure that you specify the following information when you configure your On-Demand Instance:\nPlatform\nYou must specify an Amazon Machine Image (AMI) that matches the platform (product description) of your Reserved Instance. For example, if you specified Linux/UNIX for your Reserved Instance, you can launch an instance from an Amazon Linux AMI or an Ubuntu AMI.\nInstance type\nIf you purchased a zonal Reserved Instance, you must specify the same instance type as your Reserved Instance; for example, t3.large. For more information, see How zonal Reserved Instances are applied.\nIf you purchased a regional Reserved Instance, you must specify an instance type from the same instance family as the instance type of your Reserved Instance. For example, if you specified t3.xlarge for your Reserved Instance, you must launch your instance from the T3 family, but you can specify any size, for example, t3.medium. For more information, see How regional Reserved Instances are applied.\nAvailability Zone\nIf you purchased a zonal Reserved Instance for a specific Availability Zone, you must launch the instance into the same Availability Zone.\nIf you purchased a regional Reserved Instance, you can launch the instance into any Availability Zone in the Region that you specified for the Reserved Instance.\nTenancy\nThe tenancy (dedicated or shared) of the instance must match the tenancy of your Reserved Instance. For more information, see Amazon EC2 Dedicated Instances.\nFor examples of how Reserved Instances are applied to your running On-Demand Instances, see How Reserved Instance discounts are applied. For more information, see Why aren't my Amazon EC2 Reserved Instances applying to my AWS billing in the way that I expected?\nYou can use various methods to launch the On-Demand Instances that use your Reserved Instance discount. For information about the different launch methods, see Launch an Amazon EC2 instance. You can also use Amazon EC2 Auto Scaling to launch an instance. For more information, see the Amazon EC2 Auto Scaling User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-reserved-instances-application.html",
        "content": "All Reserved Instances provide you with a discount compared to On-Demand pricing. With Reserved Instances, you pay for the entire term regardless of actual use. You can choose to pay for your Reserved Instance upfront, partially upfront, or monthly, depending on the payment option specified for the Reserved Instance.\nWhen Reserved Instances expire, you are charged On-Demand rates for EC2 instance usage. You can queue a Reserved Instance for purchase up to three years in advance. This can help you ensure that you have uninterrupted coverage. For more information, see Queue your purchase.\nThe AWS Free Tier is available for new AWS accounts. If you are using the AWS Free Tier to run Amazon EC2 instances, and you purchase a Reserved Instance, you are charged the standard pricing. For information, see AWS Free Tier.\nContents\nUsage billing\nViewing your bill\nReserved Instances and consolidated billing\nReserved Instance discount pricing tiers\nUsage billing\nReserved Instances are billed for every clock-hour during the term that you select, regardless of whether an instance is running. Each clock-hour starts on the hour (zero minutes and zero seconds past the hour) of a standard 24-hour clock. For example, 1:00:00 to 1:59:59 is one clock-hour. For more information about instance states, see Amazon EC2 instance state changes.\nA Reserved Instance billing benefit can be applied to a running instance on a per-second basis. Per-second billing is available for instances using an open-source Linux distribution, such as Amazon Linux and Ubuntu. Per-hour billing is used for commercial Linux distributions, such as Red Hat Enterprise Linux and SUSE Linux Enterprise Server.\nA Reserved Instance billing benefit can apply to a maximum of 3600 seconds (one hour) of instance usage per clock-hour. You can run multiple instances concurrently, but can only receive the benefit of the Reserved Instance discount for a total of 3600 seconds per clock-hour; instance usage that exceeds 3600 seconds in a clock-hour is billed at the On-Demand rate.\nFor example, if you purchase one m4.xlarge Reserved Instance and run four m4.xlarge instances concurrently for one hour, one instance is charged at one hour of Reserved Instance usage and the other three instances are charged at three hours of On-Demand usage.\nHowever, if you purchase one m4.xlarge Reserved Instance and run four m4.xlarge instances for 15 minutes (900 seconds) each within the same hour, the total running time for the instances is one hour, which results in one hour of Reserved Instance usage and 0 hours of On-Demand usage.\nIf multiple eligible instances are running concurrently, the Reserved Instance billing benefit is applied to all the instances at the same time up to a maximum of 3600 seconds in a clock-hour; thereafter, On-Demand rates apply.\nCost Explorer on the Billing and Cost Management console enables you to analyze the savings against running On-Demand Instances. The Reserved Instances FAQ includes an example of a list value calculation.\nIf you close your AWS account, On-Demand billing for your resources stops. However, if you have any Reserved Instances in your account, you continue to receive a bill for these until they expire.\nViewing your bill\nYou can find out about the charges and fees to your account by viewing the AWS Billing and Cost Management console.\nThe Dashboard displays a spend summary for your account.\nOn the Bills page, under Details expand the Elastic Compute Cloud section and the Region to get billing information about your Reserved Instances.\nYou can view the charges online, or you can download a CSV file.\nYou can also track your Reserved Instance utilization using the AWS Cost and Usage Report. For more information, see Understanding your reservations.\nReserved Instances and consolidated billing\nThe pricing benefits of Reserved Instances are shared when the purchasing account is part of a set of accounts billed under one consolidated billing payer account. The instance usage across all member accounts is aggregated in the payer account every month. This is typically useful for companies in which there are different functional teams or groups; then, the normal Reserved Instance logic is applied to calculate the bill. For more information, see Consolidated billing for AWS Organizations.\nIf you close the account that purchased the Reserved Instance, the payer account is charged for the Reserved Instance until the Reserved Instance expires. After the closed account is permanently deleted in 90 days, the member accounts no longer benefit from the Reserved Instance billing discount.\nNote\nZonal Reserved Instances reserve capacity only for the owning account and cannot be shared with other AWS accounts. If you need to share capacity with other AWS accounts, use Reserve compute capacity with EC2 On-Demand Capacity Reservations.\nReserved Instance discount pricing tiers\nIf your account qualifies for a discount pricing tier, it automatically receives discounts on upfront and instance usage fees for Reserved Instance purchases that you make within that tier level from that point on. To qualify for a discount, the list value of your Reserved Instances in the Region must be $500,000 USD or more.\nThe following rules apply:\nPricing tiers and related discounts apply only to purchases of Amazon EC2 Standard Reserved Instances.\nPricing tiers do not apply to Reserved Instances for Windows with SQL Server Standard, SQL Server Web, and SQL Server Enterprise.\nPricing tiers do not apply to Reserved Instances for Linux with SQL Server Standard, SQL Server Web, and SQL Server Enterprise.\nPricing tier discounts only apply to purchases made from AWS. They do not apply to purchases of third-party Reserved Instances.\nDiscount pricing tiers are currently not applicable to Convertible Reserved Instance purchases.\nTopics\nCalculate Reserved Instance pricing discounts\nBuy with a discount tier\nCrossing pricing tiers\nConsolidated billing for pricing tiers\nCalculate Reserved Instance pricing discounts\nYou can determine the pricing tier for your account by calculating the list value for all of your Reserved Instances in a Region. Multiply the hourly recurring price for each reservation by the total number of hours for the term and add the undiscounted upfront price (also known as the fixed price) at the time of purchase. Because the list value is based on undiscounted (public) pricing, it is not affected if you qualify for a volume discount or if the price drops after you buy your Reserved Instances.\nList value = fixed price + (undiscounted recurring hourly price * hours in term)\nFor example, for a 1-year Partial Upfront t2.small Reserved Instance, assume the upfront price is $60.00 and the hourly rate is $0.007. This provides a list value of $121.32.\n121.32 = 60.00 + (0.007 * 8760)\nTo view the fixed price values for Reserved Instances using the Amazon EC2 console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Reserved Instances.\nTo display the Upfront price column, choose settings ( ) in the top-right corner, turn on Upfront price, and choose Confirm.\nTo view the fixed price values for Reserved Instances using the command line\ndescribe-reserved-instances (AWS CLI)\nGet-EC2ReservedInstance (AWS Tools for Windows PowerShell)\nBuy with a discount tier\nWhen you buy Reserved Instances, Amazon EC2 automatically applies any discounts to the part of your purchase that falls within a discount pricing tier. You don't need to do anything differently, and you can buy Reserved Instances using any of the Amazon EC2 tools. For more information, see Buy Reserved Instances for Amazon EC2.\nAfter the list value of your active Reserved Instances in a Region crosses into a discount pricing tier, any future purchase of Reserved Instances in that Region are charged at a discounted rate. If a single purchase of Reserved Instances in a Region takes you over the threshold of a discount tier, then the portion of the purchase that is above the price threshold is charged at the discounted rate. For more information about the temporary Reserved Instance IDs that are created during the purchase process, see Crossing pricing tiers.\nIf your list value falls below the price point for that discount pricing tier\u2014for example, if some of your Reserved Instances expire\u2014future purchases of Reserved Instances in the Region are not discounted. However, you continue to get the discount applied against any Reserved Instances that were originally purchased within the discount pricing tier.\nWhen you buy Reserved Instances, one of four possible scenarios occurs:\nNo discount\u2014Your purchase within a Region is still below the discount threshold.\nPartial discount\u2014Your purchase within a Region crosses the threshold of the first discount tier. No discount is applied to one or more reservations and the discounted rate is applied to the remaining reservations.\nFull discount\u2014Your entire purchase within a Region falls within one discount tier and is discounted appropriately.\nTwo discount rates\u2014Your purchase within a Region crosses from a lower discount tier to a higher discount tier. You are charged two different rates: one or more reservations at the lower discounted rate, and the remaining reservations at the higher discounted rate.\nCrossing pricing tiers\nIf your purchase crosses into a discounted pricing tier, you see multiple entries for that purchase: one for that part of the purchase charged at the regular price, and another for that part of the purchase charged at the applicable discounted rate.\nThe Reserved Instance service generates several Reserved Instance IDs because your purchase crossed from an undiscounted tier, or from one discounted tier to another. There is an ID for each set of reservations in a tier. Consequently, the ID returned by your purchase CLI command or API action is different from the actual ID of the new Reserved Instances.\nConsolidated billing for pricing tiers\nA consolidated billing account aggregates the list value of member accounts within a Region. When the list value of all active Reserved Instances for the consolidated billing account reaches a discount pricing tier, any Reserved Instances purchased after this point by any member of the consolidated billing account are charged at the discounted rate (as long as the list value for that consolidated account stays above the discount pricing tier threshold). For more information, see Reserved Instances and consolidated billing."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-concepts-buying.html",
        "content": "To buy a Reserved Instance for Amazon EC2, you can use the Amazon EC2 console, a command line tool, or an SDK to search for Reserved Instance offerings from AWS and third-party sellers, adjusting your search parameters until you find the exact match that you're looking for.\nWhen you search for Reserved Instances to buy, you receive a quote on the cost of the returned offerings. When you proceed with the purchase, AWS automatically places a limit price on the purchase price. The total cost of your Reserved Instances won't exceed the amount that you were quoted.\nIf the price rises or changes for any reason, the purchase is not completed. When you are purchasing a third-party seller\u2019s Reserved Instance from the Amazon EC2 Reserved Instance Marketplace, if there are offerings similar to your choice but at a lower upfront price, AWS sells you the offerings at the lower upfront price.\nBefore you confirm your purchase, review the details of the Reserved Instance that you plan to buy, and make sure that all the parameters are accurate. After you purchase a Reserved Instance (either from a third-party seller in the Reserved Instance Marketplace or from AWS), you cannot cancel your purchase. You can queue a purchase for a future date, and cancel the queued purchase before its scheduled time.\nTo purchase and modify Reserved Instances, ensure that your user has the appropriate permissions, such as the ability to describe Availability Zones. For information, see Example: Work with Reserved Instances (API) or Example: Work with Reserved Instances (console).\nTopics\nChoosing a platform\nQueue your purchase\nBuy Standard Reserved Instances\nBuy Convertible Reserved Instances\nBuy from the Reserved Instance Marketplace\nView your Reserved Instances\nCancel a queued purchase\nRenew a Reserved Instance\nChoosing a platform\nAmazon EC2 supports the following platforms for Reserved Instances:\nLinux/UNIX\nLinux with SQL Server Standard\nLinux with SQL Server Web\nLinux with SQL Server Enterprise\nSUSE Linux\nRed Hat Enterprise Linux\nRed Hat Enterprise Linux with HA\nWindows\nWindows with SQL Server Standard\nWindows with SQL Server Web\nWindows with SQL Server Enterprise\nWhen you purchase a Reserved Instance, you must choose an offering for a platform that represents the operating system for your instance.\nLinux instances\nFor SUSE Linux and RHEL distributions, you must choose offerings for those specific platforms, i.e., for the SUSE Linux or Red Hat Enterprise Linux platforms.\nFor all other Linux distributions (including Ubuntu), choose an offering for the Linux/UNIX platform.\nIf you bring your existing RHEL subscription, you must choose an offering for the Linux/UNIX platform, not an offering for the Red Hat Enterprise Linux platform.\nWindows instances\nFor Windows with SQL Standard, Windows with SQL Server Enterprise, and Windows with SQL Server Web, you must choose offerings for those specific platforms.\nFor all other Windows versions, choose an offering for the Windows platform.\nNote\nUbuntu Pro is not available as a Reserved Instance. For significant savings compared to On-Demand Instance pricing, we recommend that you use Ubuntu Pro with Savings Plans. For more information, see the Savings Plans User Guide.\nImportant\nIf you plan to purchase a Reserved Instance to apply to an On-Demand Instance that was launched from an AWS Marketplace AMI, first check the PlatformDetails field of the AMI. The PlatformDetails field indicates which Reserved Instance to purchase. The platform details of the AMI must match the platform of the Reserved Instance, otherwise the Reserved Instance will not be applied to the On-Demand Instance. For information about how to view the platform details of the AMI, see Understand AMI billing information.\nQueue your purchase\nBy default, when you purchase a Reserved Instance, the purchase is made immediately. Alternatively, you can queue your purchases for a future date and time. For example, you can queue a purchase for around the time that an existing Reserved Instance expires. This can help you ensure that you have uninterrupted coverage.\nYou can queue purchases for regional Reserved Instances, but not zonal Reserved Instances or Reserved Instances from other sellers. You can queue a purchase up to three years in advance. On the scheduled date and time, the purchase is made using the default payment method. After the payment is successful, the billing benefit is applied.\nYou can set a date for your queued purchases in the Amazon EC2 console, and the purchase is queued until 00:00 UTC on this date. To specify a different time for the queued purchase, use an AWS SDK or command line tool.\nYou can view your queued purchases in the Amazon EC2 console. The status of a queued purchase is queued. You can cancel a queued purchase any time before its scheduled time. For details, see Cancel a queued purchase.\nBuy Standard Reserved Instances\nYou can buy Standard Reserved Instances in a specific Availability Zone and get a capacity reservation. Alternatively, you can forego the capacity reservation and purchase a regional Standard Reserved Instance.\nTo buy Standard Reserved Instances using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Reserved Instances, and then choose Purchase Reserved Instances.\nFor Offering class, choose Standard to display Standard Reserved Instances.\nTo purchase a capacity reservation, toggle on Only show offerings that reserve capacity in the top-right corner of the purchase screen. When you toggle on this setting, the Availability Zone field appears.\nTo purchase a regional Reserved Instance, toggle off this setting. When you toggle off this setting, the Availability Zone field disappears.\nSelect other configurations as needed, and then choose Search.\nFor each Reserved Instance that you want to purchase, enter the desired quantity, and choose Add to cart.\nTo purchase a Standard Reserved Instance from the Reserved Instance Marketplace, look for 3rd party in the Seller column in the search results. The Term column displays non-standard terms. For more information, see Buy from the Reserved Instance Marketplace.\nTo see a summary of the Reserved Instances that you selected, choose View cart.\nIf Order on is Now, the purchase is completed immediately after you choose Order all. To queue a purchase, choose Now and select a date. You can select a different date for each eligible offering in the cart. The purchase is queued until 00:00 UTC on the selected date.\nTo complete the order, choose Order all.\nIf, at the time of placing the order, there are offerings similar to your choice but with a lower price, AWS sells you the offerings at the lower price.\nChoose Close.\nThe status of your order is listed in the State column. When your order is complete, the State value changes from Payment-pending to Active. When the Reserved Instance is Active, it is ready to use.\nNote\nIf the status goes to Retired, AWS might not have received your payment.\nTo buy a Standard Reserved Instance using the AWS CLI\nFind available Reserved Instances using the describe-reserved-instances-offerings command. Specify standard for the --offering-class parameter to return only Standard Reserved Instances. You can apply additional parameters to narrow your results. For example, if you want to purchase a regional t2.large Reserved Instance with a default tenancy for Linux/UNIX for a 1-year term only:\naws ec2 describe-reserved-instances-offerings \\\n    --instance-type t2.large \\\n    --offering-class standard \\\n    --product-description \"Linux/UNIX\" \\\n    --instance-tenancy default \\\n    --filters Name=duration,Values=31536000 Name=scope,Values=Region\nTo find Reserved Instances on the Reserved Instance Marketplace only, use the marketplace filter and do not specify a duration in the request, as the term might be shorter than a 1\u2013 or 3-year term.\naws ec2 describe-reserved-instances-offerings \\\n    --instance-type t2.large \\\n    --offering-class standard \\\n    --product-description \"Linux/UNIX\" \\\n    --instance-tenancy default \\\n    --filters Name=marketplace,Values=true\nWhen you find a Reserved Instance that meets your needs, take note of the offering ID. For example:\n\"ReservedInstancesOfferingId\": \"bec624df-a8cc-4aad-a72f-4f8abc34caf2\"\nUse the purchase-reserved-instances-offering command to buy your Reserved Instance. You must specify the Reserved Instance offering ID you obtained the previous step and you must specify the number of instances for the reservation.\naws ec2 purchase-reserved-instances-offering \\\n    --reserved-instances-offering-id bec624df-a8cc-4aad-a72f-4f8abc34caf2 \\\n    --instance-count 1\nBy default, the purchase is completed immediately. Alternatively, to queue the purchase, add the following parameter to the previous call.\n--purchase-time \"2020-12-01T00:00:00Z\"\nUse the describe-reserved-instances command to get the status of your Reserved Instance.\naws ec2 describe-reserved-instances\nAlternatively, use the following AWS Tools for Windows PowerShell commands:\nGet-EC2ReservedInstancesOffering\nNew-EC2ReservedInstance\nGet-EC2ReservedInstance\nAfter the purchase is complete, if you already have a running instance that matches the specifications of the Reserved Instance, the billing benefit is immediately applied. You do not have to restart your instances. If you do not have a suitable running instance, launch an instance and ensure that you match the same criteria that you specified for your Reserved Instance. For more information, see Use your Reserved Instances.\nFor examples of how Reserved Instances are applied to your running instances, see How Reserved Instance discounts are applied.\nBuy Convertible Reserved Instances\nYou can buy Convertible Reserved Instances in a specific Availability Zone and get a capacity reservation. Alternatively, you can forego the capacity reservation and purchase a regional Convertible Reserved Instance.\nTo buy Convertible Reserved Instances using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Reserved Instances, and then choose Purchase Reserved Instances.\nFor Offering class, choose Convertible to display Convertible Reserved Instances.\nTo purchase a capacity reservation, toggle on Only show offerings that reserve capacity in the top-right corner of the purchase screen. When you toggle on this setting, the Availability Zone field appears.\nTo purchase a regional Reserved Instance, toggle off this setting. When you toggle off this setting, the Availability Zone field disappears.\nSelect other configurations as needed and choose Search.\nFor each Convertible Reserved Instance that you want to purchase, enter the quantity, and choose Add to cart.\nTo see a summary of your selection, choose View cart.\nIf Order on is Now, the purchase is completed immediately after you choose Order all. To queue a purchase, choose Now and select a date. You can select a different date for each eligible offering in the cart. The purchase is queued until 00:00 UTC on the selected date.\nTo complete the order, choose Order all.\nIf, at the time of placing the order, there are offerings similar to your choice but with a lower price, AWS sells you the offerings at the lower price.\nChoose Close.\nThe status of your order is listed in the State column. When your order is complete, the State value changes from Payment-pending to Active. When the Reserved Instance is Active, it is ready to use.\nNote\nIf the status goes to Retired, AWS might not have received your payment.\nTo buy a Convertible Reserved Instance using the AWS CLI\nFind available Reserved Instances using the describe-reserved-instances-offerings command. Specify convertible for the --offering-class parameter to return only Convertible Reserved Instances. You can apply additional parameters to narrow your results; for example, if you want to purchase a regional t2.large Reserved Instance with a default tenancy for Linux/UNIX:\naws ec2 describe-reserved-instances-offerings \\\n    --instance-type t2.large \\\n    --offering-class convertible \\\n    --product-description \"Linux/UNIX\" \\\n    --instance-tenancy default \\\n    --filters Name=scope,Values=Region\nWhen you find a Reserved Instance that meets your needs, take note of the offering ID. For example:\n\"ReservedInstancesOfferingId\": \"bec624df-a8cc-4aad-a72f-4f8abc34caf2\"\nUse the purchase-reserved-instances-offering command to buy your Reserved Instance. You must specify the Reserved Instance offering ID you obtained the previous step and you must specify the number of instances for the reservation.\naws ec2 purchase-reserved-instances-offering \\\n    --reserved-instances-offering-id bec624df-a8cc-4aad-a72f-4f8abc34caf2 \\\n    --instance-count 1\nBy default, the purchase is completed immediately. Alternatively, to queue the purchase, add the following parameter to the previous call.\n--purchase-time \"2020-12-01T00:00:00Z\"\nUse the describe-reserved-instances command to get the status of your Reserved Instance.\naws ec2 describe-reserved-instances\nAlternatively, use the following AWS Tools for Windows PowerShell commands:\nGet-EC2ReservedInstancesOffering\nNew-EC2ReservedInstance\nGet-EC2ReservedInstance\nIf you already have a running instance that matches the specifications of the Reserved Instance, the billing benefit is immediately applied. You do not have to restart your instances. If you do not have a suitable running instance, launch an instance and ensure that you match the same criteria that you specified for your Reserved Instance. For more information, see Use your Reserved Instances.\nFor examples of how Reserved Instances are applied to your running instances, see How Reserved Instance discounts are applied.\nBuy from the Reserved Instance Marketplace\nYou can purchase Reserved Instances from third-party sellers who own Reserved Instances that they no longer need from the Reserved Instance Marketplace. You can do this using the Amazon EC2 console or a command line tool. The process is similar to purchasing Reserved Instances from AWS. For more information, see Buy Standard Reserved Instances.\nThere are a few differences between Reserved Instances purchased in the Reserved Instance Marketplace and Reserved Instances purchased directly from AWS:\nTerm \u2013 Reserved Instances that you purchase from third-party sellers have less than a full standard term remaining. Full standard terms from AWS run for one year or three years.\nUpfront price \u2013 Third-party Reserved Instances can be sold at different upfront prices. The usage or recurring fees remain the same as the fees set when the Reserved Instances were originally purchased from AWS.\nTypes of Reserved Instances \u2013 Only Amazon EC2 Standard Reserved Instances can be purchased from the Reserved Instance Marketplace. Convertible Reserved Instances, Amazon RDS, and Amazon ElastiCache Reserved Instances are not available for purchase on the Reserved Instance Marketplace.\nBasic information about you is shared with the seller, for example, your ZIP code and country information.\nThis information enables sellers to calculate any necessary transaction taxes that they have to remit to the government (such as sales tax or value-added tax) and is provided as a disbursement report. In rare circumstances, AWS might have to provide the seller with your email address, so that they can contact you regarding questions related to the sale (for example, tax questions).\nFor similar reasons, AWS shares the legal entity name of the seller on the buyer's purchase invoice. If you need additional information about the seller for tax or related reasons, contact Support.\nView your Reserved Instances\nYou can view the Reserved Instances you've purchased using the Amazon EC2 console, or a command line tool.\nTo view your Reserved Instances in the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Reserved Instances.\nYour queued, active, and retired Reserved Instances are listed. The State column displays the state.\nIf you are a seller in the Reserved Instance Marketplace, the My Listings tab displays the status of a reservation that's listed in the Reserved Instance Marketplace. For more information, see Reserved Instance listing states.\nTo view your Reserved Instances using the command line\ndescribe-reserved-instances (AWS CLI)\nGet-EC2ReservedInstance (Tools for Windows PowerShell)\nCancel a queued purchase\nYou can queue a purchase up to three years in advance. You can cancel a queued purchase any time before its scheduled time.\nTo cancel a queued purchase\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Reserved Instances.\nSelect one or more Reserved Instances.\nChoose Actions, Delete queued Reserved Instances.\nWhen prompted for confirmation, choose Delete, and then Close.\nTo cancel a queued purchase using the command line\ndelete-queued-reserved-instances (AWS CLI)\nRemove-EC2QueuedReservedInstance (Tools for Windows PowerShell)\nRenew a Reserved Instance\nYou can renew a Reserved Instance before it is scheduled to expire. Renewing a Reserved Instance queues the purchase of a Reserved Instance with the same configuration until the current Reserved Instance expires.\nTo renew a Reserved Instance using a queued purchase using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Reserved Instances.\nSelect the Reserved Instance to renew.\nChoose Actions, Renew Reserved Instances.\nTo complete the order, choose Order all, and then Close."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html",
        "content": "The Amazon EC2 Reserved Instance Marketplace is a platform that facilitates the sale of unused Standard Reserved Instances from AWS customers and third-party sellers. These Reserved Instances can vary in term lengths and pricing options. You might want to sell your Reserved Instances when you no longer need them, such as when you move your instances to a new AWS Region, change to a different instance type, finish projects before the Reserved Instance term expires, your business needs change, or you have excess capacity.\nAs soon as you list your Reserved Instances in the Reserved Instance Marketplace, they are available for potential buyers to find. All Reserved Instances are grouped according to the duration of the term remaining and the hourly price.\nTo fulfill a buyer's request to purchase a third-party seller\u2019s Reserved Instance via the Reserved Instance Marketplace, AWS first sells the Reserved Instance with the lowest upfront price in the specified grouping. Then, AWS sells the Reserved Instance with the next lowest price, until the buyer's entire order is fulfilled. AWS then processes the transactions and transfers ownership of the Reserved Instances to the buyer.\nYou own your Reserved Instance until it's sold. After the sale, you've given up the capacity reservation and the discounted recurring fees. If you continue to use your instance, AWS charges you the On-Demand price starting from the time that your Reserved Instance was sold.\nIf you want to sell your unused Reserved Instances on the Reserved Instance Marketplace, you must meet certain eligibility criteria.\nFor information about buying Reserved Instances on the Reserved Instance Marketplace, see Buy from the Reserved Instance Marketplace.\nContents\nRestrictions and limitations\nRegister as a seller\nBank account for disbursement\nTax information\nPrice your Reserved Instances\nList your Reserved Instances\nReserved Instance listing states\nLifecycle of a listing\nAfter your Reserved Instance is sold\nGetting paid\nInformation shared with the buyer\nRestrictions and limitations\nBefore you can sell your unused reservations, you must register as a seller in the Reserved Instance Marketplace. For information, see Register as a seller.\nThe following limitations and restrictions apply when selling Reserved Instances:\nOnly Amazon EC2 Standard regional and zonal Reserved Instances can be sold in the Reserved Instance Marketplace.\nAmazon EC2 Convertible Reserved Instances can't be sold in the Reserved Instance Marketplace.\nReserved Instances for other AWS services, such as Amazon RDS and Amazon ElastiCache, cannot be sold in the Reserved Instance Marketplace.\nThere must be at least one month remaining in the term of the Standard Reserved Instance.\nYou can't sell a Standard Reserved Instance in a Region that is disabled by default.\nThe minimum price allowed in the Reserved Instance Marketplace is $0.00.\nYou can sell No Upfront, Partial Upfront, or All Upfront Reserved Instances in the Reserved Instance Marketplace as long as they have been active in your account for at least 30 days. Additionally, if there is an upfront payment on a Reserved Instance, it can only be sold after AWS has received the upfront payment.\nYou can't sell a Reserved Instance in the Reserved Instance Marketplace if you purchased it using a volume discount.\nYou cannot modify your listing in the Reserved Instance Marketplace directly. However, you can change your listing by first canceling it and then creating another listing with new parameters. For information, see Price your Reserved Instances. You can also modify your Reserved Instances before listing them. For information, see Modify Reserved Instances.\nAWS charges a service fee of 12 percent of the total upfront price of each Standard Reserved Instance you sell in the Reserved Instance Marketplace. The upfront price is the price the seller is charging for the Standard Reserved Instance.\nWhen you register as a seller, the bank you specify must have a US address. For more information, see Additional seller requirements for paid products in the AWS Marketplace Seller Guide.\nAmazon Web Services India Private Limited (AWS India) customers can't sell Reserved Instances in the Reserved Instance Marketplace even if they have a US bank account. For more information, see What are the differences between AWS accounts and AWS India accounts?\nRegister as a seller\nNote\nOnly the AWS account root user can register an account as a seller.\nTo sell in the Reserved Instance Marketplace, you must first register as a seller. During registration, you provide the following information:\nBank information\u2014AWS must have your bank information in order to disburse funds collected when you sell your reservations. The bank you specify must have a US address. For more information, see Bank account for disbursement.\nTax information\u2014All sellers are required to complete a tax information interview to determine any necessary tax reporting obligations. For more information, see Tax information.\nAfter AWS receives your completed seller registration, you receive an email confirming your registration and informing you that you can get started selling in the Reserved Instance Marketplace.\nBank account for disbursement\nAWS must have your bank information in order to disburse funds collected when you sell your Reserved Instance. The bank you specify must have a US address. For more information, see Additional seller requirements for paid products in the AWS Marketplace Seller Guide.\nTo register a default bank account for disbursements\nOpen the Reserved Instance Marketplace Seller Registration page and sign in using your AWS credentials.\nOn the Manage Bank Account page, provide the following information about the bank through to receive payment:\nBank account holder name\nRouting number\nAccount number\nBank account type\nNote\nIf you are using a corporate bank account, you are prompted to send the information about the bank account via fax (1-206-765-3424).\nAfter registration, the bank account provided is set as the default, pending verification with the bank. It can take up to two weeks to verify a new bank account, during which time you can't receive disbursements. For an established account, it usually takes about two days for disbursements to complete.\nTo change the default bank account for disbursement\nOn the Reserved Instance Marketplace Seller Registration page, sign in with the account that you used when you registered.\nOn the Manage Bank Account page, add a new bank account or modify the default bank account as needed.\nTax information\nYour sale of Reserved Instances might be subject to a transaction-based tax, such as sales tax or value-added tax. You should check with your business's tax, legal, finance, or accounting department to determine if transaction-based taxes are applicable. You are responsible for collecting and sending the transaction-based taxes to the appropriate tax authority.\nAs part of the seller registration process, you must complete a tax interview in the Seller Registration Portal. The interview collects your tax information and populates an IRS form W-9, W-8BEN, or W-8BEN-E, which is used to determine any necessary tax reporting obligations.\nThe tax information you enter as part of the tax interview might differ depending on whether you operate as an individual or business, and whether you or your business are a US or non-US person or entity. As you fill out the tax interview, keep in mind the following:\nInformation provided by AWS, including the information in this topic, does not constitute tax, legal, or other professional advice. To find out how the IRS reporting requirements might affect your business, or if you have other questions, contact your tax, legal, or other professional advisor.\nTo fulfill the IRS reporting requirements as efficiently as possible, answer all questions and enter all information requested during the interview.\nCheck your answers. Avoid misspellings or entering incorrect tax identification numbers. They can result in an invalidated tax form.\nBased on your tax interview responses and IRS reporting thresholds, Amazon might file Form 1099-K. Amazon mails a copy of your Form 1099-K on or before January 31 in the year following the year that your tax account reaches the threshold levels. For example, if your account reaches the threshold in 2018, your Form 1099-K is mailed on or before January 31, 2019.\nFor more information about IRS requirements and Form 1099-K, see Form 1099-K FAQs on the IRS website.\nPrice your Reserved Instances\nWhen setting the price for your Reserved Instances, consider the following:\nUpfront price \u2013 The upfront price is the only price that you can specify for the Reserved Instance that you're selling. The upfront price is the one-time price that the buyer pays when they purchase a Reserved Instance.\nBecause the value of Reserved Instances decreases over time, by default, AWS can set prices to decrease in equal increments month over month. However, you can set different upfront prices based on when your reservation sells. For example, if your Reserved Instance has nine months of its term remaining, you can specify the amount that you would accept if a customer were to purchase that Reserved Instance with nine months remaining. You could set another price with five months remaining, and yet another price with one month remaining.\nThe minimum allowed price in the Reserved Instance Marketplace is $0.00.\nLimits \u2013 The following limits for selling Reserved Instances apply to the lifetime of your AWS account. They are not annual limits.\nYou can sell up to $50,000 in Reserved Instances.\nYou can sell up to 5,000 Reserved Instances.\nThese limits typically can't be increased, but will be evaluated on a case-by-case basis if requested. To request a limit increase, complete the Service limit increase form. For Limit type, choose EC2 Reserved Instance Sales.\nCan't modify \u2013 You cannot modify your listing directly. However, you can change your listing by first canceling it and then creating another listing with new parameters.\nCan cancel \u2013 You can cancel your listing at any time, as long as it's in the active state. You cannot cancel the listing if it's already matched or being processed for a sale. If some of the instances in your listing are matched and you cancel the listing, only the remaining unmatched instances are removed from the listing.\nList your Reserved Instances\nAs a registered seller, you can choose to sell one or more of your Reserved Instances. You can choose to sell all of them in one listing or in portions. In addition, you can list Reserved Instances with any configuration of instance type, platform, and scope.\nThe console determines a suggested price. It checks for offerings that match your Reserved Instance and matches the one with the lowest price. Otherwise, it calculates a suggested price based on the cost of the Reserved Instance for its remaining time. If the calculated value is less than $1.01, the suggested price is $1.01.\nIf you cancel your listing and a portion of that listing has already been sold, the cancellation is not effective on the portion that has been sold. Only the unsold portion of the listing is no longer available in the Reserved Instance Marketplace.\nTo list a Reserved Instance in the Reserved Instance Marketplace using the AWS Management Console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Reserved Instances.\nSelect the Reserved Instances to list, and choose Actions, Sell Reserved Instances.\nOn the Configure Your Reserved Instance Listing page, set the number of instances to sell and the upfront price for the remaining term in the relevant columns. See how the value of your reservation changes over the remainder of the term by selecting the arrow next to the Months Remaining column.\nIf you are an advanced user and you want to customize the pricing, you can enter different values for the subsequent months. To return to the default linear price drop, choose Reset.\nChoose Continue when you are finished configuring your listing.\nConfirm the details of your listing, on the Confirm Your Reserved Instance Listing page and if you're satisfied, choose List Reserved Instance.\nTo view your listings in the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Reserved Instances.\nSelect the Reserved Instance that you've listed and choose the My Listings tab near the bottom of the page.\nTo manage Reserved Instances in the Reserved Instance Marketplace using the AWS CLI\nGet a list of your Reserved Instances by using the describe-reserved-instances command.\nNote the ID of the Reserved Instance you want to list and call create-reserved-instances-listing. You must specify the ID of the Reserved Instance, the number of instances, and the pricing schedule.\nTo view your listing, use the describe-reserved-instances-listings command.\nTo cancel your listing, use the cancel-reserved-instances-listings command.\nReserved Instance listing states\nListing State on the My Listings tab of the Reserved Instances page displays the current status of your listings:\nThe information displayed by Listing State is about the status of your listing in the Reserved Instance Marketplace. It is different from the status information that is displayed by the State column in the Reserved Instances page. This State information is about your reservation.\nactive\u2014The listing is available for purchase.\ncanceled\u2014The listing is canceled and isn't available for purchase in the Reserved Instance Marketplace.\nclosed\u2014The Reserved Instance is not listed. A Reserved Instance might be closed because the sale of the listing was completed.\nLifecycle of a listing\nWhen all the instances in your listing are matched and sold, the My Listings tab shows that the Total instance count matches the count listed under Sold. Also, there are no Available instances left for your listing, and its Status is closed.\nWhen only a portion of your listing is sold, AWS retires the Reserved Instances in the listing and creates the number of Reserved Instances equal to the Reserved Instances remaining in the count. So, the listing ID and the listing that it represents, which now has fewer reservations for sale, is still active.\nAny future sales of Reserved Instances in this listing are processed this way. When all the Reserved Instances in the listing are sold, AWS marks the listing as closed.\nFor example, you create a listing Reserved Instances listing ID 5ec28771-05ff-4b9b-aa31-9e57dexample with a listing count of 5.\nThe My Listings tab in the Reserved Instance console page displays the listing this way:\nReserved Instance listing ID 5ec28771-05ff-4b9b-aa31-9e57dexample\nTotal reservation count = 5\nSold = 0\nAvailable = 5\nStatus = active\nA buyer purchases two of the reservations, which leaves a count of three reservations still available for sale. Because of this partial sale, AWS creates a new reservation with a count of three to represent the remaining reservations that are still for sale.\nThis is how your listing looks in the My Listings tab:\nReserved Instance listing ID 5ec28771-05ff-4b9b-aa31-9e57dexample\nTotal reservation count = 5\nSold = 2\nAvailable = 3\nStatus = active\nIf you cancel your listing and a portion of that listing has already sold, the cancelation is not effective on the portion that has been sold. Only the unsold portion of the listing is no longer available in the Reserved Instance Marketplace.\nAfter your Reserved Instance is sold\nWhen your Reserved Instance is sold, AWS sends you an email notification. Each day that there is any kind of activity, you receive one email notification capturing all the activities of the day. Activities can include when you create or sell a listing, or when AWS sends funds to your account.\nTo track the status of a Reserved Instance listing in the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation page, choose Reserved Instances.\nChoose the My Listings tab.\nThe My Listings tab contains the Listing State value. It also contains information about the term, listing price, and a breakdown of how many instances in the listing are available, pending, sold, and canceled.\nYou can also use the describe-reserved-instances-listings command with the appropriate filter to obtain information about your listings.\nGetting paid\nAs soon as AWS receives funds from the buyer, a message is sent to the registered owner account email for the sold Reserved Instance.\nAWS sends an Automated Clearing House (ACH) wire transfer to your specified bank account. Typically, this transfer occurs between one to three days after your Reserved Instance has been sold. Disbursements take place once a day. You will receive an email with a disbursement report after the funds are released. Keep in mind that you can't receive disbursements until AWS receives verification from your bank. This can take up to two weeks.\nThe Reserved Instance that you sold continues to appear when you describe your Reserved Instances.\nYou receive a cash disbursement for your Reserved Instances through a wire transfer directly into your bank account. AWS charges a service fee of 12 percent of the total upfront price of each Reserved Instance you sell in the Reserved Instance Marketplace.\nInformation shared with the buyer\nWhen you sell in the Reserved Instance Marketplace, AWS shares your company\u2019s legal name on the buyer\u2019s statement in accordance with US regulations. In addition, if the buyer calls Support because the buyer needs to contact you for an invoice or for some other tax-related reason, AWS might need to provide the buyer with your email address so that the buyer can contact you directly.\nFor similar reasons, the buyer's ZIP code and country information are provided to the seller in the disbursement report. As a seller, you might need this information to accompany any necessary transaction taxes that you remit to the government (such as sales tax and value-added tax).\nAWS cannot offer tax advice, but if your tax specialist determines that you need specific additional information, contact Support."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html",
        "content": "When your needs change, you can modify your Standard or Convertible Reserved Instances and continue to benefit from the billing benefit. You can modify attributes such as the Availability Zone, instance size (within the same instance family and generation), and scope of your Reserved Instance.\nNote\nYou can also exchange a Convertible Reserved Instance for another Convertible Reserved Instance with a different configuration. For more information, see Exchange Convertible Reserved Instances.\nYou can modify all or a subset of your Reserved Instances. You can separate your original Reserved Instances into two or more new Reserved Instances. For example, if you have a reservation for 10 instances in us-east-1a and decide to move 5 instances to us-east-1b, the modification request results in two new reservations: one for 5 instances in us-east-1a and the other for 5 instances in us-east-1b.\nYou can also merge two or more Reserved Instances into a single Reserved Instance. For example, if you have four t2.small Reserved Instances of one instance each, you can merge them to create one t2.large Reserved Instance. For more information, see Support for modifying instance sizes.\nAfter modification, the benefit of the Reserved Instances is applied only to instances that match the new parameters. For example, if you change the Availability Zone of a reservation, the capacity reservation and pricing benefits are automatically applied to instance usage in the new Availability Zone. Instances that no longer match the new parameters are charged at the On-Demand rate, unless your account has other applicable reservations.\nIf your modification request succeeds:\nThe modified reservation becomes effective immediately and the pricing benefit is applied to the new instances beginning at the hour of the modification request. For example, if you successfully modify your reservations at 9:15PM, the pricing benefit transfers to your new instance at 9:00PM. You can get the effective date of the modified Reserved Instances by using the describe-reserved-instances command.\nThe original reservation is retired. Its end date is the start date of the new reservation, and the end date of the new reservation is the same as the end date of the original Reserved Instance. If you modify a three-year reservation that had 16 months left in its term, the resulting modified reservation is a 16-month reservation with the same end date as the original one.\nThe modified reservation lists a $0 fixed price and not the fixed price of the original reservation.\nThe fixed price of the modified reservation does not affect the discount pricing tier calculations applied to your account, which are based on the fixed price of the original reservation.\nIf your modification request fails, your Reserved Instances maintain their original configuration, and are immediately available for another modification request.\nThere is no fee for modification, and you do not receive any new bills or invoices.\nYou can modify your reservations as frequently as you like, but you cannot change or cancel a pending modification request after you submit it. After the modification has completed successfully, you can submit another modification request to roll back any changes you made, if needed.\nContents\nRequirements and restrictions for modification\nSupport for modifying instance sizes\nSubmit modification requests\nTroubleshoot modification requests\nRequirements and restrictions for modification\nYou can modify these attributes as follows.\nModifiable attribute Supported platforms Limitations and considerations\nChange Availability Zones within the same Region\nLinux and Windows\n-\nChange the scope from Availability Zone to Region and vice versa\nLinux and Windows\nA zonal Reserved Instance is scoped to an Availability Zone and reserves capacity in that Availability Zone. If you change the scope from Availability Zone to Region (in other words, from zonal to regional), you lose the capacity reservation benefit.\nA regional Reserved Instance is scoped to a Region. Your Reserved Instance discount can apply to instances running in any Availability Zone in that Region. Furthermore, the Reserved Instance discount applies to instance usage across all sizes in the selected instance family. If you change the scope from Region to Availability Zone (in other words, from regional to zonal), you lose Availability Zone flexibility and instance size flexibility (if applicable).\nFor more information, see How Reserved Instance discounts are applied.\nChange the instance size within the same instance family and generation\nLinux/UNIX only\nInstance size flexibility is not available for Reserved Instances on the other platforms, which include Linux with SQL Server Standard, Linux with SQL Server Web, Linux with SQL Server Enterprise, Red Hat Enterprise Linux, SUSE Linux, Windows, Windows with SQL Standard, Windows with SQL Server Enterprise, and Windows with SQL Server Web.\nThe reservation must use default tenancy. Some instance families are not supported, because there are no other sizes available. For more information, see Support for modifying instance sizes\nRequirements\nAmazon EC2 processes your modification request if there is sufficient capacity for your new configuration (if applicable), and if the following conditions are met:\nThe Reserved Instance cannot be modified before or at the same time that you purchase it\nThe Reserved Instance must be active\nThere cannot be a pending modification request\nThe Reserved Instance is not listed in the Reserved Instance Marketplace\nThere must be a match between the instance size footprint of the original reservation and the new configuration. For more information, see Support for modifying instance sizes.\nThe original Reserved Instances are all Standard Reserved Instances or all Convertible Reserved Instances, not some of each type\nThe original Reserved Instances must expire within the same hour, if they are Standard Reserved Instances\nThe Reserved Instance must support instance size flexibility. For the list of Reserved Instances that don't support instance size flexibility, see Instance size flexibility.\nSupport for modifying instance sizes\nYou can modify the instance size of a Reserved Instance if the following requirements are met.\nRequirements\nThe platform is Linux/UNIX.\nYou must select another instance size in the same instance family (indicated by a letter, for example, T) and generation (indicated by a number, for example, 2).\nFor example, you can modify a Reserved Instance from t2.small to t2.large because they're both in the same T2 family and generation. But you can't modify a Reserved Instance from T2 to M2 or from T2 to T3, because in both these examples, the target instance family and generation are not the same as the original Reserved Instance.\nYou can modify the instance size of a Reserved Instance only if it supports instance size flexibility. For the list of Reserved Instances that don't support instance size flexibility, see Instance size flexibility.\nYou can't modify the instance size of Reserved Instances for t1.micro instances, because t1.micro has only one size.\nThe original and new Reserved Instance must have the same instance size footprint.\nContents\nInstance size footprint\nNormalization factors for bare metal instances\nInstance size footprint\nEach Reserved Instance has an instance size footprint, which is determined by the normalization factor of the instance size and the number of instances in the reservation. When you modify the instance sizes in an Reserved Instance, the footprint of the new configuration must match that of the original configuration, otherwise the modification request is not processed.\nTo calculate the instance size footprint of a Reserved Instance, multiply the number of instances by the normalization factor. In the Amazon EC2 console, the normalization factor is measured in units. The following table describes the normalization factor for the instance sizes in an instance family. For example, t2.medium has a normalization factor of 2, so a reservation for four t2.medium instances has a footprint of 8 units.\nInstance size Normalization factor\nnano 0.25\nmicro 0.5\nsmall 1\nmedium 2\nlarge 4\nxlarge 8\n2xlarge 16\n3xlarge 24\n4xlarge 32\n6xlarge 48\n8xlarge 64\n9xlarge 72\n10xlarge 80\n12xlarge 96\n16xlarge 128\n18xlarge 144\n24xlarge 192\n32xlarge 256\n48xlarge 384\n56xlarge 448\n112xlarge 896\nYou can allocate your reservations into different instance sizes across the same instance family as long as the instance size footprint of your reservation remains the same. For example, you can divide a reservation for one t2.large (1 @ 4 units) instance into four t2.small (4 @ 1 unit) instances. Similarly, you can combine a reservation for four t2.small instances into one t2.large instance. However, you cannot change your reservation for two t2.small instances into one t2.large instance because the footprint of the new reservation (4 units) is larger than the footprint of the original reservation (2 units).\nIn the following example, you have a reservation with two t2.micro instances (1 unit) and a reservation with one t2.small instance (1 unit). If you merge both of these reservations to a single reservation with one t2.medium instance (2 units), the footprint of the new reservation equals the footprint of the combined reservations.\nYou can also modify a reservation to divide it into two or more reservations. In the following example, you have a reservation with a t2.medium instance (2 units). You can divide the reservation into two reservations, one with two t2.nano instances (.5 units) and the other with three t2.micro instances (1.5 units).\nNormalization factors for bare metal instances\nYou can modify a reservation with metal instances using other sizes within the same instance family. Similarly, you can modify a reservation with instances other than bare metal instances using the metal size within the same instance family. Generally, a bare metal instance is the same size as the largest available instance size within the same instance family. For example, an i3.metal instance is the same size as an i3.16xlarge instance, so they have the same normalization factor.\nThe following table describes the normalization factor for the bare metal instance sizes in the instance families that have bare metal instances. The normalization factor for metal instances depends on the instance family, unlike the other instance sizes.\nInstance size Normalization factor\na1.metal 32\nm5zn.metal | x2iezn.metal z1d.metal 96\nc6g.metal | c6gd.metal | i3.metal | m6g.metal | m6gd.metal | r6g.metal | r6gd.metal | x2gd.metal 128\nc5n.metal 144\nc5.metal | c5d.metal | i3en.metal | m5.metal | m5d.metal | m5dn.metal | m5n.metal | r5.metal | r5b.metal | r5d.metal | r5dn.metal | r5n.metal 192\nc6i.metal | c6id.metal | m6i.metal | m6id.metal | r6d.metal | r6id.metal 256\nu-18tb1.metal | u-24tb1.metal 448\nu-6tb1.metal | u-9tb1.metal | u-12tb1.metal 896\nFor example, an i3.metal instance has a normalization factor of 128. If you purchase an i3.metal default tenancy Amazon Linux/Unix Reserved Instance, you can divide the reservation as follows:\nAn i3.16xlarge is the same size as an i3.metal instance, so its normalization factor is 128 (128/1). The reservation for one i3.metal instance can be modified into one i3.16xlarge instance.\nAn i3.8xlarge is half the size of an i3.metal instance, so its normalization factor is 64 (128/2). The reservation for one i3.metal instance can be divided into two i3.8xlarge instances.\nAn i3.4xlarge is a quarter the size of an i3.metal instance, so its normalization factor is 32 (128/4). The reservation for one i3.metal instance can be divided into four i3.4xlarge instances.\nSubmit modification requests\nBefore you modify your Reserved Instances, ensure that you have read the applicable restrictions. Before you modify the instance size, calculate the total instance size footprint of the original reservations that you want to modify and ensure that it matches the total instance size footprint of your new configurations.\nTo modify your Reserved Instances using the AWS Management Console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nOn the Reserved Instances page, select one or more Reserved Instances to modify, and choose Actions, Modify Reserved Instances.\nNote\nIf your Reserved Instances are not in the active state or cannot be modified, Modify Reserved Instances is disabled.\nThe first entry in the modification table displays attributes of the selected Reserved Instances, and at least one target configuration beneath it. The Units column displays the total instance size footprint. Choose Add for each new configuration to add. Modify the attributes as needed for each configuration.\nScope: Choose whether the configuration applies to an Availability Zone or to the whole Region.\nAvailability Zone: Choose the required Availability Zone. Not applicable for regional Reserved Instances.\nInstance type: Select the required instance type. The combined configurations must equal the instance size footprint of your original configurations.\nCount: Specify the number of instances. To split the Reserved Instances into multiple configurations, reduce the count, choose Add, and specify a count for the additional configuration. For example, if you have a single configuration with a count of 10, you can change its count to 6 and add a configuration with a count of 4. This process retires the original Reserved Instance after the new Reserved Instances are activated.\nChoose Continue.\nTo confirm your modification choices when you finish specifying your target configurations, choose Submit modifications.\nYou can determine the status of your modification request by looking at the State column in the Reserved Instances screen. The following are the possible states.\nactive (pending modification) \u2014 Transition state for original Reserved Instances\nretired (pending modification) \u2014 Transition state for original Reserved Instances while new Reserved Instances are being created\nretired \u2014 Reserved Instances successfully modified and replaced\nactive \u2014 One of the following:\nNew Reserved Instances created from a successful modification request\nOriginal Reserved Instances after a failed modification request\nTo modify your Reserved Instances using the command line\nTo modify your Reserved Instances, you can use one of the following commands:\nmodify-reserved-instances (AWS CLI)\nEdit-EC2ReservedInstance (AWS Tools for Windows PowerShell)\nTo get the status of your modification request (processing, fulfilled, or failed), use one of the following commands:\ndescribe-reserved-instances-modifications (AWS CLI)\nGet-EC2ReservedInstancesModification (AWS Tools for Windows PowerShell)\nTroubleshoot modification requests\nIf the target configuration settings that you requested were unique, you receive a message that your request is being processed. At this point, Amazon EC2 has only determined that the parameters of your modification request are valid. Your modification request can still fail during processing due to unavailable capacity.\nIn some situations, you might get a message indicating incomplete or failed modification requests instead of a confirmation. Use the information in such messages as a starting point for resubmitting another modification request. Ensure that you have read the applicable restrictions before submitting the request.\nNot all selected Reserved Instances can be processed for modification\nAmazon EC2 identifies and lists the Reserved Instances that cannot be modified. If you receive a message like this, go to the Reserved Instances page in the Amazon EC2 console and check the information for the Reserved Instances.\nError in processing your modification request\nYou submitted one or more Reserved Instances for modification and none of your requests can be processed. Depending on the number of reservations you are modifying, you can get different versions of the message.\nAmazon EC2 displays the reasons why your request cannot be processed. For example, you might have specified the same target configuration\u2014a combination of Availability Zone and platform\u2014for one or more subsets of the Reserved Instances you are modifying. Try submitting the modification requests again, but ensure that the instance details of the reservations match, and that the target configurations for all subsets being modified are unique."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-convertible-exchange.html",
        "content": "You can exchange one or more Convertible Reserved Instances for another Convertible Reserved Instance with a different configuration, including instance family, operating system, and tenancy. There are no limits to how many times you perform an exchange, as long as the new Convertible Reserved Instance is of an equal or higher value than the Convertible Reserved Instances that you are exchanging.\nWhen you exchange your Convertible Reserved Instance, the number of instances for your current reservation is exchanged for a number of instances that cover the equal or higher value of the configuration of the new Convertible Reserved Instance. Amazon EC2 calculates the number of Reserved Instances that you can receive as a result of the exchange.\nYou can't exchange Standard Reserved Instances, but you can modify them. For more information, see Modify Reserved Instances .\nContents\nRequirements for exchanging Convertible Reserved Instances\nCalculate Convertible Reserved Instances exchanges\nMerge Convertible Reserved Instances\nExchange a portion of a Convertible Reserved Instance\nSubmit exchange requests\nRequirements for exchanging Convertible Reserved Instances\nIf the following conditions are met, Amazon EC2 processes your exchange request. Your Convertible Reserved Instance must be:\nActive\nNot pending a previous exchange request\nHave at least 24 hours remaining before it expires\nThe following rules apply:\nConvertible Reserved Instances can only be exchanged for other Convertible Reserved Instances currently offered by AWS.\nConvertible Reserved Instances are associated with a specific Region, which is fixed for the duration of the reservation's term. You cannot exchange a Convertible Reserved Instance for a Convertible Reserved Instance in a different Region.\nYou can exchange one or more Convertible Reserved Instances at a time for one Convertible Reserved Instance only.\nTo exchange a portion of a Convertible Reserved Instance, you can modify it into two or more reservations, and then exchange one or more of the reservations for a new Convertible Reserved Instance. For more information, see Exchange a portion of a Convertible Reserved Instance. For more information about modifying your Reserved Instances, see Modify Reserved Instances.\nAll Upfront Convertible Reserved Instances can be exchanged for Partial Upfront Convertible Reserved Instances, and vice versa.\nNote\nIf the total upfront payment required for the exchange (true-up cost) is less than $0.00, AWS automatically gives you a quantity of instances in the Convertible Reserved Instance that ensures that true-up cost is $0.00 or more.\nNote\nIf the total value (upfront price + hourly price * number of remaining hours) of the new Convertible Reserved Instance is less than the total value of the exchanged Convertible Reserved Instance, AWS automatically gives you a quantity of instances in the Convertible Reserved Instance that ensures that the total value is the same or higher than that of the exchanged Convertible Reserved Instance.\nTo benefit from better pricing, you can exchange a No Upfront Convertible Reserved Instance for an All Upfront or Partial Upfront Convertible Reserved Instance.\nYou cannot exchange All Upfront and Partial Upfront Convertible Reserved Instances for No Upfront Convertible Reserved Instances.\nYou can exchange a No Upfront Convertible Reserved Instance for another No Upfront Convertible Reserved Instance only if the new Convertible Reserved Instance's hourly price is the same or higher than the exchanged Convertible Reserved Instance's hourly price.\nNote\nIf the total value (hourly price * number of remaining hours) of the new Convertible Reserved Instance is less than the total value of the exchanged Convertible Reserved Instance, AWS automatically gives you a quantity of instances in the Convertible Reserved Instance that ensures that the total value is the same or higher than that of the exchanged Convertible Reserved Instance.\nIf you exchange multiple Convertible Reserved Instances that have different expiration dates, the expiration date for the new Convertible Reserved Instance is the date that's furthest in the future.\nIf you exchange a single Convertible Reserved Instance, it must have the same term (1-year or 3-years) as the new Convertible Reserved Instance. If you merge multiple Convertible Reserved Instances with different term lengths, the new Convertible Reserved Instance has a 3-year term. For more information, see Merge Convertible Reserved Instances.\nWhen Amazon EC2 exchanges a Convertible Reserved Instance, it retires the associated reservation, and transfers the end date to the new reservation. After the exchange, Amazon EC2 sets both the end date for the old reservation and the start date for the new reservation equal to the date of the exchange. For example, if you exchange a three-year reservation that had 16 months left in its term, the new reservation is a 16-month reservation with the same end date as the reservation from the Convertible Reserved Instance that you exchanged.\nCalculate Convertible Reserved Instances exchanges\nExchanging Convertible Reserved Instances is free. However, you might be required to pay a true-up cost, which is a prorated upfront cost of the difference between the Convertible Reserved Instances that you had and the new Convertible Reserved Instances that you receive from the exchange.\nEach Convertible Reserved Instance has a list value. This list value is compared to the list value of the Convertible Reserved Instances that you want in order to determine how many instance reservations you can receive from the exchange.\nFor example: You have 1 x $35-list value Convertible Reserved Instance that you want to exchange for a new instance type with a list value of $10.\n$35/$10 = 3.5\nYou can exchange your Convertible Reserved Instance for three $10 Convertible Reserved Instances. It's not possible to purchase half reservations; therefore you must purchase an additional Convertible Reserved Instance to cover the remainder:\n3.5 = 3 whole Convertible Reserved Instances + 1 additional Convertible Reserved Instance\nThe fourth Convertible Reserved Instance has the same end date as the other three. If you are exchanging Partial or All Upfront Convertible Reserved Instances, you pay the true-up cost for the fourth reservation. If the remaining upfront cost of your Convertible Reserved Instances is $500, and the new reservation would normally cost $600 on a prorated basis, you are charged $100.\n$600 prorated upfront cost of new reservations - $500 remaining upfront cost of old reservations = $100 difference\nMerge Convertible Reserved Instances\nIf you merge two or more Convertible Reserved Instances, the term of the new Convertible Reserved Instance must be the same as the old Convertible Reserved Instances, or the highest of the Convertible Reserved Instances. The expiration date for the new Convertible Reserved Instance is the expiration date that's furthest in the future.\nFor example, you have the following Convertible Reserved Instances in your account:\nReserved Instance ID Term Expiration date\naaaa1111 1-year 2018-12-31\nbbbb2222 1-year 2018-07-31\ncccc3333 3-year 2018-06-30\ndddd4444 3-year 2019-12-31\nYou can merge aaaa1111 and bbbb2222 and exchange them for a 1-year Convertible Reserved Instance. You cannot exchange them for a 3-year Convertible Reserved Instance. The expiration date of the new Convertible Reserved Instance is 2018-12-31.\nYou can merge bbbb2222 and cccc3333 and exchange them for a 3-year Convertible Reserved Instance. You cannot exchange them for a 1-year Convertible Reserved Instance. The expiration date of the new Convertible Reserved Instance is 2018-07-31.\nYou can merge cccc3333 and dddd4444 and exchange them for a 3-year Convertible Reserved Instance. You cannot exchange them for a 1-year Convertible Reserved Instance. The expiration date of the new Convertible Reserved Instance is 2019-12-31.\nExchange a portion of a Convertible Reserved Instance\nYou can use the modification process to split your Convertible Reserved Instance into smaller reservations, and then exchange one or more of the new reservations for a new Convertible Reserved Instance. The following examples demonstrate how you can do this.\nExample: Convertible Reserved Instance with multiple instances\nIn this example, you have a t2.micro Convertible Reserved Instance with four instances in the reservation. To exchange two t2.micro instances for an m4.xlarge instance:\nModify the t2.micro Convertible Reserved Instance by splitting it into two t2.micro Convertible Reserved Instances with two instances each.\nExchange one of the new t2.micro Convertible Reserved Instances for an m4.xlarge Convertible Reserved Instance.\nExample: Convertible Reserved Instance with a single instance\nIn this example, you have a t2.large Convertible Reserved Instance. To change it to a smaller t2.medium instance and a m3.medium instance:\nModify the t2.large Convertible Reserved Instance by splitting it into two t2.medium Convertible Reserved Instances. A single t2.large instance has the same instance size footprint as two t2.medium instances.\nExchange one of the new t2.medium Convertible Reserved Instances for an m3.medium Convertible Reserved Instance.\nFor more information, see Support for modifying instance sizes and Submit exchange requests.\nSubmit exchange requests\nYou can exchange your Convertible Reserved Instances using the Amazon EC2 console or a command line tool.\nExchange a Convertible Reserved Instance using the console\nYou can search for Convertible Reserved Instances offerings and select your new configuration from the choices provided.\nTo exchange Convertible Reserved Instances using the Amazon EC2 console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nChoose Reserved Instances, select the Convertible Reserved Instances to exchange, and choose Actions, Exchange Reserved Instance.\nSelect the attributes of the desired configuration, and choose Find offering.\nSelect a new Convertible Reserved Instance. At the bottom of the screen, you can view the number of Reserved Instances that you receive for the exchange, and any additional costs.\nWhen you have selected a Convertible Reserved Instance that meets your needs, choose Review.\nChoose Exchange, and then Close.\nThe Reserved Instances that were exchanged are retired, and the new Reserved Instances are displayed in the Amazon EC2 console. This process can take a few minutes to propagate.\nExchange a Convertible Reserved Instance using the command line interface\nTo exchange a Convertible Reserved Instance, first find a new Convertible Reserved Instance that meets your needs:\ndescribe-reserved-instances-offerings (AWS CLI)\nGet-EC2ReservedInstancesOffering (Tools for Windows PowerShell)\nGet a quote for the exchange, which includes the number of Reserved Instances you get from the exchange, and the true-up cost for the exchange:\nget-reserved-instances-exchange-quote (AWS CLI)\nGetEC2-ReservedInstancesExchangeQuote (Tools for Windows PowerShell)\nFinally, perform the exchange:\naccept-reserved-instances-exchange-quote (AWS CLI)\nApprove-EC2ReservedInstancesExchangeQuote (Tools for Windows PowerShell)"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-limits.html",
        "content": "You can purchase new Reserved Instances each month. The number of new Reserved Instances that you can purchase each month is determined by your monthly quota, as follows:\nQuota description Default quota\nNew regional Reserved Instances\n20 per Region per month\nNew zonal Reserved Instances\n20 per Availability Zone per month\nFor example, in a Region with three Availability Zones, the default quota is 80 new Reserved Instances per month, calculated as follows:\n20 regional Reserved Instances for the Region\nPlus 60 zonal Reserved Instances (20 for each of the three Availability Zones)\nInstances in the running state count toward your quota. Instances that are in the pending, stopping, stopped, and hibernated states do not count towards your quota.\nView the number of Reserved Instances you have purchased\nThe number of Reserved Instances that you purchase is indicated by the Instance count field (console) or the InstanceCount parameter (AWS CLI). When you purchase new Reserved Instances, the quota is measured against the total instance count. For example, if you purchase a single Reserved Instance configuration with an instance count of 10, the purchase counts towards your quota as 10, not 1.\nYou can view how many Reserved Instances you have purchased by using the Amazon EC2 or the AWS CLI.\nConsole\nAWS CLI\nPowerShell\nTo view the number of Reserved Instances you have purchased\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Reserved Instances.\nSelect a Reserved Instance configuration from the table, and check the Instance count field.\nIn the following screenshot, the selected line represents a single Reserved Instance configuration for a t3.micro instance type. The Instance count column in the table view and the Instance count field in the detail view (outlined in the screenshot) indicate that there are 10 Reserved Instances for this configuration.\nConsiderations\nA regional Reserved Instance applies a discount to a running On-Demand Instance. The default On-Demand Instance limit is 20. You cannot exceed your running On-Demand Instance limit by purchasing regional Reserved Instances. For example, if you already have 20 running On-Demand Instances, and you purchase 20 regional Reserved Instances, the 20 regional Reserved Instances are used to apply a discount to the 20 running On-Demand Instances. If you purchase more regional Reserved Instances, you will not be able to launch more instances because you have reached your On-Demand Instance limit.\nBefore purchasing regional Reserved Instances, make sure your On-Demand Instance limit matches or exceeds the number of regional Reserved Instances you intend to own. If required, make sure you request an increase to your On-Demand Instance limit before purchasing more regional Reserved Instances.\nA zonal Reserved Instance\u2014a Reserved Instance that is purchased for a specific Availability Zone\u2014provides a capacity reservation as well as a discount. You can exceed your running On-Demand Instance limit by purchasing zonal Reserved Instances. For example, if you already have 20 running On-Demand Instances, and you purchase 20 zonal Reserved Instances, you can launch a further 20 On-Demand Instances that match the specifications of your zonal Reserved Instances, giving you a total of 40 running instances.\nView your Reserved Instance quotas and request a quota increase\nThe Amazon EC2 console provides quota information. You can also request an increase in your quotas. For more information, see View your current quotas and Request an increase."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html",
        "content": "A Spot Instance is an instance that uses spare EC2 capacity that is available for less than the On-Demand price. Because Spot Instances enable you to request unused EC2 instances at steep discounts, you can lower your Amazon EC2 costs significantly. The hourly price for a Spot Instance is called a Spot price. The Spot price of each instance type in each Availability Zone is set by Amazon EC2, and is adjusted gradually based on the long-term supply of and demand for Spot Instances. Your Spot Instance runs whenever capacity is available.\nSpot Instances are a cost-effective choice if you can be flexible about when your applications run and if your applications can be interrupted. For example, Spot Instances are well-suited for data analysis, batch jobs, background processing, and optional tasks. For more information, see Amazon EC2 Spot Instances.\nFor a comparison of the different purchasing options for EC2 instances, see Amazon EC2 billing and purchasing options.\nConcepts\nBefore you get started with Spot Instances, you should be familiar with the following concepts:\nSpot capacity pool \u2013 A set of unused EC2 instances with the same instance type (for example, m5.large) and Availability Zone.\nSpot price \u2013 The current price of a Spot Instance per hour.\nSpot Instance request \u2013 Requests a Spot Instance. When capacity is available, Amazon EC2 fulfills your request. A Spot Instance request is either one-time or persistent. Amazon EC2 automatically resubmits a persistent Spot Instance request after the Spot Instance associated with the request is interrupted.\nEC2 instance rebalance recommendation \u2013 Amazon EC2 emits an instance rebalance recommendation signal to notify you that a Spot Instance is at an elevated risk of interruption. This signal provides an opportunity to proactively rebalance your workloads across existing or new Spot Instances without having to wait for the two-minute Spot Instance interruption notice.\nSpot Instance interruption \u2013 Amazon EC2 terminates, stops, or hibernates your Spot Instance when Amazon EC2 needs the capacity back. Amazon EC2 provides a Spot Instance interruption notice, which gives the instance a two-minute warning before it is interrupted.\nDifferences between Spot Instances and On-Demand Instances\nThe following table lists the key differences between Spot Instances and On-Demand Instances.\nSpot Instances On-Demand Instances\nLaunch time\nCan only be launched immediately if the Spot Instance request is active and capacity is available.\nCan only be launched immediately if you make a manual launch request and capacity is available.\nAvailable capacity\nIf capacity is not available, the Spot Instance request continues to automatically make the launch request until capacity becomes available.\nIf capacity is not available when you make a launch request, you get an insufficient capacity error (ICE).\nHourly price\nThe hourly price for Spot Instances varies based on long-term supply and demand.\nThe hourly price for On-Demand Instances is static.\nRebalance recommendation The signal that Amazon EC2 emits for a running Spot Instance when the instance is at an elevated risk of interruption. You determine when an On-Demand Instance is interrupted (stopped, hibernated, or terminated).\nInstance interruption\nYou can stop and start an Amazon EBS-backed Spot Instance. In addition, Amazon EC2 can interrupt an individual Spot Instance if capacity is no longer available.\nYou determine when an On-Demand Instance is interrupted (stopped, hibernated, or terminated).\nPricing and savings\nYou pay the Spot price for Spot Instances, which is set by Amazon EC2 and adjusted gradually based on the long-term supply of and demand for Spot Instances. Your Spot Instances run until you terminate them, capacity is no longer available, or your Amazon EC2 Auto Scaling group terminates them during scale in.\nIf you or Amazon EC2 interrupts a running Spot Instance, you are charged for the seconds used or the full hour, or you receive no charge, depending on the operating system used and who interrupted the Spot Instance. For more information, see Billing for interrupted Spot Instances.\nSpot Instances are not covered by Savings Plans. If you have a Savings Plan, it does not provide additional savings on top of the savings that you already get from using Spot Instances. Furthermore, your spend on Spot Instances does not apply the commitments in your Compute Savings Plans.\nView prices\nTo view the current (updated every five minutes) lowest Spot price per AWS Region and instance type, see the Amazon EC2 Spot Instances Pricing page.\nTo view the Spot price history for the past three months, use the Amazon EC2 console or the describe-spot-price-history command. For more information, see Spot Instance pricing history.\nWe independently map Availability Zones to codes for each AWS account. Therefore, you can get different results for the same Availability Zone code (for example, us-west-2a) between different accounts.\nView savings\nYou can view the savings made from using Spot Instances for a single Spot Fleet or for all Spot Instances. You can view the savings made in the last hour or the last three days, and you can view the average cost per vCPU hour and per memory (GiB) hour. Savings are estimated and may differ from actual savings because they do not include the billing adjustments for your usage. For more information about viewing savings information, see Savings from purchasing Spot Instances.\nView billing\nYour bill provides details about your service usage. For more information, see Viewing your bill in the AWS Billing User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-best-practices.html",
        "content": "Amazon EC2 provides access to spare EC2 compute capacity in the AWS Cloud through Spot Instances at savings of up to 90% compared to On-Demand prices. The only difference between On-Demand Instances and Spot Instances is that Spot Instances can be interrupted by Amazon EC2, with two minutes of notice, if Amazon EC2 needs to reclaim the capacity. To ensure the best experience with Spot Instances, it's important to understand and apply best practices for their use.\nSpot Instances are recommended for stateless, fault-tolerant, flexible applications. For example, Spot Instances work well for big data, containerized workloads, CI/CD, stateless web servers, high performance computing (HPC), and rendering workloads.\nWhile running, Spot Instances are exactly the same as On-Demand Instances. However, Spot does not guarantee that you can keep your running instances long enough to finish your workloads. Spot also does not guarantee that you can get immediate availability of the instances that you are looking for, or that you can always get the aggregate capacity that you requested. Moreover, Spot Instance interruptions and capacity can change over time because Spot Instance availability varies based on supply and demand, and past performance isn\u2019t a guarantee of future results.\nSpot Instances are not suitable for workloads that are inflexible, stateful, fault-intolerant, or tightly coupled between instance nodes. We do not recommend Spot Instances for workloads that are intolerant of occasional periods when the entire target capacity is not completely available. While following Spot best practices to be flexible about instance types and Availability Zones provides the best chance for high availability, there are no guarantees that capacity will be available, because surges in demand for On-Demand Instances can disrupt workloads on Spot Instances.\nWe strongly discourage using Spot Instances for these workloads or attempting to fail over to On-Demand Instances to handle interruptions or periods of unavailability. Failing over to On-Demand Instances can inadvertently drive interruptions for your other Spot Instances. In addition if Spot Instances for a combination of instance type and Availability Zone get interrupted, it might become difficult for you to get On-Demand Instances with that same combination.\nRegardless of whether you're an experienced Spot user or new to Spot Instances, if you are currently experiencing issues with Spot Instance interruptions or availability, we recommend that you follow these best practices to have the best experience using the Spot service.\nSpot best practices\nPrepare individual instances for interruptions\nBe flexible about instance types and Availability Zones\nUse attribute-based instance type selection\nUse Spot placement scores to identify optimal Regions and Availability Zones\nUse EC2 Auto Scaling groups or EC2 Fleet to manage your aggregate capacity\nUse the price and capacity optimized allocation strategy\nUse integrated AWS services to manage your Spot Instances\nWhich is the best Spot request method to use?\nPrepare individual instances for interruptions\nThe best way for you to gracefully handle Spot Instance interruptions is to architect your application to be fault-tolerant. To accomplish this, you can take advantage of EC2 instance rebalance recommendations and Spot Instance interruption notices.\nAn EC2 Instance rebalance recommendation is a signal that notifies you when a Spot Instance is at an elevated risk of interruption. The signal gives you the opportunity to proactively manage the Spot Instance in advance of the two-minute Spot Instance interruption notice. You can decide to rebalance your workload to new or existing Spot Instances that are not at an elevated risk of interruption. We've made it easy for you to use this signal by using the Capacity Rebalancing feature in Auto Scaling groups and EC2 Fleet.\nA Spot Instance interruption notice is a warning that is issued two minutes before Amazon EC2 interrupts a Spot Instance. If your workload is \"time-flexible,\" you can configure your Spot Instances to be stopped or hibernated, instead of being terminated, when they are interrupted. Amazon EC2 automatically stops or hibernates your Spot Instances on interruption, and automatically resumes the instances when we have available capacity.\nWe recommend that you create a rule in Amazon EventBridge that captures the rebalance recommendations and interruption notifications, and then triggers a checkpoint for the progress of your workload or gracefully handles the interruption. For more information, see Monitor rebalance recommendation signals. For a detailed example that walks you through how to create and use event rules, see Taking Advantage of Amazon EC2 Spot Instance Interruption Notices.\nFor more information, see EC2 instance rebalance recommendations and Spot Instance interruptions.\nBe flexible about instance types and Availability Zones\nA Spot capacity pool is a set of unused EC2 instances with the same instance type (for example, m5.large) and Availability Zone (for example, us-east-1a). You should be flexible about which instance types you request and in which Availability Zones you can deploy your workload. This gives Spot a better chance to find and allocate your required amount of compute capacity. For example, don't just ask for c5.large if you'd be willing to use larges from the c4, m5, and m4 families.\nDepending on your specific needs, you can evaluate which instance types you can be flexible across to fulfill your compute requirements. If a workload can be vertically scaled, you should include larger instance types (more vCPUs and memory) in your requests. If you can only scale horizontally, you should include older generation instance types because they are less in demand from On-Demand customers.\nA good rule of thumb is to be flexible across at least 10 instance types for each workload. In addition, make sure that all Availability Zones are configured for use in your VPC and selected for your workload.\nUse attribute-based instance type selection\nWith attribute-based instance type selection, you can specify instance attributes\u2014such as vCPUs, memory, and storage\u2014for the workload you want to run. EC2 Auto Scaling or EC2 Fleet will then automatically identify and launch instances that match your specified attributes. This removes the effort required to manually select specific instance types, which requires an in-depth understanding of each instance type's offering.\nMoreover, attribute-based instance type selection enables you to automatically use newly released instance types as they become available. This ensures seamless access to an increasingly broad range of Spot Instance capacity.\nAttribute-based instance type selection is ideal for workloads and frameworks that can be flexible about the instance types they run on, such as High Performance Computing (HPC) and big data workloads.\nFor more information, see Create mixed instances group using attribute-based instance type selection in the Amazon EC2 Auto Scaling User Guide and Specify attributes for instance type selection for EC2 Fleet or Spot Fleet in this guide.\nUse Spot placement scores to identify optimal Regions and Availability Zones\nSpot Instances are unused EC2 capacity, and this capacity fluctuates based on EC2 supply and demand. As a result, you might not always get the exact Spot capacity that you require in a specific location at a specific time. To mitigate this unpredictability, you can use the Spot placement score feature. This feature provides recommendations for Regions or Availability Zones that are more likely to have sufficient capacity to meet your Spot capacity needs without requiring you to launch Spot Instances in those locations first.\nSpot placement score is best used for workloads that can be flexible about the instance types and the Region or Availability Zone they can use. All you need to do is specify the Spot capacity that you need, your instance type requirements, and whether you want a recommendations for Regions or Availability Zones. In return, you receive a score ranging from 1 to 10 for each Region or Availability Zone, indicating the likelihood of successfully provisioning your requested Spot capacity in that location. A score of 10 indicates that your Spot request is highly likely to succeed.\nIt's important to note that a Spot placement score is a point-in-time recommendation, because capacity can vary over time. It does not guarantee available capacity or predict the risk of interruption.\nYou can use the Spot placement score feature in the Amazon EC2 console, AWS CLI, or an SDK. For more information, see Spot placement score.\nUse EC2 Auto Scaling groups or EC2 Fleet to manage your aggregate capacity\nSpot enables you to think in terms of aggregate capacity\u2014in units that include vCPUs, memory, storage, or network throughput\u2014rather than thinking in terms of individual instances. Auto Scaling groups and EC2 Fleet enable you to launch and maintain a target capacity, and to automatically request resources to replace any that are disrupted or manually terminated. When you configure an Auto Scaling group or an EC2 Fleet, you need only specify the instance types and target capacity based on your application needs. For more information, see Auto Scaling groups in the Amazon EC2 Auto Scaling User Guide and Create an EC2 Fleet in this user guide.\nUse the price and capacity optimized allocation strategy\nAllocation strategies in Auto Scaling groups help you to provision your target capacity without the need to manually look for the Spot capacity pools with spare capacity. We recommend using the price-capacity-optimized strategy because this strategy automatically provisions instances from the most-available Spot capacity pools that also have the lowest possible price. You can also take advantage of the price-capacity-optimized allocation strategy in EC2 Fleet. Because your Spot Instance capacity is sourced from pools with optimal capacity, this decreases the possibility that your Spot Instances are reclaimed. For more information, see Allocation strategies for multiple instance types in the Amazon EC2 Auto Scaling User Guide and When workloads have a high cost of interruption in this user guide.\nUse integrated AWS services to manage your Spot Instances\nOther AWS services integrate with Spot to reduce overall compute costs without the need to manage the individual instances or fleets. We recommend that you consider the following solutions for your applicable workloads: Amazon EMR, Amazon Elastic Container Service, AWS Batch, Amazon Elastic Kubernetes Service, Amazon SageMaker AI, AWS Elastic Beanstalk, and Amazon GameLift. To learn more about Spot best practices with these services, see the Amazon EC2 Spot Instances Workshops Website.\nWhich is the best Spot request method to use?\nUse the following table to determine which API to use when requesting Spot Instances.\nAPI When to use? Use case Should I use this API?\nCreateAutoScalingGroup\nYou need multiple instances with either a single configuration or a mixed configuration.\nYou want to automate the lifecycle management through a configurable API.\nCreate an Auto Scaling group that manages the lifecycle of your instances while maintaining the desired number of instances. Supports horizontal scaling (adding more instances) between specified minimum and maximum limits.\nYes\nCreateFleet\nYou need multiple instances with either a single configuration or a mixed configuration.\nYou want to self-manage your instance lifecycle.\nIf you don\u2019t need auto scaling, we recommend that you use an instant type fleet.\nCreate a fleet of both On-Demand Instances and Spot Instances in a single request, with multiple launch specifications that vary by instance type, AMI, Availability Zone, or subnet. The Spot Instance allocation strategy defaults to lowest-price per unit, but you can change it to price-capacity-optimized, capacity-optimized, or diversified.\nYes \u2013 in instant mode if you don\u2019t need auto scaling\nRunInstances\nYou're already using the RunInstances API to launch On-Demand Instances, and you simply want to change to launching Spot Instances by changing a single parameter.\nYou do not need multiple instances with different instance types.\nLaunch a specified number of instances using an AMI and one instance type.\nNo \u2013 because RunInstances does not allow mixed instance types in a single request\nRequestSpotFleet\nWe strongly discourage using the RequestSpotFleet API because it is a legacy API with no planned investment.\nIf you want to manage your instance lifecycle, use the CreateFleet API.\nIf you don't want to manage your instance lifecycle, use the CreateAutoScalingGroup API.\nDO NOT USE. RequestSpotFleet is legacy API with no planned investment.\nNo\nRequestSpotInstances\nWe strongly discourage using the RequestSpotInstances API because it is a legacy API with no planned investment.\nDO NOT USE. RequestSpotInstances is legacy API with no planned investment.\nNo"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/how-spot-instances-work.html",
        "content": "To launch a Spot Instance, either you create a Spot Instance request, or Amazon EC2 creates a Spot Instance request on your behalf. The Spot Instance launches when the Spot Instance request is fulfilled.\nYou can launch a Spot Instance using several different services. For more information, see Getting Started with Amazon EC2 Spot Instances. In this user guide, we describe the following ways to launch a Spot Instance using EC2:\nYou can create a Spot Instance request by using the launch instance wizard in the Amazon EC2 console or the run-instances command. For more information, see Manage your Spot Instances.\nYou can create an EC2 Fleet, in which you specify the desired number of Spot Instances. Amazon EC2 creates a Spot Instance request on your behalf for every Spot Instance that is specified in the EC2 Fleet. For more information, see Create an EC2 Fleet.\nYou can create a Spot Fleet request, in which you specify the desired number of Spot Instances. Amazon EC2 creates a Spot Instance request on your behalf for every Spot Instance that is specified in the Spot Fleet request. For more information, see Create a Spot Fleet.\nYour Spot Instance launches if there is available capacity. Your Spot Instance runs until you stop or terminate it, or until Amazon EC2 interrupts it (known as a Spot Instance interruption). Amazon EC2 can stop, terminate, or hibernate a Spot Instance when it interrupts it.\nWhen you use Spot Instances, you must be prepared for interruptions. Amazon EC2 can interrupt your Spot Instance when the demand for Spot Instances rises or when the supply of Spot Instances decreases. When Amazon EC2 interrupts a Spot Instance, it provides a Spot Instance interruption notice, which gives the instance a two-minute warning before Amazon EC2 interrupts it. You can't enable termination protection for Spot Instances. For more information, see Spot Instance interruptions.\nContents\nSpot Instance request states\nLaunch Spot Instances in a launch group\nLaunch Spot Instances in an Availability Zone group\nLaunch Spot Instances in a VPC\nLaunch burstable performance instances\nLaunch on single-tenant hardware\nSpot Instance request states\nA Spot Instance request can be in one of the following states:\nopen \u2013 The request is waiting to be fulfilled.\nactive \u2013 The request is fulfilled and has an associated Spot Instance.\nfailed \u2013 The request has one or more bad parameters.\nclosed \u2013 The Spot Instance was interrupted or terminated.\ndisabled \u2013 You stopped the Spot Instance.\ncancelled \u2013 You canceled the request, or the request expired.\nThe following illustration represents the transitions between the request states. Notice that the transitions depend on the request type (one-time or persistent).\nA one-time Spot Instance request remains active until Amazon EC2 launches the Spot Instance, the request expires, or you cancel the request. If capacity is not available, your Spot Instance is terminated and the Spot Instance request is closed.\nA persistent Spot Instance request remains active until it expires or you cancel it, even if the request is fulfilled. If capacity is not available, your Spot Instance is interrupted. After your instance is interrupted, when capacity becomes available again, the Spot Instance is started if stopped or resumed if hibernated. You can stop a Spot Instance and start it again if capacity is available. If the Spot Instance is terminated (irrespective of whether the Spot Instance is in a stopped or running state), the Spot Instance request is opened again and Amazon EC2 launches a new Spot Instance. For more information, see Stop a Spot Instance, Start a Spot Instance, and Terminate a Spot Instance.\nYou can track the status of your Spot Instance requests, as well as the status of the Spot Instances launched, through the status. For more information, see Get the status of a Spot Instance request.\nLaunch Spot Instances in a launch group\nSpecify a launch group in your Spot Instance request to tell Amazon EC2 to launch a set of Spot Instances only if it can launch them all. In addition, if the Spot service must terminate one of the instances in a launch group, it must terminate them all. However, if you terminate one or more of the instances in a launch group, Amazon EC2 does not terminate the remaining instances in the launch group.\nAlthough this option can be useful, adding this constraint can decrease the chances that your Spot Instance request is fulfilled and increase the chances that your Spot Instances are terminated. For example, your launch group includes instances in multiple Availability Zones. If capacity in one of these Availability Zones decreases and is no longer available, then Amazon EC2 terminates all instances for the launch group.\nIf you create another successful Spot Instance request that specifies the same (existing) launch group as an earlier successful request, then the new instances are added to the launch group. Subsequently, if an instance in this launch group is terminated, all instances in the launch group are terminated, which includes instances launched by the first and second requests.\nLaunch Spot Instances in an Availability Zone group\nSpecify an Availability Zone group in your Spot Instance request to tell Amazon EC2 to launch a set of Spot Instances in the same Availability Zone. Amazon EC2 need not interrupt all instances in an Availability Zone group at the same time. If Amazon EC2 must interrupt one of the instances in an Availability Zone group, the others remain running.\nAlthough this option can be useful, adding this constraint can lower the chances that your Spot Instance request is fulfilled.\nIf you specify an Availability Zone group but don't specify an Availability Zone in the Spot Instance request, the result depends on the network you specified.\nDefault VPC\nAmazon EC2 uses the Availability Zone for the specified subnet. If you don't specify a subnet, it selects an Availability Zone and its default subnet, but not necessarily the lowest-priced zone. If you deleted the default subnet for an Availability Zone, then you must specify a different subnet.\nNondefault VPC\nAmazon EC2 uses the Availability Zone for the specified subnet.\nLaunch Spot Instances in a VPC\nYou specify a subnet for your Spot Instances the same way that you specify a subnet for your On-Demand Instances.\n[Default VPC] If you want your Spot Instance launched in a specific low-priced Availability Zone, you must specify the corresponding subnet in your Spot Instance request. If you do not specify a subnet, Amazon EC2 selects one for you, and the Availability Zone for this subnet might not have the lowest Spot price.\n[Nondefault VPC] You must specify the subnet for your Spot Instance.\nLaunch burstable performance instances\nThe T instance types are burstable performance instances. If you launch your Spot Instances using a burstable performance instance type, and if you plan to use your burstable performance Spot Instances immediately and for a short duration, with no idle time for accruing CPU credits, we recommend that you launch them in Standard mode to avoid paying higher costs. If you launch burstable performance Spot Instances in Unlimited mode and burst CPU immediately, you'll spend surplus credits for bursting. If you use the instance for a short duration, the instance doesn't have time to accrue CPU credits to pay down the surplus credits, and you are charged for the surplus credits when you terminate the instance.\nUnlimited mode is suitable for burstable performance Spot Instances only if the instance runs long enough to accrue CPU credits for bursting. Otherwise, paying for surplus credits makes burstable performance Spot Instances more expensive than using other instances. For more information, see When to use unlimited mode versus fixed CPU.\nT2 instances, when configured in Standard mode, get launch credits. T2 instances are the only burstable performance instances that get launch credits. Launch credits are meant to provide a productive initial launch experience for T2 instances by providing sufficient compute resources to configure the instance. Repeated launches of T2 instances to access new launch credits is not permitted. If you require sustained CPU, you can earn credits (by idling over some period), use Unlimited mode for T2 Spot Instances, or use an instance type with dedicated CPU.\nLaunch on single-tenant hardware\nYou can run a Spot Instance on single-tenant hardware. Dedicated Spot Instances are physically isolated from instances that belong to other AWS accounts. For more information, see Amazon EC2 Dedicated Instances and the Amazon EC2 Dedicated Instances.\nTo run a Dedicated Spot Instance, do one of the following:\nSpecify a tenancy of dedicated when you create the Spot Instance request. For more information, see Manage your Spot Instances.\nRequest a Spot Instance in a VPC with an instance tenancy of dedicated. For more information, see Launch Dedicated Instances into a VPC with default tenancy. You can't request a Spot Instance with a tenancy of default if you request it in a VPC with an instance tenancy of dedicated.\nAll instance families support Dedicated Spot Instances except T instances. For each supported instance family, only the largest instance size or metal size supports Dedicated Spot Instances."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-history.html",
        "content": "Spot Instance prices are set by Amazon EC2 and adjust gradually based on long-term trends in supply and demand for Spot Instance capacity.\nWhen your Spot request is fulfilled, your Spot Instances launch at the current Spot price, not exceeding the On-Demand price. You can view the Spot price history for the last 90 days, filtering by instance type, operating system, and Availability Zone.\nTo view the current Spot prices\nFor the current Spot Instance prices, see Amazon EC2 Spot Instances Pricing.\nTo view the Spot price history using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Spot Requests.\nChoose Pricing history.\nFor Graph, choose to compare the price history by Availability Zones or by Instance Types.\nIf you choose Availability Zones, then choose the Instance type, operating system (Platform), and Date range for which to view the price history.\nIf you choose Instance Types, then choose up to five Instance type(s), the Availability Zone, operating system (Platform), and Date range for which to view the price history.\nThe following screenshot shows a price comparison for different instance types.\nHover (move your pointer) over the graph to display the prices at specific times in the selected date range. The prices are displayed in the information blocks above the graph. The price displayed in the top row shows the price on a specific date. The price displayed in the second row shows the average price over the selected date range.\nTo display the price per vCPU, toggle on Display normalized prices. To display the price for the instance type, toggle off Display normalized prices.\nTo view the Spot price history using the command line\nYou can use one of the following commands. For more information, see Access Amazon EC2.\ndescribe-spot-price-history (AWS CLI)\nGet-EC2SpotPriceHistory (AWS Tools for Windows PowerShell)"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-savings.html",
        "content": "You can view the usage and savings information for Spot Instances at the per-fleet level, or for all running Spot Instances. At the per-fleet level, the usage and savings information includes all instances launched and terminated by the fleet. You can view this information from the last hour or the last three days.\nThe following screenshot from the Savings section shows the Spot usage and savings information for a Spot Fleet.\nYou can view the following usage and savings information:\nSpot Instances \u2013 The number of Spot Instances launched and terminated by the Spot Fleet. When viewing the savings summary, the number represents all your running Spot Instances.\nvCPU-hours \u2013 The number of vCPU hours used across all the Spot Instances for the selected time frame.\nMem(GiB)-hours \u2013 The number of GiB hours used across all the Spot Instances for the selected time frame.\nOn-Demand total \u2013 The total amount you would've paid for the selected time frame had you launched these instances as On-Demand Instances.\nSpot total \u2013 The total amount to pay for the selected time frame.\nSavings \u2013 The percentage that you are saving by not paying the On-Demand price.\nAverage cost per vCPU-hour \u2013 The average hourly cost of using the vCPUs across all the Spot Instances for the selected time frame, calculated as follows: Average cost per vCPU-hour = Spot total / vCPU-hours.\nAverage cost per mem(GiB)-hour \u2013 The average hourly cost of using the GiBs across all the Spot Instances for the selected time frame, calculated as follows: Average cost per mem(GiB)-hour = Spot total / Mem(GiB)-hours.\nDetails table \u2013 The different instance types (the number of instances per instance type is in parentheses) that comprise the Spot Fleet. When viewing the savings summary, these comprise all your running Spot Instances.\nSavings information can only be viewed using the Amazon EC2 console.\nTo view the savings information for a Spot Fleet using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nOn the navigation pane, choose Spot Requests.\nSelect the ID of a Spot Fleet request and scroll to the Savings section.\nAlternatively, select the checkbox next to the Spot Fleet request ID and choose the Savings tab.\nBy default, the page displays usage and savings information for the last three days. You can choose last hour or the last three days. For Spot Fleets that were launched less than an hour ago, the page shows the estimated savings for the hour.\nTo view the savings information for all running Spot Instances using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nOn the navigation pane, choose Spot Requests.\nChoose Savings summary."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html",
        "content": "To use Spot Instances, you create a Spot Instance request that includes the desired number of instances, the instance type, and the Availability Zone. If capacity is available, Amazon EC2 fulfills your request immediately. Otherwise, Amazon EC2 waits until your request can be fulfilled or until you cancel the request.\nYou can use the launch instance wizard in the Amazon EC2 console or the run-instances command to request a Spot Instance in the same way that you can launch an On-Demand Instance. This method is only recommended for the following reasons:\nYou're already using the launch instance wizard or run-instances command to launch On-Demand Instances, and you simply want to change to launching Spot Instances by changing a single parameter.\nYou do not need multiple instances with different instance types.\nThis method is generally not recommended for launching Spot Instances because you can't specify multiple instance types, and you can't launch Spot Instances and On-Demand Instances in the same request. For the preferred methods for launching Spot Instances, which include launching a fleet that includes Spot Instances and On-Demand Instances with multiple instance types, see Which is the best Spot request method to use?\nIf you request multiple Spot Instances at one time, Amazon EC2 creates separate Spot Instance requests so that you can track the status of each request separately. For more information about tracking Spot Instance requests, see Get the status of a Spot Instance request.\nConsole\nAWS CLI\nTo create a Spot Instance request using the launch instance wizard\nSteps 1\u20139 are the same steps you'd use to launch an On-Demand Instance. At Step 10, you configure the Spot Instance request.\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation bar at the top of the screen, select a Region.\nFrom the Amazon EC2 console dashboard, choose Launch instance.\n(Optional) Under Name and tags, you can name your instance, and tag the Spot Instance request, the instance, the volumes, and the elastic graphics. For information about tags, see Tag your Amazon EC2 resources.\nFor Name, enter a descriptive name for your instance.\nThe instance name is a tag, where the key is Name, and the value is the name that you specify. If you don't specify a name, the instance can be identified by its ID, which is automatically generated when you launch the instance.\nTo tag the Spot Instance request, the instance, the volumes, and the elastic graphics, choose Add additional tags. Choose Add tag, and then enter a key and value, and select the resource type to tag. Choose Add tag again for each additional tag to add.\nUnder Application and OS Images (Amazon Machine Image), choose the operating system (OS) for your instance, and then select an AMI. For more information, see Application and OS Images (Amazon Machine Image).\nUnder Instance type, select the instance type that meets your requirements for the hardware configuration and size of your instance. For more information, see Instance type.\nUnder Key pair (login), choose an existing key pair, or choose Create new key pair to create a new one. For more information, see Amazon EC2 key pairs and Amazon EC2 instances.\nImportant\nIf you choose the Proceed without key pair (Not recommended) option, you won't be able to connect to the instance unless you choose an AMI that is configured to allow users another way to log in.\nUnder Network settings, use the default settings, or choose Edit to configure the network settings as necessary.\nSecurity groups form part of the network settings, and define firewall rules for your instance. These rules specify which incoming network traffic is delivered to your instance.\nFor more information, see Network settings.\nThe AMI you selected includes one or more volumes of storage, including the root device volume. Under Configure storage, you can specify additional volumes to attach to the instance by choosing Add new volume. For more information, see Configure storage.\nUnder Advanced details, configure the Spot Instance request as follows:\nUnder Purchasing option, select the Request Spot Instances checkbox.\nYou can either keep the default configuration for the Spot Instance request, or choose Customize (at the right) to specify custom settings for your Spot Instance request.\nWhen you choose Customize, the following fields appear.\nMaximum price: You can request Spot Instances at the Spot price, capped at the On-Demand price, or you can specify the maximum amount you're willing to pay.\nWarning\nIf you specify a maximum price, your instances will be interrupted more frequently than if you choose No maximum price.\nIf you specify a maximum price, it must be more than USD $0.001. Specifying a value below USD $0.001 will result in a failed launch.\nNo maximum price: Your Spot Instance will launch at the current Spot price. The price will never exceed the On-Demand price. (Recommended)\nSet your maximum price (per instance/hour): You can specify the maximum amount you're willing pay.\nIf you specify a maximum price that is less than the current Spot price, your Spot Instance will not launch.\nIf you specify a maximum price that is more than the current Spot price, your Spot Instance will launch and be charged at the current Spot price. After your Spot Instance is running, if the Spot price rises above your maximum price, Amazon EC2 interrupts your Spot Instance.\nRegardless of the maximum price you specify, you will always be charged the current Spot price.\nTo review Spot price trends, see Spot Instance pricing history.\nRequest type: The Spot Instance request type that you choose determines what happens if your Spot Instance is interrupted.\nOne-time: Amazon EC2 places a one-time request for your Spot Instance. If your Spot Instance is interrupted, the request is not resubmitted.\nPersistent request: Amazon EC2 places a persistent request for your Spot Instance. If your Spot Instance is interrupted, the request is resubmitted to replenish the interrupted Spot Instance.\nIf you do not specify a value, the default is a one-time request.\nValid to: The expiration date of a persistent Spot Instance request.\nThis field is not supported for one-time requests. A one-time request remains active until all the instances in the request launch or you cancel the request.\nNo request expiry date: The request remains active until you cancel it.\nSet your request expiry date: The persistent request remains active until the date that you specify, or until you cancel it.\nInterruption behavior: The behavior that you choose determines what happens when a Spot Instance is interrupted.\nFor persistent requests, valid values are Stop and Hibernate. When an instance is stopped, charges for EBS volume storage apply.\nNote\nSpot Instances now use the same hibernation functionality as On-Demand Instances. To enable hibernation, you can either choose Hibernate here, or you can choose Enable from the Stop - Hibernate behavior field, which appears lower down in the launch instance wizard. For the hibernation prerequisites, see Prerequisites for Amazon EC2 instance hibernation.\nFor one-time requests, only Terminate is valid.\nIf you do not specify a value, the default is Terminate, which is not valid for a persistent Spot Instance request. If you keep the default and try to launch a persistent Spot Instance request, you'll get an error.\nFor more information, see Behavior of Spot Instance interruptions.\nOn the Summary panel, for Number of instances, enter the number of instances to launch.\nNote\nAmazon EC2 creates a separate request for each Spot Instance.\nOn the Summary panel, review the details of your instance, and make any necessary changes. After you submit your Spot Instance request, you can't change the parameters of the request. You can navigate directly to a section in the launch instance wizard by choosing its link in the Summary panel. For more information, see Summary.\nWhen you're ready to launch your instance, choose Launch instance.\nIf the instance fails to launch or the state immediately goes to terminated instead of running, see Troubleshoot Amazon EC2 instance launch issues."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-request-examples.html",
        "content": "The following examples show launch configurations that you can use with the request-spot-instances command to create a Spot Instance request. For more information, see Manage your Spot Instances.\nImportant\nWe strongly discourage using the request-spot-instances command to request a Spot Instance because it is a legacy API with no planned investment. For more information, see Which is the best Spot request method to use?\nExamples\nExample 1: Launch Spot Instances\nExample 2: Launch Spot Instances in the specified Availability Zone\nExample 3: Launch Spot Instances in the specified subnet\nExample 4: Launch a Dedicated Spot Instance\nExample 1: Launch Spot Instances\nThe following example does not include an Availability Zone or subnet. Amazon EC2 selects an Availability Zone for you. Amazon EC2 launches the instances in the default subnet of the selected Availability Zone.\n{\n  \"ImageId\": \"ami-0abcdef1234567890\",\n  \"KeyName\": \"my-key-pair\",\n  \"SecurityGroupIds\": [ \"sg-1a2b3c4d5e6f7g8h9\" ],\n  \"InstanceType\": \"m5.medium\",\n  \"IamInstanceProfile\": {\n      \"Arn\": \"arn:aws:iam::123456789012:instance-profile/my-iam-role\"\n  }\n}\nExample 2: Launch Spot Instances in the specified Availability Zone\nThe following example includes an Availability Zone. Amazon EC2 launches the instances in the default subnet of the specified Availability Zone.\n{\n  \"ImageId\": \"ami-0abcdef1234567890\",\n  \"KeyName\": \"my-key-pair\",\n  \"SecurityGroupIds\": [ \"sg-1a2b3c4d5e6f7g8h9\" ],\n  \"InstanceType\": \"m5.medium\",\n  \"Placement\": {\n    \"AvailabilityZone\": \"us-west-2a\"\n  },\n  \"IamInstanceProfile\": {\n      \"Arn\": \"arn:aws:iam::123456789012:instance-profile/my-iam-role\"\n  }\n}\nExample 3: Launch Spot Instances in the specified subnet\nThe following example includes a subnet. Amazon EC2 launches the instances in the specified subnet. If the VPC is a nondefault VPC, the instance does not receive a public IPv4 address by default.\n{\n  \"ImageId\": \"ami-0abcdef1234567890\",\n  \"SecurityGroupIds\": [ \"sg-1a2b3c4d5e6f7g8h9\" ],\n  \"InstanceType\": \"m5.medium\",\n  \"SubnetId\": \"subnet-1a2b3c4d\",\n  \"IamInstanceProfile\": {\n      \"Arn\": \"arn:aws:iam::123456789012:instance-profile/my-iam-role\"\n  }\n}\nTo assign a public IPv4 address to an instance in a nondefault VPC, specify the AssociatePublicIpAddress field as shown in the following example. When you specify a network interface, you must include the subnet ID and security group ID using the network interface, rather than using the SubnetId and SecurityGroupIds fields shown in the previous code block.\n{\n  \"ImageId\": \"ami-0abcdef1234567890\",\n  \"KeyName\": \"my-key-pair\",\n  \"InstanceType\": \"m5.medium\",\n  \"NetworkInterfaces\": [\n    {\n      \"DeviceIndex\": 0,\n      \"SubnetId\": \"subnet-1a2b3c4d5e6f7g8h9\",\n      \"Groups\": [ \"sg-1a2b3c4d5e6f7g8h9\" ],\n      \"AssociatePublicIpAddress\": true\n    }\n  ],\n  \"IamInstanceProfile\": {\n      \"Arn\": \"arn:aws:iam::123456789012:instance-profile/my-iam-role\"\n  }\n}\nExample 4: Launch a Dedicated Spot Instance\nThe following example requests Spot Instance with a tenancy of dedicated. A Dedicated Spot Instance must be launched in a VPC.\n{\n  \"ImageId\": \"ami-0abcdef1234567890\",\n  \"KeyName\": \"my-key-pair\",\n  \"SecurityGroupIds\": [ \"sg-1a2b3c4d5e6f7g8h9\" ],\n  \"InstanceType\": \"c5.8xlarge\",\n  \"SubnetId\": \"subnet-1a2b3c4d5e6f7g8h9\",\n  \"Placement\": {\n    \"Tenancy\": \"dedicated\"\n  }\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-request-status.html",
        "content": "To help you track your Spot Instance requests and plan your use of Spot Instances, use the request status provided by Amazon EC2. For example, the request status can provide the reason why your Spot request isn't fulfilled yet, or list the constraints that are preventing the fulfillment of your Spot request.\nAt each step of the process\u2014also called the Spot request lifecycle\u2014specific events determine successive request states.\nThe following illustration shows how Spot Instance requests work. Notice that the request type (one-time or persistent) determines whether the request is opened again when Amazon EC2 interrupts a Spot Instance or if you stop a Spot Instance. If the request is persistent, the request is opened again after your Spot Instance is interrupted. If the request is persistent and you stop your Spot Instance, the request only opens after you start your Spot Instance.\nContents\nGet request status information\nSpot request status codes\nEC2 Spot Instance Request Fulfillment event\nState changes for a Spot request\nGet request status information\nYou can get request status information using the AWS Management Console or a command line tool.\nTo get request status information using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Spot Requests and select the Spot request.\nTo check the status, on the Description tab, check the Status field.\nTo get request status information using the command line\nYou can use one of the following commands. For more information about these command line interfaces, see Access Amazon EC2.\ndescribe-spot-instance-requests (AWS CLI)\nGet-EC2SpotInstanceRequest (AWS Tools for Windows PowerShell)\nSpot request status codes\nSpot request status information is composed of a status code, the update time, and a status message. Together, these help you determine the disposition of your Spot request.\nThe following are the Spot request status codes:\naz-group-constraint\nAmazon EC2 cannot launch all the instances you requested in the same Availability Zone.\nbad-parameters\nOne or more parameters for your Spot request are not valid (for example, the AMI you specified does not exist). The status message indicates which parameter is not valid.\ncanceled-before-fulfillment\nThe user canceled the Spot request before it was fulfilled.\ncapacity-not-available\nThere is not enough capacity available for the instances that you requested.\nconstraint-not-fulfillable\nThe Spot request can't be fulfilled because one or more constraints are not valid (for example, the Availability Zone does not exist). The status message indicates which constraint is not valid.\nfulfilled\nThe Spot request is active, and Amazon EC2 is launching your Spot Instances.\ninstance-stopped-by-price\nYour instance was stopped because the Spot price exceeded your maximum price.\ninstance-stopped-by-user\nYour instance was stopped because a user stopped the instance or ran the shutdown command from the instance.\ninstance-stopped-no-capacity\nYour instance was stopped due to EC2 capacity management needs.\ninstance-terminated-by-price\nYour instance was terminated because the Spot price exceeded your maximum price. If your request is persistent, the process restarts, so your request is pending evaluation.\ninstance-terminated-by-schedule\nYour Spot Instance was terminated at the end of its scheduled duration.\ninstance-terminated-by-service\nYour instance was terminated from a stopped state.\ninstance-terminated-by-user or spot-instance-terminated-by-user\nYou terminated a Spot Instance that had been fulfilled, so the request state is closed (unless it's a persistent request) and the instance state is terminated.\ninstance-terminated-launch-group-constraint\nOne or more of the instances in your launch group was terminated, so the launch group constraint is no longer fulfilled.\ninstance-terminated-no-capacity\nYour instance was terminated due to standard capacity management processes.\nlaunch-group-constraint\nAmazon EC2 cannot launch all the instances that you requested at the same time. All instances in a launch group are started and terminated together.\nlimit-exceeded\nThe limit on the number of EBS volumes or total volume storage was exceeded. For more information, see Quotas for Amazon EBS in the Amazon EBS User Guide.\nmarked-for-stop\nThe Spot Instance is marked for stopping.\nmarked-for-termination\nThe Spot Instance is marked for termination.\nnot-scheduled-yet\nThe Spot request is not evaluated until the scheduled date.\npending-evaluation\nAfter you make a Spot Instance request, it goes into the pending-evaluation state while the system evaluates the parameters of your request.\npending-fulfillment\nAmazon EC2 is trying to provision your Spot Instances.\nplacement-group-constraint\nThe Spot request can't be fulfilled yet because a Spot Instance can't be added to the placement group at this time.\nprice-too-low\nThe request can't be fulfilled yet because your maximum price is below the Spot price. In this case, no instance is launched and your request remains open.\nrequest-canceled-and-instance-running\nYou canceled the Spot request while the Spot Instances are still running. The request is cancelled, but the instances remain running.\nschedule-expired\nThe Spot request expired because it was not fulfilled before the specified date.\nsystem-error\nThere was an unexpected system error. If this is a recurring issue, please contact AWS Support for assistance.\nEC2 Spot Instance Request Fulfillment event\nWhen a Spot Instance request is fulfilled, Amazon EC2 sends an EC2 Spot Instance Request Fulfillment event to Amazon EventBridge. You can create a rule to take an action whenever this event occurs, such as invoking a Lambda function or notifying an Amazon SNS topic.\nThe following is example data for this event.\n{\n    \"version\": \"0\",\n    \"id\": \"01234567-1234-0123-1234-012345678901\",\n    \"detail-type\": \"EC2 Spot Instance Request Fulfillment\",\n    \"source\": \"aws.ec2\",\n    \"account\": \"123456789012\",\n    \"time\": \"yyyy-mm-ddThh:mm:ssZ\",\n    \"region\": \"us-east-2\",\n    \"resources\": [\"arn:aws:ec2:us-east-2:123456789012:instance/i-1234567890abcdef0\"],\n    \"detail\": {\n        \"spot-instance-request-id\": \"sir-1a2b3c4d\",\n        \"instance-id\": \"i-1234567890abcdef0\"\n    }\n}\nFor more information, see the Amazon EventBridge User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-instances-request-status-lifecycle.html",
        "content": "The following diagram shows you the paths that your Spot request can follow throughout its lifecycle, from submission to termination. Each step is depicted as a node, and the status code for each node describes the status of the Spot request and Spot Instance.\nPending evaluation\nAs soon as you create a Spot Instance request, it goes into the pending-evaluation state unless one or more request parameters are not valid (bad-parameters).\nStatus code Request state Instance state\npending-evaluation open Not applicable\nbad-parameters closed Not applicable\nHolding\nIf one or more request constraints are valid but can't be met yet, or if there is not enough capacity, the request goes into a holding state waiting for the constraints to be met. The request options affect the likelihood of the request being fulfilled. For example, if there is no capacity, your request stays in a holding state until there is available capacity. If you specify an Availability Zone group, the request stays in a holding state until the Availability Zone constraint is met.\nIn the event of an outage of one of the Availability Zones, there is a chance that the spare EC2 capacity available for Spot Instance requests in other Availability Zones can be affected.\nStatus code Request state Instance state\ncapacity-not-available open\nNot applicable\nprice-too-low open\nNot applicable\nnot-scheduled-yet open\nNot applicable\nlaunch-group-constraint open\nNot applicable\naz-group-constraint open\nNot applicable\nplacement-group-constraint open\nNot applicable\nconstraint-not-fulfillable open\nNot applicable\nPending evaluation/fulfillment-terminal\nYour Spot Instance request can go to a terminal state if you create a request that is valid only during a specific time period and this time period expires before your request reaches the pending fulfillment phase. It might also happen if you cancel the request, or if a system error occurs.\nStatus code Request state Instance state\nschedule-expired cancelled\nNot applicable\ncanceled-before-fulfillment \u00b9 cancelled\nNot applicable\nbad-parameters failed\nNot applicable\nsystem-error closed\nNot applicable\n\u00b9 If you cancel the request.\nPending fulfillment\nWhen the constraints you specified (if any) are met, your Spot request goes into the pending-fulfillment state.\nAt this point, Amazon EC2 is getting ready to provision the instances that you requested. If the process stops at this point, it is likely to be because it was canceled by the user before a Spot Instance was launched. It might also be because an unexpected system error occurred.\nStatus code Request state Instance state\npending-fulfillment open\nNot applicable\nFulfilled\nWhen all the specifications for your Spot Instances are met, your Spot request is fulfilled. Amazon EC2 launches the Spot Instances, which can take a few minutes. If a Spot Instance is hibernated or stopped when interrupted, it remains in this state until the request can be fulfilled again or the request is canceled.\nStatus code Request state Instance state\nfulfilled active pending \u2192 running\nfulfilled active stopped \u2192 running\nIf you stop a Spot Instance, your Spot request goes into the marked-for-stop or instance-stopped-by-user state until the Spot Instance can be started again or the request is cancelled.\nStatus code Request state Instance state\nmarked-for-stop active stopping\ninstance-stopped-by-user \u00b9 disabled or cancelled \u00b2 stopped\n\u00b9 A Spot Instance goes into the instance-stopped-by-user state if you stop the instance or run the shutdown command from the instance. After you've stopped the instance, you can start it again. On restart, the Spot Instance request returns to the pending-evaluation state and then Amazon EC2 launches a new Spot Instance when the constraints are met.\n\u00b2 The Spot request state is disabled if you stop the Spot Instance but do not cancel the request. The request state is cancelled if your Spot Instance is stopped and the request expires.\nFulfilled-terminal\nYour Spot Instances continue to run as long as there is available capacity for your instance type, and you don't terminate the instance. If Amazon EC2 must terminate your Spot Instances, the Spot request goes into a terminal state. A request also goes into the terminal state if you cancel the Spot request or terminate the Spot Instances.\nStatus code Request state Instance state\nrequest-canceled-and-instance-running cancelled running\nmarked-for-stop active running\nmarked-for-termination active running\ninstance-stopped-by-price disabled stopped\ninstance-stopped-by-user disabled stopped\ninstance-stopped-no-capacity disabled stopped\ninstance-terminated-by-price closed (one-time), open (persistent) terminated\ninstance-terminated-by-schedule closed terminated\ninstance-terminated-by-service cancelled terminated\ninstance-terminated-by-user closed or cancelled \u00b9 terminated\ninstance-terminated-no-capacity closed (one-time), open (persistent) running \u2020\ninstance-terminated-no-capacity closed (one-time), open (persistent) terminated\ninstance-terminated-launch-group-constraint closed (one-time), open (persistent) terminated\n\u00b9 The request state is closed if you terminate the instance but do not cancel the request. The request state is cancelled if you terminate the instance and cancel the request. Even if you terminate a Spot Instance before you cancel its request, there might be a delay before Amazon EC2 detects that your Spot Instance was terminated. In this case, the request state can either be closed or cancelled.\n\u2020 When Amazon EC2 interrupts a Spot Instance if it needs the capacity back and the instance is configured to terminate on interruption, the status is immediately set to instance-terminated-no-capacity (it is not set to marked-for-termination). However, the instance remains in the running state for 2 minutes to reflect the 2-minute period when the instance receives the Spot Instance interruption notice. After 2 minutes, the instance state is set to terminated.\nInterruption experiments\nYou can use AWS Fault Injection Service to initiate a Spot Instance interruption so that you can test how the applications on your Spot Instances respond. If AWS FIS stops a Spot Instance, your Spot request enters the marked-for-stop-by-experiment state and then the instance-stopped-by-experiment state. If AWS FIS terminates a Spot Instance, your Spot request enters the instance-terminated-by-experiment state. For more information, see Initiate a Spot Instance interruption.\nStatus code Request state Instance state\nmarked-for-stop-by-experiment active running\ninstance-stopped-by-experiment disabled stopped\ninstance-terminated-by-experiment closed terminated\nPersistent requests\nWhen your Spot Instances are terminated (either by you or Amazon EC2), if the Spot request is a persistent request, it returns to the pending-evaluation state and then Amazon EC2 can launch a new Spot Instance when the constraints are met."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-spot-instances-request-tags.html",
        "content": "To help categorize and manage your Spot Instance requests, you can tag them with custom metadata. You can assign a tag to a Spot Instance request when you create it, or afterward. You can assign tags using the Amazon EC2 console or a command line tool.\nWhen you tag a Spot Instance request, the instances and volumes that are launched by the Spot Instance request are not automatically tagged. You need to explicitly tag the instances and volumes launched by the Spot Instance request. You can assign a tag to a Spot Instance and volumes during launch, or afterward.\nFor more information about how tags work, see Tag your Amazon EC2 resources.\nContents\nPrerequisites\nTag a new Spot Instance request\nTag an existing Spot Instance request\nView Spot Instance request tags\nPrerequisites\nGrant the user the permission to tag resources. For more information about IAM policies and example policies, see Example: Tag resources.\nThe IAM policy you create is determined by which method you use for creating a Spot Instance request.\nIf you use the launch instance wizard or run-instances to request Spot Instances, see To grant a user the permission to tag resources when using the launch instance wizard or run-instances.\nIf you use the request-spot-instances command to request Spot Instances, see To grant a user the permission to tag resources when using request-spot-instances.\nTo grant a user the permission to tag resources when using the launch instance wizard or run-instances\nCreate a IAM policy that includes the following:\nThe ec2:RunInstances action. This grants the user permission to launch an instance.\nFor Resource, specify spot-instances-request. This allows users to create Spot Instance requests, which request Spot Instances.\nThe ec2:CreateTags action. This grants the user permission to create tags.\nFor Resource, specify *. This allows users to tag all resources that are created during instance launch.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowLaunchInstances\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:RunInstances\"\n            ],\n            \"Resource\": [\n                \"arn:aws:ec2:us-east-1::image/*\",\n                \"arn:aws:ec2:us-east-1:*:subnet/*\",\n                \"arn:aws:ec2:us-east-1:*:network-interface/*\",\n                \"arn:aws:ec2:us-east-1:*:security-group/*\",\n                \"arn:aws:ec2:us-east-1:*:key-pair/*\",\n                \"arn:aws:ec2:us-east-1:*:volume/*\",\n                \"arn:aws:ec2:us-east-1:*:instance/*\",\n                \"arn:aws:ec2:us-east-1:*:spot-instances-request/*\"\n            ]\n        },\n        {\n            \"Sid\": \"TagSpotInstanceRequests\",\n            \"Effect\": \"Allow\",\n            \"Action\": \"ec2:CreateTags\",\n            \"Resource\": \"*\"\n        }\n    ]\n}\nWhen you use the RunInstances action to create Spot Instance requests and tag the Spot Instance requests on create, you need to be aware of how Amazon EC2 evaluates the spot-instances-request resource in the RunInstances statement it is evaluated in the IAM policy as follows:\nIf you don't tag a Spot Instance request on create, Amazon EC2 does not evaluate the spot-instances-request resource in the RunInstances statement.\nIf you tag a Spot Instance request on create, Amazon EC2 evaluates the spot-instances-request resource in the RunInstances statement.\nTherefore, for the spot-instances-request resource, the following rules apply to the IAM policy:\nIf you use RunInstances to create a Spot Instance request and you don't intend to tag the Spot Instance request on create, you don\u2019t need to explicitly allow the spot-instances-request resource; the call will succeed.\nIf you use RunInstances to create a Spot Instance request and intend to tag the Spot Instance request on create, you must include the spot-instances-request resource in the RunInstances allow statement, otherwise the call will fail.\nIf you use RunInstances to create a Spot Instance request and intend to tag the Spot Instance request on create, you must specify the spot-instances-request resource or include a * wildcard in the CreateTags allow statement, otherwise the call will fail.\nFor example IAM policies, including policies that are not supported for Spot Instance requests, see Work with Spot Instances.\nTo grant a user the permission to tag resources when using request-spot-instances\nCreate a IAM policy that includes the following:\nThe ec2:RequestSpotInstances action. This grants the user permission to create a Spot Instance request.\nThe ec2:CreateTags action. This grants the user permission to create tags.\nFor Resource, specify spot-instances-request. This allows users to tag only the Spot Instance request.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"TagSpotInstanceRequest\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:RequestSpotInstances\",\n                \"ec2:CreateTags\"\n            ],\n            \"Resource\": \"arn:aws:ec2:us-east-1:111122223333:spot-instances-request/*\"\n}\nTag a new Spot Instance request\nConsole\nAWS CLI\nTo tag a new Spot Instance request using the console\nFollow the Manage your Spot Instances procedure.\nTo add a tag, on the Add Tags page, choose Add Tag, and enter the key and value for the tag. Choose Add another tag for each additional tag.\nFor each tag, you can tag the Spot Instance request, the Spot Instances, and the volumes with the same tag. To tag all three, ensure that Instances, Volumes, and Spot Instance Requests are selected. To tag only one or two, ensure that the resources you want to tag are selected, and the other resources are cleared.\nComplete the required fields to create a Spot Instance request, and then choose Launch. For more information, see Manage your Spot Instances.\nTag an existing Spot Instance request\nConsole\nAWS CLI\nTo tag an existing Spot Instance request using the console\nAfter you have created a Spot Instance request, you can add tags to the Spot Instance request using the console.\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Spot Requests.\nSelect your Spot Instance request.\nChoose the Tags tab and choose Create Tag.\nTo tag an existing Spot Instance using the console\nAfter your Spot Instance request has launched your Spot Instance, you can add tags to the instance using the console. For more information, see Add and remove tags using the console.\nView Spot Instance request tags\nConsole\nAWS CLI\nTo view Spot Instance request tags using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Spot Requests.\nSelect your Spot Instance request and choose the Tags tab."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-cancel.html",
        "content": "If you no longer want your Spot Instance request, you can cancel it. You can only cancel Spot Instance requests that are open, active, or disabled.\nYour Spot Instance request is open when your request has not yet been fulfilled and no instances have been launched.\nYour Spot Instance request is active when your request has been fulfilled and Spot Instances have launched as a result.\nYour Spot Instance request is disabled when you stop your Spot Instance.\nIf your Spot Instance request is active and has an associated running Spot Instance, canceling the request does not terminate the instance. For more information about terminating a Spot Instance, see Terminate a Spot Instance.\nConsole\nAWS CLI\nTo cancel a Spot Instance request using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Spot Requests.\nSelect the Spot Instance request.\nChoose Actions, Cancel request.\n(Optional) If you are finished with the associated Spot Instances, you can terminate them. In the Cancel Spot request dialog box, select Terminate instances, and then choose Confirm."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-request.html",
        "content": "Amazon EC2 launches a Spot Instance when capacity is available. A Spot Instance runs until it is interrupted or you terminate it yourself.\nContents\nFind your Spot Instances\nStop a Spot Instance\nStart a Spot Instance\nTerminate a Spot Instance\nFind your Spot Instances\nA Spot Instance appears in the Instances page in the console, along with On-Demand Instances. Use the following procedure to find your Spot Instances.\nConsole\nAWS CLI\nTo find your Spot Instances using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nTo find all Spot Instances, in the search pane, choose Instance lifecycle=spot.\nTo verify that an instance is a Spot Instance, select the instance, choose the Details tab, and check the value of Lifecycle. The value for a Spot Instance is spot and the value for an On-Demand Instance is normal.\nUse the following procedure to find the Spot Instances launched from a specific Spot Instance or Spot Fleet request.\nConsole\nAWS CLI\nTo find the Spot Instances for a request using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Spot Requests. The list contains both Spot Instance requests and Spot Fleet requests.\nIf a Spot Instance request is fulfilled, Capacity is the ID of the Spot Instance. For a Spot Fleet, Capacity indicates how much of the requested capacity has been fulfilled. To view the IDs of the instances in a Spot Fleet, choose the expand arrow, or select the fleet and choose Instances.\nFor a Spot Fleet, Capacity indicates how much of the requested capacity is fulfilled. To view the IDs of the instances in a Spot Fleet, choose the fleet ID to open its details page and locate the Instances pane.\nStop a Spot Instance\nIf you don\u2019t need your Spot Instances now, but you want to restart them later without losing the data persisted in the Amazon EBS volume, you can stop them. The steps for stopping a Spot Instance are similar to the steps for stopping an On-Demand Instance.\nNote\nWhile a Spot Instance is stopped, you can modify some of its instance attributes, but not the instance type.\nWe don't charge usage for a stopped Spot Instance, or data transfer fees, but we do charge for the storage for any Amazon EBS volumes.\nLimitations\nYou can only stop a Spot Instance if the Spot Instance was launched from a persistent Spot Instance request.\nYou can't stop a Spot Instance if the associated Spot Instance request is cancelled. When the Spot Instance request is cancelled, you can only terminate the Spot Instance.\nYou can't stop a Spot Instance if it is part of a fleet or launch group, or Availability Zone group.\nConsole\nAWS CLI\nTo stop a Spot Instance using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the Spot Instance. If you didn't save the instance ID of the Spot Instance, see Find your Spot Instances.\nChoose Instance state, Stop instance.\nWhen prompted for confirmation, choose Stop.\nStart a Spot Instance\nYou can start a Spot Instance that you previously stopped.\nPrerequisites\nYou can only start a Spot Instance if:\nYou manually stopped the Spot Instance.\nThe Spot Instance is an EBS-backed instance.\nSpot Instance capacity is available.\nThe Spot price is lower than your maximum price.\nLimitations\nYou can't start a Spot Instance if it is part of fleet or launch group, or Availability Zone group.\nThe steps for starting a Spot Instance are similar to the steps for starting an On-Demand Instance.\nConsole\nAWS CLI\nTo start a Spot Instance using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the Spot Instance. If you didn't save the instance ID of the Spot Instance, see Find your Spot Instances.\nChoose Instance state, Start instance.\nTerminate a Spot Instance\nIf you terminate a running or stopped Spot Instance that was launched by a persistent Spot Instance request, the Spot Instance request transitions to the open state so that a new Spot Instance can be launched. To ensure that no new Spot Instance is launched, you must first cancel the Spot Instance request.\nIf you cancel an active Spot Instance request that has a running Spot Instance, the running Spot Instance is not automatically terminated; you must manually terminate the Spot Instance.\nIf you cancel a disabled Spot Instance request that has a stopped Spot Instance, the stopped Spot Instance is automatically terminated by the Amazon EC2 Spot service. There might be a short lag between when you cancel the Spot Instance request and when the Spot service terminates the Spot Instance.\nFor more information, see Cancel a Spot Instance request.\nConsole\nAWS CLI\nTo manually terminate a Spot Instance using the console\nBefore you terminate an instance, verify that you won't lose any data by checking that your Amazon EBS volumes won't be deleted on termination and that you've copied any data that you need from your instance store volumes to persistent storage, such as Amazon EBS or Amazon S3.\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the Spot Instance. If you didn't save the instance ID of the Spot Instance, see Find your Spot Instances.\nChoose Instance state, Terminate (delete) instance.\nChoose Terminate (delete) when prompted for confirmation."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-interruptions.html",
        "content": "You can launch Spot Instances on spare EC2 capacity for steep discounts in exchange for returning them when Amazon EC2 needs the capacity back. When Amazon EC2 reclaims a Spot Instance, we call this event a Spot Instance interruption.\nDemand for Spot Instances can vary significantly from moment to moment, and the availability of Spot Instances can also vary significantly depending on how many unused EC2 instances are available. It is always possible that your Spot Instance might be interrupted. The following are the possible reasons that Amazon EC2 might interrupt your Spot Instances:\nCapacity\nAmazon EC2 can interrupt your Spot Instance when it needs it back. EC2 reclaims your instance mainly to repurpose capacity, but it can also occur for other reasons such as host maintenance or hardware decommission.\nPrice\nThe Spot price is higher than your maximum price.\nYou can specify the maximum price in your Spot request. However, if you specify a maximum price, your instances will be interrupted more frequently than if you do not specify it.\nConstraints\nIf your Spot request includes a constraint such as a launch group or an Availability Zone group, the Spot Instances are terminated as a group when the constraint can no longer be met.\nWhen Amazon EC2 interrupts a Spot Instance, it either terminates, stops, or hibernates the instance, depending on the interruption behavior that you specified when you created the Spot request.\nContents\nInterruption behavior\nPrepare for interruptions\nInitiate an interruption\nSpot Instance interruption notices\nFind interrupted Spot Instances\nDetermine whether Amazon EC2 terminated a Spot Instance\nBilling"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/interruption-behavior.html",
        "content": "When you create a Spot request, you can specify the interruption behavior. The following are the possible interruption behaviors:\nStop\nHibernate\nTerminate\nThe default behavior is that Amazon EC2 terminates Spot Instances when they are interrupted.\nStop interrupted Spot Instances\nYou can specify that Amazon EC2 stops your Spot Instances when they are interrupted. The Spot Instance request type must be persistent. You can't specify a launch group in the Spot Instance request. For EC2 Fleet or Spot Fleet, the request type must be maintain.\nConsiderations\nOnly Amazon EC2 can restart an interrupted stopped Spot Instance.\nFor a Spot Instance launched by a persistent Spot Instance request: Amazon EC2 restarts the stopped instance when capacity is available in the same Availability Zone and for the same instance type as the stopped instance (the same launch specification must be used).\nWhile a Spot Instance is stopped, you can modify some of its instance attributes, but not the instance type. If you detach or delete an EBS volume, it is not attached when the Spot Instance is started. If you detach the root volume and Amazon EC2 attempts to start the Spot Instance, the instance will fail to start and Amazon EC2 will terminate the stopped instance.\nYou can terminate a Spot Instance while it is stopped.\nIf you cancel a Spot Instance request, an EC2 Fleet, or a Spot Fleet, Amazon EC2 terminates any associated Spot Instances that are stopped.\nWhile an interrupted Spot Instance is stopped, you are charged only for the EBS volumes, which are preserved. With EC2 Fleet and Spot Fleet, if you have many stopped instances, you can exceed the limit on the number of EBS volumes for your account. For more information about how you're charged when a Spot Instance is interrupted, see Billing for interrupted Spot Instances.\nMake sure that you are familiar with the implications of stopping an instance. For information about what happens when an instance is stopped, see Differences between instance states.\nHibernate interrupted Spot Instances\nYou can specify that Amazon EC2 hibernates your Spot Instances when they are interrupted. For more information, see Hibernate your Amazon EC2 instance.\nAmazon EC2 now offers the same hibernation experience for Spot Instances as is currently available for On-Demand Instances. It offers more extensive support, where the following is now supported for Spot Instance hibernation:\nMore supported AMIs\nMore supported instance families\nUser-initiated hibernation\nTerminate interrupted Spot Instances\nWhen Amazon EC2 interrupts a Spot Instance, it terminates the instance by default, unless you specify a different interruption behavior, such as stop or hibernate. For more information, see Terminate Amazon EC2 instances."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/prepare-for-interruptions.html",
        "content": "Demand for Spot Instances can vary significantly from moment to moment, and the availability of Spot Instances can also vary significantly depending on how many unused EC2 instances are available. It is always possible that your Spot Instance might be interrupted. Therefore, you must ensure that your application is prepared for a Spot Instance interruption.\nWe recommend that you follow these best practices so that you're prepared for a Spot Instance interruption.\nCreate your Spot request using an Auto Scaling group. If your Spot Instances are interrupted, the Auto Scaling group will automatically launch replacement instances. For more information, see Auto Scaling groups with multiple instance types and purchase options in the Amazon EC2 Auto Scaling User Guide.\nEnsure that your instance is ready to go as soon as the request is fulfilled by using an Amazon Machine Image (AMI) that contains the required software configuration. You can also use user data to run commands at startup.\nData on instance store volumes is lost when the instance is stopped or terminated. Back up any important data on instance store volumes to a more persistent storage, such as Amazon S3, Amazon EBS, or Amazon DynamoDB.\nStore important data regularly in a place that isn't affected if the Spot Instance terminates. For example, you can use Amazon S3, Amazon EBS, or DynamoDB.\nDivide the work into small tasks (using a Grid, Hadoop, or queue-based architecture) or use checkpoints so that you can save your work frequently.\nAmazon EC2 emits a rebalance recommendation signal to the Spot Instance when the instance is at an elevated risk of interruption. You can rely on the rebalance recommendation to proactively manage Spot Instance interruptions without having to wait for the two-minute Spot Instance interruption notice. For more information, see EC2 instance rebalance recommendations.\nUse the two-minute Spot Instance interruption notices to monitor the status of your Spot Instances. For more information, see Spot Instance interruption notices.\nWhile we make every effort to provide these warnings as soon as possible, it is possible that your Spot Instance is interrupted before the warnings can be made available. Test your application to ensure that it handles an unexpected instance interruption gracefully, even if you are monitoring for rebalance recommendation signals and interruption notices. You can do this by running the application using an On-Demand Instance and then terminating the On-Demand Instance yourself.\nRun a controlled fault injection experiment with AWS Fault Injection Service to test how your application responds when your Spot Instance is interrupted. For more information, see the Tutorial: Test Spot Instance interruptions using AWS FIS in the AWS Fault Injection Service User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/initiate-a-spot-instance-interruption.html",
        "content": "You can select a Spot Instance request or a Spot Fleet request in the Amazon EC2 console and initiate a Spot Instance interruption so that you can test how the applications on your Spot Instances handle being interrupted. When you initiate a Spot Instance interruption, Amazon EC2 notifies you that your Spot Instance will be interrupted in two minutes, and then, after two minutes, the instance is interrupted.\nThe underlying service that performs the Spot Instance interruption is AWS Fault Injection Service (AWS FIS). For information about AWS FIS, see AWS Fault Injection Service.\nNote\nInterruption behaviors are terminate, stop, and hibernate. If you set the interruption behavior to hibernate, when you initiate a Spot Instance interruption, the hibernation process will begin immediately.\nInitiating a Spot Instance interruption is supported in all AWS Regions except Asia Pacific (Jakarta), Asia Pacific (Osaka), China (Beijing), China (Ningxia), and Middle East (UAE).\nContents\nInitiate a Spot Instance interruption\nVerify the Spot Instance interruption\nQuotas\nInitiate a Spot Instance interruption\nYou can use the EC2 console to quickly initiate a Spot Instance interruption. When you select a Spot Instance request, you can initiate the interruption of one Spot Instance. When you select a Spot Fleet request, you can initiate the interruption of multiple Spot Instances at once.\nFor more advanced experiments to test Spot Instance interruptions, you can create your own experiments using the AWS FIS console.\nTo initiate the interruption of one Spot Instance in a Spot Instance request using the EC2 console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nFrom the navigation pane, choose Spot Requests.\nSelect a Spot Instance request, and then choose Actions, Initiate interruption. You can\u2019t select multiple Spot Instance requests to initiate an interruption.\nIn the Initiate Spot Instance interruption dialog box, under Service access, either use the default role, or choose an existing role. To choose an existing role, choose Use an existing service role, and then, for IAM role, select the role to use.\nWhen you're ready to initiate the Spot Instance interruption, choose Initiate interruption.\nTo initiate the interruption of one or more Spot Instances in a Spot Fleet request using the EC2 console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nFrom the navigation pane, choose Spot Requests.\nSelect a Spot Fleet request, and then choose Actions, Initiate interruption. You can\u2019t select multiple Spot Fleet requests to initiate an interruption.\nIn the Specify number of Spot Instances dialog box, for Number of instances to interrupt, enter the number of Spot Instances to interrupt, and then choose Confirm.\nNote\nThe number can't exceed the number of Spot Instances in the fleet or your quota for the number of Spot Instances that AWS FIS can interrupt per experiment.\nIn the Initiate Spot Instance interruption dialog box, under Service access, either use the default role, or choose an existing role. To choose an existing role, choose Use an existing service role, and then, for IAM role, select the role to use.\nWhen you're ready to initiate the Spot Instance interruption, choose Initiate interruption.\nTo create more advanced experiments to test Spot Instance interruptions using the AWS FIS console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nFrom the navigation pane, choose Spot Requests.\nChoose Actions, Create advanced experiments.\nThe AWS FIS console opens. For more information, see Tutorial: Test Spot Instance interruptions using AWS FIS in the AWS Fault Injection Service User Guide.\nVerify the Spot Instance interruption\nAfter you initiate the interruption, the following occurs:\nThe Spot Instance receives an instance rebalance recommendation.\nA Spot Instance interruption notice is issued two minutes before AWS FIS interrupts your instance.\nAfter two minutes, the Spot Instance is interrupted.\nA Spot Instance that was stopped by AWS FIS remains stopped until you restart it.\nTo verify that the instance was interrupted after you initiated the interruption\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nFrom the navigation pane, open Spot Requests and Instances in separate browser tabs or windows.\nFor Spot Requests, select the Spot Instance request or Spot Fleet request. The initial status is fulfilled. After the instance is interrupted, the status changes as follows, depending on the interruption behavior:\nterminate \u2013 The status changes to instance-terminated-by-experiment.\nstop \u2013 The status changes to marked-for-stop-by-experiment and then instance-stopped-by-experiment.\nFor Instances, select the Spot Instance. The initial status is Running. Two minutes after you receive the Spot Instance interruption notice, the status changes as follows, depending on the interruption behavior:\nstop \u2013 The status changes to Stopping and then Stopped.\nterminate \u2013 The status changes to Shutting-down and then Terminated.\nQuotas\nYour AWS account has the following default quota for the number of Spot Instances that AWS FIS can interrupt per experiment.\nName Default Adjustable Description\nTarget SpotInstances for aws:ec2:send-spot-instance-interruptions\nEach supported Region: 5\nYes\nThe maximum number of Spot Instances that aws:ec2:send-spot-instance-interruptions can target when you identify targets using tags, per experiment.\nYou can request a quota increase. For more information, see Requesting a quota increase in the Service Quotas User Guide.\nTo view all the quotas for AWS FIS, open the Service Quotas console. In the navigation pane, choose AWS services and select AWS Fault Injection Service. You can also view all the quotas for AWS Fault Injection Service in the AWS Fault Injection Service User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-instance-termination-notices.html",
        "content": "A Spot Instance interruption notice is a warning that is issued two minutes before Amazon EC2 stops or terminates your Spot Instance. If you specify hibernation as the interruption behavior, you receive an interruption notice, but you do not receive a two-minute warning because the hibernation process begins immediately.\nThe best way for you to gracefully handle Spot Instance interruptions is to architect your application to be fault-tolerant. To accomplish this, you can take advantage of Spot Instance interruption notices. We recommend that you check for these interruption notices every 5 seconds.\nThe interruption notices are made available as a EventBridge event and as items in the instance metadata on the Spot Instance. Interruption notices are emitted on a best effort basis.\nEC2 Spot Instance Interruption Warning event\nWhen Amazon EC2 is going to interrupt your Spot Instance, it emits an event two minutes prior to the actual interruption (except for hibernation, which gets the interruption notice, but not two minutes in advance, because hibernation begins immediately). This event can be detected by Amazon EventBridge. For more information about EventBridge events, see the Amazon EventBridge User Guide. For a detailed example that walks you through how to create and use event rules, see Taking Advantage of Amazon EC2 Spot Instance Interruption Notices.\nThe following is an example of the event for Spot Instance interruption. The possible values for instance-action are hibernate, stop, or terminate.\n{\n    \"version\": \"0\",\n    \"id\": \"12345678-1234-1234-1234-123456789012\",\n    \"detail-type\": \"EC2 Spot Instance Interruption Warning\",\n    \"source\": \"aws.ec2\",\n    \"account\": \"123456789012\",\n    \"time\": \"yyyy-mm-ddThh:mm:ssZ\",\n    \"region\": \"us-east-2\",\n    \"resources\": [\"arn:aws:ec2:us-east-2a:instance/i-1234567890abcdef0\"],\n    \"detail\": {\n        \"instance-id\": \"i-1234567890abcdef0\",\n        \"instance-action\": \"action\"\n    }\n}\nNote\nThe ARN format of the Spot Instance interruption event is arn:aws:ec2:availability-zone:instance/instance-id. This format differs from the EC2 resource ARN format.\ninstance-action\nThe instance-action item specifies the action and the approximate time, in UTC, when the action will occur.\nIf your Spot Instance is marked to be stopped or terminated by Amazon EC2, the instance-action item is present in your instance metadata. Otherwise, it is not present. You can retrieve the instance-action using Instance Metadata Service Version 2 (IMDSv2) as follows.\ncURL\nPowerShell\n[ec2-user ~]$ TOKEN=`curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"` \\\n&& curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/spot/instance-action\nThe following example output indicates the time at which this instance will be stopped.\n{\"action\": \"stop\", \"time\": \"2017-09-18T08:22:00Z\"}\nThe following example output indicates the time at which this instance will be terminated.\n{\"action\": \"terminate\", \"time\": \"2017-09-18T08:22:00Z\"}\nIf Amazon EC2 is not preparing to stop or terminate the instance, or if you terminated the instance yourself, instance-action is not present in the instance metadata and you receive an HTTP 404 error when you try to retrieve it.\ntermination-time\nThe termination-time item specifies the approximate time in UTC when the instance will receive the shutdown signal.\nNote\nThis item is maintained for backward compatibility; you should use instance-action instead.\nIf your Spot Instance is marked for termination by Amazon EC2 (either due to a Spot Instance interruption where the interruption behavior is set to terminate, or due to the cancellation of a persistent Spot Instance request), the termination-time item is present in your instance metadata. Otherwise, it is not present. You can retrieve the termination-time using IMDSv2 as follows.\ncURL\nPowerShell\n[ec2-user ~]$ TOKEN=`curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"`\n[ec2-user ~]$ if curl -H \"X-aws-ec2-metadata-token: $TOKEN\" -s http://169.254.169.254/latest/meta-data/spot/termination-time | grep -q .*T.*Z; then echo termination_scheduled; fi\nThe following is example output.\n2015-01-05T18:02:00Z\nIf Amazon EC2 is not preparing to terminate the instance (either because there is no Spot Instance interruption or because your interruption behavior is set to stop or hibernate), or if you terminated the Spot Instance yourself, the termination-time item is either not present in the instance metadata (so you receive an HTTP 404 error) or contains a value that is not a time value.\nIf Amazon EC2 fails to terminate the instance, the request status is set to fulfilled. The termination-time value remains in the instance metadata with the original approximate time, which is now in the past."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-interrupted-Spot-Instance.html",
        "content": "In the console, the Instances pane displays all instances, including Spot Instances. The instance lifecycle of a Spot Instance is spot. The instance state of a Spot Instance is either stopped or terminated, depending on the interruption behavior that you configured. For a hibernated Spot Instance, the instance state is stopped.\nTo find an interrupted Spot Instance using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nApply the following filter: Instance lifecycle=spot.\nApply the Instance state=stopped or Instance state=terminated filter depending on the interruption behavior that you configured.\nFor each Spot Instance, on the Details tab, under Instance details, find State transition message. The following codes indicate that the Spot Instance was interrupted.\nServer.SpotInstanceShutdown\nServer.SpotInstanceTermination\nFor additional details about the reason for the interruption, check the Spot request status code. For more information, see Get the status of a Spot Instance request.\nTo find interrupted Spot Instances using the AWS CLI\nYou can list your interrupted Spot Instances using the describe-instances command with the --filters parameter. To list only the instance IDs in the output, include the --query parameter.\nIf the instance interruption behavior is to terminate the Spot Instances, use the following command:\naws ec2 describe-instances \\\n    --filters Name=instance-lifecycle,Values=spot Name=instance-state-name,Values=terminated Name=state-reason-code,Values=Server.SpotInstanceTermination \\\n    --query \"Reservations[*].Instances[*].InstanceId\"\nIf the instance interruption behavior is to stop the Spot Instances, use the following command:\naws ec2 describe-instances \\\n    --filters Name=instance-lifecycle,Values=spot Name=instance-state-name,Values=stopped Name=state-reason-code,Values=Server.SpotInstanceShutdown \\\n    --query \"Reservations[*].Instances[*].InstanceId\""
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/BidEvictedEvent.html",
        "content": "A Spot Instance runs until Amazon EC2 terminates it in response to a Spot Instance interruption, or until you terminate it yourself. For more information, see Behavior of Spot Instance interruptions.\nAfter a Spot Instance is terminated, you can use AWS CloudTrail to see whether Amazon EC2 terminated it. If the CloudTrail log includes a BidEvictedEvent, this indicates that Amazon EC2 terminated the Spot Instance. If instead you see a TerminateInstances event, this indicates that a user terminated the Spot Instance.\nAlternatively, if you want to receive notification that Amazon EC2 is going to interrupt your Spot Instance, use Amazon EventBridge to respond to the EC2 Spot Instance Interruption Warning event.\nTo view BidEvictedEvent events in CloudTrail\nOpen the CloudTrail console at https://console.aws.amazon.com/cloudtrail/.\nIn the navigation pane, choose Event history.\nFrom the list of filters, choose Event name, and then in the filter field to the right, enter BidEvictedEvent.\n(Optional) Select a time range.\nIf the list is not empty, choose BidEvictedEvent from the resulting entry to open its details page. You can find information about the Spot Instance in the Event record pane, including the ID of the Spot Instance. The following is an example of the event record.\n{\n    \"eventVersion\": \"1.05\",\n    \"userIdentity\": {\n        \"accountId\": \"123456789012\",\n        \"invokedBy\": \"ec2.amazonaws.com\"\n    },\n    \"eventTime\": \"2016-08-16T22:30:00Z\",\n    \"eventSource\": \"ec2.amazonaws.com\",\n    \"userAgent\": \"ec2.amazonaws.com\",\n    \"sourceIPAddress\": \"ec2.amazonaws.com\",\n    \"eventName\": \"BidEvictedEvent\",\n    \"awsRegion\": \"us-east-2\",\n    \"eventID\": \"d27a6096-807b-4bd0-8c20-a33a83375054\",\n    \"eventType\": \"AwsServiceEvent\",\n    \"recipientAccountId\": \"123456789012\",\n    \"RequestParameters\": null,\n    \"ResponseElements\": null,\n    \"serviceEventDetails\": {\n        \"instanceIdSet\": [\n          \"i-1eb2ac8eEXAMPLE\"\n        ]\n    }\n}\nIf you did not find an entry for the BidEvictedEvent event, enter TerminateInstances as the event name. For more information about the event record for TerminateInstances, see Amazon EC2 API event examples."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-for-interrupted-spot-instances.html",
        "content": "When a Spot Instance is interrupted, you're charged for instance and EBS volume usage, and you might incur other charges, as follows.\nInstance usage\nWho interrupts the Spot Instance Operating system Interrupted in the first hour Interrupted in any hour after the first hour\nIf you stop or terminate the Spot Instance\nWindows and Linux (excluding SUSE) Charged for the seconds used Charged for the seconds used\nSUSE Charged for the full hour even if you used a partial hour Charged for the full hours used, and charged a full hour for the interrupted partial hour\nIf the Amazon EC2 interrupts the Spot Instance\nWindows and Linux (excluding SUSE) No charge Charged for the seconds used\nSUSE No charge\nCharged for the full hours used, but no charge for the interrupted partial hour\nEBS volume usage\nWhile an interrupted Spot Instance is stopped, you are charged only for the EBS volumes, which are preserved.\nWith EC2 Fleet and Spot Fleet, if you have many stopped instances, you can exceed the limit on the number of EBS volumes for your account."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/rebalance-recommendations.html",
        "content": "An EC2 instance rebalance recommendation is a signal that notifies you when a Spot Instance is at elevated risk of interruption. The signal can arrive sooner than the two-minute Spot Instance interruption notice, giving you the opportunity to proactively manage the Spot Instance. You can decide to rebalance your workload to new or existing Spot Instances that are not at an elevated risk of interruption.\nIt is not always possible for Amazon EC2 to send the rebalance recommendation signal before the two-minute Spot Instance interruption notice. Therefore, the rebalance recommendation signal can arrive along with the two-minute interruption notice.\nRebalance recommendations are made available as a EventBridge event and as an item in the instance metadata on the Spot Instance. Events are emitted on a best effort basis.\nNote\nRebalance recommendations are only supported for Spot Instances that are launched after November 5, 2020 00:00 UTC.\nContents\nRebalance actions you can take\nMonitor rebalance recommendation signals\nServices that use the rebalance recommendation signal\nRebalance actions you can take\nThese are some of the possible rebalancing actions that you can take:\nGraceful shutdown\nWhen you receive the rebalance recommendation signal for a Spot Instance, you can start your instance shutdown procedures, which might include ensuring that processes are completed before stopping them. For example, you can upload system or application logs to Amazon Simple Storage Service (Amazon S3), you can shut down Amazon SQS workers, or you can complete deregistration from the Domain Name System (DNS). You can also save your work in external storage and resume it at a later time.\nPrevent new work from being scheduled\nWhen you receive the rebalance recommendation signal for a Spot Instance, you can prevent new work from being scheduled on the instance, while continuing to use the instance until the scheduled work is completed.\nProactively launch new replacement instances\nYou can configure Auto Scaling groups, EC2 Fleet, or Spot Fleet to automatically launch replacement Spot Instances when a rebalance recommendation signal is emitted. For more information, see Use Capacity Rebalancing to handle Amazon EC2 Spot interruptions in the Amazon EC2 Auto Scaling User Guide, and Use Capacity Rebalancing in EC2 Fleet and Spot Fleet to replace at-risk Spot Instances in this user guide.\nMonitor rebalance recommendation signals\nYou can monitor the rebalance recommendation signal so that, when it is emitted, you can take the actions that are specified in the preceding section. The rebalance recommendation signal is made available as an event that is sent to Amazon EventBridge (formerly known as Amazon CloudWatch Events) and as instance metadata on the Spot Instance.\nMonitor rebalance recommendation signals:\nUse Amazon EventBridge\nUse instance metadata\nUse Amazon EventBridge\nWhen the rebalance recommendation signal is emitted for a Spot Instance, the event for the signal is sent to Amazon EventBridge. If EventBridge detects an event pattern that matches a pattern defined in a rule, EventBridge invokes a target (or targets) specified in the rule.\nThe following is an example event for the rebalance recommendation signal.\n{\n    \"version\": \"0\",\n    \"id\": \"12345678-1234-1234-1234-123456789012\",\n    \"detail-type\": \"EC2 Instance Rebalance Recommendation\",\n    \"source\": \"aws.ec2\",\n    \"account\": \"123456789012\",\n    \"time\": \"yyyy-mm-ddThh:mm:ssZ\",\n    \"region\": \"us-east-2\",\n    \"resources\": [\"arn:aws:ec2:us-east-2:123456789012:instance/i-1234567890abcdef0\"],\n    \"detail\": {\n        \"instance-id\": \"i-1234567890abcdef0\"\n    }\n}\nThe following fields form the event pattern that is defined in the rule:\n\"detail-type\": \"EC2 Instance Rebalance Recommendation\"\nIdentifies that the event is a rebalance recommendation event\n\"source\": \"aws.ec2\"\nIdentifies that the event is from Amazon EC2\nCreate an EventBridge rule\nYou can write an EventBridge rule and automate what actions to take when the event pattern matches the rule.\nThe following example creates an EventBridge rule to send an email, text message, or mobile push notification every time Amazon EC2 emits a rebalance recommendation signal. The signal is emitted as an EC2 Instance Rebalance Recommendation event, which triggers the action defined by the rule.\nBefore creating the EventBridge rule, you must create the Amazon SNS topic for the email, text message, or mobile push notification.\nTo create an EventBridge rule for a rebalance recommendation event\nOpen the Amazon EventBridge console at https://console.aws.amazon.com/events/.\nChoose Create rule.\nFor Define rule detail, do the following:\nEnter a Name for the rule, and, optionally, a description.\nA rule can't have the same name as another rule in the same Region and on the same event bus.\nFor Event bus, choose default. When an AWS service in your account generates an event, it always goes to your account's default event bus.\nFor Rule type, choose Rule with an event pattern.\nChoose Next.\nFor Build event pattern, do the following:\nFor Event source, choose AWS events or EventBridge partner events.\nFor Event pattern, for this example you\u2019ll specify the following event pattern to match the EC2 Instance Rebalance Recommendation event, and then choose Save.\n{\n \"source\": [\"aws.ec2\"],\n \"detail-type\": [\"EC2 Instance Rebalance Recommendation\"]\n}\nTo add the event pattern, you can either use a template by choosing Event pattern form, or specify your own pattern by choosing Custom pattern (JSON editor), as follows:\nTo use a template to create the event pattern, do the following:\nChoose Event pattern form.\nFor Event source, choose AWS services.\nFor AWS Service, choose EC2 Spot Fleet.\nFor Event type, choose EC2 Instance Rebalance Recommendation.\nTo customize the template, choose Edit pattern and make your changes to match the example event pattern.\n(Alternative) To specify a custom event pattern, do the following:\nChoose Custom pattern (JSON editor).\nIn the Event pattern box, add the event pattern for this example.\nChoose Next.\nFor Select target(s), do the following:\nFor Target types, choose AWS service.\nFor Select a target, choose SNS topic to send an email, text message, or mobile push notification when the event occurs.\nFor Topic, choose an existing topic. You first need to create an Amazon SNS topic using the Amazon SNS console. For more information, see Using Amazon SNS for application-to-person (A2P) messaging in the Amazon Simple Notification Service Developer Guide.\n(Optional) Under Additional settings, you can optionally configure additional settings. For more information, see Creating Amazon EventBridge rules that react to events (step 16) in the Amazon EventBridge User Guide.\nChoose Next.\n(Optional) For Tags, you can optionally assign one or more tags to your rule, and then choose Next.\nFor Review and create, do the following:\nReview the details of the rule and modify them as necessary.\nChoose Create rule.\nFor more information, see Amazon EventBridge rules and Amazon EventBridge event patterns in the Amazon EventBridge User Guide\nUse instance metadata\nThe instance metadata category events/recommendations/rebalance provides the approximate time, in UTC, when the rebalance recommendation signal was emitted for a Spot Instance.\nWe recommend that you check for rebalance recommendation signals every 5 seconds so that you don't miss an opportunity to act on the rebalance recommendation.\nIf a Spot Instance receives a rebalance recommendation, the time that the signal was emitted is present in the instance metadata. You can retrieve the time that the signal was emitted as follows.\ncURL\nPowerShell\nIMDSv2\n[ec2-user ~]$ TOKEN=`curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"` \\\n&& curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/events/recommendations/rebalance\nIMDSv1\n[ec2-user ~]$ curl http://169.254.169.254/latest/meta-data/events/recommendations/rebalance\nThe following is example output, which indicates the time, in UTC, that the rebalance recommendation signal was emitted for the Spot Instance.\n{\"noticeTime\": \"2020-10-27T08:22:00Z\"}\nIf the signal has not been emitted for the instance, events/recommendations/rebalance is not present and you receive an HTTP 404 error when you try to retrieve it.\nServices that use the rebalance recommendation signal\nAmazon EC2 Auto Scaling, EC2 Fleet, and Spot Fleet use the rebalance recommendation signal to make it easy for you to maintain workload availability by proactively augmenting your fleet with a new Spot Instance before a running instance receives the two-minute Spot Instance interruption notice. You can have these services monitor and respond proactively to changes affecting the availability of your Spot Instances. For more information, see the following:\nUse Capacity Rebalancing to handle Amazon EC2 Spot interruptions in the Amazon EC2 Auto Scaling User Guide\nUse Capacity Rebalancing in EC2 Fleet and Spot Fleet to replace at-risk Spot Instances in the EC2 Fleet and Spot Fleet topic in this user guide"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html",
        "content": "The Spot placement score feature can recommend an AWS Region or Availability Zone based on your Spot capacity requirements. Spot capacity fluctuates, and you can't be sure that you'll always get the capacity that you need. A Spot placement score indicates how likely it is that a Spot request will succeed in a Region or Availability Zone.\nNote\nA Spot placement score does not provide any guarantees in terms of available capacity or risk of interruption. A Spot placement score serves only as a recommendation.\nUse cases\nYou can use the Spot placement score feature for the following:\nTo relocate and scale Spot compute capacity in a different Region, as needed, in response to increased capacity needs or decreased available capacity in the current Region.\nTo identify the most optimal Availability Zone in which to run single-Availability Zone workloads.\nTo simulate future Spot capacity needs so that you can pick an optimal Region for the expansion of your Spot-based workloads.\nTo find an optimal combination of instance types to fulfill your Spot capacity needs.\nContents\nLimitations\nCosts\nHow Spot placement score works\nRequired permissions for Spot placement score\nCalculate the Spot placement score\nLimitations\nTarget capacity limit \u2013 Your Spot placement score target capacity limit is based on your recent Spot usage, while accounting for potential usage growth. If you have no recent Spot usage, we provide you with a low default limit aligned with your Spot request limit.\nRequest configurations limit \u2013 We can limit the number of new request configurations within a 24-hour period if we detect patterns not associated with the intended use of the Spot placement score feature. If you reach the limit, you can retry the request configurations that you've already used, but you can't specify new request configurations until the next 24-hour period.\nMinimum number of instance types \u2013 If you specify instance types, you must specify at least three different instance types, otherwise Amazon EC2 will return a low Spot placement score. Similarly, if you specify instance attributes, they must resolve to at least three different instance types. Instance types are considered different if they have a different name. For example, m5.8xlarge, m5a.8xlarge, and m5.12xlarge are all considered different.\nCosts\nThere is no additional charge for using the Spot placement score feature."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/how-sps-works.html",
        "content": "When you use the Spot placement score feature, you first specify your compute requirements for your Spot Instances, and then Amazon EC2 returns the top 10 Regions or Availability Zones where your Spot request is likely to succeed. Each Region or Availability Zone is scored on a scale from 1 to 10, with 10 indicating that your Spot request is highly likely to succeed, and 1 indicating that your Spot request is not likely to succeed.\nTo use the Spot placement score feature, follow these steps:\nStep 1: Specify your Spot requirements\nStep 2: Filter the Spot placement score response\nStep 3: Review the recommendations\nStep 4: Use the recommendations\nStep 1: Specify your Spot requirements\nFirst, you specify your desired target Spot capacity and your compute requirements, as follows:\nSpecify the target Spot capacity, and optionally the target capacity unit.\nYou can specify your desired target Spot capacity in terms of the number of instances or vCPUs, or in terms of the amount of memory in MiB. To specify the target capacity in number of vCPUs or amount of memory, you must specify the target capacity unit as vcpu or memory-mib. Otherwise, it defaults to number of instances.\nBy specifying your target capacity in terms of the number of vCPUs or the amount of memory, you can use these units when counting the total capacity. For example, if you want to use a mix of instances of different sizes, you can specify the target capacity as a total number of vCPUs. The Spot placement score feature then considers each instance type in the request by its number of vCPUs, and counts the total number of vCPUs rather than the total number of instances when totaling up the target capacity.\nFor example, say you specify a total target capacity of 30 vCPUs, and your instance type list consists of c5.xlarge (4 vCPUs), m5.2xlarge (8 vCPUs), and r5.large (2 vCPUs). To achieve a total of 30 vCPUs, you could get a mix of 2 c5.xlarge (2*4 vCPUs), 2 m5.2xlarge (2*8 vCPUs), and 3 r5.large (3*2 vCPUs).\nSpecify instance types or instance attributes.\nYou can either specify the instance types to use, or you can specify the instance attributes that you need for your compute requirements, and then let Amazon EC2 identify the instance types that have those attributes. This is known as attribute-based instance type selection.\nYou can't specify both instance types and instance attributes in the same Spot placement score request.\nIf you specify instance types, you must specify at least three different instance types, otherwise Amazon EC2 will return a low Spot placement score. Similarly, if you specify instance attributes, they must resolve to at least three different instance types.\nFor examples of different ways to specify your Spot requirements, see Example configurations.\nStep 2: Filter the Spot placement score response\nAmazon EC2 calculates the Spot placement score for each Region or Availability Zone, and returns either the top 10 Regions or the top 10 Availability Zones where your Spot request is likely to succeed. The default is to return a list of scored Regions. If you plan to launch all of your Spot capacity into a single Availability Zone, then it's useful to request a list of scored Availability Zones.\nYou can specify a Region filter to narrow down the Regions that will be returned in the response.\nYou can combine the Region filter and a request for scored Availability Zones. In this way, the scored Availability Zones are confined to the Regions for which you've filtered. To find the highest-scored Availability Zone in a Region, specify only that Region, and the response will return a scored list of all of the Availability Zones in that Region.\nStep 3: Review the recommendations\nThe Spot placement score for each Region or Availability Zone is calculated based on the target capacity, the composition of the instance types, the historical and current Spot usage trends, and the time of the request. Because Spot capacity is constantly fluctuating, the same Spot placement score request can yield different scores when calculated at different times.\nRegions and Availability Zones are scored on a scale from 1 to 10. A score of 10 indicates that your Spot request is highly likely\u2014but not guaranteed\u2014to succeed. A score of 1 indicates that your Spot request is not likely to succeed at all. The same score might be returned for different Regions or Availability Zones.\nIf low scores are returned, you can edit your compute requirements and recalculate the score. You can also request Spot placement score recommendations for the same compute requirements at different times of the day.\nStep 4: Use the recommendations\nA Spot placement score is only relevant if your Spot request has exactly the same configuration as the Spot placement score configuration (target capacity, target capacity unit, and instance types or instance attributes), and is configured to use the capacity-optimized allocation strategy. Otherwise, the likelihood of getting available Spot capacity will not align with the score.\nWhile a Spot placement score serves as a guideline, and no score guarantees that your Spot request will be fully or partially fulfilled, you can use the following information to get the best results:\nUse the same configuration \u2013 The Spot placement score is relevant only if the Spot request configuration (target capacity, target capacity unit, and instance types or instance attributes) in your Auto Scaling group, EC2 Fleet, or Spot Fleet is the same as what you entered to get the Spot placement score.\nIf you used attribute-based instance type selection in your Spot placement score request, you can use attribute-based instance type selection to configure your Auto Scaling group, EC2 Fleet, or Spot Fleet. For more information, see Create mixed instances group using attribute-based instance type selection and Specify attributes for instance type selection for EC2 Fleet or Spot Fleet.\nNote\nIf you specified your target capacity in terms of the number of vCPUs or the amount of memory, and you specified instance types in your Spot placement score configuration, note that you can\u2019t currently create this configuration in your Auto Scaling group, EC2 Fleet, or Spot Fleet. Instead, you must manually set the instance weighting by using the WeightedCapacity parameter.\nUse the capacity-optimized allocation strategy \u2013 Any score assumes that your fleet request will be configured to use all Availability Zones (for requesting capacity across Regions) or a single Availability Zone (if requesting capacity in one Availability Zone) and the capacity-optimized Spot allocation strategy for your request for Spot capacity to succeed. If you use other allocation strategies, such as lowest-price, the likelihood of getting available Spot capacity will not align with the score.\nAct on a score immediately \u2013 The Spot placement score recommendation reflects the available Spot capacity at the time of the request, and the same configuration can yield different scores when calculated at different times due to Spot capacity fluctuations. While a score of 10 means that your Spot capacity request is highly likely\u2014but not guaranteed\u2014to succeed, for best results we recommend that you act on a score immediately. We also recommend that you get a fresh score each time you attempt a capacity request."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/sps-iam-permission.html",
        "content": "By default, IAM identities (users, roles, or groups) don't have permission to use Spot placement score. To allow IAM identities to use Spot placement score, you must create an IAM policy that grants permission to use the ec2:GetSpotPlacementScores EC2 API action. You then attach the policy to the IAM identities that require this permission.\nThe following is an example IAM policy that grants permission to use the ec2:GetSpotPlacementScores EC2 API action.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"ec2:GetSpotPlacementScores\",\n            \"Resource\": \"*\"\n        }\n    ]\n}\nFor information about editing an IAM policy, see Editing IAM policies in the IAM User Guide.\nTo provide access, add permissions to your users, groups, or roles:\nUsers and groups in AWS IAM Identity Center:\nCreate a permission set. Follow the instructions in Create a permission set in the AWS IAM Identity Center User Guide.\nUsers managed in IAM through an identity provider:\nCreate a role for identity federation. Follow the instructions in Create a role for a third-party identity provider (federation) in the IAM User Guide.\nIAM users:\nCreate a role that your user can assume. Follow the instructions in Create a role for an IAM user in the IAM User Guide.\n(Not recommended) Attach a policy directly to a user or add a user to a user group. Follow the instructions in Adding permissions to a user (console) in the IAM User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/work-with-spot-placement-score.html",
        "content": "You can calculate a Spot placement score based on target capacity and compute requirements. For more information, see How Spot placement score works.\nRequired permissions\nEnsure that you have the required permissions. For more information, see Required permissions for Spot placement score.\nOptions\nCalculate using instance attributes\nCalculate using instance types\nCalculate using the AWS CLI\nLooking for an automated solution? Instead of following the manual steps in this user guide, you can build a Spot placement score tracker dashboard that automatically captures and stores the scores in Amazon CloudWatch. For more information, see Guidance for Building a Spot Placement Score Tracker Dashboard on AWS.\nCalculate using instance attributes\nTo calculate a Spot placement score by specifying instance attributes\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Spot Requests.\nChoose the down arrow next to Request Spot Instances and choose Calculate Spot Placement Score.\nChoose Enter requirements.\nFor Target capacity, enter your desired capacity in terms of the number of instances or vCPUs, or the amount of memory (MiB).\nFor Instance type requirements, to specify your compute requirements and let Amazon EC2 identify the optimal instance types with these requirements, choose Specify instance attributes that match your compute requirements.\nFor vCPUs, enter the desired minimum and maximum number of vCPUs. To specify no limit, select No minimum, No maximum, or both.\nFor Memory (GiB), enter the desired minimum and maximum amount of memory. To specify no limit, select No minimum, No maximum, or both.\nFor CPU architecture, select the required instance architecture.\n(Optional) For Additional instance attributes, you can optionally specify one or more attributes to express your compute requirements in more detail. Each additional attribute adds a further constraint to your request. You can omit the additional attributes; when omitted, the default values are used. For a description of each attribute and their default values, see get-spot-placement-scores.\n(Optional) To view the instance types with your specified attributes, expand Preview matching instance types. To exclude instance types from being used in the placement evaluation, select the instances and then choose Exclude selected instance types.\nChoose Load placement scores, and review the results.\n(Optional) To display the Spot placement score for specific Regions, for Regions to evaluate, select the Regions to evaluate, and then choose Calculate placement scores.\n(Optional) To display the Spot placement score for the Availability Zones in the displayed Regions, select the Provide placement scores per Availability Zone checkbox. A list of scored Availability Zones is useful if you want to launch all of your Spot capacity into a single Availability Zone.\n(Optional) To edit your compute requirements and get a new placement score, choose Edit, make the necessary adjustments, and then choose Calculate placement scores.\nCalculate using instance types\nTo calculate a Spot placement score by specifying instance types\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Spot Requests.\nChoose the down arrow next to Request Spot Instances and choose Calculate Spot Placement Score.\nChoose Enter requirements.\nFor Target capacity, enter your desired capacity in terms of the number of instances or vCPUs, or the amount of memory (MiB).\nFor Instance type requirements, to specify the instance types to use, choose Manually select instance types.\nChoose Select instance types, select the instance types to use, and then choose Select. To quickly find instance types, you can use the filter bar to filter the instance types by different properties.\nChoose Load placement scores, and review the results.\n(Optional) To display the Spot placement score for specific Regions, for Regions to evaluate, select the Regions to evaluate, and then choose Calculate placement scores.\n(Optional) To display the Spot placement score for the Availability Zones in the displayed Regions, select the Provide placement scores per Availability Zone checkbox. A list of scored Availability Zones is useful if you want to launch all of your Spot capacity into a single Availability Zone.\n(Optional) To edit the list of instance types and get a new placement score, choose Edit, make the necessary adjustments, and then choose Calculate placement scores.\nCalculate using the AWS CLI\nTo calculate the Spot placement score\n(Optional) To generate all of the possible parameters that can be specified for the Spot placement score configuration, use the get-spot-placement-scores command and the --generate-cli-skeleton parameter.\naws ec2 get-spot-placement-scores \\\n    --region us-east-1 \\\n    --generate-cli-skeleton\nThe following is example output.\n{\n    \"InstanceTypes\": [\n        \"\"\n    ],\n    \"TargetCapacity\": 0,\n    \"TargetCapacityUnitType\": \"vcpu\",\n    \"SingleAvailabilityZone\": true,\n    \"RegionNames\": [\n        \"\"\n    ],\n    \"InstanceRequirementsWithMetadata\": {\n        \"ArchitectureTypes\": [\n            \"x86_64_mac\"\n        ],\n        \"VirtualizationTypes\": [\n            \"hvm\"\n        ],\n        \"InstanceRequirements\": {\n            \"VCpuCount\": {\n                \"Min\": 0,\n                \"Max\": 0\n            },\n            \"MemoryMiB\": {\n                \"Min\": 0,\n                \"Max\": 0\n            },\n            \"CpuManufacturers\": [\n                \"amd\"\n            ],\n            \"MemoryGiBPerVCpu\": {\n                \"Min\": 0.0,\n                \"Max\": 0.0\n            },\n            \"ExcludedInstanceTypes\": [\n                \"\"\n            ],\n            \"InstanceGenerations\": [\n                \"previous\"\n            ],\n            \"SpotMaxPricePercentageOverLowestPrice\": 0,\n            \"OnDemandMaxPricePercentageOverLowestPrice\": 0,\n            \"BareMetal\": \"excluded\",\n            \"BurstablePerformance\": \"excluded\",\n            \"RequireHibernateSupport\": true,\n            \"NetworkInterfaceCount\": {\n                \"Min\": 0,\n                \"Max\": 0\n            },\n            \"LocalStorage\": \"included\",\n            \"LocalStorageTypes\": [\n                \"hdd\"\n            ],\n            \"TotalLocalStorageGB\": {\n                \"Min\": 0.0,\n                \"Max\": 0.0\n            },\n            \"BaselineEbsBandwidthMbps\": {\n                \"Min\": 0,\n                \"Max\": 0\n            },\n            \"AcceleratorTypes\": [\n                \"fpga\"\n            ],\n            \"AcceleratorCount\": {\n                \"Min\": 0,\n                \"Max\": 0\n            },\n            \"AcceleratorManufacturers\": [\n                \"amd\"\n            ],\n            \"AcceleratorNames\": [\n                \"vu9p\"\n            ],\n            \"AcceleratorTotalMemoryMiB\": {\n                \"Min\": 0,\n                \"Max\": 0\n            }\n        }\n    },\n    \"DryRun\": true,\n    \"MaxResults\": 0,\n    \"NextToken\": \"\"\n}\nCreate a JSON configuration file using the output from the previous step, and configure it as follows:\nFor TargetCapacity, enter your desired Spot capacity in terms of the number of instances or vCPUs, or the amount of memory (MiB).\nFor TargetCapacityUnitType, enter the unit for the target capacity. If you omit this parameter, it defaults to units.\nValid values: units (which translates to number of instances) | vcpu | memory-mib\nFor SingleAvailabilityZone, specify true for a response that returns a list of scored Availability Zones. A list of scored Availability Zones is useful if you want to launch all of your Spot capacity into a single Availability Zone. If you omit this parameter, it defaults to false, and the response returns a list of scored Regions.\n(Optional) For RegionNames, specify the Regions to use as a filter. You must specify the Region code, for example, us-east-1.\nWith a Region filter, the response returns only the Regions that you specify. If you specified true for SingleAvailabilityZone, the response returns only the Availability Zones in the specified Regions.\nYou can include either InstanceTypes or InstanceRequirements, but not both in the same configuration.\nSpecify one of the following in your JSON configuration:\nTo specify a list of instance types, specify the instance types in the InstanceTypes parameter. Specify at least three different instance types. If you specify only one or two instance types, Spot placement score returns a low score. For the list of instance types, see Amazon EC2 Instance Types.\nTo specify the instance attributes so that Amazon EC2 will identify the instance types that match those attributes, specify the attributes that are located in the InstanceRequirements structure.\nYou must provide values for VCpuCount, MemoryMiB, and CpuManufacturers. You can omit the other attributes; when omitted, the default values are used. For a description of each attribute and their default values, see get-spot-placement-scores.\nFor example configurations, see Example configurations.\nTo get the Spot placement score for the requirements that you specified in the JSON file, use the get-spot-placement-scores command, and specify the name and path to your JSON file by using the --cli-input-json parameter.\naws ec2 get-spot-placement-scores \\\n    --region us-east-1 \\\n    --cli-input-json file://file_name.json\nExample output if SingleAvailabilityZone is set to false or omitted (if omitted, it defaults to false) \u2013 a scored list of Regions is returned.\n\"SpotPlacementScores\": [\n    {\n        \"Region\": \"us-east-1\",\n        \"Score\": 7\n    },\n    {\n        \"Region\": \"us-west-1\",\n        \"Score\": 5\n    },  \n   ...\nExample output if SingleAvailabilityZone is set to true \u2013 a scored list of Availability Zones is returned.\n\"SpotPlacementScores\": [\n    {\n        \"Region\": \"us-east-1\",\n        \"AvailabilityZoneId\": \"use1-az1\",\n        \"Score\": 8\n    },\n    {\n        \"Region\": \"us-east-1\",\n        \"AvailabilityZoneId\": \"usw2-az3\",\n        \"Score\": 6\n    },\n   ...\nExample configurations\nWhen using the AWS CLI, you can use the following example configurations.\nExample configurations\nExample: Specify instance types and target capacity\nExample: Specify instance types, and target capacity in terms of memory\nExample: Specify attributes for attribute-based instance type selection\nExample: Specify attributes for attribute-based instance type selection and return a scored list of Availability Zones\nExample: Specify instance types and target capacity\nThe following example configuration specifies three different instance types and a target Spot capacity of 500 Spot Instances.\n{\n    \"InstanceTypes\": [\n        \"m5.4xlarge\",\n        \"r5.2xlarge\",\n        \"m4.4xlarge\"\n    ], \n    \"TargetCapacity\": 500\n}\nExample: Specify instance types, and target capacity in terms of memory\nThe following example configuration specifies three different instance types and a target Spot capacity of 500,000 MiB of memory, where the number of Spot Instances to launch must provide a total of 500,000 MiB of memory.\n{\n    \"InstanceTypes\": [\n        \"m5.4xlarge\",\n        \"r5.2xlarge\",\n        \"m4.4xlarge\"\n    ], \n    \"TargetCapacity\": 500000,\n    \"TargetCapacityUnitType\": \"memory-mib\"\n}\nExample: Specify attributes for attribute-based instance type selection\nThe following example configuration is configured for attribute-based instance type selection, and is followed by a text explanation of the example configuration.\n{\n    \"TargetCapacity\": 5000,\n    \"TargetCapacityUnitType\": \"vcpu\",\n    \"InstanceRequirementsWithMetadata\": {\n        \"ArchitectureTypes\": [\"arm64\"],\n        \"VirtualizationTypes\": [\"hvm\"],\n        \"InstanceRequirements\": {\n            \"VCpuCount\": {\n                \"Min\": 1,\n                \"Max\": 12\n            },\n            \"MemoryMiB\": {\n                \"Min\": 512\n            }\n        }\n    }\n}\nInstanceRequirementsWithMetadata\nTo use attribute-based instance type selection, you must include the InstanceRequirementsWithMetadata structure in your configuration, and specify the desired attributes for the Spot Instances.\nIn the preceding example, the following required instance attributes are specified:\nArchitectureTypes \u2013 The architecture type of the instance types must be arm64.\nVirtualizationTypes \u2013 The virtualization type of the instance types must be hvm.\nVCpuCount \u2013 The instance types must have a minimum of 1 and a maximum of 12 vCPUs.\nMemoryMiB \u2013 The instance types must have a minimum of 512 MiB of memory. By omitting the Max parameter, you are indicating that there is no maximum limit.\nNote that there are several other optional attributes that you can specify. For the list of attributes, see get-spot-placement-scores.\nTargetCapacityUnitType\nThe TargetCapacityUnitType parameter specifies the unit for the target capacity. In the example, the target capacity is 5000 and the target capacity unit type is vcpu, which together specify a desired target capacity of 5000 vCPUs, where the number of Spot Instances to launch must provide a total of 5000 vCPUs.\nExample: Specify attributes for attribute-based instance type selection and return a scored list of Availability Zones\nThe following example configuration is configured for attribute-based instance type selection. By specifying \"SingleAvailabilityZone\": true, the response will return a list of scored Availability Zones.\n{\n    \"TargetCapacity\": 1000,\n    \"TargetCapacityUnitType\": \"vcpu\",\n    \"SingleAvailabilityZone\": true,\n    \"InstanceRequirementsWithMetadata\": {\n        \"ArchitectureTypes\": [\"arm64\"],\n        \"VirtualizationTypes\": [\"hvm\"],\n        \"InstanceRequirements\": {\n            \"VCpuCount\": {\n                \"Min\": 1,\n                \"Max\": 12\n            },\n            \"MemoryMiB\": {\n                \"Min\": 512\n            }\n        }\n    }\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html",
        "content": "To help you understand the charges for your Spot Instances, Amazon EC2 provides a data feed that describes your Spot Instance usage and pricing. This data feed is sent to an Amazon S3 bucket that you specify when you subscribe to the data feed.\nData feed files arrive in your bucket typically once an hour. If you don't have a Spot Instance running during a certain hour, you don't receive a data feed file for that hour.\nEach hour of Spot Instance usage is typically covered in a single data file. These files are compressed (gzip) before they are delivered to your bucket. Amazon EC2 can write multiple files for a given hour of usage where files are large (for example, when file contents for the hour exceed 50 MB before compression).\nNote\nYou can create only one Spot Instance data feed per AWS account.\nSpot Instance data feed is supported in all AWS Regions except China (Beijing), China (Ningxia), AWS GovCloud (US), and the Regions that are disabled by default.\nContents\nData feed file name and format\nAmazon S3 bucket requirements\nSubscribe to your Spot Instance data feed\nView the data in your data feed\nDelete your Spot Instance data feed\nData feed file name and format\nThe Spot Instance data feed file name uses the following format (with the date and hour in UTC):\nbucket-name.s3.amazonaws.com/optional-prefix/aws-account-id.YYYY-MM-DD-HH.n.unique-id.gz\nFor example, if your bucket name is amzn-s3-demo-bucket and your prefix is my-prefix, your file names are similar to the following:\namzn-s3-demo-bucket.s3.amazonaws.com/my-prefix/111122223333.2023-12-09-07.001.b959dbc6.gz\nFor more information about bucket names, see Bucket naming rules in the Amazon S3 User Guide.\nThe Spot Instance data feed files are tab-delimited. Each line in the data file corresponds to one instance hour and contains the fields listed in the following table.\nField Description\nTimestamp\nThe timestamp used to determine the price charged for this instance usage.\nUsageType\nThe type of usage and instance type being charged for. For m1.small Spot Instances, this field is set to SpotUsage. For all other instance types, this field is set to SpotUsage:{instance-type}. For example, SpotUsage:c1.medium.\nOperation\nThe product being charged for. For Linux Spot Instances, this field is set to RunInstances. For Windows Spot Instances, this field is set to RunInstances:0002. Spot usage is grouped according to Availability Zone.\nInstanceID\nThe ID of the Spot Instance that generated this instance usage.\nMyBidID\nThe ID for the Spot Instance request that generated this instance usage.\nMyMaxPrice\nThe maximum price specified for this Spot request.\nMarketPrice\nThe Spot price at the time specified in the Timestamp field.\nCharge\nThe price charged for this instance usage.\nVersion\nThe data feed version. The possible version is 1.0.\nAmazon S3 bucket requirements\nWhen you subscribe to the data feed, you must specify an Amazon S3 bucket to store the data feed files.\nBefore you choose an Amazon S3 bucket for the data feed, consider the following:\nYou must have FULL_CONTROL permission to the bucket. If you're the bucket owner, you have this permission by default. Otherwise, the bucket owner must grant your AWS account this permission.\nWhen you subscribe to a data feed, these permissions are used to update the bucket ACL to give the AWS data feed account FULL_CONTROL permission. The AWS data feed account writes data feed files to the bucket. If your account doesn't have the required permissions, the data feed files cannot be written to the bucket. For more information, see Logs sent to Amazon S3 in the Amazon CloudWatch Logs User Guide.\nIf you update the ACL and remove the permissions for the AWS data feed account, the data feed files cannot be written to the bucket. You must resubscribe to the data feed to receive the data feed files.\nEach data feed file has its own ACL (separate from the ACL for the bucket). The bucket owner has FULL_CONTROL permission to the data files. The AWS data feed account has read and write permissions.\nIf you delete your data feed subscription, Amazon EC2 doesn't remove the read and write permissions for the AWS data feed account on either the bucket or the data files. You must remove these permissions yourself.\nIf you encrypt your Amazon S3 bucket using server-side encryption with a AWS KMS key stored in AWS Key Management Service (SSE-KMS), you must use a customer managed key. For more information, see Amazon S3 bucket server-side encryption in the Amazon CloudWatch Logs User Guide.\nSubscribe to your Spot Instance data feed\nTo subscribe to your data feed, use the create-spot-datafeed-subscription AWS CLI command.\naws ec2 create-spot-datafeed-subscription \\\n    --bucket amzn-s3-demo-bucket \\\n    [--prefix my-prefix]\nThis following is example output.\n{\n    \"SpotDatafeedSubscription\": {\n        \"OwnerId\": \"111122223333\",\n        \"Bucket\": \"amzn-s3-demo-bucket\",\n        \"Prefix\": \"my-prefix\",\n        \"State\": \"Active\"\n    }\n}\nIf you get an error that the bucket does not have enough permissions, see the following article for troubleshooting information: Troubleshoot the data feed for Spot Instances.\nView the data in your data feed\nIn the AWS Management Console, open AWS CloudShell. Use the following s3 sync command to get the .gz files from the S3 bucket for your data feed and store them in the folder that you specify.\naws s3 sync s3://amzn-s3-demo-bucket ./data-feed\nTo display the contents of a .gz file, change to the folder where you stored the contents of the S3 bucket.\ncd data-feed\nUse the ls command to view the names of the files. Use the zcat command with the name of the file to display the contents of the compressed file. The following is an example command.\nzcat  111122223333.2023-12-09-07.001.b959dbc6.gz\nThe following is example output.\n#Version: 1.0\n#Fields: Timestamp UsageType Operation InstanceID MyBidID MyMaxPrice MarketPrice Charge Version\n2023-12-09 07:13:47 UTC USE2-SpotUsage:c7a.medium       RunInstances:SV050      i-0c3e0c0b046e050df     sir-pwq6nmfp    0.0510000000 USD        0.0142000000 USD        0.0142000000 USD        1\nDelete your Spot Instance data feed\nTo delete your data feed, use the delete-spot-datafeed-subscription command.\naws ec2 delete-spot-datafeed-subscription"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/service-linked-roles-spot-instance-requests.html",
        "content": "Amazon EC2 uses service-linked roles for the permissions that it requires to call other AWS services on your behalf. A service-linked role is a unique type of IAM role that is linked directly to an AWS service. Service-linked roles provide a secure way to delegate permissions to AWS services because only the linked service can assume a service-linked role. For more information, see Service-linked roles in the IAM User Guide.\nAmazon EC2 uses the service-linked role named AWSServiceRoleForEC2Spot to launch and manage Spot Instances on your behalf.\nPermissions granted by AWSServiceRoleForEC2Spot\nAmazon EC2 uses AWSServiceRoleForEC2Spot to complete the following actions:\nec2:DescribeInstances \u2013 Describe Spot Instances\nec2:StopInstances \u2013 Stop Spot Instances\nec2:StartInstances \u2013 Start Spot Instances\nCreate the service-linked role\nUnder most circumstances, you don't need to manually create a service-linked role. Amazon EC2 creates the AWSServiceRoleForEC2Spot service-linked role the first time you request a Spot Instance using the console.\nIf you had an active Spot Instance request before October 2017, when Amazon EC2 began supporting this service-linked role, Amazon EC2 created the AWSServiceRoleForEC2Spot role in your AWS account. For more information, see A New Role Appeared in My Account in the IAM User Guide.\nIf you use the AWS CLI or an API to request a Spot Instance, you must first ensure that this role exists.\nTo create AWSServiceRoleForEC2Spot using the console\nOpen the IAM console at https://console.aws.amazon.com/iam/.\nIn the navigation pane, choose Roles.\nChoose Create role.\nOn the Select type of trusted entity page, choose EC2, EC2 - Spot Instances, Next: Permissions.\nOn the next page, choose Next:Review.\nOn the Review page, choose Create role.\nTo create AWSServiceRoleForEC2Spot using the AWS CLI\nUse the create-service-linked-role command as follows.\naws iam create-service-linked-role --aws-service-name spot.amazonaws.com\nIf you no longer need to use Spot Instances, we recommend that you delete the AWSServiceRoleForEC2Spot role. After this role is deleted from your account, Amazon EC2 will create the role again if you request Spot Instances.\nGrant access to customer managed keys for use with encrypted AMIs and EBS snapshots\nIf you specify an encrypted AMI or an encrypted Amazon EBS snapshot for your Spot Instances and you use a customer managed key for encryption, you must grant the AWSServiceRoleForEC2Spot role permission to use the customer managed key so that Amazon EC2 can launch Spot Instances on your behalf. To do this, you must add a grant to the customer managed key, as shown in the following procedure.\nWhen providing permissions, grants are an alternative to key policies. For more information, see Using Grants and Using Key Policies in AWS KMS in the AWS Key Management Service Developer Guide.\nTo grant the AWSServiceRoleForEC2Spot role permissions to use the customer managed key\nUse the create-grant command to add a grant to the customer managed key and to specify the principal (the AWSServiceRoleForEC2Spot service-linked role) that is given permission to perform the operations that the grant permits. The customer managed key is specified by the key-id parameter and the ARN of the customer managed key. The principal is specified by the grantee-principal parameter and the ARN of the AWSServiceRoleForEC2Spot service-linked role.\naws kms create-grant \\\n    --region us-east-1 \\\n    --key-id arn:aws:kms:us-east-1:444455556666:key/1234abcd-12ab-34cd-56ef-1234567890ab \\\n    --grantee-principal arn:aws:iam::111122223333:role/aws-service-role/spot.amazonaws.com/AWSServiceRoleForEC2Spot \\\n    --operations \"Decrypt\" \"Encrypt\" \"GenerateDataKey\" \"GenerateDataKeyWithoutPlaintext\" \"CreateGrant\" \"DescribeKey\" \"ReEncryptFrom\" \"ReEncryptTo\""
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-limits.html",
        "content": "There are quotas for the number of running Spot Instances and pending Spot Instance requests per AWS account per Region. After a pending Spot Instance request is fulfilled, the request no longer counts towards the quota because the running instance is counted towards the quota.\nSpot Instance quotas are managed in terms of the number of virtual central processing units (vCPUs) that your running Spot Instances are either using or will use pending the fulfillment of open Spot Instance requests. If you terminate your Spot Instances but do not cancel the Spot Instance requests, the requests count against your Spot Instance vCPU quota until Amazon EC2 detects the Spot Instance terminations and closes the requests.\nWe provide the following quota types for Spot Instances.\nName Default Adjustable\nAll DL Spot Instance Requests 0 Yes\nAll F Spot Instance Requests 0 Yes\nAll G and VT Spot Instance Requests 0 Yes\nAll Inf Spot Instance Requests 0 Yes\nAll P4, P3 and P2 Spot Instance Requests 0 Yes\nAll P5 Spot Instance Requests 0 Yes\nAll Standard (A, C, D, H, I, M, R, T, Z) Spot Instance Requests 5 Yes\nAll Trn Spot Instance Requests 0 Yes\nAll X Spot Instance Requests 0 Yes\nEven though Amazon EC2 automatically increases your Spot Instance quotas based on your usage, you can request a quota increase if necessary. For example, if you intend to launch more Spot Instances than your current quota allows, you can request a quota increase. You can also request a quota increase if you submit a Spot Instance request and you receive the error Max spot instance count exceeded. To request a quota increase, use the Service Quotas console described in Amazon EC2 service quotas.\nYou can launch any combination of instance types that meet your changing application needs. For example, with an All Standard Spot Instance Requests quota of 256 vCPUs, you could request 32 m5.2xlarge Spot Instances (32 x 8 vCPUs) or 16 c5.4xlarge Spot Instances (16 x 16 vCPUs).\nWith Amazon CloudWatch metrics integration, you can monitor EC2 usage against your quotas. You can also configure alarms to warn about approaching quotas. For more information, see Service Quotas and Amazon CloudWatch alarms in the Service Quotas User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-overview.html",
        "content": "An Amazon EC2 Dedicated Host is a physical server that is fully dedicated for your use. You can optionally choose to share the instance capacity with other AWS accounts. For more information, see Cross-account Amazon EC2 Dedicated Host sharing.\nDedicated Hosts provide visibility and control over instance placement and they support host affinity. This means that you can launch and run instances on specific hosts, and you can ensure that instances run only on specific hosts. For more information, see Amazon EC2 Dedicated Host auto-placement and host affinity.\nDedicated Hosts provide comprehensive Bring Your Own License (BYOL) support. They allow you to use your existing per-socket, per-core, or per-VM software licenses, including Windows Server, SQL Server, SUSE Linux Enterprise Server, Red Hat Enterprise Linux, or other software licenses that are bound to VMs, sockets, or physical cores, subject to your license terms.\nIf you require your instances to run on dedicated hardware, but you do not need visibility or control over instance placement, and you do not need to use per-socket or per-core software licenses, you can consider using Dedicated Instances instead. Dedicated Instances and Dedicated Hosts can both be used to launch Amazon EC2 instances onto dedicated physical servers. There are no performance, security, or physical differences between Dedicated Instances and instances on Dedicated Hosts. However, there are some key differences between them. The following table highlights some of the key differences between Dedicated Instances and Dedicated Hosts:\nDedicated Host Dedicated Instance\nDedicated physical server\nPhysical server with instance capacity fully dedicated to your use.\nPhysical server that's dedicated to a single customer account.\nInstance capacity sharing\nCan share instance capacity with other accounts.\nNot supported\nBilling\nPer-host billing\nPer-instance billing\nVisibility of sockets, cores, and host ID\nProvides visibility of the number of sockets and physical cores\nNo visibility\nHost and instance affinity\nAllows you to consistently deploy your instances to the same physical server over time\nNot supported\nTargeted instance placement\nProvides additional visibility and control over how instances are placed on a physical server\nNot supported\nAutomatic instance recovery\nSupported. For more information, see Amazon EC2 Dedicated Host recovery.\nSupported\nBring Your Own License (BYOL)\nSupported\nPartial support *\nCapacity Reservations\nNot supported\nSupported\n* Microsoft SQL Server with License Mobility through Software Assurance, and Windows Virtual Desktop Access (VDA) licenses can be used with Dedicated Instance.\nFor more information about Dedicated Instances, see Amazon EC2 Dedicated Instances.\nDedicated Hosts restrictions\nBefore you allocate Dedicated Hosts, take note of the following limitations and restrictions:\nTo run RHEL and SUSE Linux on Dedicated Hosts, you must bring your own AMIs. You can't use the RHEL and SUSE Linux AMIs that are offered by AWS or that are available on AWS Marketplace with Dedicated Hosts. For more information about how to create your own AMI, see Bring your own software licenses to Amazon EC2 Dedicated Hosts.\nThis restriction does not apply to hosts allocated for high memory instances (u-6tb1.metal, u-9tb1.metal, u-12tb1.metal, u-18tb1.metal, and u-24tb1.metal). RHEL and SUSE Linux AMIs that are offered by AWS or that are available on AWS Marketplace can be used with these hosts.\nThere is a limit on the number of running Dedicated Hosts per instance family per AWS account per Region. Quotas apply to running instances only. If your instance is pending, stopping, or stopped, it does not count towards your quota. To view the quotas for your account, or to request a quota increase, use the Service Quotas console.\nThe instances that run on a Dedicated Host can only be launched in a VPC.\nAuto Scaling groups are supported when using a launch template that specifies a host resource group. For more information, see Create a launch template using advanced settings in the Amazon EC2 Auto Scaling User Guide.\nAmazon RDS instances are not supported.\nThe AWS Free Usage tier is not available for Dedicated Hosts.\nInstance placement control refers to managing instance launches onto Dedicated Hosts. You cannot launch Dedicated Hosts into placement groups.\nIf you allocate a host for a virtualized instance type, you can't modify the instance type to a .metal instance type after the host is allocated. For example, if you allocate a host for the m5.large instance type, you can't modify the instance type to m5.metal.\nSimilarly, if you allocate a host for a .metal instance type, you can't modify the instance type to a virtualized instance type after the host is allocated. For example, if you allocate a host for the m5.metal instance type, you can't modify the instance type to m5.large.\nContents\nPricing and billing\nInstance capacity configurations\nBurstable instances on Dedicated Hosts\nBring your own licenses\nAuto-placement and affinity\nAllocate a Dedicated Host\nLaunch instances on a Dedicated Host\nLaunch instances into a host resource group\nModify Dedicated Host auto-placement\nModify supported instance types\nModify tenancy and affinity for an instance\nRelease Dedicated Host\nMigrate to Nitro-based Amazon EC2 Dedicated Hosts\nPurchase a Dedicated Host Reservation\nCross-account sharing\nDedicated Hosts on Outposts\nHost recovery\nHost maintenance\nMonitor Dedicated Hosts\nTrack configuration changes\nPurchase Dedicated Host Reservations for Dedicated Host billing discounts\nDedicated Host Reservations provide you with a discount of up to 70 percent compared to On-Demand Dedicated Host pricing. You must have active Dedicated Hosts allocated in your account before you can purchase Dedicated Host Reservations. For more information, see Dedicated Host Reservations.\nYou can purchase Dedicated Host Reservations using the following methods:\nConsole\nAWS CLI\nPowerShell\nTo purchase reservations\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nChoose Dedicated Hosts, Dedicated Host Reservations, Purchase Dedicated Host Reservation.\nOn the Find offerings screen, do the following:\nFor Instance family, select the instance family of the Dedicated Host for which to purchase the Dedicated Host Reservation.\nFor Payment option, select and configure your preferred payment option.\nChoose Next.\nSelect the Dedicated Hosts with which to associate the Dedicated Host Reservation, and then choose Next.\n(Optional) Assign tags to the Dedicated Host Reservation.\nReview your order and choose Purchase."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-billing.html",
        "content": "The price for a Dedicated Host varies by payment option.\nPayment Options\nOn-Demand Dedicated Hosts\nDedicated Host Reservations\nSavings Plans\nPricing for Windows Server on Dedicated Hosts\nOn-Demand Dedicated Hosts\nOn-Demand billing is automatically activated when you allocate a Dedicated Host to your account.\nThe On-Demand price for a Dedicated Host varies by instance family and Region. You pay per second (with a minimum of 60 seconds) for active Dedicated Host, regardless of the quantity or the size of instances that you choose to launch on it. For more information about On-Demand pricing, see Amazon EC2 Dedicated Hosts On-Demand Pricing.\nYou can release an On-Demand Dedicated Host at any time to stop accruing charges for it. For information about releasing a Dedicated Host, see Release an Amazon EC2 Dedicated Host.\nDedicated Host Reservations\nDedicated Host Reservations provide a billing discount compared to running On-Demand Dedicated Hosts. Reservations are available in three payment options:\nNo Upfront\u2014No Upfront Reservations provide you with a discount on your Dedicated Host usage over a term and do not require an upfront payment. Available in one-year and three-year terms. Only some instance families support the three-year term for No Upfront Reservations.\nPartial Upfront\u2014A portion of the reservation must be paid upfront and the remaining hours in the term are billed at a discounted rate. Available in one-year and three-year terms.\nAll Upfront\u2014Provides the lowest effective price. Available in one-year and three-year terms and covers the entire cost of the term upfront, with no additional future charges.\nYou must have active Dedicated Hosts in your account before you can purchase reservations. Each reservation can cover one or more hosts that support the same instance family in a single Availability Zone. Reservations are applied to the instance family on the host, not the instance size. If you have three Dedicated Hosts with different instances sizes (m4.xlarge, m4.medium, and m4.large) you can associate a single m4 reservation with all those Dedicated Hosts. The instance family and Availability Zone of the reservation must match that of the Dedicated Hosts you want to associate it with.\nWhen a reservation is associated with a Dedicated Host, the Dedicated Host can't be released until the reservation's term is over.\nFor more information about reservation pricing, see Amazon EC2 Dedicated Hosts Pricing.\nSavings Plans\nSavings Plans are a flexible pricing model that offers significant savings over On-Demand Instances. With Savings Plans, you make a commitment to a consistent amount of usage, in USD per hour, for a term of one or three years. This provides you with the flexibility to use the Dedicated Hosts that best meet your needs and continue to save money, instead of making a commitment to a specific Dedicated Host. For more information, see the AWS Savings Plans User Guide.\nNote\nSavings Plans are not supported with u-6tb1.metal, u-9tb1.metal, u-12tb1.metal, u-18tb1.metal, and u-24tb1.metal Dedicated Hosts.\nPricing for Windows Server on Dedicated Hosts\nSubject to Microsoft licensing terms, you can bring your existing Windows Server and SQL Server licenses to Dedicated Hosts. There is no additional charge for software usage if you choose to bring your own licenses.\nIn addition, you can also use Windows Server AMIs provided by Amazon to run the latest versions of Windows Server on Dedicated Hosts. This is common for scenarios where you have existing SQL Server licenses eligible to run on Dedicated Hosts, but need Windows Server to run the SQL Server workload. Windows Server AMIs provided by Amazon are supported on current generation instance types only. For more information, see Amazon EC2 Dedicated Hosts Pricing."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-limits.html",
        "content": "Dedicated Hosts support different configurations (physical cores, sockets, and VCPUs) that allow you to run instances of different families and sizes.\nWhen you allocate a Dedicated Host in your account, you can choose a configuration that supports either a single instance type, or multiple instance types within the same instance family. The number of instances that you can run on a host depends on the configuration you choose.\nContents\nSingle instance type support\nMultiple instance type support\nSingle instance type support\nYou can allocate a Dedicated Host that supports only one instance type. With this configuration, every instance that you launch on the Dedicated Host must be of the same instance type, which you specify when you allocate the host.\nFor example, you can allocate a host that supports only the m5.4xlarge instance type. In this case, you can run only m5.4xlarge instances on that host.\nThe number of instances that you can launch onto the host depends on the number of physical cores provided by the host, and the number of cores consumed by the specified instance type. For example, if you allocate a host for m5.4xlarge instances, the host provides 48 physical cores, and each m5.4xlarge instance consumes 8 physical cores. This means that you can launch up to 6 instances on that host (48 physical cores / 8 cores per instance = 6 instances).\nMultiple instance type support\nYou can allocate a Dedicated Host that supports multiple instance types within the same instance family. This allows you to run different instance types on the same host, as long as they're in the same instance family and the host has sufficient instance capacity.\nFor example, you can allocate a host that supports different instance types within the R5 instance family. In this case, you can launch any combination of R5 instance types, such as r5.large, r5.xlarge, r5.2xlarge, and r5.4xlarge, on that host, up to the host's physical core capacity.\nThe following instance families support Dedicated Hosts with multiple instance type support:\nGeneral purpose: A1, M5, M5n, M6i, and T3\nCompute optimized: C5, C5n, and C6i\nMemory optimized: R5, R5n, and R6i\nThe number of instances you can run on the host depends on the number of physical cores provided by the host, and the number of cores consumed by each instance type that you run on the host. For example, if you allocate an R5 host, which provides 48 physical cores, and you run two r5.2xlarge instances (4 cores x 2 instances) and three r5.4xlarge instances (8 cores x 3 instances), those instances consume a total of 32 cores, and you can run any combination of R5 instances as long as they do not exceed the remaining 16 cores.\nHowever, for each instance family, there is a limit on the number of instances that can be run for each instance size. For example, an R5 Dedicated Host supports a maximum of 2 r5.8xlarge instances, which uses 32 of the physical cores. In this case, additional R5 instances of smaller sizes can then be used to fill the host to core capacity. For the supported number of instance sizes for each instance family, see the Dedicated Hosts Configuration Table.\nThe following table shows example instance type combinations:\nInstance family Example instance size combinations\nR5\nExample 1: 4 x r5.4xlarge + 4 x r5.2xlarge\nExample 2: 1 x r5.12xlarge + 1 x r5.4xlarge + 1 x r5.2xlarge + 5 x r5.xlarge + 2 x r5.large\nC5\nExample 1: 1 x c5.9xlarge + 2 x c5.4xlarge + 1 x c5.xlarge\nExample 2: 4 x c5.4xlarge + 1 x c5.xlarge + 2 x c5.large\nM5\nExample 1: 4 x m5.4xlarge + 4 x m5.2xlarge\nExample 2: 1 x m5.12xlarge + 1 x m5.4xlarge + 1 x m5.2xlarge + 5 x m5.xlarge + 2 x m5.large\nConsiderations\nKeep the following in mind when working with Dedicated Hosts that support multiple instance types:\nWith N-type Dedicated Hosts, such as C5n, M5n, and R5n, you can't mix smaller instance sizes (2xlarge and smaller) with larger instance sizes (4xlarge and larger, including metal). If you require smaller and larger instance sizes on N-type Dedicated Hosts at the same time, you must allocate separate hosts for the smaller and larger instance sizes.\nWe recommend that you launch larger instance types first, and then fill the remaining instance capacity with smaller instance types as needed."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-t3.html",
        "content": "Dedicated Hosts support burstable performance T3 instances. T3 instances provide a cost-efficient way of using your eligible BYOL license software on dedicated hardware. The smaller vCPU footprint of T3 instances enables you to consolidate your workloads on fewer hosts and maximize your per-core license utilization.\nT3 Dedicated Hosts are best suited for running BYOL software with low to moderate CPU utilization. This includes eligible per-socket, per-core, or per-VM software licenses, such as Windows Server, Windows Desktop, SQL Server, SUSE Enterprise Linux Server, Red Hat Enterprise Linux, and Oracle Database. Examples of workloads suited for T3 Dedicated Hosts are small and medium databases, virtual desktops, development and test environments, code repositories, and product prototypes. T3 Dedicated Hosts are not recommended for workloads with sustained high CPU utilization or for workloads that experience correlated CPU bursts simultaneously.\nT3 instances on Dedicated Hosts use the same credit model as T3 instances on shared tenancy hardware. However, they support the standard credit mode only; they do not support the unlimited credit mode. In standard mode, T3 instances on Dedicated Hosts earn, spend, and accrue credits in the same way as burstable instances on shared tenancy hardware. They provide a baseline CPU performance with the ability to burst above the baseline level. To burst above the baseline, the instance spends credits that it has accrued in its CPU credit balance. When the accrued credits are depleted, CPU utilization is lowered to the baseline level. For more information about standard mode, see How standard burstable performance instances work.\nT3 Dedicated Hosts support all of the features offered by Amazon EC2 Dedicated Hosts, including multiple instance sizes on a single host, Host resource groups, and BYOL.\nSupported T3 instance sizes and configurations\nT3 Dedicated Hosts run general purpose burstable T3 instances that share CPU resources of the host by providing a baseline CPU performance and the ability to burst to a higher level when needed. This enables T3 Dedicated Hosts, which have 48 cores, to support up to a maximum of 192 instances per host. In order to efficiently utilize the host\u2019s resources and to provide the best instance performance, the Amazon EC2 instance placement algorithm automatically calculates the supported number of instances and instance size combinations that can be launched on the host.\nT3 Dedicated Hosts support multiple instance types on the same host. All T3 instance sizes are supported on Dedicated Hosts. You can run different combinations of T3 instances up to the CPU limit of the host.\nThe following table lists the supported instance types, summarizes the performance of each instance type, and indicates the maximum number of instances of each size that can be launched.\nInstance type vCPUs Memory (GiB) Baseline CPU utilization per vCPU Network burst bandwidth (Gbps) Amazon EBS burst bandwidth (Mbps) Max number of instances per Dedicated Host\nt3.nano 2 0.5 5% 5 Up to 2,085 192\nt3.micro 2 1 10% 5 Up to 2,085 192\nt3.small 2 2 20% 5 Up to 2,085 192\nt3.medium 2 4 20% 5 Up to 2,085 192\nt3.large 2 8 30% 5 2,780 96\nt3.xlarge 4 16 40% 5 2,780 48\nt3.2xlarge 8 32 40% 5 2,780 24\nMonitor CPU utilization for T3 Dedicated Hosts\nYou can use the DedicatedHostCPUUtilization Amazon CloudWatch metric to monitor the vCPU utilization of a Dedicated Host. The metric is available in the EC2 namespace and Per-Host-Metrics dimension. For more information, see Dedicated Host metrics."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-BYOL.html",
        "content": "Dedicated Hosts allow you to use your existing per-socket, per-core, or per-VM software licenses. When you bring your own license, you are responsible for managing your own licenses. However, Amazon EC2 has features that help you maintain license compliance, such as instance affinity and targeted placement.\nThese are the general steps to follow in order to bring your own volume licensed machine image into Amazon EC2.\nVerify that the license terms controlling the use of your machine images allow usage in a virtualized cloud environment. For more information about Microsoft Licensing, see Amazon Web Services and Microsoft Licensing.\nAfter you have verified that your machine image can be used within Amazon EC2, import it using VM Import/Export. For information about how to import your machine image, see the VM Import/Export User Guide.\nAfter you import your machine image, you can launch instances from it onto active Dedicated Hosts in your account.\nWhen you run these instances, depending on the operating system, you might be required to activate these instances against your own KMS server (for example, Windows Server or Windows SQL Server). You can't activate your imported Windows AMI against the Amazon Windows KMS server.\nNote\nTo track how your images are used in AWS, enable host recording in AWS Config. You can use AWS Config to record configuration changes to a Dedicated Host and use the output as a data source for license reporting. For more information, see Track Amazon EC2 Dedicated Host configuration changes using AWS Config."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-understanding.html",
        "content": "Placement control for Dedicated Hosts happens on both the instance level and host level.\nAuto-placement\nAuto-placement is configured at the host level. It allows you to manage whether instances that you launch are launched onto a specific host, or onto any available host that has matching configurations.\nWhen auto-placement is disabled for a Dedicated Host, it accepts only host tenancy instance launches that specify its unique host ID. This is the default setting for new Dedicated Hosts.\nWhen auto-placement is enabled for a Dedicated Host, it accepts any untargeted, host tenancy instance launches that match its instance type configuration.\nWhen launching an instance, you need to configure its tenancy. Launching an instance onto a Dedicated Host without providing a specific HostId enables it to launch on any Dedicated Host that has auto-placement enabled and that matches its instance type.\nHost affinity\nHost affinity is configured at the instance level. It establishes a launch relationship between an instance and a Dedicated Host.\nWhen affinity is set to Host, an instance launched onto a specific host always restarts on the same host if stopped. This applies to both targeted and untargeted launches.\nWhen affinity is set to Default, and you stop and restart the instance, it can be restarted on any available host. However, it tries to launch back onto the last Dedicated Host on which it ran (on a best-effort basis)."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-allocating.html",
        "content": "To begin using a Dedicated Host, you must first allocate it in your account. After you allocate the Dedicated Host, the Dedicated Host capacity is made available in your account immediately and you can start launching instances onto the Dedicated Host.\nWhen you allocate a Dedicated Host in your account, you can choose a configuration that supports either a single instance type, or multiple instance types within the same instance family. The number of instances that you can run on the host depends on the configuration you choose. For more information see Amazon EC2 Dedicated Host instance capacity configurations.\nConsole\nAWS CLI\nPowerShell\nTo allocate a Dedicated Host\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Dedicated Hosts and then choose Allocate Dedicated Host.\nFor Instance family, choose the instance family for the Dedicated Host.\nSpecify whether the Dedicated Host supports multiple instance sizes within the selected instance family, or a specific instance type only. Do one of the following.\nTo configure the Dedicated Host to support multiple instance types in the selected instance family, for Support multiple instance types, choose Enable. Enabling this allows you to launch different instance sizes from the same instance family onto the Dedicated Host. For example, if you choose the m5 instance family and choose this option, you can launch m5.xlarge and m5.4xlarge instances onto the Dedicated Host.\nTo configure the Dedicated Host to support a single instance type within the selected instance family, clear Support multiple instance types, and then for Instance type, choose the instance type to support. This allows you to launch a single instance type on the Dedicated Host. For example, if you choose this option and specify m5.4xlarge as the supported instance type, you can launch only m5.4xlarge instances onto the Dedicated Host.\nFor Availability Zone, choose the Availability Zone in which to allocate the Dedicated Host.\nTo allow the Dedicated Host to accept untargeted instance launches that match its instance type, for Instance auto-placement, choose Enable. For more information about auto-placement, see Amazon EC2 Dedicated Host auto-placement and host affinity.\nTo enable host recovery for the Dedicated Host, for Host recovery, choose Enable. For more information, see Amazon EC2 Dedicated Host recovery.\nFor Quantity, enter the number of Dedicated Hosts to allocate.\n(Optional) Choose Add new tag and enter a tag key and a tag value.\nChoose Allocate."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/launching-dedicated-hosts-instances.html",
        "content": "After you have allocated a Dedicated Host, you can launch instances onto it. You can't launch instances with host tenancy if you do not have active Dedicated Hosts with enough available capacity for the instance type that you are launching.\nTip\nFor Dedicated Hosts that support multiple instance sizes, we recommend that you launch the larger instance sizes first, and then fill the remaining instance capacity with the smaller instance sizes as needed.\nBefore you launch your instances, take note of the limitations. For more information, see Dedicated Hosts restrictions.\nYou can launch an instance onto a Dedicated Host using the following methods.\nConsole\nAWS CLI\nPowerShell\nTo launch an instance onto a specific Dedicated Host from the Dedicated Hosts page\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nChoose Dedicated Hosts in the navigation pane.\nOn the Dedicated Hosts page, select a host and choose Actions, Launch Instance(s) onto host.\nIn the Application and OS Images section, select an AMI from the list.\nNote\nSQL Server, SUSE, and RHEL AMIs provided by Amazon EC2 can't be used with Dedicated Hosts.\nIn the Instance type section, select the instance type to launch.\nNote\nIf the Dedicated Host supports a single instance type only, the supported instance type is selected by default and can't be changed.\nIf the Dedicated Host supports multiple instance types, you must select an instance type within the supported instance family based on the available instance capacity of the Dedicated Host. We recommend that you launch the larger instance sizes first, and then fill the remaining instance capacity with the smaller instance sizes as needed.\nIn the Key pair section, select the key pair to associate with the instance.\nIn the Advanced details section, for Tenancy affinity, choose one of the following:\nOff \u2014 Host affinity disabled. The instance launches onto the specified host, but it is not guaranteed to restart on the same Dedicated Host if stopped.\nA Dedicated Host ID \u2014 Host affinity enabled. If stopped, the instance always restarts on this specified host if it has capacity. If the host does not have capacity, the instance can't be restarted; you must estabilish affinity with a different host.\nFor more information about Affinity, see Amazon EC2 Dedicated Host auto-placement and host affinity.\nNote\nThe Tenancy and Host options are pre-configured based on the host that you selected.\nConfigure the remaining instance options as needed. For more information, see Reference for Amazon EC2 instance configuration parameters.\nChoose Launch instance.\nTo launch an instance onto a Dedicated Host using the Launch Instance wizard\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances, Launch instance.\nIn the Application and OS Images section, select an AMI from the list.\nNote\nSQL Server, SUSE, and RHEL AMIs provided by Amazon EC2 can't be used with Dedicated Hosts.\nIn the Instance type section, select the instance type to launch.\nIn the Key pair section, select the key pair to associate with the instance.\nIn the Advanced details section, do the following:\nFor Tenancy, select Dedicated Host.\nFor Target host by, select Host ID.\nFor Target host ID, select the host onto which to launch the instance.\nFor Tenancy affinity, choose one of the following:\nOff \u2014 Host affinity disabled. The instance launches onto the specified host, but it is not guaranteed to restart on the same Dedicated Host if stopped.\nA Dedicated Host ID \u2014 Host affinity enabled. If stopped, the instance always restarts on this specified host if it has capacity. If the host does not have capacity, the instance can't be restarted; you must estabilish affinity with a different host.\nFor more information about Affinity, see Amazon EC2 Dedicated Host auto-placement and host affinity.\nConfigure the remaining instance options as needed. For more information, see Reference for Amazon EC2 instance configuration parameters.\nChoose Launch instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/launching-hrg-instances.html",
        "content": "Dedicated Hosts are also integrated with AWS License Manager. With License Manager, you can create a host resource group, which is a collection of Dedicated Hosts that are managed as a single entity. When creating a host resource group, you specify the host management preferences, such as auto-allocate and auto-release, for the Dedicated Hosts. This allows you to launch instances onto Dedicated Hosts without manually allocating and managing those hosts. For more information, see Host Resource Groups in the AWS License Manager User Guide.\nWhen you launch an instance into a host resource group that has a Dedicated Host with available instance capacity, Amazon EC2 launches the instance onto that host. If the host resource group does not have a host with available instance capacity, Amazon EC2 automatically allocates a new host in the host resource group, and then launches the instance onto that host. For more information, see Host Resource Groups in the AWS License Manager User Guide.\nRequirements and limits\nYou must associate a core- or socket-based license configuration with the AMI.\nYou can't use SQL Server, SUSE, or RHEL AMIs provided by Amazon EC2 with Dedicated Hosts.\nYou can't target a specific host by choosing a host ID, and you can't enable instance affinity when launching an instance into a host resource group.\nYou can launch an instance into a host resource group using the following methods.\nConsole\nAWS CLI\nPowerShell\nTo launch an instance into a host resource group\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances, Launch instance.\nIn the Application and OS Images section, select an AMI from the list.\nNote\nSQL Server, SUSE, and RHEL AMIs provided by Amazon EC2 can't be used with Dedicated Hosts.\nIn the Instance type section, select the instance type to launch.\nIn the Key pair section, select the key pair to associate with the instance.\nIn the Advanced details section, do the following:\nFor Tenancy, select Dedicated Host.\nFor Target host by, select Host resource group.\nFor Tenancy host resource group, select the host resource group into which to launch the instance.\nFor Tenancy affinity, do one of the following:\nSelect Off \u2014 The instance launches onto the specified host, but it is not guaranteed to restart on the same Dedicated Host if stopped.\nSelect the Dedicated Host ID \u2014 If stopped, the instance always restarts on this specific host.\nFor more information about Affinity, see Amazon EC2 Dedicated Host auto-placement and host affinity.\nConfigure the remaining instance options as needed. For more information, see Reference for Amazon EC2 instance configuration parameters.\nChoose Launch instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/modify-host-auto-placement.html",
        "content": "You can modify the auto-placement settings of a Dedicated Host after you have allocated it to your AWS account, using one of the following methods.\nConsole\nAWS CLI\nPowerShell\nTo modify the auto-placement of a Dedicated Host\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Dedicated Hosts.\nSelect a host and choose Actions, Modify host.\nFor Instance auto-placement, choose Enable to enable auto-placement, or clear Enable to disable auto-placement. For more information, see Amazon EC2 Dedicated Host auto-placement and host affinity.\nChoose Save."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/modify-host-support.html",
        "content": "You can modify a Dedicated Host to change the instance types that it supports. If it currently supports a single instance type, you can modify it to support multiple instance types within that instance family. Similarly, if it currently supports multiple instance types, you can modify it to support a specific instance type only.\nTo modify a Dedicated Host to support multiple instance types, you must first stop all running instances on the host. The modification takes approximately 10 minutes to complete. The Dedicated Host transitions to the pending state while the modification is in progress. You can't start stopped instances or launch new instances on the Dedicated Host while it is in the pending state.\nTo modify a Dedicated Host that supports multiple instance types to support only a single instance type, the host must either have no running instances, or the running instances must be of the instance type that you want the host to support. For example, to modify a host that supports multiple instance types in the m5 instance family to support only m5.large instances, the Dedicated Host must either have no running instances, or it must have only m5.large instances running on it.\nIf you allocate a host for a virtualized instance type, you can't modify the instance type to a .metal instance type after the host is allocated. For example, if you allocate a host for the m5.large instance type, you can't modify the instance type to m5.metal. Similarly, if you allocate a host for a .metal instance type, you can't modify the instance type to a virtualized instance type after the host is allocated. For example, if you allocate a host for the m5.metal instance type, you can't modify the instance type to m5.large.\nYou can modify the supported instance types using one of the following methods.\nConsole\nAWS CLI\nPowerShell\nTo modify the supported instance types for a Dedicated Host\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the Navigation pane, choose Dedicated Host.\nSelect the Dedicated Host to modify and choose Actions, Modify host.\nDo one of the following, depending on the current configuration of the Dedicated Host:\nIf the Dedicated Host currently supports a specific instance type, Support multiple instance types is not enabled, and Instance type lists the supported instance type. To modify the host to support multiple types in the current instance family, for Support multiple instance types, choose Enable.\nYou must first stop all instances running on the host before modifying it to support multiple instance types.\nIf the Dedicated Host currently supports multiple instance types in an instance family, Enabled is selected for Support multiple instance types. To modify the host to support a specific instance type, for Support multiple instance types, clear Enable, and then for Instance type, select the specific instance type to support.\nYou can't change the instance family supported by the Dedicated Host.\nChoose Save."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/moving-instances-dedicated-hosts.html",
        "content": "You can change the tenancy of an instance after you have launched it. You can also modify the affinity for your instance to target a specific host or allow it to launch on any available dedicated host with matching attributes in your account. To modify either instance tenancy or affinity, the instance must be in the stopped state.\nThe operating system details of your instance\u2014and whether SQL Server is installed\u2014affect what conversions are supported. For more information about the tenancy conversion paths available to your instance, see Tenancy conversion in the License Manager User Guide.\nNote\nFor T3 instances, you must launch the instance on a Dedicated Host to use a tenancy of host. For T3 instances, you can't change the tenancy from host to dedicated or default. Attempting to make one of these unsupported tenancy changes results in an InvalidRequest error code.\nYou can modify an instance's tenancy and affinity using the following methods.\nConsole\nAWS CLI\nPowerShell\nTo modify instance tenancy or affinity\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nChoose Instances, and select the instance to modify.\nChoose Instance state, Stop.\nWith the instance selected, choose Actions, Instance settings, Modify instance placement.\nOn the Modify instance placement page, configure the following:\nTenancy\u2014Choose one of the following:\nRun a dedicated hardware instance\u2014Launches the instance as a Dedicated Instance. For more information, see Amazon EC2 Dedicated Instances.\nLaunch the instance on a Dedicated Host\u2014Launches the instance onto a Dedicated Host with configurable affinity.\nAffinity\u2014Choose one of the following:\nThis instance can run on any one of my hosts\u2014The instance launches onto any available Dedicated Host in your account that supports its instance type.\nThis instance can only run on the selected host\u2014The instance is only able to run on the Dedicated Host selected for Target Host.\nTarget Host\u2014Select the Dedicated Host that the instance must run on. If no target host is listed, you might not have available, compatible Dedicated Hosts in your account.\nFor more information, see Amazon EC2 Dedicated Host auto-placement and host affinity.\nChoose Save."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-releasing.html",
        "content": "If you no longer need Dedicated Host, you can stop the instances running on the host, direct them to launch on a different host, and then release the host.\nAny running instances on the Dedicated Host must be stopped before you can release the host. These instances can be migrated to other Dedicated Hosts in your account so that you can continue to use them. These steps apply only to On-Demand Dedicated Hosts.\nYou can release a Dedicated Host using the following methods.\nConsole\nAWS CLI\nPowerShell\nTo release a Dedicated Host\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Dedicated Hosts.\nOn the Dedicated Hosts page, select the Dedicated Host to release.\nChoose Actions, Release host.\nTo confirm, choose Release.\nAfter you release a Dedicated Host, you can't reuse the same host or host ID again, and you are no longer charged On-Demand billing rates for it. The state of the Dedicated Host is changed to released, and you are not able to launch any instances onto that host.\nNote\nIf you have recently released Dedicated Hosts, it can take some time for them to stop counting towards your limit. During this time, you might experience LimitExceeded errors when trying to allocate new Dedicated Hosts. If this is the case, try allocating new hosts again after a few minutes.\nThe instances that were stopped are still available for use and are listed on the Instances page. They retain their host tenancy setting."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dh-migrate.html",
        "content": "The Nitro System is a collection of hardware and software components built by AWS that enable high performance, high availability, and high security. Nitro-based Dedicated Hosts offer improved price performance compared to Xen-based Dedicated Hosts. If you have any Xen-based Dedicated Hosts in your account, we recommend that you migrate your workloads to Nitro-based Dedicated Hosts. For more information, see AWS Nitro System.\nTo migrate from a Xen-based Dedicated Host to a Nitro-based Dedicated Host, you need to migrate the Xen-based instances on your Dedicated Host to Nitro-based instance types, allocate a new Nitro-based Dedicated Host, and then move your migrated Nitro-based instances to your new Nitro-based Dedicated Host.\nThis topic provides detailed steps for migrating from Xen-based Dedicated Hosts to Nitro-based Dedicated Hosts.\nMigration steps\nStep 1: Identify your Xen-based Dedicated Hosts\nStep 2: Migrate Xen-based instances to Nitro-based instance types\nStep 3: Allocate a Nitro-based Dedicated Host\nStep 4: Move migrated instances to new Nitro-based Dedicated Host\nStep 5: Release unused Xen-based Dedicated Host\nStep 1: Identify your Xen-based Dedicated Hosts\nThe following Dedicated Hosts are Xen-based and are eligible to be migrated to Nitro-based Dedicated Hosts.\nGeneral purpose: M3 | M4\nCompute optimized: C3 | C4\nMemory optimized: R3 | R4 | X1 | X1e\nStorage optimized: D2 | H1 | I2 | I3\nAccelerated computing: F1 | G3 | P2 | P3\nTo check if you have Xen-based Dedicated Hosts in your account\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation panel, choose Dedicated Hosts.\nIn the Search field, use the Instance family filter to search for the Xen-based Dedicated Hosts above. For example, Instance family = m3.\nStep 2: Migrate Xen-based instances to Nitro-based instance types\nInstances that run on Xen-based Dedicated Hosts are also Xen-based. You must migrate these instances to Nitro-based instance types before you can move them to Nitro-based Dedicated Hosts.\nImportant\nBefore you begin migrating your instances, we recommend that you back up your data. For more information, see Create multi-volume Amazon EBS snapshots from an Amazon EC2 instance.\nTo find instances running on your Xen-based Dedicated Hosts\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation panel, choose Dedicated Hosts.\nSelect the Xen-based host you intend to migrate and then select the Running instances tab. The tab lists all of the instances running of the selected host.\nTo migrate Linux instances, see Amazon EC2 instance type changes.\nTo migrate Windows instances, see Migrate an EC2 Windows instance to a Nitro-based instance type.\nNote\nEnsure that you migrate your instances to an instance type that matches the Nitro-based Dedicated Host that you intend to migrate to. For example, if you intend to migrate to a M7i Dedicated Host, ensure that you migrate your instances to an M7i instance type.\nStep 3: Allocate a Nitro-based Dedicated Host\nTo find supported Nitro-based Dedicated Hosts\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation panel, select Instance Types.\nApply the following filters:\nHypervisor = nitro\nDedicated Host support = true\nAfter you've found a suitable Nitro-based instance type, allocate a new Dedicated Host.\nStep 4: Move migrated instances to new Nitro-based Dedicated Host\nAfter you have allocated the Nitro-based Dedicated Host and it reaches the available state, you can move the instances that you previously migrated to Nitro-based instance types to the new Dedicated Host.\nTo move your instances to your new Nitro-based Dedicated Host\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation panel, Instances.\nSelect the instance that you migrated and choose Actions, Instance settings, Modify instance placement.\nFor Target dedicated host, select the new Nitro-based Dedicated Host, and then choose Save.\nRestart the instance. Select the instance and choose Instance state, Start instance.\nStep 5: Release unused Xen-based Dedicated Host\nAfter you have migrated your workloads from the Xen-based Dedicated Host to the new Nitro-based Dedicated Host, you can release the Xen-based Dedicated Host if you no longer need it."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dh-sharing.html",
        "content": "Dedicated Host sharing enables Dedicated Host owners to share their Dedicated Hosts with other AWS accounts or within an AWS organization. This enables you to create and manage Dedicated Hosts centrally, and share the Dedicated Host across multiple AWS accounts or within your AWS organization.\nIn this model, the AWS account that owns the Dedicated Host (owner) shares it with other AWS accounts (consumers). Consumers can launch instances onto Dedicated Hosts that are shared with them in the same way that they would launch instances onto Dedicated Hosts that they allocate in their own account. The owner is responsible for managing the Dedicated Host and the instances that they launch onto it. Owners can't modify instances that consumers launch onto shared Dedicated Hosts. Consumers are responsible for managing the instances that they launch onto Dedicated Hosts shared with them. Consumers can't view or modify instances owned by other consumers or by the Dedicated Host owner, and they can't modify Dedicated Hosts that are shared with them.\nA Dedicated Host owner can share a Dedicated Host with:\nSpecific AWS accounts inside or outside of its AWS organization\nAn organizational unit inside its AWS organization\nIts entire AWS organization\nContents\nPrerequisites for sharing Dedicated Hosts\nLimitations for sharing Dedicated Hosts\nRelated services\nShare across Availability Zones\nShared Dedicated Host permissions\nBilling and metering\nDedicated Host limits\nHost recovery and Dedicated Host sharing\nShare a Dedicated Host\nUnshare a Dedicated Host\nView shared Dedicated Hosts\nPrerequisites for sharing Dedicated Hosts\nTo share a Dedicated Host, you must own it in your AWS account. You can't share a Dedicated Host that has been shared with you.\nTo share a Dedicated Host with your AWS organization or an organizational unit in your AWS organization, you must enable sharing with AWS Organizations. For more information, see Enable Sharing with AWS Organizations in the AWS RAM User Guide.\nLimitations for sharing Dedicated Hosts\nYou can't share Dedicated Hosts that have been allocated for the following instance types: u-6tb1.metal, u-9tb1.metal, u-12tb1.metal, u-18tb1.metal, and u-24tb1.metal.\nRelated services\nAWS Resource Access Manager\nDedicated Host sharing integrates with AWS Resource Access Manager (AWS RAM). AWS RAM is a service that enables you to share your AWS resources with any AWS account or through AWS Organizations. With AWS RAM, you share resources that you own by creating a resource share. A resource share specifies the resources to share, and the consumers with whom to share them. Consumers can be individual AWS accounts, or organizational units or an entire organization from AWS Organizations.\nFor more information about AWS RAM, see the AWS RAM User Guide.\nShare across Availability Zones\nTo ensure that resources are distributed across the Availability Zones for a Region, we independently map Availability Zones to names for each account. This could lead to Availability Zone naming differences across accounts. For example, the Availability Zone us-east-1a for your AWS account might not have the same location as us-east-1a for another AWS account.\nTo identify the location of your Dedicated Hosts relative to your accounts, you must use the Availability Zone ID (AZ ID). The Availability Zone ID is a unique and consistent identifier for an Availability Zone across all AWS accounts. For example, use1-az1 is an Availability Zone ID for the us-east-1 Region and it is the same location in every AWS account.\nTo view the Availability Zone IDs for the Availability Zones in your account\nOpen the AWS RAM console at https://console.aws.amazon.com/ram.\nThe Availability Zone IDs for the current Region are displayed in the Your AZ ID panel on the right-hand side of the screen.\nShared Dedicated Host permissions\nPermissions for owners\nOwners are responsible for managing their shared Dedicated Hosts and the instances that they launch onto them. Owners can view all instances running on the shared Dedicated Host, including those launched by consumers. However, owners can't take any action on running instances that were launched by consumers.\nPermissions for consumers\nConsumers are responsible for managing the instances that they launch onto a shared Dedicated Host. Consumers can't modify the shared Dedicated Host in any way, and they can't view or modify instances that were launched by other consumers or the Dedicated Host owner.\nBilling and metering\nThere are no additional charges for sharing Dedicated Hosts.\nOwners are billed for Dedicated Hosts that they share. Consumers are not billed for instances that they launch onto shared Dedicated Hosts.\nDedicated Host Reservations continue to provide billing discounts for shared Dedicated Hosts. Only Dedicated Host owners can purchase Dedicated Host Reservations for shared Dedicated Hosts that they own.\nDedicated Host limits\nShared Dedicated Hosts count towards the owner's Dedicated Hosts limits only. Consumer's Dedicated Hosts limits are not affected by Dedicated Hosts that have been shared with them. Similarly, instances that consumers launch onto shared Dedicated Hosts do not count towards their instance limits.\nHost recovery and Dedicated Host sharing\nHost recovery recovers instances launched by the Dedicated Host owner and the consumers with whom it has been shared. The replacement Dedicated Host is allocated to the owner's account. It is added to the same resource shares as the original Dedicated Host, and it is shared with the same consumers.\nFor more information, see Amazon EC2 Dedicated Host recovery."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/sharing-dh.html",
        "content": "When an owner shares a Dedicated Host, it enables consumers to launch instances on the host. Consumers can launch as many instances onto the shared host as its available capacity allows.\nImportant\nNote that you are responsible for ensuring that you have appropriate license rights to share any BYOL licenses on your Dedicated Hosts.\nIf you share a Dedicated Host with auto-placement enabled, keep the following in mind as it could lead to unintended Dedicated Host usage:\nIf consumers launch instances with Dedicated Host tenancy and they do not have capacity on a Dedicated Host that they own in their account, the instance is automatically launched onto the shared Dedicated Host.\nTo share a Dedicated Host, you must add it to a resource share. A resource share is an AWS RAM resource that lets you share your resources across AWS accounts. A resource share specifies the resources to share, and the consumers with whom they are shared. You can add the Dedicated Host to an existing resource, or you can add it to a new resource share.\nIf you are part of an organization in AWS Organizations and sharing within your organization is enabled, consumers in your organization are automatically granted access to the shared Dedicated Host. Otherwise, consumers receive an invitation to join the resource share and are granted access to the shared Dedicated Host after accepting the invitation.\nNote\nAfter you share a Dedicated Host, it could take a few minutes for consumers to have access to it.\nYou can share a Dedicated Host that you own by using one of the following methods.\nAmazon EC2 console\nAWS RAM console\nAWS CLI\nTo share a Dedicated Host that you own using the Amazon EC2 console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Dedicated Hosts.\nChoose the Dedicated Host to share and choose Actions, Share host.\nSelect the resource share to which to add the Dedicated Host and choose Share host.\nIt could take a few minutes for consumers to get access to the shared host."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/unsharing-dh.html",
        "content": "The Dedicated Host owner can unshare a shared Dedicated Host at any time. When you unshare a shared Dedicated Host, the following rules apply:\nConsumers with whom the Dedicated Host was shared can no longer launch new instances onto it.\nInstances owned by consumers that were running on the Dedicated Host at the time of unsharing continue to run but are scheduled for retirement. Consumers receive retirement notifications for the instances and they have two weeks to take action on the notifications. However, if the Dedicated Host is reshared with the consumer within the retirement notice period, the instance retirements are cancelled.\nTo unshare a shared Dedicated Host that you own, you must remove it from the resource share. You can do this by using one of the following methods.\nAmazon EC2 console\nAWS RAM console\nCommand line\nTo unshare a shared Dedicated Host that you own using the Amazon EC2 console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Dedicated Hosts.\nChoose the Dedicated Host to unshare and choose the Sharing tab.\nThe Sharing tab lists the resource shares to which the Dedicated Host has been added. Select the resource share from which to remove the Dedicated Host and choose Remove host from resource share."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/identifying-shared-dh.html",
        "content": "You can view Dedicated Host that you are sharing with other accounts, and Dedicated Hosts that are shared with you. If you own the Dedicated Host, you can see all of the instances running on the host, including instances launched by consumers. If the Dedicated Host is shared with you, you can see only the instances that you launched onto the shared host, and not those launched by other consumers.\nOwners and consumers can identify shared Dedicated Hosts using one of the following methods.\nAmazon EC2 console\nCommand line\nTo identify a shared Dedicated Host using the Amazon EC2 console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Dedicated Hosts. The screen lists Dedicated Hosts that you own and Dedicated Hosts that are shared with you. The Owner column shows the AWS account ID of the Dedicated Host owner. To view the instances running on the hosts, select the Instances tab."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dh-outposts.html",
        "content": "AWS Outposts is a fully managed service that extends AWS infrastructure, services, APIs, and tools to your premises. By providing local access to AWS managed infrastructure, AWS Outposts enables you to build and run applications on premises using the same programming interfaces as in AWS Regions, while using local compute and storage resources for lower latency and local data processing needs.\nAn Outpost is a pool of AWS compute and storage capacity deployed at a customer site. AWS operates, monitors, and manages this capacity as part of an AWS Region.\nYou can allocate Dedicated Hosts on Outposts that you own in your account. This makes it easier for you to bring your existing software licenses and workloads that require a dedicated physical server to AWS Outposts. You can also target specific hardware assets on an Outpost to help minimize latency between your workloads.\nDedicated Hosts allow you to use your eligible software licenses on Amazon EC2, so that you get the flexibility and cost effectiveness of using your own licenses. Other software licenses that are bound to virtual machines, sockets, or physical cores, can also be used on Dedicated Hosts, subject to their license terms. While Outposts have always been a single-tenant environments that are eligible for BYOL workloads, Dedicated Hosts allows you to limit the needed licenses to a single host as opposed to the entire Outpost deployment.\nAdditionally, using Dedicated Hosts on an Outpost gives you greater flexibility in instance type deployment, and more granular control over instance placement. You can target a specific host for instance launches and use host affinity to ensure that the instance always runs on that host, or you can use auto-placement to launch an instance onto any available host that has matching configurations and available capacity.\nContents\nPrerequisites\nSupported features\nConsiderations\nAllocate an Amazon EC2 Dedicated Host on AWS Outposts\nPrerequisites\nYou must have an Outpost installed at your site. For more information, see Create an Outpost and order Outpost capacity in the AWS Outposts User Guide.\nSupported features\nThe following instance families are supported: C5, M5, R5, C5d, M5d, R5d, G4dn, and i3en.\nDedicated Hosts on Outposts can be configured to support multiple instance sizes. Support for multiple instance sizes is available for the following instance families: C5, M5, R5, C5d, M5d, and R5d. For more information, see Amazon EC2 Dedicated Host instance capacity configurations.\nDedicated Hosts on Outposts support auto-placement and targeted instance launches. For more information, see Amazon EC2 Dedicated Host auto-placement and host affinity.\nDedicated Hosts on Outposts support host affinity. For more information, see Amazon EC2 Dedicated Host auto-placement and host affinity.\nDedicated Hosts on Outposts support sharing with AWS RAM. For more information, see Cross-account Amazon EC2 Dedicated Host sharing.\nConsiderations\nDedicated Host Reservations are not supported on Outposts.\nHost resource groups and AWS License Manager are not supported on Outposts.\nDedicated Hosts on Outposts do not support burstable T3 instances.\nDedicated Hosts on Outposts do not support host recovery.\nSimplified automatic recovery is not supported for instances with Dedicated Host tenancy on Outposts."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dh-outpost-allocate.html",
        "content": "You allocate and use Dedicated Hosts on Outposts in the same way that would with Dedicated Hosts in an AWS Region.\nPrerequisites\nCreate a subnet on the Outpost. For more information, see Create a subnet in the AWS Outposts User Guide.\nTo allocate a Dedicated Host on an Outpost, use one of the following methods:\nAWS Outposts console\nAmazon EC2 console\nAWS CLI\nOpen the AWS Outposts console at https://console.aws.amazon.com/outposts/.\nIn the navigation pane, choose Outposts. Select the Outpost and then choose Actions, Allocate Dedicated Host.\nConfigure the Dedicated Host as needed. For more information, see Allocate an Amazon EC2 Dedicated Host for use in your account.\nNote\nAvailability Zone and Outpost ARN should be pre-populated with the Availability Zone and ARN of the selected Outpost.\nChoose Allocate.\nTo launch an instance onto a Dedicated Host on an Outpost\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Dedicated Hosts. Select the Dedicated Host that you allocated in the previous step and choose Actions, Launch instance onto host.\nConfigure the instance as needed and then launch the instance. For more information, see Launch Amazon EC2 instances on an Amazon EC2 Dedicated Host."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-recovery.html",
        "content": "Dedicated Host auto recovery restarts your instances on to a new replacement host when certain problematic conditions are detected on your Dedicated Host. Host recovery reduces the need for manual intervention and lowers the operational burden if there is an unexpected Dedicated Host failure concerning system power or network connectivity events. Other Dedicated Host issues will require manual intervention to recover from.\nContents\nHow host recovery works\nSupported instance types\nPricing\nManage host recovery\nView host recovery setting\nManually recovery unsupported instances\nSupported instance types\nHost recovery is supported for the following instance families: A1, C3, C4, C5, C5n, C6a, C6g, C6i, Inf1, G3, G5g, M3, M4, M5, M5n, M5zn, M6a, M6g, M6i, P2, P3, R3, R4, R5, R5b, R5n, R6g, R6i, T3, X1, X1e, X2iezn, u-6tb1, u-9tb1, u-12tb1, u-18tb1, and u-24tb1.\nTo recover instances that are not supported, see Manually recover instances that are not supported by Amazon EC2 Dedicated Host recovery.\nNote\nDedicated Host auto recovery of supported metal instance types will take longer to detect and recover from than non-metal instance types.\nPricing\nThere are no additional charges for using host recovery, but the usual Dedicated Host charges apply. For more information, see Amazon EC2 Dedicated Hosts Pricing.\nAs soon as host recovery is initiated, you are no longer billed for the impaired Dedicated Host. Billing for the replacement Dedicated Host begins only after it enters the available state.\nIf the impaired Dedicated Host was billed using the On-Demand rate, the replacement Dedicated Host is also billed using the On-Demand rate. If the impaired Dedicated Host had an active Dedicated Host Reservation, it is transferred to the replacement Dedicated Host."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-recovery-basics.html",
        "content": "Dedicated Hosts and the host resource groups recovery process use host-level health checks to assess Dedicated Host availability and to detect underlying system failures. The type of Dedicated Host failure determines if Dedicated Host auto recovery is possible. Examples of problems that can cause host-level health checks to fail include:\nLoss of network connectivity\nLoss of system power\nHardware or software issues on the physical host\nImportant\nDedicated Host auto recovery does not occur when the host is scheduled for retirement.\nDedicated Host auto recovery\nWhen a system power or network connectivity failure is detected on your Dedicated Host, Dedicated Host auto recovery is initiated and Amazon EC2 automatically allocates a replacement Dedicated Host in the same Availability Zone as the original Dedicated Host. The replacement Dedicated Host receives a new host ID, but retains the same attributes as the original Dedicated Host, including:\nAvailability Zone\nInstance type\nTags\nAuto placement settings\nReservation\nWhen the replacement Dedicated Host is allocated, the instances are recovered on to the replacement Dedicated Host. The recovered instances retain the same attributes as the original instances, including:\nInstance ID\nPrivate IP addresses\nElastic IP addresses\nEBS volume attachments\nAll instance metadata\nAdditionally, the built-in integration with AWS License Manager automates the tracking and management of your licenses.\nNote\nAWS License Manager integration is supported only in Regions in which AWS License Manager is available.\nIf instances have a host affinity relationship with the impaired Dedicated Host, the recovered instances establish host affinity with the replacement Dedicated Host.\nWhen all of the instances have been recovered on to the replacement Dedicated Host, the impaired Dedicated Host is released, and the replacement Dedicated Host becomes available for use.\nWhen host recovery is initiated, the AWS account owner is notified by email and by an AWS Health Dashboard event. A second notification is sent after the host recovery has been successfully completed.\nIf you are using AWS License Manager to track your licenses, AWS License Manager allocates new licenses for the replacement Dedicated Host based on the license configuration limits. If the license configuration has hard limits that will be breached as a result of the host recovery, the recovery process is not allowed and you are notified of the host recovery failure through an Amazon SNS notification (if notification settings have been configured for AWS License Manager). If the license configuration has soft limits that will be breached as a result of the host recovery, the recovery is allowed to continue and you are notified of the limit breach through an Amazon SNS notification. For more information, see Using License Configurations and Settings in License Manager in the AWS License Manager User Guide.\nHost recovery states\nWhen a Dedicated Host failure is detected, the impaired Dedicated Host enters the under-assessment state, and all of the instances enter the impaired state. You can't launch instances on to the impaired Dedicated Host while it is in the under-assessment state.\nAfter the replacement Dedicated Host is allocated, it enters the pending state. It remains in this state until the host recovery process is complete. You can't launch instances on to the replacement Dedicated Host while it is in the pending state. Recovered instances on the replacement Dedicated Host remain in the impaired state during the recovery process.\nAfter the host recovery is complete, the replacement Dedicated Host enters the available state, and the recovered instances return to the running state. You can launch instances on to the replacement Dedicated Host after it enters the available state. The original impaired Dedicated Host is permanently released and it enters the released-permanent-failure state.\nIf the impaired Dedicated Host has instances that do not support host recovery, such as instances with instance store-backed volumes, the Dedicated Host is not released. Instead, it is marked for retirement and enters the permanent-failure state.\nScenarios without Dedicated Host auto recovery\nDedicated Host auto recovery does not occur when the host is scheduled for retirement. You will receive a retirement notification in the AWS Health Dashboard, an Amazon CloudWatch event, and the AWS account owner email address receives a message regarding the Dedicated Host failure. Follow the remedial steps described in the retirement notification within the specified time period to manually recover the instances on the retiring host.\nStopped instances are not recovered on to the replacement Dedicated Host. If you attempt to start a stopped instance that targets the impaired Dedicated Host, the instance start fails. We recommend that you modify the stopped instance to either target a different Dedicated Host, or to launch on any available Dedicated Host with matching configurations and auto-placement enabled.\nInstances with instance storage are not recovered on to the replacement Dedicated Host. As a remedial measure, the impaired Dedicated Host is marked for retirement and you receive a retirement notification after the host recovery is complete. Follow the remedial steps described in the retirement notification within the specified time period to manually recover the remaining instances on the impaired Dedicated Host."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-recovery-enable.html",
        "content": "Dedicated Host auto recovery restarts your instances on to a new replacement host when certain problematic conditions are detected on your Dedicated Host. You can enable host recovery when you allocate the Dedicated Host or after allocation.\nUse the following procedures to enable host recovery when allocating the host.\nConsole\nAWS CLI\nTo enable host recovery at allocation\nWhen allocating a Dedicated Host using the Amazon EC2 console, for Host recovery, choose Enable. For more information, see Allocate an Amazon EC2 Dedicated Host for use in your account.\nUse the following procedures to manage host recovery for a Dedicated Host.\nConsole\nAWS CLI\nTo manage host recovery after allocation\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Dedicated Hosts.\nSelect the Dedicated Host.\nChoose Actions, Modify host.\nFor Host recovery, select or clear Enable.\nChoose Save."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-recovery-view.html",
        "content": "You can view the host recovery configuration for a Dedicated Host at any time.\nTo view the host recovery configuration for a Dedicated Host using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Dedicated Hosts.\nSelect the Dedicated Host, and in the Description tab, review the Host Recovery field.\nTo view the host recovery configuration for a Dedicated Host using the AWS CLI\nUse the describe-hosts command.\n$ aws ec2 describe-hosts --host-ids h-012a3456b7890cdef\nThe HostRecovery response element indicates whether host recovery is enabled or disabled."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-recovery-unsupported.html",
        "content": "Host recovery does not support recovering instances that use instance store volumes. Follow the instructions below to manually recover any of your instances that could not be automatically recovered.\nWarning\nData on instance store volumes is lost when an instance is stopped, hibernated, or terminated. This includes instance store volumes that are attached to an instance that has an EBS volume as the root device. To protect data from instance store volumes, back it up to persistent storage before the instance is stopped or terminated.\nManually recover EBS-backed instances\nFor EBS-backed instances that could not be automatically recovered, we recommend that you manually stop and start the instances to recover them onto a new Dedicated Host. For more information about stopping your instance, and about the changes that occur in your instance configuration when it's stopped, see Stop and start Amazon EC2 instances.\nManually recover instance store-backed instances\nFor instance store-backed instances that could not be automatically recovered, we recommend that you do the following:\nLaunch a replacement instance on a new Dedicated Host from your most recent AMI.\nMigrate all of the necessary data to the replacement instance.\nTerminate the original instance on the impaired Dedicated Host."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-maintenance.html",
        "content": "With host maintenance, in the rare event that a Dedicated Host becomes degraded, we automatically migrate supported instances running on it onto a healthy replacement Dedicated Host. This helps to minimize your workload's downtime and simplify the management of your Dedicated Hosts. Host maintenance is also performed for planned and routine Amazon EC2 maintenance.\nAmazon EC2 supports two types of host maintenance:\nLive migration host maintenance \u2014 instances are automatically migrated to the replacement host within 24 hours, without stopping and restarting them.\nReboot-based host maintenance \u2014 instances are scheduled for instance reboot scheduled events, during which they are automatically stopped and restarted on the replacement host.\nContents\nHost maintenance versus host recovery\nConsiderations\nRelated services\nPricing\nHow host maintenance works for Amazon EC2 Dedicated Hosts\nConfigure the host maintenance setting for an Amazon EC2 Dedicated Host\nHost maintenance versus host recovery\nThe following table shows the main differences between host recovery and host maintenance.\nHost recovery Host maintenance\nInstance reachability Unreachable Reachable\nDedicated Host state under-assessment permanent-failure\nHost resource group Supported Not supported\nFor more information about host recovery, see Host recovery.\nConsiderations\nHost maintenance is available in all AWS Regions, except the China Regions and AWS GovCloud (US) Regions.\nHost maintenance is not supported in AWS Outposts, AWS Local Zones, and AWS Wavelength Zones.\nHost maintenance cannot be turned on or off for hosts already within a host resource group. Hosts added to a host resource group retain their host maintenance setting. For more information, see Host resource groups.\nHost maintenance is not supported with instance types that have instance store-backed root volumes.\nRelated services\nDedicated Host integrates with AWS License Manager\u2014Tracks licenses across your Amazon EC2 Dedicated Hosts (supported only in Regions in which AWS License Manager is available). For more information, see the AWS License Manager User Guide.\nYou must have sufficient licenses in your AWS account for your new Dedicated Host. The licenses associated with your degraded host are released when the host is released after the completion of the scheduled event.\nPricing\nThere are no additional charges for using host maintenance, but the usual Dedicated Host charges apply. For more information, see Amazon EC2 Dedicated Hosts Pricing.\nAs soon as host maintenance is initiated, you are no longer billed for the degraded Dedicated Host. Billing for the replacement Dedicated Host begins only after it enters the available state.\nIf the degraded Dedicated Host was billed using the On-Demand rate, the replacement Dedicated Host is also billed using the On-Demand rate. If the degraded Dedicated Host had an active Dedicated Host Reservation, it is transferred to the new Dedicated Host."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-maintenance-basics.html",
        "content": "When a degradation is detected on a Dedicated Host that is enabled for host maintenance, we automatically allocate a replacement Dedicated Host in your account. The replacement Dedicated Host receives a new host ID, but retains the same attributes as the original Dedicated Host, including:\nAuto placement settings\nAvailability Zone\nDedicated Host Reservation association\nHost affinity\nHost maintenance settings\nHost recovery settings\nInstance type\nTags\nOnce the replacement host has been allocated, we migrate the instances using either live migration host maintenance or reboot-based host maintenance, depending on the instance.\nOnce the degraded host has no more running instances, it is permanently release from your account.\nInstances that support live migration host maintenance\nInstances that support live migration host maintenance are automatically migrated to the replacement host within 24 hours, without stopping and restarting them. The migrated instances retain their existing attributes, including:\nInstance ID\nInstance metadata\nAmazon EBS volume attachments\nElastic IP addresses and private IP address\nMemory, CPU, and networking states\nNote\nSome larger instance sizes might experience a slight performance decrease during the migration.\nAfter the supported instance types have been automatically migrated to the replacement host, we send you email and AWS Health Dashboard notifications that include IDs of the degraded and replacement hosts, information about the instances that were automatically migrated using live migration host maintenance, and information about the remaining instances.\nInstances that require reboot-based host maintenance\nInstances that require reboot-based host maintenance are scheduled for instance reboot scheduled events for 14 days from the date of the notification. You can continue to access your instances on the degraded Dedicated Host before the scheduled event.\nNote\nYou can reschedule reboot events for a date that is within 7 days of the original event date and time. For more information, see Reschedule scheduled events that affect your Amazon EC2 instances.\nAmazon EC2 automatically reserves capacity on the replacement host for these instances. You can't run instances in this reserved capacity.\nNote\nThe Amazon EC2 console shows the reserved capacity as used capacity. It could appear that the instances are running on both the degraded host and the replacement host. However, the instances will continue to run only on the degraded host until they are stopped or they are migrated into the reserved capacity on the replacement host.\nAt the date and time of the scheduled event, the instances are automatically stopped and restarted into the reserved capacity on the replacement host. The migrated instances retain their existing attributes, including:\nInstance ID\nInstance metadata\nAmazon EBS volume attachments\nElastic IP addresses and private IP address\nHowever, since the instances are stopped and restarted during the migration, they do not retain their memory, CPU, and networking states.\nYou can also manually stop and restart these instances at any time before the scheduled event to migrate them to the replacement host or to a different host. You might need to modify your instance's host affinity to restart it on a different host. If you stop an instance before the scheduled event, the reserved capacity on the replacement host is released and becomes available for use.\nUnsupported instances\nSome instances can't be automatically migrated to the replacement host.\nInstances with instance store-backed root volumes\nFor these instances, we schedule instance retirement events for 28 days from the date of the notification. At the date and time of the scheduled event, the instances are permanently terminated. We recommend that you manually launch replacement instances on the replacement host and then migrate the required data to the replacement instances before the scheduled event.\nInstances with EBS-backed root volumes\nFor these instances, we schedule instance stop events for 28 days from the date of the notification. At the date and time of the scheduled event, the instances are stopped. We recommend that you manually stop on restart the instance on the replacement host or on a different host. You might need to modify your instance's host affinity to restart it on a different host.\nYou can continue to access your instances on the degraded Dedicated Host before the scheduled event.\nHost maintenance states\nWhen a host becomes degraded, it enters the permanent-failure state. You can't launch instances on a Dedicated Host that is in the permanent-failure state.\nOnce the replacement host is allocated, it remains in the pending state until the instances that support live migration host maintenance have been automatically migrated from the degraded host, and until the scheduled events have been scheduled for the remaining instances. After this has been completed, the replacement host enters the available state.\nOnce the replacement host enters the available state, you can use it in the same way that you use any host in your account. However, some instance capacity on the replacement host is reserved for the instances that require reboot-based host migration. You can't launch new instances into this reserved capacity.\nWhen the degraded host has no more running instances, it enters the released, permanent-failure state, and it is permanently released from your account."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-maintenance-configuring.html",
        "content": "You can configure host maintenance for all supported Dedicated Hosts via AWS Management Console or AWS CLI. See the following table for more details.\nAWS Management Console\nAWS CLI\nTo enable host maintenance for your Dedicated Host using AWS Management Console.\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Dedicated Hosts.\nSelect the Dedicated Host > Actions > Modify host.\nSelect on in the Host maintenance field.\nTo disable host maintenance for your Dedicated Host using AWS Management Console.\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Dedicated Hosts.\nSelect the Dedicated Host > Actions > Modify host.\nSelect off in the Host maintenance field.\nTo view the host maintenance configuration for your Dedicated Host using AWS Management Console.\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Dedicated Hosts.\nSelect the Dedicated Host, and in the Description tab, review the Host maintenance field.\nNote\nIf you disable host maintenance, you receive an email notification to evict the degraded host and manually migrate your instances to another host within 28 days. A replacement host is allocated if you have Dedicated Host reservation. After 28 days, the instances running on the degraded host are terminated, and the host is released automatically."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-monitoring.html",
        "content": "Amazon EC2 constantly monitors the state of your Dedicated Hosts. Updates are communicated on the Amazon EC2 console. You can view information about a Dedicated Host using the following methods.\nConsole\nAWS CLI\nPowerShell\nTo view the state of a Dedicated Host\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Dedicated Hosts.\nLocate the Dedicated Host in the list and review the value in the State column.\nThe following table explains the possible Dedicated Host states.\nState Description\navailable AWS hasn't detected an issue with the Dedicated Host. No maintenance or repairs are scheduled. Instances can be launched onto this Dedicated Host.\nreleased The Dedicated Host has been released. The host ID is no longer in use. Released hosts can't be reused.\nunder-assessment AWS is exploring a possible issue with the Dedicated Host. If action must be taken, you are notified via the AWS Management Console or email. Instances can't be launched onto a Dedicated Host in this state.\npending The Dedicated Host cannot be used for new instance launches. It is either being modified to support multiple instance types, or a host recovery is in progress.\npermanent-failure An unrecoverable failure has been detected. You receive an eviction notice through your instances and by email. Your instances might continue to run. If you stop or terminate all instances on a Dedicated Host with this state, AWS retires the host. AWS does not restart instances in this state. Instances can't be launched onto Dedicated Hosts in this state.\nreleased-permanent-failure AWS permanently releases Dedicated Hosts that have failed and no longer have running instances on them. The Dedicated Host ID is no longer available for use."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-aws-config.html",
        "content": "You can use AWS Config to record configuration changes for Dedicated Hosts, and for instances that are launched, stopped, or terminated on them. You can then use the information captured by AWS Config as a data source for license reporting.\nAWS Config records configuration information for Dedicated Hosts and instances individually, and pairs this information through relationships. There are three reporting conditions:\nAWS Config recording status\u2014When On, AWS Config is recording one or more AWS resource types, which can include Dedicated Hosts and Dedicated Instances. To capture the information required for license reporting, verify that hosts and instances are being recorded with the following fields.\nHost recording status\u2014When Enabled, the configuration information for Dedicated Hosts is recorded.\nInstance recording status\u2014When Enabled, the configuration information for Dedicated Instances is recorded.\nIf any of these three conditions are disabled, the icon in the Edit Config Recording button is red. To derive the full benefit of this tool, ensure that all three recording methods are enabled. When all three are enabled, the icon is green. To edit the settings, choose Edit Config Recording. You are directed to the Set up AWS Config page in the AWS Config console, where you can set up AWS Config and start recording for your hosts, instances, and other supported resource types. For more information, see Setting up AWS Config using the Console in the AWS Config Developer Guide.\nNote\nAWS Config records your resources after it discovers them, which might take several minutes.\nAfter AWS Config starts recording configuration changes to your hosts and instances, you can get the configuration history of any host that you have allocated or released and any instance that you have launched, stopped, or terminated. For example, at any point in the configuration history of a Dedicated Host, you can look up how many instances are launched on that host, along with the number of sockets and cores on the host. For any of those instances, you can also look up the ID of its Amazon Machine Image (AMI). You can use this information to report on licensing for your own server-bound software that is licensed per-socket or per-core.\nYou can view configuration histories in any of the following ways:\nBy using the AWS Config console. For each recorded resource, you can view a timeline page, which provides a history of configuration details. To view this page, choose the gray icon in the Config Timeline column of the Dedicated Hosts page. For more information, see Viewing Configuration Details in the AWS Config Console in the AWS Config Developer Guide.\nBy running AWS CLI commands. First, you can use the list-discovered-resources command to get a list of all hosts and instances. Then, you can use the get-resource-config-history command to get the configuration details of a host or instance for a specific time interval.\nBy using the AWS Config API in your applications. First, you can use the ListDiscoveredResources action to get a list of all hosts and instances. Then, you can use the GetResourceConfigHistory action to get the configuration details of a host or instance for a specific time interval.\nFor example, to get a list of all of your Dedicated Hosts from AWS Config, run a CLI command such as the following.\naws configservice list-discovered-resources --resource-type AWS::EC2::Host\nTo obtain the configuration history of a Dedicated Host from AWS Config, run a CLI command such as the following.\naws configservice get-resource-config-history --resource-type AWS::EC2::Instance --resource-id i-1234567890abcdef0\nTo manage AWS Config settings using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nOn the Dedicated Hosts page, choose Edit Config Recording.\nIn the AWS Config console, follow the steps provided to turn on recording. For more information, see Setting up AWS Config using the Console.\nFor more information, see Viewing Configuration Details in the AWS Config Console.\nTo activate AWS Config using the command line or API\nAWS CLI: Viewing Configuration Details (AWS CLI) in the AWS Config Developer Guide.\nAmazon EC2 API: GetResourceConfigHistory."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-instance.html",
        "content": "By default, EC2 instances run on shared tenancy hardware. This means that multiple AWS accounts might share the same physical hardware.\nDedicated Instances are EC2 instances that run on hardware that's dedicated to a single AWS account. This means that Dedicated Instances are physically isolated at the host hardware level from instances that belong to other AWS accounts, even if those accounts are linked to a single payer account. However, Dedicated Instances might share hardware with other instances from the same AWS account that are not Dedicated Instances.\nDedicated Instances provide no visibility or control over instance placement, and they do not support host affinity. If you stop and start a Dedicated Instance, it might not run on the same host. Similarly, you cannot target a specific host on which to launch or run an instance. Additionally, Dedicated Instances provide limited support for Bring Your Own License (BYOL).\nIf you require visibility and control over instance placement and more comprehensive BYOL support, consider using a Dedicated Host instead. Dedicated Instances and Dedicated Hosts can both be used to launch Amazon EC2 instances onto dedicated physical servers. There are no performance, security, or physical differences between Dedicated Instances and instances on Dedicated Hosts. However, there are some key differences between them. The following table highlights some of the key differences between Dedicated Instances and Dedicated Hosts:\nDedicated Host Dedicated Instance\nDedicated physical server\nPhysical server with instance capacity fully dedicated to your use.\nPhysical server that's dedicated to a single customer account.\nInstance capacity sharing\nCan share instance capacity with other accounts.\nNot supported\nBilling\nPer-host billing\nPer-instance billing\nVisibility of sockets, cores, and host ID\nProvides visibility of the number of sockets and physical cores\nNo visibility\nHost and instance affinity\nAllows you to consistently deploy your instances to the same physical server over time\nNot supported\nTargeted instance placement\nProvides additional visibility and control over how instances are placed on a physical server\nNot supported\nAutomatic instance recovery\nSupported. For more information, see Amazon EC2 Dedicated Host recovery.\nSupported\nBring Your Own License (BYOL)\nSupported\nPartial support *\nCapacity Reservations\nNot supported\nSupported\n* Microsoft SQL Server with License Mobility through Software Assurance, and Windows Virtual Desktop Access (VDA) licenses can be used with Dedicated Instance.\nFor more information about Dedicated Instances, see Amazon EC2 Dedicated Hosts.\nTopics\nDedicated Instance basics\nSupported features\nDedicated Instances limitations\nPricing for Dedicated Instances\nLaunch Dedicated Instances into VPC\nChange the tenancy of an instance\nChange the tenancy of a VPC\nDedicated Instance basics\nA VPC can have a tenancy of either default or dedicated. By default, your VPCs have default tenancy and instances launched into a default tenancy VPC have default tenancy. To launch Dedicated Instances, do the following:\nCreate a VPC with a tenancy of dedicated, so that all instances in the VPC run as Dedicated Instances. For more information, see Launch Dedicated Instances into a VPC with default tenancy.\nCreate a VPC with a tenancy of default and manually specify a tenancy of dedicated for the instances to run as Dedicated Instances. For more information, see Launch Dedicated Instances into a VPC with default tenancy.\nSupported features\nDedicated Instances support the following features and AWS service integrations:\nTopics\nReserved Instances\nAutomatic scaling\nAutomatic recovery\nDedicated Spot Instances\nBurstable performance instances\nReserved Instances\nTo reserve capacity for your Dedicated Instances, you can purchase Dedicated Reserved Instances or Capacity Reservations. For more information, see Reserved Instances for Amazon EC2 overview and Reserve compute capacity with EC2 On-Demand Capacity Reservations.\nWhen you purchase a Dedicated Reserved Instance, you are purchasing the capacity to launch a Dedicated Instance into a VPC at a much reduced usage fee; the price break in the usage charge applies only if you launch an instance with dedicated tenancy. When you purchase a Reserved Instance with default tenancy, it applies only to a running instance with default tenancy; it does not apply to a running instance with dedicated tenancy.\nYou can't use the modification process to change the tenancy of a Reserved Instance after you've purchased it. However, you can exchange a Convertible Reserved Instance for a new Convertible Reserved Instance with a different tenancy.\nAutomatic scaling\nYou can use Amazon EC2 Auto Scaling to launch Dedicated Instances. For more information, see Create a launch template using advanced settings in the Amazon EC2 Auto Scaling User Guide.\nAutomatic recovery\nYou can configure automatic recovery for a Dedicated Instance if it becomes impaired due to an underlying hardware failure or a problem that requires AWS involvement to repair. For more information, see Automatic instance recovery.\nDedicated Spot Instances\nYou can run a Dedicated Spot Instance by specifying a tenancy of dedicated when you create a Spot Instance request. For more information, see Launch on single-tenant hardware.\nBurstable performance instances\nYou can leverage the benefits of running on dedicated tenancy hardware with Burstable performance instances. T3 Dedicated Instances launch in unlimited mode by default, and they provide a baseline level of CPU performance with the ability to burst to a higher CPU level when required by your workload. The T3 baseline performance and ability to burst are governed by CPU credits. Because of the burstable nature of the T3 instance types, we recommend that you monitor how your T3 instances use the CPU resources of the dedicated hardware for the best performance. T3 Dedicated Instances are intended for customers with diverse workloads that display random CPU behavior, but that ideally have average CPU usage at or below the baseline usages. For more information, see Key concepts for burstable performance instances.\nAmazon EC2 has systems in place to identify and correct variability in performance. However, it is still possible to experience short-term variability if you launch multiple T3 Dedicated Instances that have correlated CPU usage patterns. For these more demanding or correlated workloads, we recommend using M5 or M5a Dedicated Instances rather than T3 Dedicated Instances.\nDedicated Instances limitations\nKeep the following in mind when using Dedicated Instances:\nSome AWS services or their features are not supported with a VPC with the instance tenancy set to dedicated. Refer to the respective service's documentation to confirm if there are any limitations.\nSome instance types can't be launched into a VPC with the instance tenancy set to dedicated. For more information about supported instance types, see Amazon EC2 Dedicated Instances.\nWhen you launch a Dedicated Instance backed by Amazon EBS, the EBS volume doesn't run on single-tenant hardware.\nPricing for Dedicated Instances\nPricing for Dedicated Instances is different from pricing for On-Demand Instances. For more information, see the Amazon EC2 Dedicated Instances."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicatedinstancesintovpc.html",
        "content": "When you create a VPC, you have the option of specifying its instance tenancy. If you launch an instance into a VPC that has an instance tenancy of dedicated, the instance will always run as a Dedicated Instance on hardware that's dedicated for your use.\nFor more information about creating a VPC and choosing the tenancy options, see Create a VPC in the Amazon VPC User Guide.\nYou can launch a Dedicated Instance using the Amazon EC2 launch instance wizard.\nConsole\nAWS CLI\nPowerShell\nTo launch a Dedicated Instance into a default tenancy VPC using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances, Launch instance.\nIn the Application and OS Images section, select an AMI from the list.\nIn the Instance type section, select the instance type to launch.\nNote\nEnsure that you choose an instance type that's supported as a Dedicated Instance. For more information, see Amazon EC2 Dedicated Instances.\nIn the Key pair section, select the key pair to associate with the instance.\nIn the Advanced details section, for Tenancy, select Dedicated.\nConfigure the remaining instance options as needed. For more information, see Reference for Amazon EC2 instance configuration parameters.\nChoose Launch instance.\nFor more information about launching an instance with a tenancy of host, see Launch Amazon EC2 instances on an Amazon EC2 Dedicated Host."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-change-tenancy.html",
        "content": "You can change the tenancy of a stopped instance after launch. The changes that you make take effect the next time the instance starts.\nThe operating system details of your instance\u2014and whether SQL Server is installed\u2014affect what conversions are supported. For more information about the tenancy conversion paths available to your instance, see Tenancy conversion in the License Manager User Guide.\nAlternatively, you can change the tenancy of your virtual private cloud (VPC). For more information, see Change the instance tenancy of a VPC.\nLimitations\nFor T3 instances, you must launch the instance on a Dedicated Host to use a tenancy of host. You can't change the tenancy from host to dedicated or default. Attempting to make one of these unsupported tenancy changes results in an InvalidRequest error code.\nConsole\nAWS CLI\nPowerShell\nTo change the tenancy of an instance using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances and select your instance.\nChoose Instance state, Stop instance, Stop.\nChoose Actions, Instance settings, Modify instance placement.\nFor Tenancy, choose whether to run your instance on dedicated hardware or on a Dedicated Host. Choose Save."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/change-tenancy-vpc.html",
        "content": "You can change the instance tenancy of a virtual private cloud (VPC) from dedicated to default after you create it. Modifying the instance tenancy of a VPC does not affect the tenancy of any existing instances in the VPC. The next time that you launch an instance in the VPC, it has a tenancy of default, unless you specify otherwise during instance launch.\nAlternatively, you can change the tenancy of specific instances. For more information, see Change the tenancy of an Amazon EC2 instance.\nLimitations\nYou can't change the instance tenancy of a VPC from default to dedicated after it is created.\nYou can't modify the instance tenancy of a VPC using the AWS Management Console You can modify it using the AWS CLI, an AWS SDK, or the Amazon EC2 API.\nAWS CLI\nPowerShell\nTo modify the instance tenancy attribute of a VPC using the AWS CLI\nUse the modify-vpc-tenancy command and specify the ID of the VPC and instance tenancy value. The only supported value is default.\naws ec2 modify-vpc-tenancy --vpc-id vpc-1a2b3c4d --instance-tenancy default"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-reservation-overview.html",
        "content": "Capacity Reservations allow you to reserve compute capacity for Amazon EC2 instances in a specific Availability Zone. There are two types of Capacity Reservations serving different use cases.\nTypes of Capacity Reservations\nOn-Demand Capacity Reservations\nCapacity Blocks for ML\nThe following are some common use cases for On-Demand Capacity Reservations:\nScaling events \u2013 Create On-Demand Capacity Reservations ahead of your business-critical events to ensure that you can scale when you need to.\nRegulatory requirements and disaster recovery \u2013 Use On-Demand Capacity Reservations to satisfy regulatory requirements for high availability, and reserve capacity in a different Availability Zone or Region for disaster recovery.\nThe following are some common use cases for Capacity Blocks for ML:\nMachine learning (ML) model training and fine-tuning \u2013 Get uninterrupted access to the GPU instances that you reserved to complete ML model training and fine-tuning.\nML experiments and prototypes \u2013 Run experiments and build prototypes that require GPU instances for short durations.\nWhen to use On-Demand Capacity Reservation\nUse On-Demand Capacity Reservations if you have strict capacity requirements, and your current or future business-critical workloads require capacity assurance. With On-Demand Capacity Reservations, you can ensure that you'll always have access to the Amazon EC2 capacity you've reserved for as long as you need it.\nWhen to use Capacity Blocks for ML\nUse Capacity Blocks for ML when you need to ensure that you have uninterrupted access to GPU instances for a defined period of time starting on a future date. Capacity Blocks are ideal for training and fine-tuning ML models, short experimentation runs, and handling temporary surges in inference demand in the future. With Capacity Blocks, you can ensure that you'll have access to GPU resources on a specific date to run your ML workloads."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-capacity-reservations.html",
        "content": "Amazon EC2 Capacity Reservations allow you to reserve compute capacity for your Amazon EC2 instances in a specific Availability Zone for any duration. If you have strict capacity requirements for current or future business-critical workloads that require a certain level of long or short-term capacity assurance, we recommend that you create a Capacity Reservation to help ensure that you always have access to Amazon EC2 capacity when you need it, for as long as you need it.\nYou can create a Capacity Reservation at any time, and you can choose when it starts. You can request a Capacity Reservation for immediate use or you can request a Capacity Reservation for a future date.\nIf you request a Capacity Reservation for immediate use, the Capacity Reservation becomes available for use immediately and there is no term commitment. You can modify the Capacity Reservation at any time, and you can cancel it at any time to release the reserved capacity and to stop incurring changes.\nIf you request a future-dated Capacity Reservation, you specify the future date at which you need the Capacity Reservation to become available for use. You must also specify a commitment duration for which you commit to keeping the requested capacity in your account after the specified date. At the requested date and time, the Capacity Reservation becomes available for use and the commitment duration starts. During the commitment duration, you can't decrease the instance count or commitment duration below your initial commitment, or cancel the Capacity Reservation. After the commitment duration elapses, you can modify the Capacity Reservation in any way or cancel it if you no longer need it.\nCapacity Reservations can only be used by instances that match their attributes. By default, Capacity Reservations automatically match new instances and running instances that have matching attributes (instance type, platform, Availability Zone, and tenancy). This means that any instance with matching attributes automatically runs in the Capacity Reservation. However, you can also target a Capacity Reservation for specific workloads. This allows you to explicitly control which instances are allowed to run in that reserved capacity. You can also specify that instances will only run in a Capacity Reservation or Capacity Reservation resource group.\nImportant\nFuture-dated Capacity Reservations are for helping you launch and cover incremental instances, and not to cover existing running instances. If you need to cover existing running instances, use Capacity Reservations that start immediately instead.\nContents\nConcepts for Amazon EC2 Capacity Reservations\nDifferences between Capacity Reservations, Reserved Instances, and Savings Plans\nSupported platforms\nQuotas\nLimitations\nCapacity Reservation pricing and billing\nCreate a Capacity Reservation\nView the state of a Capacity Reservation\nLaunch instances into an existing Capacity Reservation\nModify an active Capacity Reservation\nModify the Capacity Reservation settings of your instance\nMove capacity between Capacity Reservations\nSplit off capacity from an existing Capacity Reservation\nCancel a Capacity Reservation\nCapacity Reservation groups\nCreate Capacity Reservations in cluster placement groups\nCapacity Reservations in Local Zones\nCapacity Reservations in Wavelength Zones\nCapacity Reservations on AWS Outposts\nShared Capacity Reservations\nCapacity Reservation Fleets\nMonitor Capacity Reservations usage with CloudWatch metrics\nMonitor Capacity Reservation underutilization\nMonitor state changes for future-dated Capacity Reservations\nDifferences between Capacity Reservations, Reserved Instances, and Savings Plans\nThe following table highlights key differences between Capacity Reservations, Reserved Instances, and Savings Plans:\nCapacity Reservations Zonal Reserved Instances Regional Reserved Instances Savings Plans\nTerm\nNo commitment required for immediate-use Capacity Reservations. They can be created, modified, and canceled as needed.\nWith future-dated Capacity Reservations, you specify a commitment duration for which you commit to keeping the capacity in your account. After the commitment duration elapses, you can cancel the Capacity Reservation at any time.\nRequires a fixed one-year or three-year commitment\nCapacity benefit Capacity reserved in a specific Availability Zone. No capacity reserved.\nBilling discount No billing discount. \u2020 Provides a billing discount.\nInstance Limits Your On-Demand Instance limits per Region apply. Default is 20 per Availability Zone. You can request a limit increase. Default is 20 per Region. You can request a limit increase. No limit.\n\u2020 You can combine Capacity Reservations with Savings Plans or Regional Reserved Instances to receive a discount.\nFor more information, see the following:\nReserved Instances for Amazon EC2 overview\nSavings Plans User Guide\nSupported platforms\nYou must create the Capacity Reservation with the correct platform to ensure that it properly matches with your instances. Capacity Reservations support the following platforms:\nLinux/UNIX\nLinux with SQL Server Standard\nLinux with SQL Server Web\nLinux with SQL Server Enterprise\nSUSE Linux\nRed Hat Enterprise Linux\nRHEL with SQL Server Standard\nRHEL with SQL Server Enterprise\nRHEL with SQL Server Web\nRHEL with HA\nRHEL with HA and SQL Server Standard\nRHEL with HA and SQL Server Enterprise\nUbuntu Pro\nWindows\nWindows with SQL Server\nWindows with SQL Server Web\nWindows with SQL Server Standard\nWindows with SQL Server Enterprise\nWhen you purchase a Capacity Reservation, you must specify the platform that represents the operating system for your instance.\nFor SUSE Linux and RHEL distributions, excluding BYOL, you must choose the specific platform. For example, the SUSE Linux or Red Hat Enterprise Linux platform.\nFor all other Linux distributions (including Ubuntu), choose the Linux/UNIX platform.\nIf you bring your existing RHEL subscription (BYOL), you must choose the Linux/UNIX platform.\nFor Windows with SQL Standard, Windows with SQL Server Enterprise, and Windows with SQL Server Web, you must choose the specific platform.\nFor all other Windows versions, excluding BYOL which is not supported, choose the Windows platform.\nQuotas\nThe number of instances for which you are allowed to reserve capacity is based on your account's On-Demand Instance quota. You can reserve capacity for as many instances as that quota allows, minus the number of instances that are already running.\nCapacity Reservations in the assessing, scheduled, pending , active, and delayed state count towards your On-Demand Instance quota.\nLimitations\nBefore you create Capacity Reservations, take note of the following limitations and restrictions.\nActive and unused Capacity Reservations count toward your On-Demand Instance limits.\nCapacity Reservations are not transferable from one AWS account to another. However, you can share Capacity Reservations with other AWS accounts. For more information, see Shared Capacity Reservations.\nZonal Reserved Instance billing discounts do not apply to Capacity Reservations.\nCapacity Reservations can be created in cluster placement groups. Spread and partition placement groups are not supported.\nCapacity Reservations can't be used with Dedicated Hosts. Capacity Reservations can be used with Dedicated Instances.\n[Windows instances] Capacity Reservations can't be used with Bring Your Own License (BYOL).\nCapacity Reservations do not ensure that a hibernated instance can resume after you try to start it.\nYou can request future-dated Capacity Reservations for an instance count with a minimum of 100 vCPUs. For example, if you request a future-dated Capacity Reservation for m5.xlarge instances, you must request at least 25 instances (25 * m5.xlarge = 100 vCPUs).\nYou can request future-dated Capacity Reservations for instance types in the C, I, M, R, or T instance families only."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cr-concepts.html",
        "content": "The following key concepts apply to Capacity Reservations.\nTopics\nStart date and time\nEnd date and time\nCommitment duration\nFuture-dated Capacity Reservation assessment\nCapacity Reservation attributes\nInstance matching criteria\nStart date and time\nThe start date and time defines when the Capacity Reservation becomes available for use. A Capacity Reservation can start immediately, or it can start at a future date.\nIf you choose to start a Capacity Reservation immediately, the reserved capacity becomes available for use immediately after you create it, and billing starts as soon as the Capacity Reservation enters the active state. You do not need to enter into any term commitments. You can modify the Capacity Reservation as needed at any time to meet your needs, and you can cancel it at any time to release the capacity and to stop incurring charges.\nIf you choose to start a Capacity Reservation at a future date, you specify a future date and time at which you will need the reserved capacity, and a commitment duration, which is the minimum duration for which you commit to keeping the requested Capacity Reservation in your account after it has been provisioned. At the specified future date, the Capacity Reservation becomes available for use and billing starts at that time, once the Capacity Reservation enters the active state. The commit duration starts as soon as the Capacity Reservation is provisioned in your account. During this time, you can't decrease the instance count below the committed instance count, choose an end date that is before the commitment duration, or cancel the Capacity Reservation. However, after the commitment duration lapses, you are free to modify the Capacity Reservation in any way, or cancel it to release the reserved capacity and to stop incurring charges.\nEnd date and time\nThe end date and time defines when the Capacity Reservation ends and the reserved capacity is released from your account. You can configure a Capacity Reservation to end automatically at a specific date and time, or you can configure it to stay active indefinitely until you manually cancel it.\nIf you configure a Capacity Reservation to end automatically, the Capacity Reservation the Capacity Reservation expires within an hour of the specified time. For example, if you specify 5/31/2019, 13:30:55, the Capacity Reservation is guaranteed to end between 13:30:55 and 14:30:55 on 5/31/2019.\nAfter a reservation ends, the reserved capacity is released from your account and you can no longer target instances to the Capacity Reservation. Instances running in the reserved capacity continue to run uninterrupted. If instances targeting a Capacity Reservation are stopped, you can't restart them until you remove their Capacity Reservation targeting preference or configure them to target a different Capacity Reservation. For more information, see Modify the Capacity Reservation settings of your instance.\nCommitment duration\nThe commitment duration applies to future-dated Capacity Reservations only.\nThe commitment duration is a minimum duration for which you commit to having the future-dated Capacity Reservation in the active state in your account after it has been provisioned. You can keep a future-dated Capacity Reservation for longer than the commitment duration, but not shorter. The following apply during the commitment duration:\nYou can't cancel a Capacity Reservation during the commitment duration.\nYou can't decrease the instance count below the committed instance count, but you can increase it.\nYou can't configure a Capacity Reservation to automatically end at a date or time that is within the commitment duration. You can extend the end date and time during the commitment period.\nAmazon EC2 uses the commitment duration that you specify to assess whether the request can be supported. For most requests, the recommended commitment duration is 14 days. While assessing a request, Amazon EC2 might determine that it can support a shorter commitment duration. In that case, Amazon EC2 will schedule the future-dated Capacity Reservation with the shorter commitment duration. This means that you are committed to keeping the Capacity Reservation in your account for a shorter period than you initially requested.\nFuture-dated Capacity Reservation assessment\nWhen you request a future-dated Capacity Reservation, Amazon EC2 assesses the request to determine whether it can be supported based on capacity availability and the commitment duration you specify. The assessment is typically completed within 5 days. Amazon EC2 considers multiple factors when evaluating a request, including:\nForecasted capacity supply\nThe commitment duration\nHow early you request the Capacity Reservation relative to your start date\nThe size of your request\nRequesting a future-dated Capacity Reservation early (more than 8 weeks before the start date), and increasing your minimum commitment duration will improve our ability to support your request. For most requests, the recommended commitment duration is 14 days.\nThe Capacity Reservation remains in the assessing state while the request is being assessed.\nIf the request can be supported, the Capacity Reservation enters the scheduled state and it is scheduled for delivery on the requested date and time. The total instance count remains 0 during while the Capacity Reservation is in the scheduled state. A scheduled Capacity Reservation will become active and available for use at the requested date.\nIf a request can't be supported, the Capacity Reservation enters the unsupported state. Unsupported Capacity Reservations are not delivered.\nYou can cancel a future-dated Capacity Reservation while it is in the assessing state.\nCapacity Reservation attributes\nWhen you create a Capacity Reservation, you must specify the following attributes:\nAvailability Zone\nInstance type\nPlatform (operating system type)\nTenancy (default or dedicated)\nOnly instances that match these attributes can launch or run in the Capacity Reservation.\nInstance matching criteria\nInstance matching criteria, or instance eligibility, determines which instances are allowed to launch and run in the Capacity Reservation. A Capacity Reservation can have one of the following matching criteria:\nOpen \u2014 The Capacity Reservation automatically matches all instances that have matching attributes (instance type, platform, and Availability Zone). New and existing instances that have matching attributes automatically run in the Capacity Reservation without any additional configuration.\nTargeted \u2014 The Capacity Reservation accepts only instances that have matching attributes (instance type, platform, and Availability Zone), and that explicitly target the Capacity Reservation. The instance must specifically target the Capacity Reservation to launch or run in its reserved capacity. This allows you to explicitly control which instances are allowed to run in the reserved capacity and helps you avoid unintentional reserved capacity usage.\nWhen you request a future-dated Capacity Reservation, you can specify only targeted matching criteria. This ensures that the capacity delivered by the Capacity Reservation is incremental, or additional, to any running instances or reserved capacity that you have at the time of delivery. After the Capacity Reservation becomes active in your account, you can change the instance matching criteria to open if needed. However, keep in mind that any matching instances will automatically run in the Capacity Reservation, which could lead to unintentional capacity usage and prevent you from launching new instances for the full requested instance count."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-reservations-pricing-billing.html",
        "content": "The topics in this section provide an overview of pricing and billing for Capacity Reservations.\nTopics\nPricing\nBilling\nBilling discounts\nViewing your bill\nPricing\nCapacity Reservations are charged at the equivalent On-Demand rate whether you run instances in reserved capacity or not. If you do not use the reservation, this shows up as unused reservation on your Amazon EC2 bill. When you run an instance that matches the attributes of a reservation, you just pay for the instance and nothing for the reservation. There are no upfront or additional charges.\nFor example, if you create a Capacity Reservation for 20 m4.large Linux instances and run 15 m4.large Linux instances in the same Availability Zone, you will be charged for 15 active instances and for 5 unused instances in the reservation.\nBilling discounts for Savings Plans and Regional Reserved Instances apply to Capacity Reservations. For more information, see Billing discounts.\nFor more information, see Amazon EC2 Pricing.\nBilling\nBilling starts as soon as the Capacity Reservation is provisioned in your account, and it continues while the Capacity Reservation remains provisioned in your account. For future-dated Capacity Reservations, this means that billing starts only once the Capacity Reservation is provisioned in your account at the requested future date.\nCapacity Reservations are billed at per-second granularity. This means that you are charged for partial hours. For example, if a Capacity Reservation remains provisioned in your account for 24 hours and 15 minutes, you are billed for 24.25 reservation hours.\nThe following example shows how a Capacity Reservation is billed. The Capacity Reservation is created for one m4.large Linux instance, which has an On-Demand rate of $0.10 per usage hour. In this example, the Capacity Reservation is provisioned in the account for five hours. The Capacity Reservation is unused for the first hour, so it is billed for one unused hour at the m4.large instance type's standard On-Demand rate. In hours two through five, the Capacity Reservation is occupied by an m4.large instance. During this time, the Capacity Reservation accrues no charges, and the account is instead billed for the m4.large instance occupying it. In the sixth hour, the Capacity Reservation is canceled and the m4.large instance runs normally outside of the reserved capacity. For that hour, it is charged at the On-Demand rate of the m4.large instance type.\nBilling discounts\nBilling discounts for Savings Plans and Regional Reserved Instances apply to Capacity Reservations. AWS automatically applies these discounts to Capacity Reservations that have matching attributes. When a Capacity Reservation is used by an instance, the discount is applied to the instance. Discounts are preferentially applied to instance usage before covering unused Capacity Reservations.\nBilling discounts for zonal Reserved Instances do not apply to Capacity Reservations.\nFor more information, see the following:\nReserved Instances for Amazon EC2 overview\nSavings Plans User Guide\nBilling and purchase options\nViewing your bill\nYou can review the charges and fees to your account on the AWS Billing and Cost Management console.\nThe Dashboard displays a spend summary for your account.\nOn the Bills page, under Details, expand the Elastic Compute Cloud section and the Region to get billing information about your Capacity Reservations.\nYou can view the charges online, or you can download a CSV file. For more information, see Capacity Reservation line items."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-reservations-create.html",
        "content": "You can create a Capacity Reservation at any time to ensure that you have compute capacity available in a specific Availability Zone. A Capacity Reservation can start immediately, or it can start at a future date. The capacity becomes available for use only once the Capacity Reservation enters the active state.\nNote\nIf you create a Capacity Reservation with open instance matching criteria, and you have running instances with matching attributes at the time the Capacity Reservation becomes active, those instances automatically run in the reserved capacity. To avoid this, use targeted instance matching criteria. For more information, see Instance matching criteria.\nYour request to create a Capacity Reservation could fail if one of the following is true:\nAmazon EC2 does not have sufficient capacity to fulfill the request. Either try again at a later time, try a different Availability Zone, or try a smaller request. If your application is flexible across instance types and sizes, try different instance attributes.\nThe requested quantity exceeds your On-Demand Instance limit for the selected instance family. Increase your On-Demand Instance limit for the instance family and try again. For more information, see On-Demand Instance quotas.\nTopics\nCreate a Capacity Reservation for immediate use\nCreate a future-dated Capacity Reservation\nCreate a Capacity Reservation for immediate use\nYou create a Capacity Reservation for immediate use using one of the following methods:\nConsole\nAWS CLI\nTo create a Capacity Reservation using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nChoose Capacity Reservations, and then choose Create Capacity Reservation.\nConfigure the following settings in the Instance details section.\nInstance Type \u2014 The instance type for which to reserve capacity.\nPlatform \u2014 The operating system for your instances. For more information, see Supported platforms.\nAvailability Zone \u2014 The Availability Zone in which to reserve the capacity.\nTenancy \u2014 The type of tenancy to use for the reserved capacity. Choose Default to reserve capacity on shared hardware, or Dedicated to reserve capacity on hardware that is dedicated to your account.\n(Optional) Placement group ARN \u2014 The ARN of the cluster placement group in which to create the Capacity Reservation. For more information, see Create Capacity Reservations in cluster placement groups.\nTotal instance count \u2014 The number of instances for which to reserve capacity. If you specify a quantity that exceeds your remaining On-Demand Instance quota for the selected instance type, the request fails.\nConfigure the following settings in the Reservation details section:\nCapacity Reservation starts \u2014 Choose Immediately.\nCapacity Reservation ends \u2014 Choose one of the following options:\nManually \u2014 Reserve the capacity until you explicitly cancel it.\nSpecific time \u2014 Cancel the capacity reservation automatically at the specified date and time.\nInstance eligibility \u2014 Choose one of the following options:\nopen \u2014 (Default) The Capacity Reservation matches any instance that has matching attributes (instance type, platform, Availability Zone, and tenancy). If you launch an instance with matching attributes, it is placed into the reserved capacity automatically.\ntargeted \u2014 The Capacity Reservation only accepts instances that have matching attributes (instance type, platform, Availability Zone, and tenancy), and that explicitly target the reservation.\nChoose Create.\nCreate a future-dated Capacity Reservation\nRequest a future-dated Capacity Reservation if you need the reserved capacity to become available at a future date and time.\nAfter you request a future-dated Capacity Reservation, the request undergoes an assessment to determine whether it can be supported. For more information, see Future-dated Capacity Reservation assessment.\nConsiderations\nYou can request future-dated Capacity Reservations for instance types in the C, I, M, R, or T instance families only. For more information, see Amazon EC2 instance type naming conventions.\nYou can request future-dated Capacity Reservations for an instance count with a minimum of 100 vCPUs. For example, if you request a future-dated Capacity Reservation for m5.xlarge instances, you must request capacity for at least 25 instances (25 * m5.xlarge = 100 vCPUs).\nYou can request a future-dated Capacity Reservation between 5 and 120 days in advance. However, we recommend that you request it at least 56 days (8 weeks) in advance to improve supportability.\nFor most requests, the recommended commitment duration is 14 days.\nYou can request a future-dated Capacity Reservation using one of the following methods:\nConsole\nAWS CLI\nTo create a Capacity Reservation using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nChoose Capacity Reservations, and then choose Create Capacity Reservation.\nConfigure the following settings in the Instance details section.\nInstance Type \u2014 The instance type for which to reserve capacity.\nPlatform \u2014 The operating system for your instances. For more information, see Supported platforms.\nAvailability Zone \u2014 The Availability Zone in which to reserve the capacity.\nTenancy \u2014 The type of tenancy to use for the reserved capacity. Choose Default to reserve capacity on shared hardware, or Dedicated to reserve capacity on hardware that is dedicated to your account.\nTotal instance count \u2014 The number of instances for which to reserve capacity. If you specify a quantity that exceeds your remaining On-Demand Instance quota for the selected instance type, the request fails.\nConfigure the following settings in the Reservation details section:\nCapacity Reservation starts \u2014 Choose At a specific time.\nStart date \u2014 Specify the date and time at which the Capacity Reservation must become availble for use. For more information, see Start date and time.\nCommitment duration \u2014 Specify the minimum duration for which you commit keeping the Capacity Reservation after it has been delivered. For more information, see Commitment duration.\nCapacity Reservation ends \u2014 Choose one of the following options:\nWhen I cancel it \u2014 Reserve the capacity until you explicitly cancel it.\nSpecific time \u2014 Cancel the capacity reservation automatically at the specified date and time.\nChoose Create."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-reservations-view.html",
        "content": "Amazon EC2 constantly monitors the state of your Capacity Reservations. Updates are communicated on the Amazon EC2 console. You can view information about a Capacity Reservation using one of the following methods.\nConsole\nAWS CLI\nTo view your Capacity Reservations using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nChoose Capacity Reservations and select a Capacity Reservation to view.\nCapacity Reservations have the following possible states:\nState Description\nactive The capacity is available for use.\nexpired The Capacity Reservation expired automatically at the date and time specified in your reservation request. The reserved capacity is no longer available for your use.\ncancelled The Capacity Reservation was canceled. The reserved capacity is no longer available for your use.\npending The Capacity Reservation request was successful but the capacity provisioning is still pending.\nfailed The Capacity Reservation request has failed. A request can fail due to request parameters that are not valid, capacity constraints, or instance limit constraints. You can view a failed request for 60 minutes.\nscheduled (Future-dated Capacity Reservations only) The future-dated Capacity Reservation request was approved and the Capacity Reservation is scheduled for delivery on the requested start date.\nassessing (Future-dated Capacity Reservations only) Amazon EC2 is assessing your request for a future-dated Capacity Reservation. For more information, see Future-dated Capacity Reservation assessment.\ndelayed (Future-dated Capacity Reservations only) Amazon EC2 encountered a delay in provisioning the requested future-dated Capacity Reservation. Amazon EC2 is unable to deliver the requested capacity by the requested start date and time.\nunsupported (Future-dated Capacity Reservations only) Amazon EC2 can't support the future-dated Capacity Reservation request due to capacity constraints. You can view unsupported requests for 30 days. The Capacity Reservation will not be delivered.\nNote\nDue to the eventual consistency model followed by the Amazon EC2 APIs, after you create a Capacity Reservation, it can take up to 5 minutes for the console and the describe-capacity-reservations response to indicate that the Capacity Reservation is in the active state. During this time, the console and the describe-capacity-reservations response might indicate that the Capacity Reservation is in the pending state. However, the Capacity Reservation might already be available for use and you can attempt to launch instances into it."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-reservations-launch.html",
        "content": "You can only launch an instance into a Capacity Reservation that:\nHas matching attributes (instance type, platform, Availability Zone, and tenancy)\nHas sufficient available capacity\nIs in the active state\nWhen you launch an instance, you can specify whether to launch the instance into any open Capacity Reservation, into a specific Capacity Reservation, or into a group of Capacity Reservations.\nAlternatively, you can configure the instance to avoid running in a Capacity Reservation, even if you have an open Capacity Reservation that has matching attributes and available capacity.\nLaunching an instance into a Capacity Reservation reduces its available capacity by the number of instances launched. For example, if you launch three instances, the available capacity of the Capacity Reservation is reduced by three.\nConsole\nAWS CLI\nTo launch instances into an existing Capacity Reservation using the console\nFollow the procedure to launch an instance, but don't launch the instance until you've completed the following steps to specify the settings for the placement group and Capacity Reservation.\nExpand Advanced details and do the following:\nFor Placement group, select the cluster placement group in which to launch the instance.\nFor Capacity Reservation, choose one of the following options depending on the configuration of the Capacity Reservation:\nNone \u2013 Prevents the instances from launching into a Capacity Reservation. The instances run in On-Demand capacity.\nOpen \u2013 Launches the instances into any Capacity Reservation that has matching attributes and sufficient capacity for the number of instances you selected. If there is no matching Capacity Reservation with sufficient capacity, the instance uses On-Demand capacity.\nSpecify Capacity Reservation \u2013 Launches the instances into the selected Capacity Reservation. If the selected Capacity Reservation does not have sufficient capacity for the number of instances you selected, the instance launch fails.\nSpecify Capacity Reservation resource group \u2013 Launches the instances into any Capacity Reservation with matching attributes and available capacity in the selected Capacity Reservation group. If the selected group does not have a Capacity Reservation with matching attributes and available capacity, the instances launch into On-Demand capacity.\nSpecify Capacity Reservation only \u2013 Launches the instances into a Capacity Reservation. If a Capacity Reservation ID isn't specified, the instances launch into an open Capacity Reservation. If capacity isn't available, the instances fail to launch.\nSpecify Capacity Reservation resource group only \u2013 Launches the instances into a Capacity Reservation in a Capacity Reservation resource group. If a Capacity Reservation resource group ARN isn't specified, the instances launch into an open Capacity Reservation. If capacity isn't available, the instances fail to launch.\nIn the Summary panel, review your instance configuration, and then choose Launch instance. For more information, see Launch an EC2 instance using the launch instance wizard in the console."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-reservations-modify.html",
        "content": "If you have an existing Capacity Reservation which isn't a good fit for the workload that needs the capacity, you can modify the instance quantity, instance eligibility (open or targeted), and end time (At specific time or Manually). If you specify a new instance quantity that exceeds your remaining On-Demand Instance limit for the selected instance type, the update fails.\nThe allowed modifications depend on the state of the Capacity Reservation:\nassessing or scheduled state \u2014 You can modify the tags only.\npending state \u2014 You can't modify the Capacity Reservation in any way.\nactive state but still within the commitment duration \u2014 You can't decrease the instance count below the committed instance count, or set an end date that is before the committed duration. All other modifications are allowed.\nactive state with no commitment duration or elapsed commitment duration \u2014 All modifications are allowed.\nexpired, cancelled, unsupported, or failed state \u2014 You can't modify the Capacity Reservation in any way.\nNote\nYou can't change the instance type, platform, Availability Zone, or tenancy after creation. If you need to modify any of these attributes, we recommend that you cancel the reservation, and then create a new one with the required attributes.\nIf you modify an existing Capacity Reservation by changing the instance eligibility from targeted to open, any running instances that match the attributes of the Capacity Reservation, have the CapacityReservationPreference parameter set to open, and are not yet running in a Capacity Reservation, will automatically use the modified Capacity Reservation.\nTo change the instance eligibility, the Capacity Reservation must be completely idle (zero usage) because Amazon EC2 can't modify instance eligibility when instances are running inside the reservation.\nConsole\nAWS CLI\nTo modify a Capacity Reservation using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nChoose Capacity Reservations, select the Capacity Reservation to modify, and then choose Edit.\nModify the Total capacity, Capacity Reservation ends, or Instance eligibility options as needed, and choose Save."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-reservations-modify-instance.html",
        "content": "You can modify the following Capacity Reservation settings for a stopped instance at any time:\nStart in any Capacity Reservation that has matching attributes (instance type, platform, Availability Zone, and tenancy) and available capacity.\nStart the instance in a specific Capacity Reservation.\nStart in any Capacity Reservation that has matching attributes and available capacity in a Capacity Reservation group\nPrevent the instance from starting in a Capacity Reservation.\nConsole\nAWS CLI\nTo modify an instance's Capacity Reservation settings using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nChoose Instances and select the instance to modify. Stop the instance if it is not already stopped.\nChoose Actions, Instance settings, Modify Capacity Reservation Settings.\nFor Capacity Reservation, choose one of the following options:\nOpen \u2013 Launches the instances into any Capacity Reservation that has matching attributes and sufficient capacity for the number of instances you selected. If there is no matching Capacity Reservation with sufficient capacity, the instance uses On-Demand capacity.\nNone \u2013 Prevents the instances from launching into a Capacity Reservation. The instances run in On-Demand capacity.\nSpecify Capacity Reservation \u2013 Launches the instances into the selected Capacity Reservation. If the selected Capacity Reservation does not have sufficient capacity for the number of instances you selected, the instance launch fails.\nSpecify Capacity Reservation group \u2013 Launches the instances into any Capacity Reservation with matching attributes and available capacity in the selected Capacity Reservation group. If the selected group does not have a Capacity Reservation with matching attributes and available capacity, the instances launch into On-Demand capacity.\nSpecify Capacity Reservation only \u2013 Launches the instances into a Capacity Reservation. If a Capacity Reservation ID isn't specified, the instances launch into an open Capacity Reservation. If capacity isn't available, the instances fail to launch.\nSpecify Capacity Reservation resource group only \u2013 Launches the instances into a Capacity Reservation in a Capacity Reservation resource group. If a Capacity Reservation resource group ARN isn't specified, the instances launch into an open Capacity Reservation. If capacity isn't available, the instances fail to launch."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-reservations-move.html",
        "content": "You can move capacity from one Capacity Reservation to another to redistribute your reserved compute resources as needed. For example, if you need additional capacity in a reservation with growing usage, and you have capacity available in another reservation, then you can reallocate that capacity between the two reservations.\nPrerequisites for moving capacity\nAs a prerequisite, the two Capacity Reservations must meet the following requirements:\nBoth reservations must be in the active state.\nBoth reservations must be owned by your AWS account. You cannot move capacity between reservations owned by different AWS accounts.\nBoth reservations must have the same:\nInstance type\nPlatform\nAvailability Zone\nTenancy\nPlacement group\nEnd time\nThe destination Capacity Reservations instance eligibility (open or targeted), and tags, don't have to match the source reservation. The configuration of both reservations remains the same, except that the source reservation has reduced capacity and the destination reservation has increased capacity.\nWhen you specify the quantity of instances to be moved, by default, any available capacity is moved first, followed by any eligible running instances (the used capacity in your reservation). For example, if you move 4 instances from a reservation with 5 used instances and 3 available instances, then the 3 available instances and 1 used instance will be moved.\nNote\nWhen you move used capacity from your reservation by specifying a Quantity to move that's greater than the available capacity, only the instances that were launched with their Capacity Reservation Specification as open will be moved.\nConsiderations\nThe following considerations apply when moving capacity from one reservation to another:\nThe used capacity can only be moved between Capacity Reservations with open instance eligibility that are shared with the same set of accounts.\nWhen you move used capacity, the eligible instances are randomly selected. You cannot specify which running instances are moved. If a sufficient number of eligible instances are not found to fulfill the move quantity, the move operation will fail.\nIf you move all of the capacity from the source reservation, the Capacity Reservation will be automatically canceled.\nFuture-dated Capacity Reservations \u2014 You can't move capacity for a future-dated Capacity Reservation during the commitment period.\nNote\nMoving capacity from a Capacity Block isn't supported.\nMove capacity\nTo move capacity from a source Capacity Reservation to a destination Capacity Reservation, you can use the Amazon EC2 console or the AWS CLI.\nConsole\nAWS CLI\nTo move capacity using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigation pane, choose Capacity Reservations.\nSelect an On-Demand Capacity Reservation ID that has capacity to move.\nUnder Actions, Manage capacity, choose Move.\nOn the Move capacity page, under Destination Capacity Reservation, select a reservation from the list.\nUnder Quantity to move, use the slider or type the number of instances to move from the source Capacity Reservation to the destination Capacity Reservation.\nReview the summary, and when you're ready, choose Move."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-reservations-split.html",
        "content": "You can split off capacity from an existing Capacity Reservation to create a new reservation. By splitting capacity, you allocate a portion of the original reservation to a specific workload or share it with another AWS account. For example, to partially share a Capacity Reservation with another account, you can split off some of the capacity to create a smaller sized Capacity Reservation. The smaller sized Capacity Reservation can then be shared with the other accounts using AWS Resource Access Manager.\nWhen you split capacity from an existing Capacity Reservation, a new Capacity Reservation is automatically created. The existing reservation will be unchanged, except for the reduced total capacity from the number of instances split off. Instances that are running in the existing Capacity Reservation are not affected. You can split the existing reservation into only one new Capacity Reservation.\nThe new Capacity Reservation will have the same configuration as the existing Capacity Reservation except for tags. By default, the new Capacity Reservation doesn't have any tags. You can specify new tags during the split operation. The new Capacity Reservation can also be modified after it is created, if necessary.\nWhen you specify the quantity of instances to be split, by default, any available capacity is split first, followed by any eligible running instances (the used capacity in your reservation). For example: if you split 4 instances from a Capacity Reservation with 5 used instances and 3 available instances, then the 3 available instances and 1 used instance will be split into a new reservation.\nPrerequisites for splitting capacity\nAs a prerequisite, your Capacity Reservation must meet the following requirements:\nThe source reservation must be in the active state.\nThe source reservation must be owned by your AWS account.\nNote\nWhen you split used capacity from your reservation by specifying a Quantity to split that's greater than the available capacity, only the instances that were launched with their Capacity Reservation Specification as open will be split.\nConsiderations\nThe following considerations apply when splitting off capacity from one reservation to a new one:\nThe used capacity can only be split for Capacity Reservations with \u201copen\u201d instance eligibility that are not shared with any account.\nWhen you split the used capacity, the eligible instances are randomly selected. You cannot specify which running instances are split. If a sufficient number of eligible instances are not found to fulfill the split quantity, the split operation will fail.\nThe maximum quantity of instances to split from an existing reservation is the size of the reservation minus one. For example, if your reservation\u2019s total capacity is 5 instances, you can split a maximum of 4 instances into a new reservation.\nFuture-dated Capacity Reservations \u2013 You can't split capacity for a future-dated Capacity Reservation during the commitment period.\nResource groups \u2013 If the existing Capacity Reservation belongs to a resource group, the new Capacity Reservation will not be automatically added to the resource group. You can add the new Capacity Reservation to a resource group after it is created, if necessary.\nSharing \u2013 If the existing Capacity Reservation is shared with a consumer account, the new Capacity Reservation will not be automatically shared with the consumer account. You can share the new Capacity Reservation after it is created, if necessary.\nCluster placement group \u2013 If the existing Capacity Reservation is part of a cluster placement group, the new Capacity Reservation will be created in the same cluster placement group.\nNote\nSplitting capacity from a Capacity Block isn't supported.\nControl access for splitting Capacity Reservations using tags\nYou can use tags to control access to Amazon EC2 resources, including splitting capacity from an existing Capacity Reservation to create a new Capacity Reservation. For more information, see Controlling access to AWS resources using tags in the IAM User Guide.\nTo control access for splitting a Capacity Reservation using tags, make sure that you specify both resource and request tags in the policy statement because IAM policies are evaluated against both the source Capacity Reservation and the newly created Capacity Reservation. The following example policy includes the ec2:ResourceTag condition key with the tag Owner=ExampleDepartment1 for the source Capacity Reservation and the ec2:RequestTag condition key with the tag stack=production for the newly created Capacity Reservation.\n{\n  \"Statement\": [\n    {\n      \"Sid\": \"AllowSourceCapacityReservation\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateCapacityReservationBySplitting\",\n      \"Resource\": \"arn:aws:ec2:region:account:capacity-reservation/cr-1234567890abcdef0\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"ec2:ResourceTag/Owner\": \"ExampleDepartment1\"\n        }\n      }\n    },\n    {\n      \"Sid\": \"AllowNewlyCreatedCapacityReservation\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\"ec2:CreateCapacityReservationBySplitting\", \"ec2:CreateTags\"],\n      \"Resource\": \"arn:aws:ec2:region:account:capacity-reservation/*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"ec2:RequestTag/stack\": \"production\"\n        }\n      }\n    }\n  ]\n}\nSplit off capacity using the Amazon EC2 console or the AWS CLI\nTo split off capacity from an existing Capacity Reservation and create a new Capacity Reservation, you can use the Amazon EC2 console or the AWS CLI.\nConsole\nAWS CLI\nTo split off capacity using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigation pane, choose Capacity Reservations.\nSelect an On-Demand Capacity Reservation ID that has capacity to split.\nUnder Actions, Manage capacity, choose Split.\nOn the Split Capacity Reservation page, under Quantity to split, use the slider or type the number of instances to split from the current reservation.\n(Optional) Add tags for the new Capacity Reservation.\nReview the summary, and when you're ready, choose Split."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-reservations-release.html",
        "content": "You can cancel a Capacity Reservation that is in one of the following states:\nassessing\nactive and there is no commitment duration or the commitment duration has elapsed. You can't cancel a future-dated Capacity Reservation during the commitment duration.\nNote\nYou can't modify or cancel a Capacity Block. For more information, see Capacity Blocks for ML.\nIf a future-dated Capacity Reservation enters the delayed state, the commitment duration is waived, and you can cancel it as soon as it enters the active state.\nWhen you cancel a Capacity Reservation, the capacity is released immediately, and it is no longer reserved for your use.\nYou can cancel empty Capacity Reservations and Capacity Reservations that have running instances. If you cancel a Capacity Reservation that has running instances, the instances continue to run normally outside of the capacity reservation at standard On-Demand Instance rates or at a discounted rate if you have a matching Savings Plan or Regional Reserved Instance.\nAfter you cancel a Capacity Reservation, instances that target it can no longer launch. Modify these instances so that they either target a different Capacity Reservation, launch into any open Capacity Reservation with matching attributes and sufficient capacity, or avoid launching into a Capacity Reservation. For more information, see Modify the Capacity Reservation settings of your instance.\nConsole\nAWS CLI\nTo cancel a Capacity Reservation using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nChoose Capacity Reservations and select the Capacity Reservation to cancel.\nChoose Cancel reservation, Cancel reservation."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/create-cr-group.html",
        "content": "You can use AWS Resource Groups to create logical collections of Capacity Reservations, called resource groups. A resource group is a logical grouping of AWS resources that are all in the same AWS Region. For more information about resource groups, see What are resource groups? in the AWS Resource Groups User Guide.\nYou can include Capacity Reservations that you own in your account, and Capacity Reservations that are shared with you by other AWS accounts in a single resource group. You can also include Capacity Reservations that have different attributes (instance type, platform, Availability Zone, and tenancy) in a single resource group.\nWhen you create resource groups for Capacity Reservations, you can target instances to a group of Capacity Reservations instead of an individual Capacity Reservation. Instances that target a group of Capacity Reservations match with any Capacity Reservation in the group that has matching attributes (instance type, platform, Availability Zone, and tenancy) and available capacity. If the group does not have a Capacity Reservation with matching attributes and available capacity, the instances run using On-Demand capacity. If a matching Capacity Reservation is added to the targeted group at a later stage, the instance is automatically matched with and moved into its reserved capacity.\nTo prevent unintended use of Capacity Reservations in a group, configure the Capacity Reservations in the group to accept only instances that explicitly target the capacity reservation. To do this, set Instance eligibility to Only instances that specify this reservation when creating the Capacity Reservation using the Amazon EC2 console. When using the AWS CLI, specify --instance-match-criteria targeted when creating the Capacity Reservation. Doing this ensures that only instances that explicitly target the group, or a Capacity Reservation in the group, can run in the group.\nIf a Capacity Reservation in a group is canceled or expires while it has running instances, the instances are automatically moved to another Capacity Reservation in the group that has matching attributes and available capacity. If there are no remaining Capacity Reservations in the group that have matching attributes and available capacity, the instances run in On-Demand capacity. If a matching Capacity Reservation is added to the targeted group at a later stage, the instance is automatically moved into its reserved capacity.\nTopics\nCreate a group\nAdd Capacity Reservation to group\nRemove Capacity Reservation from group\nDelete group"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/create-group.html",
        "content": "You can use the following information to create a resource group for Capacity Reservations.\nTo create a group for Capacity Reservations\nUse the create-group AWS CLI command. For name, provide a descriptive name for the group, and for configuration, specify two Type request parameters:\nAWS::EC2::CapacityReservationPool to ensure that the resource group can be targeted for instance launches\nAWS::ResourceGroups::Generic with allowed-resource-types set to AWS::EC2::CapacityReservation to ensure that the resource group accepts Capacity Reservations only\nFor example, the following command creates a group named MyCRGroup.\naws resource-groups create-group \\\n--name MyCRGroup \\\n--configuration '{\"Type\":\"AWS::EC2::CapacityReservationPool\"}' '{\"Type\":\"AWS::ResourceGroups::Generic\", \"Parameters\": [{\"Name\": \"allowed-resource-types\", \"Values\": [\"AWS::EC2::CapacityReservation\"]}]}'\nThe following shows example output.\n{\n    \"GroupConfiguration\": {\n        \"Status\": \"UPDATE_COMPLETE\",\n        \"Configuration\": [\n            {\n                \"Type\": \"AWS::EC2::CapacityReservationPool\"\n            },\n            {\n                \"Type\": \"AWS::ResourceGroups::Generic\",\n                \"Parameters\": [\n                    {\n                        \"Values\": [\n                            \"AWS::EC2::CapacityReservation\"\n                        ],\n                        \"Name\": \"allowed-resource-types\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"Group\": {\n        \"GroupArn\": \"arn:aws:resource-groups:sa-east-1:123456789012:group/MyCRGroup\",\n        \"Name\": \"MyCRGroup\"\n    }\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/add-to-group.html",
        "content": "If you add a Capacity Reservation that is shared with you to a group, and that Capacity Reservation is unshared, it is automatically removed from the group.\nTo add a Capacity Reservation to a group\nUse the group-resources AWS CLI command. For group, specify the name of the group to which to add the Capacity Reservations, and for resources, specify ARNs of the Capacity Reservations to add. To add multiple Capacity Reservations, separate the ARNs with a space. To get the ARNs of the Capacity Reservations to add, use the describe-capacity-reservations AWS CLI command and specify the IDs of the Capacity Reservations.\nFor example, the following command adds two Capacity Reservations to a group named MyCRGroup.\naws resource-groups group-resources \\\n--group MyCRGroup \\\n--resource-arns arn:aws:ec2:sa-east-1:123456789012:capacity-reservation/cr-1234567890abcdef1 arn:aws:ec2:sa-east-1:123456789012:capacity-reservation/cr-54321abcdef567890\nThe following shows example output.\n{\n    \"Failed\": [],\n    \"Succeeded\": [\n        \"arn:aws:ec2:sa-east-1:123456789012:capacity-reservation/cr-1234567890abcdef1\",\n        \"arn:aws:ec2:sa-east-1:123456789012:capacity-reservation/cr-54321abcdef567890\"\n    ]\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/remove-from-group.html",
        "content": "To remove a Capacity Reservation from a group\nUse the ungroup-resources AWS CLI command. For group, specify the ARN of the group from which to remove the Capacity Reservation, and for resources specify the ARNs of the Capacity Reservations to remove. To remove multiple Capacity Reservations, separate the ARNs with a space.\nThe following example removes two Capacity Reservations from a group named MyCRGroup.\naws resource-groups ungroup-resources \\\n--group MyCRGroup \\\n--resource-arns arn:aws:ec2:sa-east-1:123456789012:capacity-reservation/cr-0e154d26a16094dd arn:aws:ec2:sa-east-1:123456789012:capacity-reservation/cr-54321abcdef567890\nThe following shows example output.\n{\n    \"Failed\": [],\n    \"Succeeded\": [\n        \"arn:aws:ec2:sa-east-1:123456789012:capacity-reservation/cr-0e154d26a16094dd\",\n        \"arn:aws:ec2:sa-east-1:123456789012:capacity-reservation/cr-54321abcdef567890\"\n    ]\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/delete-group.html",
        "content": "You can use the following information to delete a Capacity Reservation group.\nTo delete a group\nUse the delete-group AWS CLI command. For group, provide the name of the group to delete.\nFor example, the following command deletes a group named MyCRGroup.\naws resource-groups delete-group --group MyCRGroup\nThe following shows example output.\n{\n    \"Group\": {\n        \"GroupArn\": \"arn:aws:resource-groups:sa-east-1:123456789012:group/MyCRGroup\",\n        \"Name\": \"MyCRGroup\"\n    }\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cr-cpg.html",
        "content": "You can create Capacity Reservations in a cluster placement group to reserve Amazon EC2 compute capacity for your workloads. Cluster placement groups offer the benefit of low network latency and high network throughput.\nCreating a Capacity Reservation in a cluster placement group ensures that you have access to compute capacity in your cluster placement groups when you need it, for as long as you need it. This is ideal for reserving capacity for high-performance (HPC) workloads that require compute scaling. It allows you to scale your cluster down while ensuring that the capacity remains available for your use so that you can scale back up when needed.\nTopics\nLimitations\nWork with Capacity Reservations in cluster placement groups\nLimitations\nKeep the following in mind when creating Capacity Reservations in cluster placement groups:\nIf an existing Capacity Reservation is not in a placement group, you can't modify the Capacity Reservation to reserve capacity in a placement group. To reserve capacity in a placement group, you must create the Capacity Reservation in the placement group.\nAfter you create a Capacity Reservation in a placement group, you can't modify it to reserve capacity outside of the placement group.\nYou can increase your reserved capacity in a placement group by modifying an existing Capacity Reservation in the placement group, or by creating additional Capacity Reservations in the placement group. However, you increase your chances of getting an insufficient capacity error.\nYou can't share Capacity Reservations that have been created in a cluster placement group.\nYou can't delete a cluster placement group that has active Capacity Reservations. You must cancel all Capacity Reservations in the cluster placement group before you can delete it.\nWork with Capacity Reservations in cluster placement groups\nTo start using Capacity Reservations with cluster placement groups, perform the following steps.\nNote\nIf you want to create a Capacity Reservation in an existing cluster placement group, skip Step 1. Then for Steps 2 and 3, specify the ARN of the existing cluster placement group.\nTopics\nStep 1: (Conditional) Create a cluster placement group for use with a Capacity Reservation\nStep 2: Create a Capacity Reservation in a cluster placement group\nStep 3: Launch instances into the cluster placement group\nStep 1: (Conditional) Create a cluster placement group for use with a Capacity Reservation\nPerform this step only if you need to create a new cluster placement group. To use an existing cluster placement group, skip this step and then for Steps 2 and 3, use the ARN of that cluster placement group.\nYou can create the cluster placement group using one of the following methods.\nConsole\nAWS CLI\nTo create a cluster placement group using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Placement Groups, and then choose Create placement group.\nFor Name, specify a descriptive name for the placement group.\nFor Placement strategy, choose Cluster.\nChoose Create group.\nIn the Placement groups table, in the Group ARN column, make a note of the ARN of the cluster placement group that you created. You'll need it for the next step.\nStep 2: Create a Capacity Reservation in a cluster placement group\nYou create a Capacity Reservation in a cluster placement group in the same way that you create any Capacity Reservation. However, you must also specify the ARN of the cluster placement group in which to create the Capacity Reservation. For more information, see Create a Capacity Reservation.\nConsiderations\nThe specified cluster placement group must be in the available state. If the cluster placement group is in the pending, deleting, or deleted state, the request fails.\nThe Capacity Reservation and the cluster placement group must be in the same Availability Zone. If the request to create the Capacity Reservation specifies an Availability Zone that is different from that of the cluster placement group, the request fails.\nYou can create Capacity Reservations only for instance types that are supported by cluster placement groups. If you specify an unsupported instance type, the request fails.\nIf you create an open Capacity Reservation in a cluster placement group and there are existing running instances that have matching attributes (placement group ARN, instance type, Availability Zone, platform, and tenancy), those instances automatically run in the Capacity Reservation.\nYour request to create a Capacity Reservation could fail if one of the following is true:\nAmazon EC2 does not have sufficient capacity to fulfill the request. Either try again at a later time, try a different Availability Zone, or try a smaller capacity. If your workload is flexible across instance types and sizes, try different instance attributes.\nThe requested quantity exceeds your On-Demand Instance limit for the selected instance family. Increase your On-Demand Instance limit for the instance family and try again. For more information, see On-Demand Instance quotas.\nYou can create the Capacity Reservation in the cluster placement group using one of the following methods.\nConsole\nAWS CLI\nTo create a Capacity Reservation using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nChoose Capacity Reservations, and then choose Create Capacity Reservation.\nOn the Create a Capacity Reservation page, specify the instance type, platform, Availability Zone, Tenancy, quantity, and end date as needed.\nFor Placement group, select the ARN of the cluster placement group in which to create the Capacity Reservation.\nChoose Create.\nFor more information, see Create a Capacity Reservation.\nStep 3: Launch instances into the cluster placement group\nYou launch an instance into a Capacity Reservation in a cluster placement group in the same way that you launch an instance into any Capacity Reservation. However, you must also specify the ARN of the cluster placement group in which to launch the instance. For more information, see Create a Capacity Reservation.\nConsiderations\nIf the Capacity Reservation is open, you do not need to specify the Capacity Reservation in the instance launch request. If the instance has attributes (placement group ARN, instance type, Availability Zone, platform, and tenancy) that match a Capacity Reservation in the specified placement group, the instance automatically runs in the Capacity Reservation.\nIf the Capacity Reservation accepts only targeted instance launches, you must specify the target Capacity Reservation in addition to the cluster placement group in the request.\nIf the Capacity Reservation is in a Capacity Reservation group, you must specify the target Capacity Reservation group in addition to the cluster placement group in the request. For more information, see Capacity Reservation groups.\nYou can launch an instance into a Capacity Reservation in a cluster placement group using one of the following methods.\nConsole\nAWS CLI\nTo launch instances into an existing Capacity Reservation using the console\nFollow the procedure to launch an instance, but don't launch the instance until you've completed the following steps to specify the settings for the placement group and Capacity Reservation.\nExpand Advanced details and do the following:\nFor Placement group, select the cluster placement group in which to launch the instance.\nFor Capacity Reservation, choose one of the following options depending on the configuration of the Capacity Reservation:\nOpen \u2013 To launch the instances into any open Capacity Reservation in the cluster placement group that has matching attributes and sufficient capacity.\nTarget by ID \u2013 To launch the instances into a Capacity Reservation that accepts only targeted instance launches.\nTarget by group \u2013 To launch the instances into any Capacity Reservation with matching attributes and available capacity in the selected Capacity Reservation group.\nIn the Summary panel, review your instance configuration, and then choose Launch instance. For more information, see Launch an EC2 instance using the launch instance wizard in the console.\nFor more information, see Launch instances into an existing Capacity Reservation."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-reservations-localzones.html",
        "content": "A Local Zone is an extension of an AWS Region that is geographically close to your users. Resources created in a Local Zone can serve local users with very low-latency communications. For more information, see AWS Local Zones.\nYou can extend a VPC from its parent AWS Region into a Local Zone by creating a new subnet in that Local Zone. When you create a subnet in a Local Zone, your VPC is extended to that Local Zone. The subnet in the Local Zone operates the same as the other subnets in your VPC.\nBy using Local Zones, you can place Capacity Reservations in multiple locations that are closer to your users. You create and use Capacity Reservations in Local Zones in the same way that you create and use Capacity Reservations in regular Availability Zones. The same features and instance matching behavior apply. For more information about the pricing models that are supported in Local Zones, see AWS Local Zones FAQs.\nConsiderations\nYou can't use Capacity Reservation groups in a Local Zone.\nTo use a Capacity Reservation in a Local Zone\nEnable the Local Zone for use in your AWS account. For more information, see Getting started with AWS Local Zones in the AWS Local Zones User Guide.\nCreate a Capacity Reservation in the Local Zone. For Availability Zone, choose the Local Zone. The Local Zone is represented by an AWS Region code followed by an identifier that indicates the location, for example us-west-2-lax-1a. For more information, see Create a Capacity Reservation.\nCreate a subnet in the Local Zone. For Availability Zone, choose the Local Zone. For more information, see Create a subnet in your VPC in the Amazon VPC User Guide.\nLaunch an instance. For Subnet, choose the subnet in the Local Zone (for example subnet-123abc | us-west-2-lax-1a), and for Capacity Reservation, choose the specification (either open or target it by ID) that's required for the Capacity Reservation that you created in the Local Zone. For more information, see Launch instances into an existing Capacity Reservation."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-reservations-wavelengthzones.html",
        "content": "AWS Wavelength enables developers to build applications that deliver ultra-low latencies to mobile devices and end users. Wavelength deploys standard AWS compute and storage services to the edge of telecommunication carriers' 5G networks. You can extend an Amazon Virtual Private Cloud (VPC) to one or more Wavelength Zones. You can then use AWS resources like Amazon EC2 instances to run applications that require ultra-low latency and a connection to AWS services in the Region. For more information, see AWS Wavelength Zones.\nWhen you create On-Demand Capacity Reservations, you can choose the Wavelength Zone and you can launch instances into a Capacity Reservation in a Wavelength Zone by specifying the subnet associated with the Wavelength Zone. A Wavelength Zone is represented by an AWS Region code followed by an identifier that indicates the location, for example us-east-1-wl1-bos-wlz-1.\nWavelength Zones are not available in every Region. For information about the Regions that support Wavelength Zones, see Available Wavelength Zones in the AWS Wavelength Developer Guide.\nConsiderations\nYou can't use Capacity Reservation groups in a Wavelength Zone.\nTo use a Capacity Reservation in a Wavelength Zone\nEnable the Wavelength Zone for use in your AWS account. For more information, see Get started with AWS Wavelength in the AWS Wavelength Developer Guide.\nCreate a Capacity Reservation in the Wavelength Zone. For Availability Zone, choose the Wavelength. The Wavelength is represented by an AWS Region code followed by an identifier that indicates the location, for example us-east-1-wl1-bos-wlz-1. For more information, see Create a Capacity Reservation.\nCreate a subnet in the Wavelength Zone. For Availability Zone, choose the Wavelength Zone. For more information, see Create a subnet in your VPC in the Amazon VPC User Guide.\nLaunch an instance. For Subnet, choose the subnet in the Wavelength Zone (for example subnet-123abc | us-east-1-wl1-bos-wlz-1), and for Capacity Reservation, choose the specification (either open or target it by ID) that's required for the Capacity Reservation that you created in the Wavelength. For more information, see Launch instances into an existing Capacity Reservation."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-reservations-outposts.html",
        "content": "AWS Outposts is a fully managed service that extends AWS infrastructure, services, APIs, and tools to customer premises. By providing local access to AWS managed infrastructure, AWS Outposts enables customers to build and run applications on premises using the same programming interfaces as in AWS Regions, while using local compute and storage resources for lower latency and local data processing needs.\nAn Outpost is a pool of AWS compute and storage capacity deployed at a customer site. AWS operates, monitors, and manages this capacity as part of an AWS Region.\nYou can create Capacity Reservations on Outposts that you have created in your account. This allows you to reserve compute capacity on an Outpost at your site. You create and use Capacity Reservations on Outposts in the same way that you create and use Capacity Reservations in regular Availability Zones. The same features and instance matching behavior apply.\nYou can also share Capacity Reservations on Outposts with other AWS accounts within your organization using AWS Resource Access Manager. For more information about sharing Capacity Reservations, see Shared Capacity Reservations.\nPrerequisite\nYou must have an Outpost installed at your site. For more information, see Create an Outpost and order Outpost capacity in the AWS Outposts User Guide.\nConsiderations\nYou can't use Capacity Reservation groups on an Outpost.\nTo use a Capacity Reservation on an Outpost\nCreate a subnet on the Outpost. For more information, see Create a subnet in the AWS Outposts User Guide.\nCreate a Capacity Reservation on the Outpost.\nOpen the AWS Outposts console at https://console.aws.amazon.com/outposts/.\nIn the navigation pane, choose Outposts, and then choose Actions, Create Capacity Reservation.\nConfigure the Capacity Reservation as needed and then choose Create. For more information, see Create a Capacity Reservation.\nNote\nThe Instance Type drop-down lists only instance types that are supported by the selected Outpost, and the Availability Zone drop-down lists only the Availability Zone with which the selected Outpost is associated.\nLaunch an instance into the Capacity Reservation. For Subnet choose the subnet that you created in Step 1, and for Capacity Reservation, select the Capacity Reservation that you created in Step 2. For more information, see Launch an instance on the Outpost in the AWS Outposts User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-reservation-sharing.html",
        "content": "Capacity Reservation sharing enables Capacity Reservation owners to share their reserved capacity with other AWS accounts or within an AWS organization. This enables you to create and manage Capacity Reservations centrally, and share the reserved capacity across multiple AWS accounts or within your AWS organization.\nIn this model, the AWS account that owns the Capacity Reservation (owner) shares it with other AWS accounts (consumers). Consumers can launch instances into Capacity Reservations that are shared with them in the same way that they launch instances into Capacity Reservations that they own in their own account. The Capacity Reservation owner is responsible for managing the Capacity Reservation and the instances that they launch into it. Owners cannot modify instances that consumers launch into Capacity Reservations that they have shared. Consumers are responsible for managing the instances that they launch into Capacity Reservations shared with them. Consumers cannot view or modify instances owned by other consumers or by the Capacity Reservation owner.\nA Capacity Reservation owner can share a Capacity Reservation with:\nSpecific AWS accounts inside or outside of its AWS organization\nAn organizational unit inside its AWS organization\nIts entire AWS organization\nPrerequisites for sharing Capacity Reservations\nTo share a Capacity Reservation, you must own it in your AWS account. You cannot share a Capacity Reservation that has been shared with you.\nYou can only share Capacity Reservations for shared tenancy instances. You cannot share Capacity Reservations for dedicated tenancy instances.\nCapacity Reservation sharing is not available to new AWS accounts or AWS accounts that have a limited billing history.\nTo share a Capacity Reservation with your AWS organization or an organizational unit in your AWS organization, you must enable sharing with AWS Organizations. For more information, see Enable Sharing with AWS Organizations in the AWS RAM User Guide.\nRelated services\nCapacity Reservation sharing integrates with AWS Resource Access Manager (AWS RAM). AWS RAM is a service that enables you to share your AWS resources with any AWS account or through AWS Organizations. With AWS RAM, you share resources that you own by creating a resource share. A resource share specifies the resources to share, and the consumers with whom to share them. Consumers can be individual AWS accounts, or organizational units or an entire organization from AWS Organizations.\nFor more information about AWS RAM, see the AWS RAM User Guide.\nShare across Availability Zones\nTo ensure that resources are distributed across the Availability Zones for a Region, we independently map Availability Zones to names for each account. This could lead to Availability Zone naming differences across accounts. For example, the Availability Zone us-east-1a for your AWS account might not have the same location as us-east-1a for another AWS account.\nTo identify the location of your Capacity Reservations relative to your accounts, you must use the Availability Zone ID (AZ ID). The AZ ID is a unique and consistent identifier for an Availability Zone across all AWS accounts. For example, use1-az1 is an AZ ID for the us-east-1 Region and it is the same location in every AWS account.\nTo view the AZ IDs for the Availability Zones in your account\nOpen the AWS RAM console at https://console.aws.amazon.com/ram.\nThe AZ IDs for the current Region are displayed in the Your AZ ID panel on the right-hand side of the screen.\nShared Capacity Reservation permissions\nPermissions for owners\nOwners are responsible for managing and canceling their shared Capacity Reservations. Owners cannot modify instances running in the shared Capacity Reservation that are owned by other accounts. Owners remain responsible for managing instances that they launch into the shared Capacity Reservation.\nPermissions for consumers\nConsumers are responsible for managing their instances that are running the shared Capacity Reservation. Consumers cannot modify the shared Capacity Reservation in any way, and they cannot view or modify instances that are owned by other consumers or the Capacity Reservation owner.\nBilling and metering\nThere are no additional charges for sharing Capacity Reservations.\nBy default, the Capacity Reservation owner is billed for instances that they run inside the Capacity Reservation and for unused reserved capacity, while consumers are billed for the instances that they run inside the shared Capacity Reservation. However, you can assign billing of the available capacity of a shared Capacity Reservation to a specific consumer account. For more information, see Billing assignment for shared Amazon EC2 Capacity Reservations.\nIf the Capacity Reservation owner belongs to a different payer account and the Capacity Reservation is covered by a Regional Reserved Instance or a Savings Plan, the Capacity Reservation owner continues to be billed for the Regional Reserved Instance or Savings Plan. In these cases, the Capacity Reservation owner pays for the Regional Reserved Instance or Savings Plan, and consumers are billed for the instances that the run in the shared Capacity Reservation.\nInstance limits\nAll Capacity Reservation usage counts toward the Capacity Reservation owner's On-Demand Instance limits. This includes:\nUnused reserved capacity\nUsage by instances owned by the Capacity Reservation owner\nUsage by instances owned by consumers\nInstances launched into the shared capacity by consumers count towards the Capacity Reservation owner's On-Demand Instance limit. Consumers' instance limits are a sum of their own On-Demand Instance limits and the capacity available in the shared Capacity Reservations to which they have access."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/sharing-cr.html",
        "content": "When you share a Capacity Reservation that you own with other AWS accounts, you enable them to launch instances into your reserved capacity. If you share an open Capacity Reservation, keep the following in mind as it could lead to unintended Capacity Reservation usage:\nIf consumers have running instances that match the attributes of the Capacity Reservation, have the CapacityReservationPreference parameter set to open, and are not yet running in reserved capacity, they automatically use the shared Capacity Reservation.\nIf consumers launch instances that have matching attributes (instance type, platform, Availability Zone, and tenancy) and have the CapacityReservationPreference parameter set to open, they automatically launch into the shared Capacity Reservation.\nTo share a Capacity Reservation, you must add it to a resource share. A resource share is an AWS RAM resource that lets you share your resources across AWS accounts. A resource share specifies the resources to share, and the consumers with whom they are shared. When you share a Capacity Reservation using the Amazon EC2 console, you add it to an existing resource share. To add the Capacity Reservation to a new resource share, you must create the resource share using the AWS RAM console.\nIf you are part of an organization in AWS Organizations and sharing within your organization is enabled, consumers in your organization are granted access to the shared Capacity Reservation if the prequisites for sharing are met. If the Capacity Reservation is shared with external accounts, they receive an invitation to join the resource share and are granted access to the shared Capacity Reservation after accepting the invitation.\nImportant\nBefore launching instances into a Capacity Reservation that is shared with you, verify that you have access to the shared Capacity Reservation by viewing it in the console or by describing it using the describe-capacity-reservations AWS CLI command. If you can view the shared Capacity Reservation in the console or describe it using the AWS CLI, it is available for your use and you can launch instances into it. If you attempt to launch instances into the Capacity Reservation and it is not accessible due to a sharing failure, the instances will launch into On-Demand capacity.\nYou can share a Capacity Reservation that you own using the Amazon EC2 console, AWS RAM console, or the AWS CLI.\nAmazon EC2 console\nAWS RAM console\nAWS CLI\nTo share a Capacity Reservation that you own using the Amazon EC2 console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Capacity Reservations.\nChoose the Capacity Reservation to share and choose Actions, Share reservation.\nSelect the resource share to which to add the Capacity Reservation and choose Share Capacity Reservation.\nIt could take a few minutes for consumers to get access to the shared Capacity Reservation."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/unsharing-cr.html",
        "content": "The Capacity Reservation owner can stop sharing a Capacity Reservation at any time. The following rules apply:\nInstances owned by consumers that were running in the shared capacity at the time sharing stops continue to run normally outside of the reserved capacity, and the capacity is restored to the Capacity Reservation subject to Amazon EC2 capacity availability.\nConsumers with whom the Capacity Reservation was shared can no longer launch new instances into the reserved capacity.\nTo stop sharing a Capacity Reservation that you own, you must remove it from the resource share. You can do this using the Amazon EC2 console, AWS RAM console, or the AWS CLI.\nAmazon EC2 console\nAWS RAM console\nAWS CLI\nTo stop sharing a Capacity Reservation that you own using the Amazon EC2 console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Capacity Reservations.\nSelect the Capacity Reservation and choose the Sharing tab.\nThe Sharing tab lists the resource shares to which the Capacity Reservation has been added. Select the resource share from which to remove the Capacity Reservation and choose Remove from resource share."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/assign-billing.html",
        "content": "By default, when a Capacity Reservation is shared, the owner is billed for the instances they run in the Capacity Reservation and for any available capacity, also called unused capacity, in the Capacity Reservation; while consumers are billed only for the instances they run in the shared Capacity Reservation.\nIf needed, the Capacity Reservation owner can assign the billing of any available capacity in the Capacity Reservation to any one of the accounts with which the Capacity Reservation is shared. After billing is assigned to another account, that account becomes the billing owner of any available capacity in the Capacity Reservation. Any charges for available capacity in the Capacity Reservation, from that point onward, are billed to the assigned account instead of the owner's account. The Capacity Reservation owner and the accounts with which the Capacity Reservation is shared continue to be billed for the instances they run in the Capacity Reservation.\nImportant\nThe Capacity Reservation owner remains the resource owner and they remain responsible for managing the Capacity Reservation. The account to which billing is assigned does not get any additional privileges; they can't cancel, modify, or share the Capacity Reservation in any way.\nTopics\nHow it works\nConsiderations\nAssign billing\nView billing assignment requests\nAccept or reject billing\nCancel or revoke requests\nMonitor requests\nHow it works\nOnly the Capacity Reservation owner can assign billing of a shared Capacity Reservation to another account. Billing can be assigned only to an account with which the Capacity Reservation is shared and that is consolidated under the same AWS Organizations payer account as the Capacity Reservation owner.\nTo assign billing of the available capacity of a Capacity Reservation to another account, the Capacity Reservation owner must initiate a request to the required account. The specified account receives the request and they must either accept or reject it within 12 hours.\nIf they accept, they become the billing owner of any available capacity, also called unused capacity, in the Capacity Reservation. From that point onward, charges for any available capacity in the Capacity Reservation are billed to their account instead of the owner's account. Once accepted, only the Capacity Reservation owner can revoke billing from the assigned account.\nIf they reject, the Capacity Reservation owner remains the billing owner of the available capacity in the Capacity Reservation. Charges for any available capacity in the Capacity Reservation continue to be billed to the owner's account.\nIf they do not accept or reject the request within 12 hours, it expires and charges for any available capacity in the Capacity Reservation continue to be billed to owner's account.\nFor the period that billing is assigned to another account, the Reservation and UnusedBox line items appear in the assigned account's Cost and Usage Report (CUR) instead of the owner's CUR.\nThe following table shows which line items appear in the CUR for the Capacity Reservation owner and consumer accounts before billing is assigned to another account.\nAccount CUR line items before billing is assigned\nCapacity Reservation owner\nReservation\nBoxUsage *\nUnusedBox\nConsumer accounts with which the Capacity Reservation is shared\nBoxUsage *\nThe following table shows which line items appear in the CUR for the Capacity Reservation owner and consumer accounts after billing is assigned to another account.\nAccount CUR line items after billing is assigned\nCapacity Reservation owner\nBoxUsage *\nConsumer account to which billing is assigned\nReservation\nBoxUsage *\nUnusedBox\nOther consumer accounts with which the Capacity Reservation is shared\nBoxUsage *\nNote\n* The BoxUsage line item appears in an account's CUR only if they have running instances in the Capacity Reservation. For more information about the CUR line items, see Monitoring Capacity Reservations.\nUse the Capacity Reservation ARN in the CUR to determine who owns the Capacity Reservation. If the ARN includes your AWS account ID, you are the Capacity Reservation owner. Otherwise, the Capacity Reservation is owned by a different account but billing is assigned to you.\nCost allocation tags assigned to Capacity Reservation by the owner will not appear in the consumer account's CUR. Cost allocation tags appear in the Capacity Reservation owner's CUR only.\nConsiderations\nKeep the following in mind when assigning billing of a shared Capacity Reservation:\nYou can't do partial or split billing assignments. Billing of all available capacity of a Capacity Reservation can be assigned to one account at a time.\nThe available capacity of a Capacity Reservation can change over time. This will impact billing for the assigned account. For example, available capacity can increase if the Capacity Reservation owner increases the size of the Capacity Reservation, or if other consumer accounts stop or terminate their instances running in the Capacity Reservation.\nBilling can be assigned only to a consumer account that is consolidated under the same AWS Organizations payer account. Billing is automatically revoked from the consumer account if they leave the organization, or if the Capacity Reservation is no longer shared with them.\nOnly the Capacity Reservation owner can cancel a pending billing assignment request and revoke billing from an assigned account after the request has been accepted."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/request-billing-transfer.html",
        "content": "To assign billing of the available capacity of a shared Capacity Reservation to another account, the Capacity Reservation owner must initiate a request to the required account. In the Amazon EC2 console, this request is called a transfer request.\nA Capacity Reservation owner can assign billing of the available capacity of Capacity Reservation to an account only if:\nThe Capacity Reservation is already shared with that account.\nThe account is consolidated under the same AWS Organizations payer account as the Capacity Reservation owner.\nBilling is assigned to the specified account only once they accept the request.\nNote\nWhen a Capacity Reservation owner initiates a request, an Amazon EventBridge event is sent to the requested account. For more information, see Monitor billing assignment requests for shared Capacity Reservations.\nUse one of the following methods to initiate a request.\nConsole\nAWS CLI\nTo assign billing of a shared Capacity Reservation\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation panel, select Capacity Reservations and then choose the shared Capacity Reservation.\nIn the Billing of available capacity section, choose Assign billing.\nIn the Assign billing screen, select the consumer account to which to assign billing, and then choose Request."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/view-billing-transfers.html",
        "content": "A Capacity Reservation owner can view only the most recent billing assignment request that they initiated. And consumer accounts can view only the most recent billing assignment requests sent to them.\nNote\nRequests can be viewed for 24 hours after they enter the cancelled, expired, or revoked state. After 24 hours, they no longer appear in the console or in AWS CLI, API, or SDK responses.\nUse one of the following methods to view billing assignment requests.\nConsole\nAWS CLI\n(Capacity Reservation owner) To view requests you initiated\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation panel, select Capacity Reservations and then choose the shared Capacity Reservation for which to view requests.\nThe Billing of available capacity section shows the most recent request and its current state.\n(Consumer account) To requests sent to you\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation panel, select Capacity Reservations.\nIf you have pending requests, the Pending billing assignment requests banner appears at the top of the screen. If the banner does not appear, you do not have pending requests.\nTo view the requests, choose Review requests in the banner.\nA request can be in one of the following states:\nState Description\npending The request has not been accepted or rejected, but it has not yet expired.\naccepted The request was accepted by the specified account. Billing of available capacity of the Capacity Reservation is assigned to the consumer account.\nrejected The request was rejected by the consumer account.\ncancelled The request was cancelled by the Capacity Reservation owner while it was in the pending state.\nrevoked Billing was revoked from the consumer account for one of the following reasons:\nIt was explicitly revoked by the Capacity Reservation owner.\nThe Capacity Reservation is no longer shared with the consumer account.\nThe consumer account is no longer part of the AWS organization.\nexpired The request expired because the consumer account did not accept or reject it within 12 hours."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/accept-decline-billing-transfer.html",
        "content": "If you receive a billing assignment request for a Capacity Reservation that is shared with you, you can either accept or reject it. The request remains in the pending state until it is accepted or rejected.\nIf you accept the request, it enters the accepted state, and billing of any available, or unused, capacity of that Capacity Reservation is assigned to your account from that point onward. After you accept a request, only the Capacity Reservation owner can revoke billing from your account.\nIf you reject the request, it enters the rejected state, and billing of the available capacity of the Capacity Reservation remains assigned to the Capacity Reservation owner.\nRequests expire if they are not accepted or rejected within 12 hours. If a request expires, billing of any unused capacity of the Capacity Reservation remains assigned to the Capacity Reservation owner.\nNote\nWhen a request is accepted or rejected, an Amazon EventBridge event is sent to the Capacity Reservation owner's account. When a request expires, an Amazon EventBridge event is sent to the Capacity Reservation owner and the consumer account. For more information, see Monitor billing assignment requests for shared Capacity Reservations.\nUse one of the following methods to accept or reject a request.\nConsole\nAWS CLI\nTo accept or reject a request\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation panel, select Capacity Reservations.\nIf you have pending requests, the Pending billing assignment requests banner appears at the top of the screen. If the banner does not appear, you do not have pending requests.\nTo view the requests, choose Review requests in the banner.\nSelect the request to accept or reject, and then choose either Accept or Reject."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cancel-billing-transfer.html",
        "content": "Only the Capacity Reservation owner can cancel a pending billing assignment request. If a pending request is cancelled, it enters the cancelled state and billing of any available, or unused, capacity of the Capacity Reservation remains assigned to Capacity Reservation owner.\nOnce a request is accepted, only the Capacity Reservation owner can revoke billing from the assigned account. If billing is revoked, the request enters the revoked state and billing of any available capacity of the Capacity Reservation is reassigned to Capacity Reservation owner.\nNote\nWhen a request is cancelled or revoked, Amazon EventBridge events are sent to the Capacity Reservation owner and specified consumer account. For more information, see Monitor billing assignment requests for shared Capacity Reservations.\nUse one of the following methods to cancel a pending request or to revoke an accepted request.\nConsole\nAWS CLI\nTo cancel or revoke a request\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation panel, select Capacity Reservations and then choose the Capacity Reservation for which to cancel or revoke the request.\nIn the Billing of available capacity section, choose Cancel transfer or Revoke transfer, depending on the current state of the request."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-ownership-events.html",
        "content": "Amazon EC2 sends Amazon EventBridge events when the state of a billing assignment request changes.\nEvents are sent to the Capacity Reservation owner when a request enters the following states: accepted | rejected | expired | revoked.\nEvents are sent to the requested consumer account when a request enters the following states: pending | expired | cancelled | revoked.\nFor more information about Amazon EventBridge, see the Amazon EventBridge User Guide.\nThe following is the Amazon EventBridge event pattern.\n{\n   \"version\":\"0\",\n   \"id\":\"12345678-1234-1234-1234-123456789012\",\n   \"detail-type\":\"On-Demand Capacity Reservation Billing Ownership Request pending|accepted|rejected|cancelled|revoked|expired\",\n   \"source\":\"aws.ec2\",\n   \"account\":\"account_id\",\n   \"time\":\"state_change_timestamp\",\n   \"region\":\"region\",\n   \"resources\":[\n      \"arn:aws:ec2:region:cr_owner_account_id:capacity-reservation/cr_id\"\n   ],\n   \"detail\":{\n      \"capacity-reservation-id\":\"cr_id\",\n      \"requestedByYou\":true|false,\n      \"ownerAccountId\":\"cr_owner_account_id\",\n      \"unusedReservationChargesOwnerID\":\"consumer_account_id\",\n      \"BillingTransferRequestStatus\":\"pending|accepted|rejected|cancelled|revoked|expired\",\n   }\n}\nThe following is an exmaple of an event that is sent to the Capacity Reservation owner (222222222222) when a consumer account (111111111111) accepts a billing assignment request for a shared Capacity Reservation (cr-01234567890abcdef).\n{\n   \"version\":\"0\",\n   \"id\":\"12345678-1234-1234-1234-123456789012\",\n   \"detail-type\":\"On-Demand Capacity Reservation Billing Ownership Request accepted\",\n   \"source\":\"aws.ec2\",\n   \"account\":\"222222222222\",\n   \"time\":\"2024-09-01Thh:59:59Z\",\n   \"region\":\"us-east-1\",\n   \"resources\":[\n      \"arn:aws:ec2:us-east-1:222222222222:capacity-reservation/cr-01234567890abcdef\"\n   ],\n   \"detail\":{\n      \"capacity-reservation-id\":\"cr-01234567890abcdef\",\n      \"requestedByYou\":true,\n      \"ownerAccountId\":\"222222222222\",\n      \"unusedReservationChargesOwnerID\":\"111111111111\",\n      \"BillingTransferRequestStatus\":\"accepted\",\n   }\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cr-fleets.html",
        "content": "An On-Demand Capacity Reservation Fleet is a group of Capacity Reservations.\nA Capacity Reservation Fleet request contains all of the configuration information that's needed to launch a Capacity Reservation Fleet. Using a single request, you can reserve large amounts of Amazon EC2 capacity for your workload across multiple instance types, up to a target capacity that you specify.\nAfter you create a Capacity Reservation Fleet, you can manage the Capacity Reservations in the fleet collectively by modifying or canceling the Capacity Reservation Fleet.\nTopics\nHow Capacity Reservation Fleets work\nConsiderations\nPricing\nConcepts and planning\nCreate\nView\nModify\nCancel\nExample configurations\nUsing service-linked roles\nHow Capacity Reservation Fleets work\nWhen you create a Capacity Reservation Fleet, the Fleet attempts to create individual Capacity Reservations to meet the total target capacity that you specified in the Fleet request.\nThe number of instances for which the Fleet reserves capacity depends on the total target capacity and the instance type weights that you specify. The instance type for which it reserves capacity depends on the allocation strategy and instance type priorities that you use.\nIf there is insufficient capacity at the time the Fleet is created, and it is unable to immediately meet its total target capacity, the Fleet asynchronously attempts to create Capacity Reservations until it has reserved the requested amount of capacity.\nWhen the Fleet reaches its total target capacity, it attempts to maintain that capacity. If a Capacity Reservation in the Fleet is cancelled, the Fleet automatically creates one or more Capacity Reservations, depending on your Fleet configuration, to replace the lost capacity and to maintain its total target capacity.\nThe Capacity Reservations in the Fleet can't be managed individually. They must be managed collectively by modifying the Fleet. When you modify a Fleet, the Capacity Reservations in the Fleet are automatically updated to reflect the changes.\nCurrently, Capacity Reservation Fleets support the open instance matching criteria, and all Capacity Reservations launched by a Fleet automatically use this instance matching criteria. With this criteria, new instances and existing instances that have matching attributes (instance type, platform, Availability Zone, and tenancy) automatically run in the Capacity Reservations created by a Fleet. Capacity Reservation Fleets do not support target instance matching criteria.\nConsiderations\nKeep the following in mind when working with Capacity Reservation Fleets:\nA Capacity Reservation Fleet can be created, modified, viewed, and cancelled using the AWS CLI and AWS API.\nThe Capacity Reservations in a Fleet can't be managed individually. They must be managed collectively by modifying or cancelling the Fleet.\nA Capacity Reservation Fleet can't span across Regions.\nA Capacity Reservation Fleet can't span across Availability Zones.\nCapacity Reservations created by a Capacity Reservation Fleet are automatically tagged with the following AWS generated tag:\nKey \u2014 aws:ec2-capacity-reservation-fleet\nValue \u2014 fleet_id\nYou can use this tag to identify Capacity Reservations that were created by a Capacity Reservation Fleet.\nPricing\nThere are no additional charges for using Capacity Reservation Fleets. You are billed for the individual Capacity Reservations that are created by your Capacity Reservation Fleets. For more information about how Capacity Reservations are billed, see Capacity Reservation pricing and billing."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-concepts.html",
        "content": "The following information describes how to plan a Capacity Reservation Fleet and describes Capacity Reservation Fleet concepts including total target capacity, allocation strategy, instance type weight, and instance type priority.\nTopics\nPlan a Capacity Reservation Fleet\nTotal target capacity\nAllocation strategy\nInstance type weight\nInstance type priority\nPlan a Capacity Reservation Fleet\nWhen planning your Capacity Reservation Fleet, we recommend that you do the following:\nDetermine the amount of compute capacity that is needed by your workload.\nDecide on the instance types and Availability Zones that you want to use.\nAssign each instance type a priority based on your needs and preferences. For more information, see Instance type priority.\nCreate a capacity weighting system that makes sense for your workload. Assign a weight to each instance type and determine your total target capacity. For more information, see Instance type weight and Total target capacity.\nDetermine whether you need the Capacity Reservation indefinitely or only for a specific period of time.\nTotal target capacity\nThe total target capacity defines the total amount of compute capacity that the Capacity Reservation Fleet reserves. You specify the total target capacity when you create the Capacity Reservation Fleet. After the Fleet has been created, Amazon EC2 automatically creates Capacity Reservations to reserve capacity up to the total target capacity.\nThe number of instances for which the Capacity Reservation Fleet reserves capacity is determined by the total target capacity and the instance type weight that you specify for each instance type in the Capacity Reservation Fleet (total target capacity/instance type weight=number of instances).\nYou can assign a total target capacity based on units that are meaningful to your workload. For example, if your workload requires a certain number of vCPUs, you can assign the total target capacity based on the number of vCPUs required. If your workload requires 2048 vCPUs, specify a total target capacity of 2048 and then assign instance type weights based on the number of vCPUs provided by the instance types in the Fleet. For an example, see Instance type weight.\nAllocation strategy\nThe allocation strategy for your Capacity Reservation Fleet determines how it fulfills your request for reserved capacity from the instance type specifications in the Capacity Reservation Fleet configuration.\nCurrently, only the prioritized allocation strategy is supported. With this strategy, the Capacity Reservation Fleet creates Capacity Reservations using the priorities that you have assigned to each of the instance type specifications in the Capacity Reservation Fleet configuration. Lower priority values indicate higher priority for use. For example, say you create a Capacity Reservation Fleet that uses the following instance types and priorities:\nm4.16xlarge \u2014 priority = 1\nm5.16xlarge \u2014 priority = 3\nm5.24xlarge \u2014 priority = 2\nThe Fleet first attempts to create Capacity Reservations for m4.16xlarge. If Amazon EC2 has insufficient m4.16xlarge capacity, the Fleet attempts to create Capacity Reservations for m5.24xlarge. If Amazon EC2 has insufficient m5.24xlarge capacity, the Fleet creates Capacity Reservations for m5.16xlarge.\nInstance type weight\nThe instance type weight is a weight that you assign to each instance type in the Capacity Reservation Fleet. The weight determines how many units of capacity each instance of that specific instance type counts toward the Fleet's total target capacity.\nYou can assign weights based on units that are meaningful to your workload. For example, if your workload requires a certain number of vCPUs, you can assign weights based on the number of vCPUs provided by each instance type in the Capacity Reservation Fleet. In this case, if you create a Capacity Reservation Fleet using m4.16xlarge and m5.24xlarge instances, you would assign weights that correspond to the number of vCPUs for each instance as follows:\nm4.16xlarge \u2014 64 vCPUs, weight = 64 units\nm5.24xlarge \u2014 96 vCPUs, weight = 96 units\nThe instance type weight determines the number of instances for which the Capacity Reservation Fleet reserves capacity. For example, if a Capacity Reservation Fleet with a total target capacity of 384 units uses the instance types and weights in the preceding example, the Fleet could reserve capacity for 6 m4.16xlarge instances (384 total target capacity/64 instance type weight=6 instances), or 4 m5.24xlarge instances (384 / 96 = 4).\nIf you do not assign instance type weights, or if you assign an instance type weight of 1, the total target capacity is based purely on instance count. For example, if a Capacity Reservation Fleet with a total target capacity of 384 units uses the instance types in the preceding example, but omits the weights or specifies a weight of 1 for both instance types, the Fleet could reserve capacity for either 384 m4.16xlarge instances or 384 m5.24xlarge instances.\nInstance type priority\nThe instance type priority is a value that you assign to the instance types in the Fleet. The priorities are used to determine which of the instance types specified for the Fleet should be prioritized for use.\nLower priority values indicate a higher priority for use."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/create-crfleet.html",
        "content": "When you create a Capacity Reservation Fleet it automatically creates Capacity Reservations for the instance types specified in the Fleet request, up to the specified total target capacity. The number of instances for which the Capacity Reservation Fleet reserves capacity depends on the total target capacity and instance type weights that you specify in the request. For more information, see Instance type weight and Total target capacity.\nWhen you create the Fleet, you must specify the instance types to use and a priority for each of those instance types. For more information, see Allocation strategy and Instance type priority.\nNote\nThe AWSServiceRoleForEC2CapacityReservationFleet service-linked role is automatically created in your account the first time that you create a Capacity Reservation Fleet. For more information, see Using service-linked roles for Capacity Reservation Fleet.\nCurrently, Capacity Reservation Fleets support the open instance matching criteria only.\nTo create a Capacity Reservation Fleet\nUse the create-capacity-reservation-fleet AWS CLI command.\naws ec2 create-capacity-reservation-fleet \\\n--total-target-capacity capacity_units \\\n--allocation-strategy prioritized \\\n--instance-match-criteria open \\\n--tenancy dedicated|default \\\n--end-date yyyy-mm-ddThh:mm:ss.000Z \\\n--instance-type-specifications file://instanceTypeSpecification.json\nThe following is the contents of instanceTypeSpecification.json.\n[\n    {             \n        \"InstanceType\": \"instance_type\",                        \n        \"InstancePlatform\":\"platform\",            \n        \"Weight\": instance_type_weight,\n        \"AvailabilityZone\":\"availability_zone\",\n        \"AvailabilityZoneId\" : \"az_id\",             \n        \"EbsOptimized\": true|false,            \n        \"Priority\" : instance_type_priority\n    }\n]\nExpected output.\n{\n    \"Status\": \"status\", \n    \"TotalFulfilledCapacity\": fulfilled_capacity, \n    \"CapacityReservationFleetId\": \"cr_fleet_id\", \n    \"TotalTargetCapacity\": capacity_units\n}\nExample\naws ec2 create-capacity-reservation-fleet \\\n--total-target-capacity 24 \\\n--allocation-strategy prioritized \\\n--instance-match-criteria open \\\n--tenancy default \\\n--end-date 2021-12-31T23:59:59.000Z \\\n--instance-type-specifications file://instanceTypeSpecification.json\ninstanceTypeSpecification.json\n[\n  {\n    \"InstanceType\": \"m5.xlarge\",\n    \"InstancePlatform\": \"Linux/UNIX\",\n    \"Weight\": 3.0,\n    \"AvailabilityZone\":\"us-east-1a\",\n    \"EbsOptimized\": true,\n    \"Priority\" : 1\n  }\n]\nExample output.\n{\n    \"Status\": \"submitted\", \n    \"TotalFulfilledCapacity\": 0.0, \n    \"CapacityReservationFleetId\": \"crf-abcdef01234567890\", \n    \"TotalTargetCapacity\": 24\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/view-crfleet.html",
        "content": "You can view configuration and capacity information for a Capacity Reservation Fleet at any time. Viewing a Fleet also provides details about the individual Capacity Reservations that are inside the Fleet.\nTo view a Capacity Reservation Fleet\nUse the describe-capacity-reservation-fleets AWS CLI command.\naws ec2 describe-capacity-reservation-fleets \\\n--capacity-reservation-fleet-ids cr_fleet_ids\nThe following is example output.\n{\n    \"CapacityReservationFleets\": [\n        {\n            \"Status\": \"status\", \n            \"EndDate\": \"yyyy-mm-ddThh:mm:ss.000Z\", \n            \"InstanceMatchCriteria\": \"open\", \n            \"Tags\": [], \n            \"CapacityReservationFleetId\": \"cr_fleet_id\", \n            \"Tenancy\": \"dedicated|default\", \n            \"InstanceTypeSpecifications\": [\n                {\n                    \"CapacityReservationId\": \"cr1_id\", \n                    \"AvailabilityZone\": \"cr1_availability_zone\", \n                    \"FulfilledCapacity\": cr1_used_capacity, \n                    \"Weight\": cr1_instance_type_weight, \n                    \"CreateDate\": \"yyyy-mm-ddThh:mm:ss.000Z\", \n                    \"InstancePlatform\": \"cr1_platform\", \n                    \"TotalInstanceCount\": cr1_number of instances, \n                    \"Priority\": cr1_instance_type_priority, \n                    \"EbsOptimized\": true|false, \n                    \"InstanceType\": \"cr1_instance_type\"\n                },\n    {\n                    \"CapacityReservationId\": \"cr2_id\", \n                    \"AvailabilityZone\": \"cr2_availability_zone\", \n                    \"FulfilledCapacity\": cr2_used_capacity, \n                    \"Weight\": cr2_instance_type_weight, \n                    \"CreateDate\": \"yyyy-mm-ddThh:mm:ss.000Z\", \n                    \"InstancePlatform\": \"cr2_platform\", \n                    \"TotalInstanceCount\": cr2_number of instances, \n                    \"Priority\": cr2_instance_type_priority, \n                    \"EbsOptimized\": true|false, \n                    \"InstanceType\": \"cr2_instance_type\"\n                },\n            ], \n            \"TotalTargetCapacity\": total_target_capacity, \n            \"TotalFulfilledCapacity\": total_target_capacity, \n            \"CreateTime\": \"yyyy-mm-ddThh:mm:ss.000Z\", \n            \"AllocationStrategy\": \"prioritized\"\n        }\n    ]\n}\nExample\naws ec2 describe-capacity-reservation-fleets \\\n--capacity-reservation-fleet-ids crf-abcdef01234567890\nThe following is example output.\n{\n    \"CapacityReservationFleets\": [\n        {\n            \"Status\": \"active\", \n            \"EndDate\": \"2021-12-31T23:59:59.000Z\", \n            \"InstanceMatchCriteria\": \"open\", \n            \"Tags\": [], \n            \"CapacityReservationFleetId\": \"crf-abcdef01234567890\", \n            \"Tenancy\": \"default\", \n            \"InstanceTypeSpecifications\": [\n                {\n                    \"CapacityReservationId\": \"cr-1234567890abcdef0\", \n                    \"AvailabilityZone\": \"us-east-1a\", \n                    \"FulfilledCapacity\": 5.0, \n                    \"Weight\": 1.0, \n                    \"CreateDate\": \"2021-07-02T08:34:33.398Z\", \n                    \"InstancePlatform\": \"Linux/UNIX\", \n                    \"TotalInstanceCount\": 5, \n                    \"Priority\": 1, \n                    \"EbsOptimized\": true, \n                    \"InstanceType\": \"m5.xlarge\"\n                }\n            ], \n            \"TotalTargetCapacity\": 5, \n            \"TotalFulfilledCapacity\": 5.0, \n            \"CreateTime\": \"2021-07-02T08:34:33.397Z\", \n            \"AllocationStrategy\": \"prioritized\"\n        }\n    ]\n}\nCapacity Reservation Fleet states\nA Capacity Reservation Fleet can be in one of the following states:\nsubmitted \u2014 The Capacity Reservation Fleet request has been submitted and Amazon EC2 is preparing to create the Capacity Reservations.\nmodifying \u2014 The Capacity Reservation Fleet is being modified. The Fleet remains in this state until the modification is complete.\nactive \u2014 The Capacity Reservation Fleet has fulfilled its total target capacity and it is attempting to maintain this capacity. The Fleet remains in this state until it is modified or deleted.\npartially_fulfilled \u2014 The Capacity Reservation Fleet has partially fulfilled its total target capacity. There is insufficient Amazon EC2 capacity to fulfill the total target capacity. The Fleet is attempting to asynchronously fulfill its total target capacity.\nexpiring \u2014 The Capacity Reservation Fleet has reached its end date and it is in the process of expiring. One or more of its Capacity Reservations might still be active.\nexpired \u2014 The Capacity Reservation Fleet has reached its end date. The Fleet and its Capacity Reservations are expired. The Fleet can't create new Capacity Reservations.\ncancelling \u2014 The Capacity Reservation Fleet is in the process of being cancelled. One or more of its Capacity Reservations might still be active.\ncancelled \u2014 The Capacity Reservation Fleet has been manually cancelled. The Fleet and its Capacity Reservations are cancelled and the Fleet can't create new Capacity Reservations.\nfailed \u2014 The Capacity Reservation Fleet failed to reserve capacity for the specified instance types."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/modify-crfleet.html",
        "content": "You can modify the total target capacity and date of a Capacity Reservation Fleet at any time. When you modify the total target capacity of a Capacity Reservation Fleet, the Fleet automatically creates new Capacity Reservations, or modifies or cancels existing Capacity Reservations in the Fleet to meet the new total target capacity. When you modify the end date for the Fleet, the end dates for all of the individual Capacity Reservations are updated accordingly.\nAfter you modify a Fleet, its status transitions to modifying. You can't attempt additional modifications to a Fleet while it is in the modifying state.\nYou can't modify the tenancy, Availability Zone, instance types, instance platforms, priorities, or weights used by a Capacity Reservation Fleet. If you need to change any of these parameters, you might need to cancel the existing Fleet and create a new one with the required parameters.\nTo modify a Capacity Reservation Fleet\nUse the modify-capacity-reservation-fleet AWS CLI command.\nNote\nYou can't specify --end-date and --remove-end-date in the same command.\naws ec2 modify-capacity-reservation-fleet \\\n--capacity-reservation-fleet-id cr_fleet_ids \\\n--total-target-capacity capacity_units \\\n--end-date yyyy-mm-ddThh:mm:ss.000Z \\\n--remove-end-date\nThe following is example output.\n{\n    \"Return\": true\n}\nExample: Modify total target capacity\naws ec2 modify-capacity-reservation-fleet \\\n--capacity-reservation-fleet-id crf-01234567890abcedf \\\n--total-target-capacity 160\nExample: Modify end date\naws ec2 modify-capacity-reservation-fleet \\\n--capacity-reservation-fleet-id crf-01234567890abcedf \\\n--end-date 2021-07-04T23:59:59.000Z\nExample: Remove end date\naws ec2 modify-capacity-reservation-fleet \\\n--capacity-reservation-fleet-id crf-01234567890abcedf \\\n--remove-end-date\nThe following is example output.\n{\n    \"Return\": true\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cancel-crfleet.html",
        "content": "When you no longer need a Capacity Reservation Fleet and the capacity it reserves, you can cancel it. When you cancel a Fleet, its status changes to cancelled and it can no longer create new Capacity Reservations. Additionally, all of the individual Capacity Reservations in the Fleet are canceled. The instances that were previously running in the reserved capacity continue to run normally in the shared capacity.\nTo cancel a Capacity Reservation Fleet\nUse the cancel-capacity-reservation-fleets AWS CLI command.\naws ec2 cancel-capacity-reservation-fleets \\\n--capacity-reservation-fleet-ids cr_fleet_ids\nThe following is example output.\n{\n    \"SuccessfulFleetCancellations\": [\n        {\n            \"CurrentFleetState\": \"state\",\n            \"PreviousFleetState\": \"state\",\n            \"CapacityReservationFleetId\": \"cr_fleet_id_1\"\n        },\n        {\n            \"CurrentFleetState\": \"state\",\n            \"PreviousFleetState\": \"state\",\n            \"CapacityReservationFleetId\": \"cr_fleet_id_2\"\n        }\n    ],\n    \"FailedFleetCancellations\": [\n        {\n         \"CapacityReservationFleetId\": \"cr_fleet_id_3\",\n         \"CancelCapacityReservationFleetError\": [\n             {\n              \"Code\": \"code\",\n                    \"Message\": \"message\"\n          }\n         ]\n     }\n    ]\n}\nExample: Successful cancellation\naws ec2 cancel-capacity-reservation-fleets \\\n--capacity-reservation-fleet-ids crf-abcdef01234567890\nThe following is example output.\n{\n    \"SuccessfulFleetCancellations\": [\n        {\n            \"CurrentFleetState\": \"cancelling\", \n            \"PreviousFleetState\": \"active\", \n            \"CapacityReservationFleetId\": \"crf-abcdef01234567890\"\n        }\n    ], \n    \"FailedFleetCancellations\": []\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/crfleet-example-configs.html",
        "content": "The following example creates a Capacity Reservation Fleet that uses two instance types: m5.4xlarge and m5.12xlarge.\nIt uses a weighting system based on the number of vCPUs provided by the specified instance types. The total target capacity is 480 vCPUs. The m5.4xlarge provides 16 vCPUs and gets a weight of 16, while the m5.12xlarge provides 48 vCPUs and gets a weight of 48. This weighting system configures the Capacity Reservation Fleet to reserve capacity for either 30 m5.4xlarge instances (480/16=30), or 10 m5.12xlarge instances (480/48=10).\nThe Fleet is configured to prioritize the m5.12xlarge capacity and gets priority of 1, while the m5.4xlarge gets a lower priority of 2. This means that the fleet will attempt to reserve the m5.12xlarge capacity first, and only attempt to reserve the m5.4xlarge capacity if Amazon EC2 has insufficient m5.12xlarge capacity.\nThe Fleet reserves the capacity for Windows instances and the reservation automatically expires on October 31, 2021 at 23:59:59 UTC.\naws ec2 create-capacity-reservation-fleet \\\n--total-target-capacity 480 \\\n--allocation-strategy prioritized \\\n--instance-match-criteria open \\\n--tenancy default \\\n--end-date 2021-10-31T23:59:59.000Z \\\n--instance-type-specifications file://instanceTypeSpecification.json\nThe following is the contents of instanceTypeSpecification.json.\n[\n    {             \n        \"InstanceType\": \"m5.4xlarge\",                        \n        \"InstancePlatform\":\"Windows\",            \n        \"Weight\": 16,\n        \"AvailabilityZone\":\"us-east-1a\",        \n        \"EbsOptimized\": true,            \n        \"Priority\" : 2\n    },\n    {             \n        \"InstanceType\": \"m5.12xlarge\",                        \n        \"InstancePlatform\":\"Windows\",            \n        \"Weight\": 48,\n        \"AvailabilityZone\":\"us-east-1a\",        \n        \"EbsOptimized\": true,            \n        \"Priority\" : 1\n }\n]"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-service-linked-roles.html",
        "content": "On-Demand Capacity Reservation Fleet uses AWS Identity and Access Management (IAM)service-linked roles. A service-linked role is a unique type of IAM role that is linked directly to Capacity Reservation Fleet. Service-linked roles are predefined by Capacity Reservation Fleet and include all the permissions that the service requires to call other AWS services on your behalf.\nA service-linked role makes setting up Capacity Reservation Fleet easier because you don\u2019t have to manually add the necessary permissions. Capacity Reservation Fleet defines the permissions of its service-linked roles, and unless defined otherwise, only Capacity Reservation Fleet can assume its roles. The defined permissions include the trust policy and the permissions policy, and that permissions policy cannot be attached to any other IAM entity.\nYou can delete a service-linked role only after first deleting their related resources. This protects your Capacity Reservation Fleet resources because you can't inadvertently remove permission to access the resources.\nService-linked role permissions for Capacity Reservation Fleet\nCapacity Reservation Fleet uses the service-linked role named AWSServiceRoleForEC2CapacityReservationFleet to create, describe, modify, and cancel Capacity Reservations that were previously created by a Capacity Reservation Fleet, on your behalf.\nThe AWSServiceRoleForEC2CapacityReservationFleet service-linked role trusts the following entity to assume the role:\ncapacity-reservation-fleet.amazonaws.com\nThe role uses the AWSEC2CapacityReservationFleetRolePolicy permissions policy. To view the permissions for this policy, see AWSEC2CapacityReservationFleetRolePolicy in the AWS Managed Policy Reference.\nYou must configure permissions to allow an IAM entity (such as a user, group, or role) to create, edit, or delete a service-linked role. For more information, see Service-linked role permissions in the IAM User Guide.\nCreate a service-linked role for Capacity Reservation Fleet\nYou don't need to manually create a service-linked role. When you create a Capacity Reservation Fleet using the create-capacity-reservation-fleet AWS CLI command or the CreateCapacityReservationFleet API, the service-linked role is automatically created for you.\nIf you delete this service-linked role, and then need to create it again, you can use the same process to recreate the role in your account. When you create a Capacity Reservation Fleet, Capacity Reservation Fleet creates the service-linked role for you again.\nEdit a service-linked role for Capacity Reservation Fleet\nCapacity Reservation Fleet does not allow you to edit the AWSServiceRoleForEC2CapacityReservationFleet service-linked role. After you create a service-linked role, you cannot change the name of the role because various entities might reference the role. However, you can edit the description of the role using IAM. For more information, see Edit a service-linked role description in the IAM User Guide.\nDelete a service-linked role for Capacity Reservation Fleet\nIf you no longer need to use a feature or service that requires a service-linked role, we recommend that you delete that role. That way you don\u2019t have an unused entity that is not actively monitored or maintained. However, you must delete the resources for your service-linked role before you can manually delete it.\nNote\nIf the Capacity Reservation Fleet service is using the role when you try to delete the resources, then the deletion might fail. If that happens, wait for a few minutes and try the operation again.\nTo delete the AWSServiceRoleForEC2CapacityReservationFleet service-linked role\nUse the delete-capacity-reservation-fleet AWS CLI command or the DeleteCapacityReservationFleet API to delete the Capacity Reservation Fleets in your account.\nUse the IAM console, the AWS CLI, or the AWS API to delete the AWSServiceRoleForEC2CapacityReservationFleet service-linked role. For more information, see Delete a service-linked role in the IAM User Guide.\nSupported Regions for Capacity Reservation Fleet service-linked roles\nCapacity Reservation Fleet supports using service-linked roles in all of the Regions where the service is available. For more information, see AWS Regions and Endpoints."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-reservation-cw-metrics.html",
        "content": "With CloudWatch metrics, you can efficiently monitor your Capacity Reservations and identify unused capacity by setting CloudWatch alarms to notify you when usage thresholds are met. This can help you maintain a constant Capacity Reservation volume and achieve a higher level of utilization.\nCapacity Reservations send metric data to CloudWatch every five minutes. Metrics are not supported for Capacity Reservations that are active for less than five minutes.\nFor more information about viewing metrics in the CloudWatch console, see Using Amazon CloudWatch Metrics. For more information about creating alarms, see Creating Amazon CloudWatch Alarms.\nContents\nCapacity Reservation usage metrics\nCapacity Reservation metric dimensions\nView CloudWatch metrics for Capacity Reservations\nCapacity Reservation usage metrics\nThe AWS/EC2CapacityReservations namespace includes the following usage metrics you can use to monitor and maintain on-demand capacity within thresholds you specify for your reservation.\nMetric Description\nUsedInstanceCount\nThe number of instances that are currently in use.\nUnit: Count\nAvailableInstanceCount\nThe number of instances that are available.\nUnit: Count\nTotalInstanceCount\nThe total number of instances you have reserved.\nUnit: Count\nInstanceUtilization\nThe percentage of reserved capacity instances that are currently in use.\nUnit: Percent\nCapacity Reservation metric dimensions\nYou can use the following dimensions to refine the metrics listed in the previous table within the selected Region and account.\nDimension Description\n(No dimension)\nThis dimension filters the specified metric for all Capacity Reservations.\nCapacityReservationId\nThis dimension filters the specified metric for the identified Capacity Reservation.\nInstanceType\nThis dimension filters the specified metric for the identified instance type.\nAvailabilityZone\nThis dimension filters the specified metric for the identified Availability Zone.\nInstanceMatchCriteria\nThis dimension filters the specified metric for the identified instance match criteria (open or targeted).\nInstancePlatform\nThis dimension filters the specified metric data for the identified platform.\nTenancy\nThis dimension filters the specified metric for the identified tenancy.\nView CloudWatch metrics for Capacity Reservations\nMetrics are grouped first by the service namespace, and then by the supported dimensions. You can use the following procedures to view the metrics for your Capacity Reservations.\nTo view Capacity Reservation metrics using the CloudWatch console\nOpen the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.\nIf necessary, change the Region. From the navigation bar, select the Region where your Capacity Reservation resides. For more information, see Regions and Endpoints.\nIn the navigation pane, choose Metrics.\nFor All metrics, choose EC2 Capacity Reservations.\nChoose from the preceding metric dimensions Across All Capacity Reservations, By Capacity Reservation, By Instance Type, By Availability Zone, By Platform, By Instance Match Criteria or By Tenancy and metrics will be grouped by No dimension, CapacityReservationId, InstanceType, AvailabilityZone, Platform, InstanceMatchCriteria, and Tenancy respectively.\nTo sort the metrics, use the column heading. To graph a metric, select the checkbox next to the metric.\nTo view Capacity Reservation metrics (AWS CLI)\nUse the following list-metrics command:\naws cloudwatch list-metrics --namespace \"AWS/EC2CapacityReservations\""
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cr-eventbridge.html",
        "content": "You can monitor Capacity Reservation underutilization using the following:\nTopics\nAmazon EventBridge events\nEmail and AWS Health Dashboard notifications\nAmazon EventBridge events\nAWS Health sends events to Amazon EventBridge when a Capacity Reservation in your account is below 20 percent usage over certain periods. With EventBridge, you can establish rules that trigger programmatic actions in response to such events. For example, you can create a rule that automatically cancels a Capacity Reservation when its utilization drops below 20 percent utilization over a 7-day period.\nEvents in EventBridge are represented as JSON objects. The fields that are unique to the event are contained in the \"detail\" section of the JSON object. The \"event\" field contains the event name. The \"result\" field contains the completed status of the action that triggered the event. For more information, see Amazon EventBridge event patterns in the Amazon EventBridge User Guide.\nFor more information, see the Amazon EventBridge User Guide.\nThis feature is not supported in AWS GovCloud (US).\nEvents\nAWS Health sends the following events when capacity usage for a Capacity Reservation is below 20 percent.\nAWS_EC2_ODCR_UNDERUTILIZATION_NOTIFICATION\nThe following is an example of an event that is generated when a newly created Capacity Reservation is below 20 percent capacity usage over a 24-hour period.\n{\n    \"version\": \"0\",\n    \"id\": \"b3e00086-f271-12a1-a36c-55e8ddaa130a\",\n    \"detail-type\": \"AWS Health Event\",\n    \"source\": \"aws.health\",\n    \"account\": \"123456789012\",\n    \"time\": \"2023-03-10T12:03:38Z\",\n    \"region\": \"ap-south-1\",\n    \"resources\": [\n        \"cr-01234567890abcdef\"\n    ],\n    \"detail\": {\n        \"eventArn\": \"arn:aws:health:ap-south-1::event/EC2/AWS_EC2_ODCR_UNDERUTILIZATION_NOTIFICATION/AWS_EC2_ODCR_UNDERUTILIZATION_NOTIFICATION_cr-01234567890abcdef-6211-4d50-9286-0c9fbc243f04\",\n        \"service\": \"EC2\",\n        \"eventTypeCode\": \"AWS_EC2_ODCR_UNDERUTILIZATION_NOTIFICATION\",\n        \"eventTypeCategory\": \"accountNotification\",\n        \"startTime\": \"Fri, 10 Mar 2023 12:03:38 GMT\",\n        \"endTime\": \"Fri, 10 Mar 2023 12:03:38 GMT\",\n        \"eventDescription\": [\n            {\n                \"language\": \"en_US\",\n                \"latestDescription\": \"A description of the event will be provided here\"\n            }\n        ],\n        \"affectedEntities\": [\n            {\n                \"entityValue\": \"cr-01234567890abcdef\"\n            }\n        ]\n    }\n    }\nAWS_EC2_ODCR_UNDERUTILIZATION_NOTIFICATION_SUMMARY\nThe following is an example of an event that is generated when one or more Capacity Reservation is below 20 percent capacity usage over a 7-day period.\n{ \n    \"version\": \"0\", \"id\":\"7439d42b-3c7f-ad50-6a88-25e2a70977e2\", \n    \"detail-type\": \"AWS Health Event\", \n    \"source\": \"aws.health\", \n    \"account\": \"123456789012\", \n    \"time\": \"2023-03-07T06:06:01Z\", \n    \"region\": \"us-east-1\", \n    \"resources\": [ \n        \"cr-01234567890abcdef | us-east-1b | t3.medium | Linux/UNIX | 0.0%\", \n        \"cr-09876543210fedcba | us-east-1a | t3.medium | Linux/UNIX | 0.0%\" \n    ], \n    \"detail\": { \n        \"eventArn\": \"arn:aws:health:us-east-1::event/EC2/AWS_EC2_ODCR_UNDERUTILIZATION_NOTIFICATION_SUMMARY/AWS_EC2_ODCR_UNDERUTILIZATION_NOTIFICATION_SUMMARY_726c1732-d6f6-4037-b9b8-bec3c2d3ba65\", \n        \"service\": \"EC2\", \n        \"eventTypeCode\": \"AWS_EC2_ODCR_UNDERUTILIZATION_NOTIFICATION_SUMMARY\", \n        \"eventTypeCategory\": \"accountNotification\", \n        \"startTime\": \"Tue, 7 Mar 2023 06:06:01 GMT\", \n        \"endTime\": \"Tue, 7 Mar 2023 06:06:01 GMT\", \n        \"eventDescription\": [\n            { \n                \"language\": \"en_US\", \n                \"latestDescription\": \"A description of the event will be provided here\" \n            }\n        ], \n        \"affectedEntities\": [\n            { \n                \"entityValue\": \"cr-01234567890abcdef | us-east-1b | t3.medium | Linux/UNIX | 0.0%\" \n            }, \n            { \n                \"entityValue\": \"cr-09876543210fedcba | us-east-1a | t3.medium | Linux/UNIX | 0.0%\" \n            }\n        ]\n    }\n}\nCreate an EventBridge rule\nTo receive email notifications when your Capacity Reservation utilization drops below 20 percent, create an Amazon SNS topic, and then create an EventBridge rule for the AWS_EC2_ODCR_UNDERUTILIZATION_NOTIFICATION event.\nTo create the Amazon SNS topic\nOpen the Amazon SNS console at https://console.aws.amazon.com/sns/v3/home.\nIn the navigation pane, choose Topics, and then choose Create topic.\nFor Type, choose Standard.\nFor Name, enter a name for the new topic.\nChoose Create topic.\nChoose Create subscription.\nFor Protocol, choose Email, and then for Endpoint, enter the email address that receives the notifications.\nChoose Create subscription.\nThe email address entered above will receive email message with the following subject line: AWS Notification - Subscription Confirmation. Follow the directions to confirm your subscription.\nTo create the EventBridge rule\nOpen the Amazon EventBridge console at https://console.aws.amazon.com/events/.\nIn the navigation pane, choose Rules, and then choose Create rule.\nFor Name, enter a name for the new rule.\nFor Rule type, choose Rule with an event pattern.\nChoose Next.\nIn the Event pattern, do the following:\nFor Event source, choose AWS services.\nFor AWS service, choose AWS Health.\nFor Event type, choose EC2 ODCR Underutilization Notification.\nChoose Next.\nFor Target 1, do the following:\nFor Target types, choose AWS service.\nFor Select a target, choose SNS topic.\nFor Topic, choose the topic that you created earlier.\nChoose Next and then Next again.\nChoose Create rule.\nEmail and AWS Health Dashboard notifications\nAWS Health sends the following email and AWS Health Dashboard notifications when capacity utilization for Capacity Reservations in your account drops below 20 percent.\nIndividual notifications for each newly created Capacity Reservation that has been below 20 percent utilization over the last 24-hour period.\nA summary notification for all Capacity Reservations that have been below 20 percent utilization over the last 7-day period.\nThe email notifications and AWS Health Dashboard notifications are sent to the email address associated with the AWS account that owns the Capacity Reservations. The notifications include the following information:\nThe ID of the Capacity Reservation.\nThe Availability Zone of the Capacity Reservation.\nThe average utilization rate for the Capacity Reservation.\nThe instance type and platform (operating system) of the Capacity Reservation.\nAdditionally, when capacity utilization for a Capacity Reservation in your account drops below 20 percent over a 24-hour and 7-day period, AWS Health sends events to EventBridge. With EventBridge, you can create rules that activate automatic actions, such as sending email notifications or triggering AWS Lambda functions, in response to such events. For more information, see Monitor Capacity Reservation underutilization."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitor-fcr-state.html",
        "content": "Amazon EC2 sends an event to Amazon EventBridge when the state of a future-dated Capacity Reservation changes.\nThe following is example of this event. In this example, the future-dated Capacity Reservation entered the scheduled state. Note the state highlighted in the detail-type field.\n{\n   \"version\":\"0\",\n   \"id\":\"12345678-1234-1234-1234-123456789012\",\n   \"detail-type\":\"EC2 Capacity Reservation Scheduled\",\n   \"source\":\"aws.ec2\",\n   \"account\":\"123456789012\",\n   \"time\":\"yyyy-mm-ddThh:mm:ssZ\",\n   \"region\":\"us-east-1\",\n   \"resources\":[\n      \"arn:aws:ec2:us-east-1:123456789012:capacity-reservation/cr-1234567890abcdefg\"\n   ],\n   \"detail\":{\n      \"capacity-reservation-id\":\"cr-1234567890abcdefg\",\n      \"state\":\"scheduled\"\n   }\n}\nThe possible values for the detail-type field are:\nScheduled\nActive\nDelayed\nUnsupported\nFailed\nExpired\nFor more information about these states, see View the state of a Capacity Reservation.\nYou can create Amazon EventBridge events that monitor for these events and then trigger specific actions when they occur. For more information, see Creating rules that react to events in Amazon EventBridge.\nTo create a rule that monitors for all state change events, you can use the following event pattern.\n{\n  \"source\": [\"aws.ec2\"],\n  \"detail-type\": [{\n    \"prefix\": \"EC2 Capacity Reservation\"\n  }]\n}\nTo create a rule that monitors for only specific state changes, you can use the following event pattern.\n{\n  \"source\": [\"aws.ec2\"],\n  \"detail-type\": [{\n    \"prefix\": \"EC2 Capacity Reservation state\"\n  }]\n}\nFor example, the following event pattern monitors for events that are sent when a future-dated Capacity Reservation enters the active state.\n{\n  \"source\": [\"aws.ec2\"],\n  \"detail-type\": [{\n    \"prefix\": \"EC2 Capacity Reservation Active\"\n  }]\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-capacity-blocks.html",
        "content": "Capacity Blocks for ML allow you to reserve highly sought-after GPU instances on a future date to support your short duration machine learning (ML) workloads. Instances that run inside a Capacity Block are automatically placed close together inside Amazon EC2 UltraClusters, for low-latency, petabit-scale, non-blocking networking.\nWith Capacity Blocks, you can see when GPU instance capacity is available on future dates, and you can schedule a Capacity Block to start at a time that works best for you. When you reserve a Capacity Block, you get predictable capacity assurance for GPU instances while paying only for the amount of time that you need. We recommend Capacity Blocks when you need GPUs to support your ML workloads for days or weeks at a time and don't want to pay for a reservation while your GPU instances aren't in use.\nThe following are some common use cases for Capacity Blocks.\nML model training and fine-tuning \u2013 Get uninterrupted access to the GPU instances that you reserved to complete ML model training and fine-tuning.\nML experiments and prototypes \u2013 Run experiments and build prototypes that require GPU instances for short durations.\nCapacity Blocks are currently available for p5.48xlarge, p5e.48xlarge, p5en.48xlarge, p4d.24xlarge, trn1.32xlarge, and trn2.48xlarge instances in select Regions as follows:\np5.48xlarge \u2014 US East (N. Virginia) | US East (Ohio) | US West (Oregon) | Asia Pacific (Tokyo)\np5e.48xlarge \u2014 US East (Ohio)\np5en.48xlarge \u2014 US East (Ohio)\np4d.24xlarge \u2014 US East (Ohio) | US West (Oregon)\ntrn1.32xlarge \u2014 US East (N. Virginia) | Asia Pacific (Melbourne)\ntrn2.48xlarge \u2014 US East (Ohio)\nYou can reserve a Capacity Block with a reservation start time up to eight weeks in the future.\nYou can use Capacity Blocks to reserve p5, p5e, p5en, p4d, trn1, and trn2 instances with the following reservation durations and instance quantity options.\nReservation durations for 1-day increments up 14 days and 7-day increments up to 182 days total\nReservation instance quantity options of 1, 2, 4, 8, 16, 32, or 64 instances\nTo reserve a Capacity Block, you start by specifying your capacity needs, including the instance type, the number of instances, amount of time, earliest start date, and latest end date that you need. Then, you can see an available Capacity Block offering that meets your specifications. The Capacity Block offering includes details such as start time, Availability Zone, and reservation price. The price of a Capacity Block offering depends on available supply and demand at the time the offering was delivered. After you reserve a Capacity Block, the price doesn't change. For more information, see Capacity Blocks pricing and billing.\nWhen you purchase a Capacity Block offering, your reservation is created for the date and number of instances that you selected. When your Capacity Block reservation begins, you can target instance launches by specifying the reservation ID in your launch requests.\nYou can use all the instances you reserved until 30 minutes before the end time of the Capacity Block. With 30 minutes left in your Capacity Block reservation, we begin terminating any instances that are running in the Capacity Block. We use this time to clean up your instances before delivering the Capacity Block to the next customer. We emit an event through EventBridge 10 minutes before the termination process begins. For more information, see Monitor Capacity Blocks using EventBridge.\nTopics\nSupported platforms\nConsiderations\nRelated resources\nCapacity Blocks pricing and billing\nWork with Capacity Blocks\nMonitor Capacity Blocks using EventBridge\nLogging Capacity Blocks API calls with AWS CloudTrail\nSupported platforms\nCapacity Blocks for ML currently support p5.48xlarge, p5e.48xlarge, p5en.48xlarge, p4d.24xlarge, trn1.32xlarge, and trn2.48xlarge instances with default tenancy. When you use the AWS Management Console to purchase a Capacity Block, the default platform option is Linux/UNIX. When you use the AWS Command Line Interface (AWS CLI) or AWS SDK to purchase a Capacity Block, the following platform options are available:\nLinux/Unix\nRed Hat Enterprise Linux\nRHEL with HA\nSUSE Linux\nUbuntu Pro\nConsiderations\nBefore you use Capacity Blocks, consider the following details and limitations.\nYou can describe Capacity Block offerings that can start in as soon as 30 minutes.\nCapacity Blocks end at 11:30AM Coordinated Universal Time (UTC).\nThe termination process for instances running in a Capacity Block begins at 11:00AM Coordinated Universal Time (UTC) on the final day of the reservation.\nCapacity Blocks can be reserved with a start time up to 8 weeks in the future.\nCapacity Block modifications and cancellations aren't allowed.\nCapacity Block can't be moved or split.\nCapacity Blocks can't be shared across AWS accounts or within your AWS Organization.\nCapacity Blocks can't be used in a capacity reservation group.\nThe total number of instances that can be reserved in Capacity Blocks across all accounts in your AWS Organization can't exceed 64 instances on a particular date.\nTo use a Capacity Block, instances must specifically target the reservation ID.\nInstances in a Capacity Block don't count against your On-Demand Instances limits.\nFor P5 instances using a custom AMI, ensure that you have the required software and configuration for EFA.\nFor Amazon EKS managed node groups, see Create a managed node group with Amazon EC2 Capacity Blocks for ML. For Amazon EKS self-managed node groups, see Use Capacity Blocks for ML with self-managed nodes.\nRelated resources\nAfter you create a Capacity Block, you can do the following with the Capacity Block:\nLaunch instances into the Capacity Block. For more information, see Launch instances into Capacity Blocks.\nCreate an Amazon EC2 Auto Scaling group. For more information, see Use Capacity Blocks for machine learning workloads in the Amazon EC2 Auto Scaling User Guide.\nNote\nIf you use Amazon EC2 Auto Scaling or Amazon EKS, you can schedule scaling to run at the start of the Capacity Block reservation. With scheduled scaling, AWS automatically handles retries for you, so you don't need to worry about implementing retry logic to handle transient failures.\nEnhance ML workflows with AWS ParallelCluster. For more information, see Enhancing ML workflows with AWS ParallelCluster and Amazon EC2 Capacity Blocks for ML.\nFor more information about AWS ParallelCluster, see What is AWS ParallelCluster."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-blocks-pricing-billing.html",
        "content": "With Amazon EC2 Capacity Blocks for ML, you pay only for what you reserve. The price of a Capacity Block depends on available supply and demand for Capacity Blocks at the time of purchase. You can view the price of a Capacity Block offering before you reserve it. The price of the Capacity Block is charged up front at the time the reservation is made. When you search for a Capacity Block across a range of dates, we return the lowest-priced Capacity Block offering available. After you've reserved a Capacity Block, the price doesn't change.\nWhen you use a Capacity Block, you pay for the operating system you use when your instances are running. For more information about operating system prices, see Amazon EC2 Capacity Blocks for ML Pricing.\nBilling\nThe price of a Capacity Block offering is charged up front. Payment is billed to your AWS account within 5 minutes to 12 hours after you purchase a Capacity Block. While your payment is processing, your Capacity Block reservation resource remains in a state of payment-pending. If your payment can't be processed at least 5 minutes before your block start time, or within 12 hours (whichever comes first), your Capacity Block is released and the reservation state changes to payment-failed.\nAfter your payment is processed successfully, the Capacity Block resource state changes from payment-pending to scheduled. You receive an invoice that reflects the one-time upfront payment. In the invoice, you can associate the paid amount with the Capacity Block reservation ID.\nWhen your Capacity Block reservation begins, you are billed based only on the operating system you use while your instances are running in the reservation. You can view your usage and associated charges in your anniversary bill for the month of usage in your AWS Cost and Usage Report.\nNote\nSavings Plans and Reserved Instance discounts don't apply to Capacity Blocks.\nViewing your bill\nYou can view your bill in the AWS Billing and Cost Management console. The upfront payment for your Capacity Block appears in the month that you purchased the reservation.\nAfter your reservation begins, your bill shows separate lines for the block reservation used and unused time. You can use these line items to see how much time was used in your reservation. You will see only a usage charge in the line for used time if you use a premium operating system. For more information, see Capacity Blocks pricing and billing. There is no additional charge for unused time.\nFor more information, see Viewing your bill in the AWS Billing and Cost Management User Guide.\nIf your Capacity Block starts in a different month then the month you purchased your reservation, the upfront price and reservation usage show up under separate billing months. In your AWS Cost and Usage Report, the Capacity Block reservation ID is listed in the reservation/ReservationARN line item of your upfront fee and the lineitem/ResourceID in your anniversary bill so that you can associate the usage to the corresponding upfront price."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-blocks-using.html",
        "content": "To start using Capacity Blocks, you first find and purchase an available Capacity Block that matches your reservation size, duration, and timing needs. Then, when the reservation begins, you can use the Capacity Block by launching instances that target the reservation ID. Thirty minutes before the reservation expires, we begin to terminate any instances that are still running in the Capacity Block.\nCapacity Blocks are delivered as targeted Capacity Reservations in a single Availability Zone. To run instances in a Capacity Block, you must specify the reservation ID when launching your instances. If you stop instances on your own and the Capacity Block expires, you can't restart them until you target another Capacity Block in the active state.\nBy default, Capacity Blocks deliver low-latency, high-throughput network connectivity between the instances inside the Capacity Block, so there is no need to use a cluster placement group with a Capacity Block.\nTopics\nPrerequisites\nFind and purchase Capacity Blocks\nLaunch instances into Capacity Blocks\nView Capacity Blocks\nExtend Capacity Blocks\nPrerequisites\nYou must use the corresponding AWS Region for the instance type that you want to use. For more information, see Regions.\nCapacity Blocks with p5.48xlarge instances are available in the following AWS Regions.\nRegion code Region name\nus-east-1\nUS East (N. Virginia)\nus-east-2\nUS East (Ohio)\nus-west-2\nUS West (Oregon)\nap-northeast-1\nAsia Pacific (Tokyo)\nCapacity Blocks with p5e.48xlarge instances are available in the following AWS Region.\nRegion code Region name\nus-east-2\nUS East (Ohio)\nCapacity Blocks with p5en.48xlarge instances are available in the following AWS Region.\nRegion code Region name\nus-east-2\nUS East (Ohio)\nCapacity Blocks with p4d.24xlarge instances are available in the following AWS Regions.\nRegion code Region name\nus-east-2\nUS East (Ohio)\nus-west-2\nUS West (Oregon)\nCapacity Blocks with trn1.32xlarge instances are available in the following AWS Region.\nRegion code Region name\nus-east-1\nUS East (N. Virginia)\nap-southeast-4\nAsia Pacific (Melbourne)\nCapacity Blocks with trn2.48xlarge instances are available in the following AWS Region.\nRegion code Region name\nus-east-2\nUS East (Ohio)\nNote\nCapacity Block sizes of 64 instances are not supported for all instance types in all AWS Regions."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-blocks-purchase.html",
        "content": "To reserve a Capacity Block, you first need to find a block of time when capacity is available that matches your needs. To find a Capacity Block that is available to reserve, you specify the following.\nThe number of instances that you need\nThe duration of time you that you need the instances\nThe date range that you need your reservation\nTo search for an available Capacity Block offering, you specify a reservation duration and instance count. You must select one of the following options.\nFor reservation durations 1-day increments up 14 days and 7-day increments up to 182 days total\nFor instance count 1, 2, 4, 8, 16, 32, or 64 instances\nWhen you request a Capacity Block that matches your specifications, we provide the details of up to 3 available blocks. All Capacity Blocks end at 11:30AM UTC, so the blocks starting on the same day will have durations that are the closest match to your desired duration. One block will have a duration that is slightly less than your desired duration, while the other will have a duration slightly greater than your desired duration.\nThe offering details include the start time of the reservation, the Availability Zone for the reservation, and the price of the reservation. For more information, see Capacity Blocks pricing and billing.\nYou can purchase the Capacity Block offering you are shown, or you can modify your search criteria to see the other options that are available. There is no predefined expiration time for the offering, but offerings are only available on a first-come, first-served basis.\nWhen you purchase a Capacity Block offering, you get an immediate response confirming that your Capacity Block was reserved. After confirmation, you will see a new Capacity Reservation in your account with a reservation type of capacity-block and a start-date set to the start time of the offering that you purchased. Your Capacity Block reservation is created with a state of payment-pending. After the upfront payment is successfully processed, the reservation state changes to scheduled. For more information, see Billing.\nYou can use one of the following methods to find and purchase a Capacity Block.\nConsole\nAWS CLI\nTo find and purchase a Capacity Block using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation bar at the top of the screen, select an AWS Region. This choice is important because Capacity Block sizes of 64 instances are not supported for all instance types in all Regions.\nIn the navigation pane, choose Capacity Reservations, Purchase Capacity Blocks.\nUnder Capacity attributes, you can define your Capacity Block search parameters. By default, the platform is Linux. If you want to select a different operating system, use the AWS CLI. For more information, see Supported platforms.\nUnder Total capacity, select the number of instances you want to reserve.\nUnder Duration, enter the number of days or weeks you need the reservation for.\nUnder Date range to search for Capacity Blocks, enter the earliest date that you want your reservation to start.\nChoose Find Capacity Blocks.\nIf a Capacity Block is available that meets your specifications, you see an offering under Recommended Capacity Blocks. If there are multiple offerings that meet your specifications, the earliest available Capacity Block offering is shown. To view other Capacity Block offerings, adjust your search inputs and choose Find Capacity Blocks again.\nWhen you find a Capacity Block offering that you want to purchase, choose Next.\n(Optional) On the Add tags page, choose Add new tag.\nThe Review and purchase page lists the start and end date, duration, total number of instances, and price.\nNote\nCapacity Blocks can't be modified or canceled after you reserve them.\nIn the popup window Purchase a Capacity Block, type confirm, then choose Purchase."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-blocks-launch.html",
        "content": "To use your Capacity Block, you must specify the Capacity Block reservation ID when launching instances. Launching an instance into a Capacity Block reduces the available capacity by the number of instances launched. For example, if your purchased instance capacity is eight instances and you launch four instances, the available capacity is reduced by four.\nIf you terminate an instance running in the Capacity Block before the reservation ends, you can launch a new instance in its place. When you stop or terminate an instance in a Capacity Block, it takes several minutes to clean up your instance before you can launch another instance to replace it. During this time, your instance will be in a stopping or shutting-down state. After this process is complete, your instance state will change to stopped or terminated. Then, the available capacity in your Capacity Block will update to show another instance available to use.\nFor information about how to set up an EKS managed node group with a Capacity Block, see Create a managed node group with Capacity Blocks for ML in the Amazon EKS User Guide.\nFor information about how to set up AWS ParallelCluster using a Capacity Block, see ML on AWS ParallelCluster.\nFor information about how to launch instances into a Capacity Block using EC2 Fleet, see Tutorial: Configure your EC2 Fleet to launch instances into Capacity Blocks.\nFor information about how to create a Launch Template targeting a Capacity Block, see Store instance launch parameters in Amazon EC2 launch templates.\nThe following steps explain how to launch instances into a Capacity Block in the active state using the AWS Management Console or the AWS CLI.\nConsole\nAWS CLI\nTo launch instances into a Capacity Block using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation bar at the top of the screen, select the Region for your Capacity Block reservation.\nFrom the Amazon EC2 console dashboard, choose Launch instance.\n(Optional) Under Name and tags, you can name your instance and tag the instance. For information about tags, see Tag your Amazon EC2 resources\nUnder Application and OS Images, select an Amazon Machine Image (AMI).\nUnder Instance type, select the instance type that matches your Capacity Block reservation.\nUnder Key pair (login), choose an existing key pair or choose Create new key pair to create a new one. For more information, see Amazon EC2 key pairs and Amazon EC2 instances.\nUnder Network settings, use the default settings, or choose Edit to configure the network settings as necessary.\nImportant\nYour instance can't launch in a subnet in a different Availability Zone from the Availability Zone where your Capacity Block is located.\nYour instance can't launch using an AMI with a different platform from the platform on your Capacity Block.\nUnder Advanced details, configure the instance as follows.\nUnder Purchasing option (market type), select Capacity Blocks.\nUnder Capacity Reservation, select Target by ID.\nSelect the Capacity Reservation ID of your Capacity Block reservation.\nOn the Summary panel, for Number of instances, enter the number of instances to launch.\nChoose Launch instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-blocks-view.html",
        "content": "After you reserve a Capacity Block, you can view the Capacity Block reservation in your AWS account. You can view the start-date and end-date to see when your reservation will begin and end. Before a Capacity Block reservation begins, the available capacity appears as zero. You can see how many instances will be available in your Capacity Block by the tag value for the tag key aws:ec2capacityreservation:incrementalRequestedQuantity.\nWhen a Capacity Block reservation begins, the reservation state changes from scheduled to active. We emit an event through Amazon EventBridge to notify you that the Capacity Block is available to use. For more information, see Monitor Capacity Blocks using EventBridge.\nCapacity Blocks have the following states:\npayment-pending \u2013 The upfront payment hasn't been processed yet.\npayment-failed\u2014The payment couldn't be processed in the 12 hour time frame. Your Capacity Block was released.\nscheduled \u2013 The payment was processed and the Capacity Block reservation hasn't started yet.\nactive \u2013 The reserved capacity is available for your use.\nexpired \u2013 The Capacity Block reservation expired automatically at the date and time specified in your reservation request. The reserved capacity is no longer available for your use.\nYou can use one of the following methods to view your Capacity Block reservation.\nConsole\nAWS CLI\nTo view Capacity Blocks using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Capacity Reservations.\nOn the Capacity Reservations overview page, you see a resource table with details about all of your Capacity Reservation resources. To find your Capacity Blocks reservations, select Capacity Blocks from the dropdown list above Capacity Reservation ID. In the table, you can see information about your Capacity Blocks such as start and end dates, duration, and status.\nFor more details about a Capacity Block, select the reservation ID for the Capacity Block that you want to view. The Capacity Reservation details page displays all the properties of the reservation and the number of instances in use and available in the Capacity Block.\nNote\nBefore a Capacity Block reservation begins, the available capacity appears as zero. You can see how many instances will be available when the Capacity Block reservation starts by using the following tag value for the tag key: aws:ec2capacityreservation:incrementalRequestedQuantity."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-blocks-extend.html",
        "content": "With Capacity Blocks, you reserve compute capacity for your workloads, ensuring availability and consistency. To accommodate your changing needs, you can extend the duration of your existing Capacity Blocks as required.\nTo extend a Capacity Block, it must have a status of active or scheduled, and have no extensions that are payment-pending. Request an extension up to 1 hour before your Capacity Block\u2019s scheduled end time. You can extend your Capacity Block by 1-day increments up 14 days, and 7-day increments up to 182 days (26 weeks) total. When you extend your Capacity Block, its end date will be updated so that your instances can continue to run without disruption.\nThere is no limit to the number of extensions you can apply to a Capacity Block\nYour Capacity Reservation ID will remain the same after extending the block\nCapacity Blocks can only be extended if there is sufficient capacity available to support them, which is not guaranteed.\nBilling\nThe price of a Capacity Block offering is charged up front. The extension will remain in payment-pending until the bill is paid. If your payment can't be processed within 12 hours, or up to 35 minutes before the Capacity Block is scheduled to end (whichever comes first), your extension is not successful and the status changes to payment-failed. Your Capacity Block reservation will remain active and will be terminated on the original end date.\nAfter your payment is processed successfully, the Capacity Block extension status changes to payment-succeeded and the end date of the Capacity Block reservation will be updated to the new end date. The details of your extension can be viewed in the Capacity Block Extension details section of the console, or by using the describe-capacity-block-extension-history command.\nExtend your Capacity Block\nUse one of the following methods to extend your Capacity Block reservation.\nConsole\nAWS CLI\nTo extend Capacity Blocks using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Capacity Reservations.\nOn the Capacity Reservations overview page, you see a resource table with details about all of your Capacity Reservations resources. Select the reservation ID for the Capacity Block that you want to extend.\nFrom the Actions drop down menu, choose Extend Capacity Block.\nUnder Duration, enter the number of days or weeks you need to extend the reservation for.\nChoose Find Capacity Block.\nIf a Capacity Block is available that meets your specifications, an offering appears under Recommended Capacity Blocks. To view other Capacity Block offerings, adjust your search inputs and choose Find Capacity Blocks again.\nWhen you find a Capacity Block offering that you want to purchase, choose Extend.\nIn the pop-up window Extend Capacity Block, enter confirm, then choose Extend."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-blocks-monitor.html",
        "content": "When your Capacity Block reservation starts, Amazon EC2 will emit an event through EventBridge that indicates your capacity is ready to use. Forty minutes before your Capacity Block reservation ends, you receive another EventBridge event that tells you that any instances running in the reservation will begin to terminate in 10 minutes. For more information about EventBridge events, see Amazon EventBridge Events.\nThe following event structures for events emitted for Capacity Blocks:\nCapacity Block Delivered\nThe following example shows an event for Capacity Block Delivered.\n{\n  \"customer_event_id\": \"[Capacity Reservation Id]-delivered\",\n  \"detail_type\": \"Capacity Block Reservation Delivered\",\n  \"source\": \"aws.ec2\",\n  \"account\": \"[Customer Account ID]\",\n  \"time\": \"[Current time]\",\n  \"resources\": [\n    \"[ODCR ARN]\"\n  ],\n  \"detail\": {\n    \"capacity-reservation-id\": \"[ODCR ID]\",\n    \"end-date\": \"[ODCR End Date]\"\n  }\n}\nCapacity Block Expiration Warning\nThe following example shows an event for Capacity Block Expiration Warning.\n{\n  \"customer_event_id\": \"[Capacity Reservation Id]-approaching-expiry\",\n  \"detail_type\": \"Capacity Block Reservation Expiration Warning\",\n  \"source\": \"aws.ec2\",\n  \"account\": \"[Customer Account ID]\",\n  \"time\": \"[Current time]\",\n  \"resources\": [\n    \"[ODCR ARN]\"\n  ],\n  \"detail\": {\n    \"capacity-reservation-id\": \"[ODCR ID]\",\n    \"end-date\": \"[ODCR End Date]\"\n  }\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-blocks-logging-using-cloudtrail.html",
        "content": "Capacity Blocks is integrated with AWS CloudTrail, a service that provides a record of actions taken by a user, role, or an AWS service in Capacity Blocks. CloudTrail captures API calls for Capacity Blocks as events. The calls captured include calls from the Capacity Blocks console and code calls to the Capacity Blocks API operations. If you create a trail, you can enable continuous delivery of CloudTrail events to an Amazon S3 bucket, including events for Capacity Blocks. If you don't configure a trail, you can still view the most recent events in the CloudTrail console in Event history. Using the information collected by CloudTrail, you can determine the request that was made to Capacity Blocks, the IP address from which the request was made, who made the request, when it was made, and additional details.\nTo learn more about CloudTrail, see the AWS CloudTrail User Guide.\nCapacity Blocks information in CloudTrail\nCloudTrail is enabled on your AWS account when you create the account. When activity occurs in Capacity Blocks, that activity is recorded in a CloudTrail event along with other AWS service events in Event history. You can view, search, and download recent events in your AWS account. For more information, see Viewing events with CloudTrail Event history.\nFor an ongoing record of events in your AWS account, including events for Capacity Blocks, create a trail. A trail enables CloudTrail to deliver log files to an Amazon S3 bucket. By default, when you create a trail in the console, the trail applies to all AWS Regions. The trail logs events from all Regions in the AWS partition and delivers the log files to the Amazon S3 bucket that you specify. Additionally, you can configure other AWS services to further analyze and act upon the event data collected in CloudTrail logs. For more information, see the following:\nOverview for creating a trail\nCloudTrail supported services and integrations\nConfiguring Amazon SNS notifications for CloudTrail\nReceiving CloudTrail log files from multiple regions and Receiving CloudTrail log files from multiple accounts\nAll Capacity Blocks actions are logged by CloudTrail and are documented in the Amazon EC2 API Reference. For example, calls to the CapacityBlockScheduled, and CapacityBlockActive actions generate entries in the CloudTrail log files.\nEvery event or log entry contains information about who generated the request. The identity information helps you determine the following:\nWhether the request was made with root or AWS Identity and Access Management (IAM) user credentials.\nWhether the request was made with temporary security credentials for a role or federated user.\nWhether the request was made by another AWS service.\nFor more information, see the CloudTrail userIdentity element.\nUnderstanding Capacity Blocks log file entries\nA trail is a configuration that enables delivery of events as log files to an Amazon S3 bucket that you specify. CloudTrail log files contain one or more log entries. An event represents a single request from any source and includes information about the requested action, the date and time of the action, request parameters, and so on. CloudTrail log files aren't an ordered stack trace of the public API calls, so they don't appear in any specific order.\nThe following examples show CloudTrail log entries for:\nTerminateCapacityBlocksInstances\nCapacityBlockPaymentFailed\nCapacityBlockScheduled\nCapacityBlockActive\nCapacityBlockFailed\nCapacityBlockExpired\nNote\nSome fields have been redacted from the examples for data privacy.\nTerminateCapacityBlocksInstances\n{\n  \"eventVersion\": \"1.05\",\n  \"userIdentity\": {\n    \"accountId\": \"123456789012\",\n    \"invokedBy\": \"AWS Internal;\"\n  },\n  \"eventTime\": \"2023-10-02T00:06:08Z\",\n  \"eventSource\": \"ec2.amazonaws.com\",\n  \"eventName\": \"TerminateCapacityBlockInstances\",\n  \"awsRegion\": \"us-east-1\",\n  \"sourceIPAddress\": \"203.0.113.25\",\n  \"userAgent\": \"aws-cli/1.15.61 Python/2.7.10 Darwin/16.7.0 botocore/1.10.60\",\n  \"requestParameters\": null,\n  \"responseElements\": null,\n  \"eventID\": \"a1b2c3d4-EXAMPLE\",\n  \"readOnly\": false,\n  \"resources\": [\n    {\n      \"accountId\": \"123456789012\",\n      \"type\": \"AWS::EC2::Instance\",\n      \"ARN\": \"arn:aws:ec2:US East (N. Virginia):123456789012:instance/i-1234567890abcdef0\"\n    }\n    {\n      \"accountId\": \"123456789012\",\n      \"type\": \"AWS::EC2::Instance\",\n      \"ARN\": \"arn:aws::ec2:US East (N. Virginia):123456789012:instance/i-0598c7d356eba48d7\"\n    }\n  ],\n  \"eventType\": \"AwsServiceEvent\",\n  \"recipientAccountId\": \"123456789012\",\n  \"serviceEventDetails\": {\n      \"capacityReservationId\": \"cr-12345678\",\n      }\n}\nCapacityBlockPaymentFailed\n{\n  \"eventVersion\": \"1.05\",\n  \"userIdentity\": {\n    \"accountId\": \"123456789012\",\n    \"invokedBy\": \"AWS Internal;\"\n  },\n  \"eventTime\": \"2023-10-02T00:06:08Z\",\n  \"eventSource\": \"ec2.amazonaws.com\",\n  \"eventName\": \"CapacityBlockPaymentFailed\",\n  \"awsRegion\": \"us-east-1\",\n  \"sourceIPAddress\": \"203.0.113.25\",\n  \"userAgent\": \"aws-cli/1.15.61 Python/2.7.10 Darwin/16.7.0 botocore/1.10.60\",\n  \"requestParameters\": null,\n  \"responseElements\": null,\n  \"eventID\": \"a1b2c3d4-EXAMPLE\",\n  \"readOnly\": false,\n  \"resources\": [\n    {\n      \"ARN\": \"arn:aws:ec2:US East (N. Virginia):123456789012:capacity-reservation/cr-12345678\",\n      \"accountId\": \"123456789012\",\n      \"type\": \"AWS::EC2::CapacityReservation\"\n    }\n  ],\n  \"eventType\": \"AwsServiceEvent\",\n  \"recipientAccountId\": \"123456789012\",\n  \"serviceEventDetails\": {\n      \"capacityReservationId\": \"cr-12345678\",\n      \"capacityReservationState\": \"payment-failed\"\n      }\n}\nCapacityBlockScheduled\n{\n  \"eventVersion\": \"1.05\",\n  \"userIdentity\": {\n    \"accountId\": \"123456789012\",\n    \"invokedBy\": \"AWS Internal;\"\n  },\n  \"eventTime\": \"2023-10-02T00:06:08Z\",\n  \"eventSource\": \"ec2.amazonaws.com\",\n  \"eventName\": \"CapacityBlockScheduled\",\n  \"awsRegion\": \"us-east-1\",\n  \"sourceIPAddress\": \"203.0.113.25\",\n  \"userAgent\": \"aws-cli/1.15.61 Python/2.7.10 Darwin/16.7.0 botocore/1.10.60\",\n  \"requestParameters\": null,\n  \"responseElements\": null,\n  \"eventID\": \"a1b2c3d4-EXAMPLE\",\n  \"readOnly\": false,\n  \"resources\": [\n    {\n      \"ARN\": \"arn:aws:ec2:US East (N. Virginia):123456789012:capacity-reservation/cr-12345678\",\n      \"accountId\": \"123456789012\",\n      \"type\": \"AWS::EC2::CapacityReservation\"\n    }\n  ],\n  \"eventType\": \"AwsServiceEvent\",\n  \"recipientAccountId\": \"123456789012\",\n  \"serviceEventDetails\": {\n      \"capacityReservationId\": \"cr-12345678\",\n      \"capacityReservationState\": \"scheduled\"\n      }\n}\nCapacityBlockActive\n{\n  \"eventVersion\": \"1.05\",\n  \"userIdentity\": {\n    \"accountId\": \"123456789012\",\n    \"invokedBy\": \"AWS Internal;\"\n  },\n  \"eventTime\": \"2023-10-02T00:06:08Z\",\n  \"eventSource\": \"ec2.amazonaws.com\",\n  \"eventName\": \"CapacityBlockActive\",\n  \"awsRegion\": \"us-east-1\",\n  \"sourceIPAddress\": \"203.0.113.25\",\n  \"userAgent\": \"aws-cli/1.15.61 Python/2.7.10 Darwin/16.7.0 botocore/1.10.60\",\n  \"requestParameters\": null,\n  \"responseElements\": null,\n  \"eventID\": \"a1b2c3d4-EXAMPLE\",\n  \"readOnly\": false,\n  \"resources\": [\n    {\n      \"ARN\": \"arn:aws:ec2:US East (N. Virginia):123456789012:capacity-reservation/cr-12345678\",\n      \"accountId\": \"123456789012\",\n      \"type\": \"AWS::EC2::CapacityReservation\"\n    }\n  ],\n  \"eventType\": \"AwsServiceEvent\",\n  \"recipientAccountId\": \"123456789012\",\n  \"serviceEventDetails\": {\n      \"capacityReservationId\": \"cr-12345678\",\n      \"capacityReservationState\": \"active\"\n      }\n }     \nCapacityBlockFailed\n{\n  \"eventVersion\": \"1.05\",\n  \"userIdentity\": {\n    \"accountId\": \"123456789012\",\n    \"invokedBy\": \"AWS Internal;\"\n  },\n  \"eventTime\": \"2023-10-02T00:06:08Z\",\n  \"eventSource\": \"ec2.amazonaws.com\",\n  \"eventName\": \"CapacityBlockFailed\",\n  \"awsRegion\": \"us-east-1\",\n  \"sourceIPAddress\": \"203.0.113.25\",\n  \"userAgent\": \"aws-cli/1.15.61 Python/2.7.10 Darwin/16.7.0 botocore/1.10.60\",\n  \"requestParameters\": null,\n  \"responseElements\": null,\n  \"eventID\": \"a1b2c3d4-EXAMPLE\",\n  \"readOnly\": false,\n  \"resources\": [\n    {\n      \"ARN\": \"arn:aws:ec2:US East (N. Virginia):123456789012:capacity-reservation/cr-12345678\",\n      \"accountId\": \"123456789012\",\n      \"type\": \"AWS::EC2::CapacityReservation\"\n    }\n  ],\n  \"eventType\": \"AwsServiceEvent\",\n  \"recipientAccountId\": \"123456789012\",\n  \"serviceEventDetails\": {\n      \"capacityReservationId\": \"cr-12345678\",\n      \"capacityReservationState\": \"failed\"\n      }\n }     \nCapacityBlockExpired\n{\n  \"eventVersion\": \"1.05\",\n  \"userIdentity\": {\n    \"accountId\": \"123456789012\",\n    \"invokedBy\": \"AWS Internal;\"\n  },\n  \"eventTime\": \"2023-10-02T00:06:08Z\",\n  \"eventSource\": \"ec2.amazonaws.com\",\n  \"eventName\": \"CapacityBlockExpired\",\n  \"awsRegion\": \"us-east-1\",\n  \"sourceIPAddress\": \"203.0.113.25\",\n  \"userAgent\": \"aws-cli/1.15.61 Python/2.7.10 Darwin/16.7.0 botocore/1.10.60\",\n  \"requestParameters\": null,\n  \"responseElements\": null,\n  \"eventID\": \"a1b2c3d4-EXAMPLE\",\n  \"readOnly\": false,\n  \"resources\": [\n    {\n      \"ARN\": \"arn:aws:ec2:US East (N. Virginia):123456789012:capacity-reservation/cr-12345678\",\n      \"accountId\": \"123456789012\",\n      \"type\": \"AWS::EC2::CapacityReservation\"\n    }\n  ],\n  \"eventType\": \"AwsServiceEvent\",\n  \"recipientAccountId\": \"123456789012\",\n  \"serviceEventDetails\": {\n      \"capacityReservationId\": \"cr-12345678\",\n      \"capacityReservationState\": \"expired\"\n      }\n }"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html",
        "content": "You can use an Amazon EC2 launch template to store instance launch parameters so that you don't have to specify them every time you launch an Amazon EC2 instance. For example, you can create a launch template that stores the AMI ID, instance type, and network settings that you typically use to launch instances. When you launch an instance using the Amazon EC2 console, an AWS SDK, or a command line tool, you can specify the launch template instead of entering the parameters again.\nFor each launch template, you can create one or more numbered launch template versions. Each version can have different launch parameters. When you launch an instance from a launch template, you can use any version of the launch template. If you don't specify a version, the default version is used. You can set any version of the launch template as the default version\u2014by default, it's the first version of the launch template.\nThe following diagram shows a launch template with three versions. The first version specifies the instance type, AMI ID, subnet, and key pair to use to launch the instance. The second version is based on the first version and also specifies a security group for the instance. The third version uses different values for some of the parameters. Version 2 is set as the default version. If you launched an instance from this launch template, the launch parameters from version 2 would be used if no other version were specified.\nContents\nRestrictions for Amazon EC2 launch templates\nIAM permissions required for Amazon EC2 launch templates\nUse Amazon EC2 launch templates to control launching Amazon EC2 instances\nCreate an Amazon EC2 launch template\nModify a launch template (manage launch template versions)\nDelete a launch template or a launch template version"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/launch-template-restrictions.html",
        "content": "The following restrictions apply to launch templates and launch template versions:\nQuotas \u2013 To view the quotas for your launch templates and launch template versions, open the Service Quotas console or use the list-service-quotas AWS CLI command. Each AWS account can have up to a maximum of 5,000 launch templates per Region and up to 10,000 versions per launch template. Your accounts might have different quotas based on their age and usage history.\nParameters are optional \u2013 Launch template parameters are optional. However, you must ensure that your instance launch request includes all required parameters. For example, if your launch template does not include an AMI ID, you must specify an AMI ID when launching an instance with this launch template.\nParameters not validated \u2013 Launch template parameters are not fully validated when you create the launch template. If you specify incorrect values or use unsupported parameter combinations, instances will fail to launch using this launch template. To avoid issues, make sure to specify correct values and use supported parameter combinations. For example, to launch an instance in a placement group, you must specify a supported instance type.\nTags \u2013 You can tag a launch template, but you can't tag a launch template version.\nImmutable \u2013 Launch templates are immutable. To modify a launch template, you must create a new version of the launch template.\nVersion numbers \u2013 Launch template versions are numbered in the order in which they are created. When you create a launch template version, you can't specify the version number yourself."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/permissions-for-launch-templates.html",
        "content": "You can use IAM permissions to control whether users can list, view, create, or delete launch templates or launch template versions.\nImportant\nYou can't use resource-level permissions to restrict the resources that users can specify in a launch template when they create a launch template or launch template version. Therefore, make sure that only trusted administrators are granted permission to create launch templates and launch template versions.\nYou must grant anyone that will use a launch template the permissions required to create and access the resources that are specified in the launch template. For example:\nTo launch an instance from a shared private Amazon Machine Image (AMI), the user must have launch permission for the AMI.\nTo create EBS volumes with tags from existing snapshots, the user must have read access to the snapshots, and permissions to create and tag volumes.\nContents\nec2:CreateLaunchTemplate\nec2:DescribeLaunchTemplates\nec2:DescribeLaunchTemplateVersions\nec2:DeleteLaunchTemplate\nControl versioning permissions\nControl access to tags on launch templates\nec2:CreateLaunchTemplate\nTo create a launch template in the console or by using the APIs, the principal must have the ec2:CreateLaunchTemplate permission in an IAM policy. Whenever possible, use tags to help you control access to the launch templates in your account.\nFor example, the following IAM policy statement gives the principal permission to create launch templates only if the template uses the specified tag (purpose=testing).\n{\n    \"Sid\": \"IAMPolicyForCreatingTaggedLaunchTemplates\",\n    \"Action\": \"ec2:CreateLaunchTemplate\",\n    \"Effect\": \"Allow\",\n    \"Resource\": \"*\",\n    \"Condition\": {\n        \"StringEquals\": {\n            \"aws:ResourceTag/purpose\": \"testing\"\n        }\n    }\n}\nPrincipals who create launch templates might need some related permissions, such as:\nec2:CreateTags \u2013 To add tags to the launch template during the CreateLaunchTemplate operation, the CreateLaunchTemplate caller must have the ec2:CreateTags permission in an IAM policy.\nec2:RunInstances \u2013 To launch EC2 instances from the launch template that they created, the principal must also have the ec2:RunInstances permission in an IAM policy.\nFor resource-creating actions that apply tags, users must have the ec2:CreateTags permission. The following IAM policy statement uses the ec2:CreateAction condition key to allow users to create tags only in the context of CreateLaunchTemplate. Users cannot tag existing launch templates or any other resources. For more information, see Grant permission to tag Amazon EC2 resources during creation.\n{\n    \"Sid\": \"IAMPolicyForTaggingLaunchTemplatesOnCreation\",\n    \"Action\": \"ec2:CreateTags\",\n    \"Effect\": \"Allow\",\n    \"Resource\": \"arn:aws:ec2:region:account-id:launch-template/*\",\n    \"Condition\": {\n        \"StringEquals\": {\n            \"ec2:CreateAction\": \"CreateLaunchTemplate\"\n        }\n    }\n}\nThe IAM user who creates a launch template doesn't automatically have permission to use the launch template that they created. Like any other principal, the launch template creator needs to get permission through an IAM policy. If an IAM user wants to launch an EC2 instance from a launch template, they must have the ec2:RunInstances permission. When granting these permissions, you can specify that users can only use launch templates with specific tags or specific IDs. You can also control the AMI and other resources that anyone using launch templates can reference and use when launching instances by specifying resource-level permissions for the RunInstances call. For example policies, see Launch templates.\nec2:DescribeLaunchTemplates\nTo list and view launch templates in the account, the principal must have the ec2:DescribeLaunchTemplates permission in an IAM policy. Because Describe actions do not support resource-level permissions, you must specify them without conditions and the value of the resource element in the policy must be \"*\".\nFor example, the following IAM policy statement gives the principal permission to list and view all launch templates in the account.\n{\n    \"Sid\": \"IAMPolicyForDescribingLaunchTemplates\",\n    \"Action\": \"ec2:DescribeLaunchTemplates\",\n    \"Effect\": \"Allow\",\n    \"Resource\": \"*\"\n}\nec2:DescribeLaunchTemplateVersions\nPrincipals who list and view launch templates should also have the ec2:DescribeLaunchTemplateVersions permission to retrieve the entire set of attributes that make up the launch templates.\nTo list and view launch template versions in the account, the principal must have the ec2:DescribeLaunchTemplateVersions permission in an IAM policy. Because Describe actions do not support resource-level permissions, you must specify them without conditions and the value of the resource element in the policy must be \"*\".\nFor example, the following IAM policy statement gives the principal permission to list and view all launch template versions in the account.\n{\n    \"Sid\": \"IAMPolicyForDescribingLaunchTemplateVersions\",\n    \"Effect\": \"Allow\",\n    \"Action\": \"ec2:DescribeLaunchTemplateVersions\",\n    \"Resource\": \"*\"\n}\nec2:DeleteLaunchTemplate\nImportant\nUse caution when giving principals permission to delete a resource. Deleting a launch template might cause a failure in an AWS resource that relies on the launch template.\nTo delete a launch template, the principal must have the ec2:DeleteLaunchTemplate permission in an IAM policy. Whenever possible, use tag-based condition keys to limit the permissions.\nFor example, the following IAM policy statement gives the principal permission to delete launch templates only if the template has the specified tag (purpose=testing).\n{\n    \"Sid\": \"IAMPolicyForDeletingLaunchTemplates\",\n    \"Action\": \"ec2:DeleteLaunchTemplate\",\n    \"Effect\": \"Allow\",\n    \"Resource\": \"*\",\n    \"Condition\": {\n        \"StringEquals\": {\n            \"aws:ResourceTag/purpose\": \"testing\"\n        }\n    }\n}\nAlternatively, you can use ARNs to identify the launch template that the IAM policy applies to.\nA launch template has the following ARN.\n\"Resource\": \"arn:aws:ec2:region:account-id:launch-template/lt-09477bcd97b0d310e\"\nYou can specify multiple ARNs by enclosing them in a list, or you can specify a Resource value of \"*\" without the Condition element to allow the principal to delete any launch template in the account.\nControl versioning permissions\nFor trusted administrators, you can grant access for creating and deleting versions of a launch template, and for changing the default version of a launch template, by using IAM policies similar to the following examples.\nImportant\nBe cautious when giving principals permission to create launch template versions or modify launch templates.\nWhen you create a launch template version, you affect any AWS resources that allow Amazon EC2 to launch instances on your behalf with the Latest version.\nWhen you modify a launch template, you can change which version is the Default and therefore affect any AWS resources that allow Amazon EC2 to launch instances on your behalf with this modified version.\nYou also need to be cautious in how you handle AWS resources that interact with the Latest or Default launch template version, such as EC2 Fleet and Spot Fleet. When a different launch template version is used for Latest or Default, Amazon EC2 does not re-check user permissions for actions to be completed when launching new instances to fulfil the fleet\u2019s target capacity because there is no user interaction with the AWS resource. By granting a user permission to call the CreateLaunchTemplateVersion and ModifyLaunchTemplate APIs, the user is effectively also granted the iam:PassRole permission if they point the fleet to a different launch template version that contains an instance profile (a container for an IAM role). It means that a user can potentially update a launch template to pass an IAM role to an instance even if they don\u2019t have the iam:PassRole permission. You can manage this risk by being careful when granting permissions to who can create and manage launch template versions.\nec2:CreateLaunchTemplateVersion\nTo create a new version of a launch template, the principal must have the ec2:CreateLaunchTemplateVersion permission for the launch template in an IAM policy.\nFor example, the following IAM policy statement gives the principal permission to create launch template versions only if the version uses the specified tag (environment=production). Alternatively, you can specify one or multiple launch template ARNs, or you can specify a Resource value of \"*\" without the Condition element to allow the principal to create versions of any launch template in the account.\n{\n    \"Sid\": \"IAMPolicyForCreatingLaunchTemplateVersions\",\n    \"Action\": \"ec2:CreateLaunchTemplateVersion\",\n    \"Effect\": \"Allow\",\n    \"Resource\": \"*\",\n    \"Condition\": {\n        \"StringEquals\": {\n            \"aws:ResourceTag/environment\": \"production\"\n        }\n    }\n}\nec2:DeleteLaunchTemplateVersion\nImportant\nAs always, you should exercise caution when giving principals permission to delete a resource. Deleting a launch template version might cause a failure in an AWS resource that relies on the launch template version.\nTo delete a launch template version, the principal must have the ec2:DeleteLaunchTemplateVersion permission for the launch template in an IAM policy.\nFor example, the following IAM policy statement gives the principal permission to delete launch template versions only if the version uses the specified tag (environment=production). Alternatively, you can specify one or multiple launch template ARNs, or you can specify a Resource value of \"*\" without the Condition element to allow the principal to delete versions of any launch template in the account.\n{\n    \"Sid\": \"IAMPolicyForDeletingLaunchTemplateVersions\",\n    \"Action\": \"ec2:DeleteLaunchTemplateVersion\",\n    \"Effect\": \"Allow\",\n    \"Resource\": \"*\",\n    \"Condition\": {\n        \"StringEquals\": {\n            \"aws:ResourceTag/environment\": \"production\"\n        }\n    }\n}\nec2:ModifyLaunchTemplate\nTo change the Default version that is associated with a launch template, the principal must have the ec2:ModifyLaunchTemplate permission for the launch template in an IAM policy.\nFor example, the following IAM policy statement gives the principal permission to modify launch templates only if the launch template uses the specified tag (environment=production). Alternatively, you can specify one or multiple launch template ARNs, or you can specify a Resource value of \"*\" without the Condition element to allow the principal to modify any launch template in the account.\n{\n    \"Sid\": \"IAMPolicyForModifyingLaunchTemplates\",\n    \"Action\": \"ec2:ModifyLaunchTemplate\",\n    \"Effect\": \"Allow\",\n    \"Resource\": \"*\",\n    \"Condition\": {\n        \"StringEquals\": {\n            \"aws:ResourceTag/environment\": \"production\"\n        }\n    }\n}\nControl access to tags on launch templates\nYou can use condition keys to limit tagging permissions when the resource is a launch template. For example, the following IAM policy allows removing only the tag with the temporary key from launch templates in the specified account and Region.\n{\n    \"Sid\": \"IAMPolicyForDeletingTagsOnLaunchTemplates\",\n    \"Action\": \"ec2:DeleteTags\",\n    \"Effect\": \"Allow\",\n    \"Resource\": \"arn:aws:ec2:region:account-id:launch-template/*\",\n    \"Condition\": {\n        \"ForAllValues:StringEquals\": {\n            \"aws:TagKeys\": [\"temporary\"]\n        }\n    }\n}\nFor more information about conditions keys that you can use to control the tag keys and values that can be applied to Amazon EC2 resources, see Control access to specific tags."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/use-launch-templates-to-control-launching-instances.html",
        "content": "You can control the configuration of your Amazon EC2 instances by specifying that users can only launch instances if they use a launch template, and that they can only use a specific launch template. You can also control who can create, modify, describe, and delete launch templates and launch template versions.\nUse launch templates to control launch parameters\nA launch template can contain all or some of the parameters to configure an instance at launch. However, when you launch an instance using a launch template, you can override parameters that are specified in the launch template. Or, you can specify additional parameters that are not in the launch template.\nNote\nYou can't remove launch template parameters during launch (for example, you can't specify a null value for the parameter). To remove a parameter, create a new version of the launch template without the parameter and use that version to launch the instance.\nTo launch instances, users must have permission to use the ec2:RunInstances action. Users must also have permissions to create or use the resources that are created or associated with the instance. You can use resource-level permissions for the ec2:RunInstances action to control the launch parameters that users can specify. Alternatively, you can grant users permissions to launch an instance using a launch template. This enables you to manage launch parameters in a launch template rather than in an IAM policy, and to use a launch template as an authorization vehicle for launching instances. For example, you can specify that users can only launch instances using a launch template, and that they can only use a specific launch template. You can also control the launch parameters that users can override in the launch template. For example policies, see Launch templates.\nControl the use of launch templates\nBy default, users do not have permissions to work with launch templates. You can create a policy that grants users permissions to create, modify, describe, and delete launch templates and launch template versions. You can also apply resource-level permissions to some launch template actions to control a user's ability to use specific resources for those actions. For more information, see the following example policies: Example: Work with launch templates.\nTake care when granting users permissions to use the ec2:CreateLaunchTemplate and ec2:CreateLaunchTemplateVersion actions. You can't use resource-level permissions to control which resources users can specify in the launch template. To restrict the resources that are used to launch an instance, ensure that you grant permissions to create launch templates and launch template versions only to appropriate administrators.\nImportant security concerns when using launch templates with EC2 Fleet or Spot Fleet\nTo use launch templates, you must grant your users permissions to create, modify, describe, and delete launch templates and launch template versions. You can control who can create launch templates and launch template versions by controlling access to the ec2:CreateLaunchTemplate and ec2:CreateLaunchTemplateVersion actions. You can also control who can modify launch templates by controlling access to the ec2:ModifyLaunchTemplate action.\nImportant\nIf an EC2 Fleet or Spot Fleet is configured to use the Latest or Default launch template version, the fleet is not aware if Latest or Default are later changed to point to a different launch template version. When a different launch template version is used for Latest or Default, Amazon EC2 does not re-check permissions for actions to be completed when launching new instances to fulfil the fleet\u2019s target capacity. This is an important consideration when granting permissions to who can create and manage launch template versions, particularly the ec2:ModifyLaunchTemplate action that allows a user to change the Default launch template version.\nBy granting a user permission to use the EC2 actions for the launch template APIs, the user is effectively also granted the iam:PassRole permission if they create or update an EC2 Fleet or Spot Fleet to point to a different launch template version that contains an instance profile (a container for an IAM role). It means that a user can potentially update a launch template to pass an IAM role to an instance even if they don\u2019t have the iam:PassRole permission. For more information and an example IAM policy, see Using an IAM role to grant permissions to applications running on Amazon EC2 instances in the IAM User Guide.\nFor more information, see Control the use of launch templates and Example: Work with launch templates."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/create-launch-template.html",
        "content": "You can create an Amazon EC2 launch template by specifying your own values for the instance configuration parameters, or by getting the values from an existing launch template or Amazon EC2 instance.\nYou don't need to specify a value for every parameter in the launch template; you need only specify one instance configuration parameter to create a launch template. To indicate parameters that you choose not to specify, select Don't include in launch template when using the console. When using a command line tool, don't include the parameters to indicate that you're choosing not to specify them in the launch template.\nIf you want to specify an AMI in the launch template, you can either select an AMI, or specify a Systems Manager parameter that will point to an AMI on instance launch.\nWhen an instance is launched with a launch template, the values that are specified in the launch template are used to configure the corresponding instance parameters. If a value isn't specified in the launch template, then the default value for the corresponding instance parameter is used.\nTasks\nCreate a launch template by specifying parameters\nCreate a launch template from an existing launch template\nCreate a launch template from an instance\nUse a Systems Manager parameter instead of an AMI ID\nCreate a launch template by specifying parameters\nTo create a launch template, you must specify the launch template name and at least one instance configuration parameter.\nFor a description of each parameter, see Reference for Amazon EC2 instance configuration parameters.\nConsole\nAWS CLI\nPowerShell\nTo create a launch template using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Launch Templates, and then choose Create launch template.\nUnder Launch template name and description, do the following:\nFor Launch template name, enter a descriptive name for the launch template.\nFor Template version description, provide a brief description of this version of the launch template.\nTo tag the launch template on creation, expand Template tags, choose Add new tag, and then enter a tag key and value pair. Choose Add new tag again for each additional tag to add.\nNote\nTo tag the resources that are created when an instance is launched, you must specify the tags under Resource tags. For more information, see Step 9 in this procedure.\nUnder Application and OS Images (Amazon Machine Image), you can either keep Don't include in launch template selected, or choose the operating system (OS) for the instance, and then choose an AMI. Alternatively, you can specify a Systems Manager parameter instead of specifying an AMI. For more information, see Use a Systems Manager parameter instead of an AMI ID.\nAn AMI is a template that contains the operating system and software required to launch an instance.\nUnder Instance type, you can either keep Don't include in launch template selected, or select an instance type, or specify instance attributes and let Amazon EC2 identify the instance types with those attributes.\nNote\nSpecifying instance attributes is supported only when the launch template is used by Auto Scaling groups, EC2 Fleet, and Spot Fleet to launch instances. For more information, see Create mixed instances group using attribute-based instance type selection and Specify attributes for instance type selection for EC2 Fleet or Spot Fleet.\nIf you plan to use the launch template in the launch instance wizard or with the RunInstances API, you can't specify instance type attributes.\nThe instance type determines the hardware configuration (CPU, memory, storage, and networking capacity) and size of the host computer used for an instance.\nIf you're not sure which instance type to choose, you can do the following:\nChoose Compare instance types to compare different instance types by the following attributes: number of vCPUs, architecture, amount of memory (GiB), amount of storage (GB), storage type, and network performance.\nChoose Get advice to get guidance and suggestions for instance types from the EC2 instance type finder. For more information, see Get recommendations from EC2 instance type finder.\nNote\nIf your AWS account is less than 12 months old, you can use Amazon EC2 under the Free Tier by choosing the t2.micro instance type, or the t3.micro instance type in Regions where t2.micro is unavailable. Be aware that when you launch a t3.micro instance, it defaults to Unlimited mode, which might incur additional charges based on CPU usage. If an instance type is eligible under the Free Tier, it is labeled Free tier eligible.\nUnder Key pair (login), for Key pair name, either keep Don't include in launch template selected, or choose an existing key pair, or create a new one.\nUnder Network settings, you can either keep Dont include in launch template selected, or you can specify values for the various network settings.\nUnder Configure storage, if you specified an AMI in the launch template, the AMI includes one or more volumes of storage, including the root volume (Volume 1 (AMI Root). You can optionally specify additional volumes to attach to the instance. To add a new volume, choose Add new volume.\nUnder Resource tags, to tag the resources that are created when an instance is launched, choose Add tag, and then enter a tag key and value pair. For Resource types, specify the resources to tag on creation. You can specify the same tag for all the resources, or specify different tags for different resources. Choose Add tag again for each additional tag to add.\nYou can specify tags for the following resources that are created when a launch template is used:\nInstances\nVolumes\nElastic graphics\nSpot Instance requests\nNetwork interfaces\nNote\nTo tag the launch template itself, you must specify the tags under Template tags. For more information, see Step 3 in this procedure.\nFor Advanced details, expand the section to view the fields and optionally specify any additional parameters for your instance.\nUse the Summary panel to review your launch template configuration. You can navigate to any section by choosing its link and then make any necessary changes.\nWhen you're ready to create your launch template, choose Create launch template.\nCreate a launch template from an existing launch template\nYou can clone an existing launch template and then adjust the parameters to create a new launch template. However, you can only do this when using the Amazon EC2 console. The AWS CLI does not support cloning a template. For a description of each parameter, see Reference for Amazon EC2 instance configuration parameters.\nConsole\nTo create a launch template from an existing launch template\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Launch Templates, and then choose Create launch template.\nFor Launch template name, enter a descriptive name for the launch template.\nFor Template version description, provide a brief description of this version of the launch template.\nTo tag the launch template on creation, expand Template tags, choose Add new tag, and then enter a tag key and value pair.\nExpand Source template, and for Launch template name choose a launch template on which to base the new launch template.\nFor Source template version, choose the launch template version on which to base the new launch template.\nAdjust any launch parameters as required, and then choose Create launch template.\nCreate a launch template from an instance\nYou can clone the parameters of an existing Amazon EC2 instance and then adjust the parameters to create a launch template. For a description of each parameter, see Reference for Amazon EC2 instance configuration parameters.\nConsole\nAWS CLI\nTo create a launch template from an instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance, and choose Actions, Image and templates, Create template from instance.\nProvide a name, description, and tags, and adjust the launch parameters as required.\nNote\nWhen you create a launch template from an instance, the instance's network interface IDs and IP addresses are not included in the template.\nChoose Create launch template.\nUse a Systems Manager parameter instead of an AMI ID\nInstead of specifying an AMI ID in your launch templates, you can specify an AWS Systems Manager parameter. If the AMI ID changes, you can update the AMI ID in one place by updating the Systems Manager parameter in the Systems Manager Parameter Store. Parameters can also be shared with other AWS accounts. You can centrally store and manage AMI parameters in one account and share them with every other account that needs to reference them. By using a Systems Manager parameter, all your launch templates can be updated in a single action.\nA Systems Manager parameter is a user-defined key-value pair that you create in the AWS Systems Manager Parameter Store. The Parameter Store provides a central place to store your application configuration values.\nIn the following diagram, the golden-ami parameter is first mapped to the original AMI ami-aabbccddeeffgghhi in the Parameter Store. In the launch template, the value for the AMI ID is golden-ami. When an instance is launched using this launch template, the AMI ID resolves to ami-aabbccddeeffgghhi. Later, the AMI is updated resulting in a new AMI ID. In the Parameter Store, the golden-ami parameter is mapped to the new ami-00112233445566778. The launch template remains unchanged. When an instance is launched using this launch template, the AMI ID resolves to the new ami-00112233445566778.\nSystems Manager parameter format for AMI IDs\nLaunch templates require that user-defined Systems Manager parameters adhere to the following format when used in place of an AMI ID:\nParameter type: String\nParameter data type: aws:ec2:image \u2013 This ensures that Parameter Store validates that the value you enter is in the proper format for an AMI ID.\nFor more information about creating a valid parameter for an AMI ID, see Creating Systems Manager parameters in the AWS Systems Manager User Guide.\nSystems Manager parameter format in launch templates\nTo use a Systems Manager parameter in place of an AMI ID in a launch template, you must use one of the following formats when specifying the parameter in the launch template:\nTo reference a public parameter:\nresolve:ssm:public-parameter\nTo reference a parameter stored in the same account:\nresolve:ssm:parameter-name\nresolve:ssm:parameter-name:version-number \u2013 The version number itself is a default label\nresolve:ssm:parameter-name:label\nTo reference a parameter shared from another AWS account:\nresolve:ssm:parameter-ARN\nresolve:ssm:parameter-ARN:version-number\nresolve:ssm:parameter-ARN:label\nParameter versions\nSystems Manager parameters are versioned resources. When you update a parameter, you create new, successive versions of the parameter. Systems Manager supports parameter labels that you can map to specific versions of a parameter.\nFor example, the golden-ami parameter can have three versions: 1, 2, and 3. You can create a parameter label beta that maps to version 2, and a parameter label prod that maps to version 3.\nIn a launch template, you can specify version 3 of the golden-ami parameter by using either of the following formats:\nresolve:ssm:golden-ami:3\nresolve:ssm:golden-ami:prod\nSpecifying the version or label is optional. If a version or label is not specified, the latest version of the parameter is used.\nSpecify a Systems Manager parameter in a launch template\nYou can specify a Systems Manager parameter in a launch template instead of an AMI ID when you create a launch template or a new version of a launch template.\nConsole\nAWS CLI\nTo specify a Systems Manager parameter in a launch template\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Launch Templates, and then choose Create launch template.\nFor Launch template name, enter a descriptive name for the launch template.\nUnder Application and OS Images (Amazon Machine Image), choose Browse more AMIs.\nChoose the arrow button to the right of the search bar, and then choose Specify custom value/Systems Manager parameter.\nIn the Specify custom value or Systems Manager parameter dialog box, do the following:\nFor AMI ID or Systems Manager parameter string, enter the Systems Manager parameter name using one of the following formats:\nTo reference a public parameter:\nresolve:ssm:public-parameter\nTo reference a parameter stored in the same account:\nresolve:ssm:parameter-name\nresolve:ssm:parameter-name:version-number\nresolve:ssm:parameter-name:label\nTo reference a parameter shared from another AWS account:\nresolve:ssm:parameter-ARN\nresolve:ssm:parameter-ARN:version-number\nresolve:ssm:parameter-ARN:label\nChoose Save.\nSpecify any other launch template parameters as needed, and then choose Create launch template.\nFor more information, see Create a launch template by specifying parameters.\nVerify that a launch template gets the correct AMI ID\nTo resolve the Systems Manager parameter to the actual AMI ID\nUse the describe-launch-template-versions command and include the --resolve-alias parameter.\naws ec2 describe-launch-template-versions \\\n    --launch-template-name my-launch-template \\\n    --versions $Default \\\n    --resolve-alias\nThe response includes the AMI ID for ImageId. In this example, when an instance is launched using this launch template, the AMI ID resolves to ami-0ac394d6a3example.\n{\n    \"LaunchTemplateVersions\": [\n        {\n            \"LaunchTemplateId\": \"lt-089c023a30example\",\n            \"LaunchTemplateName\": \"my-launch-template\",\n            \"VersionNumber\": 1,\n            \"CreateTime\": \"2022-12-28T19:52:27.000Z\",\n            \"CreatedBy\": \"arn:aws:iam::123456789012:user/Bob\",\n            \"DefaultVersion\": true,\n            \"LaunchTemplateData\": {\n                \"ImageId\": \"ami-0ac394d6a3example\",\n                \"InstanceType\": \"t3.micro\",\n            }\n        }\n    ]\n}\nRelated resources\nFor more information about working with Systems Manager parameters, see the following reference materials in the Systems Manager documentation.\nFor information about how to look up the AMI public parameters supported by Amazon EC2, see Calling AMI public parameters.\nFor information about sharing parameters with other AWS accounts or through AWS Organizations, see Working with shared parameters.\nFor information about monitoring whether your parameters are created successfully, see Native parameter support for Amazon Machine Image IDs.\nLimitations\nOnly EC2 Fleets of type instant support using a launch template that has a Systems Manager parameter specified in place of an AMI ID.\nEC2 Fleets of type maintain and request, and Spot Fleets do not support using a launch template that has a Systems Manager parameter specified in place of an AMI ID. For EC2 Fleets of type maintain and request, and for Spot Fleets, if you specify an AMI in the launch template, you must specify the AMI ID.\nIf you use attribute-based instance selection in your EC2 Fleet, you can't specify a Systems Manager parameter in place of an AMI ID. When using attribute-based instance selection, you must specify the AMI ID.\nAmazon EC2 Auto Scaling provides other restrictions. For more information, see Use AWS Systems Manager parameters instead of AMI IDs in launch templates in the Amazon EC2 Auto Scaling User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-launch-template-versions.html",
        "content": "Launch templates are immutable; after you create a launch template, you can't modify it. Instead, you can create a new version of the launch template that includes any changes you require.\nYou can create different versions of a launch template, set the default version, describe a launch template version, and delete versions you no longer need.\nTasks\nCreate a launch template version\nSet the default launch template version\nDescribe a launch template version\nCreate a launch template version\nWhen you create a launch template version, you can specify new launch parameters or use an existing version as the base for the new version. For a description of each parameter, see Reference for Amazon EC2 instance configuration parameters.\nConsole\nAWS CLI\nPowerShell\nTo create a launch template version\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Launch Templates.\nSelect a launch template, and then choose Actions, Modify template (Create new version).\nFor Template version description, enter a description for this version of the launch template.\n(Optional) Expand Source template and select a version of the launch template to use as a base for the new launch template version. The new launch template version inherits the launch parameters from this launch template version.\nModify the launch parameters as required.\nChoose Create launch template.\nSet the default launch template version\nYou can set the default version for the launch template. When you launch an instance from a launch template and do not specify a version, the instance is launched using the parameters of the default version.\nConsole\nAWS CLI\nPowerShell\nTo set the default launch template version\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Launch Templates.\nSelect the launch template and choose Actions, Set default version.\nFor Template version, select the version number to set as the default version and choose Set as default version.\nDescribe a launch template version\nUsing the console, you can view all the versions of the selected launch template, or get a list of the launch templates whose latest or default version matches a specific version number. Using the AWS CLI, you can describe all versions, individual versions, or a range of versions of a specified launch template. You can also describe all the latest versions or all the default versions of all the launch templates in your account.\nConsole\nAWS CLI\nPowerShell\nTo describe a launch template version\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Launch Templates.\nYou can view a version of a specific launch template, or get a list of the launch templates whose latest or default version matches a specific version number.\nTo view a version of a launch template: Select the launch template. On the Versions tab, from Version, select a version to view its details.\nTo get a list of all the launch templates whose latest version matches a specific version number: From the search bar, choose Latest version, and then choose a version number.\nTo get a list of all the launch templates whose default version matches a specific version number: From the search bar, choose Default version, and then choose a version number."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/delete-launch-template.html",
        "content": "If you no longer require a launch template, you can delete it. Deleting a launch template deletes all of its versions. If you only want to delete a specific version of a launch template, you can do so while retaining the other versions of the launch template.\nDeleting a launch template or launch template version doesn't affect any instances that you've launched from the launch template.\nDelete a launch template and all of its versions\nIf you no longer require a launch template, including all of its versions, you can delete the launch template. Deleting a launch template deletes all of its versions.\nConsole\nAWS CLI\nPowerShell\nTo delete a launch template and all its versions\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Launch Templates.\nSelect the launch template and choose Actions, Delete template.\nEnter Delete to confirm deletion, and then choose Delete.\nDelete a launch template version\nIf you no longer require a launch template version, you can delete it.\nConsiderations\nYou can't replace the version number after you delete it.\nYou can't delete the default version of the launch template; you must first assign a different version as the default. If the default version is the only version for the launch template, you must delete the entire launch template.\nWhen using the console, you can delete one launch template version at a time. When using the AWS CLI, you can delete up to 200 launch template versions in a single request. To delete more than 200 versions in a single request, you can delete the launch template, which also deletes all of its versions.\nConsole\nAWS CLI\nPowerShell\nTo delete a launch template version\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Launch Templates.\nSelect the launch template and choose Actions, Delete template version.\nSelect the version to delete and choose Delete."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/LaunchingAndUsingInstances.html",
        "content": "An instance is a virtual server in the AWS Cloud. You launch an instance from an Amazon Machine Image (AMI). The AMI provides the operating system, application server, and applications for your instance.\nWhen you sign up for AWS, you can get started with Amazon EC2 for free using the AWS Free Tier. You can use the free tier to launch and use a t2.micro instance for free for 12 months (in Regions where t2.micro is unavailable, you can use a t3.micro instance under the free tier). You incur charges for your instance or usage that counts against your Free Tier limits while the instance is running, even if it remains idle. For more information, see Amazon EC2 pricing.\nWhen you launch your instance, you can launch your instance in a subnet that is associated with one of the following resources:\nAn Availability Zone \u2013 This option is the default.\nA Local Zone \u2013 To launch an instance in a Local Zone, you must opt in to the Local Zone, and then create a subnet in the zone. For more information, see Get started with Local Zones.\nA Wavelength Zone \u2013 To launch an instance in a Wavelength Zone, you must opt in to the Wavelength Zone, and then create a subnet in the zone. For information about how to launch an instance in a Wavelength Zone, see Get started with AWS Wavelength.\nAn Outpost \u2013 To launch an instance in an Outpost, you must create an Outpost. For information about how to create an Outpost, see Get started with AWS Outposts.\nAfter you launch your instance, you can connect to it and use it. To begin, the instance state is pending. When the instance state is running, the instance has started booting. There might be a short time before you can connect to the instance. Note that bare metal instance types might take longer to launch.\nDepending on how you plan to connect to your instance, you might want to make certain configurations while launching your instance. These configurations could include specifying inbound security group rules for certain traffic or associating an instance profile role. For more information on the connection methods you can use to connect and their requirements, see Connect to your EC2 instance.\nThe instance receives a public DNS name that you can use to contact the instance from the internet. The instance also receives a private DNS name that other instances within the same VPC can use to contact the instance.\nWhen you're finished with an instance, to avoid incurring unnecessary costs, be sure to terminate it. For more information, see Terminate Amazon EC2 instances.\nThe following methods are some of the ways that you can launch an instance.\nMethod Tool Documentation\nUse the launch instance wizard to specify the launch parameters.\nAmazon EC2 console\nLaunch an EC2 instance using the launch instance wizard in the console\nCreate a launch template and launch the instance from the launch template.\nAmazon EC2 console\nLaunch EC2 instances using a launch template\nUse an existing instance as the base. Amazon EC2 console\nLaunch an EC2 instance using details from an existing instance\nUse an AMI that you purchased from the AWS Marketplace.\nAmazon EC2 console\nLaunch an Amazon EC2 instance from an AWS Marketplace AMI\nUse an AMI that you specify.\nAWS CLI\nLaunch, list, and close Amazon EC2 instances for the AWS CLI\nUse an AMI that you specify. AWS Tools for Windows PowerShell\nLaunch an Amazon EC2 Instance Using Windows PowerShell\nUse EC2 Fleet to provision capacity across different EC2 instance types and Availability Zones, and across On-Demand Instance, Reserved Instance, and Spot Instance purchasing options.\nAWS CLI\nEC2 Fleet and Spot Fleet\nUse a AWS CloudFormation template to specify an instance.\nAWS CloudFormation\nAWS::EC2::Instance in the AWS CloudFormation User Guide\nUse a language-specific AWS SDK to launch an instance. AWS SDK\nAWS SDK for .NET\nAWS SDK for C++\nAWS SDK for Go\nAWS SDK for Java\nAWS SDK for JavaScript\nAWS SDK for PHP V3\nAWS SDK for Python\nAWS SDK for Ruby V3"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-launch-tutorials.html",
        "content": "There are different ways to launch and configure an Amazon EC2 instance. The method and configuration you use depends on your specific use case.\nThe following tutorials can help you learn how to launch EC2 instances. If you're new to Amazon EC2, we recommend that you start with the first tutorial. The tutorials start by introducing you to the basics, and help you build on the basics by introducing more configuration options.\nObjective Link to tutorial\nLaunch my very first EC2 instance\nLearn how to quickly launch an Amazon EC2 instance by using the default settings in the Amazon EC2 launch instance wizard. Also learn how to review the instance configuration fields and terminate the instance.\nDuration: 10 minutes\nTutorial 1: Launch my very first Amazon EC2 instance\nLaunch a test EC2 instance and connect to it\nLearn how to launch an Amazon EC2 instance that you can use for testing purposes. This instance will have no advanced configuration and won't store sensitive information. You will also learn about the essential instance configuration settings, how to connect to the instance, and how to stop it.\nDuration: 30 minutes\nTutorial 2: Launch a test EC2 instance and connect to it\nLooking for other tutorials?\nTutorial: Install a LAMP server on AL2023\nTutorial: Configure SSL/TLS on AL2023\nTutorial: Host a WordPress blog on AL2023\nTutorial: Complete the configuration required to connect to your instance using EC2 Instance Connect\nTutorial: Connect an Amazon EC2 instance to an Amazon RDS database"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/tutorial-launch-my-first-ec2-instance.html",
        "content": "Tutorial objective\nLearn how to quickly launch an Amazon EC2 instance by using the default settings in the Amazon EC2 launch instance wizard. Also learn how to review the instance configuration fields and terminate the instance.\nEC2 experience Beginner\nDuration\n10 minutes\nCost\nFree tier eligible\nWhen you sign up for AWS, you can get started with Amazon EC2 using the AWS Free Tier. If you created your AWS account less than 12 months ago, and have not already exceeded the Free Tier benefits for Amazon EC2, it won't cost you anything to complete this tutorial, because we help you select options that are within the Free Tier benefits. Otherwise, you'll incur the standard Amazon EC2 usage fees from the time that you launch the instance (even if it remains idle) until you terminate it.\nFor instructions to determine whether you're eligible for the Free Tier, see Track your Free Tier usage for Amazon EC2.\nPrerequisites\nYou must have an AWS account, configure a user with administrator access, and use the administrator user to sign into the AWS Management Console. Not sure how to do this? Try this tutorial: Setting Up Your AWS Environment\nYou must have general familiarity with the AWS console. Not sure where to start? Try this getting started guide: Getting Started with the AWS Management Console\nTutorial overview\nThis tutorial is designed for beginners with no prior experience using Amazon EC2. We'll guide you through the steps for creating\u2014we call it launching\u2014your very first EC2 instance using the EC2 console. An instance is essentially a web server in the AWS Cloud. After launching your instance, we'll show you how to find it in the console. Finally, to help you manage costs, we'll show you how to delete\u2014we call it terminate\u2014your instance.\nThis tutorial is divided into the following short tasks. You must complete each task before moving to the next one.\nTask 1: Launch your instance\nTask 2: Find your instance\nTask 3: View your instance configuration\nTask 4: Terminate your instance\nTask 1: Launch your instance\nIn this task, you'll take the quickest path to launching your instance by doing only the essentials. We'll use the EC2 launch instance wizard, a web-based form that provides all the fields for configuring and launching your instance. It simplifies the process by providing default values for the instance configuration fields.\nBefore you start\nMake sure you've completed the prerequisites listed in the preceding table, including signing into the AWS Management Console with your administrator user.\nFollow these steps to quickly launch your instance\nOpen the Amazon EC2 console:\nGo to https://console.aws.amazon.com/ec2/.\nOpen the EC2 launch instance wizard:\nFrom the EC2 dashboard, choose Launch instance.\nThe Launch an instance web-based form opens. This is the EC2 launch instance wizard.\nName your instance:\nUnder Name and tags, for Name, enter a descriptive name like My first EC2 instance.\nWhile naming your instance isn't required, it helps identify your instance later.\nProceed without a key pair:\nUnder Key pair (login), for Key pair name, choose Proceed without a key pair (Not recommended).\nA key pair can be used for secure login. However, because we won't be logging into the instance in this tutorial, you don't need a key pair for now.\nLaunch your instance:\nIn the Summary panel on the right, choose Launch instance.\nAmazon EC2 quickly launches your instance using the default settings. A Success banner confirms the launch.\nCongratulations! You've successfully launched your very first EC2 instance!\nTask 2: Find your instance\nIn this task, you'll locate the instance that you just launched in the EC2 console.\nFollow these steps to find your instance in the EC2 console\nOpen the Instances page:\nIf you're still on the success page, choose Instances in the breadcrumb at the top of the screen. You might need to choose the three ellipses first to access it.\nIf you've navigated away, choose Instances from the navigation pane.\nLocate your instance:\nIn the Name column, find your instance by the name you gave it.\nTask 3: View your instance configuration\nIn this task, you'll become familiar with viewing your instance's configuration details.\nFollow these steps to view your instance's configuration\nLocate the instance ID:\nIn the Instance ID column, take note of your instance's unique ID. It begins with i\u2013 followed by 17 alphanumeric characters, for example, i-01aeed690c9fb5322.\nThe instance ID is automatically assigned to your instance when it's launched.\nOpen the instance details page:\nIn the Instance ID column, choose the ID link to open the instance details page where you can review its configuration.\nExplore instance configuration details:\nTake a few minutes to explore the configuration details of your instance. In the next tutorial, we'll dive deeper into the configuration. For now, use this time to familiarize yourself with the instance details page.\nTip: To quickly find a field, press Ctrl+F or command+F on your keyboard.\nInstance type: Can you find the instance type? It's either t2.micro or t3.micro.\nPublic IPv4 address: Can you find the public IPv4 address that was allocated to your instance? It's in a format similar to the following example: 34.242.148.128.\nInstance owner: Can you identify the owner of this instance? It's you! Your AWS account number is listed under the Owner field.\nInstance tags: The name you gave your instance is actually a tag. Can you find your instance tags? Choose the Tags tab. The key is Name, and the value is the name you provided.\nLaunch time: Can you find when you launched your instance? Choose the Details tab and find the Launch time field.\nInstance state: Can you verify the state of your instance? It should be Running.\nTake a few more minutes to explore the other instance configuration fields. When you're ready, proceed to the next task.\nTask 4: Terminate your instance\nIn this task, you'll delete your instance to preserve your Free Tier benefits. In EC2, terminate is the term used for deleting an instance.\nFollow these steps to terminate your instance\nInitiate termination:\nIf you're still on the instance details page, choose the Instance state menu (top right), and then choose Terminate (delete) instance.\nIf you've navigated away, choose Instances from the navigation pane. Then, on the Instances page, select the checkbox next to the name of your instance, and then choose the Instance state menu (top right), and choose Terminate (delete) instance.\nConfirm termination:\nIn the Terminate (delete) instance window that opens, choose the Terminate (delete) button to confirm that you want to terminate your instance.\nMonitor instance state:\nOn the Instances page, check the Instance state column. The state of your instance changes to Shutting-down. If you don't see the full text, try widening the column.\nOnce the instance has shut down, Amazon EC2 deletes the instance, and it disappears from the Instances page.\nKey takeaways\nIn this tutorial, you covered the following key concepts:\nInstance refers to an Amazon EC2 web server in the AWS Cloud.\nLaunch refers to creating an EC2 instance.\nTerminate refers to deleting an EC2 instance.\nThe EC2 launch instance wizard contains default values for instance configuration, allowing for a quick and easy instance launch.\nThe instance ID is a unique identifier automatically assigned to your instance, while the instance name is an optional tag that you can assign for easier identification.\nNext steps\nTo build confidence in launching and terminating instances, consider repeating the steps in this tutorial. Be sure to terminate any instances that you launch to preserve your Free Tier benefits.\nOnce you're comfortable with these basics, move onto the next tutorial, which provides a deeper dive into key instance configuration fields."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/tutorial-launch-a-test-ec2-instance.html",
        "content": "Tutorial objective\nLearn how to launch an Amazon EC2 instance that you can use for testing purposes. This instance will have no advanced configuration and won't store sensitive information. You will also learn about the essential instance configuration settings, how to connect to the instance, and how to stop it.\nEC2 experience Beginner\nDuration\n30 minutes\nCost\nFree tier eligible\nWhen you sign up for AWS, you can get started with Amazon EC2 using the AWS Free Tier. If you created your AWS account less than 12 months ago, and have not already exceeded the Free Tier benefits for Amazon EC2, it won't cost you anything to complete this tutorial, because we help you select options that are within the Free Tier benefits. Otherwise, you'll incur the standard Amazon EC2 usage fees from the time that you launch the instance (even if it remains idle) until you terminate it.\nFor instructions to determine whether you're eligible for the Free Tier, see Track your Free Tier usage for Amazon EC2.\nPrerequisites\nComplete Tutorial 1: Launch my very first Amazon EC2 instance.\nTutorial overview\nThis tutorial is designed for beginners who want to launch an EC2 instance that they can use for testing purposes.\nWe'll explain the key instance configuration fields, and then guide you through the steps for launching a test instance using the default values in the EC2 console. After launching your instance, we'll show you how to log into\u2014we call it connect to\u2014your instance. We'll also show you how to create a key pair, which is required for connecting to your instance in this tutorial. Finally, to help manage costs, we'll show you to stop your instance to avoid usage charges.\nYou'll launch a Linux instance in this tutorial. While the steps in this tutorial can be used for launching instances with other operating systems, the instructions for connecting to an instance are specific to Linux instances.\nThis tutorial is divided into the following short tasks. You must complete each task before moving to the next one.\nTask 1: Familiarize yourself with key components for launching an instance\nTask 2: Review a technical diagram\nTask 3: Create a key pair\nTask 4: Launch your test instance\nTask 5: Find your instance\nTask 6: View your instance configuration\nTask 7: Familiarize yourself with key components for connecting to an instance\nTask 8: Connect to your instance\nTask 9: Stop your instance\nTask 1: Familiarize yourself with key components for launching an instance\nIn this task, you'll explore the key components required to launch an EC2 instance. These are the AMI, instance type, key pair, security group, network (VPC and subnet), and Amazon EBS volume. You'll also explore an optional component, the Name tag.\nTo help visualize these components, think of an instance like a rental house. Just as renting a house gives you a place to live without your needing to own and maintain the property, EC2 instances provide computing power without your needing to own and maintain the underlying infrastructure.\nWhen deciding on the kind of instance to launch, you'll consider the configuration criteria for the instance, just as you would consider the criteria you want from a house. While this analogy simplifies things, it offers a helpful way to visualize the components until you're more familiar with them.\nAMI \u2013 House building materials and amenities: The Amazon Machine Image (AMI) determines the operating system and applications your instance starts with. This is like choosing the building materials (like brick, steel, or wood) and amenities (like appliances and furnishings) of your house. A base AMI is like an unfurnished house with basic appliances, while a custom AMI with pre-installed software is like a fully furnished house.\nInstance type \u2013 House size and power: The instance type defines the size and capabilities of your EC2 instance, much like choosing the size of a house, number of rooms, and energy capacity. Each instance type determines the amount of CPU, memory, storage, and networking capacity of your instance. The selected AMI might limit what instance types you can choose.\nKey pair \u2013 Front door key: A key pair is like the lock and key to the front door of your house. The public key acts as the lock on your instance, while the private key is the key you must keep securely on your local computer. If someone else gets hold of your private key, they can access your instance, much like how someone with your front door key can enter your house.\nNetwork (VPC and subnet) \u2013 Property boundary, sectioned areas, and house number: Your virtual private cloud (VPC) is like the entire property where your house is located, and the subnet is the sectioned-off area around the house. If you have multiple houses (instances) on your property, you might want to section them off into distinct areas (different subnets) depending on their purpose. Some houses allow visitors to roam freely through the gardens (public subnets with internet access), while others have fenced-off gardens to restrict entry (private subnets without internet access). Each subnet contains a range of IP addresses, much like house numbers, which can be assigned to instances within the subnet.\nSecurity group \u2013 The gatekeeper: The security group acts like a gatekeeper, controlling who is allowed to visit your house. It enforces a set of rules that controls what traffic is allowed to reach your instance. For example, a rule that allows SSH traffic from a specific IP address is like the gatekeeper letting in only a specific person to deliver groceries. Similarly, allowing HTTPS traffic from anywhere is like letting the public come and take a look at the exterior of your house.\nAmazon EBS volume \u2013 Storage units: EBS volumes are like storage units where you can store your belongings. Each instance has a root volume (where the AMI is stored), and you can add more volumes (storage) at any time as needed.\nName tag \u2013 The house name: The Name tag functions like a sign on a house, helping you easily identify who lives there. While the Name tag makes it easier to distinguish between instances, it's not required when launching an instance.\nTask 2: Review a technical diagram\nIn this task, you'll become familiar with a typical technical diagram that we use in the AWS documentation. The following diagram represents the configuration for the test instance you'll launch in this tutorial. In the previous task, we introduced these components using the analogy of a rental house. Now, we'll focus on the actual EC2 components themselves. The numbered labels correspond to the descriptions that follow.\nAMI \u2013 The AMI is the image you choose when launching an instance. It's a template that contains the operating system and software to run on your instance. For example, if you want to launch a Linux instance, you can choose the Amazon Linux 2023 AMI. Or, if you want to launch a Windows instance, you can choose the Microsoft Windows Server 2022 Base AMI. The AMI catalog in the Amazon EC2 console contains 1000s of images to choose from.\nInstance type \u2013 The instance type is the hardware that determines the CPU, memory, storage, and networking capacity of the host computer used for your instance. Amazon EC2 offers over 600 instance types to choose from, each varying in hardware configuration and size, allowing you to choose the best fit for your application's needs.\nKey pair \u2013 A key pair is set of security credentials that you use to prove your identity when connecting to your instance. The public key is on your instance and the private key is on your local computer.\nIn EC2, connecting to your instance refers to logging into your instance from your local computer. While there are other ways to securely connect to your instance, in this tutorial we use a key pair.\nNetwork \u2013 The network is made up of a VPC and one or more subnets. A VPC is a virtual network within the AWS Cloud. Every AWS customer has their own VPC dedicated to their AWS account. You\u2019ll launch your instance into a subnet in your VPC. A subnet is a range of IP addresses within a VPC. Your default subnet is a public subnet, which means it will assign a public IP address and provide internet access to your instance from outside the Amazon network.\nSecurity group \u2013 A security group acts as a firewall to control the traffic to your instance. A security group contains rules that allow certain types of traffic to enter your instance. To connect through SSH from your local computer to your instance (using your key pair), you need a rule that allows SSH traffic from your local computer.\nEBS volume \u2013 An Amazon EBS volume is a storage device that functions like a physical hard drive. Your instance comes with a root volume, which is a special EBS volume that stores the AMI with the operating system and software needed to boot your instance. You can optionally add data volumes. However, since your test instance won't store any sensitive data, you don't need additional encrypted data volumes.\nCongratulations! You've completed the conceptual tasks in this tutorial. In the following tasks, you'll use the Amazon EC2 console to create the components you've learned about.\nTask 3: Create a key pair\nIn this task, you'll create a key pair. A key pair consists of two parts: a public key, which you'll add to your instance, and a matching private key, which you'll use to securely connect to your instance. In the next task, you'll select this key pair when launching your instance, which automatically adds the public key to the instance. It's crucial to store the private key securely on your local computer, because anyone with access to it can connect to your instance.\nIf you prefer to use an existing key pair when you launch your test instance, feel free to skip this task. Otherwise, proceed to create a new key pair.\nBefore you start\nMake sure you've completed the prerequisites listed in the preceding table, including signing into the AWS Management Console with your administrator user.\nFollow these steps to create a key pair\nOpen the Amazon EC2 console:\nGo to https://console.aws.amazon.com/ec2/.\nNavigate to the Key pairs console page:\nIn the navigation pane, under Network & Security, choose Key Pairs.\nIf you previously created key pairs, they appear in the table.\nIf no key pairs exist, the table is empty.\nCreate a new key pair:\nChoose the Create key pair button (top right) to open the Create key pair web-based form, and enter your key pair details, as follows:\nName your key pair: For Name, enter a name that will help you recognize the key pair, like test-instance-key-pair.\nThe name can be up to 255 ASCII characters long. It can\u2019t include leading or trailing spaces.\nChoose the key pair type: For Key pair type, choose ED25519.\nLinux instances support both RSA and ED25519 key types, while Windows instances support only RSA. Since you'll be launching a Linux instance in this tutorial, you can use an ED25519 key.\nChoose the private key file format: For Private key file format, choose .pem.\nThis is the format in which your private key file will be saved.\nSave the public key to Amazon EC2 and download the private key:\nChoose the Create key pair button (bottom right).\nAmazon EC2 saves the public key, while your browser downloads the private key file automatically to your local computer. The file is named according to the name that you specified for the key pair, and the extension is the file format that you chose. Move the private key file to a secure location on your computer.\nImportant\nThis is the only chance you'll have to save the private key file.\nSet the permissions on the key (for macOS and Linux users):\nIf you plan to connect to your instance using SSH on a macOS or Linux computer, you must set the correct permissions for your private key file. Open a terminal window and run the following command, replacing test-instance-key-pair with the name of your key pair:\nchmod 400 test-instance-key-pair.pem\nThis command ensures that only you can read the private key file, which is necessary for establishing a secure connection to your instance. Without these permissions, you won\u2019t be able to connect using this key pair.\nCongratulations! You've successfully created a key pair!\nTask 4: Launch your test instance\nIn this task, you'll quickly launch a test instance using the EC2 launch instance wizard. You'll configure the main instance configuration settings for a Linux instance and use the default values for the other fields.\nTo help you manage costs, we recommend choosing Free tier eligible components.\nFollow these steps to launch a test instance\nOpen the Amazon EC2 console:\nGo to https://console.aws.amazon.com/ec2/.\nOpen the EC2 launch instance wizard:\nFrom the EC2 dashboard, choose Launch instance.\nThe Launch an instance web-based form opens. This is the EC2 launch instance wizard.\nName your instance:\nUnder Name and tags, for Name, enter a descriptive name like Test instance.\nThe instance name is a tag, where the key is Name, and the value is the name that you specify.\nTip: For test instances, a name tag is sufficient. However, for production instances, it\u2019s best practice to establish a tagging policy to standardize tagging across all your resources.\nChoose your operating system and software\u2014the Amazon Machine Image (AMI):\nUnder Application and OS Images (Amazon Machine Image), for Amazon Machine Image (AMI), the default selection is Amazon Linux 2023 AMI. This AMI is marked Free tier eligible. In this tutorial, you'll be launching a Linux instance, so leave the default setting to stay within the Free Tier.\nChoose your hardware\u2014the instance type:\nUnder Instance type, for Instance type, keep the default selection (either t2.micro or t3.micro) for this tutorial. The default instance type is free tier eligible and its hardware is suitable for your test instance.\nPrepare for secure login with a key pair:\nUnder Key pair (login), for Key pair name, choose the key pair you created in the previous task. If you don't see your key pair in the list, choose the refresh icon (to the right of the list).\nWhen your instance launches, it will place the public key on the instance. To connect to your instance after it has launched, you'll use the corresponding private key that you downloaded in the previous task.\nConfigure the network settings to enable internet access:\nUnder Network settings, the Network (your VPC) and Subnet fields are configured by default. Keep the default settings for this tutorial to help you get started quickly. If you haven\u2019t modified your default subnet, your instance will have internet access.\nTip: Your default subnet is a public subnet, which means it will assign a public IP address and provide internet access to your instance from outside the Amazon network. For test instances, it\u2019s okay to use the default subnet settings that provide internet access. However, for production instances, it\u2019s best practice to only assign a public IP address and use a subnet with internet access when absolutely necessary.\nSet up the instance firewall (security group):\nUnder Network settings, under Firewall (security groups), keep the checkbox Allow SSH traffic from Anywhere (0.0.0.0) selected. This will create a new security group for your test instance that allows SSH traffic from any IP address.\nA security group acts as a firewall to control the traffic to your instance. To connect through SSH from your local computer to your instance, you need a rule that allows SSH traffic from your local computer.\nTip: The IP address of your local computer might change over time if your internet service provider uses dynamic IP assignment. We're assuming that when you use an instance for testing purposes, you won't use the instance to store sensitive information, and therefore security measures can be less restrictive. For test instances, it's generally acceptable to allow traffic from any IP address (0.0.0.0/0) so that you can always connect even if your IP address changes. However, for production instances, especially those with sensitive data, it's best practice to allow traffic only from known IP addresses.\nConfigure the instance storage:\nUnder Configure storage, the Root volume (Encrypted) fields are configured by default. Leave the settings as they are to remain free tier eligible.\nSince our test instance won't store any sensitive data, we don't need additional encrypted data volumes.\nReview the instance configuration:\nIn the Summary panel on the right, you can review your high-level settings before launching your instance.\nLaunch your instance:\nWhen you're ready to launch your instance, in the Summary panel, choose Launch instance.\nAmazon EC2 quickly launches your instance using the settings that you specified. If you didn't specify a setting, the default is used. A Success banner confirms the launch.\nCongratulations! You've successfully launched your test instance!\nTask 5: Find your instance\nIn this task, you'll locate the instance that you just launched in the EC2 console.\nFollow these steps to find your instance in the EC2 console\nOpen the Instances page:\nIf you're still on the success page, choose the instance ID in the Success banner.\nIf you've navigated away, choose Instances from the navigation pane.\nLocate your instance:\nIn the Name column, find your instance by the name you gave it.\nTask 6: View your instance configuration\nIn this task, you'll become familiar with viewing your instance's configuration details.\nFollow these steps to view your instance's configuration\nLocate your instance:\nIn the Name column, find your instance by the name you gave it.\nOpen the instance details page:\nSelect the checkbox next to the name of your instance, and then choose the Actions menu (top right), and choose View details to open the instance details page where you can review its configuration.\nIn the previous tutorial, you chose the instance's ID link to open the instance details page. You'll discover that there's more than one way to accomplish a task in the EC2 console.\nExplore instance configuration details:\nTake a few minutes to explore the configuration details of your instance.\nTip: To quickly find a field, press Ctrl+F or command+F on your keyboard.\nAMI: Can you find the AMI that you used to launch your instance? You can find the information in AMI ID and AMI name on the Details tab.\nInstance type: Can you find the instance type? It's either t2.micro or t3.micro.\nKey pair: Can you find the key pair that you selected when you launched your instance? It's specified for Key pair assigned at launch. Note that if you change the key pair in the future, the value here won't change.\nVPC: Can you find the ID of your VPC? You'll find all networking-related configuration settings on the Networking tab. The VPC ID is in a format similar to the following example: vpc-1a2b3c4d\nSubnet: Can you find the ID of the subnet in which you launched your instance? It's in a format similar to the following example: subnet-1a2b3c4d\nPublic IPv4 address: Can you find the public IPv4 address that was allocated to your instance? It's in a format similar to the following example: 34.242.148.128.\nSecurity group: Can you find the inbound rule that was created to allow SSH traffic from anywhere (0.0.0.0./0)? You'll find all security-related configuration settings on the Security tab.\nStorage: Can you find the volume that was created for this instance? You'll find all storage-related configuration settings on the Storage tab.\nInstance tags: The name you gave your instance is actually a tag. Can you find your instance tags? Choose the Tags tab. The key is Name, and the value is the name you provided.\nInstance state: Can you verify the state of your instance? It should be Running.\nTake a few more minutes to explore the other instance configuration fields. When you're ready, proceed to the next task.\nTask 7: Familiarize yourself with key components for connecting to an instance\nIn this task, you'll explore the key components required to connect to an EC2 instance. These are the connection protocol, public DNS, security group, key pair, and instance username.\nTo help visualize these components, think of connecting to an instance like going to your house:\nConnection protocol \u2013 Your mode of transport: Just like choosing how to get home, you choose the connection protocol that will take you to your instance. In this tutorial, we'll use SSH (Secure Shell), which creates a secure tunnel for connecting your computer to your instance over the internet.\nPublic DNS \u2013 The house address: Just like your house has a unique address, your EC2 instance has its own public DNS name (for example, ec2-18-201-118-201.eu-west-1.compute.amazonaws.com). This public DNS name enables SSH to connect directly to your instance.\nSecurity group \u2013 The gatekeeper: Imagine your house has a gatekeeper who controls who may enter or leave. Similarly, the EC2 instance has a security group that acts like a gatekeeper, controlling which types of network traffic are allowed in or out of your instance. Only the traffic you explicitly permit (for example, SSH traffic from your computer's IP address) is allowed in.\nPrivate key \u2013 Your front door key: When you launched the instance, you specified a key pair. The public key was placed on the instance, and you kept the private key on your computer. The private key acts as your front door key\u2014without it, you can\u2019t get into your instance.\nInstance username \u2013 The resident: When you arrive at your house, you need to identify yourself to prove you're a resident. Similarly, when connecting to an instance, you provide a username. Different instances have different default usernames, depending on their operating system. For example, Amazon Linux instances use ec2-user as the default username.\nThe connection command\nTo connect to your EC2 instance, use the following command in a terminal window:\nssh -i \"test-instance-key-pair.pem\" ec2-user@ec2-18-201-118-201.eu-west-1.compute.amazonaws.com\nHere's a breakdown of what the command does:\nssh \u2013 This command specifies the connection protocol, initiating an SSH (Secure Shell) connection to your instance.\n-i \"test-instance-key-pair.pem\" \u2013 The -i flag indicates the private key file needed to authenticate the connection. This private key file must match the key pair you specified when launching the instance. If your private key file is saved in a specific folder, specify the full path to the file.\nec2-user \u2013 This is the username for logging into the instance. For Amazon Linux instances, the default username is ec2-user. Other AMIs might use different default usernames, such as ubuntu for Ubuntu instances.\n@ \u2013 This symbol separates the username from the instance's address.\nec2-18-201-118-201.eu-west-1.compute.amazonaws.com \u2013 This is the public address of your instance (the public DNS), which includes the public IPv4 address and the AWS Region. It uniquely identifies the instance.\nWhat happens when you run the command\nAfter you run the command, SSH establishes a secure tunnel and authenticates with your private key. If the instance's security group permits the traffic, you gain access to your EC2 instance. You can now control the instance from your computer as if you were sitting right in front of it. You can run commands, install software, and manage files\u2014just like you would on your local machine.\nTask 8: Connect to your instance\nIn this task, you'll connect to your instance using an SSH client on your computer. In the previous task, we introduced the components for connecting to an instance using the analogy of going to your house. Now, we'll focus on connecting to the actual EC2 instance.\nThere are different ways to connect to an instance. The method you use to connect depends on the instance's operating system. Since you've launched a Linux instance, you'll use an SSH client on your local computer.\nFirst, check if your computer has an SSH client installed\nMost computers come with an SSH client pre-installed. To check, open a terminal window on your computer and run the following command:\nssh\nIf the command is recognized, you're ready to connect.\nIf the command isn't recognized, you must install an SSH client. Instructions for installing an SSH client are beyond the scope of this tutorial. If you need help, see SSH connection prerequisites in this user guide or search online for instructions on how to install an SSH client on your operating system.\nFollow these steps to connect to your instance\nInitiate connecting:\nIf you're on the instance details page in the Amazon EC2 console, choose the Connect button (top right).\nIf you've navigated away, choose Instances from the navigation pane. Then, on the Instances page, select the checkbox next to the name of your instance and choose the Connect button (top right).\nThis opens the Connect to instance page.\nChoose the connection method:\nOn the Connect to instance page, choose the SSH client tab.\nTake a moment to review the text on this page, as these are the steps that you'll follow next.\nReview the SSH command:\nUnder Example, you'll see a command that is automatically generated and customized with your instance's details. The private key name is derived from the name of the public key specified at launch.\nThe command looks something like this:\nssh -i \"test-instance-key-pair.pem\" ec2-user@ec2-18-201-118-201.eu-west-1.compute.amazonaws.com\nCopy the SSH command:\nChoose the copy icon next to the example SSH command.\nOpen a terminal window:\nOn your local computer, open a terminal window.\nPaste and run the SSH command:\nPaste the SSH command into the terminal window. If you saved your private key file in a specific folder, edit the command to include the full file path.\nPress Enter on your keyboard.\nYou'll see a response similar to the following:\nThe authenticity of host 'ec2-18-201-118-201.eu-west-1.compute.amazonaws.com (18-201-118-201)' can't be established.\nED25519 key fingerprint is SHA256:examplehxj9aOr1MogvKOoMNskVVIRBQBoq0example.This key is not known by any other names.\nAre you sure you want to continue connecting (yes/no/[fingerprint])?\nComplete the connection:\nEnter yes and press Return on your keyboard.\nVerifying the fingerprint is beyond the scope of this tutorial. To learn more, see (Optional) Get the instance fingerprint.\nUpon a successful connection, the terminal prompt changes to display your instance's public DNS.\nCongratulations! You've successfully connected to your instance!\nTask 9: Stop your instance\nIn this task, you'll stop your instance to preserve your Free Tier benefits. When your instance is stopped, you stop incurring costs for it, although you will continue to incur costs for the EBS storage.\nFollow these steps to stop your instance\nInitiate stopping:\nIf you're still on the Connect to instance page, choose Instances from the breadcrumb. If you've navigated away, choose Instances from the navigation pane.\nThen, on the Instances page, select the checkbox next to the name of your instance, and then choose the Instance state menu (top right), and choose Stop instance. When prompted, choose Stop.\nMonitor instance state:\nOn the Instances page, check the Instance state column. The state of your instance changes to Stopping and then Stopped. If you don't see the full text, try widening the column.\nIf you think the instance state has changed from Stopping to Stopped, but you don't see it yet, choose the refresh icon (above the table) to refresh the Instances table.\nKey takeaways\nIn this tutorial, you covered the following key concepts:\nAMI refers to an Amazon Machine Image, which is a template that contains the operating system and software required to launch an instance.\nInstance type refers to the hardware of the host computer used for your instance. It determines the CPU, memory, storage, and networking capacity of your instance.\nKey pair refers to the set of public and private keys that you can use for securely connecting to your instance.\nNetwork refers to a VPC (a virtual private cloud dedicated to your account within the AWS Cloud) and a subnet (a range of IP addresses within your VPC).\nSecurity group refers to a set of rules that controls what traffic can reach your instance.\nEBS volume refers to the data storage for your instance. Every instance has a root volume for storing the AMI and one or more optional data volumes.\nTags are metadata that you can optionally assign to your instance. The instance name is a tag, whose Key is Name, and the Value is your choice.\nConnecting refers to accessing your instance over the internet.\nSSH refers to the Secure Shell connection protocol that you can use to connect to your instance.\nPublic DNS is your instance's unique public address.\nInstance username is determined by the operating system of your instance and required for connecting.\nStopping your instance stops the charges for the instance, but EBS storage charges continue.\nNext steps\nTo build confidence in launching, connecting to, and stopping instances, consider repeating the steps in this tutorial. Be sure to terminate any instances that you launch to preserve your Free Tier benefits.\nOnce you're comfortable with these basics, you can explore more advanced tutorials. For more tutorials, see Looking for other tutorials?\nConsider watching the following 6-minute video: How can I avoid charges on my account when using AWS Free Tier services"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-launch-parameters.html",
        "content": "The launch instance wizard and launch template in the Amazon EC2 console provide all the parameters for configuring an Amazon EC2 instance.\nExcept for the key pair, the launch instance wizard provides a default value for each parameter. You can accept any or all of the defaults, or configure an instance with your own values. When creating a launch template, the parameters are optional. If you use a launch template to launch an instance, the parameters specified in the launch template override the default values in the launch instance wizard. Any parameter not specified in the launch template will default to the value provided by the launch instance wizard.\nThe parameters are grouped in the launch instance wizard and launch template. The following descriptions are presented according to the parameter groupings in the console.\nParameters for instance configuration\nName and tags\nApplication and OS Images (Amazon Machine Image)\nInstance type\nKey pair (login)\nNetwork settings\nConfigure storage\nAdvanced details\nSummary\nName and tags\nThe instance name is a tag, where the key is Name, and the value is the name that you specify. You can tag the instance, volumes, and network interfaces. For Spot Instances, you can tag the Spot Instance request only. For information about tags, see Tag your Amazon EC2 resources.\nSpecifying an instance name and additional tags is optional.\nFor Name, enter a descriptive name for the instance. If you don't specify a name, the instance can be identified by its ID, which is automatically generated when you launch the instance.\nTo add additional tags, choose Add additional tags. Choose Add tag, and then enter a key and value, and select the resource type to tag. Choose Add tag again for each additional tag to add.\nYou can only specify the instance name when launch an instance. You can't name the instance when you create a launch template, but you can add tags for the resources that are created when the instance is launched.\nApplication and OS Images (Amazon Machine Image)\nAn Amazon Machine Image (AMI) contains the information required to create an instance. For example, an AMI might contain the software that's required to act as a web server, such as Linux, Apache, and your website.\nYou can find a suitable AMI as follows. With each option for finding an AMI, you can choose Cancel (at top right) to return to the launch instance wizard without choosing an AMI.\nSearch bar\nTo search through all available AMIs, enter a keyword in the AMI search bar and then press Enter. To select an AMI, choose Select.\nRecents\nThe AMIs that you've recently used.\nChoose Recently launched or Currently in use, and then, from Amazon Machine Image (AMI), select an AMI.\nMy AMIs\nThe private AMIs that you own, or private AMIs that have been shared with you.\nChoose Owned by me or Shared with me, and then, from Amazon Machine Image (AMI), select an AMI.\nQuick Start\nAMIs are grouped by operating system (OS) to help you get started quickly.\nFirst select the OS that you need, and then, from Amazon Machine Image (AMI), select an AMI. To select an AMI that is eligible for the free tier, make sure that the AMI is marked Free tier eligible.\nBrowse more AMIs\nChoose Browse more AMIs to browse the full AMI catalog.\nTo search through all available AMIs, enter a keyword in the search bar and then press Enter.\nTo find an AMI by using a Systems Manager parameter, choose the arrow button to the right of the search bar, and then choose Search by Systems Manager parameter. For more information, see Find an AMI using a Systems Manager parameter.\nTo search by category, choose Quickstart AMIs, My AMIs, AWS Marketplace AMIs, or Community AMIs.\nThe AWS Marketplace is an online store where you can buy software that runs on AWS, including AMIs. For more information about launching an instance from the AWS Marketplace, see Launch an Amazon EC2 instance from an AWS Marketplace AMI. In Community AMIs, you can find AMIs that AWS community members have made available for others to use. AMIs from Amazon or a verified partner are marked Verified provider.\nTo filter the list of AMIs, select one or more check boxes under Refine results on the left of the screen. The filter options are different depending on the selected search category.\nCheck the Root device type listed for each AMI. Notice which AMIs are the type that you need: either ebs (backed by Amazon EBS) or instance-store (backed by instance store). For more information, see Root device type.\nCheck the Virtualization type listed for each AMI. Notice which AMIs are the type that you need: either hvm or paravirtual. For example, some instance types require HVM. For more information about Linux virtualization types, see Virtualization types.\nCheck the Boot mode listed for each AMI. Notice which AMIs use the boot mode that you need: either legacy-bios, uefi, or uefi-preferred. For more information, see Instance launch behavior with Amazon EC2 boot modes.\nChoose an AMI that meets your needs, and then choose Select.\nWarning when changing the AMI\nWhen you launch an instance, if you modify the configuration of any volumes or security groups associated with the selected AMI, and then you choose a different AMI, a window opens to warn you that some of your current settings will be changed or removed. You can review the changes to the security groups and volumes. Furthermore, you can either view which volumes will be added and deleted, or view only the volumes that will be added. This warning does not appear when creating a launch template.\nInstance type\nThe instance type defines the hardware configuration and size of the instance. Larger instance types have more CPU and memory. For more information, see Amazon EC2 instance types.\nInstance type: Ensure that the instance type is compatible with the AMI that you've specified. For more information, see Amazon EC2 instance types.\nFree Tier \u2013 If your AWS account is less than 12 months old, you can use Amazon EC2 under the Free Tier by selecting the t2.micro instance type, or the t3.micro instance type in Regions where t2.micro is unavailable. Be aware that when you launch a t3.micro instance, it defaults to Unlimited mode, which might incur additional charges based on CPU usage. If an instance type is eligible under the Free Tier, it is labeled Free tier eligible.\nCompare instance types: You can compare different instance types by the following attributes: number of vCPUs, architecture, amount of memory (GiB), amount of storage (GB), storage type, and network performance.\nGet advice: You can get guidance and suggestions for instance types from the EC2 instance type finder. For more information, see Get recommendations from EC2 instance type finder.\n(Launch templates only) Advanced: To specify instance attributes and let Amazon EC2 identify the instance types with those attributes, choose Advanced, and then choose Specify instance type attributes.\nNumber of vCPUs: Enter the minimum and maximum number of vCPUs for your compute requirements. To indicate no limits, enter a minimum of 0, and leave the maximum blank.\nAmount of memory (MiB): Enter the minimum and maximum amount of memory, in MiB, for your compute requirements. To indicate no limits, enter a minimum of 0, and leave the maximum blank.\nExpand Optional instance type attributes and choose Add attribute to express your compute requirements in more detail. For information about each attribute, see InstanceRequirementsRequest in the Amazon EC2 API Reference.\nResulting instance types: You can preview the instance types that match the specified attributes. To exclude instance types, choose Add attribute, and from the Attribute list, choose Excluded instance types. From the Attribute value list, select the instance types to exclude.\nKey pair (login)\nFor Key pair name, choose an existing key pair, or choose Create new key pair to create a new one. For more information, see Amazon EC2 key pairs and Amazon EC2 instances.\nImportant\nIf you choose the Proceed without key pair (Not recommended) option, you won't be able to connect to the instance unless you choose an AMI that is configured to allow users another way to log in.\nNetwork settings\nConfigure the network settings, as necessary.\n(Launch instance wizard only) VPC: Choose an existing VPC for your instance. You can choose the default VPC or a VPC that you created. For more information, see Virtual private clouds for your EC2 instances.\nSubnet: You can launch an instance in a subnet associated with an Availability Zone, Local Zone, Wavelength Zone, or Outpost.\nTo launch the instance in an Availability Zone, select the subnet in which to launch your instance. To create a new subnet, choose Create new subnet to go to the Amazon VPC console. When you are done, return to the launch instance wizard and choose the Refresh icon to load your subnet in the list.\nTo launch the instance in an IPv6-only subnet, the instance must be a Nitro-based instance.\nTo launch the instance in a Local Zone, select a subnet that you created in the Local Zone.\nTo launch an instance in an Outpost, select a subnet in a VPC that you associated with the Outpost.\n(Launch instance wizard only) Auto-assign Public IP: Specify whether your instance receives a public IPv4 address. By default, instances in a default subnet receive a public IPv4 address, and instances in a nondefault subnet don't. You can select Enable or Disable to override the subnet's default setting. For more information, see Public IPv4 addresses.\nFirewall (security groups): Use a security group to define firewall rules for your instance. These rules specify which incoming network traffic is delivered to your instance. All other traffic is ignored. For more information about security groups, see Amazon EC2 security groups for your EC2 instances.\nIf you add a network interface, you must specify the same security group in the network interface.\nSelect or create a security group as follows:\nTo select an existing security group for your VPC, choose Select existing security group, and select your security group from Common security groups.\nTo create a new security group for your VPC, choose Create security group. The launch instance wizard automatically defines the launch-wizard-x security group and provides the following check boxes for quickly adding security group rules:\n(Linux) Allow SSH traffic from \u2013 Creates an inbound rule to allow you to connect to your instance over SSH (port 22).\n(Windows) Allow RDP traffic from \u2013 Creates an inbound rule to allow you to connect to your instance over RDP (port 3389).\nSpecify whether the traffic comes from Anywhere, Custom, or My IP.\nAllow HTTPs traffic from the internet \u2013 Creates an inbound rule that opens port 443 (HTTPS) to allow internet traffic from anywhere. If your instance will be a web server, you'll need this rule.\nAllow HTTP traffic from the internet \u2013 Creates an inbound rule that opens port 80 (HTTP) to allow internet traffic from anywhere. If your instance will be a web server, you'll need this rule.\nYou can edit these rules and add rules to suit your needs.\nTo edit or add a rule, choose Edit (at top right). To add a rule, choose Add security group rule. For Type, select the network traffic type. The Protocol field is automatically filled in with the protocol to open to network traffic. For Source type, select the source type. To let the launch instance wizard or launch template add your computer's public IP address, choose My IP. However, if you are connecting through an ISP or from behind your firewall without a static IP address, you need to find out the range of IP addresses used by client computers.\nWarning\nRules that enable all IP addresses (0.0.0.0/0) to access your instance over SSH or RDP are acceptable if you are briefly launching a test instance and will stop or terminate it soon, but are unsafe for production environments. You should authorize only a specific IP address or range of addresses to access your instance.\nAdvanced network configuration \u2013 Available only if you choose a subnet.\nNetwork interface\nDevice index: The index of the network card. The primary network interface must be assigned to network card index 0. Some instance types support multiple network cards.\nNetwork interface: Select New interface to let Amazon EC2 create a new interface, or select an existing, available network interface.\nDescription: (Optional) A description for the new network interface.\nSubnet: The subnet in which to create the new network interface. For the primary network interface (eth0), this is the subnet in which the instance is launched. If you've entered an existing network interface for eth0, the instance is launched in the subnet in which the network interface is located.\nNote\nTo launch an EC2 instance into an IPv6-only subnet, you must use a Nitro-based instance.\nNote\nWhen launching an IPv6-only instance, it is possible that DHCPv6 may not immediately provide the instance with the IPv6 DNS name server. During this initial delay, the instance may not be able to resolve public domains.\nFor instances running on Amazon Linux 2, if you want to immediately update the /etc/resolv.conf file with the IPv6 DNS name server, run the following cloud-init directive at launch:\n#cloud-config\nbootcmd:\n- /usr/bin/sed -i -E 's,^nameserver\\s+[\\.[:digit:]]+$,nameserver fd00:ec2::253,' /etc/resolv.conf\nAnother option is to change the configuration file and re-image your AMI so that the file has the IPv6 DNS name server address immediately on booting.\nSecurity groups: One or more security groups to associate with the network interface.\n(Launch templates only) Auto-assign public IP: Specify whether your instance receives a public IPv4 address. By default, instances in a default subnet receive a public IPv4 address and instances in a nondefault subnet do not. You can select Enable or Disable to override the subnet's default setting. For more information, see Public IPv4 addresses.\nPrimary IP: A private IPv4 address from the range of your subnet. Leave blank to let Amazon EC2 choose a private IPv4 address for you.\nSecondary IP: Additional private IPv4 addresses from the range of your subnet. Choose Manually assign and enter an IPv4 address. Choose Add IP to add another IPv4 address. Alternatively, choose Automatically assign and enter a value to indicate the number of IPv4 addresses that Amazon EC2 chooses for you.\n(IPv6-only) IPv6 IPs: IPv6 addresses from the range of the subnet. Choose Manually assign and enter an IPv6 address. Choose Add IP to add another IPv6 address. Alternatively, choose Automatically assign and enter a value to indicate the number of IPv6 addresses that Amazon EC2 chooses for you.\nIPv4 Prefixes: The IPv4 prefixes for the network interface. Choose Manually assign and enter an IPv4 prefix. Alternatively, choose Automatically assign and enter a value to indicate the number of IPv4 prefixes that Amazon EC2 chooses for you.\nIPv6 Prefixes: The IPv6 prefixes for the network interface. Choose Manually assign and enter an IPv6 prefix. Alternatively, choose Automatically assign and enter a value to indicate the number of IPv6 prefixes that Amazon EC2 chooses for you.\n(Dual-stack and IPv6-only) Assign Primary IPv6 IP: When you launch an instance into a dual-stack or IPv6-only subnet, you can indicate whether it would have a primary IPv6 address. This helps prevent disruptions to traffic to the instance or network interface. Choose Yes if you rely on the IPv6 address of this instance not changing, and Amazon EC2 choosing an IPv6 address associated with the network interface to be the primary IPv6 address. You can't remove the primary IPv6 address later on. When you enable an IPv6 GUA address to be a primary IPv6, the first IPv6 GUA becomes the primary IPv6 address until the instance is terminated or the network interface is detached. If you have multiple IPv6 addresses associated with a network interface attached to your instance and you let Amazon EC2 assign a primary IPv6 address, the first IPv6 GUA address associated with the network interface becomes the primary IPv6 address.\nDelete on termination: Indicates whether the network interface is deleted when the instance is deleted.\nElastic Fabric Adapter: Indicates whether the network interface is an Elastic Fabric Adapter. For more information, see Elastic Fabric Adapter for AI/ML and HPC workloads on Amazon EC2.\nNetwork card index: The index of the network card. The primary network interface must be assigned to network card index 0. Some instance types support multiple network cards.\nENA Express: ENA Express is powered by AWS Scalable Reliable Datagram (SRD) technology. SRD technology uses a packet spraying mechanism to distribute load and avoid network congestion. Enabling ENA Express allows supported instances to communicate using SRD on top of regular TCP traffic when possible. The launch instance wizard or launch template does not include ENA Express configuration for the instance unless you select Enable or Disable from the list.\nENA Express UDP: If you've enabled ENA Express, you can optionally use it for UDP traffic. The launch instance wizard or launch template does not include ENA Express configuration for the instance unless you select Enable or Disable.\nChoose Add network interface to add additional network interfaces. The number of network interfaces that you can add depends on the number that is supported by the selected instance type. Additional network interfaces can reside in a different subnet of the same VPC or in a subnet in a different VPC that you own (as long as the subnet is in the same Availability Zone as your instance). If you choose to add an additional network interface residing in another VPC subnet, you'll see the Multi-VPC subnets option when you select a subnet. If you select a subnet in another VPC, the Multi-VPC label appears next to the network interface you've added. This enables you to create multi-homed instances across VPCs with different networking and security configurations. Note that if you attach an additional ENI from another VPC, you must choose a security group for the ENI from that VPC.\nFor more information, see Elastic network interfaces. If you specify more than one network interface, your instance cannot receive a public IPv4 address. Additionally, if you specify an existing network interface for eth0, you cannot override the subnet's public IPv4 setting using Auto-assign Public IP. For more information, see Assign a public IPv4 address during instance launch.\nConfigure storage\nThe AMI you selected includes one or more volumes of storage, including the root volume. You can specify additional volumes to attach to the instance.\n(Launch instance wizard only) You can use the Simple or Advanced view. With the Simple view, you specify the size and type of the volume. To specify all volume parameters, choose the Advanced view (at top right of the card).\nBy using the Advanced view, you can configure each volume as follows:\nStorage type: Select Amazon EBS or instance store volumes to associate with your instance. The volume types available in the list depend on the instance type that you've chosen. For more information, see Instance store temporary block storage for EC2 instances and Amazon EBS volumes.\nDevice name: Select from the list of available device names for the volume.\nSnapshot: Select the snapshot from which to restore the volume. You can search for available shared and public snapshots by entering text into the Snapshot field.\nSize (GiB): For EBS volumes, you can specify a storage size. If you have selected an AMI and instance that are eligible for the free tier, keep in mind that to stay within the free tier, you must stay under 30 GiB of total storage.\nVolume type: For EBS volumes, select a volume type. For more information, see Amazon EBS volume types in the Amazon EBS User Guide.\nIOPS: If you have selected a Provisioned IOPS SSD volume type, then you can enter the number of I/O operations per second (IOPS) that the volume can support.\nDelete on termination: For Amazon EBS volumes, choose Yes to delete the volume when the instance is terminated, or choose No to keep the volume. For more information, see Preserve data when an instance is terminated.\nEncrypted: If the instance type supports EBS encryption, you can choose Yes to enable encryption for the volume. If you have enabled encryption by default in this Region, encryption is enabled for you. For more information, see Amazon EBS encryption in the Amazon EBS User Guide.\nKMS key: If you selected Yes for Encrypted, then you must select a customer managed key to use to encrypt the volume. If you have enabled encryption by default in this Region, the default customer managed key is selected for you. You can select a different key or specify the ARN of any customer managed key that you created.\nFile systems: Mount an Amazon EFS or Amazon FSx file system to the instance. For more information about mounting an Amazon EFS file system, see Use Amazon EFS with Amazon EC2 Linux instances. For more information about mounting an Amazon FSx file system, see Use Amazon FSx with Amazon EC2 instances\nAdvanced details\nFor Advanced details, expand the section to view the fields and specify any additional parameters for the instance.\n(Launch instance wizard only) Domain join directory: Select the AWS Directory Service directory (domain) to which your instance is joined to after launch. If you select a domain, you must select an IAM role with the required permissions. For more information about domain joining, see Seamlessly join an Amazon EC2 Linux instance to your AWS Managed Microsoft AD directory (Linux instances) and Seamlessly join an Amazon EC2 Windows instance to your AWS Managed Microsoft AD directory (Windows instances).\nIAM instance profile: Select an IAM instance profile to associate with the instance. This is a container for an IAM role. For more information, see IAM roles for Amazon EC2.\nHostname type: Select whether the guest OS hostname of the instance will include the resource name or the IP name. For more information, see Amazon EC2 instance hostname types.\nDNS Hostname: Determines if the DNS queries to the resource name or the IP name (depending on what you selected for Hostname type) will respond with the IPv4 address (A record), IPv6 address (AAAA record), or both. For more information, see Amazon EC2 instance hostname types.\nInstance auto-recovery: When enabled, recovers your instance if system status checks fail. This setting is enabled by default at launch for supported instance types. For more information, see Configure simplified automatic recovery on an Amazon EC2 instance.\nShutdown behavior: Select whether the instance should stop or terminate when shut down. For more information, see Change the instance initiated shutdown behavior.\nStop - Hibernate behavior: To enable hibernation, choose Enable. This field is available only if your instance meets the hibernation prerequisites. For more information, see Hibernate your Amazon EC2 instance.\nTermination protection: To prevent accidental termination, choose Enable. For more information, see Enable termination protection.\nStop protection: To prevent accidental stopping, choose Enable. For more information, see Enable stop protection.\nDetailed CloudWatch monitoring: Choose Enable to turn on detailed monitoring of your instance using Amazon CloudWatch. Additional charges apply. For more information, see Monitor your instances using CloudWatch.\nCredit specification: Choose Unlimited to enable applications to burst beyond the baseline for as long as needed. This field is only valid for T instances. Additional charges may apply. For more information, see Burstable performance instances.\nPlacement group: Specify a placement group in which to launch the instance. You can select an existing placement group, or create a new one. Not all instance types support launching an instance in a placement group. For more information, see Placement groups for your Amazon EC2 instances.\nEBS-optimized instance: An instance that's optimized for Amazon EBS uses an optimized configuration stack and provides additional, dedicated capacity for Amazon EBS I/O. If the instance type supports this feature, choose Enable to enable it. Additional charges apply. For more information, see Amazon EBS-optimized instance types.\nPurchasing option: Choose Spot Instances to request Spot Instances at the Spot price, capped at the On-Demand price, and choose Customize Spot Instance options to change the default Spot Instance settings. You can set your maximum price (not recommended), and change the request type, request duration, and interruption behavior. If you do not request a Spot Instance, Amazon EC2 launches an On-Demand Instance by default. For more information, see Manage your Spot Instances.\nCapacity Reservation: Specify whether to launch the instance into any open Capacity Reservation (Open), a specific Capacity Reservation (Target by ID), or a Capacity Reservation group (Target by group). To specify that a Capacity Reservation should not be used, choose None. For more information, see Launch instances into an existing Capacity Reservation.\nTenancy: Choose whether to run your instance on shared hardware (Shared), isolated, dedicated hardware (Dedicated), or on a Dedicated Host (Dedicated host). If you choose to launch the instance onto a Dedicated Host, you can specify whether to launch the instance into a host resource group or you can target a specific Dedicated Host. Additional charges may apply. For more information, see Amazon EC2 Dedicated Instances and Amazon EC2 Dedicated Hosts.\nRAM disk ID: (Only valid for paravirtual (PV) AMIs) Select a RAM disk for the instance. If you have selected a kernel, you might need to select a specific RAM disk with the drivers to support it.\nKernel ID: (Only valid for paravirtual (PV) AMIs) Select a kernel for the instance.\nNitro Enclave: Allows you to create isolated execution environments, called enclaves, from Amazon EC2 instances. Select Enable to enable the instance for AWS Nitro Enclaves. For more information, see What is AWS Nitro Enclaves? in the AWS Nitro Enclaves User Guide.\nLicense configurations: You can launch instances against the specified license configuration to track your license usage. For more information, see Create a license configuration in the AWS License Manager User Guide.\nSpecify CPU options: In the launch instance wizard, this field is only visible if the selected instance type supports specifying CPU options. Choose Specify CPU options to specify a custom number of vCPUs during launch. Set the number of CPU cores and threads per core. For more information, see CPU options for Amazon EC2 instances.\nMetadata accessible: You can enable or disable access to the Instance Metadata Service (IMDS). For more information, see Configure instance metadata options for new instances.\nMetadata IPv6 endpoint: You can enable the instance to use the IMDS IPv6 address [fd00:ec2::254] to retrieve instance metadata. This option is only available if you are launching Nitro-based instances into an IPv6-supported subnet (dual stack or IPv6 only). For more information about retrieving instance metadata, see Access instance metadata for an EC2 instance.\nMetadata version: If you enable access to the IMDS, you can choose to require the use of Instance Metadata Service Version 2 when requesting instance metadata. For more information, see Configure instance metadata options for new instances.\nMetadata response hop limit: If you enable the IMDS, you can set the allowable number of network hops for the metadata token. For more information, see Configure instance metadata options for new instances.\nAllow tags in metadata: If you select Enable, the instance will allow access to all of its tags from its metadata. If no value is specified, then by default, access to the tags in instance metadata is not allowed. For more information, see Allow access to tags in instance metadata.\nUser data: You can specify user data to configure an instance during launch, or to run a configuration script. For more information about user data for Linux instances, see Run commands when you launch an EC2 instance with user data input. For more information about user data for Windows instances, see How Amazon EC2 handles user data for Windows instances.\nSummary\nUse the Summary panel to specify the number of instances to launch, to review your instance configuration, and to launch your instances.\nNumber of instances: Enter the number of instances to launch. All of the instances will launch with the same configuration.\nTip\nTo ensure faster instance launches, break up large requests into smaller batches. For example, create five separate launch requests for 100 instances each instead of one launch request for 500 instances.\n(Optional) If you specify more than one instance, to help ensure that you maintain the correct number of instances to handle demand on your application, you can choose consider EC2 Auto Scaling to create a launch template and an Auto Scaling group. Auto Scaling scales the number of instances in the group according to your specifications. For more information, see the Amazon EC2 Auto Scaling User Guide.\nNote\nIf Amazon EC2 Auto Scaling marks an instance that is in an Auto Scaling group as unhealthy, the instance is automatically scheduled for replacement where it is terminated and another is launched, and you lose your data on the original instance. An instance is marked as unhealthy if you stop or reboot the instance, or if another event marks the instance as unhealthy. For more information, see Health checks for instances in an Auto Scaling group in the Amazon EC2 Auto Scaling User Guide.\nReview the details of your instance, and make any necessary changes. You can navigate directly to a section by choosing its link in the Summary panel.\nWhen you're ready to launch your instance, choose Launch instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-instance-wizard.html",
        "content": "You can launch an Amazon EC2 instance using the launch instance wizard in the Amazon EC2 console. The wizard provides default values for the launch parameters, which you can either accept or modify to suit your requirements. The only parameter that is not specified is the key pair. If you choose to accept the default values, you can quickly launch an instance by selecting only a key pair.\nImportant\nYou incur charges for the instance while the instance is in the running state, even if it remains idle. However, if you qualify for the Free Tier, you might not incur charges. For more information, see Track your Free Tier usage for Amazon EC2.\nFor a description of each parameter in the launch instance wizard, see Reference for Amazon EC2 instance configuration parameters.\nTopics\nQuickly launch an instance\nLaunch an instance using defined parameters\nQuickly launch an instance\nTo set up an instance quickly for testing purposes, follow these steps. You'll select the operating system and your key pair, and accept the default values. Except for the key pair, the launch instance wizard provides default values for all of the parameters. You can accept any or all of the defaults, or configure an instance by specifying your own values for each parameter.\nFor a description of each parameter in the launch instance wizard, see Reference for Amazon EC2 instance configuration parameters.\nTo quickly launch an instance using the launch instance wizard\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation bar at the top of the screen, the current AWS Region is displayed (for example, US East (Ohio)). If needed, select a different Region in which to launch the instance.\nFrom the Amazon EC2 console dashboard, choose Launch instance.\n(Optional) Under Name and tags, for Name, enter a descriptive name for your instance.\nUnder Application and OS Images (Amazon Machine Image), choose Quick Start, and then choose the operating system (OS) for your instance.\nUnder Key pair (login), for Key pair name, choose an existing key pair or create a new one.\nIn the Summary panel, choose Launch instance.\nLaunch an instance using defined parameters\nIf you're launching an instance that you'll use in production, you'll need to configure the instance to suit your requirements. For a description of each parameter in the launch instance wizard, see Reference for Amazon EC2 instance configuration parameters.\nTo launch an instance by defining all the launch parameters using the launch instance wizard\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation bar at the top of the screen, the current AWS Region is displayed (for example, US East (Ohio)). If needed, select a different Region in which to launch the instance.\nFrom the Amazon EC2 console dashboard, choose Launch instance.\n(Optional) Under Name and tags, for Name, enter a descriptive name for your instance so that you can easily keep track of it.\nThe instance name is a tag, where the key is Name, and the value is the name that you specify.\nUnder Application and OS Images (Amazon Machine Image), choose the operating system (OS) for your instance, and then choose an AMI.\nAn AMI is a template that contains the operating system and software required to launch your instance.\nUnder Instance type, choose an instance type.\nThe instance type determines the hardware configuration (CPU, memory, storage, and networking capacity) and size of the host computer used for your instance.\nIf you're not sure which instance type to choose, you can do the following:\nChoose Compare instance types to compare different instance types by the following attributes: number of vCPUs, architecture, amount of memory (GiB), amount of storage (GB), storage type, and network performance.\nChoose Get advice to get guidance and suggestions for instance types from the EC2 instance type finder. For more information, see Get recommendations from EC2 instance type finder.\nNote\nIf your AWS account is less than 12 months old, you can use Amazon EC2 under the Free Tier by choosing the t2.micro instance type, or the t3.micro instance type in Regions where t2.micro is unavailable. Be aware that when you launch a t3.micro instance, it defaults to Unlimited mode, which might incur additional charges based on CPU usage. If an instance type is eligible under the Free Tier, it is labeled Free tier eligible.\nUnder Key pair (login), for Key pair name, choose an existing key pair or create a new one. If you do not require a key pair to connect to your instance, you can choose Proceed without a key pair (not recommended).\nUnder Network settings, you can keep the defaults if you're launching a test instance. If you're launching a production instance, it's best practice to control traffic into and out of your instance using network settings and security groups that you define.\nUnder Configure storage, you can keep the defaults or specify additional storage. The AMI you selected includes one or more volumes of storage, including the root volume. You can specify additional volumes to attach to the instance.\nYou can use the Simple or Advanced view. With the Simple view, you specify the size and type of the volume. To specify all volume parameters, choose the Advanced view (at top right of the card).\nFor Advanced details, expand the section to view the fields and specify any additional parameters for your instance.\nIn the Summary panel, you can do the following:\nSpecify the number of instances to launch.\nReview your instance configuration, and navigate directly to a section by choosing its link.\nWhen you're ready to launch your instance, choose Launch instance.\nIf the instance fails to launch or the state immediately goes to terminated instead of running, see Troubleshoot Amazon EC2 instance launch issues.\n(Optional) You can create a billing alert for the instance. On the confirmation screen, under Next Steps, choose Create billing alerts and follow the directions. Billing alerts can also be created after you launch the instance. For more information, see Creating a billing alarm to monitor your estimated AWS charges in the Amazon CloudWatch User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/launch-instances-from-launch-template.html",
        "content": "An Amazon EC2 launch template stores instance launch parameters so that you don't have to specify them every time you launch an instance.\nSeveral instance launch services can optionally use launch templates when launching instances, while for other services, like EC2 Fleet, instances can't be launched unless a launch template is used. This topic describes how to use a launch template when launching an instance using the EC2 launch instance wizard, Amazon EC2 Auto Scaling, EC2 Fleet, and Spot Fleet.\nFor more information about launch templates, including how to create a launch template, see Store instance launch parameters in Amazon EC2 launch templates.\nTopics\nLaunch an Amazon EC2 instance using a launch template\nLaunch instances in an Amazon EC2 Auto Scaling group using a launch template\nLaunch an EC2 Fleet using a launch template\nLaunch a Spot Fleet using a launch template\nLaunch an Amazon EC2 instance using a launch template\nYou can use the parameters contained in a launch template to launch an Amazon EC2 instance. After selecting the launch template, but before launching the instance, you can modify the launch parameters.\nInstances that are launched using a launch template are automatically assigned two tags with the keys aws:ec2launchtemplate:id and aws:ec2launchtemplate:version. You can't remove or edit these tags.\nConsole\nAWS CLI\nPowerShell\nTo launch an instance using a launch template\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nUse one of the following options to select the launch template:\nFrom the Amazon EC2 console dashboard, choose the down arrow next to Launch instance, choose Launch instance from template, and then for Source template, select a launch template.\nIn the navigation pane, choose Launch Templates, select the launch template, and choose Actions, Launch instance from template.\nFor Source template version, select the launch template version to use.\n(Optional) You can modify the values for any of the launch parameters. If you don't modify a value, the value defined by the launch template is used. If no value was specified in the launch template, the default value for the parameter is used.\nIn the Summary panel, for Number of instances, specify the number of instances to launch.\nChoose Launch instance.\nIf the instance fails to launch or the state immediately goes to terminated instead of running, see Troubleshoot Amazon EC2 instance launch issues.\nLaunch instances in an Amazon EC2 Auto Scaling group using a launch template\nYou can create an Auto Scaling group and specify a launch template to use for the group. When Amazon EC2 Auto Scaling launches instances in the Auto Scaling group, it uses the launch parameters defined in the associated launch template.\nBefore you can create an Auto Scaling group using a launch template, you must first create a launch template that includes the parameters required to launch an instance in an Auto Scaling group. Some parameters are required, such as the ID of the AMI, and some parameters are not available to use with an Auto Scaling group. The console provides guidance to help you create a template that you can use with Amazon EC2 Auto Scaling.\nTo create an Auto Scaling group with a launch template using the console\nFor the instructions, see Create an Auto Scaling group using a launch template in the Amazon EC2 Auto Scaling User Guide.\nTo create or update an Auto Scaling group with a launch template using the AWS CLI\nUse the create-auto-scaling-group or the update-auto-scaling-group command and specify the --launch-template parameter.\nFor more information, see the following topics in the Amazon EC2 Auto Scaling User Guide:\nCreate a launch template for an Auto Scaling group\nCreate a launch template using advanced settings\nExamples for creating and managing launch templates with the AWS Command Line Interface (AWS CLI) \u2013 Provides examples that show how to create launch templates with various parameter combinations.\nCreate Auto Scaling groups using launch templates\nUpdate an Auto Scaling group\nLaunch an EC2 Fleet using a launch template\nA launch template is a requirement when creating an EC2 Fleet request. When Amazon EC2 fulfills the EC2 Fleet request, it uses the launch parameters defined in the associated launch template. You can override some of the parameters that are specified in the launch template. For more information, see Create an EC2 Fleet.\nTo create an EC2 Fleet with a launch template using the AWS CLI\nUse the create-fleet command. Use the --launch-template-configs parameter to specify the launch template and any overrides for the launch template.\nLaunch a Spot Fleet using a launch template\nA launch template is optional when creating a Spot Fleet request. If you don't use a launch template, you can manually specify the launch parameters. If you use a launch template, when Amazon EC2 fulfills the Spot Fleet request, it uses the launch parameters defined in the associated launch template. You can override some of the parameters that are specified in the launch template. For more information, see Create a Spot Fleet.\nTo create a Spot Fleet request using a launch template\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Spot Requests.\nChoose Request Spot Instances.\nUnder Launch parameters, choose Use a launch template.\nFor Launch template, choose a launch template, and then, from the field to the right, choose the launch template version.\nConfigure your Spot Fleet by selecting different options on this screen. For more information about the options, see Create a Spot Fleet request using defined parameters (console).\nWhen you're ready to create your Spot Fleet, choose Launch.\nTo create a Spot Fleet request using a launch template\nUse the request-spot-fleet command. Use the LaunchTemplateConfigs parameter to specify the launch template and any overrides for the launch template."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/launch-more-like-this.html",
        "content": "The Amazon EC2 console provides a Launch more like this option that enables you to use a current instance as a base for launching other instances. This option automatically populates the Amazon EC2 launch instance wizard with certain configuration details from the selected instance.\nConsiderations\nWe do not clone your instances; we only replicate some of the configuration details. To create a copy of your instance, first create an AMI from it, then launch more instances from the AMI. Create a launch template to ensure that you launch your instances using the same launch details.\nThe current instance must be in the running state.\nCopied details\nThe following configuration details are copied from the selected instance into the launch instance wizard:\nAMI ID\nInstance type\nAvailability Zone, or the VPC and subnet in which the selected instance is located\nPublic IPv4 address. If the selected instance currently has a public IPv4 address, the new instance receives a public IPv4 address, regardless of the selected instance's default public IPv4 address setting. For more information about public IPv4 addresses, see Public IPv4 addresses.\nPlacement group, if applicable\nIAM role associated with the instance, if applicable\nShutdown behavior setting (stop or terminate)\nTermination protection setting (true or false)\nCloudWatch monitoring (enabled or disabled)\nAmazon EBS-optimization setting (true or false)\nTenancy setting, if launching into a VPC (shared or dedicated)\nKernel ID and RAM disk ID, if applicable\nUser data, if specified\nTags associated with the instance, if applicable\nSecurity groups associated with the instance\n[Windows instances] Association information. If the selected instance is associated with a configuration file, the same file is automatically associated with the new instance. If the configuration file includes a joined domain configuration, the new instance is joined to the same domain. For more information about joining a domain, see Seamlessly join a Windows EC2 instance to your AWS Managed Microsoft AD Active Directory in the AWS Directory Service Administration Guide.\nDetails not copied\nThe following configuration details are not copied from your selected instance. Instead, the wizard applies their default settings or behavior:\nNumber of network interfaces \u2013 The default is one network interface, which is the primary network interface (eth0).\nStorage \u2013 The default storage configuration is determined by the AMI and the instance type.\nTo launch more instances like an existing instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect an instance, and then choose Actions, Images and templates, Launch more like this.\nThe launch instance wizard opens. You can make any necessary changes to the instance configuration by selecting different options on this screen.\nWhen you are ready to launch your instance, choose Launch instance.\nIf the instance fails to launch or the state immediately goes to terminated instead of running, see Troubleshoot Amazon EC2 instance launch issues."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/launch-marketplace-console.html",
        "content": "You can subscribe to an AWS Marketplace AMI and launch an instance from it using the Amazon EC2 console or a command line tool. For more information about AWS Marketplace AMIs, see Paid AMIs in the AWS Marketplace for Amazon EC2 instances.\nTo cancel your subscription to the AMI after launch, you must first terminate all instances that were launched from the AMI. For more information, see Manage your AWS Marketplace subscriptions.\nTo launch an instance from an AWS Marketplace AMI using the Amazon EC2 console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nFrom the Amazon EC2 console dashboard, choose Launch instance.\n(Optional) Under Name and tags, for Name, enter a descriptive name for your instance.\nUnder Application and OS Images (Amazon Machine Image), choose Browse more AMIs, and then choose the AWS Marketplace AMIs tab. Find a suitable AMI by browsing the categories or using the search functionality. To choose a product, choose Select.\nA window opens with an overview of the product you've selected. You can view the pricing information, as well as any other information that the vendor has provided. When you're ready, choose one of the following buttons:\nSubscribe on instance launch \u2013 Your subscription starts when you choose Launch instance (at Step 10).\nSubscribe now \u2013 Your subscription starts immediately. While the subscription is underway, you can configure the instance by continuing with the steps in this procedure. If there are any problems with your credit card details, you will be asked to update your account details.\nNote\nYou're not charged for using the product until you have launched an instance with the AMI. Take note of the pricing for each supported instance type when you select an instance type. Additional taxes might also apply to the product.\nFor Instance type, select an instance type for your instance. The instance type defines the hardware configuration and size of the instance to launch.\nUnder Key pair (login), for Key pair name, choose an existing key pair or create a new one.\nUnder Network settings, for Firewall (security groups), take note of the new security group that was created according to the vendor's specifications for the product. The security group might include rules that allow all IPv4 addresses (0.0.0.0/0) access on SSH (port 22) on Linux or RDP (port 3389) on Windows. We recommend that you adjust these rules to allow only a specific address or range of addresses to access your instance over those ports.\nYou can use the other fields on the screen to configure your instance, add storage, and add tags. For information about the different options that you can configure, see Reference for Amazon EC2 instance configuration parameters.\nIn the Summary panel, under Software Image (AMI), check the details of the AMI from which you're about to launch the instance. Also check the other configuration details that you specified. When you're ready to launch your instance, choose Launch instance.\nDepending on the product you've subscribed to, the instance might take a few minutes or more to launch. If you chose Subscribe on instance launch at Step 5, you are first subscribed to the product before your instance can launch. If there are any problems with your credit card details, you will be asked to update your account details. When the launch confirmation page displays, choose View all instances to go to the Instances page.\nNote\nYou are charged the subscription price as long as your instance is in the running state, even if it is idle. If your instance is stopped, you might still be charged for storage.\nWhen your instance is in the running state, you can connect to it. To do this, select your instance in the list, choose Connect, and choose a connection option. For more information about connecting to your instance, see Connect to your EC2 instance.\nImportant\nCheck the vendor's usage instructions carefully, as you might need to use a specific username to connect to your instance. For information about accessing your subscription details, see Manage your AWS Marketplace subscriptions.\nIf the instance fails to launch or the state immediately goes to terminated instead of running, see Troubleshoot Amazon EC2 instance launch issues.\nTo launch an instance from an AWS Marketplace AMI using a command line tool\nTo launch instances from AWS Marketplace products using a command line tool, first ensure that you are subscribed to the product. You can then launch an instance with the product's AMI ID using the following methods:\nMethod Documentation\nAWS CLI\nUse the run-instances command, or see the following topic for more information: Launch your instance in the AWS Command Line Interface User Guide.\nAWS Tools for Windows PowerShell\nUse the New-EC2Instance command, or see the following topic for more information: Launch an Amazon EC2 Instance Using Windows PowerShell\nQuery API Use the RunInstances request."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/connect.html",
        "content": "Your Amazon EC2 instance is a virtual server in the AWS Cloud. To log on to your instance, you must establish a connection to the instance. How you connect to your instance depends on the operating system of the instance and the operating system on the computer that you use to connect to the instance. The following table details the requirements for each connection method.\nConnection option Instance operating system Inbound traffic rule IAM permissions Instance profile role Software on instance Software on connecting system Key pair\nSSH client\nLinux\nYes\nNo\nNo\nNo\nYes\nYes\nEC2 instance connect\nLinux\nYes\nYes\nNo\nYes \u00b9\nNo\nNo\nPuTTY\nLinux\nYes\nNo\nNo\nNo\nYes\nYes\nRDP client\nWindows\nYes\nNo\nNo\nNo\nYes\nYes \u00b2\nFleet Manager\nWindows\nNo\nYes\nYes\nYes \u00b9\nNo\nYes\nSession Manager\nLinux, Windows\nNo\nYes\nYes\nYes \u00b9\nNo\nNo\nEC2 instance connect endpoint\nLinux, Windows\nYes\nYes\nNo\nNo\nNo\nYes\n\u00b9 The required software is only pre-installed on certain AMIs. You can manually install the required software as needed on supported operating systems.\n\u00b2 The key pair is only required if you are using the randomly generated password for the local Administrator user account.\nFor more information, see the documentation for the connection option that you intend to use.\nConnection options\nConnect to your Linux instance using an SSH client\nConnect to your Linux instance using PuTTY\nConnect to your Windows instance using an RDP client\nConnect to your Windows instance using Fleet Manager\nConnect using Session Manager\nConnect using EC2 Instance Connect\nConnect using EC2 Instance Connect Endpoint"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/connection-prereqs-general.html",
        "content": "The following are general prerequisites to connect to an instance. Note that there might be additional prerequisites that are specific to the connection option that you choose.\nGeneral prerequisites\nCheck that your instance has passed its status checks. It can take a few minutes for an instance to be ready to accept connection requests. For more information, see View status checks.\nGet the required instance details.\nLocate the private key and set permissions.\n(Optional) Get the instance fingerprint.\nGet the required instance details\nTo prepare to connect to your instance, get the following information from the Amazon EC2 console or by using the command line.\nGet the public DNS name of the instance.\nYou can get the public DNS for your instance from the Amazon EC2 console. Check the Public IPv4 DNS column of the Instances pane. If this column is hidden, choose the settings icon ( ) in the top-right corner of the screen, and select Public IPv4 DNS. You can also find the public DNS in the instance information section of the Instances pane. When you select the instance in the Instances pane of the Amazon EC2 console, information about that instance will appear on the lower half of the page. Under the Details tab, look for Public IPv4 DNS.\nIf you prefer, you can use the describe-instances (AWS CLI) or Get-EC2Instance (AWS Tools for Windows PowerShell) commands.\nIf no Public IPv4 DNS is displayed, verify that the Instance state is Running, and that you have not launched the instance in a private subnet. If you launched your instance using the launch instance wizard, you may have edited the Auto-assign public IP field under Network settings and changed the value to Disable. If you disable the Auto-assign public IP option, the instance is not assigned a public IP address when it is launched.\n(IPv6 only instances) Get the IPv6 address of the instance.\nIf you assigned an IPv6 address to your instance, you can optionally connect to the instance using its IPv6 address instead of a public IPv4 address or public IPv4 DNS hostname. Your local computer must have an IPv6 address and must be configured to use IPv6. You can get the IPv6 address of your instance from the Amazon EC2 console. Check the IPv6 IPs column of the Instances pane. Or, you can find the IPv6 address in the instance information section. When you select the instance in the Instances pane of the Amazon EC2 console, information about that instance will appear on the lower half of the page. Under the Details tab, look for IPv6 address.\nIf you prefer, you can use the describe-instances (AWS CLI) or Get-EC2Instance (AWS Tools for Windows PowerShell) commands. For more information about IPv6, see IPv6 addresses.\n(Linux instances) Get the username for your instance.\nYou can connect to your instance using the username for your user account or the default username for the AMI that you used to launch your instance.\nGet the username for your user account.\nFor more information about how to create a user account, see Manage system users on your Amazon EC2 Linux instance.\nGet the default username for the AMI that you used to launch your instance.\nAmazon Linux \u2013 ec2-user\nCentOS \u2013 centos or ec2-user\nDebian \u2013 admin\nFedora \u2013 fedora or ec2-user\nRHEL \u2013 ec2-user or root\nSUSE \u2013 ec2-user or root\nUbuntu \u2013 ubuntu\nOracle \u2013 ec2-user\nBitnami \u2013 bitnami\nRocky Linux \u2013 rocky\nOther \u2013 Check with the AMI provider\nLocate the private key and set permissions\nYou must know the location of your private key file to make the initial connection to a Linux instance using SSH or a Windows instances using RDP. For SSH connections, you must set file permissions so that only you can read the private key.\nFor information about how key pairs work when using Amazon EC2, see Amazon EC2 key pairs and Amazon EC2 instances.\nLocate the private key.\nGet the fully-qualified path to the location on your computer of the .pem file for the key pair that you specified when you launched the instance. For more information, see Identify the public key specified at launch.\nIf you can't find your private key file, see I've lost my private key. How can I connect to my instance?\n(Linux instances) If you are connecting to your instance using PuTTY and need to convert the .pem file to .ppk, see Convert your private key using PuTTYgen.\n(Linux instances) Set the permissions of your private key so that only you can read it.\nConnect from macOS or Linux\nIf you plan to use an SSH client on a macOS or Linux computer to connect to your Linux instance, use the following command to set the permissions of your private key file so that only you can read it.\nchmod 400 key-pair-name.pem\nIf you do not set these permissions, then you cannot connect to your instance using this key pair. For more information, see Error: Unprotected private key file.\nConnect from Windows\nOpen File Explorer and right-click on the .pem file. Select Properties > Security tab and choose Advanced. Choose Disable inheritance. Remove access to all users except for the current user.\n(Optional) Get the instance fingerprint\nTo protect yourself from man-in-the-middle attacks, you can verify the authenticity of the instance you're about to connect to by verifying the fingerprint that is displayed. Verifying the fingerprint is useful if you launched your instance from a public AMI provided by a third party.\nTask overview\nFirst, get the instance fingerprint from the instance. Then, when you connect to the instance and are prompted to verify the fingerprint, compare the fingerprint you obtained in this procedure with the fingerprint that is displayed. If the fingerprints don't match, someone might be attempting a man-in-the-middle attack. If they match, you can confidently connect to your instance.\nPrerequisites to get the instance fingerprint\nThe instance must not be in the pending state. The fingerprint is available only after the first boot of the instance is complete.\nYou must be the instance owner to get the console output.\nThere are various ways to get the instance fingerprint. If you want to use the AWS CLI, it must be installed on your local computer. For information about installing the AWS CLI, see Getting started with the AWS CLI in the AWS Command Line Interface User Guide.\nTo get the instance fingerprint\nIn Step 1, you get the console output, which includes the instance fingerprint. In Step 2, you find the instance fingerprint in the console output.\nGet the console output using one of the following methods.\nConsole\nAWS CLI\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nFrom the left navigator, choose Instances.\nSelect your instance, and then choose Actions, Monitor and troubleshoot, Get system log.\nIn the console output, find the instance (host) fingerprint, which is located under BEGIN SSH HOST KEY FINGERPRINTS. There might be several instance fingerprints. When you connect to your instance, it will display only one of the fingerprints.\nThe exact output can vary by operating system, AMI version, and whether AWS created the key pairs. The following is example output.\nec2:#############################################################\nec2: -----BEGIN SSH HOST KEY FINGERPRINTS-----\nec2: 256 SHA256:l4UB/neBad9tvkgJf1QZWxheQmR59WgrgzEimCG6kZY no comment (ECDSA)\nec2: 256 SHA256:kpEa+rw/Uq3zxaYZN8KT501iBtJOIdHG52dFi66EEfQ no comment (ED25519)\nec2: 2048 SHA256:L8l6pepcA7iqW/jBecQjVZClUrKY+o2cHLI0iHerbVc no comment (RSA)\nec2: -----END SSH HOST KEY FINGERPRINTS-----\nec2: #############################################################\nNote\nYou'll reference this fingerprint when you connect to the instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/connect-to-linux-instance.html",
        "content": "There are multiple ways to connect to your Linux instance using SSH. Some ways depend on the operating system of the local computer that you connect from. Other methods are browser-based, such as EC2 Instance Connect or AWS Systems Manager Session Manager, and can be used from any computer. You can use SSH to connect to your Linux instance and run commands, or use SSH to transfer files between your local computer and your instance.\nBefore you connect to your Linux instance using SSH, complete the following prerequisites:\nCheck that your instance has passed its status checks. It can take a few minutes for an instance to be ready to accept connection requests. For more information, see View status checks.\nEnsure that the security group associated with your instance allows incoming SSH traffic from your IP address. For more information, see Rules to connect to instances from your computer.\nGet the required instance details.\nLocate the private key and set permissions.\n(Optional) Get the instance fingerprint.\nThen, choose from one of the following options to connect to your Linux instance using SSH.\nConnect using an SSH client\nConnect using PuTTY\nTransfer files using SCP\nIf you can't connect to your instance and need help troubleshooting, see Troubleshoot issues connecting to your Amazon EC2 Linux instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/connect-linux-inst-ssh.html",
        "content": "You can use Secure Shell (SSH) to connect to your Linux instance from your local computer. For more information about other options, see Connect to your EC2 instance.\nNote\nIf you receive an error while attempting to connect to your instance, make sure that your instance meets all of the SSH connection prerequisites. If it meets all of the prerequisites, and you're still not able to connect to your Linux instance, see Troubleshoot issues connecting to your Amazon EC2 Linux instance.\nContents\nSSH connection prerequisites\nConnect to your Linux instance using an SSH client\nSSH connection prerequisites\nBefore you can connect to your Linux instance using SSH, complete the following tasks.\nComplete the general prerequisites.\nCheck that your instance has passed its status checks. It can take a few minutes for an instance to be ready to accept connection requests. For more information, see View status checks.\nGet the required instance details.\nLocate the private key and set permissions.\n(Optional) Get the instance fingerprint.\nAllow inbound SSH traffic from your IP address.\nEnsure that the security group associated with your instance allows incoming SSH traffic from your IP address. For more information, see Rules to connect to instances from your computer.\nInstall an SSH client on your local computer (if needed).\nYour local computer might have an SSH client installed by default. You can verify this by entering the following command in a terminal window. If your computer doesn't recognize the command, you must install an SSH client.\nssh\nThe following are some of the possible options for Windows. If your computer runs a different operating system, see the documentation for that operating system for SSH client options.\nInstall OpenSSH on Windows\nInstall Windows Subsystem for Linux (WSL)\nConnect to your Linux instance using an SSH client\nUse the following procedure to connect to your Linux instance using an SSH client.\nTo connect to your instance using an SSH client\nOpen a terminal window on your computer.\nUse the ssh command to connect to the instance. You need the details about your instance that you gathered as part of the prerequisites. For example, you need the location of the private key (.pem file), the username, and the public DNS name or IPv6 address. The following are example commands.\n(Public DNS) To use the public DNS name, enter the following command.\nssh -i /path/key-pair-name.pem instance-user-name@instance-public-dns-name\n(IPv6) Alternatively, if your instance has an IPv6 address, enter the following command to use the IPv6 address.\nssh -i /path/key-pair-name.pem instance-user-name@instance-IPv6-address\nThe following is an example response.\nThe authenticity of host 'ec2-198-51-100-1.compute-1.amazonaws.com (198-51-100-1)' can't be established.\nECDSA key fingerprint is l4UB/neBad9tvkgJf1QZWxheQmR59WgrgzEimCG6kZY.\nAre you sure you want to continue connecting (yes/no)?\n(Optional) Verify that the fingerprint in the security alert matches the fingerprint. If these fingerprints don't match, someone might be attempting a man-in-the-middle attack. If they match, continue to the next step. For more information, see Get the instance fingerprint.\nEnter yes.\nYou see a response like the following:\nWarning: Permanently added 'ec2-198-51-100-1.compute-1.amazonaws.com' (ECDSA) to the list of known hosts."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/connect-linux-inst-from-windows.html",
        "content": "You can connect to your Linux instance using PuTTY, a free SSH client for Windows.\nIf you're running Windows Server 2019 or later, we recommend that you use OpenSSH, an open source connectivity tool for remote login using the SSH protocol.\nNote\nIf you receive an error while attempting to connect to your instance, make sure that your instance meets all of the SSH connection prerequisites. If it meets all of the prerequisites, and you're still not able to connect to your Linux instance, see Troubleshoot issues connecting to your Amazon EC2 Linux instance.\nContents\nPrerequisites\nConvert your private key using PuTTYgen\nConnect to your Linux instance\nPrerequisites\nBefore you connect to your Linux instance using PuTTY, complete the following tasks.\nComplete the general prerequisites.\nCheck that your instance has passed its status checks. It can take a few minutes for an instance to be ready to accept connection requests. For more information, see View status checks.\nGet the required instance details.\nLocate the private key and set permissions.\n(Optional) Get the instance fingerprint.\nAllow inbound SSH traffic from your IP address.\nEnsure that the security group associated with your instance allows incoming SSH traffic from your IP address. For more information, see Rules to connect to instances from your computer.\nInstall PuTTY on your local computer (if needed).\nDownload and install PuTTY from the PuTTY download page. If you already have an earlier version of PuTTY installed, we recommend that you download the latest version. Be sure to install the entire suite.\nConvert your private key to PPK format using PuTTYgen.\nYou must specify the private key for the key pair that you specified when you launched the instance. If you created the private key in .pem format, you must convert it to a PPK file for use with PuTTY. Locate the private key (.pem file), and then follow the steps in Convert your private key using PuTTYgen.\n(Optional) Convert your private key using PuTTYgen\nPuTTY does not natively support the PEM format for SSH keys. PuTTY provides a tool named PuTTYgen, which converts PEM keys to the required PPK format for PuTTY. If you created the key using PEM format instead of PPK format, you must convert your private key (.pem file) into this format (.ppk file) for use with PuTTY.\nTo convert your private key from PEM to PPK format\nFrom the Start menu, choose All Programs, PuTTY, PuTTYgen.\nUnder Type of key to generate, choose RSA. If your version of PuTTYgen does not include this option, choose SSH-2 RSA.\nChoose Load. By default, PuTTYgen displays only files with the extension .ppk. To locate your .pem file, choose the option to display files of all types.\nSelect your .pem file for the key pair that you specified when you launched your instance and choose Open. PuTTYgen displays a notice that the .pem file was successfully imported. Choose OK.\nTo save the key in the format that PuTTY can use, choose Save private key. PuTTYgen displays a warning about saving the key without a passphrase. Choose Yes.\nNote\nA passphrase on a private key is an extra layer of protection. Even if your private key is discovered, it can't be used without the passphrase. The downside to using a passphrase is that it makes automation harder because human intervention is needed to log on to an instance, or to copy files to an instance.\nSpecify the same name for the key that you used for the key pair (for example, key-pair-name) and choose Save. PuTTY automatically adds the .ppk file extension.\nYour private key is now in the correct format for use with PuTTY. You can now connect to your instance using PuTTY's SSH client.\nConnect to your Linux instance\nUse the following procedure to connect to your Linux instance using PuTTY. You need the .ppk file that you created for your private key. For more information, see (Optional) Convert your private key using PuTTYgen in the preceding section. If you receive an error while attempting to connect to your instance, see Troubleshoot issues connecting to your Amazon EC2 Linux instance.\nLast tested version \u2013 PuTTY .78\nTo connect to your instance using PuTTY\nStart PuTTY (from the Start menu, search for PuTTY and then choose Open).\nIn the Category pane, choose Session and complete the following fields:\nIn the Host Name box, do one of the following:\n(Public DNS) To connect using your instance's public DNS name, enter instance-user-name@instance-public-dns-name.\n(IPv6) Alternatively, if your instance has an IPv6 address, to connect using your instance's IPv6 address, enter instance-user-name@instance-IPv6-address.\nFor information about how to get the username for your instance, and the public DNS name or IPv6 address of your instance, see Get the required instance details.\nEnsure that the Port value is 22.\nUnder Connection type, select SSH.\n(Optional) You can configure PuTTY to automatically send 'keepalive' data at regular intervals to keep the session active. This is useful to avoid disconnecting from your instance due to session inactivity. In the Category pane, choose Connection, and then enter the required interval in Seconds between keepalives. For example, if your session disconnects after 10 minutes of inactivity, enter 180 to configure PuTTY to send keepalive data every 3 minutes.\nIn the Category pane, expand Connection, SSH, and Auth. Choose Credentials.\nNext to Private key file for authentication, choose Browse. In the Select private key file dialog box, select the .ppk file that you generated for your key pair. You can either double-click the file or choose Open in the Select private key file dialog box.\n(Optional) If you plan to connect to this instance again after this session, you can save the session information for future use. In the Category pane, choose Session. Enter a name for the session in Saved Sessions, and then choose Save.\nTo connect to the instance, choose Open.\nIf this is the first time you have connected to this instance, PuTTY displays a security alert dialog box that asks whether you trust the host to which you are connecting.\n(Optional) Verify that the fingerprint in the security alert dialog box matches the fingerprint that you previously obtained in (Optional) Get the instance fingerprint. If these fingerprints don't match, someone might be attempting a \"man-in-the-middle\" attack. If they match, continue to the next step.\nChoose Accept. A window opens and you are connected to your instance.\nNote\nIf you specified a passphrase when you converted your private key to the PuTTY format, you must provide that passphrase when you log in to the instance.\nIf you receive an error while attempting to connect to your instance, see Troubleshoot issues connecting to your Amazon EC2 Linux instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/linux-file-transfer-scp.html",
        "content": "One way to transfer files between your local computer and a Linux instance is to use the secure copy protocol (SCP). This section describes how to transfer files with SCP. The procedure is similar to the procedure for connecting to an instance with SSH.\nBefore you connect to your Linux instance using SCP, complete the following tasks:\nComplete the general prerequisites.\nCheck that your instance has passed its status checks. It can take a few minutes for an instance to be ready to accept connection requests. For more information, see View status checks.\nGet the required instance details.\nLocate the private key and set permissions.\n(Optional) Get the instance fingerprint.\nAllow inbound SSH traffic from your IP address.\nEnsure that the security group associated with your instance allows incoming SSH traffic from your IP address. For more information, see Rules to connect to instances from your computer.\nInstall an SCP client.\nMost Linux, Unix, and Apple computers include an SCP client by default. If yours doesn't, the OpenSSH project provides a free implementation of the full suite of SSH tools, including an SCP client. For more information, see https://www.openssh.com.\nThe following procedure steps you through using SCP to transfer a file using the instance's public DNS name, or the IPv6 address if your instance has one.\nTo use SCP to transfer files between your computer and your instance\nDetermine the location of the source file on your computer and the destination path on the instance. In the following examples, the name of the private key file is key-pair-name.pem, the file to transfer is my-file.txt, the username for the instance is ec2-user, the public DNS name of the instance is instance-public-dns-name, and the IPv6 address of the instance is instance-IPv6-address.\n(Public DNS) To transfer a file to the destination on the instance, enter the following command from your computer.\nscp -i /path/key-pair-name.pem /path/my-file.txt ec2-user@instance-public-dns-name:path/\n(IPv6) To transfer a file to the destination on the instance if the instance has an IPv6 address, enter the following command from your computer. The IPv6 address must be enclosed in square brackets ([ ]), which must be escaped (\\).\nscp -i /path/key-pair-name.pem /path/my-file.txt ec2-user@\\[instance-IPv6-address\\]:path/\nIf you haven't already connected to the instance using SSH, you see a response like the following:\nThe authenticity of host 'ec2-198-51-100-1.compute-1.amazonaws.com (10.254.142.33)'\ncan't be established.\nRSA key fingerprint is 1f:51:ae:28:bf:89:e9:d8:1f:25:5d:37:2d:7d:b8:ca:9f:f5:f1:6f.\nAre you sure you want to continue connecting (yes/no)?\n(Optional) You can optionally verify that the fingerprint in the security alert matches the instance fingerprint. For more information, see (Optional) Get the instance fingerprint.\nEnter yes.\nIf the transfer is successful, the response is similar to the following:\nWarning: Permanently added 'ec2-198-51-100-1.compute-1.amazonaws.com' (RSA) \nto the list of known hosts.\nmy-file.txt                                100%   480     24.4KB/s   00:00\nTo transfer a file in the other direction (from your Amazon EC2 instance to your computer), reverse the order of the host parameters. For example, you can transfer my-file.txt from your EC2 instance to the a destination on your local computer as my-file2.txt, as shown in the following examples.\n(Public DNS) To transfer a file to a destination on your computer, enter the following command from your computer.\nscp -i /path/key-pair-name.pem ec2-user@instance-public-dns-name:path/my-file.txt path/my-file2.txt\n(IPv6) To transfer a file to a destination on your computer if the instance has an IPv6 address, enter the following command from your computer. The IPv6 address must be enclosed in square brackets ([ ]), which must be escaped (\\).\nscp -i /path/key-pair-name.pem ec2-user@\\[instance-IPv6-address\\]:path/my-file.txt path/my-file2.txt"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/managing-users.html",
        "content": "Each Linux instance launches with a default Linux system user. You can add users to your instance and delete users.\nFor the default user, the default username is determined by the AMI that was specified when you launched the instance.\nNote\nBy default, password authentication and root login are disabled, and sudo is enabled. To log in to your instance, you must use a key pair. For more information about logging in, see Connect to your Linux instance using SSH.\nYou can allow password authentication and root login for your instance. For more information, see the documentation for your operating system.\nNote\nLinux system users should not be confused with IAM users. For more information, see IAM users in the IAM User Guide.\nContents\nDefault usernames\nConsiderations\nCreate a user\nRemove a user\nDefault usernames\nThe default username for your EC2 instance is determined by the AMI that was specified when you launched the instance.\nThe default usernames are:\nFor an Amazon Linux AMI, the username is ec2-user.\nFor a CentOS AMI, the username is centos or ec2-user.\nFor a Debian AMI, the username is admin.\nFor a Fedora AMI, the username is fedora or ec2-user.\nFor a RHEL AMI, the username is ec2-user or root.\nFor a SUSE AMI, the username is ec2-user or root.\nFor an Ubuntu AMI, the username is ubuntu.\nFor an Oracle AMI, the username is ec2-user.\nFor a Bitnami AMI, the username is bitnami.\nNote\nTo find the default username for other Linux distributions, check with the AMI provider.\nConsiderations\nUsing the default user is adequate for many applications. However, you may choose to add users so that individuals can have their own files and workspaces. Furthermore, creating users for new users is much more secure than granting multiple (possibly inexperienced) users access to the default user, because the default user can cause a lot of damage to a system when used improperly. For more information, see Tips for Securing Your EC2 Instance.\nTo enable users SSH access to your EC2 instance using a Linux system user, you must share the SSH key with the user. Alternatively, you can use EC2 Instance Connect to provide access to users without the need to share and manage SSH keys. For more information, see Connect to your Linux instance using EC2 Instance Connect.\nCreate a user\nFirst create the user, and then add the SSH public key that allows the user to connect to and log into the instance.\nImportant\nIn Step 1 of this procedure, you create a new key pair. Because a key pair functions like a password, it's crucial to handle it securely. If you create a key pair for a user, you must ensure that the private key is sent to them securely. Alternatively, the user can complete Steps 1 and 2 by creating their own key pair, keeping the private key secure on their machine, and then sending you the public key to complete the procedure from Step 3.\nTo create a user\nCreate a new key pair. You must provide the .pem file to the user for whom you are creating the user. They must use this file to connect to the instance.\nRetrieve the public key from the key pair that you created in the previous step.\n$ ssh-keygen -y -f /path_to_key_pair/key-pair-name.pem\nThe command returns the public key, as shown in the following example.\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQClKsfkNkuSevGj3eYhCe53pcjqP3maAhDFcvBS7O6Vhz2ItxCih+PnDSUaw+WNQn/mZphTk/a/gU8jEzoOWbkM4yxyb/wB96xbiFveSFJuOp/d6RJhJOI0iBXrlsLnBItntckiJ7FbtxJMXLvvwJryDUilBMTjYtwB+QhYXUMOzce5Pjz5/i8SeJtjnV3iAoG/cQk+0FzZqaeJAAHco+CY/5WrUBkrHmFJr6HcXkvJdWPkYQS3xqC0+FmUZofz221CBt5IMucxXPkX4rWi+z7wB3RbBQoQzd8v7yeb7OzlPnWOyN0qFU0XA246RA8QFYiCNYwI3f05p6KLxEXAMPLE\nConnect to the instance.\nUse the adduser command to create the user and add it to the system (with an entry in the /etc/passwd file). The command also creates a group and a home directory for the user. In this example, the user is named newuser.\nAL2023 and Amazon Linux 2\nWith AL2023 and Amazon Linux 2, the user is created with password authentication disabled by default.\n[ec2-user ~]$ sudo adduser newuser\nUbuntu\nInclude the --disabled-password parameter to create the user with password authentication disabled.\n[ubuntu ~]$ sudo adduser newuser --disabled-password\nSwitch to the new user so that the directory and file that you create will have the proper ownership.\n[ec2-user ~]$ sudo su - newuser\nThe prompt changes from ec2-user to newuser to indicate that you have switched the shell session to the new user.\nAdd the SSH public key to the user. First create a directory in the user's home directory for the SSH key file, then create the key file, and finally paste the public key into the key file, as described in the following sub-steps.\nCreate a .ssh directory in the newuser home directory and change its file permissions to 700 (only the owner can read, write, or open the directory).\n[newuser ~]$ mkdir .ssh\n[newuser ~]$ chmod 700 .ssh\nImportant\nWithout these exact file permissions, the user will not be able to log in.\nCreate a file named authorized_keys in the .ssh directory and change its file permissions to 600 (only the owner can read or write to the file).\n[newuser ~]$ touch .ssh/authorized_keys\n[newuser ~]$ chmod 600 .ssh/authorized_keys\nImportant\nWithout these exact file permissions, the user will not be able to log in.\nOpen the authorized_keys file using your favorite text editor (such as vim or nano).\n[newuser ~]$ nano .ssh/authorized_keys\nPaste the public key that you retrieved in Step 2 into the file and save the changes.\nImportant\nEnsure that you paste the public key in one continuous line. The public key must not be split over multiple lines.\nThe user should now be able to log into the newuser user on your instance, using the private key that corresponds to the public key that you added to the authorized_keys file. For more information about the different methods of connecting to a Linux instance, see Connect to your Linux instance using SSH.\nRemove a user\nIf a user is no longer needed, you can remove that user so that it can no longer be used.\nUse the userdel command to remove the user from the system. When you specify the -r parameter, the user's home directory and mail spool are deleted. To keep the user's home directory and mail spool, omit the -r parameter.\n[ec2-user ~]$ sudo userdel -r olduser"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/connecting_to_windows_instance.html",
        "content": "You can connect to Amazon EC2 instances created from most Windows Amazon Machine Images (AMIs) using Remote Desktop. Remote Desktop uses the Remote Desktop Protocol (RDP) to connect to and use your instance in the same way you use a computer sitting in front of you (local computer). It is available on most editions of Windows and is also available for Mac OS.\nThe license for the Windows Server operating system allows two simultaneous remote connections for administrative purposes. The license for Windows Server is included in the price of your Windows instance. If you require more than two simultaneous remote connections, you must purchase a Remote Desktop Services (RDS) license. If you attempt a third connection, an error occurs.\nTip\nIf you need to connect to your instance in order to troubleshoot boot, network configuration, and other issues for instances built on the AWS Nitro System, you can use the EC2 Serial Console for instances.\nContents\nConnect to your Windows instance using an RDP client\nConnect to your Windows instance using Fleet Manager\nTransfer files to a Windows instance using RDP"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/connect-rdp.html",
        "content": "You can connect to your Windows instance using an RDP client as follows.\nTip\nAlternatively, you can connect to your Windows instance using Systems Manager Fleet Manager or EC2 Instance Connect Endpoint.\nPrerequisites\nYou must meet the following prerequisites to connect to your Windows instance using an RDP client.\nComplete the general prerequisites.\nCheck that your instance has passed its status checks. It can take a few minutes for an instance to be ready to accept connection requests. For more information, see View status checks.\nGet the required instance details.\nLocate the private key and set permissions.\n(Optional) Get the instance fingerprint.\nInstall an RDP client.\n(Windows) Windows includes an RDP client by default. To verify, type mstsc at a Command Prompt window. If your computer doesn't recognize this command, download the Microsoft Remote Desktop app from the Microsoft Store.\n(macOS X) Download the Windows App for Mac (previously named Microsoft Remote Desktop from the Mac App Store.\n(Linux) Use Remmina.\nAllow inbound RDP traffic from your IP address.\nEnsure that the security group associated with your instance allows incoming RDP traffic from your IP address. For more information, see Rules to connect to instances from your computer.\nRetrieve the administrator password\nIf you joined your instance to a domain, you can connect to your instance using the domain credentials from AWS Directory Service. On the Remote Desktop login screen, instead of using the local computer name and the generated password, use the fully-qualified username for the administrator (for example, corp.example.com\\Admin), and the password for this account.\nTo connect to a Windows instance using RDP, you must retrieve the initial administrator password and then enter this password when you connect to your instance. It takes a few minutes after instance launch before this password is available. Your account must have permission to call the GetPasswordData action. For more information, see Example policies to control access the Amazon EC2 API.\nThe default username for the Administrator account depends on the language of the operating system (OS) contained in the AMI. To determine the correct username, identify the language of the OS, and then choose the corresponding username. For example, for an English OS, the username is Administrator, for a French OS it's Administrateur, and for a Portuguese OS it's Administrador. If a language version of the OS does not have a username in the same language, choose the username Administrator (Other). For more information, see Localized Names for Administrator Account in Windows in the Microsoft website.\nTo retrieve the initial administrator password\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance and then choose Connect.\nOn the Connect to instance page, choose the RDP client tab.\nFor Username, choose the default username for the Administrator account. The username you choose must match the language of the operating system (OS) contained in the AMI that you used to launch your instance. If there is no username in the same language as your OS, choose Administrator (Other).\nChoose Get password.\nOn the Get Windows password page, do the following:\nChoose Upload private key file and navigate to the private key (.pem) file that you specified when you launched the instance. Select the file and choose Open to copy the entire contents of the file to this window.\nChoose Decrypt password. The Get Windows password page closes, and the default administrator password for the instance appears under Password, replacing the Get password link shown previously.\nCopy the password and save it in a safe place. This password is required to connect to the instance.\nConnect to your Windows instance\nThe following procedure uses the Remote Desktop Connection client for Windows (MSTSC). If you're using a different RDP client, download the RDP file and then see the documentation for the RDP client for the steps to establish the RDP connection.\nTo connect to a Windows instance using an RDP client\nOn the Connect to instance page, choose Download remote desktop file. When the file download is finished, choose Cancel to return to the Instances page. The RDP file is downloaded to your Downloads folder.\nRun mstsc.exe to open the RDP client.\nExpand Show options, choose Open, and select the .rdp file from your Downloads folder.\nBy default, Computer is the public IPv4 DNS name of the instance and User name is the administrator account. To connect to the instance using IPv6 instead, replace the public IPv4 DNS name of the instance with its IPv6 address. Review the default settings and change them as needed.\nChoose Connect. If you receive a warning that the publisher of the remote connection is unknown, choose Connect to continue.\nEnter the password that you saved previously, and then choose OK.\nDue to the nature of self-signed certificates, you might get a warning that the security certificate could not be authenticated. Do one of the following:\nIf you trust the certificate, choose Yes to connect to your instance.\n[Windows] Before you proceed, compare the thumbprint of the certificate with the value in the system log to confirm the identity of the remote computer. Choose View certificate and then choose Thumbprint from the Details tab. Compare this value to the value of RDPCERTIFICATE-THUMBPRINT in Actions, Monitor and troubleshoot, Get system log.\n[Mac OS X] Before you proceed, compare the fingerprint of the certificate with the value in the system log to confirm the identity of the remote computer. Choose Show Certificate, expand Details, and choose SHA1 Fingerprints. Compare this value to the value of RDPCERTIFICATE-THUMBPRINT in Actions, Monitor and troubleshoot, Get system log.\nIf the RDP connection is successful, the RDP client displays the Windows login screen and then the Windows desktop. If you receive an error message instead, see Remote Desktop can't connect to the remote computer. When you are finished with the RDP connection, you can close the RDP client.\nConfigure user accounts\nAfter you connect to your instance over RDP, we recommend that you perform the following tasks:\nChange the administrator password from the default value. You can change the password while you are logged on to the instance itself, just as you would on any computer running Windows Server.\nCreate another user with administrator privileges on the instance. This is a safeguard in case you forget the administrator password or have a problem with the administrator account. The new user must have permission to access the instance remotely. Open System Properties by right-clicking on the This PC icon on your Windows desktop or File Explorer and selecting Properties. Choose Remote settings, and choose Select Users to add the user to the Remote Desktop Users group."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/connect-rdp-fleet-manager.html",
        "content": "You can use Fleet Manager, a capability of AWS Systems Manager, to connect to Windows instances using the Remote Desktop Protocol (RDP) and display up to four Windows instances on the same page in the AWS Management Console. You can connect to the first instance in the Fleet Manager Remote Desktop directly from the Instances page in the Amazon EC2 console. For more information about Fleet Manager, see Connect to a managed instance using Remote Desktop in the AWS Systems Manager User Guide.\nYou do not need to specifically allow incoming RDP traffic from your IP address if you use Fleet Manager to connect. Fleet Manager handles that for you.\nPrerequisites\nBefore attempting to connect to an instance using Fleet Manager, you must set up your environment. For more information, see Setting up your environment in the AWS Systems Manager User Guide.\nTo connect to a Windows instance using Fleet Manager\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nFrom the navigation pane, choose Instances.\nSelect the instance and then choose Connect.\nOn the RDP client tab, for Connection Type, choose Connect using Fleet Manager.\nChoose Fleet Manager Remote Desktop. This opens the Fleet Manager Remote Desktop page in the AWS Systems Manager console.\nEnter your credentials and then choose Connect.\nIf the RDP connection is successful, Fleet Manager displays the Windows desktop. When you are finished with the session, choose Actions, End session.\nFor more information, see Connecting to a Windows Server managed instance using Remote Desktop in the AWS Systems Manager User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/connect-to-linux-instanceWindowsFileTransfer.html",
        "content": "You can work with your Windows instance in the same way that you would work with any Windows server. For example, you can transfer files between a Windows instance and your local computer using the local file sharing feature of the Microsoft Remote Desktop Connection (RDP) software. You can access local files on hard disk drives, DVD drives, portable media drives, and mapped network drives.\nTo access your local files from your Windows instances, you must enable the local file sharing feature by mapping the remote session drive to your local drive. The steps are slightly different depending on whether your local computer operating system is Windows or macOS X.\nFor more information about the prerequisites to connect using RDP, see Prerequisites.\nWindows\nmacOS X\nTo map the remote session drive to your local drive on your local Windows computer\nOpen the Remote Desktop Connection client.\nChoose Show Options.\nAdd the instance host name to the Computer field and username to the User name field, as follows:\nUnder Connection settings, choose Open..., and browse to the RDP shortcut file that you downloaded from the Amazon EC2 console. The file contains the Public IPv4 DNS host name, which identifies the instance, and the Administrator user name.\nSelect the file and choose Open. The Computer and User name fields are populated with the values from the RDP shortcut file.\nChoose Save.\nChoose the Local Resources tab.\nUnder Local devices and resources, choose More...\nOpen Drives and select the local drive to map to your Windows instance.\nChoose OK.\nChoose Connect to connect to your Windows instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/connect-with-systems-manager-session-manager.html",
        "content": "Session Manager is a fully-managed AWS Systems Manager capability for managing your Amazon EC2 instances through an interactive, one-click, browser-based shell, or through the AWS CLI. You can use Session Manager to start a session with an instance in your account. After the session is started, you can run interactive commands on the instance as you would for any other connection type. For more information about Session Manager, see AWS Systems Manager Session Manager in the AWS Systems Manager User Guide.\nPrerequisites\nBefore you attempt to connect to an instance using Session Manager, you must complete the required setup steps. For example, the instance must be managed by SSM and must have an attached IAM role with the AmazonSSMManagedInstanceCore policy. For more information, see Setting up Session Manager.\nTo connect to an Amazon EC2 instance using Session Manager on the Amazon EC2 console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance and choose Connect.\nFor the connection method, choose Session Manager.\nChoose Connect to start the session.\nTroubleshooting\nIf you receive an error that you're not authorized to perform one or more Systems Manager actions (ssm:command-name), you must update your policies to allow you to start sessions from the Amazon EC2 console. For more information and instructions, see Quickstart default IAM policies for Session Manager in the AWS Systems Manager User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/connect-linux-inst-eic.html",
        "content": "Amazon EC2 Instance Connect provides a secure way to connect to your Linux instances over Secure Shell (SSH). With EC2 Instance Connect, you use AWS Identity and Access Management (IAM) policies and principals to control SSH access to your instances, removing the need to share and manage SSH keys. All connection requests using EC2 Instance Connect are logged to AWS CloudTrail so that you can audit connection requests.\nYou can use EC2 Instance Connect to connect to your instances using the Amazon EC2 console or the SSH client of your choice.\nWhen you connect to an instance using EC2 Instance Connect, the EC2 Instance Connect API pushes an SSH public key to the instance metadata where it remains for 60 seconds. An IAM policy attached to your user authorizes your user to push the public key to the instance metadata. The SSH daemon uses AuthorizedKeysCommand and AuthorizedKeysCommandUser, which are configured when EC2 Instance Connect is installed, to look up the public key from the instance metadata for authentication, and connects you to the instance.\nTip\nEC2 Instance Connect is one of the options to connect to your Linux instance. For other options, see Connect to your Linux instance using SSH. To connect to a Windows instance, see Connect to your Windows instance using RDP.\nPricing\nEC2 Instance Connect is available at no additional cost.\nRegion availability\nEC2 Instance Connect is available in all AWS Regions, except the Asia Pacific (Malaysia) Region. It is not supported in Local Zones.\nContents\nTutorial\nPrerequisites\nPermissions\nInstall EC2 Instance Connect\nConnect to an instance\nUninstall EC2 Instance Connect\nFor a blog post that discusses how to improve the security of your bastion hosts using EC2 Instance Connect, see Securing your bastion hosts with Amazon EC2 Instance Connect."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-connect-tutorial.html",
        "content": "To connect to your instance using EC2 Instance Connect in the Amazon EC2 console, you first need to complete the prerequisite configuration that will allow you to successfully connect to your instance. The purpose of this tutorial is to guide you through the tasks to complete the prerequisite configuration.\nTutorial overview\nIn this tutorial, you'll complete the following four tasks:\nTask 1: Grant permissions required to use EC2 Instance Connect\nFirst you'll create an IAM policy that contains the IAM permissions that allow you to push a public key to the instance metadata. You'll attach this policy to your IAM identity (user, user group, or role) so that your IAM identity gets these permissions.\nTask 2: Allow inbound traffic from the EC2 Instance Connect service to your instance\nThen you'll create a security group that allows traffic from the EC2 Instance Connect service to your instance. This is required when you use EC2 Instance Connect in the Amazon EC2 console to connect to your instance.\nTask 3: Launch your instance\nYou'll then launch an EC2 instance using an AMI that is pre-installed with EC2 Instance Connect and you'll add the security group that you created in the previous step.\nTask 4: Connect to your instance\nFinally, you'll use EC2 Instance Connect in the Amazon EC2 console to connect to your instance. If you can connect, then you can be sure that the prerequisite configuration you completed in Tasks 1, 2, and 3 were successful.\nTask 1: Grant permissions required to use EC2 Instance Connect\nWhen you connect to an instance using EC2 Instance Connect, the EC2 Instance Connect API pushes an SSH public key to the instance metadata where it remains for 60 seconds. You need an IAM policy attached to your IAM identity (user, user group, or role) to grant you the required permission to push the public key to the instance metadata.\nTask objective\nYou'll create the IAM policy that grants the permission to push the public key to the instance. The specific action to allow is ec2-instance-connect:SendSSHPublicKey. You must also allow the ec2:DescribeInstances action so that you can view and select your instance in the Amazon EC2 console.\nAfter you've created the policy, you'll attach the policy to your IAM identity (user, user group, or role) so that your IAM identity gets the permissions.\nYou'll create a policy that is configured as follows:\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n            \"Effect\": \"Allow\",\n            \"Action\": \"ec2-instance-connect:SendSSHPublicKey\",\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"ec2:DescribeInstances\",\n            \"Resource\": \"*\"\n        }\n    ]\n}\nImportant\nThe IAM policy created in this tutorial is a highly permissive policy; it allows you to connect to any instance using any AMI username. We're using this highly permissive policy to keep the tutorial simple and focused on the specific configurations that this tutorial is teaching. However, in a production environment, we recommend that your IAM policy is configured to provide least-privilege permissions. For example IAM policies, see Grant IAM permissions for EC2 Instance Connect.\nTo create and attach an IAM policy that allows you to use EC2 Instance Connect to connect to your instances\nFirst create the IAM policy\nOpen the IAM console at https://console.aws.amazon.com/iam/.\nIn the navigation pane, choose Policies.\nChoose Create policy.\nOn the Specify permission page, do the following:\nFor Service, choose EC2 Instance Connect.\nUnder Actions allowed, in the search field start typing send to show the relevant actions, and then select SendSSHPublicKey.\nUnder Resources, choose All. For a production environment, we recommend specifying the instance by its ARN, but for this tutorial, you're allowing all instances.\nChoose Add more permissions.\nFor Service, choose EC2.\nUnder Actions allowed, in the search field start typing describein to show the relevant actions, and then select DescribeInstances.\nChoose Next.\nOn the Review and create page, do the following:\nFor Policy name, enter a name for the policy.\nChoose Create policy.\nThen attach the policy to your identity\nIn the IAM console, in the navigation pane, choose Policies.\nIn the list of policies, select the option button next to the name of the policy you created. You can use the search box to filter the list of policies.\nChoose Actions, Attach.\nUnder IAM entities, select the checkbox next to your identity (user, user group, or role). You can use the search box to filter the list of entities.\nChoose Attach policy.\nView an animation: Create an IAM policy\nView an animation: Attach an IAM policy\nTask 2: Allow inbound traffic from the EC2 Instance Connect service to your instance\nWhen you use EC2 Instance Connect in the Amazon EC2 console to connect to an instance, the traffic that must be allowed to reach the instance is traffic from the EC2 Instance Connect service. This is different to connecting from your local computer to an instance; in that case, you must allow traffic from your local computer to your instance. To allow traffic from the EC2 Instance Connect service, you must create a security group that allows inbound SSH traffic from the IP address range for the EC2 Instance Connect service.\nAWS uses prefix lists to manage IP address ranges. The names of the EC2 Instance Connect prefix lists are as follows, with region replaced by the Region code:\nIPv4 prefix list name: com.amazonaws.region.ec2-instance-connect\nIPv6 prefix list name: com.amazonaws.region.ipv6.ec2-instance-connect\nTask objective\nYou'll create a security group that allows inbound SSH traffic on port 22 from the IPv4 prefix list in the Region in which your instance is located.\nTo create a security group that allows inbound traffic from the EC2 Instance Connect service to your instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Security Groups.\nChoose Create security group.\nUnder Basic details, do the following:\nFor Security group name, enter a meaningful name for your security group.\nFor Description, enter a meaningful description for your security group.\nUnder Inbound rules, do the following:\nChoose Add rule.\nFor Type, choose SSH.\nFor Source, leave Custom.\nIn the field next to Source, select the prefix list for EC2 Instance Connect.\nFor example, if your instance is located in the US East (N. Virginia) (us-east-1) Region and your users will connect to its public IPv4 address, choose the following prefix list: com.amazonaws.us-east-1.ec2-instance-connect\nChoose Create security group.\nView an animation: Create the security group\nTask 3: Launch your instance\nWhen you launch an instance, you must specify an AMI that contains the information required to launch the instance. You can choose to launch an instance with or without EC2 Instance Connect pre-installed. In this task, we specify an AMI that comes pre-installed with EC2 Instance Connect.\nIf you launch your instance without EC2 Instance Connect pre-installed, and you want to use EC2 Instance Connect to connect to your instance, you'll need to perform additional configuration steps. These steps are outside the scope of this tutorial.\nTask objective\nYou'll launch an instance with the Amazon Linux 2023 AMI, which comes pre-installed with EC2 Instance Connect. You'll also specify the security group that you created earlier so that you can use EC2 Instance Connect in the Amazon EC2 console to connect to your instance. Because you'll use EC2 Instance Connect to connect to your instance, which pushes a public key to your instance's metadata, you won't need to specify an SSH key when you launch your instance.\nTo launch an instance that can use EC2 Instance Connect in the Amazon EC2 console for connection\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation bar at the top of the screen, the current AWS Region is displayed (for example, Ireland). Select a Region in which to launch your instance. This choice is important because you created a security group that allows traffic for a specific Region, so you must select the same Region in which to launch your instance.\nFrom the Amazon EC2 console dashboard, choose Launch instance.\n(Optional) Under Name and tags, for Name, enter a descriptive name for your instance.\nUnder Application and OS Images (Amazon Machine Image), choose Quick Start. Amazon Linux is selected by default. Under Amazon Machine Image (AMI), Amazon Linux 2023 AMI is selected by default. Keep the default selection for this task.\nUnder Instance type, for Instance type, keep the default selection, or choose a different instance type.\nUnder Key pair (login), for Key pair name, choose Proceed without a key pair (Not recommended). When you use EC2 Instance Connect to connect to an instance, EC2 Instance Connect pushes a key pair to the instance's metadata, and it is this key pair that is used for the connection.\nUnder Network settings, do the following:\nFor Auto-assign public IP, leave Enable.\nNote\nTo use EC2 Instance Connect in the Amazon EC2 console to connect to an instance, the instance must have a public IPv4 or public IPv6 address.\nFor Firewall (security groups), choose Select existing security group.\nUnder Common security groups, choose the security group that you created earlier.\nIn the Summary panel, choose Launch instance.\nView an animation: Launch your instance\nTask 4: Connect to your instance\nWhen you connect to an instance using EC2 Instance Connect, the EC2 Instance Connect API pushes an SSH public key to the instance metadata where it remains for 60 seconds. The SSH daemon uses AuthorizedKeysCommand and AuthorizedKeysCommandUser to look up the public key from the instance metadata for authentication, and connects you to the instance.\nTask objective\nIn this task, you'll connect to your instance using EC2 Instance Connect in the Amazon EC2 console. If you completed the prerequisite Tasks 1, 2, and 3, the connection should be successful.\nSteps to connect to your instance\nUse the following steps to connect to your instance. To view an animation of the steps, see View an animation: Connect to your instance.\nTo connect an instance using EC2 Instance Connect in the Amazon EC2 console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation bar at the top of the screen, the current AWS Region is displayed (for example, Ireland). Select the Region in which your instance is located.\nIn the navigation pane, choose Instances.\nSelect your instance and choose Connect.\nChoose the EC2 Instance Connect tab.\nFor Connection type, choose Connect using EC2 Instance Connect.\nChoose Connect.\nA terminal window opens in the browser, and you are connected to your instance.\nView an animation: Connect to your instance"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-connect-prerequisites.html",
        "content": "The following are the prerequisites for installing and using EC2 Instance Connect:\nInstall EC2 Instance Connect\nEnsure network connectivity\nAllow inbound SSH traffic\nGrant permissions\nInstall an SSH client on your local computer\nMeet username requirements\nInstall EC2 Instance Connect\nTo use EC2 Instance Connect to connect to an instance, the instance must have EC2 Instance Connect installed. You can either launch the instance using an AMI that comes pre-installed with EC2 Instance Connect, or you can install EC2 Instance Connect on instances that are launched with supported AMIs. For more information, see Install EC2 Instance Connect on your EC2 instances.\nEnsure network connectivity\nInstances can be configured to allow users to connect to your instance over the internet or through the instance's private IP address. Depending on how your users will connect to your instance using EC2 Instance Connect, you must configure the following network access:\nIf your users will connect to your instance over the internet, then your instance must have a public IPv4 or public IPv6 address and be in a public subnet with a route to the internet. If you haven't modified your default public subnet, then it contains a route to the internet for IPv4 only, and not for IPv6. For more information, see Enable VPC internet access using internet gateways in the Amazon VPC User Guide.\nIf your users will connect to your instance through the instance's private IPv4 address, then you must establish private network connectivity to your VPC, such as by using AWS Direct Connect, AWS Site-to-Site VPN, or VPC peering, so that your users can reach the instance's private IP address.\nIf your instance does not have a public IPv4 or public IPv6 address and you prefer not to configure the network access as described above, you can consider EC2 Instance Connect Endpoint as an alternative to EC2 Instance Connect. With EC2 Instance Connect Endpoint, you can connect to an instance using SSH or RDP even if the instance does not have a public IPv4 or public IPv6 address. For more information, see Connect to your Linux instance using the Amazon EC2 console.\nAllow inbound SSH traffic\nWhen using the Amazon EC2 console to connect to an instance\nWhen users connect to an instance using the Amazon EC2 console, the traffic that must be allowed to reach the instance is traffic from the EC2 Instance Connect service. The service is identified by specific IP address ranges, which AWS manages through prefix lists. You must create a security group that allows inbound SSH traffic from the EC2 Instance Connect service. To configure this, for the inbound rule, in the field next to Source, select the EC2 Instance Connect prefix list.\nAWS provides different managed prefix lists for IPv4 and IPv6 addresses for each Region. The names of the EC2 Instance Connect prefix lists are as follows, with region replaced by the Region code:\nIPv4 prefix list name: com.amazonaws.region.ec2-instance-connect\nIPv6 prefix list name: com.amazonaws.region.ipv6.ec2-instance-connect\nFor the instructions for creating the security group, see Task 2: Allow inbound traffic from the EC2 Instance Connect service to your instance. For more information, see Available AWS-managed prefix lists in the Amazon VPC User Guide.\nWhen using the CLI or SSH to connect to an instance\nEnsure that the security group associated with your instance allows inbound SSH traffic on port 22 from your IP address or from your network. The default security group for the VPC does not allow incoming SSH traffic by default. The security group created by the launch instance wizard allows incoming SSH traffic by default. For more information, see Rules to connect to instances from your computer.\nGrant permissions\nYou must grant the required permissions to every IAM user who will use EC2 Instance Connect to connect to an instance. For more information, see Grant IAM permissions for EC2 Instance Connect.\nInstall an SSH client on your local computer\nIf your users will connect using SSH, they must ensure that their local computer has an SSH client.\nA user's local computer most likely has an SSH client installed by default. They can check for an SSH client by typing ssh at the command line. If their local computer doesn't recognize the command, they can install an SSH client. For information about installing an SSH client on Linux or macOS X, see http://www.openssh.com. For information about installing an SSH client on Windows 10, see OpenSSH in Windows.\nThere is no need to install an SSH client on a local computer if your users use only the Amazon EC2 console to connect to an instance.\nMeet username requirements\nWhen using EC2 Instance Connect to connect to an instance, the username must meet the following requirements:\nFirst character: Must be a letter (A-Z, a-z), a digit (0-9), or an underscore (_)\nSubsequent characters: Can be letters (A-Z, a-z), digits (0-9), or the following characters: @ . _ -\nMinimum length: 1 character\nMaximum length: 31 characters"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-connect-configure-IAM-role.html",
        "content": "To connect to an instance using EC2 Instance Connect, you must create an IAM policy that grants your users permissions for the following actions and condition:\nec2-instance-connect:SendSSHPublicKey action \u2013 Grants permission to push the public key to an instance.\nec2:osuser condition \u2013 Specifies the name of the OS user that can push the public key to an instance. Use the default username for the AMI that you used to launch the instance. The default username for AL2023 and Amazon Linux 2 is ec2-user, and for Ubuntu it's ubuntu.\nec2:DescribeInstances action \u2013 Required when using the EC2 console because the wrapper calls this action. Users might already have permission to call this action from another policy.\nec2:DescribeVpcs action \u2013 Required when connecting to an IPv6 address.\nConsider restricting access to specific EC2 instances. Otherwise, all IAM principals with permission for the ec2-instance-connect:SendSSHPublicKey action can connect to all EC2 instances. You can restrict access by specifying resource ARNs or by using resource tags as condition keys.\nFor more information, see Actions, resources, and condition keys for Amazon EC2 Instance Connect.\nFor information about creating IAM policies, see Creating IAM policies in the IAM User Guide.\nAllow users to connect to specific instances\nThe following IAM policy grants permission to connect to specific instances, identified by their resource ARNs.\nIn the following example IAM policy, the following actions and condition are specified:\nThe ec2-instance-connect:SendSSHPublicKey action grants users permission to connect to two instances, specified by the resource ARNs. To grant users permission to connect to all EC2 instances, replace the resource ARNs with the * wildcard.\nThe ec2:osuser condition grants permission to connect to the instances only if the ami-username is specified when connecting.\nThe ec2:DescribeInstances action is specified to grant permission to users who will use the console to connect to your instances. If your users will only use an SSH client to connect to your instances, you can omit ec2:DescribeInstances. Note that the ec2:Describe* API actions do not support resource-level permissions. Therefore, the * wildcard is necessary in the Resource element.\nThe ec2:DescribeVpcs action is specified to grant permission to users who will use the console to connect to your instances using an IPv6 address. If your users will only use a public IPv4 address, you can omit ec2:DescribeVpcs. Note that the ec2:Describe* API actions do not support resource-level permissions. Therefore, the * wildcard is necessary in the Resource element.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n            \"Effect\": \"Allow\",\n            \"Action\": \"ec2-instance-connect:SendSSHPublicKey\",\n            \"Resource\": [\n                \"arn:aws:ec2:region:account-id:instance/i-1234567890abcdef0\",\n                \"arn:aws:ec2:region:account-id:instance/i-0598c7d356eba48d7\"\n            ],\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"ec2:osuser\": \"ami-username\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:DescribeInstances\",\n                \"ec2:DescribeVpcs\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\nAllow users to connect to instances with specific tags\nAttribute-based access control (ABAC) is an authorization strategy that defines permissions based on tags that can be attached to users and AWS resources. You can use resource tags to control access to an instance. For more information about using tags to control access to your AWS resources, see Controlling access to AWS resources in the IAM User Guide.\nIn the following example IAM policy, the ec2-instance-connect:SendSSHPublicKey action grants users permission to connect to any instance (indicated by the * wildcard in the resource ARN) on condition that the instance has a resource tag with key=tag-key and value=tag-value.\nThe ec2:DescribeInstances action is specified to grant permission to users who will use the console to connect to your instances. If your users will use only an SSH client to connect to your instances, you can omit ec2:DescribeInstances. Note that the ec2:Describe* API actions do not support resource-level permissions. Therefore, the * wildcard is necessary in the Resource element.\nThe ec2:DescribeVpcs action is specified to grant permission to users who will use the console to connect to your instances using an IPv6 address. If your users will only use a public IPv4 address, you can omit ec2:DescribeVpcs. Note that the ec2:Describe* API actions do not support resource-level permissions. Therefore, the * wildcard is necessary in the Resource element.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n            \"Effect\": \"Allow\",\n            \"Action\": \"ec2-instance-connect:SendSSHPublicKey\", \n            \"Resource\": \"arn:aws:ec2:region:account-id:instance/*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"aws:ResourceTag/tag-key\": \"tag-value\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:DescribeInstances\",\n                \"ec2:DescribeVpcs\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-connect-set-up.html",
        "content": "To connect to a Linux instance using EC2 Instance Connect, the instance must have EC2 Instance Connect installed. Installing EC2 Instance Connect configures the SSH daemon on the instance.\nFor more information about the EC2 Instance Connect package, see aws/aws-ec2-instance-connect-config on the GitHub website.\nNote\nIf you configured the AuthorizedKeysCommand and AuthorizedKeysCommandUser settings for SSH authentication, the EC2 Instance Connect installation will not update them. As a result, you can't use EC2 Instance Connect.\nInstall prerequisites\nBefore you install EC2 Instance Connect, ensure that you meet the following prerequisites.\nVerify that the instance uses one of the following:\nAmazon Linux 2 prior to version 2.0.20190618\nAL2023 minimal AMI or Amazon ECS-optimized AMI\nCentOS Stream 8 and 9\nmacOS Sonoma prior to 14.2.1, Ventura prior to 13.6.3, and Monterey prior to 12.7.2\nRed Hat Enterprise Linux (RHEL) 8 and 9\nUbuntu 16.04 and 18.04\nTip\nIf you launched your instance using a later version of Amazon Linux, macOS Sonoma, macOS Ventura, macOS Monterey, or Ubuntu, it comes pre-installed with EC2 Instance Connect, and therefore you do not need to install it yourself.\nVerify the general prerequisites for EC2 Instance Connect.\nFor more information, see Prerequisites for EC2 Instance Connect.\nVerify the prerequisites for connecting to your instance using an SSH client on your local machine.\nFor more information, see Connect to your Linux instance using SSH.\nGet the ID of the instance.\nYou can get the ID of your instance using the Amazon EC2 console (from the Instance ID column). If you prefer, you can use the describe-instances (AWS CLI) or Get-EC2Instance (AWS Tools for Windows PowerShell) command.\nManually install EC2 Instance Connect\nNote\nIf you launched your instance using one of the following AMIs, EC2 Instance Connect is pre-installed and you can skip this procedure:\nAL2023 standard AMI\nAmazon Linux 2 2.0.20190618 or later\nmacOS Sonoma 14.2.1 or later\nmacOS Ventura 13.6.3 or later\nmacOS Monterey 12.7.2 or later\nUbuntu 20.04 or later\nUse one of the following procedures for installing EC2 Instance Connect, depending on the operating system of your instance.\nAmazon Linux 2\nCentOS\nmacOS\nRHEL\nUbuntu\nTo install EC2 Instance Connect on an instance launched with Amazon Linux 2\nConnect to your instance using SSH.\nReplace the example values in the following command with your values. Use the SSH key pair that was assigned to your instance when you launched it and the default username of the AMI that you used to launch your instance. For Amazon Linux 2, the default username is ec2-user.\n$ ssh -i my_ec2_private_key.pem ec2-user@ec2-a-b-c-d.us-west-2.compute.amazonaws.com\nFor more information about connecting to your instance, see Connect to your Linux instance using an SSH client.\nInstall the EC2 Instance Connect package on your instance.\n[ec2-user ~]$ sudo yum install ec2-instance-connect\nYou should see three new scripts in the /opt/aws/bin/ folder:\neic_curl_authorized_keys\neic_parse_authorized_keys\neic_run_authorized_keys\n(Optional) Verify that EC2 Instance Connect was successfully installed on your instance.\n[ec2-user ~]$ sudo less /etc/ssh/sshd_config\nEC2 Instance Connect was successfully installed if the AuthorizedKeysCommand and AuthorizedKeysCommandUser lines contain the following values:\nAuthorizedKeysCommand /opt/aws/bin/eic_run_authorized_keys %u %f\nAuthorizedKeysCommandUser ec2-instance-connect\nAuthorizedKeysCommand sets the eic_run_authorized_keys script to look up the keys from the instance metadata\nAuthorizedKeysCommandUser sets the system user as ec2-instance-connect\nNote\nIf you previously configured AuthorizedKeysCommand and AuthorizedKeysCommandUser, the EC2 Instance Connect installation will not change the values and you will not be able to use EC2 Instance Connect."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-connect-methods.html",
        "content": "The following instructions explain how to connect to your Linux instance using EC2 Instance Connect through the Amazon EC2 console, the AWS CLI, or an SSH client.\nWhen you connect to an instance using EC2 Instance Connect through the console or AWS CLI, the EC2 Instance Connect API automatically pushes an SSH public key to the instance metadata where it remains for 60 seconds. An IAM policy attached to your user authorizes this action. If you prefer using your own SSH key, you can use an SSH client and explicitly push your SSH key to the instance using EC2 Instance Connect.\nRequirements\nBefore you begin, be sure to review the prerequisites.\nConnection options\nConnect using the Amazon EC2 console\nConnect using the AWS CLI\nConnect using your own key and SSH client\nTroubleshoot\nConnect using the Amazon EC2 console\nYou can connect to an instance using EC2 Instance Connect through the Amazon EC2 console.\nRequirements\nTo connect using the Amazon EC2 console, the instance must have either a public IPv4 or a public IPv6 address. If the instance only has a private IPv4 address, you can use the ec2-instance-connect AWS CLI to connect.\nTo connect to your instance using the Amazon EC2 console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance and choose Connect.\nChoose the EC2 Instance Connect tab.\nFor Connection type, choose Connect using EC2 Instance Connect.\nIf there is a choice, select the IP address to connect to. Otherwise, the IP address is selected automatically.\nFor Username, verify the username.\nChoose Connect to establish a connection. An in-browser terminal window opens.\nConnect using the AWS CLI\nYou can use the ec2-instance-connect AWS CLI to connect to your instance with an SSH client. EC2 Instance Connect attempts to establish a connection using an available IP address in a predefined order, based on the specified connection type. If an IP address isn't available, it automatically tries the next one in the order.\nConnection types\nauto (default)\nEC2 Instance Connect tries to connect using the instance's IP addresses in the following order and with the corresponding connection type:\nPublic IPv4: direct\nPrivate IPv4: eice\nPublic IPv6: direct\ndirect\nEC2 Instance Connect tries to connect using the instance's IP addresses in the following order:\nPublic IPv4\nPublic IPv6\nPrivate IPv4 (it does not connect over an EC2 Instance Connect Endpoint)\neice\nEC2 Instance Connect tries to connect using the instance's private IPv4 address and an EC2 Instance Connect Endpoint.\nNote\nIn the future, we might change the behavior of the auto connection type. To ensure that your desired connection type is used, we recommend that you explictly set the --connection-type to either direct or eice.\nConnecting to a private IPv6 address is not supported when using the ec2-instance-connect AWS CLI.\nRequirements\nYou must use AWS CLI version 2. For more information, see Install or update to the latest version of the AWS CLI.\nTo connect to an instance using the instance ID\nIf you only know the instance ID, and want to let EC2 Instance Connect determine the connection type to use when connecting to your instance, use the ec2-instance-connect CLI and specify the ssh command and the instance ID.\naws ec2-instance-connect ssh --instance-id i-1234567890example\nTo connect to an instance using the instance ID and an EC2 Instance Connect Endpoint\nIf you want to connect to your instance over an EC2 Instance Connect Endpoint, use the preceding command and also specify the --connection-type parameter with the eice value.\naws ec2-instance-connect ssh --instance-id i-1234567890example --connection-type eice\nTo connect to an instance using the instance ID and your own private key file\nIf you want to connect to your instance over an EC2 Instance Connect Endpoint using your own private key, specify the instance ID and the path to the private key file. Do not include file:// in the path; the following example will fail: file:///path/to/key.\naws ec2-instance-connect ssh --instance-id i-1234567890example --private-key-file /path/to/key.pem\nTip\nIf you get an error when using these commands, make sure that you're using AWS CLI version 2, because the ssh command is only available in this major version. We also recommend regularly updating to the latest minor version of AWS CLI version 2 to access the latest features. For more information, see About AWS CLI version 2 in the AWS Command Line Interface User Guide.\nConnect using your own key and SSH client\nYou can use your own SSH key and connect to your instance from the SSH client of your choice while using the EC2 Instance Connect API. This enables you to benefit from the EC2 Instance Connect capability to push a public key to the instance. This connection method works for instances with public and private IP addresses.\nRequirements\nRequirements for key pairs\nSupported types: RSA (OpenSSH and SSH2) and ED25519\nSupported lengths: 2048 and 4096\nFor more information, see Create a key pair using a third-party tool and import the public key to Amazon EC2.\nWhen connecting to an instance that has only private IP addresses, the local computer from which you are initiating the SSH session must have connectivity to the EC2 Instance Connect service endpoint (to push your SSH public key to the instance) as well as network connectivity to the instance's private IP address to establish the SSH session. The EC2 Instance Connect service endpoint is reachable over the internet or over an AWS Direct Connect public virtual interface. To connect to the instance's private IP address, you can leverage services such as AWS Direct Connect, AWS Site-to-Site VPN, or VPC peering.\nTo connect to your instance using your own key and any SSH client\n(Optional) Generate new SSH private and public keys\nYou can generate new SSH private and public keys, my_key and my_key.pub, using the following command:\nssh-keygen -t rsa -f my_key\nPush your SSH public key to the instance\nUse the send-ssh-public-key command to push your SSH public key to the instance. If you launched your instance using AL2023 or Amazon Linux 2, the default username for the AMI is ec2-user. If you launched your instance using Ubuntu, the default username for the AMI is ubuntu.\nThe following example pushes the public key to the specified instance in the specified Availability Zone, to authenticate ec2-user.\naws ec2-instance-connect send-ssh-public-key \\\n    --region us-west-2 \\\n    --availability-zone us-west-2b \\\n    --instance-id i-001234a4bf70dec41EXAMPLE \\\n    --instance-os-user ec2-user \\\n    --ssh-public-key file://my_key.pub\nConnect to the instance using your private key\nUse the ssh command to connect to the instance using the private key before the public key is removed from the instance metadata (you have 60 seconds before it is removed). Specify the private key that corresponds to the public key, the default username for the AMI that you used to launch your instance, and the instance's public DNS name (if connecting over a private network, specify the private DNS name or IP address). Add the IdentitiesOnly=yes option to ensure that only the files in the ssh config and the specified key are used for the connection.\nssh -o \"IdentitiesOnly=yes\" -i my_key ec2-user@ec2-198-51-100-1.compute-1.amazonaws.com\nTroubleshoot\nIf you receive an error while attempting to connect to your instance, see the following:\nTroubleshoot issues connecting to your Amazon EC2 Linux instance\nHow do I troubleshoot issues connecting to my EC2 instance using EC2 Instance Connect?"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-connect-uninstall.html",
        "content": "To disable EC2 Instance Connect, connect to your Linux instance and uninstall the ec2-instance-connect package that is installed on the OS. If the sshd configuration matches what it was set to when you installed EC2 Instance Connect, uninstalling ec2-instance-connect also removes the sshd configuration. If you modified the sshd configuration after installing EC2 Instance Connect, you must update it manually.\nAmazon Linux\nUbuntu\nYou can uninstall EC2 Instance Connect on AL2023 and Amazon Linux 2 2.0.20190618 or later, where EC2 Instance Connect is preconfigured.\nTo uninstall EC2 Instance Connect on an instance launched using Amazon Linux\nConnect to your instance using SSH. Specify the SSH key pair you used for your instance when you launched it and the default username for the AL2023 or Amazon Linux 2 AMI, which is ec2-user.\nFor example, the following ssh command connects to the instance with the public DNS name ec2-a-b-c-d.us-west-2.compute.amazonaws.com, using the key pair my_ec2_private_key.pem.\n$ ssh -i my_ec2_private_key.pem ec2-user@ec2-a-b-c-d.us-west-2.compute.amazonaws.com\nUninstall the ec2-instance-connect package using the yum command.\n[ec2-user ~]$ sudo yum remove ec2-instance-connect"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/connect-with-ec2-instance-connect-endpoint.html",
        "content": "EC2 Instance Connect Endpoint allows you to connect securely to an instance from the internet, without using a bastion host, or requiring that your virtual private cloud (VPC) has direct internet connectivity.\nBenefits\nYou can connect to your instances without requiring the instances to have a public IPv4 address. AWS charges for all public IPv4 addresses, including public IPv4 addresses associated with running instances and Elastic IP addresses. For more information, see the Public IPv4 Address tab on the Amazon VPC pricing page.\nYou can connect to your instances from the internet without requiring that your VPC has direct internet connectivity through an internet gateway.\nYou can control access to the creation and use of the EC2 Instance Connect Endpoints to connect to instances using IAM policies and permissions.\nAll attempts to connect to your instances, both successful and unsuccessful, are logged to CloudTrail.\nPricing\nThere is no additional cost for using EC2 Instance Connect Endpoints. If you use an EC2 Instance Connect Endpoint to connect to an instance in a different Availability Zone, there is an additional charge for data transfer across Availability Zones.\nContents\nHow it works\nConsiderations\nPermissions\nSecurity groups\nCreate an EC2 Instance Connect Endpoint\nConnect to an instance\nLog connections\nDelete an EC2 Instance Connect Endpoint\nService-linked role\nQuotas\nHow it works\nEC2 Instance Connect Endpoint is an identity-aware TCP proxy. The EC2 Instance Connect Endpoint Service establishes a private tunnel from your computer to the endpoint using the credentials for your IAM entity. Traffic is authenticated and authorized before it reaches your VPC.\nYou can configure additional security group rules to restrict inbound traffic to your instances. For example, you can use inbound rules to allow traffic on management ports only from the EC2 Instance Connect Endpoint.\nYou can configure route table rules to allow the endpoint to connect to any instance in any subnet of the VPC.\nThe following diagram shows how a user can connect to their instances from the internet using an EC2 Instance Connect Endpoint. First, create an EC2 Instance Connect Endpoint in subnet A. We create a network interface for the endpoint in the subnet, which serves as the entry point for traffic destined to your instances in the VPC. If the route table for subnet B allows traffic from subnet A, then you can use the endpoint to reach instances in subnet B.\nConsiderations\nBefore you begin, consider the following.\nEC2 Instance Connect Endpoint is intended specifically for management traffic use cases, not for high volume data transfers. High volume data transfers are throttled.\nYour instance must have an IPv4 address (either private or public). EC2 Instance Connect Endpoint does not support connecting to instances using IPv6 addresses.\n(Linux instances) If you use your own key pair, you can use any Linux AMI. Otherwise, your instance must have EC2 Instance Connect installed. For information about which AMIs include EC2 Instance Connect and how to install it on other supported AMIs, see Install EC2 Instance Connect.\nYou can assign a security group to an EC2 Instance Connect Endpoint when you create it. Otherwise, we use the default security group for the VPC. The security group for an EC2 Instance Connect Endpoint must allow outbound traffic to the destination instances. For more information, see Security groups for EC2 Instance Connect Endpoint.\nYou can configure an EC2 Instance Connect Endpoint to preserve the source IP addresses of clients when routing requests to the instances. Otherwise, the IP address of the network interface becomes the client IP address for all incoming traffic.\nIf you turn on client IP preservation, the security groups for the instances must allow traffic from the clients. Also, the instances must be in the same VPC as the EC2 Instance Connect Endpoint.\nIf you turn off client IP preservation, the security groups for the instances must allow traffic from the VPC. This is the default.\nThe following instance types do not support client IP preservation: C1, CG1, CG2, G1, HI1, M1, M2, M3, and T1. If you turn on client IP preservation and attempt to connect to an instance with one of these instance types by using EC2 Instance Connect Endpoint, the connection fails.\nClient IP preservation is not supported when traffic is routed through a transit gateway.\nWhen you create an EC2 Instance Connect Endpoint, a service-linked role is automatically created for the Amazon EC2 service in AWS Identity and Access Management (IAM). Amazon EC2 uses the service-linked role to provision network interfaces in your account, which are required when creating EC2 Instance Connect Endpoints. For more information, see Service-linked role for EC2 Instance Connect Endpoint.\nYou can create only 1 EC2 Instance Connect Endpoint per VPC and per subnet. For more information, see Quotas for EC2 Instance Connect Endpoint. If you need to create another EC2 Instance Connect Endpoint in a different Availability Zone within the same VPC, you must first delete the existing EC2 Instance Connect Endpoint. Otherwise, you'll receive a quota error.\nEach EC2 Instance Connect Endpoint can support up to 20 concurrent connections.\nThe maximum duration for an established TCP connection is 1 hour (3,600 seconds). You can specify the maximum allowed duration in an IAM policy, which can be up to 3,600 seconds. For more information, see Permissions to use EC2 Instance Connect Endpoint to connect to instances."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/permissions-for-ec2-instance-connect-endpoint.html",
        "content": "By default, IAM entities don't have permission to create, describe, or modify EC2 Instance Connect Endpoints. An IAM administrator can create IAM policies that grant the permissions required to perform specific actions on the resources that they need.\nFor information about creating IAM policies, see Creating IAM policies in the IAM User Guide.\nThe following example policies show have you can control the permissions that users have to EC2 Instance Connect Endpoints.\nExamples\nPermissions to create, describe, and delete EC2 Instance Connect Endpoints\nPermissions to use EC2 Instance Connect Endpoint to connect to instances\nPermissions to connect only from a specific IP address range\nPermissions to create, describe, and delete EC2 Instance Connect Endpoints\nTo create an EC2 Instance Connect Endpoint, users require permissions for the following actions:\nec2:CreateInstanceConnectEndpoint\nec2:CreateNetworkInterface\nec2:CreateTags\niam:CreateServiceLinkedRole\nTo describe and delete EC2 Instance Connect Endpoints, users require permissions for the following actions:\nec2:DescribeInstanceConnectEndpoints\nec2:DeleteInstanceConnectEndpoint\nYou can create a policy that grants permission to create, describe, and delete EC2 Instance Connect Endpoints in all subnets. Alternatively, you can restrict actions for specified subnets only by specifying the subnet ARNs as the allowed Resource or by using the ec2:SubnetID condition key. You can also use the aws:ResourceTag condition key to explicitly allow or deny endpoint creation with certain tags. For more information, see Policies and permissions in IAM in the IAM User Guide.\nExample IAM policy\nIn the following example IAM policy, the Resource section grants permission to create and delete endpoints in all subnets, specified by the asterisk (*). The ec2:Describe* API actions do not support resource-level permissions. Therefore, the * wildcard is necessary in the Resource element.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n            \"Sid\": \"GrantAllActionsInAllSubnets\",\n            \"Action\": [\n                \"ec2:CreateInstanceConnectEndpoint\",\n                \"ec2:DeleteInstanceConnectEndpoint\",\n                \"ec2:CreateNetworkInterface\",\n                \"ec2:CreateTags\",\n                \"iam:CreateServiceLinkedRole\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": \"arn:aws:ec2:region:account-id:subnet/*\"\n        },\n        {\n            \"Action\": [\n                \"ec2:CreateNetworkInterface\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": \"arn:aws:ec2:::security-group/*\"\n        },\n        {\n            \"Sid\": \"DescribeInstanceConnectEndpoints\",\n            \"Action\": [\n                \"ec2:DescribeInstanceConnectEndpoints\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": \"*\"\n        }\n    ]\n}\nPermissions to use EC2 Instance Connect Endpoint to connect to instances\nThe ec2-instance-connect:OpenTunnel action grants permission to establish a TCP connection to an instance to connect over the EC2 Instance Connect Endpoint. You can specify the EC2 Instance Connect Endpoint to use. Alternatively, a Resource with an asterisk (*) allows users to use any available EC2 Instance Connect Endpoint. You can also restrict access to instances based on the presence or absence of resource tags as condition keys.\nConditions\nec2-instance-connect:remotePort \u2013 The port on the instance that can be used to establish a TCP connection. When this condition key is used, attempting to connect to an instance on any other port other than the port specified in the policy results in a failure.\nec2-instance-connect:privateIpAddress \u2013 The destination private IP address associated with the instance that you want to establish a TCP connection with. You can specify a single IP address, such as 10.0.0.1/32, or a range of IPs through CIDRs, such as 10.0.1.0/28. When this condition key is used, attempting to connect to an instance with a different private IP address or outside the CIDR range results in a failure.\nec2-instance-connect:maxTunnelDuration \u2013 The maximum duration for an established TCP connection. The unit is seconds and the duration ranges from a minimum of 1 second to a maximum of 3,600 seconds (1 hour). If the condition is not specified, the default duration is set to 3,600 seconds (1 hour). Attempting to connect to an instance for longer than the specified duration in the IAM policy or for longer than the default maximum results in a failure. The connection is disconnected after the specified duration.\nIf maxTunnelDuration is specified in the IAM policy and the value specified is less than 3,600 seconds (the default), then you must specify --max-tunnel-duration in the command when connecting to an instance. For information about how to connect to an instance, see Connect to an Amazon EC2 instance using EC2 Instance Connect Endpoint.\nYou can also grant a user access to establish connections to instances based on the presence of resource tags on the EC2 Instance Connect Endpoint. For more information, see Policies and permissions in IAM in the IAM User Guide.\nFor Linux instances, the ec2-instance-connect:SendSSHPublicKey action grants permission to push the public key to an instance. The ec2:osuser condition specifies the name of the OS (operating system) user that can push the public key to an instance. Use the default username for the AMI that you used to launch the instance. For more information, see Grant IAM permissions for EC2 Instance Connect.\nExample IAM policy\nThe following example IAM policies allow an IAM principal to connect to an instance using only the specified EC2 Instance Connect Endpoint, identified by the specified endpoint ID eice-123456789abcdef. The connection is successfully established only if all the conditions are satisfied.\nNote\nThe ec2:Describe* API actions do not support resource-level permissions. Therefore, the * wildcard is necessary in the Resource element.\nLinux\nWindows\nThis example evaluates if the connection to the instance is established on \u2014port 22 (SSH), if the private IP address of the instance lies within the range of 10.0.1.0/31 (between 10.0.1.0 and 10.0.1.1), and the maxTunnelDuration is less than or equal to 3600 seconds. The connection is disconnected after 3600 seconds (1 hour).\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n            \"Sid\": \"EC2InstanceConnect\",\n            \"Action\": \"ec2-instance-connect:OpenTunnel\",\n            \"Effect\": \"Allow\",\n            \"Resource\": \"arn:aws:ec2:region:account-id:instance-connect-endpoint/eice-123456789abcdef\",\n            \"Condition\": {\n                \"NumericEquals\": {\n                    \"ec2-instance-connect:remotePort\": \"22\"\n                },\n                \"IpAddress\": {\n                    \"ec2-instance-connect:privateIpAddress\": \"10.0.1.0/31\"\n                },\n                \"NumericLessThanEquals\": {\n                    \"ec2-instance-connect:maxTunnelDuration\": \"3600\"\n                }\n            }\n        },\n        {\n            \"Sid\": \"SSHPublicKey\",\n            \"Effect\": \"Allow\",\n            \"Action\": \"ec2-instance-connect:SendSSHPublicKey\",\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"ec2:osuser\": \"ami-username\"\n                }\n            }\n        },\n        {\n            \"Sid\": \"Describe\",\n            \"Action\": [\n                \"ec2:DescribeInstances\",\n                \"ec2:DescribeInstanceConnectEndpoints\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": \"*\"\n        }\n    ]\n}\nPermissions to connect only from a specific IP address range\nThe following example IAM policy allows an IAM principal to connect to an instance on condition they are connecting from an IP address within the IP address range specified in the policy. If the IAM principal calls OpenTunnel from an IP address not within 192.0.2.0/24 (the example IP address range in this policy), the response is Access Denied. For more information, see aws:SourceIp in the IAM User Guide.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n            \"Effect\": \"Allow\",\n            \"Action\": \"ec2-instance-connect:OpenTunnel\",\n            \"Resource\": \"arn:aws:ec2:region:account-id:instance-connect-endpoint/eice-123456789abcdef\",\n            \"Condition\": {\n                \"IpAddress\": {\n                    \"aws:SourceIp\": \"192.0.2.0/24\"\n                },\n                \"NumericEquals\": {\n                    \"ec2-instance-connect:remotePort\": \"22\"\n                }\n            }\n        },\n        {\n            \"Sid\": \"SSHPublicKey\",\n            \"Effect\": \"Allow\",\n            \"Action\": \"ec2-instance-connect:SendSSHPublicKey\",\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"ec2:osuser\": \"ami-username\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:DescribeInstances\",\n                \"ec2:DescribeInstanceConnectEndpoints\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/eice-security-groups.html",
        "content": "A security group controls the traffic that is allowed to reach and leave the resources that it is associated with. For example, we deny traffic to and from an Amazon EC2 instance unless it is specifically allowed by the security groups associated with the instance.\nThe following examples show you how to configure the security group rules for the EC2 Instance Connect Endpoint and the target instances.\nExamples\nEC2 Instance Connect Endpoint security group rules\nTarget instance security group rules\nEC2 Instance Connect Endpoint security group rules\nThe security group rules for an EC2 Instance Connect Endpoint must allow outbound traffic destined for the target instances to leave the endpoint. You can specify either the instance security group or the IPv4 address range of the VPC as the destination.\nTraffic to the endpoint originates from the EC2 Instance Connect Endpoint Service, and it is allowed regardless of the inbound rules for the endpoint security group. To control who can use EC2 Instance Connect Endpoint to connect to an instance, use an IAM policy. For more information, see Permissions to use EC2 Instance Connect Endpoint to connect to instances.\nExample outbound rule: Security group referencing\nThe following example uses security group referencing, which means that the destination is a security group associated with the target instances. This rule allows outbound traffic from the endpoint to all instances that use this security group.\nProtocol Destination Port range Comment\nTCP ID of instance security group 22 Allows outbound SSH traffic to all instances associated with the instance security group\nExample outbound rule: IPv4 address range\nThe following example allows outbound traffic to the specified IPv4 address range. The IPv4 addresses of an instance is assigned from its subnet, so you can use the IPv4 address range of the VPC.\nProtocol Destination Port range Comment\nTCP VPC IPv4 CIDR 22 Allows outbound SSH traffic to the VPC\nTarget instance security group rules\nThe security group rules for target instances must allow inbound traffic from the EC2 Instance Connect Endpoint. You can specify either the endpoint security group or an IPv4 address range as the source. If you specify an IPv4 address range, the source depends on whether client IP preservation is off or on. For more information, see Considerations.\nBecause security groups are stateful, the response traffic is allowed to leave the VPC regardless of the outbound rules for the instance security group.\nExample inbound rule: Security group referencing\nThe following example uses security group referencing, which means that the source is the security group associated with the endpoint. This rule allows inbound SSH traffic from the endpoint to all instances that use this security group, whether client IP preservation is on or off. If there are no other inbound security group rules for SSH, then the instances accept SSH traffic only from the endpoint.\nProtocol Source Port range Comment\nTCP ID of endpoint security group 22 Allows inbound SSH traffic from the resources associated with the endpoint security group\nExample inbound rule: Client IP preservation off\nThe following example allows inbound SSH traffic from the specified IPv4 address range. Because client IP preservation is off, the source IPv4 address is the address of the endpoint network interface. The address of the endpoint network interface is assigned from its subnet, so you can use the IPv4 address range of the VPC to allow connections to all instances in the VPC.\nProtocol Source Port range Comment\nTCP VPC IPv4 CIDR 22 Allows inbound SSH traffic from the VPC\nExample inbound rule: Client IP preservation on\nThe following example allows inbound SSH traffic from the specified IPv4 address range. Because client IP preservation is on, the source IPv4 address is the address of the client.\nProtocol Source Port range Comment\nTCP Public IPv4 address range 22 Allows inbound traffic from the specified client IPv4 address range"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/create-ec2-instance-connect-endpoints.html",
        "content": "You can create an EC2 Instance Connect Endpoint to allow secure connection to your instances.\nYou can't modify an EC2 Instance Connect Endpoint after you've created it. Instead, you must delete the EC2 Instance Connect Endpoint and create a new one with the settings that you need.\nPrerequisites\nYou must have the required IAM permissions to create an EC2 Instance Connect Endpoint. For more information, see Permissions to create, describe, and delete EC2 Instance Connect Endpoints.\nShared subnets\nYou can create an EC2 Instance Connect Endpoint in a subnet that is shared with you. You can't use a EC2 Instance Connect Endpoint that the VPC owner created in a subnet that is shared with you.\nCreate the endpoint using the console\nUse the following procedure to create an EC2 Instance Connect Endpoint.\nTo create an EC2 Instance Connect Endpoint\nOpen the Amazon VPC console at https://console.aws.amazon.com/vpc/.\nIn the left navigation pane, choose Endpoints.\nChoose Create endpoint, and then specify the endpoint settings as follows:\n(Optional) For Name tag, enter a name for the endpoint.\nFor Service category, choose EC2 Instance Connect Endpoint.\nFor VPC, select the VPC that has the target instances.\n(Optional) To preserve client IP addresses, expand Additional settings and select the check box. Otherwise, the default is to use the endpoint network interface as the client IP address.\n(Optional) For Security groups, select the security group to associate with the endpoint. Otherwise, the default is to use the default security group for the VPC. For more information, see Security groups for EC2 Instance Connect Endpoint.\nFor Subnet, select the subnet in which to create the endpoint.\n(Optional) To add a tag, choose Add new tag and enter the tag key and the tag value.\nReview your settings and then choose Create endpoint.\nThe initial status of the endpoint is Pending. Before you can connect to an instance using this endpoint, you must wait until the endpoint status is Available. This can take a few minutes.\nTo connect to an instance using your endpoint, see Connect to an instance.\nCreate the endpoint using the AWS CLI\nUse the create-instance-connect-endpoint command to create an EC2 Instance Connect Endpoint.\nPrerequisites\nInstall AWS CLI version 2 and configure it using your credentials. For more information, see Install or update to the latest version of the AWS CLI and Configure the AWS CLI in the AWS Command Line Interface User Guide. Alternatively, open AWS CloudShell and run AWS CLI commands in its pre-authenticated shell.\nTo create the endpoint\nUse the following command to create an endpoint network interface for your EC2 Instance Connect Endpoint in the specified subnet.\naws ec2 create-instance-connect-endpoint --subnet-id subnet-0123456789example\nThe following is example output.\n {\n        \"OwnerId\": \"111111111111\",\n        \"InstanceConnectEndpointId\": \"eice-0123456789example\",\n        \"InstanceConnectEndpointArn\": \"arn:aws:ec2:us-east-1:111111111111:instance-connect-endpoint/eice-0123456789example\",\n        \"State\": \"create-complete\",\n        \"StateMessage\": \"\",\n        \"DnsName\": \"eice-0123456789example.0123abcd.ec2-instance-connect-endpoint.us-east-1.amazonaws.com\",\n        \"FipsDnsName\": \"eice-0123456789example.0123abcd.fips.ec2-instance-connect-endpoint.us-east-1.amazonaws.com\",\n        \"NetworkInterfaceIds\": [\n            \"eni-0123abcd\"\n        ],\n        \"VpcId\": \"vpc-0123abcd\",\n        \"AvailabilityZone\": \"us-east-1a\",\n        \"CreatedAt\": \"2023-04-07T15:43:53.000Z\",\n        \"SubnetId\": \"subnet-0123abcd\",\n        \"PreserveClientIp\": false,\n        \"SecurityGroupIds\": [\n            \"sg-0123abcd\"\n        ],\n        \"Tags\": []\n}\nTo monitor the creation status\nThe initial value for the State field is create-in-progress. Before you can connect to an instance using this endpoint, wait until the state is create-complete. Use the describe-instance-connect-endpoints command to monitor the status of the EC2 Instance Connect Endpoint. The --query parameter filters the results to the State field.\naws ec2 describe-instance-connect-endpoints --instance-connect-endpoint-ids eice-0123456789example --query InstanceConnectEndpoints[*].State --output text\nThe following is example output.\ncreate-complete"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/connect-using-eice.html",
        "content": "You can use EC2 Instance Connect Endpoint to connect to an Amazon EC2 instance that supports SSH or RDP.\nPrerequisites\nYou must have the required IAM permission to connect to an EC2 Instance Connect Endpoint. For more information, see Permissions to use EC2 Instance Connect Endpoint to connect to instances.\nThe EC2 Instance Connect Endpoint must be in the Available (console) or create-complete (AWS CLI) state. If you do not have an EC2 Instance Connect Endpoint for your VPC, you can create one. For more information, see Create an EC2 Instance Connect Endpoint.\nYour instance must have an IPv4 address (either private or public). EC2 Instance Connect Endpoint does not support connecting to instances using IPv6 addresses.\n(Linux instances) To use the Amazon EC2 console to connect to your instance, or to use the CLI to connect and have EC2 Instance Connect handle the ephemeral key, your instance must have EC2 Instance Connect installed. For more information, see Install EC2 Instance Connect.\nEnsure that the security group of the instance allows inbound SSH traffic from the EC2 Instance Connect Endpoint. For more information, see Target instance security group rules.\nConnection options\nConnect to your Linux instance using the Amazon EC2 console\nConnect to your Linux instance using SSH\nConnect to your Linux instance using the AWS CLI\nConnect to your Windows instance using RDP\nTroubleshoot\nConnect to your Linux instance using the Amazon EC2 console\nYou can connect to an instance using the Amazon EC2 console (a browser-based client) as follows.\nTo connect to your instance using the Amazon EC2 console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance, and then choose Connect.\nChoose the EC2 Instance Connect tab.\nFor Connection type, choose Connect using EC2 Instance Connect Endpoint.\nFor EC2 Instance Connect Endpoint, choose the ID of the EC2 Instance Connect Endpoint.\nFor Username, if the AMI that you used to launch the instance uses a username other than ec2-user, enter the correct username.\nFor Max tunnel duration (seconds), enter the maximum allowed duration for the SSH connection.\nThe duration must comply with any maxTunnelDuration condition specified in the IAM policy. If you don't have access to the IAM policy, contact your administrator.\nChoose Connect. This opens a terminal window for your instance.\nConnect to your Linux instance using SSH\nYou can use SSH to connect to your Linux instance, and use the open-tunnel command to establish a private tunnel. You can use open-tunnel in single connection or multi-connection mode.\nFor information about using the AWS CLI to connect to your instance using SSH, see Connect using the AWS CLI.\nThe following examples use OpenSSH. You can use any other SSH client that supports a proxy mode.\nSingle connection\nTo allow only a single connection to an instance using SSH and the open-tunnel command\nUse ssh and the open-tunnel AWS CLI command as follows. The -o proxy command encloses the open-tunnel command that creates the private tunnel to the instance.\nssh -i my-key-pair.pem ec2-user@i-0123456789example \\\n    -o ProxyCommand='aws ec2-instance-connect open-tunnel --instance-id i-0123456789example'\nFor:\n-i \u2013 Specify the key pair that was used to launch the instance.\nec2-user@i-0123456789example \u2013 Specify the username of the AMI that was used to launch the instance, and the instance ID.\n--instance-id \u2013 Specify the ID of the instance to connect to. Alternatively, specify %h, which extracts the instance ID from the user.\nMulti-connection\nTo allow multiple connections to an instance, first run the open-tunnel AWS CLI command to start listening for new TCP connections, and then use ssh to create a new TCP connection and a private tunnel to your instance.\nTo allow multiple connections to your instance using SSH and the open-tunnel command\nRun the following command to start listening for new TCP connections on the specified port on your local machine.\naws ec2-instance-connect open-tunnel \\\n    --instance-id i-0123456789example \\\n    --local-port 8888\nExpected output\nListening for connections on port 8888.\nIn a new terminal window, run the following ssh command to create a new TCP connection and a private tunnel to your instance.\nssh -i my-key-pair.pem ec2-user@localhost -p 8888\nExpected output \u2013 In the first terminal window, you'll see the following:\n[1] Accepted new tcp connection, opening websocket tunnel.\nYou might also see the following:\n[1] Closing tcp connection.\nConnect to your Linux instance using the AWS CLI\nIf you only know your instance ID, you can use the ec2-instance-connect AWS CLI command to connect to your instance using an SSH client. For more information about using the ec2-instance-connect command, see Connect using the AWS CLI.\nPrerequisites\nInstall AWS CLI version 2 and configure it using your credentials. For more information, see Install or update to the latest version of the AWS CLI and Configure the AWS CLI in the AWS Command Line Interface User Guide. Alternatively, open AWS CloudShell and run AWS CLI commands in its pre-authenticated shell.\nTo connect to an instance using the instance ID and an EC2 Instance Connect Endpoint\nIf you only know the instance ID, use the ec2-instance-connect CLI command, and specify the ssh command, the instance ID, and the --connection-type parameter with the eice value.\naws ec2-instance-connect ssh --instance-id i-1234567890example --os-user ec2-user --connection-type eice\nTip\nIf you get an error when using this command, make sure that you're using AWS CLI version 2. The ssh parameter is only available in AWS CLI version 2. For more information, see About AWS CLI version 2 in the AWS Command Line Interface User Guide.\nConnect to your Windows instance using RDP\nYou can use Remote Desktop Protocol (RDP) over EC2 Instance Connect Endpoint to connect to a Windows instance without a public IPv4 address or public DNS name.\nTo connect to your Windows instance using an RDP client\nComplete Steps 1 \u2013 8 in Connect to your Windows instance using RDP. After downloading the RDP desktop file at Step 8, you'll get an Unable to connect message, which is to be expected because your instance does not have a public IP address.\nRun the following command to establish a private tunnel to the VPC in which the instance is located. --remote-port must be 3389 because RDP uses port 3389 by default.\naws ec2-instance-connect open-tunnel \\\n    --instance-id i-0123456789example \\\n    --remote-port 3389 \\\n    --local-port any-port\nIn your Downloads folder, find the RDP desktop file that you downloaded, and drag it onto the RDP client window.\nRight-click the RDP desktop file and choose Edit.\nIn the Edit PC window, for PC name (the instance to connect to), enter localhost:local-port, where local-port uses the same value as you specified in Step 2, and then choose Save.\nNote that the following screenshot of the Edit PC window is from Microsoft Remote Desktop on a Mac. If you are using a Windows client, the window might be different.\nIn the RDP client, right-click the PC (that you just configured) and choose Connect to connect to your instance.\nAt the prompt, enter the decrypted password for the administrator account.\nTroubleshoot\nUse the following information to help diagnose and fix issues that you might encounter when using EC2 Instance Connect Endpoint to connect an instance.\nCan't connect to your instance\nThe following are common reasons why you might not be able to connect to your instance.\nSecurity groups \u2013 Check the security groups assigned to the EC2 Instance Connect Endpoint and your instance. For more information about the required security group rules, see Security groups for EC2 Instance Connect Endpoint.\nInstance state \u2013 Verify that your instance is in the running state.\nKey pair \u2013 If the command you're using to connect requires a private key, verify that your instance has a public key and that you have the corresponding private key.\nIAM permissions \u2013 Verify that you have the required IAM permissions. For more information, see Grant permissions to use EC2 Instance Connect Endpoint.\nFor more troubleshooting tips for Linux instances, see Troubleshoot issues connecting to your Amazon EC2 Linux instance. For troubleshooting tips for Windows instances, see Troubleshoot issues connecting to your Amazon EC2 Windows instance.\nErrorCode: AccessDeniedException\nIf you receive an AccessDeniedException error, and the maxTunnelDuration condition is specified in the IAM policy, be sure to specify the --max-tunnel-duration parameter when connecting to an instance. For more information about this parameter, see open-tunnel in the AWS CLI Command Reference."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/log-ec2-instance-connect-endpoint-using-cloudtrail.html",
        "content": "You can log resource operations and audit connections established over the EC2 Instance Connect Endpoint with AWS CloudTrail logs.\nFor more information about using AWS CloudTrail with Amazon EC2, see Log Amazon EC2 API calls using AWS CloudTrail.\nLog EC2 Instance Connect Endpoint API calls with AWS CloudTrail\nEC2 Instance Connect Endpoint resource operations are logged to CloudTrail as management events. When the following API calls are made, the activity is recorded as a CloudTrail event in Event history:\nCreateInstanceConnectEndpoint\nDescribeInstanceConnectEndpoints\nDeleteInstanceConnectEndpoint\nYou can view, search, and download recent events in your AWS account. For more information, see Viewing events with CloudTrail Event history in the AWS CloudTrail User Guide.\nUse AWS CloudTrail to audit users who connect to an instance using EC2 Instance Connect Endpoint\nConnection attempts to instances via EC2 Instance Connect Endpoint are logged in CloudTrail in Event history. When a connection to an instance is initiated through an EC2 Instance Connect Endpoint, the connection is logged as a CloudTrail management event with the eventName of OpenTunnel.\nYou can create Amazon EventBridge rules that route the CloudTrail event to a target. For more information, see the Amazon EventBridge User Guide.\nThe following is an example of an OpenTunnel management event that was logged in CloudTrail.\n{\n     \"eventVersion\": \"1.08\",\n     \"userIdentity\": {\n         \"type\": \"IAMUser\",\n         \"principalId\": \"ABCDEFGONGNOMOOCB6XYTQEXAMPLE\",\n         \"arn\": \"arn:aws:iam::1234567890120:user/IAM-friendly-name\",\n         \"accountId\": \"123456789012\",\n         \"accessKeyId\": \"ABCDEFGUKZHNAW4OSN2AEXAMPLE\",\n         \"userName\": \"IAM-friendly-name\"\n     },\n     \"eventTime\": \"2023-04-11T23:50:40Z\",\n     \"eventSource\": \"ec2-instance-connect.amazonaws.com\",\n     \"eventName\": \"OpenTunnel\",\n     \"awsRegion\": \"us-east-1\",\n     \"sourceIPAddress\": \"1.2.3.4\",\n     \"userAgent\": \"aws-cli/1.15.61 Python/2.7.10 Darwin/16.7.0 botocore/1.10.60\",\n     \"requestParameters\": {\n         \"instanceConnectEndpointId\": \"eici-0123456789EXAMPLE\",\n         \"maxTunnelDuration\": \"3600\",\n         \"remotePort\": \"22\",\n         \"privateIpAddress\": \"10.0.1.1\"\n     },\n     \"responseElements\": null,\n     \"requestID\": \"98deb2c6-3b3a-437c-a680-03c4207b6650\",\n     \"eventID\": \"bbba272c-8777-43ad-91f6-c4ab1c7f96fd\",\n     \"readOnly\": false,\n     \"resources\": [{\n         \"accountId\": \"123456789012\",\n         \"type\": \"AWS::EC2::InstanceConnectEndpoint\",\n         \"ARN\": \"arn:aws:ec2:us-east-1:123456789012:instance-connect-endpoint/eici-0123456789EXAMPLE\"\n     }],\n     \"eventType\": \"AwsApiCall\",\n     \"managementEvent\": true,\n     \"recipientAccountId\": \"123456789012\",\n     \"eventCategory\": \"Management\"\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/delete-ec2-instance-connect-endpoint.html",
        "content": "When you are finished with an EC2 Instance Connect Endpoint, you can delete it.\nYou must have the required IAM permissions to create an EC2 Instance Connect Endpoint. For more information, see Permissions to create, describe, and delete EC2 Instance Connect Endpoints.\nWhen you delete an EC2 Instance Connect Endpoint using the console, it enters the Deleting state. If deletion is successful, the deleted endpoint no longer appears. If deletion fails, the state is delete-failed and Status message provides the failure reason.\nWhen you delete an EC2 Instance Connect Endpoint using the AWS CLI, it enters the delete-in-progress state. If deletion is successful, it enters the delete-complete state. If deletion fails, the state is delete-failed and StateMessage provides the failure reason.\nConsole\nAWS CLI\nTo delete an EC2 Instance Connect Endpoint\nOpen the Amazon VPC console at https://console.aws.amazon.com/vpc/.\nIn the left navigation pane, choose Endpoints.\nSelect the endpoint.\nChoose Actions, Delete VPC endpoints.\nWhen prompted for confirmation, enter delete.\nChoose Delete."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/eice-slr.html",
        "content": "Amazon EC2 uses AWS Identity and Access Management (IAM) service-linked roles. A service-linked role is a unique type of IAM role that is linked directly to Amazon EC2. Service-linked roles are predefined by Amazon EC2 and include all the permissions required so that Amazon EC2 can call other AWS services on your behalf. For more information, see Service-linked roles in the IAM User Guide.\nService-linked role permissions for EC2 Instance Connect Endpoint\nAmazon EC2 uses AWSServiceRoleForEC2InstanceConnect to create and manage network interfaces in your account that are required by EC2 Instance Connect Endpoint.\nThe AWSServiceRoleForEC2InstanceConnect service-linked role trusts the following services to assume the role:\nec2-instance-connect.amazonaws.com\nThe AWSServiceRoleForEC2InstanceConnect service-linked role uses the managed policy Ec2InstanceConnectEndpoint. To view the permissions for this policy, see Ec2InstanceConnectEndpoint in the AWS Managed Policy Reference.\nYou must configure permissions to allow an IAM entity (such as a user, group, or role) to create, edit, or delete a service-linked role. For more information, see Service-linked role permissions in the IAM User Guide.\nCreate a service-linked role for EC2 Instance Connect Endpoint\nYou don't need to manually create the service-linked role. When you create an EC2 Instance Connect Endpoint, Amazon EC2 creates the service-linked role for you.\nEdit a service-linked role for EC2 Instance Connect Endpoint\nEC2 Instance Connect Endpoint doesn't allow you to edit the AWSServiceRoleForEC2InstanceConnect service-linked role.\nDelete a service-linked role for EC2 Instance Connect Endpoint\nIf you no longer need to use EC2 Instance Connect Endpoint, we recommend that you delete the AWSServiceRoleForEC2InstanceConnect service-linked role.\nYou must delete all EC2 Instance Connect Endpoint resources before you can delete the service-linked role.\nTo delete the service-linked role, see Delete a service-linked role in the IAM User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/eice-quotas.html",
        "content": "Your AWS account has default quotas, formerly referred to as limits, for each AWS service. Unless otherwise noted, each quota is Region-specific.\nYour AWS account has the following quotas related to EC2 Instance Connect Endpoint.\nName Default Adjustable\nMaximum number of EC2 Instance Connect Endpoints per AWS account per AWS Region 5 No\nMaximum number of EC2 Instance Connect Endpoints per VPC 1 No\nMaximum number of EC2 Instance Connect Endpoints per subnet 1 No\nMaximum number of concurrent connections per EC2 Instance Connect Endpoint 20 No"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html",
        "content": "An Amazon EC2 instance transitions through different states from the moment you launch it through to its termination.\nThe following illustration represents the transitions between instance states.\nYou can receive notifications when your instances change states. For more information, see State change events for Amazon EC2 instances.\nBilling by instance state\nThe following table provides a brief description of each instance state and indicates whether instance usage is billed. Some AWS resources, such as Amazon EBS volumes and Elastic IP addresses, incur charges regardless of the instance's state. For more information, see Avoiding Unexpected Charges in the AWS Billing User Guide.\nInstance state Description Instance usage billing\npending\nThe instance is preparing to enter the running state. An instance enters the pending state when it is launched or when it is started after being in the stopped state.\nNot billed\nrunning\nThe instance is running and ready for use.\nBilled\nstopping\nThe instance is preparing to be stopped.\nNot billed\nNote\nIf you hibernate an instance, you're billed while the instance is in the stopping state.\nstopped\nThe instance is shut down and cannot be used. The instance can be started at any time.\nNot billed\nshutting-down\nThe instance is preparing to be terminated.\nNot billed\nterminated\nThe instance has been permanently deleted and cannot be started.\nNot billed\nNote\nReserved Instances that applied to terminated instances are billed until the end of their term according to their payment option. For more information, see Reserved Instances for Amazon EC2 overview\nPending instances\nWhen you launch an instance, it enters the pending state. The instance type that you specified at launch determines the hardware of the host computer for your instance. We use the Amazon Machine Image (AMI) you specified at launch to boot the instance. After the instance is ready for you, it enters the running state. You can connect to your running instance and use it the way that you'd use a computer sitting in front of you.\nAs soon as your instance transitions to the running state, you're billed for each second, with a one-minute minimum, that you keep the instance running, even if the instance remains idle and you don't connect to it.\nStopped instances\nIf your instance fails a status check or is not running your applications as expected, and if the root volume of your instance is an Amazon EBS volume, you can stop and start your instance to try to fix the problem.\nWhen you stop your instance, it enters the stopping state, and then the stopped state. You are not charged for usage or data transfer fees for your instance when it is stopped. Charges are incurred for the storage of any Amazon EBS volumes. While your instance is in the stopped state, you can modify certain attributes of the instance, including the instance type.\nWhen you start your instance, it enters the pending state, and the instance is moved to a new host computer (though in some cases, it remains on the current host). When you stop and start your instance, you lose any data on the instance store volumes attached to the previous host computer.\nYour instance retains its private IPv4 address, which means that an Elastic IP address associated with the private IPv4 address or network interface remains associated with your instance. If your instance has an IPv6 address, it retains the IPv6 address.\nEach time you transition an instance from stopped to running, you are charged per second when the instance is running, with a minimum of one minute per instance start.\nFor more details about stopping and starting an instance, see Stop and start Amazon EC2 instances.\nHibernated instances\nWhen you hibernate an instance, we signal the operating system to perform hibernation (suspend-to-disk), which saves the contents from the instance memory (RAM) to your Amazon EBS root volume. We persist the instance's Amazon EBS root volume and any attached Amazon EBS data volumes. When you start your instance, the Amazon EBS root volume is restored to its previous state and the RAM contents are reloaded. Previously attached data volumes are reattached and the instance retains its instance ID.\nWhen you hibernate your instance, it enters the stopping state, and then the stopped state. We don't charge usage for a hibernated instance when it is in the stopped state, but we do charge while it is in the stopping state, unlike when you stop an instance without hibernating it. We don't charge usage for data transfer fees, but we do charge for the storage for any Amazon EBS volumes, including storage for the RAM data.\nWhen you start your hibernated instance, it enters the pending state, and we move the instance to a new host computer (though in some cases, it remains on the current host).\nYour instance retains its private IPv4 address, which means that an Elastic IP address associated with the private IPv4 address or network interface is still associated with your instance. If your instance has an IPv6 address, it retains its IPv6 address.\nFor more information, see Hibernate your Amazon EC2 instance.\nRebooting instances\nYou can reboot your instance using the Amazon EC2 console, a command line tool, and the Amazon EC2 API. We recommend that you use Amazon EC2 to reboot your instance instead of running the operating system reboot command from your instance.\nRebooting an instance is equivalent to rebooting an operating system. The instance remains on the same host computer and maintains its public DNS name, private IP address, and any data on its instance store volumes. It typically takes a few minutes for the reboot to complete, but the time it takes to reboot depends on the instance configuration.\nRebooting an instance doesn't start a new instance billing period; per second billing continues without a further one-minute minimum charge.\nFor more information, see Reboot your instance.\nTerminated instances\nWhen you've decided that you no longer need an instance, you can terminate it. As soon as the status of an instance changes to shutting-down or terminated, you stop incurring charges for that instance.\nIf you enable termination protection, you can't terminate the instance using the console, CLI, or API.\nAfter you terminate an instance, it remains visible in the console for a short while, and then the entry is automatically deleted. You can also describe a terminated instance using the CLI and API. Resources (such as tags) are gradually disassociated from the terminated instance, therefore may no longer be visible on the terminated instance after a short while. You can't connect to or recover a terminated instance.\nEach Amazon EBS-backed instance supports the InstanceInitiatedShutdownBehavior attribute, which controls whether the instance stops or terminates when you initiate shutdown from within the instance itself (for example, by using the shutdown command on Linux). The default behavior is to stop the instance. You can modify the setting of this attribute while the instance is running or stopped.\nEach Amazon EBS volume supports the DeleteOnTermination attribute, which controls whether the volume is deleted or preserved when you terminate the instance it is attached to. The default is to delete the root device volume and preserve any other EBS volumes.\nFor more information, see Terminate Amazon EC2 instances.\nDifferences between instance states\nThe following table summarizes the key differences between rebooting, stopping, hibernating, and terminating your instance.\nCharacteristic Reboot Stop/start (Amazon EBS-backed instances only) Hibernate (Amazon EBS-backed instances only) Terminate\nHost computer\nThe instance stays on the same host computer\nWe move the instance to a new host computer (though in some cases, it remains on the current host).\nWe move the instance to a new host computer (though in some cases, it remains on the current host).\nNone\nPrivate and public IPv4 addresses\nThese addresses stay the same\nThe instance keeps its private IPv4 address. The instance gets a new public IPv4 address, unless it has an Elastic IP address, which doesn't change during a stop/start.\nThe instance keeps its private IPv4 address. The instance gets a new public IPv4 address, unless it has an Elastic IP address, which doesn't change during a stop/start.\nNone\nElastic IP addresses (IPv4)\nThe Elastic IP address remains associated with the instance\nThe Elastic IP address remains associated with the instance\nThe Elastic IP address remains associated with the instance\nThe Elastic IP address is disassociated from the instance\nIPv6 address\nThe instance keeps its IPv6 address\nThe instance keeps its IPv6 address\nThe instance keeps its IPv6 address\nNone\nInstance store volumes\nThe data is preserved\nThe data is erased\nThe data is erased\nThe data is erased\nRoot device volume\nThe volume is preserved\nThe volume is preserved\nThe volume is preserved\nThe volume is deleted by default\nRAM (contents of memory)\nThe RAM is erased\nThe RAM is erased\nThe RAM is saved to a file on the root volume\nThe RAM is erased\nBilling\nThe instance billing hour doesn't change\nYou stop incurring charges for an instance as soon as its state changes to stopping. Each time an instance transitions from stopped to running, we start a new instance billing period, billing a minimum of one minute every time you start your instance.\nYou incur charges while the instance is in the stopping state, but stop incurring charges when the instance is in the stopped state. Each time an instance transitions from stopped to running, we start a new instance billing period, billing a minimum of one minute every time you start your instance.\nYou stop incurring charges for an instance as soon as its state changes to shutting-down\nOperating system shutdown commands always terminate an instance store-backed instance. You can control whether operating system shutdown commands stop or terminate an Amazon EBS-backed instance. For more information, see Change the instance initiated shutdown behavior."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html",
        "content": "You can stop and start your instance if it has an Amazon EBS volume as its root device. When you stop an instance, it shuts down. When you start an instance, it is typically migrated to a new underlying host computer and assigned a new public IPv4 address.\nWhen you stop an instance, it is not deleted. If you decide that you no longer need an instance, you can terminate it. For more information, see Terminate Amazon EC2 instances. If you want to hibernate an instance to save the contents from the instance memory (RAM), see Hibernate your Amazon EC2 instance. For distinctions between instance lifecycle actions, see Differences between instance states.\nContents\nHow it works\nManually stop and start\nAutomatically stop and start\nFind running and stopped instances\nFind the initial and most recent launch times\nEnable stop protection\nManually stop and start your instances\nYou can stop and start your Amazon EBS-backed instances (instances with EBS root devices). You can't stop and start instances with instance store root device.\nWarning\nWhen you stop an instance, the data on any instance store volumes is erased. Before you stop an instance, verify that you've copied any data that you need from the instance store volumes to persistent storage, such as Amazon EBS or Amazon S3.\nConsole\nCommand line\nTo stop and start an Amazon EBS-backed instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigation pane, choose Instances, and then select the instance.\nOn the Storage tab, verify that Root device type is EBS. Otherwise, you can't stop the instance.\nChoose Instance state, Stop instance. If this option is disabled, either the instance is already stopped or its root device is an instance store volume.\nWhen prompted for confirmation, choose Stop. It can take a few minutes for the instance to stop.\nTo start a stopped instance, select the instance, and choose Instance state, Start instance.\nIt can take a few minutes for the instance to enter the running state.\nIf you stopped an Amazon EBS-backed instance and it appears \"stuck\" in the stopping state, you can forcibly stop it. For more information, see Troubleshoot Amazon EC2 instance stop issues.\nAutomatically stop and start your instances\nYou can automate stopping and starting instances with the following services:\nInstance Scheduler on AWS\nYou can use Instance Scheduler on AWS to automate the starting and stopping of EC2 instances. For more information, see How do I use Instance Scheduler with CloudFormation to schedule EC2 instances? Note that additional charges apply.\nAWS Lambda and an Amazon EventBridge rule\nYou can use Lambda and an EventBridge rule to stop and start your instances on a schedule. For more information, see How do I use Lambda to stop and start Amazon EC2 instances at regular intervals?\nAmazon EC2 Auto Scaling\nTo ensure you have the correct number of Amazon EC2 instances available to handle the load for an application, create Auto Scaling groups. Amazon EC2 Auto Scaling ensures that your application always has the right capacity to handle the traffic demand, and saves costs by launching instances only when they are needed. Note that Amazon EC2 Auto Scaling terminates, rather than stops, unneeded instances. To set up Auto Scaling groups, see Get started with Amazon EC2 Auto Scaling.\nFind all running and stopped instances\nYou can find all of your running and stopped instances across all AWS Regions on a single page using Amazon EC2 Global View. This capability is especially useful for taking inventory and finding forgotten instances. For information about how to use Global View, see View resources across Regions using Amazon EC2 Global View.\nFind the initial and most recent launch times\nWhen you describe an instance, the launch time for the instance is its most recent launch time. After you stop and start an instance, the launch time reflects the new instance start time. To find the initial launch time for an instance, even after stopping and starting it, view the time at which the primary network interface was attached to the instance.\nTo find the most recent launch time using the console, select the instance and look under Instance details on the Details tab. To find the attachment time for the primary network interface, look under Network interfaces on the Networking tab.\nUsing the AWS CLI, run the following describe-instances command to display both the initial launch time and the most recent launch time for the specified instance.\naws ec2 describe-instances --instance-id i-09453945dcf1529e9 --query 'Reservations[*].Instances[*].{InstanceID:InstanceId,InitialLaunch:NetworkInterfaces[0].Attachment.AttachTime,LastLaunch:LaunchTime}'\nThe following is example output.\n{\n    \"InstanceID\": \"i-09453945dcf1529e9\",\n    \"InitialLaunch\": \"2024-03-31T00:47:08+00:00\",\n    \"LastLaunch\": \"2024-06-30T00:24:06+00:00\"\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/how-ec2-instance-stop-start-works.html",
        "content": "When you stop an instance, changes are registered at the OS level of the instance, some resources are lost, and some resources persist. When you start an instance, changes are registered at the instance level.\nThe following diagram shows what is lost and what persists when an Amazon EC2 instance is stopped. When an instance stops, it loses any attached instance store volumes and the data stored on those volumes, the data stored on the instance RAM, and the assigned public IPv4 address if an Elastic IP address is not associated with the instance. An instance retains assigned private IPv4 addresses, Elastic IP addresses associated with the instance, any IPv6 addresses, and any attached Amazon EBS volumes and the data on those volumes.\nWhat happens when you stop an instance\nChanges registered at the OS level\nThe API request sends a button press event to the guest.\nVarious system services are stopped as a result of the button press event. Graceful shutdown is triggered by the ACPI shutdown button press event from the hypervisor.\nACPI shutdown is initiated.\nThe instance shuts down when the graceful shutdown process exits. There is no configurable OS shutdown time.\nIf the instance OS does not cleanly shut down within a few minutes, a hard shutdown is performed.\nThe instance stops running.\nThe instance status changes to stopping and then stopped.\n[Auto Scaling] If your instance is in an Auto Scaling group, when the instance is in any Amazon EC2 state other than running, or if its status for the status checks becomes impaired, Amazon EC2 Auto Scaling considers the instance to be unhealthy and replaces it. For more information, see Health checks for instances in an Auto Scaling group in the Amazon EC2 Auto Scaling User Guide.\n[Windows instances] When you stop and start a Windows instance, the launch agent performs tasks on the instance, such as changing the drive letters for any attached Amazon EBS volumes. For more information about these defaults and how you can change them, see Use the EC2Launch v2 agent to perform tasks during EC2 Windows instance launch.\nResources lost\nData stored on the RAM.\nData stored on the instance store volumes.\nThe public IPv4 address that Amazon EC2 automatically assigned to the instance upon launch or start. To retain a public IPv4 address that never changes, you can associate an Elastic IP address with your instance.\nResources that persist\nAny attached Amazon EBS volumes.\nData stored on the attached Amazon EBS volumes.\nPrivate IPv4 addresses.\nIPv6 addresses.\nElastic IP addresses associated with the instance. Note that when the instance is stopped, you are charged for the associated Elastic IP addresses.\nFor information about what happens when you stop a Mac instance, see Stop or terminate your Amazon EC2 Mac instance.\nWhat happens when you start an instance\nChanges registered at the OS level\nIn most cases, the instance is migrated to a new underlying host computer (though in some cases, such as when an instance is allocated to a host in a Dedicated Host configuration, it remains on the current host).\nAmazon EC2 assigns a new public IPv4 address to the instance if the instance is configured to receive a public IPv4 address. To retain a public IPv4 address that never changes, you can associate an Elastic IP address with your instance.\nTest application response to stop and start\nYou can use AWS Fault Injection Service to test how your application responds when your instance is stopped and started. For more information, see the AWS Fault Injection Service User Guide.\nCosts related to instance stop and start\nThe following costs are associated with stopping and starting an instance.\nStopping \u2014 As soon as the state of an instance changes to shutting-down or terminated, charges are no longer incurred for the instance. You are not charged for usage or data transfer fees for a stopped instance. Charges are incurred to store Amazon EBS storage volumes.\nStarting \u2014 Each time you start a stopped instance, you are charged for a minimum of one minute of usage. After one minute, you are charged for only the seconds you use. For example, if you run an instance for 20 seconds and then stop it, you are charged for a minute of usage. If you run an instance for 3 minutes and 40 seconds, you are charged for 3 minutes and 40 seconds of usage."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-stop-protection.html",
        "content": "To prevent an instance from being accidentally stopped, you can enable stop protection for the instance. Stop protection also protects your instance from accidental termination.\nThe DisableApiStop attribute of the Amazon EC2 ModifyInstanceAttribute API controls whether the instance can be stopped by using the Amazon EC2 console, the AWS CLI, or the Amazon EC2 API. You can set the value of this attribute when you launch the instance, while the instance is running, or while the instance is stopped.\nConsiderations\nEnabling stop protection does not prevent you from accidentally stopping an instance by initiating a shutdown from the instance using an operating system command such as shutdown or poweroff.\nEnabling stop protection does not prevent AWS from stopping the instance when there is a scheduled event to stop the instance.\nEnabling stop protection does not prevent Amazon EC2 Auto Scaling from terminating an instance when the instance is unhealthy or during scale-in events. You can control whether an Auto Scaling group can terminate a particular instance when scaling in by using instance scale-in protection.\nStop protection not only prevents your instance from being accidentally stopped, but also from accidental termination when using the console, AWS CLI, or API. However, it does not automatically set the DisableApiTermination attribute. Note that when the DisableApiStop attribute is set to false, the DisableApiTermination attribute setting determines whether the instance can be terminated using the console, AWS CLI, or API. For more information see Terminate Amazon EC2 instances.\nYou can't enable stop protection for instance store-backed instances.\nYou can't enable stop protection for Spot Instances.\nThe Amazon EC2 API follows an eventual consistency model when you enable or disable stop protection. This means that the result of running commands to set the stop protection attribute might not be immediately visible to all subsequent commands you run. For more information, see Eventual consistency in the Amazon EC2 Developer Guide.\nStop protection tasks\nEnable stop protection for an instance at launch\nEnable stop protection for a running or stopped instance\nDisable stop protection for a running or stopped instance\nEnable stop protection for an instance at launch\nYou can enable stop protection for an instance when launching the instance using one of the following methods.\nConsole\nAWS CLI\nTo enable stop protection for an instance at launch\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nOn the dashboard, choose Launch instance.\nConfigure your instance in the new launch instance wizard.\nIn the wizard, enable stop protection by choosing Enable for Stop protection under Advanced details.\nEnable stop protection for a running or stopped instance\nYou can enable stop protection for an instance while the instance is running or stopped using one of the following methods.\nConsole\nAWS CLI\nTo enable stop protection for a running or stopped instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigation pane, choose Instances.\nSelect the instance, and then choose Actions>Instance settings>Change stop protection.\nSelect the Enable checkbox, and then choose Save.\nDisable stop protection for a running or stopped instance\nYou can disable stop protection for a running or stopped instance using one of the following methods.\nConsole\nAWS CLI\nTo disable stop protection for a running or stopped instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigation pane, choose Instances.\nSelect the instance, and then choose Actions, Instance settings, Change stop protection.\nClear the Enable checkbox, and then choose Save."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html",
        "content": "When you hibernate an instance, Amazon EC2 signals the operating system to perform hibernation (suspend-to-disk). Hibernation saves the contents from the instance memory (RAM) to your Amazon Elastic Block Store (Amazon EBS) root volume. Amazon EC2 persists the instance's EBS root volume and any attached EBS data volumes. When your instance is started:\nThe EBS root volume is restored to its previous state\nThe RAM contents are reloaded\nThe processes that were previously running on the instance are resumed\nPreviously attached data volumes are reattached and the instance retains its instance ID\nYou can hibernate an instance only if it's enabled for hibernation and it meets the hibernation prerequisites.\nIf an instance or application takes a long time to bootstrap and build a memory footprint in order to become fully productive, you can use hibernation to pre-warm the instance. To pre-warm the instance, you:\nLaunch it with hibernation enabled.\nBring it to a desired state.\nHibernate it so that it's ready to be resumed to the desired state whenever needed.\nYou're not charged for instance usage for a hibernated instance when it is in the stopped state or for data transfer when the contents of the RAM are transferred to the EBS root volume. You are charged for storage of any EBS volumes, including storage for the RAM contents.\nIf you no longer need an instance, you can terminate it at any time, including when it is in a stopped (hibernated) state. For more information, see Terminate Amazon EC2 instances.\nContents\nHow it works\nPrerequisites\nConfigure a Linux AMI to support hibernation\nEnable instance hibernation\nDisable KASLR on an instance (Ubuntu only)\nHibernate an instance\nStart a hibernated instance\nTroubleshoot"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-hibernate-overview.html",
        "content": "The following diagram shows a basic overview of the hibernation process for EC2 instances.\nWhat happens when you hibernate an instance\nWhen you hibernate an instance, the following happens:\nThe instance moves to the stopping state. Amazon EC2 signals the operating system to perform hibernation (suspend-to-disk). The hibernation freezes all of the processes, saves the contents of the RAM to the EBS root volume, and then performs a regular shutdown.\nAfter the shutdown is complete, the instance moves to the stopped state.\nAny EBS volumes remain attached to the instance, and their data persists, including the saved contents of the RAM.\nAny Amazon EC2 instance store volumes remain attached to the instance, but the data on the instance store volumes is lost.\nWhile your instance is in the stopped state, you can modify certain attributes of the instance, including the instance type or size.\nIn most cases, the instance is migrated to a new underlying host computer when it's started. This is also what happens when you stop and start an instance.\nWhen the instance is started, the instance boots up and the operating system reads in the contents of the RAM from the EBS root volume, before unfreezing processes to resume its state.\nThe instance retains its private IPv4 addresses and any IPv6 addresses. When the instance is started, the instance continues to retain its private IPv4 addresses and any IPv6 addresses.\nAmazon EC2 releases the public IPv4 address. When the instance is started, Amazon EC2 assigns a new public IPv4 address to the instance.\nThe instance retains its associated Elastic IP addresses. You're charged for any Elastic IP addresses that are associated with a hibernated instance.\nFor information about how hibernation differs from reboot, stop, and terminate, see Differences between instance states.\nLimitations\nWhen you hibernate an instance, the data on any instance store volumes is lost.\n(Linux instances) You can't hibernate a Linux instance that has more than 150 GB of RAM.\n(Windows instances) You can't hibernate a Windows instance that has more than 16 GB of RAM.\nIf you create a snapshot or AMI from an instance that is hibernated or has hibernation enabled, you might not be able to connect to a new instance that is launched from the AMI or from an AMI that was created from the snapshot.\n(Spot Instances only) If Amazon EC2 hibernates your Spot Instance, only Amazon EC2 can resume your instance. If you hibernate your Spot Instance (user-initiated hibernation), you can resume your instance. A hibernated Spot Instance can only be resumed if capacity is available and the Spot price is less than or equal to your specified maximum price.\nYou can't hibernate an instance that is in an Auto Scaling group or used by Amazon ECS. If your instance is in an Auto Scaling group and you try to hibernate it, the Amazon EC2 Auto Scaling service marks the stopped instance as unhealthy, and might terminate it and launch a replacement instance. For more information, see Health checks for instances in an Auto Scaling group in the Amazon EC2 Auto Scaling User Guide.\nYou can't hibernate an instance that is configured to boot in UEFI mode with UEFI Secure Boot enabled.\nIf you hibernate an instance that was launched into a Capacity Reservation, the Capacity Reservation does not ensure that the hibernated instance can resume after you try to start it.\nYou can\u2019t hibernate an instance that uses a kernel below 5.10 if Federal Information Processing Standard (FIPS) mode is enabled.\nWe do not support keeping an instance hibernated for more than 60 days. To keep the instance for longer than 60 days, you must start the hibernated instance, stop the instance, and start it.\nWe constantly update our platform with upgrades and security patches, which can conflict with existing hibernated instances. We notify you about critical updates that require a start for hibernated instances so that we can perform a shutdown or a reboot to apply the necessary upgrades and security patches.\nConsiderations for hibernating a Spot Instance\nIf you hibernate your Spot Instance, you can restart it provided capacity is available and the Spot price is less than or equal to your specified maximum price.\nIf Amazon EC2 hibernates your Spot Instance:\nOnly Amazon EC2 can resume your instance.\nAmazon EC2 resumes the hibernated Spot Instance when capacity becomes available with a Spot price that is less than or equal to your specified maximum price.\nBefore Amazon EC2 hibernates your Spot Instance, you'll receive an interruption notice two minutes before hibernation starts.\nFor more information, see Spot Instance interruptions."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/hibernating-prerequisites.html",
        "content": "You can enable hibernation support for an On-Demand Instance or a Spot Instance when you launch it. You can't enable hibernation on an existing instance, whether it is running or stopped. For more information, see Enable instance hibernation.\nRequirements to hibernate an instance\nAWS Regions\nAMIs\nInstance families\nInstance RAM size\nRoot volume type\nRoot volume size\nRoot volume encryption\nEBS volume type\nSpot Instance requests\nAWS Regions\nYou can use hibernation with instances in all AWS Regions.\nAMIs\nYou must use an HVM AMI that supports hibernation. The following AMIs support hibernation:\nLinux AMIs\nWindows AMIs\nInstance families\nYou must use an instance family that supports hibernation.\nGeneral purpose: M3, M4, M5, M5a, M5ad, M5d, M6a, M6g, M6gd, M6i, M6id, M7a, M7g, M7gd, M7i, M7i-flex, M8g, T2, T3, T3a, T4g\nCompute optimized: C3, C4, C5, C5d, C6a, C6g, C6gd, C6gn, C6i, C6id, C7a, C7g, C7gd, C7i, C7i-flex, C8g\nMemory optimized: R3, R4, R5, R5a, R5ad, R5d, R6a, R6g, R6gd, R7a, R7g, R7gd, R7i, R7iz, R8g, X2gd\nStorage optimized: I3, I3en, I7ie, I8g\nNitro instances \u2013 Bare metal instances are not supported.\nTo see the available instance types that support hibernation in a specific Region\nThe available instance types vary by Region. To see the available instance types that support hibernation in a Region, use the describe-instance-types command with the --region parameter. Include the --filters parameter to scope the results to the instance types that support hibernation and the --query parameter to scope the output to the value of InstanceType.\naws ec2 describe-instance-types --filters Name=hibernation-supported,Values=true --query \"InstanceTypes[*].[InstanceType]\" --output text | sort\nExample output\nc3.2xlarge\nc3.4xlarge\nc3.8xlarge\nc3.large\nc3.xlarge\nc4.2xlarge\nc4.4xlarge\nc4.8xlarge\n...\nInstance RAM size\nLinux instances \u2013 Must be less than 150 GB.\nWindows instances \u2013 Can be up to 16 GB. For hibernating a T3 or T3a Windows instance, we recommend at least 1 GB of RAM.\nRoot volume type\nThe root volume must be an EBS volume, not an instance store volume.\nRoot volume size\nThe root volume must be large enough to store the RAM contents and accommodate your expected usage, for example, OS or applications. If you enable hibernation, space is allocated on the root volume at launch to store the RAM.\nRoot volume encryption\nThe root volume must be encrypted to ensure the protection of sensitive content that is in memory at the time of hibernation. When RAM data is moved to the EBS root volume, it is always encrypted. Encryption of the root volume is enforced at instance launch.\nUse one of the following three options to ensure that the root volume is an encrypted EBS volume:\nEBS encryption by default \u2013 You can enable EBS encryption by default to ensure that all new EBS volumes created in your AWS account are encrypted. This way, you can enable hibernation for your instances without specifying encryption intent at instance launch. For more information, see Enable encryption by default.\nEBS \"single-step\" encryption \u2013 You can launch encrypted EBS-backed EC2 instances from an unencrypted AMI and also enable hibernation at the same time. For more information, see Use encryption with EBS-backed AMIs.\nEncrypted AMI \u2013 You can enable EBS encryption by using an encrypted AMI to launch your instance. If your AMI does not have an encrypted root snapshot, you can copy it to a new AMI and request encryption. For more information, see Encrypt an unencrypted image during copy and Copy an AMI.\nEBS volume type\nThe EBS volumes must use one of the following EBS volume types:\nGeneral Purpose SSD (gp2 and gp3)\nProvisioned IOPS SSD (io1 and io2)\nIf you choose a Provisioned IOPS SSD volume type, you must provision the EBS volume with the appropriate IOPS to achieve optimum performance for hibernation. For more information, see Amazon EBS volume types in the Amazon EBS User Guide.\nSpot Instance requests\nFor Spot Instances, the following requirements apply:\nThe Spot Instance request type must be persistent.\nYou can't specify a launch group in the Spot Instance request."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/hibernation-enabled-AMI.html",
        "content": "The following Linux AMIs can support hibernating an Amazon EC2 instance, provided you complete the additional configuration steps described in this section.\nAdditional configuration required for:\nAL2023 minimal AMI released 2023.09.20 or later\nAmazon Linux 2 minimal AMI released 2019.08.29 or later\nAmazon Linux 2 released before 2019.08.29\nAmazon Linux released before 2018.11.16\nCentOS version 8 or later\nFedora version 34 or later\nRed Hat Enterprise Linux version 8 or 9\nUbuntu 20.04 LTS (Focal Fossa) released before serial number 20210820\nUbuntu 18.04 (Bionic Beaver) released before serial number 20190722.1\nUbuntu 16.04 (Xenial Xerus)\nFor the Linux and Windows AMIs that support hibernation and for which no additional configuration is required, see AMIs.\nFor more information, see Update instance software on your Amazon Linux 2 instance.\nAL2023 minimal AMI released 2023.09.20 or later\nTo configure an AL2023 minimal AMI released 2023.09.20 or later to support hibernation\nInstall the ec2-hibinit-agent package from the repositories.\n[ec2-user ~]$ sudo dnf install ec2-hibinit-agent\nRestart the service.\n[ec2-user ~]$ sudo systemctl start hibinit-agent\nAmazon Linux 2 minimal AMI released 2019.08.29 or later\nTo configure an Amazon Linux 2 minimal AMI released 2019.08.29 or later to support hibernation\nInstall the ec2-hibinit-agent package from the repositories.\n[ec2-user ~]$ sudo yum install ec2-hibinit-agent\nRestart the service.\n[ec2-user ~]$ sudo systemctl start hibinit-agent\nAmazon Linux 2 released before 2019.08.29\nTo configure an Amazon Linux 2 AMI released before 2019.08.29 to support hibernation\nUpdate the kernel to 4.14.138-114.102 or later.\n[ec2-user ~]$ sudo yum update kernel\nInstall the ec2-hibinit-agent package from the repositories.\n[ec2-user ~]$ sudo yum install ec2-hibinit-agent\nReboot the instance.\n[ec2-user ~]$ sudo reboot\nConfirm that the kernel version is updated to 4.14.138-114.102 or later.\n[ec2-user ~]$ uname -a\nStop the instance and create an AMI. For more information, see Create an Amazon EBS-backed AMI.\nAmazon Linux released before 2018.11.16\nTo configure an Amazon Linux AMI released before 2018.11.16 to support hibernation\nUpdate the kernel to 4.14.77-70.59 or later.\n[ec2-user ~]$ sudo yum update kernel\nInstall the ec2-hibinit-agent package from the repositories.\n[ec2-user ~]$ sudo yum install ec2-hibinit-agent\nReboot the instance.\n[ec2-user ~]$ sudo reboot\nConfirm that the kernel version is updated to 4.14.77-70.59 or greater.\n[ec2-user ~]$ uname -a\nStop the instance and create an AMI. For more information, see Create an Amazon EBS-backed AMI.\nCentOS version 8 or later\nTo configure a CentOS version 8 or later AMI to support hibernation\nUpdate the kernel to 4.18.0-305.7.1.el8_4.x86_64 or later.\n[ec2-user ~]$ sudo yum update kernel\nInstall the Fedora Extra Packages for Enterprise Linux (EPEL) repository.\n[ec2-user ~]$ sudo yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm\nInstall the ec2-hibinit-agent package from the repositories.\n[ec2-user ~]$ sudo yum install ec2-hibinit-agent\nEnable the hibernate agent to start on boot.\n[ec2-user ~]$ sudo systemctl enable hibinit-agent.service\nReboot the instance.\n[ec2-user ~]$ sudo reboot\nConfirm that the kernel version is updated to 4.18.0-305.7.1.el8_4.x86_64 or later.\n[ec2-user ~]$ uname -a\nFedora version 34 or later\nTo configure a Fedora version 34 or later AMI to support hibernation\nUpdate the kernel to 5.12.10-300.fc34.x86_64 or later.\n[ec2-user ~]$ sudo yum update kernel\nInstall the ec2-hibinit-agent package from the repositories.\n[ec2-user ~]$ sudo dnf install ec2-hibinit-agent\nEnable the hibernate agent to start on boot.\n[ec2-user ~]$ sudo systemctl enable hibinit-agent.service\nReboot the instance.\n[ec2-user ~]$ sudo reboot\nConfirm that the kernel version is updated to 5.12.10-300.fc34.x86_64 or later.\n[ec2-user ~]$ uname -a\nRed Hat Enterprise Linux version 8 or 9\nTo configure a Red Hat Enterprise Linux 8 or 9 AMI to support hibernation\nUpdate the kernel to 4.18.0-305.7.1.el8_4.x86_64 or later.\n[ec2-user ~]$ sudo yum update kernel\nInstall the Fedora Extra Packages for Enterprise Linux (EPEL) repository.\nRHEL version 8:\n[ec2-user ~]$ sudo yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm\nRHEL version 9:\n[ec2-user ~]$ sudo yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm\nInstall the ec2-hibinit-agent package from the repositories.\n[ec2-user ~]$ sudo yum install ec2-hibinit-agent\nEnable the hibernate agent to start on boot.\n[ec2-user ~]$ sudo systemctl enable hibinit-agent.service\nReboot the instance.\n[ec2-user ~]$ sudo reboot\nConfirm that the kernel version is updated to 4.18.0-305.7.1.el8_4.x86_64 or later.\n[ec2-user ~]$ uname -a\nUbuntu 20.04 LTS (Focal Fossa) released before serial number 20210820\nTo configure an Ubuntu 20.04 LTS (Focal Fossa) AMI released before serial number 20210820 to support hibernation\nUpdate the linux-aws-kernel to 5.8.0-1038.40 or later, and grub2 to 2.04-1ubuntu26.13 or later.\n[ec2-user ~]$ sudo apt update\n[ec2-user ~]$ sudo apt dist-upgrade\nReboot the instance.\n[ec2-user ~]$ sudo reboot\nConfirm that the kernel version is updated to 5.8.0-1038.40 or later.\n[ec2-user ~]$ uname -a\nConfirm that the grub2 version is updated to 2.04-1ubuntu26.13 or later.\n[ec2-user ~]$ dpkg --list | grep grub2-common\nUbuntu 18.04 (Bionic Beaver) released before serial number 20190722.1\nTo configure an Ubuntu 18.04 LTS AMI released before serial number 20190722.1 to support hibernation\nUpdate the kernel to 4.15.0-1044 or later.\n[ec2-user ~]$ sudo apt update\n[ec2-user ~]$ sudo apt dist-upgrade\nInstall the ec2-hibinit-agent package from the repositories.\n[ec2-user ~]$ sudo apt install ec2-hibinit-agent\nReboot the instance.\n[ec2-user ~]$ sudo reboot\nConfirm that the kernel version is updated to 4.15.0-1044 or later.\n[ec2-user ~]$ uname -a\nUbuntu 16.04 (Xenial Xerus)\nTo configure Ubuntu 16.04 LTS to support hibernation, you need to install the linux-aws-hwe kernel package version 4.15.0-1058-aws or later and the ec2-hibinit-agent.\nImportant\nThe linux-aws-hwe kernel package is supported by Canonical. The standard support for Ubuntu 16.04 LTS ended in April 2021, and the package no longer receives regular updates. However, it will receive additional security updates until the Extended Security Maintenance support ends in 2024. For more information, see Amazon EC2 Hibernation for Ubuntu 16.04 LTS now available on the Canonical Ubuntu Blog.\nWe recommend that you upgrade to the Ubuntu 20.04 LTS (Focal Fossa) AMI or the Ubuntu 18.04 LTS (Bionic Beaver) AMI.\nTo configure an Ubuntu 16.04 LTS AMI to support hibernation\nUpdate the kernel to 4.15.0-1058-aws or later.\n[ec2-user ~]$ sudo apt update\n[ec2-user ~]$ sudo apt install linux-aws-hwe\nInstall the ec2-hibinit-agent package from the repositories.\n[ec2-user ~]$ sudo apt install ec2-hibinit-agent\nReboot the instance.\n[ec2-user ~]$ sudo reboot\nConfirm that the kernel version is updated to 4.15.0-1058-aws or later.\n[ec2-user ~]$ uname -a"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/enabling-hibernation.html",
        "content": "To hibernate an instance, you must first enable it for hibernation while launching the instance.\nImportant\nYou can't enable or disable hibernation for an instance after you launch it.\nTopics\nEnable hibernation for On-Demand Instances\nEnable hibernation for Spot Instances\nView if an instance is enabled for hibernation\nEnable hibernation for On-Demand Instances\nUse one the following methods to enable hibernation for your On-Demand Instances.\nConsole\nAWS CLI\nPowerShell\nTo enable hibernation for an On-Demand Instance\nFollow the procedure to launch an instance, but don't launch the instance until you've completed the following steps to enable hibernation.\nTo enable hibernation, configure the following fields in the launch instance wizard:\nUnder Application and OS Images (Amazon Machine Image), select an AMI that supports hibernation. For more information, see AMIs.\nUnder Instance type, select a supported instance type. For more information, see Instance families.\nUnder Configure storage, choose Advanced (at the right), and specify the following information for the root volume:\nFor Size (GiB), enter the EBS root volume size. The volume must be large enough to store the RAM contents and accommodate your expected usage.\nFor Volume type, select a supported EBS volume type: General Purpose SSD (gp2 and gp3) or Provisioned IOPS SSD (io1 and io2).\nFor Encrypted, choose Yes. If you enabled encryption by default in this AWS Region, Yes is selected.\nFor KMS key, select the encryption key for the volume. If you enabled encryption by default in this AWS Region, the default encryption key is selected.\nFor more information about the prerequisites for the root volume, see Prerequisites for Amazon EC2 instance hibernation.\nExpand Advanced details, and for Stop - Hibernate behavior, choose Enable.\nIn the Summary panel, review your instance configuration, and then choose Launch instance. For more information, see Launch an EC2 instance using the launch instance wizard in the console.\nEnable hibernation for Spot Instances\nUse one of the following methods to enable hibernation for your Spot Instances. For more information about hibernating a Spot Instance on interruption, see Spot Instance interruptions.\nConsole\nAWS CLI\nPowerShell\nYou can use the launch instance wizard in the Amazon EC2 console to enable hibernation for a Spot Instance.\nTo enable hibernation for a Spot Instance\nFollow the procedure to request a Spot Instance using the launch instance wizard, but don't launch the instance until you've completed the following steps to enable hibernation.\nTo enable hibernation, configure the following fields in the launch instance wizard:\nUnder Application and OS Images (Amazon Machine Image), select an AMI that supports hibernation. For more information, see AMIs.\nUnder Instance type, select a supported instance type. For more information, see Instance families.\nUnder Configure storage, choose Advanced (at the right), and specify the following information for the root volume:\nFor Size (GiB), enter the EBS root volume size. The volume must be large enough to store the RAM contents and accommodate your expected usage.\nFor Volume type, select a supported EBS volume type: General Purpose SSD (gp2 and gp3) or Provisioned IOPS SSD (io1 and io2).\nFor Encrypted, choose Yes. If you enabled encryption by default in this AWS Region, Yes is selected.\nFor KMS key, select the encryption key for the volume. If you enabled encryption by default in this AWS Region, the default encryption key is selected.\nFor more information about the prerequisites for the root volume, see Prerequisites for Amazon EC2 instance hibernation.\nExpand Advanced details, and, in addition to the fields for configuring a Spot Instance, do the following:\nFor Request type, choose Persistent.\nFor Interruption behavior, choose Hibernate. Alternatively, for Stop - Hibernate behavior, choose Enable. Both fields enable hibernation on your Spot Instance. You need only configure one of them.\nIn the Summary panel, review your instance configuration, and then choose Launch instance. For more information, see Launch an EC2 instance using the launch instance wizard in the console.\nView if an instance is enabled for hibernation\nUse the following instructions to view whether an instance is enabled for hibernation.\nConsole\nAWS CLI\nPowerShell\nTo view if an instance is enabled for hibernation\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance and, on the Details tab, in the Instance details section, inspect Stop-hibernate behavior. Enabled indicates that the instance is enabled for hibernation."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/hibernation-disable-kaslr.html",
        "content": "To run hibernation on a newly launched instance with Ubuntu 16.04 LTS (Xenial Xerus), Ubuntu 18.04 LTS (Bionic Beaver) released with serial number 20190722.1 or later, or Ubuntu 20.04 LTS (Focal Fossa) released with serial number 20210820 or later, we recommend disabling KASLR (Kernel Address Space Layout Randomization). On Ubuntu 16.04 LTS, Ubuntu 18.04 LTS, or Ubuntu 20.04 LTS, KASLR is enabled by default.\nKASLR is a standard Linux kernel security feature that helps to mitigate exposure to and ramifications of yet-undiscovered memory access vulnerabilities by randomizing the base address value of the kernel. With KASLR enabled, there is a possibility that the instance might not resume after it has been hibernated.\nTo learn more about KASLR, see Ubuntu Features.\nTo disable KASLR on an instance launched with Ubuntu\nConnect to your instance using SSH. For more information, see Connect to your Linux instance using SSH.\nOpen the /etc/default/grub.d/50-cloudimg-settings.cfg file in your editor of choice. Edit the GRUB_CMDLINE_LINUX_DEFAULT line to append the nokaslr option to its end, as shown in the following example.\nGRUB_CMDLINE_LINUX_DEFAULT=\"console=tty1 console=ttyS0 nvme_core.io_timeout=4294967295 nokaslr\"\nSave the file and exit your editor.\nRun the following command to rebuild the grub configuration.\nsudo update-grub\nReboot the instance.\nsudo reboot\nRun the following command to confirm that nokaslr has been added.\ncat /proc/cmdline\nThe output of the command should include the nokaslr option."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/hibernating-instances.html",
        "content": "You can initiate hibernation on an On-Demand Instance or Spot Instance if the instance is an EBS-backed instance, is enabled for hibernation, and meets the hibernation prerequisites. If an instance cannot hibernate successfully, a normal shutdown occurs.\nConsole\nAWS CLI\nPowerShell\nTo hibernate an instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect an instance, and choose Instance state, Hibernate instance. If Hibernate instance is disabled, the instance is already hibernated or stopped, or it can't be hibernated. For more information, see Prerequisites for Amazon EC2 instance hibernation.\nWhen prompted for confirmation, choose Hibernate. It can take a few minutes for the instance to hibernate. The instance state first changes to Stopping, and then changes to Stopped when the instance has hibernated.\n Console\nAWS CLI\nPowerShell\nTo view if hibernation was initiated on an instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance and, on the Details tab, in the Instance details section, check the value for State transition message.\nClient.UserInitiatedHibernate: User initiated hibernate indicates that you initiated hibernation on the On-Demand Instance or Spot Instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/hibernating-resuming.html",
        "content": "Start a hibernated instance by starting it in the same way that you would start a stopped instance.\nNote\nFor Spot Instances, if Amazon EC2 hibernated the instance, then only Amazon EC2 can resume it. You can only resume a hibernated Spot Instance if you hibernated it. Spot Instances can only be resumed if capacity is available and the Spot price is less than or equal to your specified maximum price.\nConsole\nAWS CLI\nPowerShell\nTo start a hibernated instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect a hibernated instance, and choose Instance state, Start instance. It can take a few minutes for the instance to enter the running state. During this time, the instance status checks show the instance in a failed state until the instance has started."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/troubleshoot-instance-hibernate.html",
        "content": "Use this information to help diagnose and fix issues that you might encounter when hibernating an instance.\nHibernation issues\nCan't hibernate immediately after launch\nTakes too long to transition from stopping to stopped, and memory state not restored after start\nInstance \"stuck\" in the stopping state\nCan\u2019t start Spot Instance immediately after hibernate\nResume Spot Instances failed\nCan't hibernate immediately after launch\nIf you try to hibernate an instance too quickly after you've launched it, you get an error.\nYou must wait for about two minutes for Linux instances and about five minutes for Windows instances after launch before hibernating.\nTakes too long to transition from stopping to stopped, and memory state not restored after start\nIf it takes a long time for your hibernating instance to transition from the stopping state to stopped, and if the memory state is not restored after you start, this could indicate that hibernation was not properly configured.\nLinux instances\nCheck the instance system log and look for messages that are related to hibernation. To access the system log, connect to the instance or use the get-console-output command. Find the log lines from the hibinit-agent. If the log lines indicate a failure or the log lines are missing, there was most likely a failure configuring hibernation at launch.\nFor example, the following message indicates that the instance root volume is not large enough: hibinit-agent: Insufficient disk space. Cannot create setup for hibernation. Please allocate a larger root device.\nIf the last log line from the hibinit-agent is hibinit-agent: Running: swapoff /swap, hibernation was successfully configured.\nIf you do not see any logs from these processes, your AMI might not support hibernation. For information about supported AMIs, see Prerequisites for Amazon EC2 instance hibernation. If you used your own Linux AMI, make sure that you followed the instructions for Configure a Linux AMI to support hibernation.\nWindows Server 2016 and later\nCheck the EC2 launch log and look for messages that are related to hibernation. To access the EC2 launch log, connect to the instance and open the C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Log\\Ec2Launch.log file in a text editor. If you're using EC2Launch v2, open C:\\ProgramData\\Amazon\\EC2Launch\\log\\agent.log.\nNote\nBy default, Windows hides files and folders under C:\\ProgramData. To view EC2 Launch directories and files, enter the path in Windows Explorer or change the folder properties to show hidden files and folders.\nFind the log lines for hibernation. If the log lines indicate a failure or the log lines are missing, there was most likely a failure configuring hibernation at launch.\nFor example, the following message indicates that hibernation failed to configure: Message: Failed to enable hibernation. If the error message includes decimal ASCII values, you can convert the ASCII values to plain text in order to read the full error message.\nIf the log line contains HibernationEnabled: true, hibernation was successfully configured.\nWindows Server 2012 R2 and earlier\nCheck the EC2 config log and look for messages that are related to hibernation. To access the EC2 config log, connect to the instance and open the C:\\Program Files\\Amazon\\Ec2ConfigService\\Logs\\Ec2ConfigLog.txt file in a text editor. Find the log lines for SetHibernateOnSleep. If the log lines indicate a failure or the log lines are missing, there was most likely a failure configuring hibernation at launch.\nFor example, the following message indicates that the instance root volume is not large enough: SetHibernateOnSleep: Failed to enable hibernation: Hibernation failed with the following error: There is not enough space on the disk.\nIf the log line is SetHibernateOnSleep: HibernationEnabled: true, hibernation was successfully configured.\nWindows instance size\nIf you\u2019re using a T3 or T3a Windows instance with less than 1 GB of RAM, try increasing the size of the instance to one that has at least 1 GB of RAM.\nInstance \"stuck\" in the stopping state\nIf you hibernated your instance and it appears \"stuck\" in the stopping state, you can forcibly stop it. For more information, see Troubleshoot Amazon EC2 instance stop issues.\nCan\u2019t start Spot Instance immediately after hibernate\nIf you try to start a Spot Instance within two minutes of hibernating it, you might get the following error:\nYou failed to start the Spot Instance because the associated Spot Instance request is not in an appropriate state to support start.\nWait for about two minutes for Linux instances and about five minutes for Windows instances and then retry starting the instance.\nResume Spot Instances failed\nIf your Spot Instance was hibernated successfully but failed to resume, and instead rebooted (a fresh restart where the hibernated state is not retained), it might be because the user data contained the following script:\n/usr/bin/enable-ec2-spot-hibernation\nRemove this script from the User data field in the launch template, and then request a new Spot Instance.\nNote that even if the instance failed to resume, without the hibernated state preserved, the instance can still be started in the same way as starting from the stopped state."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-reboot.html",
        "content": "An instance reboot is equivalent to an operating system reboot. In most cases, it takes only a few minutes to reboot your instance.\nWhen you reboot an instance, it keeps the following:\nPublic DNS name (IPv4)\nPrivate IPv4 address\nPublic IPv4 address\nIPv6 address (if applicable)\nAny data on its instance store volumes\nRebooting an instance doesn't start a new instance billing period (with a minimum one-minute charge), unlike stopping and starting your instance.\nWe might schedule your instance for a reboot for necessary maintenance, such as to apply updates that require a reboot. No action is required on your part; we recommend that you wait for the reboot to occur within its scheduled window. For more information, see Scheduled events for Amazon EC2 instances.\nWe recommend that you use the Amazon EC2 console, a command line tool, or the Amazon EC2 API to reboot your instance instead of running the operating system reboot command from your instance. If you use the Amazon EC2 console, a command line tool, or the Amazon EC2 API to reboot your instance, we perform a hard reboot if the instance does not cleanly shut down within a few minutes. If you use AWS CloudTrail, then using Amazon EC2 to reboot your instance also creates an API record of when your instance was rebooted.\nWindows instances\nIf Windows is installing updates on your instance, we recommend that you do not reboot or shut down your instance using the Amazon EC2 console or the command line until all the updates are installed. When you use the Amazon EC2 console or the command line to reboot or shut down your instance, there is a risk that your instance will be hard rebooted. A hard reboot while updates are being installed could throw your instance into an unstable state.\nConsole\nCommand line\nTo reboot an instance using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance and choose Instance state, Reboot instance.\nAlternatively, select the instance and choose Actions, Manage instance state. In the screen that opens, choose Reboot, and then Change state.\nChoose Reboot when prompted for confirmation.\nThe instance remains in the running state.\nTo run a controlled fault injection experiment\nYou can use AWS Fault Injection Service to test how your application responds when your instance is rebooted. For more information, see the AWS Fault Injection Service User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html",
        "content": "You can delete your instance when you no longer need it. This is referred to as terminating your instance. As soon as the state of an instance changes to shutting-down or terminated, you stop incurring charges for that instance.\nYou can't connect to or start an instance after you've terminated it. However, you can launch additional instances using the same AMI. If you'd rather stop or hibernate an instance, see Stop and start Amazon EC2 instances or Hibernate your Amazon EC2 instance. For more information, see Differences between instance states.\nContents\nHow instance termination works\nTerminate an instance\nTroubleshoot instance termination\nEnable termination protection\nChange the instance initiated shutdown behavior\nPreserve data when an instance is terminated\nTerminate an instance\nYou can terminate an instance at any time.\nConsole\nCommand line\nTo terminate an instance using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance, and choose Instance state, Terminate (delete) instance.\nChoose Terminate (delete) when prompted for confirmation.\nAfter you terminate an instance, it remains visible for a short while, with a state of terminated.\nIf termination fails or if a terminated instance is visible for more than a few hours, see Terminated instance still displayed.\nTroubleshoot instance termination\nThe requester must have permission to call ec2:TerminateInstances. For more information, see Example policies to work with instances.\nIf you terminate your instance and another instance starts, most likely you have configured automatic scaling through a feature like EC2 Fleet or Amazon EC2 Auto Scaling. For more information, see Instances automatically launched or terminated.\nYou can't terminate an instance if termination protection is turned on. For more information, see termination protection.\nIf your instance is in the shutting-down state for longer than usual, it should be cleaned up (terminated) by automated processes within the Amazon EC2 service. For more information, see Delayed instance termination."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/how-ec2-instance-termination-works.html",
        "content": "When you terminate an instance, changes are registered at the OS level of the instance, some resources are lost, and some resources persist.\nThe following diagram shows what is lost and what persists when an Amazon EC2 instance is terminated. When an instance terminates, the data on any instance store volumes and the data stored the instance RAM is erased. Any Elastic IP addresses associated with the instance are detached. For Amazon EBS volumes and the data on those volumes, the outcome depends on the Delete on termination setting for the volume. By default, the root volume is deleted and the data volumes are preserved.\nConsiderations\nWhen an instance terminates, the data on any instance store volumes associated with that instance is deleted.\nBy default, Amazon EBS root device volumes are automatically deleted when the instance terminates. However, any additional EBS volumes that you attach at launch, or any EBS volumes that you attach to an existing instance persist even after the instance terminates. For more information, see Preserve data when an instance is terminated.\nNote\nAny volumes that are not deleted upon termination of the instance will continue to incur charges.\nTo prevent an instance from being accidentally terminated by someone, enable termination protection.\nTo control whether an instance stops or terminates when shutdown is initiated from the instance, change the instance initiated shutdown behavior.\nIf you run a script on instance termination, your instance might have an abnormal termination, because we have no way to ensure that shutdown scripts run. Amazon EC2 attempts to shut an instance down cleanly and run any system shutdown scripts; however, certain events (such as hardware failure) may prevent these system shutdown scripts from running.\nx86 bare metal instances do not support cooperative shutdown.\nWhat happens when you terminate an instance\nChanges registered at the OS level\nThe API request sends a button press event to the guest.\nVarious system services are stopped as a result of the button press event. Graceful shutdown of the system is provided by systemd (Linux) or the System process (Windows). Graceful shutdown is triggered by the ACPI shutdown button press event from the hypervisor.\nACPI shutdown is initiated.\nThe instance will shut down after the graceful shutdown process exits. There is no configurable OS shutdown time. The instance remains visible in the console for a short time, then the entry is automatically deleted.\nResources lost\nData stored on an instance store volume.\nData stored on Amazon EBS root device volumes if the DeleteOnTermination attribute is set to true.\nResources that persist\nData stored on additional Amazon EBS volumes attached at launch or after launch of an instance.\nTest application response to instance termination\nYou can use AWS Fault Injection Service to test how your application responds when your instance is terminated. For more information, see the AWS Fault Injection Service User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_ChangingDisableAPITermination.html",
        "content": "To prevent your instance from being accidentally terminated, you can enable termination protection for the instance. The DisableApiTermination attribute controls whether the instance can be terminated using the AWS Management Console, AWS Command Line Interface (AWS CLI), or API. By default, termination protection is disabled for your instance which means that your instance can be terminated using the AWS Management Console, AWS CLI, or API. You can set the value of this attribute when you launch an instance, while the instance is running, or while the instance is stopped (for Amazon EBS backed instances).\nThe DisableApiTermination attribute doesn't prevent you from terminating an instance by initiating shutdown from the instance (using an operating system command for system shutdown) when the InstanceInitiatedShutdownBehavior attribute is set. For more information, see Change the instance initiated shutdown behavior.\nConsiderations\nEnabling termination protection does not prevent AWS from terminating the instance when there is a scheduled event to terminate the instance.\nEnabling termination protection does not prevent Amazon EC2 Auto Scaling from terminating an instance when the instance is unhealthy or during scale-in events. You can control whether an Auto Scaling group can terminate a particular instance when scaling using instance scale-in protection. You can control whether an Auto Scaling group can terminate unhealthy instances by suspending the ReplaceUnhealthy scaling process.\nYou can't enable termination protection for Spot Instances.\nTo enable termination protection for an instance at launch time\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nOn the dashboard, choose Launch Instance and follow the directions in the wizard.\nOn the Configure Instance Details page, select the Enable termination protection checkbox.\nTo enable termination protection for a running or stopped instance\nSelect the instance, and choose Actions, Instance Settings, Change Termination Protection.\nChoose Yes, Enable.\nTo disable termination protection for a running or stopped instance\nSelect the instance, and choose Actions, Instance Settings, Change Termination Protection.\nChoose Yes, Disable.\nTo enable or disable termination protection using the command line\nYou can use one of the following commands. For more information about these command line interfaces, see Access Amazon EC2.\nmodify-instance-attribute (AWS CLI)\nEdit-EC2InstanceAttribute (AWS Tools for Windows PowerShell)\nTerminate multiple instances with termination protection\nIf you terminate multiple instances across multiple Availability Zones in the same request, and one or more of the specified instances are enabled for termination protection, the request fails with the following results:\nThe specified instances that are in the same Availability Zone as the protected instance are not terminated.\nThe specified instances that are in different Availability Zones, where no other specified instances are protected, are successfully terminated.\nExample\nSuppose that you have the following four instances across two Availability Zones.\nInstance Availability Zone Terminate protection\nInstance 1 AZ A Disabled\nInstance 2 Disabled\nInstance 3 AZ B Enabled\nInstance 4 Disabled\nIf you attempt to terminate all of these instances in the same request, the request reports failure with the following results:\nInstance 1 and Instance 2 are successfully terminated because neither instance is enabled for termination protection.\nInstance 3 and Instance 4 fail to terminate because Instance 3 is enabled for termination protection."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_ChangingInstanceInitiatedShutdownBehavior.html",
        "content": "By default, when you initiate a shutdown from an Amazon EBS backed instance (using a command such as shutdown or poweroff), the instance stops. You can change this behavior so that the instance terminates instead by changing the InstanceInitiatedShutdownBehavior attribute for the instance. You can change this attribute while the instance is running or stopped.\nThe halt command doesn't initiate a shutdown. If used, the instance doesn't terminate; instead, it places the CPU into HLT and the instance continues to run.\nNote\nThe InstanceInitiatedShutdownBehavior attribute only applies when you perform a shutdown from the operating system of the instance itself. It doesn't apply when you stop an instance using the StopInstances API or the Amazon EC2 console.\nYou can change the InstanceInitiatedShutdownBehavior attribute using the Amazon EC2 console or the command line.\nConsole\nCommand line\nTo change the instance initiated shutdown behavior\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance.\nChoose Actions, Instance settings, Change shutdown behavior.\nShutdown behavior displays the current behavior.\nTo change the behavior, for Shutdown behavior, choose Stop or Terminate.\nChoose Save."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/preserving-volumes-on-termination.html",
        "content": "Depending on your use case, you might want to preserve the data on your instance store volume or Amazon EBS volume when the Amazon EC2 instance is terminated. The data on an instance store volume doesn't persist when an instance is terminated. If you need to preserve the data stored on an instance store volume beyond the lifetime of the instance, you must manually copy that data to more persistent storage, such as an Amazon EBS volume, an Amazon S3 bucket, or an Amazon EFS file system. For more information, see Storage options for your Amazon EC2 instances.\nFor data on Amazon EBS volumes, Amazon EC2 uses the value of the DeleteOnTermination attribute for each attached Amazon EBS volume to determine whether to preserve or delete the volume.\nThe default value for the DeleteOnTermination attribute differs depending on whether the volume is the root volume of the instance or a non-root volume attached to the instance.\nRoot volume\nBy default, when you launch an instance the DeleteOnTermination attribute for the root volume of an instance is set to true. Therefore, the default is to delete the root volume of the instance when the instance terminates.\nNon-root volume\nBy default, when you attach a non-root EBS volume to an instance, its DeleteOnTermination attribute is set to false. Therefore, the default is to preserve these volumes.\nNote\nAfter the instance terminates, you can take a snapshot of the preserved volume or attach it to another instance. You must delete a volume to avoid incurring further charges.\nThe DeleteOnTermination attribute can be set by the creator of an AMI as well as by the person who launches an instance. When the attribute is changed by the creator of an AMI or by the person who launches an instance, the new setting overrides the original AMI default setting. We recommend that you verify the default setting for the DeleteOnTermination attribute after you launch an instance with an AMI.\nTo verify if an Amazon EBS volume will be deleted on instance termination, view the details for volume on the instance's details pane. On the Storage tab, under Block devices, scroll right to view the Delete on termination setting for the volume.\nIf Yes, the volume will be deleted when the instance is terminated.\nIf No, the volume will not be deleted when the instance is terminated. Any volumes that are not deleted upon termination of the instance will continue to incur charges.\nChange the root volume to persist at launch\nUsing the console, you can change the DeleteOnTermination attribute when you launch an instance. To change this attribute for a running instance, you must use the command line.\nUse one of the following methods to change the root volume to persist at launch.\nConsole\nCommand line\nTo change the root volume of an instance to persist at launch using the console\nFollow the procedure to launch an instance, but don't launch the instance until you've completed the following steps to change the root volume to persist.\nUnder Storage (volumes), expand the information under the root volume.\nFor Delete on termination, choose No\nIn the Summary panel, review your instance configuration, and then choose Launch instance. For more information, see Launch an EC2 instance using the launch instance wizard in the console.\nChange the root volume of a running instance to persist\nYou can use one of the following commands to change the root device volume of a running EBS-backed instance to persist. For more information about these command line interfaces, see Access Amazon EC2.\nmodify-instance-attribute (AWS CLI)\nEdit-EC2InstanceAttribute (AWS Tools for Windows PowerShell)\nFor example, use the following command:\naws ec2 modify-instance-attribute --instance-id i-1234567890abcdef0 --block-device-mappings file://mapping.json\nIn mapping.json, specify the device name, for example /dev/sda1 or /dev/xvda, and for --DeleteOnTermination, specify false.\n[\n  {\n    \"DeviceName\": \"device_name\",\n    \"Ebs\": {\n      \"DeleteOnTermination\": false\n    }\n  }\n]"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-retirement.html",
        "content": "An instance is scheduled to be retired when AWS detects irreparable failure of the underlying hardware that hosts the instance. The instance root device determines the behavior of instance retirement:\nIf your instance root device is an Amazon EBS volume, the instance is stopped, and you can start it again at any time. Starting the stopped instance migrates it to new hardware.\nIf your instance root device is an instance store volume, the instance is terminated, and can't be used again.\nFor more information about the types of instance events, see Scheduled events for Amazon EC2 instances.\nContents\nIdentify instances scheduled for retirement\nActions to take for EBS-backed instances scheduled for retirement\nActions to take for instance-store backed instances scheduled for retirement\nIdentify instances scheduled for retirement\nIf your instance is scheduled for retirement, you receive an email prior to the event with the instance ID and retirement date. You can also check for instances that are scheduled for retirement using the Amazon EC2 console or the command line.\nImportant\nIf an instance is scheduled for retirement, we recommend that you take action as soon as possible because the instance might be unreachable. (The email notification you receive states the following: \"Due to this degradation your instance could already be unreachable.\") For more information about the recommended action you should take, see Check if your instance is reachable.\nWays to identify instances scheduled for retirement\nEmail notification\nConsole identification\nEmail notification\nIf your instance is scheduled for retirement, you receive an email prior to the event with the instance ID and retirement date.\nThe email is sent to the primary account holder and the operations contact. For more information about managing your account contacts, see Update the primary contact for your AWS account in the AWS Account Management Reference Guide.\nConsole identification\nIf you use an email account that you do not check regularly for instance retirement notifications, you can use the Amazon EC2 console or the command line to determine if any of your instances are scheduled for retirement.\nTo identify instances scheduled for retirement using the console\nOpen the Amazon EC2 console.\nIn the navigation pane, choose EC2 Dashboard. Under Scheduled events, you can see the events that are associated with your Amazon EC2 instances and volumes, organized by Region.\nIf you have an instance with a scheduled event listed, select its link below the Region name to go to the Events page.\nThe Events page lists all resources that have events associated with them. To view instances that are scheduled for retirement, select Instance resources from the first filter list, and then Instance stop or retirement from the second filter list.\nIf the filter results show that an instance is scheduled for retirement, select it, and note the date and time in the Start time field in the details pane. This is your instance retirement date.\nTo identify instances scheduled for retirement using the command line\nYou can use one of the following commands. For more information about these command line interfaces, see Access Amazon EC2.\ndescribe-instance-status (AWS CLI)\nGet-EC2InstanceStatus (AWS Tools for Windows PowerShell)\nActions to take for EBS-backed instances scheduled for retirement\nTo preserve the data on your retiring instance, you can perform one of the following actions. It's important that you take this action before the instance retirement date to prevent unforeseen downtime and data loss.\nFor Linux instances, if you are not sure whether your instance is backed by EBS or instance store, see Root volumes for your Amazon EC2 instances.\nCheck if your instance is reachable\nWhen you are notified that your instance is scheduled for retirement, we recommend that you take the following action as soon as possible:\nCheck if your instance is reachable by either connecting to or pinging your instance.\nIf your instance is reachable, you should plan to stop/start your instance at an appropriate time before the scheduled retirement date, when the impact is minimal. For more information about stopping and starting your instance, and what to expect when your instance is stopped, such as the effect on public, private, and Elastic IP addresses that are associated with your instance, see Stop and start Amazon EC2 instances. Note that data on instance store volumes is lost when you stop and start your instance.\nIf your instance is unreachable, you should take immediate action and perform a stop/start to recover your instance.\nAlternatively, if you want to terminate your instance, plan to do so as soon as possible so that you stop incurring charges for the instance.\nCreate a backup of your instance\nCreate an EBS-backed AMI from your instance so that you have a backup. To ensure data integrity, stop the instance before you create the AMI. You can wait for the scheduled retirement date when the instance is stopped, or stop the instance yourself before the retirement date. You can start the instance again at any time. For more information, see Create an Amazon EBS-backed AMI.\nLaunch a replacement instance\nAfter you create an AMI from your instance, you can use the AMI to launch a replacement instance. From the Amazon EC2 console, select your new AMI and then choose Launch instance from AMI. Configure the parameters for your instance and then choose Launch instance. For more information about each field, see Launch an EC2 instance using the launch instance wizard in the console.\nActions to take for instance-store backed instances scheduled for retirement\nTo preserve the data on your retiring instance, you can perform one of the following actions. It's important that you take this action before the instance retirement date to prevent unforeseen downtime and data loss.\nWarning\nIf your instance store-backed instance passes its retirement date, it is terminated and you cannot recover the instance or any data that was stored on it. Regardless of the root device of your instance, the data on instance store volumes is lost when the instance is retired, even if the volumes are attached to an EBS-backed instance.\nCheck if your instance is reachable\nWhen you are notified that your instance is scheduled for retirement, we recommend that you take the following action as soon as possible:\nCheck if your instance is reachable by either connecting to or pinging your instance.\nIf your instance is unreachable, there is likely very little that can be done to recover your instance. For more information, see Troubleshoot an unreachable Amazon EC2 instance. AWS will terminate your instance on the scheduled retirement date, so, for an unreachable instance, you can immediately terminate the instance yourself.\nLaunch a replacement instance\nCreate an instance store-backed AMI from your instance using the AMI tools, as described in Create an instance store-backed AMI. From the Amazon EC2 console, select your new AMI and then choose Launch instance from AMI. Configure the parameters for your instance and then choose Launch instance. For more information about each field, see Launch an EC2 instance using the launch instance wizard in the console.\nConvert your instance to an EBS-backed instance\nTransfer your data to an EBS volume, take a snapshot of the volume, and then create AMI from the snapshot. You can launch a replacement instance from your new AMI. For more information, see Convert your instance store-backed AMI to an EBS-backed AMI."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-recover.html",
        "content": "Important\nThis section describes how to proactively configure recovery mechanisms on an EC2 instance. These recovery mechanisms are designed to restore instance availability when AWS detects an underlying hardware or software issue that causes a system status check to fail. If you are currently experiencing problems accessing your instance, see Troubleshoot EC2 instances.\nIf AWS detects that an instance is unavailable due to an underlying hardware or software issue, there are two mechanisms that can automatically restore instance availability\u2014simplified automatic recovery and Amazon CloudWatch action based recovery. Restoring instance availability is also known as instance recovery.\nDuring the instance recovery process, AWS will attempt to move your instance from the host with the underlying hardware or software issue to a different host. If successful, the instance recovery process will appear to the instance as an unplanned reboot. You can verify if instance recovery occurred.\nIf the recovery process is unsuccessful, the instance might continue running on the host with the underlying hardware or software issue. In this case, manual intervention is required. If the instance becomes unreachable or the system status check continues to fail, we recommend that you manually stop and start the instance. When you start an instance, it is typically migrated to a new underlying host computer. However, unlike automatic instance recovery, where the instance retains its public IPv4 address, a restarted instance receives a new public IPv4 address unless it has an Elastic IP address.\nTo benefit from the automatic recovery mechanisms, they must be configured in advance on an instance before a system status check fails. By default, simplified automatic recovery is enabled during instance launch. You can optionally configure Amazon CloudWatch action based recovery after launch. Having one of these mechanisms configured makes your instance more resilient.\nSimplified automatic recovery and Amazon CloudWatch action based recovery are only available on supported instances. For more information, see Requirements for enabling simplified automatic recovery and Requirements for enabling CloudWatch action based recovery.\nWarning\nWhen AWS recovers your instance due to an underlying hardware or software issue, be aware of the following consequences: data stored in volatile memory (RAM) will be lost and the operating system\u2019s uptime will start over from zero. Furthermore, with CloudWatch action based recovery, data on instance store volumes will also be lost. To help protect against data loss, we recommend that you regularly create backups of valuable data. For more information about backup and recovery best practices for EC2 instances, see Best practices for Amazon EC2.\nAutomatic instance recovery mechanisms are designed for individual instances. For guidance on building a resilient system, see Build a resilient system.\nTopics\nKey concepts of automatic instance recovery\nDifferences between simplified automatic recovery and CloudWatch action based recovery\nBuild a resilient system\nVerify if automatic instance recovery occurred\nConfigure simplified automatic recovery on an Amazon EC2 instance\nConfigure CloudWatch action based recovery on an Amazon EC2 instance\nKey concepts of automatic instance recovery\nAutomatic instance recovery is an Amazon EC2 feature that automatically restores instance availability when underlying hardware or software failures occur, enhancing the resilience and reliability of your EC2 instances.\nThe following are key concepts of automatic instance recovery:\nConfiguration options\nTwo mechanisms can be configured to support automatic instance recovery:\nSimplified automatic recovery: Enabled by default on supported instances.\nCloudWatch action based recovery: Requires manual configuration on supported instances.\nSystem status checks\nSystem status checks automatically monitor the AWS infrastructure on which your EC2 instance runs.\nIf a system status check fails, AWS initiates automatic instance recovery, which attempts to migrate the affected instance to different hardware.\nA failed system status check indicates a problem with the host's hardware or software, and not a problem with the instance itself. Automatic instance recovery can recover an instance that fails a system status check. However, automatic instance recovery does not operate if only the instance status check fails.\nFor the differences between instance and system status checks, see Types of status checks.\nExamples of underlying hardware or software problems\nHardware or software issues that can cause a system status check to fail include loss of network connectivity, loss of system power, software issues on the physical host, and hardware issues on the physical host that impact network reachability.\nCharacteristics of recovered instances\nA recovered instance is identical to the original instance, except for the elements that are lost.\nPreserved elements:\nInstance ID\nPublic, private, and Elastic IP addresses\nInstance metadata\nPlacement group\nAttached EBS volumes\nAvailability Zone\nLost elements:\nData stored in volatile memory (RAM)\nData stored on instance store volumes (applicable to CloudWatch action based recovery only)\nOperating system uptime resets to zero\nMonitoring system status checks with CloudWatch\nThe StatusCheckFailed_System metric in CloudWatch indicates whether a system status check passed or failed.\nMetric values:\n0 \u2013 The system status check passed.\n1 \u2013 The system status check failed.\nEvents in AWS Health Dashboard\nDuring automatic instance recovery attempts, AWS sends events to your AWS Health Dashboard based on the configured recovery mechanism and its outcome:\nSimplified automatic recovery\nSuccess event: AWS_EC2_SIMPLIFIED_AUTO_RECOVERY_SUCCESS\nFailure event: AWS_EC2_SIMPLIFIED_AUTO_RECOVERY_FAILURE\nCloudWatch action based recovery\nSuccess event: AWS_EC2_INSTANCE_AUTO_RECOVERY_SUCCESS\nFailure event: AWS_EC2_INSTANCE_AUTO_RECOVERY_FAILURE\nDifferences between simplified automatic recovery and CloudWatch action based recovery\nThe following table compares the key differences between simplified automatic recovery and CloudWatch action based recovery.\nComparison point Simplified automatic recovery CloudWatch action based recovery\nConfiguration Enabled by default on supported instances Requires manual configuration of CloudWatch alarms and actions\nFlexibility Fixed recovery behavior managed by AWS Customizable actions and conditions\nNotification Basic notifications through AWS Health Dashboard Customizable notifications through SNS\nMetal instance size Excluded Included\nInstance store volumes attached at launch Not supported for instances that attach instance store volumes at launch Supported on selected instance types. Note that data on instance store volumes is lost during instance recovery.\nRecovery time Standard recovery attempt Faster recovery attempts than simplified automatic recovery\nCost No additional cost Might incur CloudWatch charges\nBuild a resilient system\nWhile simplified automatic recovery and CloudWatch action based recovery are effective for maintaining individual instance availability, AWS recommends implementing a high-availability architecture that allows failover of traffic to healthy instances.\nTo achieve this, consider using AWS services such as Elastic Load Balancing (which distributes incoming traffic across multiple EC2 instances) and Amazon EC2 Auto Scaling (which automatically adjusts the number of instances based on demand and health).\nFor more information about building a resilient, fault-tolerant system with EC2 instances, see the following resources:\nBack to Basics: Designing for Failure with EC2 on the AWS YouTube channel\nDisaster Recovery (DR) Architecture on AWS, Part I: Strategies for Recovery in the Cloud on the AWS Architecture Blog site\nApplication Load Balancers User Guide\nAmazon EC2 Auto Scaling User Guide\nREL11-BP02 Fail over to healthy resources in the Reliability Pillar AWS Well-Architected Framework"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/verify-if-automatic-recovery-occurred.html",
        "content": "If your instance appears to have been offline and then unexpectedly rebooted, it might have undergone automatic instance recovery in response to an underlying hardware or software issue. You can verify this by checking for automatic instance recovery events in your AWS Health Dashboard. You can also check whether an underlying hardware or software issue was detected for your instance by checking the StatusCheckFailed_System Amazon CloudWatch metric.\nCheck for events in AWS Health Dashboard\nWhen an automatic instance recovery attempt occurs, AWS sends events to your AWS Health Dashboard. The specific event depends on the configured recovery mechanism and whether the attempt succeeded or failed.\nTo check for automatic instance recovery events in the AWS Health Dashboard\nOpen the AWS Health Dashboard at https://phd.aws.amazon.com/phd/home#/.\nLook for the events associated with automatic instance recovery. The presence of these events can confirm whether an attempt at automatic instance recovery occurred and its outcome.\nSimplified automatic recovery\nSuccess event: AWS_EC2_SIMPLIFIED_AUTO_RECOVERY_SUCCESS\nFailure event: AWS_EC2_SIMPLIFIED_AUTO_RECOVERY_FAILURE\nCloudWatch action based recovery\nSuccess event: AWS_EC2_INSTANCE_AUTO_RECOVERY_SUCCESS\nFailure event: AWS_EC2_INSTANCE_AUTO_RECOVERY_FAILURE\nMonitor system status checks with CloudWatch\nYou can verify if an underlying hardware or software issue was detected for your instance by checking the StatusCheckFailed_System metric in CloudWatch. The metric value indicates whether a system status check passed (no hardware or software issue) or failed (hardware or software issue).\nTo verify if an underlying hardware or software issue was detected\nOpen the CloudWatch console Metrics page at https://console.aws.amazon.com/cloudwatch/home?#metricsV2.\nVerify that you're in the same Region as your EC2 instance.\nPaste the following metric in the Metrics search field, and press Enter.\nStatusCheckFailed_System\nChoose EC2 > Per-Instance Metrics.\nIn the table, select the check box next to the instance that you want to check.\nChange the query period to the time that you suspect the recovery event occurred.\nChoose the Graphed metrics tab, and for StatusCheckFailed_System, do the following:\nFor Statistic, choose either Average, Maximum, or Minimum.\nFor Period, choose 1 minute.\nCheck the value for StatusCheckFailed_System.\nValue of 0: The system status check passed, indicating no underlying hardware or software issue.\nValue of 1: The system status check failed, indicating an underlying hardware or software issue.\nFor more information, see Automatic instance recovery."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-configuration-recovery.html",
        "content": "Important\nThis section describes how to proactively configure recovery mechanisms on an EC2 instance. These recovery mechanisms are designed to restore instance availability when AWS detects an underlying hardware or software issue that causes a system status check to fail. If you are currently experiencing problems accessing your instance, see Troubleshoot EC2 instances.\nIf AWS detects that an instance is unavailable due to an underlying hardware or software issue, simplified automatic recovery can automatically restore instance availability by moving the instance from the host with the underlying issue to a different host.\nIf simplified automatic recovery occurs, AWS sends one of the following events to your AWS Health Dashboard, depending on the outcome:\nSuccess event: AWS_EC2_SIMPLIFIED_AUTO_RECOVERY_SUCCESS\nFailure event: AWS_EC2_SIMPLIFIED_AUTO_RECOVERY_FAILURE\nTo be notified of these events, you can configure notifications. For more information, see Creating your first notification configuration in AWS User Notifications in the AWS User Notifications User Guide. You can also use Amazon EventBridge rules to monitor simplified automatic recovery events.\nSimplified automatic recovery is enabled by default on all supported instances during instance launch. However, it can only operate if an instance is in the running state, there are no service events listed in the AWS Health Dashboard, and there is available capacity for the instance type. In some situations, such as significant outages, capacity constraints might cause recovery attempts to fail. For more information, see Troubleshoot simplified automatic recovery failures.\nYou can disable simplified automatic recovery during or after launch, and re-enable it later if required.\nWarning\nWhen AWS recovers your instance due to an underlying hardware or software issue, be aware of the following consequences: data stored in volatile memory (RAM) will be lost and the operating system\u2019s uptime will start over from zero. To help protect against data loss, we recommend that you regularly create backups of valuable data. For more information about backup and recovery best practices for EC2 instances, see Best practices for Amazon EC2.\nAutomatic instance recovery mechanisms are designed for individual instances. For guidance on building a resilient system, see Build a resilient system.\nTopics\nRequirements for enabling simplified automatic recovery\nConfigure simplified automatic recovery\nTroubleshoot simplified automatic recovery failures\nRequirements for enabling simplified automatic recovery\nSimplified automatic recovery can be enabled on instances that meet the following criteria:\nInstance types\nGeneral purpose: A1, M3, M4, M5, M5a, M5n, M5zn, M6a, M6g, M6i, M6in, M7a, M7g, M7i, M7i-flex, M8g, T1, T2, T3, T3a, T4g\nCompute optimized: C3, C4, C5, C5a, C5n, C6a, C6g, C6gn, C6i, C6in, C7a, C7g, C7gn, C7i, C7i-flex, C8g\nMemory optimized: R3, R4, R5, R5a, R5b, R5n, R6a, R6g, R6i, R6in, R7a, R7g, R7i, R7iz, R8g, U-3tb1, U-6tb1, U-9tb1, U-12tb1, U-18tb1, U-24tb1, U7i-6tb, U7i-8tb, U7i-12tb, U7in-16tb, U7in-24tb, U7in-32tb, U7inh-32tb, X1, X1e, X2iezn, X8g\nAccelerated computing: G3, G5g, Inf1, P2, P3, VT1\nHigh-performance computing: Hpc6a, Hpc7a, Hpc7g\nTenancy\nShared\nDedicated Instance\nFor more information, see Amazon EC2 Dedicated Instances.\nLimitations\nSimplified automatic recovery is not supported for instances with the following characteristics:\nInstance size: metal instances\nTenancy: Dedicated Host. For Dedicated Hosts, use Dedicated Host Auto Recovery instead.\nStorage: Instances with instance store volumes\nNetworking: Instances using an Elastic Fabric Adapter\nAuto Scaling: Instances that are part of an Auto Scaling group\nMaintenance: Instances currently undergoing a scheduled maintenance event\nConfigure simplified automatic recovery\nSimplified automatic recovery is enabled by default when you launch a supported instance. You can set the automatic recovery behavior to disabled during or after launching the instance.\nThe default configuration doesn't enable simplified automatic recovery for an unsupported instance.\nConsole\nAWS CLI\nTo disable simplified automatic recovery during instance launch\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances, and then choose Launch instance.\nIn the Advanced details section, for Instance auto-recovery, choose Disabled.\nConfigure the remaining instance launch settings as needed and then launch the instance.\nTo disable simplified automatic recovery for a running or stopped instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance, and then choose Actions, Instance settings, Change auto-recovery behavior.\nChoose Off, and then choose Save.\nTo enable simplified automatic recovery for a running or stopped instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance, and then choose Actions, Instance settings, Change auto-recovery behavior.\nChoose Default (On), and then choose Save.\nTroubleshoot simplified automatic recovery failures\nIf simplified automatic recovery fails to recover your instance, consider the following issues:\nAWS service events are running\nSimplified automatic recovery does not operate during service events in the AWS Health Dashboard. You might not receive recovery failure notifications for such events. For the latest service availability information, see the Service health status page.\nInsufficient capacity\nThere is temporarily insufficient replacement hardware to migrate the instance.\nMaximum daily recovery attempts reached\nThe instance has reached the maximum daily allowance for recovery attempts. Your instance might subsequently be retired if automatic recovery fails and a hardware degradation is determined to be the root cause of the original failed system status check.\nIf the instance\u2019s system status check failure persists despite multiple recovery attempts, see Troubleshoot instances with failed status checks for additional guidance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cloudwatch-recovery.html",
        "content": "Important\nThis section describes how to proactively configure recovery mechanisms on an EC2 instance. These recovery mechanisms are designed to restore instance availability when AWS detects an underlying hardware or software issue that causes a system status check to fail. If you are currently experiencing problems accessing your instance, see Troubleshoot EC2 instances.\nIf AWS detects that an instance is unavailable due to an underlying hardware or software issue, CloudWatch action based recovery can automatically restore instance availability by moving the instance from the host with the underlying issue to a different host.\nIf CloudWatch action based recovery occurs, AWS sends one of the following events to your AWS Health Dashboard, depending on the outcome:\nSuccess event: AWS_EC2_INSTANCE_AUTO_RECOVERY_SUCCESS\nFailure event: AWS_EC2_INSTANCE_AUTO_RECOVERY_FAILURE\nYou can configure CloudWatch action based recovery to add recovery actions to Amazon CloudWatch alarms. CloudWatch action based recovery works with the StatusCheckFailed_System metric. CloudWatch action based recovery provides to-the-minute recovery response time granularity and Amazon Simple Notification Service (Amazon SNS) notifications of recovery actions and outcomes. These configuration options allow for faster recovery attempts with more granular control over the system status check failure event response compared to simplified automatic recovery. For more information about available CloudWatch options, see Status checks for your instances.\nHowever, CloudWatch action based recovery can only operate if an instance is in the running state, there are no service events listed in the AWS Health Dashboard, and there is available capacity for the instance type. In some situations, such as significant outages, capacity constraints might cause recovery attempts to fail. For more information, see Troubleshoot CloudWatch action based recovery failures.\nWarning\nWhen AWS recovers your instance due to an underlying hardware or software issue, be aware of the following consequences: data stored in volatile memory (RAM) and on instance store volumes will be lost, and the operating system\u2019s uptime will start over from zero. To help protect against data loss, we recommend that you regularly create backups of valuable data. For more information about backup and recovery best practices for EC2 instances, see Best practices for Amazon EC2.\nAutomatic instance recovery mechanisms are designed for individual instances. For guidance on building a resilient system, see Build a resilient system.\nTopics\nRequirements for enabling CloudWatch action based recovery\nConfigure CloudWatch action based recovery\nTroubleshoot CloudWatch action based recovery failures\nRequirements for enabling CloudWatch action based recovery\nCloudWatch action based recovery can be enabled on instances that meet the following criteria:\nInstance types\nGeneral purpose: A1, M3, M4, M5, M5a, M5n, M5zn, M6a, M6g, M6i, M6in, M7a, M7g, M7i, M7i-flex, M8g, T1, T2, T3, T3a, T4g\nCompute optimized: C3, C4, C5, C5a, C5n, C6a, C6g, C6gn, C6i, C6in, C7a, C7g, C7gn, C7i, C7i-flex, C8g\nMemory optimized: R3, R4, R5, R5a, R5b, R5n, R6a, R6g, R6i, R6in, R7a, R7g, R7i, R7iz, R8g, U-3tb1, U-6tb1, U-9tb1, U-12tb1, U-18tb1, U-24tb1, U7i-6tb, U7i-8tb, U7i-12tb, U7in-16tb, U7in-24tb, U7in-32tb, U7inh-32tb, X1, X1e, X2idn, X2iedn, X2iezn, X8g\nAccelerated computing: G3, G5g, Inf1, P2, P3, VT1\nHigh-performance computing: Hpc6a, Hpc7a, Hpc7g\nMetal instances: Any of the above instance types with the metal instance size.\nTenancy\nShared\nDedicated Instance\nFor more information, see Amazon EC2 Dedicated Instances.\nLimitations\nCloudWatch action based recovery is not supported for instances with the following characteristics:\nTenancy: Dedicated Host. For Dedicated Hosts, use Dedicated Host Auto Recovery instead.\nNetworking: Instances using an Elastic Fabric Adapter\nAuto Scaling: Instances that are part of an Auto Scaling group\nMaintenance: Instances currently undergoing a scheduled maintenance event\nView the instance types that support CloudWatch action based recovery\nYou can use the AWS Management Console or the AWS CLI to view the instance types that support CloudWatch action based recovery.\nConsole\nAWS CLI\nTo view the instance types that support CloudWatch action based recovery\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigation pane, choose Instance Types.\nIn the filter bar, enter Auto Recovery support: true. As you enter the characters and the filter name appears, you can select it.\nThe Instance types table displays all the instance types that support CloudWatch action based recovery.\nConfigure CloudWatch action based recovery\nTo configure CloudWatch action based recovery for an EC2 instance, create a CloudWatch alarm that monitors the StatusCheckFailed_System metric for the specified instance. Set the alarm to trigger when the metric value is 1, indicating a failed system status check. Configure the alarm action to automatically recover the instance when triggered.\nYou can configure the alarm using either the Amazon EC2 console or the CloudWatch console. For the instructions, see Add recover actions to Amazon CloudWatch alarms in this user guide, or Adding recover actions to Amazon CloudWatch alarms in the Amazon CloudWatch User Guide.\nTroubleshoot CloudWatch action based recovery failures\nIf CloudWatch action based recovery fails to recover your instance, consider the following issues:\nAWS service events are running\nCloudWatch action based recovery does not operate during service events in the AWS Health Dashboard. You might not receive recovery failure notifications for such events. For the latest service availability information, see the Service health status page.\nInsufficient capacity\nThere is temporarily insufficient replacement hardware to migrate the instance.\nMaximum daily recovery attempts reached\nThe instance has reached the maximum daily allowance for recovery attempts. Your instance might subsequently be retired if automatic recovery fails and a hardware degradation is determined to be the root cause of the original failed system status check.\nIf the instance\u2019s system status check failure persists despite multiple recovery attempts, see Troubleshoot instances with failed status checks for additional guidance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
        "content": "Instance metadata is data about your instance that you can use to configure or manage the running instance. Instance metadata includes the following:\nInstance metadata properties\nInstance metadata properties are divided into categories, for example, host name, events, and security groups.\nDynamic data\nDynamic data is metadata that's generated when the instance is launched, such as an instance identity document. For more information, see Dynamic data categories.\nUser data\nYou can also use instance metadata to access user data that you specified when you launched your instance. For example, you can specify parameters for configuring your instance, or include a simple script. You can also build generic AMIs and use user data to modify the configuration files supplied at launch time. For example, if you run web servers for various small businesses, they can all use the same generic AMI and retrieve their content from an Amazon S3 bucket that you specify in the user data at launch. To add a new customer at any time, create a bucket for the customer, add their content, and launch your AMI with the unique bucket name provided to your code in the user data. If you launch multiple instances using the same RunInstances call, the user data is available to all instances in that reservation. Each instance that is part of the same reservation has a unique ami-launch-index number, so that you can write code that controls what the instances do. For example, the first host might elect itself as the original node in a cluster. For a detailed AMI launch example, see Identify each instance launched in a single request.\nImportant\nAlthough you can only access instance metadata and user data from within the instance itself, the data is not protected by authentication or cryptographic methods. Anyone who has direct access to the instance, and potentially any software running on the instance, can view its metadata. Therefore, you should not store sensitive data, such as passwords or long-lived encryption keys, as user data.\nContents\nInstance metadata categories\nDynamic data categories\nAccess instance metadata for an EC2 instance\nConfigure the Instance Metadata Service options\nRun commands when you launch an EC2 instance with user data input\nIdentify each instance launched in a single request\nInstance metadata categories\nInstance metadata properties are divided into categories. To retrieve instance metadata properties, you specify the category in the request, and the metadata is returned in the response.\nWhen new categories are released, a new instance metadata build is created with a new version number. In the following table, the Version when category was released column specifies the build version when an instance metadata category was released. To avoid having to update your code every time Amazon EC2 releases a new instance metadata build, use latest instead of the version number in your metadata requests. For more information, see Get the available versions of the instance metadata.\nWhen Amazon EC2 releases a new instance metadata category, the instance metadata for the new category might not be available for existing instances. With Nitro-based instances, you can retrieve instance metadata only for the categories that were available at launch. For instances with the Xen hypervisor, you can stop and then start the instance to update the categories that are available for the instance.\nThe following table lists the categories of instance metadata. Some of the category names include placeholders for data that is unique to your instance. For example, mac represents the MAC address for the network interface. You must replace the placeholders with actual values when you retrieve the instance metadata.\nCategory Description Version when category was released\nami-id The AMI ID used to launch the instance. 1.0\nami-launch-index If you launch multiple instances using the same RunInstances call, this value indicates the launch order for each instance. The value of the first instance launched is 0. If you launch instances using Auto Scaling or EC2 fleet, this value is always 0. 1.0\nami-manifest-path The path to the AMI manifest file in Amazon S3. If you used an Amazon EBS-backed AMI to launch the instance, the returned result is unknown. 1.0\nancestor-ami-ids The AMI IDs of any instances that were rebundled to create this AMI. This value will only exist if the AMI manifest file contained an ancestor-amis key. 2007-10-10\nautoscaling/target-lifecycle-state\nValue showing the target Auto Scaling lifecycle state that an Auto Scaling instance is transitioning to. Present when the instance transitions to one of the target lifecycle states after March 10, 2022. Possible values: Detached | InService | Standby | Terminated | Warmed:Hibernated | Warmed:Running | Warmed:Stopped | Warmed:Terminated. See Retrieve the target lifecycle state through instance metadata in the Amazon EC2 Auto Scaling User Guide.\n2021-07-15\nblock-device-mapping/ami The virtual device that contains the root/boot file system. 2007-12-15\nblock-device-mapping/ebsN The virtual devices associated with any Amazon EBS volumes. Amazon EBS volumes are only available in metadata if they were present at launch time or when the instance was last started. The N indicates the index of the Amazon EBS volume (such as ebs1 or ebs2). 2007-12-15\nblock-device-mapping/ephemeralN The virtual devices for any non-NVMe instance store volumes. The N indicates the index of each volume. The number of instance store volumes in the block device mapping might not match the actual number of instance store volumes for the instance. The instance type determines the number of instance store volumes that are available to an instance. If the number of instance store volumes in a block device mapping exceeds the number available to an instance, the additional instance store volumes are ignored. 2007-12-15\nblock-device-mapping/root The virtual devices or partitions associated with the root devices or partitions on the virtual device, where the root (/ or C:) file system is associated with the given instance. 2007-12-15\nblock-device-mapping/swap The virtual devices associated with swap. Not always present. 2007-12-15\nelastic-gpus/associations/elastic-gpu-id If there is an Elastic GPU attached to the instance, contains a JSON string with information about the Elastic GPU, including its ID and connection information. 2016-11-30\nelastic-inference/associations/eia-id If there is an Elastic Inference accelerator attached to the instance, contains a JSON string with information about the Elastic Inference accelerator, including its ID and type. 2018-11-29\nevents/maintenance/history If there are completed or canceled maintenance events for the instance, contains a JSON string with information about the events. 2018-08-17\nevents/maintenance/scheduled If there are active maintenance events for the instance, contains a JSON string with information about the events. For more information, see View scheduled events that affect your Amazon EC2 instances. 2018-08-17\nevents/recommendations/rebalance The approximate time, in UTC, when the EC2 instance rebalance recommendation notification is emitted for the instance. The following is an example of the metadata for this category: {\"noticeTime\": \"2020-11-05T08:22:00Z\"}. This category is available only after the notification is emitted. For more information, see EC2 instance rebalance recommendations. 2020-10-27\nhostname If the EC2 instance is using IP-based naming (IPBN), this is the private IPv4 DNS hostname of the instance. If the EC2 instance is using Resource-based naming (RBN), this is the RBN. In cases where multiple network interfaces are present, this refers to the eth0 device (the device for which the device number is 0). For more information about IPBN and RBN, see Amazon EC2 instance hostname types. 1.0\niam/info If there is an IAM role associated with the instance, contains information about the last time the instance profile was updated, including the instance's LastUpdated date, InstanceProfileArn, and InstanceProfileId. Otherwise, not present. 2012-01-12\niam/security-credentials/role-name If there is an IAM role associated with the instance, role-name is the name of the role, and role-name contains the temporary security credentials associated with the role (for more information, see Retrieve security credentials from instance metadata). Otherwise, not present. 2012-01-12\nidentity-credentials/ec2/info Information about the credentials in identity-credentials/ec2/security-credentials/ec2-instance. 2018-05-23\nidentity-credentials/ec2/security-credentials/ec2-instance Credentials for the instance identity role that allow on-instance software to identify itself to AWS to support features such as EC2 Instance Connect and AWS Systems Manager Default Host Management Configuration. These credentials have no policies attached, so they have no additional AWS API permissions beyond identifying the instance to the AWS feature. For more information, see Instance identity roles for Amazon EC2 instances. 2018-05-23\ninstance-action Notifies the instance that it should reboot in preparation for bundling. Valid values: none | shutdown | bundle-pending. 2008-09-01\ninstance-id The ID of this instance. 1.0\ninstance-life-cycle The purchasing option of this instance. For more information, see Amazon EC2 billing and purchasing options. 2019-10-01\ninstance-type The type of instance. For more information, see Amazon EC2 instance types. 2007-08-29\nipv6 The IPv6 address of the instance. In cases where multiple network interfaces are present, this refers to the eth0 device (the device for which the device number is 0) network interface and the first IPv6 address assigned. If no IPv6 address exists on network interface[0], this item is not set and results in an HTTP 404 response. 2021-01-03\nkernel-id The ID of the kernel launched with this instance, if applicable. 2008-02-01\nlocal-hostname In cases where multiple network interfaces are present, this refers to the eth0 device (the device for which the device number is 0). If the EC2 instance is using IP-based naming (IPBN), this is the private IPv4 DNS hostname of the instance. If the EC2 instance is using Resource-based naming (RBN), this is the RBN. For more information about IPBN, RBN, and EC2 instance naming, see Amazon EC2 instance hostname types. 2007-01-19\nlocal-ipv4 The private IPv4 address of the instance. In cases where multiple network interfaces are present, this refers to the eth0 device (the device for which the device number is 0). If this is an IPv6-only instance, this item is not set and results in an HTTP 404 response. 1.0\nmac The instance's media access control (MAC) address. In cases where multiple network interfaces are present, this refers to the eth0 device (the device for which the device number is 0). 2011-01-01\nmetrics/vhostmd No longer available. 2011-05-01\nnetwork/interfaces/macs/mac/device-number The unique device number associated with that interface. The device number corresponds to the device name; for example, a device-number of 2 is for the eth2 device. This category corresponds to the DeviceIndex and device-index fields that are used by the Amazon EC2 API and the EC2 commands for the AWS CLI. 2011-01-01\nnetwork/interfaces/macs/mac/interface-id The ID of the network interface. 2011-01-01\nnetwork/interfaces/macs/mac/ipv4-associations/public-ip The private IPv4 addresses that are associated with each public IP address and assigned to that interface. 2011-01-01\nnetwork/interfaces/macs/mac/ipv6s The IPv6 addresses assigned to the interface. 2016-06-30\nnetwork/interfaces/macs/mac/ipv6-prefix The IPv6 prefix assigned to the network interface.\nnetwork/interfaces/macs/mac/local-hostname\nThe private IPv4 DNS hostname of the instance. In cases where multiple network interfaces are present, this refers to the eth0 device (the device for which the device number is 0). If this is a IPv6-only instance, this is the resource-based name. For more information about IPBN and RBN, see Amazon EC2 instance hostname types.\n2007-01-19\nnetwork/interfaces/macs/mac/local-ipv4s The private IPv4 addresses associated with the interface. If this is an IPv6-only network interface, this item is not set and results in an HTTP 404 response. 2011-01-01\nnetwork/interfaces/macs/mac/mac The instance's MAC address. 2011-01-01\nnetwork/interfaces/macs/mac/network-card The index of the network card. Some instance types support multiple network cards. 2020-11-01\nnetwork/interfaces/macs/mac/owner-id The ID of the owner of the network interface. In multiple-interface environments, an interface can be attached by a third party, such as Elastic Load Balancing. Traffic on an interface is always billed to the interface owner. 2011-01-01\nnetwork/interfaces/macs/mac/public-hostname The interface's public DNS (IPv4). This category is only returned if the enableDnsHostnames attribute is set to true. For more information, see DNS attributes for your VPC in the Amazon VPC User Guide. If the instance only has a public-IPv6 address and no public-IPv4 address, this item is not set and results in an HTTP 404 response. 2011-01-01\nnetwork/interfaces/macs/mac/public-ipv4s The public IP address or Elastic IP addresses associated with the interface. There may be multiple IPv4 addresses on an instance. 2011-01-01\nnetwork/interfaces/macs/mac/security-groups Security groups to which the network interface belongs. 2011-01-01\nnetwork/interfaces/macs/mac/security-group-ids The IDs of the security groups to which the network interface belongs. 2011-01-01\nnetwork/interfaces/macs/mac/subnet-id The ID of the subnet in which the interface resides. 2011-01-01\nnetwork/interfaces/macs/mac/subnet-ipv4-cidr-block The IPv4 CIDR block of the subnet in which the interface resides. 2011-01-01\nnetwork/interfaces/macs/mac/subnet-ipv6-cidr-blocks The IPv6 CIDR block of the subnet in which the interface resides. 2016-06-30\nnetwork/interfaces/macs/mac/vpc-id The ID of the VPC in which the interface resides. 2011-01-01\nnetwork/interfaces/macs/mac/vpc-ipv4-cidr-block The primary IPv4 CIDR block of the VPC. 2011-01-01\nnetwork/interfaces/macs/mac/vpc-ipv4-cidr-blocks The IPv4 CIDR blocks for the VPC. 2016-06-30\nnetwork/interfaces/macs/mac/vpc-ipv6-cidr-blocks The IPv6 CIDR block of the VPC in which the interface resides. 2016-06-30\nplacement/availability-zone The Availability Zone in which the instance launched. 2008-02-01\nplacement/availability-zone-id The static Availability Zone ID in which the instance is launched. The Availability Zone ID is consistent across accounts. However, it might be different from the Availability Zone, which can vary by account. 2019-10-01\nplacement/group-name The name of the placement group in which the instance is launched. 2020-08-24\nplacement/host-id The ID of the host on which the instance is launched. Applicable only to Dedicated Hosts. 2020-08-24\nplacement/partition-number The number of the partition in which the instance is launched. 2020-08-24\nplacement/region The AWS Region in which the instance is launched. 2020-08-24\nproduct-codes AWS Marketplace product codes associated with the instance, if any. 2007-03-01\npublic-hostname The instance's public DNS (IPv4). This category is only returned if the enableDnsHostnames attribute is set to true. For more information, see DNS attributes for your VPC in the Amazon VPC User Guide. If the instance only has a public-IPv6 address and no public-IPv4 address, this item is not set and results in an HTTP 404 response. 2007-01-19\npublic-ipv4 The public IPv4 address. If an Elastic IP address is associated with the instance, the value returned is the Elastic IP address. 2007-01-19\npublic-keys/0/openssh-key Public key. Only available if supplied at instance launch time. 1.0\nramdisk-id The ID of the RAM disk specified at launch time, if applicable. 2007-10-10\nreservation-id The ID of the reservation. 1.0\nsecurity-groups\nThe names of the security groups applied to the instance.\nAfter launch, you can change the security groups of the instances. Such changes are reflected here and in network/interfaces/macs/mac/security-groups.\n1.0\nservices/domain\nThe domain for AWS resources for the Region.\n2014-02-25\nservices/partition\nThe partition that the resource is in. For standard AWS Regions, the partition is aws. If you have resources in other partitions, the partition is aws-partitionname. For example, the partition for resources in the China (Beijing) Region is aws-cn.\n2015-10-20\nspot/instance-action\nThe action (hibernate, stop, or terminate) and the approximate time, in UTC, when the action will occur. This item is present only if the Spot Instance has been marked for hibernate, stop, or terminate. For more information, see instance-action.\n2016-11-15\nspot/termination-time\nThe approximate time, in UTC, that the operating system for your Spot Instance will receive the shutdown signal. This item is present and contains a time value (for example, 2015-01-05T18:02:00Z) only if the Spot Instance has been marked for termination by Amazon EC2. The termination-time item is not set to a time if you terminated the Spot Instance yourself. For more information, see termination-time.\n2014-11-05\ntags/instance The instance tags associated with the instance. Only available if you explicitly allow access to tags in instance metadata. For more information, see Allow access to tags in instance metadata. 2021-03-23\nDynamic data categories\nThe following table lists the categories of dynamic data.\nCategory Description Version when category was released\nfws/instance-monitoring Value showing whether the customer has enabled detailed one-minute monitoring in CloudWatch. Valid values: enabled | disabled 2009-04-04\ninstance-identity/document JSON containing instance attributes, such as instance-id, private IP address, etc. See Instance identity documents for Amazon EC2 instances. 2009-04-04\ninstance-identity/pkcs7 Used to verify the document's authenticity and content against the signature. See Instance identity documents for Amazon EC2 instances. 2009-04-04\ninstance-identity/signature Data that can be used by other parties to verify its origin and authenticity. See Instance identity documents for Amazon EC2 instances. 2009-04-04"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
        "content": "You can access EC2 instance metadata from inside of the instance itself or from the EC2 console, API, SDKs, or the AWS CLI. To get the current instance metadata settings for an instance from the console or command line, see Query instance metadata options for existing instances.\nYou can also modify user data for instances with an EBS root volume. The instance must be in the stopped state. For console directions, see Update the instance user data. For a Linux example that uses the AWS CLI, see modify-instance-attribute. For a Windows example that uses the Tools for Windows PowerShell, see User data and the Tools for Windows PowerShell.\nNote\nYou are not billed for HTTP requests used to retrieve instance metadata and user data.\nInstance metadata access considerations\nTo avoid problems with instance metadata retrieval, consider the following.\nCommand format\nThe command format is different, depending on whether you use Instance Metadata Service Version 1 (IMDSv1) or Instance Metadata Service Version 2 IMDSv2. By default, you can use both versions of the Instance Metadata Service. To require the use of IMDSv2, see Use the Instance Metadata Service to access instance metadata.\nIf IMDSv2 is required, IMDSv1 does not work\nIf you use IMDSv1 and receive no response, it's likely that IMDSv2 is required. To check whether IMDSv2 is required, select the instance to view its details. The IMDSv2 value indicates either Required (you must use IMDSv2) or Optional (you can use either IMDSv2 or IMDSv1).\n(IMDSv2) Use /latest/api/token to retrieve the token\nIssuing PUT requests to any version-specific path, for example /2021-03-23/api/token, results in the metadata service returning 403 Forbidden errors. This behavior is intended.\nMetadata version\nTo avoid having to update your code every time Amazon EC2 releases a new instance metadata build, we recommend that you use latest in the path, and not the version number.\nIPv6 support\nTo retrieve instance metadata using an IPv6 address, ensure that you enable and use the IPv6 address of the IMDS [fd00:ec2::254] instead of the IPv4 address 169.254.169.254. The instance must be a Nitro-based instance launched in a subnet that supports IPv6.\n(Windows) Create custom AMIs using Windows Sysprep\nTo ensure that IMDS works when you launch an instance from a custom Windows AMI, the AMI must be a standardized image created with Windows Sysprep. Otherwise, the IMDS won't work. For more information, see Create an Amazon EC2 AMI using Windows Sysprep.\nIn a container environment, set the hop limit to 2\nThe AWS SDKs use IMDSv2 calls by default. If the IMDSv2 call receives no response, the SDK retries the call and, if still unsuccessful, uses IMDSv1. This can result in a delay, especially in a container environment. In a container environment, if the hop limit is 1, the IMDSv2 response does not return because going to the container is considered an additional network hop. To avoid the process of falling back to IMDSv1 and the resultant delay, in a container environment we recommend that you set the hop limit to 2. For more information, see Configure the Instance Metadata Service options.\nPackets per second (PPS) limit\nThere is a 1024 packet per second (PPS) limit to services that use link-local addresses. This limit includes the aggregate of Route 53 Resolver DNS Queries, Instance Metadata Service (IMDS) requests, Amazon Time Service Network Time Protocol (NTP) requests, and Windows Licensing Service (for Microsoft Windows based instances) requests.\nAdditional considerations for user data access\nUser data is treated as opaque data: what you specify is what you get back upon retrieval. It is up to the instance to interpret and act on user data.\nUser data must be base64-encoded. Depending on the tool or SDK that you're using, the base64-encoding might be performed for you. For example:\nThe Amazon EC2 console can perform the base64-encoding for you or accept base64-encoded input.\nAWS CLI version 2 performs base64-encoding of binary parameters for you by default. AWS CLI version 1 performs the base64-encoding of the --user-data parameter for you.\nThe AWS SDK for Python (Boto3) performs base64-encoding of the UserData parameter for you.\nUser data is limited to 16 KB, in raw form, before it is base64-encoded. The size of a string of length n after base64-encoding is ceil(n/3)*4.\nUser data must be base64-decoded when you retrieve it. If you retrieve the data using instance metadata or the console, it's decoded for you automatically.\nIf you stop an instance, modify its user data, and start the instance, the updated user data is not run automatically when you start the instance. With Windows instances, you can configure settings so that updated user data scripts are run one time when you start the instance or every time you reboot or start the instance.\nUser data is an instance attribute. If you create an AMI from an instance, the instance user data is not included in the AMI.\nAccess instance metadata from within an EC2 instance\nBecause your instance metadata is available from your running instance, you do not need to use the Amazon EC2 console or the AWS CLI. This can be helpful when you're writing scripts to run from your instance. For example, you can access the local IP address of your instance from instance metadata to manage a connection to an external application.\nAll of the following are considered instance metadata, but they are accessed in different ways. Select the tab that represents the type of instance metadata you want to access to see more information.\nMetadata\nDynamic data\nUser data\nInstance metadata properties are divided into categories. For a description of each instance metadata category, see Instance metadata categories.\nTo access instance metadata properties from within a running instance, get the data from the following IPv4 or IPv6 URIs. These IP addresses are link-local addresses and are valid only from the instance. For more information, see Link-local addresses.\nIPv4\nhttp://169.254.169.254/latest/meta-data/\nIPv6\nhttp://[fd00:ec2::254]/latest/meta-data/\nQuery instance metadata options for existing instances\nYou can query the instance metadata options for your existing instances by using one of the following methods.\nConsole\nAWS CLI\nPowerShell\nTo query the instance metadata options for an existing instance using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect your instance.\nChoose Actions, Instance settings, Modify instance metadata options.\nReview the current instance metadata options in the Modify instance metadata options dialog box.\nResponses and error messages\nAll instance metadata is returned as text (HTTP content type text/plain).\nA request for a specific metadata resource returns the appropriate value, or a 404 - Not Found HTTP error code if the resource is not available.\nA request for a general metadata resource (the URI ends with a /) returns a list of available resources, or a 404 - Not Found HTTP error code if there is no such resource. The list items are on separate lines, terminated by line feeds (ASCII 10).\nFor requests made using Instance Metadata Service Version 2, the following HTTP error codes can be returned:\n400 - Missing or Invalid Parameters \u2013 The PUT request is not valid.\n401 - Unauthorized \u2013 The GET request uses an invalid token. The recommended action is to generate a new token.\n403 - Forbidden \u2013 The request is not allowed or the IMDS is turned off.\n503 \u2013 The request could not be completed. Retry the request.\nIf the IMDS returns an error, curl prints the error message in the output and returns a success status code. The error message is stored in the TOKEN variable, which causes curl commands that use the token to fail. If you call curl with the -f option, it returns an error status code in the event of an HTTP server error. If you enable error handling, the shell can catch the error and stop the script.\nQuery throttling\nWe throttle queries to the IMDS on a per-instance basis, and we place limits on the number of simultaneous connections from an instance to the IMDS.\nIf you're using the IMDS to retrieve AWS security credentials, avoid querying for credentials during every transaction or concurrently from a high number of threads or processes, as this might lead to throttling. Instead, we recommend that you cache the credentials until they start approaching their expiry time. For more information about IAM role and security credentials associated with the role, see Retrieve security credentials from instance metadata.\nIf you are throttled while accessing the IMDS, retry your query with an exponential backoff strategy."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
        "content": "You can access instance metadata from a running instance using one of the following methods:\nInstance Metadata Service Version 2 (IMDSv2) \u2013 a session-oriented method\nFor examples, see Examples for IMDSv2.\nInstance Metadata Service Version 1 (IMDSv1) \u2013 a request/response method\nFor examples, see Examples for IMDSv1.\nBy default, you can use either IMDSv1 or IMDSv2, or both.\nYou can configure the Instance Metadata Service (IMDS) on each instance so that local code or users must use IMDSv2. When you specify that IMDSv2 must be used, IMDSv1 no longer works. For information about how to configure your instance to use IMDSv2, see Configure the Instance Metadata Service options.\nThe PUT or GET headers are unique to IMDSv2. If these headers are present in the request, then the request is intended for IMDSv2. If no headers are present, it is assumed the request is intended for IMDSv1.\nFor an extensive review of IMDSv2, see Add defense in depth against open firewalls, reverse proxies, and SSRF vulnerabilities with enhancements to the EC2 Instance Metadata Service.\nTopics\nHow Instance Metadata Service Version 2 works\nTransition to using Instance Metadata Service Version 2\nUse a supported AWS SDK\nExamples for IMDSv2\nExamples for IMDSv1\nHow Instance Metadata Service Version 2 works\nIMDSv2 uses session-oriented requests. With session-oriented requests, you create a session token that defines the session duration, which can be a minimum of one second and a maximum of six hours. During the specified duration, you can use the same session token for subsequent requests. After the specified duration expires, you must create a new session token to use for future requests.\nNote\nThe examples in this section use the IPv4 address of the Instance Metadata Service (IMDS): 169.254.169.254. If you are retrieving instance metadata for EC2 instances over the IPv6 address, ensure that you enable and use the IPv6 address instead: [fd00:ec2::254]. The IPv6 address of the IMDS is compatible with IMDSv2 commands. The IPv6 address is only accessible on Nitro-based instances in an IPv6-supported subnet (dual stack or IPv6 only).\nThe following examples use a shell script and IMDSv2 to retrieve the top-level instance metadata items. Each example:\nCreates a session token lasting six hours (21,600 seconds) using the PUT request\nStores the session token header in a variable named TOKEN (Linux instances) or token (Windows instances)\nRequests the top-level metadata items using the token\nLinux example\nWindows example\nWhen you use IMDSv2 to request instance metadata, the request must include the following:\nUse a PUT request to initiate a session to the instance metadata service. The PUT request returns a token that must be included in subsequent GET requests to the instance metadata service. The token is required to access metadata using IMDSv2.\nInclude the token in all GET requests to the IMDS. When token usage is set to required, requests without a valid token or with an expired token receive a 401 - Unauthorized HTTP error code.\nThe token is an instance-specific key. The token is not valid on other EC2 instances and will be rejected if you attempt to use it outside of the instance on which it was generated.\nThe PUT request must include a header that specifies the time to live (TTL) for the token, in seconds, up to a maximum of six hours (21,600 seconds). The token represents a logical session. The TTL specifies the length of time that the token is valid and, therefore, the duration of the session.\nAfter a token expires, to continue accessing instance metadata, you must create a new session using another PUT.\nYou can choose to reuse a token or create a new token with every request. For a small number of requests, it might be easier to generate and immediately use a token each time you need to access the IMDS. But for efficiency, you can specify a longer duration for the token and reuse it rather than having to write a PUT request every time you need to request instance metadata. There is no practical limit on the number of concurrent tokens, each representing its own session. IMDSv2 is, however, still constrained by normal IMDS connection and throttling limits. For more information, see Query throttling.\nHTTP GET and HEAD methods are allowed in IMDSv2 instance metadata requests. PUT requests are rejected if they contain an X-Forwarded-For header.\nBy default, the response to PUT requests has a response hop limit (time to live) of 1 at the IP protocol level. If you need a bigger hop limit, you can adjust it by using the modify-instance-metadata-options AWS CLI command. For example, you might need a bigger hop limit for backward compatibility with container services running on the instance. For more information, see Modify instance metadata options for existing instances.\nTransition to using Instance Metadata Service Version 2\nWhen migrating to IMDSv2, we recommend that you use the following tools and transition path.\nTopics\nTools for helping with the transition to IMDSv2\nRecommended path to requiring IMDSv2\nTools for helping with the transition to IMDSv2\nIf your software uses IMDSv1, use the following tools to help reconfigure your software to use IMDSv2.\nAWS software\nThe latest versions of the AWS CLI and AWS SDKs support IMDSv2. To use IMDSv2, make sure that your EC2 instances have the latest versions of the CLI and SDKs. For information about updating the CLI, see Installing or updating the AWS CLI in the AWS Command Line Interface User Guide.\nAll Amazon Linux 2 and Amazon Linux 2023 software packages support IMDSv2. In Amazon Linux 2023, IMDSv1 is disabled by default.\nFor the minimum AWS SDK versions that support IMDSv2, see Use a supported AWS SDK.\nIMDS Packet Analyzer\nThe IMDS Packet Analyzer is an open-sourced tool that identifies and logs IMDSv1 calls from your instance\u2019s boot phase. This can assist in identifying the software making IMDSv1 calls on EC2 instances, allowing you to pinpoint exactly what you need to update to get your instances ready to use IMDSv2 only. You can run IMDS Packet Analyzer from a command line or install it as a service. For more information, see IMDS Packet Analyzer on GitHub.\nCloudWatch\nIMDSv2 uses token-backed sessions, while IMDSv1 does not. The MetadataNoToken CloudWatch metric tracks the number of calls to the Instance Metadata Service (IMDS) that are using IMDSv1. By tracking this metric to zero, you can determine if and when all of your software has been upgraded to use IMDSv2.\nAfter you've disabled IMDSv1, you can use the MetadataNoTokenRejected CloudWatch metric to track the number of times an IMDSv1 call was attempted and rejected. By tracking this metric, you can ascertain whether your software needs to be updated to use IMDSv2.\nFor more information, see Instance metrics.\nUpdates to EC2 APIs and CLIs\nFor new instances, you can use the RunInstances API to launch new instances that require the use of IMDSv2. For more information, see Configure instance metadata options for new instances.\nFor existing instances, you can use the ModifyInstanceMetadataOptions API to require the use of IMDSv2. For more information, see Modify instance metadata options for existing instances.\nTo require the use of IMDSv2 on all new instances launched by Auto Scaling groups, your Auto Scaling groups can use either a launch template or a launch configuration. When you create a launch template or create a launch configuration, you must configure the MetadataOptions parameters to require the use of IMDSv2. The Auto Scaling group launches new instances using the new launch template or launch configuration, but existing instances are not affected. For existing instances in an Auto Scaling group, you can use the ModifyInstanceMetadataOptions API to require the use of IMDSv2 on the existing instances, or terminate the instances and the Auto Scaling group will launch new replacement instances with the instance metadata options settings that are defined in the new launch template or launch configuration.\nUse an AMI that configures IMDSv2 by default\nWhen you launch an instance, you can automatically configure it to use IMDSv2 by default (the HttpTokens parameter is set to required) by launching it with an AMI that is configured with the ImdsSupport parameter set to v2.0. You can set the ImdsSupport parameter to v2.0 when you register the AMI using the register-image CLI command, or you can modify an existing AMI by using the modify-image-attribute CLI command. For more information, see Configure the AMI.\nIAM policies and SCPs\nYou can use an IAM policy or AWS Organizations service control policy (SCP) to control users as follows:\nCan't launch an instance using the RunInstances API unless the instance is configured to use IMDSv2.\nCan't modify a running instance using the ModifyInstanceMetadataOptions API to re-enable IMDSv1.\nThe IAM policy or SCP must contain the following IAM condition keys:\nec2:MetadataHttpEndpoint\nec2:MetadataHttpPutResponseHopLimit\nec2:MetadataHttpTokens\nIf a parameter in the API or CLI call does not match the state specified in the policy that contains the condition key, the API or CLI call fails with an UnauthorizedOperation response.\nFurthermore, you can choose an additional layer of protection to enforce the change from IMDSv1 to IMDSv2. At the access management layer with respect to the APIs called via EC2 Role credentials, you can use a new condition key in either IAM policies or AWS Organizations service control policies (SCPs). Specifically, by using the condition key ec2:RoleDelivery with a value of 2.0 in your IAM policies, API calls made with EC2 Role credentials obtained from IMDSv1 will receive an UnauthorizedOperation response. The same thing can be achieved more broadly with that condition required by an SCP. This ensures that credentials delivered via IMDSv1 cannot actually be used to call APIs because any API calls not matching the specified condition will receive an UnauthorizedOperation error.\nFor example IAM policies, see Work with instance metadata. For more information on SCPs, see Service control policies in the AWS Organizations User Guide.\nRecommended path to requiring IMDSv2\nUsing the above tools, we recommend that you follow this path for transitioning to IMDSv2.\nStep 1: At the start\nUpdate the SDKs, CLIs, and your software that use Role credentials on their EC2 instances to versions compatible with IMDSv2. For more information about updating the CLI, see Installing or updating to the latest version of the AWS CLI in the AWS Command Line Interface User Guide.\nThen, change your software that directly accesses instance metadata (in other words, that does not use an SDK) using the IMDSv2 requests. You can use the IMDS Packet Analyzer to identify the software that you need to change to use IMDSv2 requests.\nStep 2: Track your transition progress\nTrack your transition progress by using the CloudWatch metric MetadataNoToken. This metric shows the number of IMDSv1 calls to the IMDS on your instances. For more information, see Instance metrics.\nStep 3: When there is zero IMDSv1 usage\nWhen the CloudWatch metric MetadataNoToken records zero IMDSv1 usage, your instances are ready to be fully transitioned to using IMDSv2. At this stage, you can do the following:\nAccount default\nYou can set IMDSv2 to be required as an account default. When an instance is launched, the instance configuration is automatically set to the account default.\nTo set the account default, do the following:\nAmazon EC2 console: On the EC2 Dashboard, under Account attributes, Data protection and security, for IMDS defaults, set Instance metadata service to Enabled and Metadata version to V2 only (token required). For more information, see Set IMDSv2 as the default for the account.\nAWS CLI: Use the modify-instance-metadata-defaults CLI command and specify --http-tokens required and --http-put-response-hop-limit 2.\nNew instances\nWhen launching a new instance, you can do the following:\nAmazon EC2 console: In the launch instance wizard, set Metadata accessible to Enabled and Metadata version to V2 only (token required). For more information, see Configure the instance at launch.\nAWS CLI: Use the run-instances command and specify that IMDSv2 is required.\nExisting instances\nFor existing instances, you can do the following:\nAmazon EC2 console: On the Instances page, select your instance, choose Actions, Instance settings, Modify instance metadata options, and for IMDSv2, choose Required. For more information, see Require the use of IMDSv2.\nAWS CLI: Use the modify-instance-metadata-options CLI command to specify that only IMDSv2 is to be used.\nYou can modify the instance metadata options on running instances, and you don't need to restart the instances after modifying the instance metadata options.\nStep 4: Check if your instances are transitioned to IMDSv2\nYou can check if any instances are not yet configured to require the use of IMDSv2, in other words, IMDSv2 is still configured as optional. If any instances are still configured as optional, you can modify the instance metadata options to make IMDSv2 required by repeating the preceding Step 3.\nTo filter your instances:\nAmazon EC2 console: On the Instances page, filter your instances by using the IMDSv2 = optional filter. For more information about filtering, see Filter resources using the console. You can also view whether IMDSv2 is required or optional for each instance: In the Preferences window, toggle on IMDSv2 to add the IMDSv2 column to the Instances table.\nAWS CLI: Use the describe-instances command and filter by metadata-options.http-tokens = optional, as follows:\naws ec2 describe-instances --filters \"Name=metadata-options.http-tokens,Values=optional\" --query \"Reservations[*].Instances[*].[InstanceId]\" --output text\nStep 5: When all of your instances are transitioned to IMDSv2\nThe ec2:MetadataHttpTokens, ec2:MetadataHttpPutResponseHopLimit, and ec2:MetadataHttpEndpoint IAM condition keys can be used to control the use of the RunInstances and the ModifyInstanceMetadataOptions APIs and corresponding CLIs. If a policy is created, and a parameter in the API call does not match the state specified in the policy using the condition key, the API or CLI call fails with an UnauthorizedOperation response. For example IAM policies, see Work with instance metadata.\nFurthermore, after you've disabled IMDSv1, you can use the MetadataNoTokenRejected CloudWatch metric to track the number of times an IMDSv1 call was attempted and rejected. If, after disabling IMDSv1, you have software that is not working properly and the MetadataNoTokenRejected metric records IMDSv1 calls, it's likely that this software needs to be updated to use IMDSv2.\nUse a supported AWS SDK\nTo use IMDSv2, your EC2 instances must use an AWS SDK version that supports using IMDSv2. The latest versions of all the AWS SDKs support using IMDSv2.\nImportant\nWe recommend that you to stay up to date with SDK releases to keep up with the latest features, security updates, and underlying dependencies. Continued use of an unsupported SDK version is not recommended and is done at your discretion. For more information, see the AWS SDKs and Tools maintenance policy in the AWS SDKs and Tools Reference Guide.\nThe following are the minimum versions that support using IMDSv2:\nAWS CLI \u2013 1.16.289\nAWS Tools for Windows PowerShell \u2013 4.0.1.0\nAWS SDK for .NET \u2013 3.3.634.1\nAWS SDK for C++ \u2013 1.7.229\nAWS SDK for Go \u2013 1.25.38\nAWS SDK for Go v2 \u2013 0.19.0\nAWS SDK for Java \u2013 1.11.678\nAWS SDK for Java 2.x \u2013 2.10.21\nAWS SDK for JavaScript in Node.js \u2013 2.722.0\nAWS SDK for Kotlin \u2013 1.1.4\nAWS SDK for PHP \u2013 3.147.7\nAWS SDK for Python (Botocore) \u2013 1.13.25\nAWS SDK for Python (Boto3) \u2013 1.12.6\nAWS SDK for Ruby \u2013 3.79.0\nExamples for IMDSv2\nRun the following examples on your Amazon EC2 instance to retrieve the instance metadata for IMDSv2.\nOn Windows instances, you can use Windows PowerShell or you can install cURL or wget. If you install a third-party tool on a Windows instance, ensure that you read the accompanying documentation carefully, as the calls and the output might be different from what is described here.\nExamples\nGet the available versions of the instance metadata\nGet the top-level metadata items\nGet the values for metadata items\nGet the list of available public keys\nShow the formats in which public key 0 is available\nGet public key 0 (in the OpenSSH key format)\nGet the subnet ID for an instance\nGet the instance tags for an instance\nGet the available versions of the instance metadata\nThis example gets the available versions of the instance metadata. Each version refers to an instance metadata build when new instance metadata categories were released. The instance metadata build versions do not correlate with the Amazon EC2 API versions. The earlier versions are available to you in case you have scripts that rely on the structure and information present in a previous version.\ncURL\nPowerShell\n[ec2-user ~]$ TOKEN=`curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"` \\\n&& curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/\n1.0\n2007-01-19\n2007-03-01\n2007-08-29\n2007-10-10\n2007-12-15\n2008-02-01\n2008-09-01\n2009-04-04\n2011-01-01\n2011-05-01\n2012-01-12\n2014-02-25\n2014-11-05\n2015-10-20\n2016-04-19\n...\nlatest\nGet the top-level metadata items\nThis example gets the top-level metadata items. For more information about the items in the response, see Instance metadata categories.\nNote that tags are included in this output only if you've allowed access. For more information, see Allow access to tags in instance metadata.\ncURL\nPowerShell\n[ec2-user ~]$ TOKEN=`curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"` \\\n&& curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/    \nami-id\nami-launch-index\nami-manifest-path\nblock-device-mapping/\nevents/\nhostname\niam/\ninstance-action\ninstance-id\ninstance-life-cycle\ninstance-type\nlocal-hostname\nlocal-ipv4\nmac\nmetrics/\nnetwork/\nplacement/\nprofile\npublic-hostname\npublic-ipv4\npublic-keys/\nreservation-id\nsecurity-groups\nservices/\ntags/\nGet the values for metadata items\nThese examples get the values of some of the top-level metadata items that were obtained in the preceding example. These requests use the stored token that was created using the command in the previous example. The token must not be expired.\ncURL\nPowerShell\n[ec2-user ~]$ curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/ami-id\nami-0abcdef1234567890\n[ec2-user ~]$ curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/reservation-id\nr-0efghijk987654321\n[ec2-user ~]$ curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/local-hostname\nip-10-251-50-12.ec2.internal\n[ec2-user ~]$ curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/public-hostname\nec2-203-0-113-25.compute-1.amazonaws.com\nGet the list of available public keys\nThis example gets the list of available public keys.\ncURL\nPowerShell\n[ec2-user ~]$ TOKEN=`curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"` \\\n&& curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/public-keys/\n0=my-public-key\nShow the formats in which public key 0 is available\nThis example shows the formats in which public key 0 is available.\ncURL\nPowerShell\n[ec2-user ~]$ TOKEN=`curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"` \\\n&& curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/public-keys/0/\nopenssh-key\nGet public key 0 (in the OpenSSH key format)\nThis example gets public key 0 (in the OpenSSH key format).\ncURL\nPowerShell\n[ec2-user ~]$ TOKEN=`curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"` \\\n&& curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/public-keys/0/openssh-key\nssh-rsa MIICiTCCAfICCQD6m7oRw0uXOjANBgkqhkiG9w0BAQUFADCBiDELMAkGA1UEBhMC\nVVMxCzAJBgNVBAgTAldBMRAwDgYDVQQHEwdTZWF0dGxlMQ8wDQYDVQQKEwZBbWF6\nb24xFDASBgNVBAsTC0lBTSBDb25zb2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWMxHzAd\nBgkqhkiG9w0BCQEWEG5vb25lQGFtYXpvbi5jb20wHhcNMTEwNDI1MjA0NTIxWhcN\nMTIwNDI0MjA0NTIxWjCBiDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAldBMRAwDgYD\nVQQHEwdTZWF0dGxlMQ8wDQYDVQQKEwZBbWF6b24xFDASBgNVBAsTC0lBTSBDb25z\nb2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWMxHzAdBgkqhkiG9w0BCQEWEG5vb25lQGFt\nYXpvbi5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMaK0dn+a4GmWIWJ\n21uUSfwfEvySWtC2XADZ4nB+BLYgVIk60CpiwsZ3G93vUEIO3IyNoH/f0wYK8m9T\nrDHudUZg3qX4waLG5M43q7Wgc/MbQITxOUSQv7c7ugFFDzQGBzZswY6786m86gpE\nIbb3OhjZnzcvQAaRHhdlQWIMm2nrAgMBAAEwDQYJKoZIhvcNAQEFBQADgYEAtCu4\nnUhVVxYUntneD9+h8Mg9q6q+auNKyExzyLwaxlAoo7TJHidbtS4J5iNmZgXL0Fkb\nFFBjvSfpJIlJ00zbhNYS5f6GuoEDmFJl0ZxBHjJnyp378OD8uTs7fLvjx79LjSTb\nNYiytVbZPQUQ5Yaxu2jXnimvw3rrszlaEXAMPLE my-public-key\nGet the subnet ID for an instance\nThis example gets the subnet ID for an instance.\ncURL\nPowerShell\n[ec2-user ~]$ TOKEN=`curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"` \\\n&& curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/network/interfaces/macs/02:29:96:8f:6a:2d/subnet-id\nsubnet-be9b61d7\nGet the instance tags for an instance\nIf access to instance tags in the instance metadata is turned on, you can get the tags for a instance from instance metadata. For more information, see Retrieve tags from instance metadata.\nExamples for IMDSv1\nRun the following examples on your Amazon EC2 instance to retrieve the instance metadata for IMDSv1.\nOn Windows instances, you can use Windows PowerShell or you can install cURL or wget. If you install a third-party tool on a Windows instance, ensure that you read the accompanying documentation carefully, as the calls and the output might be different from what is described here.\nExamples\nGet the available versions of the instance metadata\nGet the top-level metadata items\nGet the values for metadata items\nGet the list of available public keys\nShow the formats in which public key 0 is available\nGet public key 0 (in the OpenSSH key format)\nGet the subnet ID for an instance\nGet the instance tags for an instance\nGet the available versions of the instance metadata\nThis example gets the available versions of the instance metadata. Each version refers to an instance metadata build when new instance metadata categories were released. The instance metadata build versions do not correlate with the Amazon EC2 API versions. The earlier versions are available to you in case you have scripts that rely on the structure and information present in a previous version.\ncURL\nPowerShell\n[ec2-user ~]$ curl http://169.254.169.254/\n1.0\n2007-01-19\n2007-03-01\n2007-08-29\n2007-10-10\n2007-12-15\n2008-02-01\n2008-09-01\n2009-04-04\n2011-01-01\n2011-05-01\n2012-01-12\n2014-02-25\n2014-11-05\n2015-10-20\n2016-04-19\n...\nlatest\nGet the top-level metadata items\nThis example gets the top-level metadata items. For more information about the items in the response, see Instance metadata categories.\nNote that tags are included in this output only if you've allowed access. For more information, see Allow access to tags in instance metadata.\ncURL\nPowerShell\n[ec2-user ~]$ curl http://169.254.169.254/latest/meta-data/    \nami-id\nami-launch-index\nami-manifest-path\nblock-device-mapping/\nevents/\nhostname\niam/\ninstance-action\ninstance-id\ninstance-type\nlocal-hostname\nlocal-ipv4\nmac\nmetrics/\nnetwork/\nplacement/\nprofile\npublic-hostname\npublic-ipv4\npublic-keys/\nreservation-id\nsecurity-groups\nservices/\ntags/\nGet the values for metadata items\nThese examples get the values of some of the top-level metadata items that were obtained in the previous example.\ncURL\nPowerShell\n[ec2-user ~]$ curl http://169.254.169.254/latest/meta-data/ami-id\nami-0abcdef1234567890\n[ec2-user ~]$ curl http://169.254.169.254/latest/meta-data/reservation-id\nr-0efghijk987654321\n[ec2-user ~]$ curl http://169.254.169.254/latest/meta-data/local-hostname\nip-10-251-50-12.ec2.internal\n[ec2-user ~]$ curl http://169.254.169.254/latest/meta-data/public-hostname\nec2-203-0-113-25.compute-1.amazonaws.com\nGet the list of available public keys\nThis example gets the list of available public keys.\ncURL\nPowerShell\n[ec2-user ~]$ curl http://169.254.169.254/latest/meta-data/public-keys/\n0=my-public-key\nShow the formats in which public key 0 is available\nThis example shows the formats in which public key 0 is available.\ncURL\nPowerShell\n[ec2-user ~]$ curl http://169.254.169.254/latest/meta-data/public-keys/0/\nopenssh-key\nGet public key 0 (in the OpenSSH key format)\nThis example gets public key 0 (in the OpenSSH key format).\ncURL\nPowerShell\n[ec2-user ~]$ curl http://169.254.169.254/latest/meta-data/public-keys/0/openssh-key\nssh-rsa MIICiTCCAfICCQD6m7oRw0uXOjANBgkqhkiG9w0BAQUFADCBiDELMAkGA1UEBhMC\nVVMxCzAJBgNVBAgTAldBMRAwDgYDVQQHEwdTZWF0dGxlMQ8wDQYDVQQKEwZBbWF6\nb24xFDASBgNVBAsTC0lBTSBDb25zb2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWMxHzAd\nBgkqhkiG9w0BCQEWEG5vb25lQGFtYXpvbi5jb20wHhcNMTEwNDI1MjA0NTIxWhcN\nMTIwNDI0MjA0NTIxWjCBiDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAldBMRAwDgYD\nVQQHEwdTZWF0dGxlMQ8wDQYDVQQKEwZBbWF6b24xFDASBgNVBAsTC0lBTSBDb25z\nb2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWMxHzAdBgkqhkiG9w0BCQEWEG5vb25lQGFt\nYXpvbi5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMaK0dn+a4GmWIWJ\n21uUSfwfEvySWtC2XADZ4nB+BLYgVIk60CpiwsZ3G93vUEIO3IyNoH/f0wYK8m9T\nrDHudUZg3qX4waLG5M43q7Wgc/MbQITxOUSQv7c7ugFFDzQGBzZswY6786m86gpE\nIbb3OhjZnzcvQAaRHhdlQWIMm2nrAgMBAAEwDQYJKoZIhvcNAQEFBQADgYEAtCu4\nnUhVVxYUntneD9+h8Mg9q6q+auNKyExzyLwaxlAoo7TJHidbtS4J5iNmZgXL0Fkb\nFFBjvSfpJIlJ00zbhNYS5f6GuoEDmFJl0ZxBHjJnyp378OD8uTs7fLvjx79LjSTb\nNYiytVbZPQUQ5Yaxu2jXnimvw3rrszlaEXAMPLE my-public-key\nGet the subnet ID for an instance\nThis example gets the subnet ID for an instance.\ncURL\nPowerShell\n[ec2-user ~]$ curl http://169.254.169.254/latest/meta-data/network/interfaces/macs/02:29:96:8f:6a:2d/subnet-id\nsubnet-be9b61d7\nGet the instance tags for an instance\nIf access to instance tags in the instance metadata is turned on, you can get the tags for a instance from instance metadata. For more information, see Retrieve tags from instance metadata."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-metadata-limiting-access.html",
        "content": "You can consider using local firewall rules to disable access from some or all processes to the Instance Metadata Service (IMDS).\nFor Nitro-based instances, the IMDS can be reached from your own network when a network appliance within your VPC, such as a virtual router, forwards packets to the IMDS address, and the default source/destination check on the instance is disabled. To prevent a source from outside your VPC reaching the IMDS, we recommend that you modify the configuration of the network appliance to drop packets with the destination IPv4 address of the IMDS 169.254.169.254 and, if you enabled the IPv6 endpoint, the IPv6 address of the IMDS [fd00:ec2::254].\nLimit IMDS access for Linux instances\nUsing iptables to limit access\nThe following example uses Linux iptables and its owner module to prevent the Apache webserver (based on its default installation user ID of apache) from accessing 169.254.169.254. It uses a deny rule to reject all instance metadata requests (whether IMDSv1 or IMDSv2) from any process running as that user.\n$ sudo iptables --append OUTPUT --proto tcp --destination 169.254.169.254 --match owner --uid-owner apache --jump REJECT\nOr, you can consider only allowing access to particular users or groups, by using allow rules. Allow rules might be easier to manage from a security perspective, because they require you to make a decision about what software needs access to instance metadata. If you use allow rules, it's less likely you will accidentally allow software to access the metadata service (that you did not intend to have access) if you later change the software or configuration on an instance. You can also combine group usage with allow rules, so that you can add and remove users from a permitted group without needing to change the firewall rule.\nThe following example prevents access to the IMDS by all processes, except for processes running in the user account trustworthy-user.\n$ sudo iptables --append OUTPUT --proto tcp --destination 169.254.169.254 --match owner ! --uid-owner trustworthy-user --jump REJECT\nNote\nTo use local firewall rules, you need to adapt the preceding example commands to suit your needs.\nBy default, iptables rules are not persistent across system reboots. They can be made to be persistent by using OS features, not described here.\nThe iptables owner module only matches group membership if the group is the primary group of a given local user. Other groups are not matched.\nUsing PF or IPFW to limit access\nIf you are using FreeBSD or OpenBSD, you can also consider using PF or IPFW. The following examples limit access to the IMDS to just the root user.\nPF\n$ block out inet proto tcp from any to 169.254.169.254\n$ pass out inet proto tcp from any to 169.254.169.254 user root\nIPFW\n$ allow tcp from any to 169.254.169.254 uid root\n$ deny tcp from any to 169.254.169.254\nNote\nThe order of the PF and IPFW commands matter. PF defaults to last matching rule and IPFW defaults to first matching rule.\nLimit IMDS access for Windows instances\nUsing Windows firewall to limit access\nThe following PowerShell example uses the built-in Windows firewall to prevent the Internet Information Server webserver (based on its default installation user ID of NT AUTHORITY\\IUSR) from accessing 169.254.169.254. It uses a deny rule to reject all instance metadata requests (whether IMDSv1 or IMDSv2) from any process running as that user.\nPS C:\\> $blockPrincipal = New-Object -TypeName System.Security.Principal.NTAccount (\"NT AUTHORITY\\IUSR\")\nPS C:\\> $BlockPrincipalSID = $blockPrincipal.Translate([System.Security.Principal.SecurityIdentifier]).Value\nPS C:\\> $BlockPrincipalSDDL = \"D:(A;;CC;;;$BlockPrincipalSID)\"\nPS C:\\> New-NetFirewallRule -DisplayName \"Block metadata service from IIS\" -Action block -Direction out `\n-Protocol TCP -RemoteAddress 169.254.169.254 -LocalUser $BlockPrincipalSDDL\nOr, you can consider only allowing access to particular users or groups, by using allow rules. Allow rules might be easier to manage from a security perspective, because they require you to make a decision about what software needs access to instance metadata. If you use allow rules, it's less likely you will accidentally allow software to access the metadata service (that you did not intend to have access) if you later change the software or configuration on an instance. You can also combine group usage with allow rules, so that you can add and remove users from a permitted group without needing to change the firewall rule.\nThe following example prevents access to instance metadata by all processes running as an OS group specified in the variable blockPrincipal (in this example, the Windows group Everyone), except for processes specified in exceptionPrincipal (in this example, a group called trustworthy-users). You must specify both deny and allow principals because Windows Firewall, unlike the ! --uid-owner trustworthy-user rule in Linux iptables, does not provide a shortcut mechanism to allow only a particular principal (user or group) by denying all the others.\nPS C:\\> $blockPrincipal = New-Object -TypeName System.Security.Principal.NTAccount (\"Everyone\")\nPS C:\\> $BlockPrincipalSID = $blockPrincipal.Translate([System.Security.Principal.SecurityIdentifier]).Value\nPS C:\\> $exceptionPrincipal = New-Object -TypeName System.Security.Principal.NTAccount (\"trustworthy-users\")\nPS C:\\> $ExceptionPrincipalSID = $exceptionPrincipal.Translate([System.Security.Principal.SecurityIdentifier]).Value\nPS C:\\> $PrincipalSDDL = \"O:LSD:(D;;CC;;;$ExceptionPrincipalSID)(A;;CC;;;$BlockPrincipalSID)\"\nPS C:\\> New-NetFirewallRule -DisplayName \"Block metadata service for $($blockPrincipal.Value), exception: $($exceptionPrincipal.Value)\" -Action block -Direction out `\n-Protocol TCP -RemoteAddress 169.254.169.254 -LocalUser $PrincipalSDDL\nNote\nTo use local firewall rules, you need to adapt the preceding example commands to suit your needs.\nUsing netsh rules to limit access\nYou can consider blocking all software using netsh rules, but those are much less flexible.\nC:\\> netsh advfirewall firewall add rule name=\"Block metadata service altogether\" dir=out protocol=TCP remoteip=169.254.169.254 action=block\nNote\nTo use local firewall rules, you need to adapt the preceding example commands to suit your needs.\nnetsh rules must be set from an elevated command prompt, and can\u2019t be set to deny or allow particular principals."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-options.html",
        "content": "The Instance Metadata Service (IMDS) runs locally on every EC2 instance. The instance metadata options refer to a set of configurations that control the accessibility and behavior of the IMDS on an EC2 instance.\nYou can configure the following instance metadata options on each instance:\nInstance metadata service (IMDS): enabled | disabled\nYou can enable or disable the IMDS on an instance. When disabled, you or any code won't be able to access the instance metadata on the instance.\nThe IMDS has two endpoints on an instance: IPv4 (169.254.169.254) and IPv6 ([fd00:ec2::254]). When you enable the IMDS, the IPv4 endpoint is automatically enabled. If you want to enable the IPv6 endpoint, you need to do so explicitly.\nIMDS IPv6 endpoint: enabled | disabled\nYou can explicitly enable the IPv6 IMDS endpoint on an instance. When the IPv6 endpoint is enabled, the IPv4 endpoint remains enabled. The IPv6 endpoint is only supported on Nitro-based instances in IPv6-supported subnets (dual stack or IPv6 only).\nMetadata version: IMDSv1 or IMDSv2 (token optional) | IMDSv2 only (token required)\nWhen requesting instance metadata, IMDSv2 calls require a token. IMDSv1 calls do not require a token. You can configure an instance to allow either IMDSv1 or IMDSv2 calls (where a token is optional), or to only allow IMDSv2 calls (where a token is required).\nMetadata response hop limit: 1\u201364\nThe hop limit is the number of network hops that the PUT response is allowed to make. You can set the hop limit to a minimum of 1 and a maximum of 64. In a container environment, we recommend setting the hop limit to 2. For more information, see Instance metadata access considerations.\nAccess to tags in instance metadata: enabled | disabled\nYou can enable or disable access to the instance's tags from an instance's metadata. For more information, see View tags for your EC2 instances using instance metadata.\nWhere to configure instance metadata options\nInstance metadata options can be configured at different levels, as follows:\nAccount \u2013 You can set default values for the instance metadata options at the account level for each AWS Region. When an instance is launched, the instance metadata options are automatically set to the account-level values. You can change these values at launch. Account-level default values do not affect existing instances.\nAMI \u2013 You can set the imds-support parameter to v2.0 when you register or modify an AMI. When an instance is launched with this AMI, the instance metadata version is automatically set to IMDSv2 and the hop limit is set to 2.\nInstance \u2013 You can change all the instance metadata options on an instance at launch, overriding the default settings. You can also change the instance metadata options after launch on a running or stopped instance. Note that changes may be restricted by an IAM or SCP policy.\nFor more information, see Configure instance metadata options for new instances and Modify instance metadata options for existing instances.\nOrder of precedence for instance metadata options\nThe value for each instance metadata option is determined at instance launch, following a hierarchical order of precedence. The hierarchy, with the highest precedence at the top, is as follows:\nPrecedence 1: Instance configuration at launch \u2013 Values can be specified either in the launch template or in the instance configuration. Any values specified here override values specified at the account level or in the AMI.\nPrecedence 2: Account settings \u2013 If a value is not specified at instance launch, then it is determined by the account-level settings (which are set for each AWS Region). Account-level settings either include a value for each metadata option, or indicate no preference at all.\nPrecedence 3: AMI configuration \u2013 If a value is not specified at instance launch or at the account level, then it is determined by the AMI configuration. This applies only to HttpTokens and HttpPutResponseHopLimit.\nEach metadata option is evaluated separately. The instance can be configured with a mix of direct instance configuration, account-level defaults, and the configuration from the AMI.\nYou can change the value of any metadata option after launch on a running or stopped instance, unless changes are restricted by an IAM or SCP policy.\nDetermine values for metadata options \u2013 Example 1\nIn this example, an EC2 instance is launched into a Region where the HttpPutResponseHopLimit is set to 1 at the account level. The specified AMI has ImdsSupport set to v2.0. No metadata options are specified directly on the instance at launch. The instance is launched with the following metadata options:\n\"MetadataOptions\": {\n    ...\n    \"HttpTokens\": \"required\",\n    \"HttpPutResponseHopLimit\": 1,\n    ...\nThese values were determined as follows:\nNo metadata options specified at launch: During the launch of the instance, specific values for the metadata options were not provided either in the instance launch parameters or in the launch template.\nAccount settings take next precedence: In the absence of specific values specified at launch, the settings at the account level within the Region take precedence. This means that the default values configured at the account level are applied. In this case, the HttpPutResponseHopLimit was set to 1.\nAMI settings take last precedence: In the absence of a specific value specified at launch or at the account level for HttpTokens (the instance metadata version), the AMI setting is applied. In this case, the AMI setting ImdsSupport: v2.0 determined that HttpTokens was set to required. Note that while the AMI setting ImdsSupport: v2.0 is designed to set HttpPutResponseHopLimit: 2, it was overridden by the account-level setting HttpPutResponseHopLimit: 1, which has higher precedence.\nDetermine values for metadata options \u2013 Example 2\nIn this example, the EC2 instance is launched with the same settings as in the previous Example 1, but with HttpTokens set to optional directly on the instance at launch. The instance is launched with the following metadata options:\n\"MetadataOptions\": {\n    ...\n    \"HttpTokens\": \"optional\",\n    \"HttpPutResponseHopLimit\": 1,\n    ...\nThe value for HttpPutResponseHopLimit is determined in the same way as in Example 1. However, the value for HttpTokens is determined as follows: Metadata options configured on the instance at launch take first precedence. Even though the AMI was configured with ImdsSupport: v2.0 (in other words, HttpTokens is set to required), the value specified on the instance at launch (HttpTokens set to optional) took precedence.\nSet the instance metadata version\nWhen an instance is launched, the value for the instance metadata version is either IMDSv1 or IMDSv2 (token optional) or IMDSv2 only (token required).\nAt instance launch, you can either manually specify the value for the metadata version, or use the default value. If you manually specify the value, it overrides any defaults. If you opt not to manually specify the value, it will be determined by a combination of default settings, as outlined in the following table.\nThe table shows how the metadata version for an instance at launch (indicated by Resulting instance configuration in column 4) is determined by the settings at the different levels of configuration. The order of precedence is from left to right, where the first column takes the highest precedence, as follows:\nColumn 1: Launch parameter \u2013 Represents the setting on the instance that you manually specify at launch.\nColumn 2: Account level default \u2013 Represents the setting for the account.\nColumn 3: AMI default \u2013 Represents the setting on the AMI.\nLaunch parameter Account level default AMI default Resulting instance configuration\nV2 only (token required) No preference V2 only V2 only\nV2 only (token required) V2 only V2 only V2 only\nV2 only (token required) V1 or V2 V2 only V2 only\nV1 or V2 (token optional) No preference V2 only V1 or V2\nV1 or V2 (token optional) V2 only V2 only V1 or V2\nV1 or V2 (token optional) V1 or V2 V2 only V1 or V2\nNot set No preference V2 only V2 only\nNot set V2 only V2 only V2 only\nNot set V1 or V2 V2 only V1 or V2\nV2 only (token required) No preference null V2 only\nV2 only (token required) V2 only null V2 only\nV2 only (token required) V1 or V2 null V2 only\nV1 or V2 (token optional) No preference null V1 or V2\nV1 or V2 (token optional) V2 only null V1 or V2\nV1 or V2 (token optional) V1 or V2 null V1 or V2\nNot set No preference null V1 or V2\nNot set V2 only null V2 only\nNot set V1 or V2 null V1 or V2\nUse IAM condition keys to restrict instance metadata options\nYou can use IAM condition keys in an IAM policy or SCP as follows:\nAllow an instance to launch only if it's configured to require the use of IMDSv2\nRestrict the number of allowed hops\nTurn off access to instance metadata\nTasks\nConfigure instance metadata options for new instances\nModify instance metadata options for existing instances\nNote\nYou should proceed cautiously and conduct careful testing before making any changes. Take note of the following:\nIf you enforce the use of IMDSv2, applications or agents that use IMDSv1 for instance metadata access will break.\nIf you turn off all access to instance metadata, applications or agents that rely on instance metadata access to function will break.\nFor IMDSv2, you must use /latest/api/token when retrieving the token.\n(Windows only) If your PowerShell version is earlier than 4.0, you must update to Windows Management Framework 4.0 to require the use of IMDSv2."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html",
        "content": "You can configure the following instance metadata options for new instances.\nOptions\nRequire the use of IMDSv2\nEnable the IMDS IPv4 and IPv6 endpoints\nTurn off access to instance metadata\nAllow access to tags in instance metadata\nNote\nThe settings for these options are configured at the account level, either directly in the account or by using a declarative policy. They must be configured in each AWS Region where you want to configure instance metadata options. Using a declarative policy allows you to apply the settings across multiple Regions simultaneously, as well as across multiple accounts simultaneously. When a declarative policy is in use, you can't modify the settings directly within an account. This topic describes how to configure the settings directly within an account. For information about using declarative policies, see Declarative policies in the AWS Organizations User Guide.\nRequire the use of IMDSv2\nYou can use the following methods to require the use of IMDSv2 on your new instances.\nTo require IMDSv2\nSet IMDSv2 as the default for the account\nConfigure the instance at launch\nConfigure the AMI\nUse an IAM policy\nSet IMDSv2 as the default for the account\nYou can set the default version for the instance metadata service (IMDS) at the account level for each AWS Region. This means that when you launch a new instance, the instance metadata version is automatically set to the account-level default. However, you can manually override the value at launch or after launch. For more information about how the account-level settings and manual overrides affect an instance, see Order of precedence for instance metadata options.\nNote\nSetting the account-level default does not reset existing instances. For example, if you set the account-level default to IMDSv2, any existing instances that are set to IMDSv1 are not affected. If you want to change the value on existing instances, you must manually change the value on the instances themselves.\nYou can set the account default for the instance metadata version to IMDSv2 so that all new instances in the account launch with IMDSv2 required, and IMDSv1 will be disabled. With this account default, when you launch an instance, the following are the default values for the instance:\nConsole: Metadata version is set to V2 only (token required) and Metadata response hop limit is set to 2.\nAWS CLI: HttpTokens is set to required and HttpPutResponseHopLimit is set to 2.\nNote\nBefore setting the account default to IMDSv2, ensure that your instances do not depend on IMDSv1. For more information, see Recommended path to requiring IMDSv2.\nConsole\nAWS CLI\nPowerShell\nTo set IMDSv2 as the default for the account for the specified Region\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nTo change the AWS Region, use the Region selector in the upper-right corner of the page.\nIn the navigation pane, choose EC2 Dashboard.\nUnder Account attributes, choose Data protection and security.\nNext to IMDS defaults, choose Manage.\nOn the Manage IMDS defaults page, do the following:\nFor Instance metadata service, choose Enabled.\nFor Metadata version, choose V2 only (token required).\nFor Metadata response hop limit, specify 2 if your instances will host containers. Otherwise, select No preference. When no preference is specified, at launch, the value defaults to 2 if the AMI requires IMDSv2; otherwise it defaults to 1.\nChoose Update.\nConfigure the instance at launch\nWhen you launch an instance, you can configure the instance to require the use of IMDSv2 by configuring the following fields:\nAmazon EC2 console: Set Metadata version to V2 only (token required).\nAWS CLI: Set HttpTokens to required.\nWhen you specify that IMDSv2 is required, you must also enable the Instance Metadata Service (IMDS) endpoint by setting Metadata accessible to Enabled (console) or HttpEndpoint to enabled (AWS CLI).\nIn a container environment, when IMDSv2 is required, we recommend setting the hop limit to 2. For more information, see Instance metadata access considerations.\nConsole\nAWS CLI\nPowerShell\nAWS CloudFormation\nTo require the use of IMDSv2 on a new instance\nWhen launching a new instance in the Amazon EC2 console, expand Advanced details, and do the following:\nFor Metadata accessible, choose Enabled.\nFor Metadata version, choose V2 only (token required).\n(Container environment) For Metadata response hop limit, choose 2.\nFor more information, see Advanced details.\nConfigure the AMI\nWhen you register a new AMI or modify an existing AMI, you can set the imds-support parameter to v2.0. Instances launched from this AMI will have Metadata version set to V2 only (token required) (console) or HttpTokens set to required (AWS CLI) . With these settings, the instance requires that IMDSv2 is used when requesting instance metadata.\nNote that when you set imds-support to v2.0, instances launched from this AMI will also have Metadata response hop limit (console) or http-put-response-hop-limit (AWS CLI) set to 2.\nImportant\nDo not use this parameter unless your AMI software supports IMDSv2. After you set the value to v2.0, you can't undo it. The only way to \"reset\" your AMI is to create a new AMI from the underlying snapshot.\nTo configure a new AMI for IMDSv2\nUse one of the following methods to configure a new AMI for IMDSv2.\nAWS CLI\nPowerShell\nThe following register-image example registers an AMI using the specified snapshot of an EBS root volume as device /dev/xvda. Specify v2.0 for the imds-support parameter so that instances launched from this AMI will require that IMDSv2 is used when requesting instance metadata.\naws ec2 register-image \\\n    --name my-image \\\n    --root-device-name /dev/xvda \\\n    --block-device-mappings DeviceName=/dev/xvda,Ebs={SnapshotId=snap-0123456789example} \\\n    --architecture x86_64 \\\n    --imds-support v2.0\nTo configure an existing AMI for IMDSv2\nUse one of the following methods to configure an existing AMI for IMDSv2.\nAWS CLI\nPowerShell\nThe following modify-image-attribute example modifies an existing AMI for IMDSv2 only. Specify v2.0 for the imds-support parameter so that instances launched from this AMI will require that IMDSv2 is used when requesting instance metadata.\naws ec2 modify-image-attribute \\\n    --image-id ami-0123456789example \\\n    --imds-support v2.0\nUse an IAM policy\nYou can create an IAM policy that prevents users from launching new instances unless they require IMDSv2 on the new instance.\nTo enforce the use of IMDSv2 on all new instances by using an IAM policy\nTo ensure that users can only launch instances that require the use of IMDSv2 when requesting instance metadata, you can specify that the condition to require IMDSv2 must be met before an instance can be launched. For the example IAM policy, see Work with instance metadata.\nEnable the IMDS IPv4 and IPv6 endpoints\nThe IMDS has two endpoints on an instance: IPv4 (169.254.169.254) and IPv6 ([fd00:ec2::254]). When you enable the IMDS, the IPv4 endpoint is automatically enabled. The IPv6 endpoint remains disabled even if you launch an instance into an IPv6-only subnet. To enable the IPv6 endpoint, you need to do so explicitly. When you enable the IPv6 endpoint, the IPv4 endpoint remains enabled.\nYou can enable the IPv6 endpoint at instance launch or after.\nRequirements for enabling the IPv6 endpoint\nThe selected instance type is a Nitro-based instance.\nThe selected subnet supports IPv6, where the subnet is either dual stack or IPv6 only.\nUse any of the following methods to launch an instance with the IMDS IPv6 endpoint enabled.\nConsole\nAWS CLI\nPowerShell\nTo enable the IMDS IPv6 endpoint at instance launch\nLaunch the instance in the Amazon EC2 console with the following specified under Advanced details:\nFor Metadata IPv6 endpoint, choose Enabled.\nFor more information, see Advanced details.\nTurn off access to instance metadata\nYou can turn off access to the instance metadata by disabling the IMDS when you launch an instance. You can turn on access later by re-enabling the IMDS. For more information, see Turn on access to instance metadata.\nImportant\nYou can choose to disable the IMDS at launch or after launch. If you disable the IMDS at launch, the following might not work:\nYou might not have SSH access to your instance. The public-keys/0/openssh-key, which is your instance's public SSH key, will not be accessible because the key is normally provided and accessed from EC2 instance metadata.\nEC2 user data will not be available and will not run at instance start. EC2 user data is hosted on the IMDS. If you disable the IMDS, you effectively turn off access to user data.\nTo access this functionality, you can re-enable the IMDS after launch.\nConsole\nAWS CLI\nPowerShell\nAWS CloudFormation\nTo turn off access to instance metadata at launch\nLaunch the instance in the Amazon EC2 console with the following specified under Advanced details:\nFor Metadata accessible, choose Disabled.\nFor more information, see Advanced details.\nAllow access to tags in instance metadata\nBy default, instance tags are not accessible in the instance metadata. For each instance, you must explicitly allow access. If access is allowed, instance tag keys must comply with specific character restrictions, otherwise the instance launch will fail. For more information, see Allow access to tags in instance metadata."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-existing-instances.html",
        "content": "You can modify the instance metadata options for existing instances.\nYou can also create an IAM policy that prevents users from modifying the instance metadata options on existing instances. To control which users can modify the instance metadata options, specify a policy that prevents all users other than users with a specified role to use the ModifyInstanceMetadataOptions API. For the example IAM policy, see Work with instance metadata.\nNote\nIf a declarative policy was used to configure the instance metadata options, you can't modify them directly within the account. For more information, see Declarative policies in the AWS Organizations User Guide.\nRequire the use of IMDSv2\nUse one of the following methods to modify the instance metadata options on an existing instance to require that IMDSv2 is used when requesting instance metadata. When IMDSv2 is required, IMDSv1 cannot be used.\nNote\nBefore requiring that IMDSv2 is used, ensure that the instance isn't making IMDSv1 calls. The MetadataNoToken CloudWatch metric tracks IMDSv1 calls. When MetadataNoToken records zero IMDSv1 usage for an instance, the instance is then ready to require IMDSv2.\nConsole\nAWS CLI\nPowerShell\nTo require the use of IMDSv2 on an existing instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect your instance.\nChoose Actions, Instance settings, Modify instance metadata options.\nIn the Modify instance metadata options dialog box, do the following:\nFor Instance metadata service, select Enable.\nFor IMDSv2, choose Required.\nChoose Save.\nRestore the use of IMDSv1\nWhen IMDSv2 is required, IMDSv1 will not work when requesting instance metadata. When IMDSv2 is optional, then both IMDSv2 and IMDSv1 will work. Therefore, to restore IMDSv1, make IMDSv2 optional by using one of the following methods.\nConsole\nAWS CLI\nPowerShell\nTo restore the use of IMDSv1 on an instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect your instance.\nChoose Actions, Instance settings, Modify instance metadata options.\nIn the Modify instance metadata options dialog box, do the following:\nFor Instance metadata service, make sure that Enable is selected.\nFor IMDSv2, choose Optional.\nChoose Save.\nChange the PUT response hop limit\nFor existing instances, you can change the settings of the PUT response hop limit.\nCurrently only the AWS CLI and AWS SDKs support changing the PUT response hop limit.\nAWS CLI\nPowerShell\nTo change the PUT response hop limit\nUse the modify-instance-metadata-options CLI command and set the http-put-response-hop-limit parameter to the required number of hops. In the following example, the hop limit is set to 3. Note that when specifying a value for http-put-response-hop-limit, you must also set http-endpoint to enabled.\naws ec2 modify-instance-metadata-options \\\n    --instance-id i-1234567898abcdef0 \\\n    --http-put-response-hop-limit 3 \\\n    --http-endpoint enabled\nEnable the IMDS IPv4 and IPv6 endpoints\nThe IMDS has two endpoints on an instance: IPv4 (169.254.169.254) and IPv6 ([fd00:ec2::254]). When you enable the IMDS, the IPv4 endpoint is automatically enabled. The IPv6 endpoint remains disabled even if you launch an instance into an IPv6-only subnet. To enable the IPv6 endpoint, you need to do so explicitly. When you enable the IPv6 endpoint, the IPv4 endpoint remains enabled.\nYou can enable the IPv6 endpoint at instance launch or after.\nRequirements for enabling the IPv6 endpoint\nThe selected instance type is a Nitro-based instance.\nThe selected subnet supports IPv6, where the subnet is either dual stack or IPv6 only.\nCurrently only the AWS CLI and AWS SDKs support enabling the IMDS IPv6 endpoint after instance launch.\nAWS CLI\nPowerShell\nTo enable the IMDS IPv6 endpoint for your instance\nUse the modify-instance-metadata-options CLI command and set the http-protocol-ipv6 parameter to enabled. Note that when specifying a value for http-protocol-ipv6, you must also set http-endpoint to enabled.\naws ec2 modify-instance-metadata-options \\\n --instance-id i-1234567898abcdef0 \\\n --http-protocol-ipv6 enabled \\\n --http-endpoint enabled\nTurn on access to instance metadata\nYou can turn on access to instance metadata by enabling the HTTP endpoint of the IMDS on your instance, regardless of which version of the IMDS you are using. You can reverse this change at any time by disabling the HTTP endpoint.\nUse one of the following methods to turn on access to instance metadata on an instance.\nConsole\nAWS CLI\nPowerShell\nTo turn on access to instance metadata\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect your instance.\nChoose Actions, Instance settings, Modify instance metadata options.\nIn the Modify instance metadata options dialog box, do the following:\nFor Instance metadata service, select Enable.\nChoose Save.\nTurn off access to instance metadata\nYou can turn off access to instance metadata by disabling the HTTP endpoint of the IMDS on your instance, regardless of which version of the IMDS you are using. You can reverse this change at any time by enabling the HTTP endpoint.\nUse one of the following methods to turn off access to instance metadata on an instance.\nConsole\nAWS CLI\nPowerShell\nTo turn off access to instance metadata\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect your instance.\nChoose Actions, Instance settings, Modify instance metadata options.\nIn the Modify instance metadata options dialog box, do the following:\nFor Instance metadata service, clear Enable.\nChoose Save.\nAllow access to tags in instance metadata\nYou can allow access to tags in the instance metadata on a running or stopped instance. For each instance, you must explicitly allow access. If access is allowed, instance tag keys must comply with specific character restrictions, otherwise you get an error. For more information, see Allow access to tags in instance metadata."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html",
        "content": "When you launch an Amazon EC2 instance, you can pass user data to the instance that is used to perform automated configuration tasks, or to run scripts after the instance starts.\nIf you're interested in more complex automation scenarios, you might consider AWS CloudFormation. For more information, see Deploying applications on Amazon EC2 with AWS CloudFormation in the AWS CloudFormation User Guide.\nOn Linux instances, you can pass two types of user data to Amazon EC2: shell scripts and cloud-init directives. You can also pass this data into the launch instance wizard as plain text, as a file (this is useful for launching instances with the command line tools), or as base64-encoded text (for API calls).\nOn Windows instances, the launch agents handle your user data scripts. The following sections cover the differences in how user data is handled on each operating system.\nUser data in the AWS Management Console\nYou can specify instance user data when you launch the instance. If the root volume of the instance is an EBS volume, you can also stop the instance and update its user data.\nSpecify instance user data at launch with the Launch Wizard\nYou can specify user data when you launch an instance with the Launch Wizard in the EC2 console. To specify user data on launch, follow the procedure for launching an instance. The User data field is located in the Advanced details section of the launch instance wizard. Enter your PowerShell script in the User data field, and then complete the instance launch procedure.\nIn the following screenshot of the User data field, the example script creates a file in the Windows temporary folder, using the current date and time in the file name. When you include <persist>true</persist>, the script is run every time you reboot or start the instance. If you leave the User data has already been base64 encoded checkbox empty, the Amazon EC2 console performs the base64 encoding for you.\nFor more information, see Specify instance user data at launch with the Launch Wizard. For a Linux example that uses the AWS CLI, see User data and the AWS CLI. For a Windows example that uses the Tools for Windows PowerShell, see User data and the Tools for Windows PowerShell.\nView and update the instance user data\nYou can view the instance user data for any instance, and you can update the instance user data for a stopped instance.\nTo update the user data for an instance using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance and choose Actions, Instance state, Stop instance.\nWarning\nWhen you stop an instance, the data on any instance store volumes is erased. To keep data from instance store volumes, be sure to back it up to persistent storage.\nWhen prompted for confirmation, choose Stop. It can take a few minutes for the instance to stop.\nWith the instance still selected, choose Actions, Instance settings, Edit user data. You can't change the user data if the instance is running, but you can view it.\nIn the Edit user data dialog box, update the user data, and then choose Save. To run user data scripts every time you reboot or start the instance, add <persist>true</persist>, as shown in the following example:\nStart the instance. If you enabled user data execution for subsequent reboots or starts, the updated user data scripts are run as part of the instance start process.\nHow Amazon EC2 handles user data for Linux instances\nIn the following examples, the commands from the Install a LAMP server on Amazon Linux 2 are converted to a shell script and a set of cloud-init directives that run when the instance launches. In each example, the following tasks are performed by the user data:\nThe distribution software packages are updated.\nThe necessary web server, php, and mariadb packages are installed.\nThe httpd service is started and turned on via systemctl.\nThe ec2-user is added to the apache group.\nThe appropriate ownership and file permissions are set for the web directory and the files contained within it.\nA simple web page is created to test the web server and PHP engine.\nContents\nPrerequisites\nUser data and shell scripts\nUpdate the instance user data\nUser data and cloud-init directives\nUser data and the AWS CLI\nCombine shell scripts and cloud-init directives\nPrerequisites\nThe examples in this topic assume the following:\nYour instance has a public DNS name that is reachable from the internet.\nThe security group associated with your instance is configured to allow SSH (port 22) traffic so that you can connect to the instance to view the output log files.\nYour instance is launched with an Amazon Linux 2 AMI. These instructions are intended for use with Amazon Linux 2, and the commands and directives may not work for other Linux distributions. For more information about other distributions, such as their support for cloud-init, see their specific documentation.\nUser data and shell scripts\nIf you are familiar with shell scripting, this is the easiest and most complete way to send instructions to an instance at launch. Adding these tasks at boot time adds to the amount of time it takes to boot the instance. You should allow a few minutes of extra time for the tasks to complete before you test that the user script has finished successfully.\nImportant\nBy default, user data scripts and cloud-init directives run only during the boot cycle when you first launch an instance. You can update your configuration to ensure that your user data scripts and cloud-init directives run every time you restart your instance. For more information, see How can I utilize user data to automatically run a script with every restart of my Amazon EC2 Linux instance? in the AWS Knowledge Center.\nUser data shell scripts must start with the #! characters and the path to the interpreter you want to read the script (commonly /bin/bash). For an introduction on shell scripting, see the Bash Reference Manual on the GNU Operating System website.\nScripts entered as user data are run as the root user, so do not use the sudo command in the script. Remember that any files you create will be owned by the root user; if you need a non-root user to have file access, you should modify the permissions accordingly in the script. Also, because the script is not run interactively, you cannot include commands that require user feedback (such as yum update without the -y flag).\nIf you use an AWS API, including the AWS CLI, in a user data script, you must use an instance profile when launching the instance. An instance profile provides the appropriate AWS credentials required by the user data script to issue the API call. For more information, see Use instance profiles in the IAM User Guide. The permissions you assign to the IAM role depend on which services you are calling with the API. For more information, see IAM roles for Amazon EC2.\nThe cloud-init output log file captures console output so it is easy to debug your scripts following a launch if the instance does not behave the way you intended. To view the log file, connect to the instance and open /var/log/cloud-init-output.log.\nWhen a user data script is processed, it is copied to and run from /var/lib/cloud/instances/instance-id/. The script is not deleted after it is run. Be sure to delete the user data scripts from /var/lib/cloud/instances/instance-id/ before you create an AMI from the instance. Otherwise, the script will exist in this directory on any instance launched from the AMI.\nUpdate the instance user data\nTo update the instance user data, you must first stop the instance. If the instance is running, you can view the user data but you cannot modify it.\nWarning\nWhen you stop an instance, the data on any instance store volumes is erased. To keep data from instance store volumes, be sure to back it up to persistent storage.\nTo modify instance user data\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance and choose Instance state, Stop instance. If this option is disabled, either the instance is already stopped or its root device is an instance store volume.\nWhen prompted for confirmation, choose Stop. It can take a few minutes for the instance to stop.\nWith the instance still selected, choose Actions, Instance settings, Edit user data.\nModify the user data as needed, and then choose Save.\nStart the instance. The new user data is visible on your instance after you start it; however, user data scripts are not run.\nUser data and cloud-init directives\nThe cloud-init package configures specific aspects of a new Amazon Linux instance when it is launched; most notably, it configures the .ssh/authorized_keys file for the ec2-user so you can log in with your own private key. For more information about the configuration tasks that the cloud-init package performs for Amazon Linux instances, see Using cloud-init on Amazon Linux 2 in the Amazon Linux 2 User Guide.\nThe cloud-init user directives can be passed to an instance at launch the same way that a script is passed, although the syntax is different. For more information about cloud-init, see https://cloudinit.readthedocs.org/en/latest/index.html.\nImportant\nBy default, user data scripts and cloud-init directives run only during the boot cycle when you first launch an instance. You can update your configuration to ensure that your user data scripts and cloud-init directives run every time you restart your instance. For more information, see How can I utilize user data to automatically run a script with every restart of my Amazon EC2 Linux instance? in the AWS Knowledge Center.\nAdding these tasks at boot time adds to the amount of time it takes to boot an instance. You should allow a few minutes of extra time for the tasks to complete before you test that your user data directives have completed.\nTo pass cloud-init directives to an instance with user data\nFollow the procedure for launching an instance. The User data field is located in the Advanced details section of the launch instance wizard. Enter your cloud-init directive text in the User data field, and then complete the instance launch procedure.\nIn the example below, the directives create and configure a web server on Amazon Linux 2. The #cloud-config line at the top is required in order to identify the commands as cloud-init directives.\n#cloud-config\nrepo_update: true\nrepo_upgrade: all\n \npackages:\n- httpd\n- mariadb-server\n \nruncmd:\n- [ sh, -c, \"amazon-linux-extras install -y lamp-mariadb10.2-php7.2 php7.2\" ]\n- systemctl start httpd\n- sudo systemctl enable httpd\n- [ sh, -c, \"usermod -a -G apache ec2-user\" ]\n- [ sh, -c, \"chown -R ec2-user:apache /var/www\" ]\n- chmod 2775 /var/www\n- [ find, /var/www, -type, d, -exec, chmod, 2775, {}, \\; ]\n- [ find, /var/www, -type, f, -exec, chmod, 0664, {}, \\; ]\n- [ sh, -c, 'echo \"<?php phpinfo(); ?>\" > /var/www/html/phpinfo.php' ]\nAllow enough time for the instance to launch and run the directives in your user data, and then check to see that your directives have completed the tasks you intended.\nFor this example, in a web browser, enter the URL of the PHP test file the directives created. This URL is the public DNS address of your instance followed by a forward slash and the file name.\nhttp://my.public.dns.amazonaws.com/phpinfo.php\nYou should see the PHP information page. If you are unable to see the PHP information page, check that the security group you are using contains a rule to allow HTTP (port 80) traffic. For more information, see Configure security group rules.\n(Optional) If your directives did not accomplish the tasks you were expecting them to, or if you just want to verify that your directives completed without errors, connect to the instance, examine the output log file (/var/log/cloud-init-output.log), and look for error messages in the output. For additional debugging information, you can add the following line to your directives:\noutput : { all : '| tee -a /var/log/cloud-init-output.log' }\nThis directive sends runcmd output to /var/log/cloud-init-output.log.\nUser data and the AWS CLI\nYou can use the AWS CLI to specify, modify, and view the user data for your instance. For information about viewing user data from your instance using instance metadata, see Access instance metadata for an EC2 instance.\nOn Windows, you can use the AWS Tools for Windows PowerShell instead of using the AWS CLI. For more information, see User data and the Tools for Windows PowerShell .\nExample: Specify user data at launch\nTo specify user data when you launch your instance, use the run-instances command with the --user-data parameter. With run-instances, the AWS CLI performs base64 encoding of the user data for you.\nThe following example shows how to specify a script as a string on the command line:\naws ec2 run-instances --image-id ami-abcd1234 --count 1 --instance-type m3.medium \\\n    --key-name my-key-pair --subnet-id subnet-abcd1234 --security-group-ids sg-abcd1234 \\\n    --user-data echo user data\nThe following example shows how to specify a script using a text file. Be sure to use the file:// prefix to specify the file.\naws ec2 run-instances --image-id ami-abcd1234 --count 1 --instance-type m3.medium \\\n    --key-name my-key-pair --subnet-id subnet-abcd1234 --security-group-ids sg-abcd1234 \\\n    --user-data file://my_script.txt\nThe following is an example text file with a shell script.\n#!/bin/bash\nyum update -y\nservice httpd start\nchkconfig httpd on\nExample: Modify the user data of a stopped instance\nYou can modify the user data of a stopped instance using the modify-instance-attribute command. With modify-instance-attribute, the AWS CLI does not perform base64 encoding of the user data for you.\nOn a Linux computer, use the base64 command to encode the user data.\nbase64 my_script.txt >my_script_base64.txt\nOn a Windows computer, use the certutil command to encode the user data. Before you can use this file with the AWS CLI, you must remove the first (BEGIN CERTIFICATE) and last (END CERTIFICATE) lines.\ncertutil -encode my_script.txt my_script_base64.txt\nnotepad my_script_base64.txt\nUse the --attribute and --value parameters to use the encoded text file to specify the user data. Be sure to use the file:// prefix to specify the file.\naws ec2 modify-instance-attribute --instance-id i-1234567890abcdef0 --attribute userData --value file://my_script_base64.txt\nExample: Clear the user data of a stopped instance\nTo delete the existing user data, use the modify-instance-attribute command as follows:\naws ec2 modify-instance-attribute --instance-id i-1234567890abcdef0 --user-data Value=\nExample: View user data\nTo retrieve the user data for an instance, use the describe-instance-attribute command. With describe-instance-attribute, the AWS CLI does not perform base64 decoding of the user data for you.\naws ec2 describe-instance-attribute --instance-id i-1234567890abcdef0 --attribute userData\nThe following is example output with the user data base64 encoded.\n{\n    \"UserData\": {\n        \"Value\": \"IyEvYmluL2Jhc2gKeXVtIHVwZGF0ZSAteQpzZXJ2aWNlIGh0dHBkIHN0YXJ0CmNoa2NvbmZpZyBodHRwZCBvbg==\"\n    },\n    \"InstanceId\": \"i-1234567890abcdef0\"\n}\nOn a Linux computer , use the --query option to get the encoded user data and the base64 command to decode it.\naws ec2 describe-instance-attribute --instance-id i-1234567890abcdef0 --attribute userData --output text --query \"UserData.Value\" | base64 --decode\nOn a Windows computer, use the --query option to get the coded user data and the certutil command to decode it. Note that the encoded output is stored in a file and the decoded output is stored in another file.\naws ec2 describe-instance-attribute --instance-id i-1234567890abcdef0 --attribute userData --output text --query \"UserData.Value\" >my_output.txt\ncertutil -decode my_output.txt my_output_decoded.txt\ntype my_output_decoded.txt\nThe following is example output.\n#!/bin/bash\nyum update -y\nservice httpd start\nchkconfig httpd on\nCombine shell scripts and cloud-init directives\nBy default, you can include only one content type in user data at a time. However, you can use the text/cloud-config and text/x-shellscript content-types in a mime-multi part file to include both a shell script and cloud-init directives in your user data.\nThe following shows the mime-multi part format.\nContent-Type: multipart/mixed; boundary=\"//\"\nMIME-Version: 1.0\n \n--//\nContent-Type: text/cloud-config; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nContent-Disposition: attachment; filename=\"cloud-config.txt\"\n \n#cloud-config\ncloud-init directives\n \n--//\nContent-Type: text/x-shellscript; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nContent-Disposition: attachment; filename=\"userdata.txt\"\n \n#!/bin/bash\nshell script commands\n--//--\nFor example, the following user data includes cloud-init directives and a bash shell script. The cloud-init directives creates a file (/test-cloudinit/cloud-init.txt), and writes Created by cloud-init to that file. The bash shell script creates a file (/test-userscript/userscript.txt) and writes Created by bash shell script to that file.\nContent-Type: multipart/mixed; boundary=\"//\"\nMIME-Version: 1.0\n \n--//\nContent-Type: text/cloud-config; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nContent-Disposition: attachment; filename=\"cloud-config.txt\"\n \n#cloud-config\nruncmd:\n- [ mkdir, /test-cloudinit ]\nwrite_files:\n- path: /test-cloudinit/cloud-init.txt\ncontent: Created by cloud-init\n \n--//\nContent-Type: text/x-shellscript; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nContent-Disposition: attachment; filename=\"userdata.txt\"\n \n#!/bin/bash\nmkdir test-userscript\ntouch /test-userscript/userscript.txt\necho \"Created by bash shell script\" >> /test-userscript/userscript.txt\n--//--\nHow Amazon EC2 handles user data for Windows instances\nOn Windows instances, the launch agent performs the tasks related to user data. For more information, see the following:\nEC2Launch v2\nEC2Launch\nEC2Config service\nFor examples of the assembly of a UserData property in a AWS CloudFormation template, see Base64 Encoded UserData Property and Base64 Encoded UserData Property with AccessKey and SecretKey.\nFor an example of running commands on an instance within an Auto Scaling group that works with lifecycle hooks, see Tutorial: Configure user data to retrieve the target lifecycle state through instance metadata in the Amazon EC2 Auto Scaling User Guide.\nContents\nUser data scripts\nUser data execution\nUser data and the Tools for Windows PowerShell\nUser data scripts\nFor EC2Config or EC2Launch to run scripts, you must enclose the script within a special tag when you add it to user data. The tag that you use depends on whether the commands run in a Command Prompt window (batch commands) or use Windows PowerShell.\nIf you specify both a batch script and a Windows PowerShell script, the batch script runs first and the Windows PowerShell script runs next, regardless of the order in which they appear in the instance user data.\nIf you use an AWS API, including the AWS CLI, in a user data script, you must use an instance profile when launching the instance. An instance profile provides the appropriate AWS credentials required by the user data script to make the API call. For more information, see Instance profiles. The permissions you assign to the IAM role depend on which services you are calling with the API. For more information, see IAM roles for Amazon EC2.\nScript type\nSyntax for batch scripts\nSyntax for Windows PowerShell scripts\nSyntax for YAML configuration scripts\nBase64 encoding\nSyntax for batch scripts\nSpecify a batch script using the script tag. Separate the commands using line breaks as shown in the following example.\n<script>\n    echo Current date and time >> %SystemRoot%\\Temp\\test.log\n    echo %DATE% %TIME% >> %SystemRoot%\\Temp\\test.log\n</script>\nBy default, user data scripts run one time when you launch the instance. To run the user data scripts every time you reboot or start the instance, add <persist>true</persist> to the user data.\n<script>\n    echo Current date and time >> %SystemRoot%\\Temp\\test.log\n    echo %DATE% %TIME% >> %SystemRoot%\\Temp\\test.log\n</script>\n<persist>true</persist>\nEC2Launch v2 agent\nTo run an XML user data script as a detached process with the EC2Launch v2 executeScript task in the UserData stage, add <detach>true</detach> to the user data.\nNote\nThe detach tag is not supported by previous launch agents.\n<script>\n    echo Current date and time >> %SystemRoot%\\Temp\\test.log\n    echo %DATE% %TIME% >> %SystemRoot%\\Temp\\test.log\n</script>\n<detach>true</detach>\nSyntax for Windows PowerShell scripts\nThe AWS Windows AMIs include the AWS Tools for Windows PowerShell, so you can specify these cmdlets in user data. If you associate an IAM role with your instance, you don't need to specify credentials to the cmdlets, as applications that run on the instance use the role's credentials to access AWS resources (for example, Amazon S3 buckets).\nSpecify a Windows PowerShell script using the <powershell> tag. Separate the commands using line breaks. The <powershell> tag is case-sensitive.\nFor example:\n<powershell>\n    $file = $env:SystemRoot + \"\\Temp\\\" + (Get-Date).ToString(\"MM-dd-yy-hh-mm\")\n    New-Item $file -ItemType file\n</powershell>\nBy default, the user data scripts run one time when you launch the instance. To run the user data scripts every time you reboot or start the instance, add <persist>true</persist> to the user data.\n<powershell>\n    $file = $env:SystemRoot + \"\\Temp\\\" + (Get-Date).ToString(\"MM-dd-yy-hh-mm\")\n    New-Item $file -ItemType file\n</powershell>\n<persist>true</persist>\nYou can specify one or more PowerShell arguments with the <powershellArguments> tag. If no arguments are passed, EC2Launch and EC2Launch v2 add the following argument by default: -ExecutionPolicy Unrestricted.\nExample:\n<powershell>\n    $file = $env:SystemRoot + \"\\Temp\" + (Get-Date).ToString(\"MM-dd-yy-hh-mm\")\n    New-Item $file -ItemType file\n</powershell>\n<powershellArguments>-ExecutionPolicy Unrestricted -NoProfile -NonInteractive</powershellArguments>\nEC2Launch v2 agent\nTo run an XML user data script as a detached process with the EC2Launch v2 executeScript task in the UserData stage, add <detach>true</detach> to the user data.\nNote\nThe detach tag is not supported by previous launch agents.\n<powershell>\n    $file = $env:SystemRoot + \"\\Temp\\\" + (Get-Date).ToString(\"MM-dd-yy-hh-mm\")\n    New-Item $file -ItemType file\n</powershell>\n<detach>true</detach>\nSyntax for YAML configuration scripts\nIf you are using EC2Launch v2 to run scripts, you can use the YAML format. To view configuration tasks, details, and examples for EC2Launch v2, see EC2Launch v2 task configuration.\nSpecify a YAML script with the executeScript task.\nExample YAML syntax to run a PowerShell script\nversion: 1.0\n    tasks:\n    - task: executeScript\n      inputs:\n      - frequency: always\n        type: powershell\n        runAs: localSystem\n        content: |-\n          $file = $env:SystemRoot + \"\\Temp\\\" + (Get-Date).ToString(\"MM-dd-yy-hh-mm\")\n          New-Item $file -ItemType file\nExample YAML syntax to run a batch script\nversion: 1.1\n    tasks:\n    - task: executeScript\n      inputs:\n      - frequency: always\n        type: batch\n        runAs: localSystem\n        content: |-\n          echo Current date and time >> %SystemRoot%\\Temp\\test.log\n          echo %DATE% %TIME% >> %SystemRoot%\\Temp\\test.log\nBase64 encoding\nIf you're using the Amazon EC2 API or a tool that does not perform base64 encoding of the user data, you must encode the user data yourself. If not, an error is logged about being unable to find script or powershell tags to run. The following is an example that encodes using Windows PowerShell.\n$UserData = [System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($Script))\nThe following is an example that decodes using PowerShell.\n$Script = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($UserData))\nFor more information about base64 encoding, see https://www.ietf.org/rfc/rfc4648.txt.\nUser data execution\nBy default, all AWS Windows AMIs have user data execution enabled for the initial launch. You can specify that user data scripts are run the next time the instance reboots or restarts. Alternatively, you can specify that user data scripts are run every time the instance reboots or restarts.\nNote\nUser data is not enabled to run by default after the initial launch. To enable user data to run when you reboot or start the instance, see Run scripts during subsequent reboots or starts.\nUser data scripts are run from the local administrator account when a random password is generated. Otherwise, user data scripts are run from the System account.\nInstance launch scripts\nScripts in the instance user data are run during the initial launch of the instance. If the persist tag is found, user data execution is enabled for subsequent reboots or starts. The log files for EC2Launch v2, EC2Launch, and EC2Config contain the output from the standard output and standard error streams.\nEC2Launch v2\nThe log file for EC2Launch v2 is C:\\ProgramData\\Amazon\\EC2Launch\\log\\agent.log.\nNote\nThe C:\\ProgramData folder might be hidden. To view the folder, you must show hidden files and folders.\nThe following information is logged when the user data is run:\nInfo: Converting user-data to yaml format \u2013 If the user data was provided in XML format\nInfo: Initialize user-data state \u2013 The start of user data execution\nInfo: Frequency is: always \u2013 If the user data task is running on every boot\nInfo: Frequency is: once \u2013 If the user data task is running just once\nStage: postReadyUserData execution completed \u2013 The end of user data execution\nEC2Launch\nThe log file for EC2Launch is C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Log\\UserdataExecution.log.\nThe C:\\ProgramData folder might be hidden. To view the folder, you must show hidden files and folders.\nThe following information is logged when the user data is run:\nUserdata execution begins \u2013 The start of user data execution\n<persist> tag was provided: true \u2013 If the persist tag is found\nRunning userdata on every boot \u2013 If the persist tag is found\n<powershell> tag was provided.. running powershell content \u2013 If the powershell tag is found\n<script> tag was provided.. running script content \u2013 If the script tag is found\nMessage: The output from user scripts \u2013 If user data scripts are run, their output is logged\nEC2Config\nThe log file for EC2Config is C:\\Program Files\\Amazon\\Ec2ConfigService\\Logs\\Ec2Config.log. The following information is logged when the user data is run:\nEc2HandleUserData: Message: Start running user scripts \u2013 The start of user data execution\nEc2HandleUserData: Message: Re-enabled userdata execution \u2013 If the persist tag is found\nEc2HandleUserData: Message: Could not find <persist> and </persist> \u2013 If the persist tag is not found\nEc2HandleUserData: Message: The output from user scripts \u2013 If user data scripts are run, their output is logged\nRun scripts during subsequent reboots or starts\nWhen you update instance user data, user data scripts are not run automatically when you reboot or start the instance. However, you can enable user data execution so that user data scripts are run one time when you reboot or start the instance, or every time you reboot or start the instance.\nIf you choose the Shutdown with Sysprep option, user data scripts are run the next time the instance starts or reboots, even if you did not enable user data execution for subsequent reboots or starts. The user data scripts will not be executed on subsequent reboots or starts.\nTo enable user data execution with EC2Launch v2\nTo run a task in user data on first boot, set frequency to once.\nTo run a task in user data on every boot, set frequency to always.\nTo enable user data execution with EC2Launch\nConnect to your Windows instance.\nOpen a PowerShell command window and run the following command:\nC:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Scripts\\InitializeInstance.ps1 -Schedule\nDisconnect from your Windows instance. To run updated scripts the next time the instance is started, stop the instance and update the user data.\nTo enable user data execution with EC2Config\nConnect to your Windows instance.\nOpen C:\\Program Files\\Amazon\\Ec2ConfigService\\Ec2ConfigServiceSetting.exe.\nFor User Data, select Enable UserData execution for next service start.\nDisconnect from your Windows instance. To run updated scripts the next time the instance is started, stop the instance and update the user data.\nUser data and the Tools for Windows PowerShell\nYou can use the Tools for Windows PowerShell to specify, modify, and view the user data for your instance. For information about viewing user data from your instance using instance metadata, see Access instance metadata for an EC2 instance. For information about user data and the AWS CLI, see User data and the AWS CLI.\nExample: Specify instance user data at launch\nCreate a text file with the instance user data. To run user data scripts every time you reboot or start the instance, add <persist>true</persist>, as shown in the following example.\n<powershell>\n    $file = $env:SystemRoot + \"\\Temp\\\" + (Get-Date).ToString(\"MM-dd-yy-hh-mm\")\n    New-Item $file -ItemType file\n</powershell>\n<persist>true</persist>\nTo specify instance user data when you launch your instance, use the New-EC2Instance command. This command does not perform base64 encoding of the user data for you. Use the following commands to encode the user data in a text file named script.txt.\nPS C:\\> $Script = Get-Content -Raw script.txt\nPS C:\\> $UserData = [System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($Script))\nUse the -UserData parameter to pass the user data to the New-EC2Instance command.\nPS C:\\> New-EC2Instance -ImageId ami-abcd1234 -MinCount 1 -MaxCount 1 -InstanceType m3.medium \\\n    -KeyName my-key-pair -SubnetId subnet-12345678 -SecurityGroupIds sg-1a2b3c4d \\\n    -UserData $UserData\nExample: Update instance user data for a stopped instance\nYou can modify the user data of a stopped instance using the Edit-EC2InstanceAttribute command.\nCreate a text file with the new script. Use the following commands to encode the user data in the text file named new-script.txt.\nPS C:\\> $NewScript = Get-Content -Raw new-script.txt\nPS C:\\> $NewUserData = [System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($NewScript))\nUse the -UserData and -Value parameters to specify the user data.\nPS C:\\> Edit-EC2InstanceAttribute -InstanceId i-1234567890abcdef0 -Attribute userData -Value $NewUserData\nExample: View instance user data\nTo retrieve the user data for an instance, use the Get-EC2InstanceAttribute command.\nPS C:\\> (Get-EC2InstanceAttribute -InstanceId i-1234567890abcdef0 -Attribute userData).UserData\nThe following is example output. Note that the user data is encoded.\nPHBvd2Vyc2hlbGw+DQpSZW5hbWUtQ29tcHV0ZXIgLU5ld05hbWUgdXNlci1kYXRhLXRlc3QNCjwvcG93ZXJzaGVsbD4=\nUse the following commands to store the encoded user data in a variable and then decode it.\nPS C:\\> $UserData_encoded = (Get-EC2InstanceAttribute -InstanceId i-1234567890abcdef0 -Attribute userData).UserData\nPS C:\\> [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($UserData_encoded))\nThe following is example output.\n<powershell>\n    $file = $env:SystemRoot + \"\\Temp\\\" + (Get-Date).ToString(\"MM-dd-yy-hh-mm\")\n    New-Item $file -ItemType file\n</powershell>\n<persist>true</persist>\nExample: Rename the instance to match the tag value\nYou can use the Get-EC2Tag command to read the tag value, rename the instance on first boot to match the tag value, and reboot. To run this command successfully, you must have a role with ec2:DescribeTags permissions attached to the instance because tag information is retrieved by the API call. For more information on settings permissions by using IAM roles, see Attach an IAM role to an instance.\nIMDSv2\nIMDSv1\n<powershell>\n    [string]$token = Invoke-RestMethod -Headers @{\"X-aws-ec2-metadata-token-ttl-seconds\" = \"21600\"} -Method PUT -Uri 'http://169.254.169.254/latest/api/token' -UseBasicParsing\n    $instanceId = Invoke-RestMethod -Headers @{\"X-aws-ec2-metadata-token\" = $token} -Method GET -Uri 'http://169.254.169.254/latest/meta-data/instance-id' -UseBasicParsing\n $nameValue = (Get-EC2Tag -Filter @{Name=\"resource-id\";Value=$instanceid},@{Name=\"key\";Value=\"Name\"}).Value\n $pattern = \"^(?![0-9]{1,15}$)[a-zA-Z0-9-]{1,15}$\"\n #Verify Name Value satisfies best practices for Windows hostnames\n If ($nameValue -match $pattern) \n     {Try\n         {Rename-Computer -NewName $nameValue -Restart -ErrorAction Stop} \n     Catch\n         {$ErrorMessage = $_.Exception.Message\n         Write-Output \"Rename failed: $ErrorMessage\"}}\n Else\n     {Throw \"Provided name not a valid hostname. Please ensure Name value is between 1 and 15 characters in length and contains only alphanumeric or hyphen characters\"}\n</powershell>\nYou can also rename the instance using tags in instance metadata, if your instance is configured to access tags from the instance metadata. For more information, see View tags for your EC2 instances using instance metadata.\nIMDSv2\nIMDSv1\n<powershell>\n    [string]$token = Invoke-RestMethod -Headers @{\"X-aws-ec2-metadata-token-ttl-seconds\" = \"21600\"} -Method PUT -Uri 'http://169.254.169.254/latest/api/token' -UseBasicParsing\n $nameValue = Invoke-RestMethod -Headers @{\"X-aws-ec2-metadata-token\" = $token} -Method GET -Uri 'http://169.254.169.254/latest/meta-data/tags/instance/Name' -UseBasicParsing\n $pattern = \"^(?![0-9]{1,15}$)[a-zA-Z0-9-]{1,15}$\"\n #Verify Name Value satisfies best practices for Windows hostnames\n If ($nameValue -match $pattern) \n     {Try\n         {Rename-Computer -NewName $nameValue -Restart -ErrorAction Stop} \n     Catch\n         {$ErrorMessage = $_.Exception.Message\n         Write-Output \"Rename failed: $ErrorMessage\"}}\n Else\n     {Throw \"Provided name not a valid hostname. Please ensure Name value is between 1 and 15 characters in length and contains only alphanumeric or hyphen characters\"}\n</powershell>"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMI-launch-index-examples.html",
        "content": "This example demonstrates how you can use both user data and instance metadata to configure your Amazon EC2 instances.\nNote\nThe examples in this section use the IPv4 address of the IMDS: 169.254.169.254. If you are retrieving instance metadata for EC2 instances over the IPv6 address, ensure that you enable and use the IPv6 address instead: [fd00:ec2::254]. The IPv6 address of the IMDS is compatible with IMDSv2 commands. The IPv6 address is only accessible on Nitro-based instances in IPv6-supported subnets (dual stack or IPv6 only).\nAlice wants to launch four instances of her favorite database AMI, with the first acting as the original instance and the remaining three acting as replicas. When she launches them, she wants to add user data about the replication strategy for each replica. She is aware that this data will be available to all four instances, so she needs to structure the user data in a way that allows each instance to recognize which parts are applicable to it. She can do this using the ami-launch-index instance metadata value, which will be unique for each instance. If she starts more than one instance at the same time, the ami-launch-index indicates the order in which the instances were launched. The value of the first instance launched is 0.\nHere is the user data that Alice has constructed.\nreplicate-every=1min | replicate-every=5min | replicate-every=10min\nThe replicate-every=1min data defines the first replica's configuration, replicate-every=5min defines the second replica's configuration, and so on. Alice decides to provide this data as an ASCII string with a pipe symbol (|) delimiting the data for the separate instances.\nAlice launches four instances using the run-instances command, specifying the user data.\naws ec2 run-instances \\\n    --image-id ami-0abcdef1234567890 \\\n    --count 4 \\\n    --instance-type t2.micro \\\n    --user-data \"replicate-every=1min | replicate-every=5min | replicate-every=10min\"\nAfter they're launched, all instances have a copy of the user data and the common metadata shown here:\nAMI ID: ami-0abcdef1234567890\nReservation ID: r-1234567890abcabc0\nPublic keys: none\nSecurity group name: default\nInstance type: t2.micro\nHowever, each instance has unique metadata, as shown in the following tables.\nMetadata Value\ninstance-id i-1234567890abcdef0\nami-launch-index 0\npublic-hostname ec2-203-0-113-25.compute-1.amazonaws.com\npublic-ipv4 67.202.51.223\nlocal-hostname ip-10-251-50-12.ec2.internal\nlocal-ipv4 10.251.50.35\nMetadata Value\ninstance-id i-0598c7d356eba48d7\nami-launch-index 1\npublic-hostname ec2-67-202-51-224.compute-1.amazonaws.com\npublic-ipv4 67.202.51.224\nlocal-hostname ip-10-251-50-36.ec2.internal\nlocal-ipv4 10.251.50.36\nMetadata Value\ninstance-id i-0ee992212549ce0e7\nami-launch-index 2\npublic-hostname ec2-67-202-51-225.compute-1.amazonaws.com\npublic-ipv4 67.202.51.225\nlocal-hostname ip-10-251-50-37.ec2.internal\nlocal-ipv4 10.251.50.37\nMetadata Value\ninstance-id i-1234567890abcdef0\nami-launch-index 3\npublic-hostname ec2-67-202-51-226.compute-1.amazonaws.com\npublic-ipv4 67.202.51.226\nlocal-hostname ip-10-251-50-38.ec2.internal\nlocal-ipv4 10.251.50.38\nAlice can use the ami-launch-index value to determine which portion of the user data is applicable to a particular instance.\nShe connects to one of the instances, and retrieves the ami-launch-index for that instance to ensure it is one of the replicas:\nIMDSv2\nIMDSv1\n[ec2-user ~]$ TOKEN=`curl -X PUT \"http://169.254.169.254/latest/meta-data/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"` \\\n&& curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/ami-launch-index\n2\nFor the following steps, the IMDSv2 requests use the stored token from the preceding IMDSv2 command, assuming the token has not expired.\nShe saves the ami-launch-index as a variable.\nIMDSv2\nIMDSv1\n[ec2-user ~]$ ami_launch_index=`curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/ami-launch-index`\nShe saves the user data as a variable.\nIMDSv2\nIMDSv1\n[ec2-user ~]$ user_data=`curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/user-data`\nFinally, Alice uses the cut command to extract the portion of the user data that is applicable to that instance.\nIMDSv2\nIMDSv1\n[ec2-user ~]$ echo $user_data | cut -d\"|\" -f\"$ami_launch_index\"\nreplicate-every=5min"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/identify_ec2_instances.html",
        "content": "You might need to know whether your application or website is running on an EC2 instance, especially if you have a mixed computing environment. You can use one of the following options to determine whether the host for your application or website is an EC2 instance.\nOptions\nInspect the instance identity document\nInspect the system UUID\nInspect the system virtual machine generation identifier\nInspect the instance identity document\nEach instance has a signed instance identity document that you can verify cryptographically. You can find these documents using the Instance Metadata Service (IMDS).\nFor more information, see Instance identity documents.\nInspect the system UUID\nYou can get the system UUID and look in the beginning octet of the UUID for EC2 (in Linux, this might be lowercase ec2). This method is quick, but potentially inaccurate because there's a small chance that a system that is not an EC2 instance could have a UUID that starts with these characters. Furthermore, some versions of SMBIOS use the little-endian format, which doesn't include EC2 at the beginning of the UUID. This might be the case for EC2 instances that use SMBIOS 2.4 for Windows, or for Linux distributions other than Amazon Linux that have their own implementation of SMBIOS.\nLinux example: Get the UUID from DMI (HVM AMIs only)\nUse the following command to get the UUID using the Desktop Management Interface (DMI):\n[ec2-user ~]$ sudo dmidecode --string system-uuid\nIn the following example output, the UUID starts with \"EC2\", which indicates that the system is probably an EC2 instance.\nEC2E1916-9099-7CAF-FD21-012345ABCDEF\nIn the following example output, the UUID is represented in little-endian format.\n45E12AEC-DCD1-B213-94ED-012345ABCDEF\nAlternatively, for instances built on the Nitro system, you can use the following command:\n[ec2-user ~]$ cat /sys/devices/virtual/dmi/id/board_asset_tag\nIf the output is an instance ID, as the following example output, the system is an EC2 instance:\ni-0af01c0123456789a\nLinux example: Get the UUID from the hypervisor (PV AMIs only)\nUse the following command to get the UUID from the hypervisor:\n[ec2-user ~]$ cat /sys/hypervisor/uuid\nIn the following example output, the UUID starts with \"ec2\", which indicates that the system is probably an EC2 instance.\nec2e1916-9099-7caf-fd21-012345abcdef\nWindows example: Get the UUID using WMI or Windows PowerShell\nUse the Windows Management Instrumentation command line (WMIC) as follows:\nwmic path win32_computersystemproduct get uuid\nAlternatively, if you're using Windows PowerShell, use the Get-WmiObject cmdlet as follows:\nPS C:\\> Get-WmiObject -query \"select uuid from Win32_ComputerSystemProduct\" | Select UUID\nIn the following example output, the UUID starts with \"EC2\", which indicates that the system is probably an EC2 instance.\nEC2AE145-D1DC-13B2-94ED-012345ABCDEF\nFor instances using SMBIOS 2.4, the UUID might be represented in little-endian format; for example:\n45E12AEC-DCD1-B213-94ED-012345ABCDEF\nInspect the system virtual machine generation identifier\nA virtual machine generation identifier consists of a unique buffer of 128-bit interpreted as cryptographic random integer identifier. You can retrieve the virtual machine generation identifier to identify your Amazon Elastic Compute Cloud instance. The generation identifier is exposed within the guest operating system of the instance through an ACPI table entry. The value will change if your machine is cloned, copied, or imported into AWS, such as with VM Import/Export.\nExample: Retrieve the virtual machine generation identifier from Linux\nYou can use the following commands to retrieve the virtual machine generation identifier from your instances running Linux.\nAmazon Linux 2\nUbuntu\nUpdate your existing software packages, as necessary, using the following command:\nsudo yum update\nIf necessary, source the busybox package with the following command:\nsudo curl https://www.rpmfind.net/linux/epel/next/8/Everything/x86_64/Packages/b/busybox-1.35.0-2.el8.next.x86_64.rpm --output busybox.rpm\nIf necessary, install the prerequisite packages using the following command:\nsudo yum install busybox.rpm iasl -y\nRun the following iasl command to produce output from the ACPI table:\nsudo iasl -p ./SSDT2 -d /sys/firmware/acpi/tables/SSDT2\nRun the following command to review the output of the iasl command:\ncat SSDT2.dsl\nThe output should yield the address space required to retrieve the virtual machine generation identifier:\nIntel ACPI Component Architecture\nASL+ Optimizing Compiler/Disassembler version 20190509\nCopyright (c) 2000 - 2019 Intel Corporation\n\nFile appears to be binary: found 32 non-ASCII characters, disassembling\nBinary file appears to be a valid ACPI table, disassembling\nInput file /sys/firmware/acpi/tables/SSDT2, Length 0x7B (123) bytes\nACPI: SSDT 0x0000000000000000 00007B (v01 AMAZON AMZNSSDT 00000001 AMZN 00000001)\nPass 1 parse of [SSDT]\nPass 2 parse of [SSDT]\nParsing Deferred Opcodes (Methods/Buffers/Packages/Regions)\n\nParsing completed\nDisassembly completed\nASL Output:    ./SSDT2.dsl - 1065 bytes\n$\n/*\n* Intel ACPI Component Architecture\n* AML/ASL+ Disassembler version 20190509 (64-bit version)\n* Copyright (c) 2000 - 2019 Intel Corporation\n*\n* Disassembling to symbolic ASL+ operators\n*\n* Disassembly of /sys/firmware/acpi/tables/SSDT2, Tue Mar 29 16:15:14 2022\n*\n* Original Table Header:\n*     Signature        \"SSDT\"\n*     Length           0x0000007B (123)\n*     Revision         0x01\n*     Checksum         0xB8\n*     OEM ID           \"AMAZON\"\n*     OEM Table ID     \"AMZNSSDT\"\n*     OEM Revision     0x00000001 (1)\n*     Compiler ID      \"AMZN\"\n*     Compiler Version 0x00000001 (1)\n*/\nDefinitionBlock (\"\", \"SSDT\", 1, \"AMAZON\", \"AMZNSSDT\", 0x00000001)\n{\nScope (\\_SB)\n{\n    Device (VMGN)\n    {\n        Name (_CID, \"VM_Gen_Counter\")  // _CID: Compatible ID\n        Name (_DDN, \"VM_Gen_Counter\")  // _DDN: DOS Device Name\n        Name (_HID, \"AMZN0000\")  // _HID: Hardware ID\n        Name (ADDR, Package (0x02)\n        {\n            0xFED01000,\n            Zero\n        })\n    }\n}\n}\n(Optional) Elevate your terminal permissions for the remaining steps with the following command:\nsudo -s\nUse the following command to store the previously gathered address space:\nVMGN_ADDR=0xFED01000\nUse the following command to iterate through the address space and build the virtual machine generation identifier:\nfor offset in 0x0 0x4 0x8 0xc; do busybox devmem $(($VMGN_ADDR + $offset)) | sed 's/0x//' | sed -z '$ s/\\n$//' >> vmgenid; done\nRetrieve the virtual machine generation identifier from the output file with the following command:\ncat vmgenid ; echo\nYour output should be similar to the following:\nEC2F335D979132C4165896753E72BD1C\nExample: Retrieve the virtual machine generation identifier from Windows\nYou can create a sample application to retrieve the virtual machine generation identifier from your instances running Windows. For more information, see Obtaining the virtual machine generation identifier in the Microsoft documentation."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-identity-documents.html",
        "content": "Each instance that you launch has an instance identity document that provides information about the instance itself. You can use the instance identity document to validate the attributes of the instance.\nThe instance identity document is generated when the instance is stopped and started, restarted, or launched. You can access the instance identity document for an instance through the Instance Metadata Service (IMDS). For the instructions, see Retrieve the instance identity document.\nThe instance identity document uses plaintext JSON format. It includes the following information.\nData Description\naccountId\nThe ID of the AWS account that launched the instance.\narchitecture\nThe architecture of the AMI used to launch the instance (i386 | x86_64 | arm64).\navailabilityZone\nThe Availability Zone in which the instance is running.\nbillingProducts\nThe billing products of the instance.\ndevpayProductCodes\nDeprecated.\nimageId\nThe ID of the AMI used to launch the instance.\ninstanceId\nThe ID of the instance.\ninstanceType\nThe instance type of the instance.\nkernelId\nThe ID of the kernel associated with the instance, if applicable.\nmarketplaceProductCodes\nThe AWS Marketplace product code of the AMI used to launch the instance.\npendingTime\nThe date and time that the instance was launched.\nprivateIp\nThe private IPv4 address of the instance.\nramdiskId\nThe ID of the RAM disk associated with the instance, if applicable.\nregion\nThe Region in which the instance is running.\nversion\nThe version of the instance identity document format."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/retrieve-iid.html",
        "content": "The instance identity document for an Amazon EC2 instance uses a plaintext JSON format. For a description of the contents of an instance identity document, see Instance identity documents for Amazon EC2 instances.\nThe instance identity document is stored in the instance metadata for the instance, in the instance-identity/document dynamic data category. You access the instance identity document for an instance by connecting to the instance and retrieving it from the instance metadata.\nYou can access instance metadata using the IPv4 address 169.254.169.254 or the IPv6 address fd00:ec2::254. These are Link-local addresses, meaning that you can access them only from the instance. The examples on this page use the IPv4 address of the IMDS: 169.254.169.254. To retrieve instance metadata for EC2 instances over IPv6, use fd00:ec2::254.\nTo verify the authenticity of an instance identity document after you retrieve it, see Verify instance identity document.\nTo retrieve the instance identity document\nConnect to the instance and run the following command to access the instance identity document from the instance metadata.\ncURL\nPowerShell\nIMDSv2\n$ TOKEN=`curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"` \\\n&& curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/dynamic/instance-identity/document\nIMDSv1\n$ curl http://169.254.169.254/latest/dynamic/instance-identity/document\nThe following is example output.\n{\n    \"devpayProductCodes\" : null,\n    \"marketplaceProductCodes\" : [ \"1abc2defghijklm3nopqrs4tu\" ], \n    \"availabilityZone\" : \"us-west-2b\",\n    \"privateIp\" : \"10.158.112.84\",\n    \"version\" : \"2017-09-30\",\n    \"instanceId\" : \"i-1234567890abcdef0\",\n    \"billingProducts\" : null,\n    \"instanceType\" : \"t2.micro\",\n    \"accountId\" : \"123456789012\",\n    \"imageId\" : \"ami-5fb8c835\",\n    \"pendingTime\" : \"2016-11-19T16:32:11Z\",\n    \"architecture\" : \"x86_64\",\n    \"kernelId\" : null,\n    \"ramdiskId\" : null,\n    \"region\" : \"us-west-2\"\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/verify-iid.html",
        "content": "If you intend to use the contents of the instance identity document for an important purpose, you should verify its contents and authenticity before using it.\nThe plaintext instance identity document is accompanied by three hashed and encrypted signatures. You can use these signatures to verify the origin and authenticity of the instance identity document and the information that it includes. The following signatures are provided:\nBase64-encoded signature\u2014This is a base64-encoded SHA256 hash of the instance identity document that is encrypted using an RSA key pair.\nPKCS7 signature\u2014This is a SHA1 hash of the instance identity document that is encrypted using a DSA key pair.\nRSA-2048 signature\u2014This is a SHA256 hash of the instance identity document that is encrypted using an RSA-2048 key pair.\nEach signature is available at a different endpoint in the instance metadata. You can use any one of these signatures depending on your hashing and encryption requirements. To verify the signatures, you must use the corresponding AWS public certificate.\nOptions\nOption 1: Verify instance identity document using the PKCS7 signature\nOption 2: Verify instance identity document using the base64-encoded signature\nOption 3: Verify instance identity document using the RSA-2048 signature\nOption 1: Verify instance identity document using the PKCS7 signature\nThis topic explains how to verify the instance identity document using the PKCS7 signature and the AWS DSA public certificate.\nLinux instances\nWindows instances\nOption 2: Verify instance identity document using the base64-encoded signature\nThis topic explains how to verify the instance identity document using the base64-encoded signature and the AWS RSA public certificate.\nLinux instances\nWindows instances\nOption 3: Verify instance identity document using the RSA-2048 signature\nThis topic explains how to verify the instance identity document using the RSA-2048 signature and the AWS RSA-2048 public certificate.\nLinux instances\nWindows instances"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/regions-certs.html",
        "content": "The following AWS public certificates can be used to verify the contents of an instance's instance identity document as described in Verify instance identity document.\nEnsure that you use the correct certificate for your Region and for the verification procedure that you're using. If you're verifying the PKCS7 signature, use the DSA certificate. If you're verifying the base64-encoded signature, use the RSA certificate. If you're verifying the RSA-2048 signature, use the RSA-2048 certificate.\nExpand each Region below to view the Region-specific certificates.\nUS East (N. Virginia) \u2014 us-east-1\nUS East (Ohio) \u2014 us-east-2\nUS West (N. California) \u2014 us-west-1\nUS West (Oregon) \u2014 us-west-2\nAfrica (Cape Town) \u2014 af-south-1\nAsia Pacific (Hong Kong) \u2014 ap-east-1\nAsia Pacific (Hyderabad) \u2014 ap-south-2\nAsia Pacific (Jakarta) \u2014 ap-southeast-3\nAsia Pacific (Malaysia) \u2014 ap-southeast-5\nAsia Pacific (Melbourne) \u2014 ap-southeast-4\nAsia Pacific (Mumbai) \u2014 ap-south-1\nAsia Pacific (Osaka) \u2014 ap-northeast-3\nAsia Pacific (Seoul) \u2014 ap-northeast-2\nAsia Pacific (Singapore) \u2014 ap-southeast-1\nAsia Pacific (Sydney) \u2014 ap-southeast-2\nAsia Pacific (Thailand) \u2014 ap-southeast-7\nAsia Pacific (Tokyo) \u2014 ap-northeast-1\nCanada (Central) \u2014 ca-central-1\nCanada West (Calgary) \u2014 ca-west-1\nChina (Beijing) \u2014 cn-north-1\nChina (Ningxia) \u2014 cn-northwest-1\nEurope (Frankfurt) \u2014 eu-central-1\nEurope (Ireland) \u2014 eu-west-1\nEurope (London) \u2014 eu-west-2\nEurope (Milan) \u2014 eu-south-1\nEurope (Paris) \u2014 eu-west-3\nEurope (Spain) \u2014 eu-south-2\nEurope (Stockholm) \u2014 eu-north-1\nEurope (Zurich) \u2014 eu-central-2\nIsrael (Tel Aviv) \u2014 il-central-1\nMiddle East (Bahrain) \u2014 me-south-1\nMiddle East (UAE) \u2014 me-central-1\nSouth America (S\u00e3o Paulo) \u2014 sa-east-1\nAWS GovCloud (US-East) \u2014 us-gov-east-1\nAWS GovCloud (US-West) \u2014 us-gov-west-1"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/set-time.html",
        "content": "A consistent and accurate time reference on your Amazon EC2 instance is crucial for many server tasks and processes. Time stamps in system logs play an essential role in identifying when issues occurred and the chronological order of events. When you use the AWS CLI or an AWS SDK to make requests from your instance, these tools sign requests on your behalf. If your instance's date and time settings are inaccurate, it can result in a discrepancy between the date in the signature and the date of the request, leading to AWS rejecting your requests.\nTo address this important aspect, Amazon offers the Amazon Time Sync Service, which is accessible from all EC2 instances and used by various AWS services. The service uses a fleet of satellite-connected and atomic reference clocks in each AWS Region to deliver accurate and current time readings of the Coordinated Universal Time (UTC) global standard.\nFor the best performance, we recommend using the local Amazon Time Sync Service on your EC2 instances. For a backup to the local Amazon Time Sync Service on your instances, or to connect resources outside of Amazon EC2 to the Amazon Time Sync Service, you can use the public Amazon Time Sync Service located at time.aws.com. The public Amazon Time Sync Service, like the local Amazon Time Sync Service, automatically smears any leap seconds that are added to UTC. The public Amazon Time Sync Service is supported globally by our fleet of satellite-connected and atomic reference clocks in each AWS Region.\nLeap seconds\nLeap seconds, introduced in 1972, are occasional one-second adjustments to UTC time to factor in irregularities in the earth\u2019s rotation in order to accommodate differences between International Atomic Time (TAI) and solar time (Ut1). To manage leap seconds on behalf of customers, we designed leap second smearing within the Amazon Time Sync Service. For more information, see Look Before You Leap \u2013 The Coming Leap Second and AWS.\nLeap seconds are going away, and we are in full support of the decision made at the 27th General Conference on Weights and Measures to abandon leap seconds by or before 2035.\nTo support this transition, we still plan on smearing time during a leap second event when accessing the Amazon Time Sync Service over the local NTP connection or our public NTP pools (time.aws.com). The PTP hardware clock, however, does not provide a smeared time option. In the event of a leap second, the PTP hardware clock will add the leap second following UTC standards. Leap-smeared and leap second time sources are the same in most cases. But because they differ during a leap second event, we do not recommend using both smeared and non-smeared time sources in your time client configuration during a leap second event.\n Topics\nSet the time reference on your EC2 instance to use the local Amazon Time Sync Service\nSet the time reference on your EC2 instance or any internet-connected device to use the public Amazon Time Sync Service\nCompare timestamps for your Linux instances\nChange the time zone of your instance\n  Related resources\nAWS Compute Blog: It\u2019s About Time: Microsecond-Accurate Clocks on Amazon EC2 Instances\nAWS Cloud Operations & Migrations Blog: Manage Amazon EC2 instance clock accuracy using Amazon Time Sync Service and Amazon CloudWatch \u2013 Part 1\n(Linux) https://chrony-project.org/"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configure-ec2-ntp.html",
        "content": "The local Amazon Time Sync Service either uses the Network Time Protocol (NTP), or provides a local Precision Time Protocol (PTP) hardware clock on supported instances. The PTP hardware clock supports either an NTP connection (Linux and Windows instances), or a direct PTP connection (Linux instances only). The NTP and direct PTP connections use the same highly accurate time source, but the direct PTP connection is more accurate than the NTP connection. The NTP connection to the Amazon Time Sync Service supports leap smearing while the PTP connection to the PTP hardware clock does not smear time. For more information, see Leap seconds.\nYour instances can access the local Amazon Time Sync Service as follows:\nThrough NTP at the following IP address endpoints:\nIPv4: 169.254.169.123\nIPv6: fd00:ec2::123 (Only accessible on Nitro-based instances.)\n(Linux only) Through a direct PTP connection to connect to a local PTP hardware clock:\nPHC0\nAmazon Linux AMIs, Windows AMIs, and most partner AMIs configure your instance to use the NTP IPv4 endpoint by default. This is the recommended setting for most customer workloads. No further configuration is required for instances launched from these AMIs unless you want to use the IPv6 endpoint or connect directly to the PTP hardware clock.\nNTP and PTP connections do not require any VPC configuration changes, and your instance does not require access to the internet.\nNote\nThere is a 1024 packet per second (PPS) limit to services that use link-local addresses. This limit includes the aggregate of Route 53 Resolver DNS Queries, Instance Metadata Service (IMDS) requests, Amazon Time Service Network Time Protocol (NTP) requests, and Windows Licensing Service (for Microsoft Windows based instances) requests.\nOnly Linux instances can use a direct PTP connection to connect to the local PTP hardware clock. Windows instances use NTP to connect to the local PTP hardware clock.\nTopics\nConnect to the IPv4 endpoint of the Amazon Time Sync Service\nConnect to the IPv6 endpoint of the Amazon Time Sync Service\nConnect to the PTP hardware clock\nConnect to the IPv4 endpoint of the Amazon Time Sync Service\nThis section describes how to configure your instance to use the local Amazon Time Sync Service through the IPv4 endpoint.\nUse the instructions for your instance's operating system.\nLinux\nWindows\nConnect to the IPv6 endpoint of the Amazon Time Sync Service\nThis section explains how the steps described in Connect to the IPv4 endpoint of the Amazon Time Sync Service differ if you are configuring your instance to use the local Amazon Time Sync Service through the IPv6 endpoint. It doesn't explain the entire Amazon Time Sync Service configuration process.\nThe IPv6 endpoint is only accessible on Nitro-based instances.\nNote\nWe don't recommend using both the IPv4 and IPv6 endpoint entries together. The IPv4 and IPv6 NTP packets come from the same local server for your instance. Configuring both IPv4 and IPv6 endpoints is unnecessary and will not improve the accuracy of the time on your instance.\nUse the instructions for your instance's operating system.\nLinux\nWindows\nConnect to the PTP hardware clock\nThe PTP hardware clock is part of the AWS Nitro System, so it is directly accessible on supported bare metal and virtualized EC2 instances without using any customer resources.\nThe NTP endpoints for the PTP hardware clock are the same as those for the regular Amazon Time Sync Service. If your instance has a PTP hardware clock and you configured the NTP connection (to either the IPv4 or IPv6 endpoint), your instance time is automatically sourced from the PTP hardware clock over NTP.\nFor Linux instances, you can configure a direct PTP connection, which will give you more accurate time than the NTP connection. Windows instances only support an NTP connection to the PTP hardware clock.\nRequirements\nThe PTP hardware clock is available on an instance when the following requirements are met:\nSupported AWS Regions: US East (N. Virginia), US East (Ohio), Asia Pacific (Malaysia), Asia Pacific (Tokyo), and Europe (Stockholm)\nSupported instance families:\nGeneral purpose: M7a, M7g, M7gd, M7i, M8g\nCompute optimized: C7a, C7gd, C7i, C8g\nMemory optimized: R7a, R7g, R7gd, R7i, R8g, X8g\n(Linux only) ENA driver version 2.10.0 or later installed on a supported operating system. For more information about supported operating systems, see the driver prerequisites on GitHub.\n(Linux only) Configure a direct PTP connection to the PTP hardware clock"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configure-time-sync.html",
        "content": "You can set your instance, or any internet-connected device such as your local computer or an on-prem server, to use the public Amazon Time Sync Service, which is accessible over the internet at time.aws.com. You can use the public Amazon Time Sync Service as a backup for the local Amazon Time Sync Service and to connect resources outside of AWS to the Amazon Time Sync Service.\nNote\nFor the best performance, we recommend using the local Amazon Time Sync Service on your instances, and only using the public Amazon Time Sync Service as a backup.\nUse the instructions for the operating system of your instance or device.\nLinux\nmacOS\nWindows"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/compare-timestamps-with-clockbound.html",
        "content": "If you're using the Amazon Time Sync Service, you can compare the timestamps on your Amazon EC2 Linux instances with ClockBound to determine the true time of an event. ClockBound measures the clock accuracy of your EC2 instance, and allows you to check if a given timestamp is in the past or future with respect to your instance's current clock. This information is valuable for determining the order and consistency of events and transactions across EC2 instances, independent of each instance's geographic location.\nClockBound is an open source daemon and library. To learn more about ClockBound, including installation instructions, see ClockBound on GitHub.\nClockBound is only supported for Linux instances.\nIf you're using the direct PTP connection to the PTP hardware clock, your time daemon, such as chrony, will underestimate the clock error bound. This is because a PTP hardware clock does not pass the correct error bound information to chrony, the way that NTP does. As a result, your clock synchronization daemon assumes the clock is accurate to UTC and thus has an error bound of 0. To measure the full error bound, the Nitro System calculates the error bound of the PTP hardware clock, and makes it available to your EC2 instance over the ENA driver sysfs filesystem. You can read this directly as a value, in nanoseconds.\nTo retrieve the PTP hardware clock error bound\nFirst get the correct location of the PTP hardware clock device by using one of the following commands. The path in the command is different depending on the AMI used to launch the instance.\nFor Amazon Linux 2:\ncat /sys/class/net/eth0/device/uevent | grep PCI_SLOT_NAME\nFor Amazon Linux 2023:\ncat /sys/class/net/ens5/device/uevent | grep PCI_SLOT_NAME\nThe output is the PCI slot name, which is the location of the PTP hardware clock device. In this example, the location is 0000:00:03.0.\nPCI_SLOT_NAME=0000:00:03.0\nTo retrieve the PTP hardware clock error bound, run the following command. Include the PCI slot name from the previous step.\ncat /sys/bus/pci/devices/0000:00:03.0/phc_error_bound\nThe output is the clock error bound of the PTP hardware clock, in nanoseconds.\nTo calculate the correct clock error bound at a specific point in time when using the direct PTP connection to the PTP hardware clock, you must add the clock error bound from chrony or ClockBound at the time that chrony polls the PTP hardware clock. For more information about measuring and monitoring clock accuracy, see Manage Amazon EC2 instance clock accuracy using Amazon Time Sync Service and Amazon CloudWatch \u2013 Part 1."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/change-time-zone-of-instance.html",
        "content": "Amazon EC2 instances are set to the UTC (Coordinated Universal Time) time zone by default. You can change the time on an instance to the local time zone or to another time zone in your network.\nUse the instructions for your instance's operating system.\nLinux\nWindows"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-device-drivers.html",
        "content": "Device drivers are software components that communicate with the virtualized hardware for your Amazon EC2 instance. To prevent system errors, performance issues, and other unexpected behavior, it's important to keep your drivers up-to-date. That's especially true for drivers that can have a strong impact on system performance depending on your usage, such as networking, graphics, and storage device drivers. New driver releases can include defect fixes or introduce expanded functionality that you might want to take advantage of for instances that are currently running.\nNetwork drivers\nLinux distributions can incorporate networking features like Elastic Network Adapter (ENA) or Elastic Fabric Adapter (EFA) within the kernel. However, the timing may vary for implementation of kernel driver features within the different distributions.\nENA and EFA Linux kernel drivers are available from the Amazon Drivers GitHub repository. For more information and links to the available drivers, see Amazon Drivers on GitHub.\nFor more information about ENA drivers, see Enable enhanced networking with ENA on your EC2 instances. For more information about EFA drivers, see Getting started topics in the Elastic Fabric Adapter for AI/ML and HPC workloads on Amazon EC2 section of this guide.\nTo install or update networking drivers on Windows instances, see the following topics:\nInstall the ENA driver on Windows\nInstall the latest AWS PV drivers\nFor more information, see Paravirtual drivers for Windows instances.\nNote\nEFA is not supported on Windows instances.\nGraphics drivers\nTo install or update graphics drivers, see the following topics:\nAMD drivers for your EC2 instance\nNVIDIA drivers for your Amazon EC2 instance\nStorage device drivers\nTo install or update storage drivers, see the following topics:\nFor Linux instances, see Install or upgrade the NVMe driver in the Amazon EBS User Guide.\nFor Windows instances, see AWS NVMe drivers."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/install-amd-driver.html",
        "content": "An instance with an attached AMD GPU, such as a G4ad instance, must have the appropriate AMD driver installed. Depending on your requirements, you can either use an AMI with the driver preinstalled or download a driver from Amazon S3.\nTo install NVIDIA drivers on an instance with an attached NVIDIA GPU, such as a G4dn instance, see NVIDIA drivers instead.\nContents\nAMD Radeon Pro Software for Enterprise Driver\nAMIs with the AMD driver installed\nAMD driver download\nAMD Radeon Pro Software for Enterprise Driver\nThe AMD Radeon Pro Software for Enterprise Driver is built to deliver support for professional-grade graphics use cases. Using the driver, you can configure your instances with two 4K displays per GPU.\nSupported APIs\nOpenGL, OpenCL\nVulkan\nAMD Advanced Media Framework\nVideo Acceleration API\nDirectX 9 and later\nMicrosoft Hardware Media Foundation Transform\nAMIs with the AMD driver installed\nAWS offers different Amazon Machine Images (AMIs) that come with the AMD drivers installed. Open Marketplace offerings with the AMD driver.\nAMD driver download\nIf you aren't using an AMI with the AMD driver installed, you can download the AMD driver and install it on your instance. Only the following operating system versions support AMD drivers:\nAmazon Linux 2 with kernel version 4.14\nNote\nAMD driver version amdgpu-pro-20.20-1184451 and newer driver releases require kernel version 5.15 or higher.\nWindows Server 2016\nWindows Server 2019\nWindows Server 2022\nThese downloads are available to AWS customers only. By downloading, you agree to use the downloaded software only to develop AMIs for use with the AMD Radeon Pro V520 hardware. Upon installation of the software, you are bound by the terms of the AMD Software End User License Agreement.\nInstall the AMD driver on your Linux instance\nInstall the AMD driver on your Windows instance"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/install-nvidia-driver.html",
        "content": "An instance with an attached NVIDIA GPU, such as a P3 or G4dn instance, must have the appropriate NVIDIA driver installed. Depending on the instance type, you can either download a public NVIDIA driver, download a driver from Amazon S3 that is available only to AWS customers, or use an AMI with the driver pre-installed.\nTo install AMD drivers on an instance with an attached AMD GPU, such as a G4ad instance, see AMD drivers instead.\nContents\nTypes of NVIDIA drivers\nAvailable drivers by instance type\nInstallation options\nOption 1: AMIs with NVIDIA drivers installed\nOption 2: Public NVIDIA drivers\nOption 3: GRID drivers (G6, Gr6, G6e, G5, G4dn, and G3 instances)\nOption 4: NVIDIA gaming drivers (G5 and G4dn instances)\nInstall an additional version of CUDA\nTypes of NVIDIA drivers\nThe following are the main types of NVIDIA drivers that can be used with GPU-based instances.\nTesla drivers\nThese drivers are intended primarily for compute workloads, which use GPUs for computational tasks such as parallelized floating-point calculations for machine learning and fast Fourier transforms for high performance computing applications.\nGRID drivers\nThese drivers are certified to provide optimal performance for professional visualization applications that render content such as 3D models or high-resolution videos. You can configure GRID drivers to support two modes. Quadro Virtual Workstations provide access to four 4K displays per GPU. GRID vApps provide RDSH App hosting capabilities.\nGaming drivers\nThese drivers contain optimizations for gaming and are updated frequently to provide performance enhancements. They support a single 4K display per GPU.\nConfigured mode\nOn Windows, the Tesla drivers are configured to run in Tesla Compute Cluster (TCC) mode. The GRID and gaming drivers are configured to run in Windows Display Driver Model (WDDM) mode. In TCC mode, the card is dedicated to compute workloads. In WDDM mode, the card supports both compute and graphics workloads.\nNVIDIA control panel\nThe NVIDIA control panel is supported with GRID and Gaming drivers. It is not supported with Tesla drivers.\nSupported APIs for Tesla, GRID, and gaming drivers\nOpenCL, OpenGL, and Vulkan\nNVIDIA CUDA and related libraries (for example, cuDNN, TensorRT, nvJPEG, and cuBLAS)\nNVENC for video encoding and NVDEC for video decoding\nWindows-only APIs: DirectX, Direct2D, DirectX Video Acceleration, DirectX Raytracing\nAvailable drivers by instance type\nThe following table summarizes the supported NVIDIA drivers for each GPU instance type.\nInstance type Tesla driver GRID driver Gaming driver\nG3 Yes Yes No\nG4dn Yes Yes Yes\nG5 Yes Yes Yes\nG5g Yes \u00b9 No No\nG6 Yes Yes No\nG6e Yes Yes No\nGr6 Yes Yes No\nP2 Yes No No\nP3 Yes No No\nP4d Yes No No\nP4de Yes No No\nP5 Yes No No\nP5e Yes No No\nP5en Yes No No\n\u00b9 This Tesla driver also supports optimized graphics applications specific to the ARM64 platform\n\u00b2 Using Marketplace AMIs only\nInstallation options\nUse one of the following options to get the NVIDIA drivers required for your GPU instance.\nOptions\nOption 1: AMIs with NVIDIA drivers installed\nOption 2: Public NVIDIA drivers\nOption 3: GRID drivers (G6, Gr6, G6e, G5, G4dn, and G3 instances)\nOption 4: NVIDIA gaming drivers (G5 and G4dn instances)\nOption 1: AMIs with NVIDIA drivers installed\nAWS and NVIDIA offer different Amazon Machine Images (AMIs) that come with the NVIDIA drivers installed.\nMarketplace offerings with the Tesla driver\nMarketplace offerings with the GRID driver\nMarketplace offerings with the Gaming driver\nTo review considerations that are dependent on your operating system (OS) platform, choose the tab that applies to your AMI.\nLinux\nWindows\nTo update the driver version installed using one of these AMIs, you must uninstall the NVIDIA packages from your instance to avoid version conflicts. Use this command to uninstall the NVIDIA packages:\n[ec2-user ~]$ sudo yum erase nvidia cuda\nThe CUDA toolkit package has dependencies on the NVIDIA drivers. Uninstalling the NVIDIA packages erases the CUDA toolkit. You must reinstall the CUDA toolkit after installing the NVIDIA driver.\nOption 2: Public NVIDIA drivers\nThe options offered by AWS come with the necessary license for the driver. Alternatively, you can install the public drivers and bring your own license. To install a public driver, download it from the NVIDIA site as described here.\nAlternatively, you can use the options offered by AWS instead of the public drivers. To use a GRID driver on a P3 instance, use the AWS Marketplace AMIs as described in Option 1. To use a GRID driver on a G6, G6e, Gr6, G5, G4dn, or G3 instance, use the AWS Marketplace AMIs as described in Option 1 or install the NVIDIA drivers provided by AWS as described in Option 3: GRID drivers (G6, Gr6, G6e, G5, G4dn, and G3 instances).\nTo download a public NVIDIA driver\nLog on to your instance and download the 64-bit NVIDIA driver appropriate for the instance type from http://www.nvidia.com/Download/Find.aspx. For Product Type, Product Series, and Product, use the options in the following table.\nInstance Product type Product series Product Minimum driver version\nG3 Tesla M-Class M60 --\nG4dn Tesla T-Series T4 --\nG5 Tesla A-Series A10 470.00 or later\nG5g 1 Tesla T-Series NVIDIA T4G 470.82.01 or later\nG6 Tesla L-Series L4 525.0 or later\nG6e Tesla L-Series L40S 535.0 or later\nGr6 Tesla L-Series L4 525.0 or later\nP2 Tesla K-Series K80 --\nP3 Tesla V-Series V100 --\nP4d Tesla A-Series A100 --\nP4de Tesla A-Series A100 --\nP5 Tesla H-Series H100 530 or later\nP5e Tesla H-Series H200 550 or later\nP5en Tesla H-Series H200 550 or later\n1 The operating system for G5g instances is Linux aarch64.\nTo install the NVIDIA driver on Linux operating systems, see the NVIDIA Driver Installation Quickstart Guide.\nTo install the NVIDIA driver on Windows, follow these steps:\nOpen the folder where you downloaded the driver and launch the installation file. Follow the instructions to install the driver and reboot your instance as required.\nDisable the display adapter named Microsoft Basic Display Adapter that is marked with a warning icon using Device Manager. Install these Windows features: Media Foundation and Quality Windows Audio Video Experience.\nImportant\nDon't disable the display adapter named Microsoft Remote Display Adapter. If Microsoft Remote Display Adapter is disabled your connection might be interrupted and attempts to connect to the instance after it has rebooted might fail.\nCheck Device Manager to verify that the GPU is working correctly.\nTo achieve the best performance from your GPU, complete the optimization steps in Optimize GPU settings on Amazon EC2 instances.\nOption 3: GRID drivers (G6, Gr6, G6e, G5, G4dn, and G3 instances)\nThese downloads are available to AWS customers only. By downloading, in order to adhere to requirements of the AWS solution referred to in the NVIDIA GRID Cloud End User License Agreement (EULA), you agree to use the downloaded software only to develop AMIs for use with the NVIDIA L4, NVIDIA A10G, NVIDIA Tesla T4, or NVIDIA Tesla M60 hardware. Upon installation of the software, you are bound by the terms of the NVIDIA GRID Cloud End User License Agreement. For information about the version of the NVIDIA GRID driver for your operating system, see the NVIDIA Virtual GPU (vGPU) Software on the NVIDIA website.\nConsiderations\nG6 and Gr6 instances require GRID 17.1 or later.\nG6e instances require GRID 17.4 or later.\nG5 instances require GRID 13.1 or later (or GRID 12.4 or later).\nG3 instances require AWS provided DNS resolution for GRID licensing to work.\nIMDSv2 is only supported with NVIDIA driver version 14.0 or greater.\nFor Windows instances, if you launch your instance from a custom Windows AMI, the AMI must be a standardized image created with Windows Sysprep to ensure that the GRID driver works. For more information, see Create an Amazon EC2 AMI using Windows Sysprep.\nGRID 17.0 and later do not support Windows Server 2019.\nGRID 14.2 and later do not support Windows Server 2016.\nGRID 17.0 and later is not supported with G3 instances.\nAmazon Linux and Amazon Linux 2\nCentOS 7 and Red Hat Enterprise Linux 7\nCentOS Stream 8 and Red Hat Enterprise Linux 8\nRocky Linux 8\nUbuntu and Debian\nWindows operating systems\nOption 4: NVIDIA gaming drivers (G5 and G4dn instances)\nThese drivers are available to AWS customers only. By downloading them, you agree to use the downloaded software only to develop AMIs for use with the NVIDIA A10G, and NVIDIA Tesla T4 hardware. Upon installation of the software, you are bound by the terms of the NVIDIA GRID Cloud End User License Agreement.\nConsiderations\nG3 instances require AWS provided DNS resolution for GRID licensing to work.\nIMDSv2 is only supported with NVIDIA driver version 495.x or greater.\nPrerequisite\nBefore you install the NVIDIA gaming drivers, verify that you have the AWS CLI installed on your instance and have configured default credentials. For more information, see Installing the AWS CLI in the AWS Command Line Interface User Guide.\nImportant\nYour user or role must have the permissions granted that contains the AmazonS3ReadOnlyAccess policy. For more information, see AWS managed policy: AmazonS3ReadOnlyAccess in the Amazon Simple Storage Service User Guide.\nAmazon Linux and Amazon Linux 2\nCentOS 7 and Red Hat Enterprise Linux 7\nCentOS Stream 8 and Red Hat Enterprise Linux 8\nRocky Linux 8\nUbuntu and Debian\nWindows operating systems\nInstall an additional version of CUDA\nAfter you install an NVIDIA graphics driver on your instance, you can install a version of CUDA other than the version that is bundled with the graphics driver. The following procedure demonstrates how to configure multiple versions of CUDA on the instance.\nInstall the CUDA toolkit on Linux\nFollow these steps to install the CUDA toolkit on Linux:\nConnect to your Linux instance.\nOpen the NVIDIA website and select the version of CUDA that you need.\nSelect the architecture, distribution, and version for the operating system on your instance. For Installer Type, select runfile (local).\nFollow the instructions to download the install script.\nAdd run permissions to the install script that you downloaded using the following command.\n[ec2-user ~]$ chmod +x downloaded_installer_file\nRun the install script as follows to install the CUDA toolkit and add the CUDA version number to the toolkit path.\n[ec2-user ~]$ sudo sh downloaded_installer_file --silent --override --toolkit --samples --toolkitpath=/usr/local/cuda-version --samplespath=/usr/local/cuda --no-opengl-libs\n(Optional) Set the default CUDA version as follows.\n[ec2-user ~]$ sudo ln -s /usr/local/cuda-version /usr/local/cuda\nInstall the CUDA toolkit on Windows"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ena-adapter-driver-install-upgrade-win.html",
        "content": "If your instance isn't based on one of the latest Windows Amazon Machine Images (AMIs) that Amazon provides, use the following procedure to install the current ENA driver on your instance. You should perform this update at a time when it\u2019s convenient to reboot your instance. If the install script doesn\u2019t automatically reboot your instance, we recommend that you reboot the instance as the final step.\nIf you use an instance store volume to store data while the instance is running, that data is erased when you stop the instance. Before you stop your instance, verify that you've copied any data that you need from your instance store volumes to persistent storage, such as Amazon EBS or Amazon S3.\nPrerequisites\nTo install or upgrade the ENA driver, your Windows instance must meet the following prerequisites:\nHave PowerShell version 3.0 or later installed\nStep 1: Back up your data\nWe recommend that you create a backup AMI, in case you're not able to roll back your changes through the Device Manager. To create a backup AMI with the AWS Management Console, follow these steps:\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance that requires the driver upgrade, and choose Stop instance from the Instance state menu.\nAfter the instance is stopped, select the instance again. To create your backup, choose Image and templates from the Actions menu, then choose Create image.\nTo restart your instance, choose Start instance from the Instance state menu.\nStep 2: Install or upgrade your ENA driver\nYou can install or upgrade your ENA driver with AWS Systems Manager Distributor, or with PowerShell cmdlets. For further instructions, select the tab that matches the method that you want to use.\nSystems Manager Distributor\nPowerShell\nYou can use the Systems Manager Distributor feature to deploy packages to your Systems Manager managed nodes. With Systems Manager Distributor, you can install the ENA driver package once, or with scheduled updates. For more information about how to install the ENA driver package (AwsEnaNetworkDriver) with Systems Manager Distributor, see Install or update packages in the AWS Systems Manager User Guide.\nStep 3 (optional): Verify the ENA driver version after installation\nTo ensure that the ENA driver package was successfully installed on your instance, you can verify the new version as follows:\nConnect to your instance and log in as the local administrator.\nTo open the Windows Device Manager, enter devmgmt.msc in the Run box.\nChoose OK. This opens the Device Manager window.\nSelect the arrow to the left of Network adapters to expand the list.\nChoose the name, or open the context menu for the Amazon Elastic Network Adapter, and then choose Properties. This opens the Amazon Elastic Network Adapter Properties dialog.\nNote\nENA adapters all use the same driver. If you have multiple ENA adapters, you can select any one of them to update the driver for all of the ENA adapters.\nTo verify the current version that's installed, open the Driver tab and check the Driver Version. If the current version doesn't match your target version, see Troubleshoot the Elastic Network Adapter Windows driver.\nRoll back an ENA driver installation\nIf anything goes wrong with the installation, you might need to roll back the driver. Follow these steps to roll back to the previous version of the ENA driver that was installed on your instance.\nConnect to your instance and log in as the local administrator.\nTo open the Windows Device Manager, enter devmgmt.msc in the Run box.\nChoose OK. This opens the Device Manager window.\nSelect the arrow to the left of Network adapters to expand the list.\nChoose the name, or open the context menu for the Amazon Elastic Network Adapter, and then choose Properties. This opens the Amazon Elastic Network Adapter Properties dialog.\nNote\nENA adapters all use the same driver. If you have multiple ENA adapters, you can select any one of them to update the driver for all of the ENA adapters.\nTo roll back the driver, open the Driver tab and choose Roll Back Driver. This opens the Driver Package rollback window.\nNote\nIf the Driver tab doesn't show the Roll Back Driver action, or if the action is unavailable, it means that the Driver Store on your instance doesn't contain the previously installed driver package. To troubleshoot this issue, see Troubleshooting scenarios, and expand the Unexpected ENA driver version installed section. For more information about the device driver package selection process, see How Windows selects a driver package for a device on the Microsoft documentation website."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ena-driver-releases-windows.html",
        "content": "Windows AMIs include the ENA Windows driver to enable enhanced networking.\nFor Windows Server versions 2016 and above, we recommend that you use the latest driver version. For earlier versions of Windows Server, refer to the following table to determine which ENA driver version to use.\nWindows Server version ENA driver version\nWindows Server 2012 R2 2.6.0 and earlier\nWindows Server 2012 2.6.0 and earlier\nWindows Server 2008 R2 2.2.3 and earlier\nENA Windows driver version history\nThe following table summarizes the changes for each release.\nDriver version Details Release date\n2.9.0\nNew Features\nAdded support for asynchronous reset requests initiated by the device.\nAdded support for handling the maximum large LLQ depth value provided by the device.\nAdded Event ID 58001 in the Windows Event Viewer to enhance visibility into unexpected power state transitions caused by device misconfiguration.\nBug Fixes\nFixed improper handling of memory allocation failures during device initialization to prevent unexpected reboots.\nFixed an issue in the interrupt service routine that could enqueue a DPC during device stop, preventing unexpected reboots.\nDecember 12, 2024\n2.8.0\nBug Fixes\nFixed a race condition in the complete flow of egress network buffer list (NBL) processing, which could lead to memory corruption caused by attempting to release an NBL that was already released.\nFixed misdetection of L3 protocol when disabling all LSO and checksum offloads that could lead to unexpected behavior.\nSeptember 30, 2024\n2.7.0\nNew Features\nRemoved support for Windows Server 2012 (Windows 8) and Windows Server 2012 R2 (Windows 8.1). These operating system versions have reached the end of support from AWS. Driver install will fail on Windows Server 2012 and earlier.\nAdded support for offloading IPv6 Tx checksum calculation to the device.\nAdded wide Low Latency Queuing (LLQ) support. This is dynamically enabled based on device recommendation. You can override this setting with the new \"WideLLQ\" registry key.\nAdded reporting for packet drops resulting from Rx overrun, which indicates insufficient space in the Rx ring for incoming packets.\nAdded support for suboptimal configuration notifications from the device. See event ID 59000 in the Windows event viewer.\nBug Fixes\nAvoid unnecessary device reset caused by Tx packets with headers that exceed the maximum Low Latency Queuing (LLQ) header size.\nMay 1, 2024\n2.6.0\nNew Features\nAdds the following network performance metrics for instance types that support ENA Express.\nena_srd_mode\nena_srd_tx_pkts\nena_srd_eligible_tx_pkts\nena_srd_rx_pkts\nena_srd_resource_utilization\nAdds conntrack_allowance_available network performance metric for Nitro based instance types.\nAdds new adapter reset reason due to detection of RX data corruption.\nUpdates driver logging infrastructure.\nBug Fixes\nPrevents adapter reset in the event that CPU starvation causes a network performance metrics update to fail.\nPrevents false detection of an interruption to the device heartbeat.\nFixes driver installation script to support downgrade operation.\nFixes the receive error count statistic.\nJune 20, 2023\n2.5.0\nAnnouncement\nENA Windows driver version 2.5.0 has been rolled back due to failure to initialize on the Windows domain controller. Windows Client and Windows Server are unaffected.\nFebruary 17, 2023\n2.4.0\nNew Features\nAdds support for Windows Server 2022.\nRemoves support for Windows Server 2008 R2.\nSets Low Latency Queuing (LLQ) to always on to improve performance on sixth generation Amazon EC2 instances.\nBug Fix\nFixes a failure to publish network performance metrics to the Performance Counters for Windows (PCW) system.\nFixes a memory leak during the registry key reading operation.\nPrevents an infinite reset loop in the event of an unrecoverable error during the adapter reset process.\nApril 28, 2022\n2.2.4\nAnnouncement\nENA Windows driver version 2.2.4 has been rolled back due to potential performance degradation on the sixth generation EC2 instances. We recommend that you downgrade the driver, using one of the following methods:\nInstall the previous version\nDownload the previous version package from the link in this table (version 2.2.3).\nRun the install.ps1 PowerShell installation script.\nFor more details for pre- and post-installation steps see Enable enhanced networking on Windows.\nUse Amazon EC2 Systems Manager for a bulk update\nPerform a bulk update via SSM document AWS-ConfigureAWSPackage, with the following parameters:\nName: AwsEnaNetworkDriver\nVersion: 2.2.3\nOctober 26, 2021\n2.2.3\nNew Feature\nAdds support for new Nitro cards with up to 400 Gbps instance networking.\nBug Fix\nFixes race condition between system time change and system time query by the ENA driver, which causes false-positive detection of HW unresponsiveness.\nWindows ENA driver version 2.2.3 is the final version that supports Windows Server 2008 R2. Currently available instance types that use ENA will continue to be supported on Windows Server 2008 R2, and the drivers are available by download. No future instance types will support Windows Server 2008 R2, and you cannot launch, import, or migrate Windows Server 2008 R2 images to future instance types.\nMarch 25, 2021\n2.2.2\nNew Feature\nAdds support to query network adapter performance metrics with CloudWatch and the Performance Counters for Windows consumers.\nBug Fix\nFixes performance issues on bare metal instances.\nDecember 21, 2020\n2.2.1\nNew Feature\nAdds a method to allow the host to query the Elastic Network Adapter for network performance metrics.\nOctober 1, 2020\n2.2.0\nNew Features\nAdds support for next generation hardware types.\nImproves instance start time after resuming from stop-hibernate, and eliminates false positive ENA error messages.\nPerformance Optimizations\nOptimizes processing of inbound traffic.\nImproves shared memory management in low resource environment.\nBug Fix\nAvoids system crash upon ENA device removal in rare scenario where driver fails to reset.\nAugust 12, 2020\n2.1.5\nBug Fix\nFixes occasional network adapter initialization failure on bare metal instances.\nJune 23, 2020\n2.1.4\nBug Fixes\nPrevent connectivity issues caused by corrupted LSO packet metadata arriving from the network stack.\nPrevent system crash caused by a rare race condition that results in accessing an already released packet memory.\nNovember 25, 2019\n2.1.2\nNew Feature\nAdded support for vendor ID report to allow OS to generate MAC-based UUIDs.\nBug Fixes\nImproved DHCP network configuration performance during initialization.\nProperly calculate L4 checksum on inbound IPv6 traffic when the maximum transmission unit (MTU) exceeds 4K.\nGeneral improvements to driver stability and minor bug fixes.\nNovember 4, 2019\n2.1.1\nBug Fixes\nPrevent drops of highly fragmented TCP LSO packets arriving from operating system.\nProperly handle Encapsulating Security Payload (ESP) protocol within the IPSec in IPv6 networks.\nSeptember 16, 2019\n2.1.0\nENA Windows driver v2.1 introduces new ENA device capabilities, provides a performance boost, adds new features, and includes multiple stability improvements.\nNew features\nUse standardized Windows registry key for Jumbo frames configuration.\nAllow VLAN ID setting via the ENA driver properties GUI.\nImproved Recovery flows\nImproved failure identification mechanism.\nAdded support for tunable recovery parameters.\nSupport up to 32 I/O queues for newer EC2 instances that have more than 8 vCPUs.\n~90% reduction of driver memory footprint.\nPerformance optimizations\nReduced transmit path latency.\nSupport for receive checksum offload.\nPerformance optimization for heavily loaded system (optimized usage of locking mechanisms).\nFurther enhancements to reduce CPU utilization and improve system responsiveness under load.\nBug Fixes\nFix crash due to invalid parsing of non-contiguous Tx headers.\nFix driver v1.5 crash during the elastic network interface detach on Bare Metal instances.\nFix LSO pseudo-header checksum calculation error over IPv6.\nFix potential memory resource leak upon initialization failure.\nDisable TCP/UDP checksum offload for IPv4 fragments.\nFix for VLAN configuration. VLAN was incorrectly disabled when only VLAN priority should have been disabled.\nEnable correct parsing of custom driver messages by the event viewer.\nFix failure to initialize driver due to invalid timestamp handling.\nFix race condition between data processing and ENA device disabling.\nJuly 1, 2019\n1.5.0\nImproved stability and performance fixes.\nReceive Buffers can now be configured up to a value of 8192 in Advanced Properties of the ENA NIC.\nDefault Receive Buffers of 1k.\nOctober 4, 2018\n1.2.3\nIncludes reliability fixes and unifies support for Windows Server 2008 R2 through Windows Server 2016.\nFebruary 13, 2018\n1.0.8\nThe initial release. Included in AMIs for Windows Server 2008 R2, Windows Server 2012 RTM, Windows Server 2012 R2, and Windows Server 2016.\nJuly 2016\nSubscribe to ENA Windows driver release notifications from Amazon SNS\nAmazon SNS can notify you when new versions of EC2 Windows Drivers are released. Use the following procedure to subscribe to these notifications.\nSubscribe to EC2 notifications\nOpen the Amazon SNS console at https://console.aws.amazon.com/sns/v3/home.\nIn the navigation bar, change the Region to US East (N. Virginia), if necessary. You must select this Region because the SNS notifications that you are subscribing to are in this Region.\nIn the navigation pane, choose Subscriptions.\nChoose Create subscription.\nIn the Create subscription dialog box, do the following:\nFor TopicARN, copy the following Amazon Resource Name (ARN):\narn:aws:sns:us-east-1:801119661308:ec2-windows-drivers\nFor Protocol, choose Email.\nFor Endpoint, enter an email address where you want notifications sent.\nChoose Create subscription.\nYou'll receive a confirmation email. Open the email and follow the directions to complete your subscription.\nWhenever new EC2 Windows drivers are released, we send notifications to subscribers. If you no longer want to receive these notifications, use the following procedure to unsubscribe.\nUnsubscribe from Amazon EC2 Windows driver notification\nOpen the Amazon SNS console at https://console.aws.amazon.com/sns/v3/home.\nIn the navigation pane, choose Subscriptions.\nSelect the checkbox for the subscription and then choose Actions, Delete subscriptions. When prompted for confirmation, choose Delete."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/xen-drivers-overview.html",
        "content": "Windows AMIs contain a set of drivers to permit access to virtualized hardware. These drivers are used by Amazon EC2 to map instance store and Amazon EBS volumes to their devices. The following table shows key differences between the different drivers.\nRed Hat PV Citrix PV AWS PV\nInstance type\nNot supported for all instance types. If you specify an unsupported instance type, the instance is impaired.\nSupported for Xen instance types.\nSupported for Xen instance types.\nAttached volumes\nSupports up to 16 attached volumes.\nSupports more than 16 attached volumes.\nSupports more than 16 attached volumes.\nNetwork\nThe driver has known issues where the network connection resets under high loads; for example, fast FTP file transfers.\nThe driver automatically configures jumbo frames on the network adapter when on a compatible instance type. When the instance is in a cluster placement group, this offers better network performance between instances that are in the cluster placement group. For more information, see Placement groups for your Amazon EC2 instances.\nThe following table shows which PV drivers you should run on each version of Windows Server on Amazon EC2.\nWindows Server version PV driver version\nWindows Server 2022 AWS PV latest version\nWindows Server 2019 AWS PV latest version\nWindows Server 2016 AWS PV latest version\nWindows Server 2012 R2 AWS PV version 8.4.3\nWindows Server 2012 AWS PV version 8.4.3\nWindows Server 2008 R2 AWS PV version 8.3.5\nWindows Server 2008 Citrix PV 5.9\nWindows Server 2003 Citrix PV 5.9\nContents\nAWS PV drivers\nCitrix PV drivers\nRed Hat PV drivers\nSubscribe to notifications\nUpgrade PV drivers on EC2 Windows instances\nTroubleshoot PV drivers on Windows instances\nAWS PV drivers\nThe AWS PV drivers are stored in the %ProgramFiles%\\Amazon\\Xentools directory. This directory also contains public symbols and a command line tool, xenstore_client.exe, that enables you to access entries in XenStore. For example, the following PowerShell command returns the current time from the Hypervisor:\nPS C:\\> [DateTime]::FromFileTimeUTC((gwmi -n root\\wmi -cl AWSXenStoreBase).XenTime).ToString(\"hh:mm:ss\")\n11:17:00\nThe AWS PV driver components are listed in the Windows registry under HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services. These driver components are as follows: xenbus, xeniface, xennet, xenvbd, and xenvif.\nAWS PV drivers also have a Windows service named LiteAgent, which runs in user-mode. It handles tasks such as shutdown and restart events from AWS APIs on Xen generation instances. You can access and manage services by running Services.msc from the command line. When running on Nitro generation instances, the AWS PV drivers are not used and the LiteAgent service will self-stop starting with driver version 8.2.4. Updating to the latest AWS PV driver also updates the LiteAgent and improves reliability on all instance generations.\nInstall the latest AWS PV drivers\nAmazon Windows AMIs contain a set of drivers to permit access to virtualized hardware. These drivers are used by Amazon EC2 to map instance store and Amazon EBS volumes to their devices. We recommend that you install the latest drivers to improve stability and performance of your EC2 Windows instances.\nInstallation options\nYou can use AWS Systems Manager to automatically update the PV drivers. For more information, see Walkthrough: Automatically Update PV Drivers on EC2 Windows Instances in the AWS Systems Manager User Guide.\nYou can download the driver package and run the install program manually. Be sure to check the readme.txt file for system requirements. For information about downloading and installing the AWS PV drivers, or upgrading a domain controller, see Upgrade Windows Server instances (AWS PV upgrade) manually.\nAWS PV driver package history\nThe following table shows the changes to AWS PV drivers for each driver release.\nPackage version Details Release date\n8.5.0\nStability fixes to address rare cases of crashes during network device detachment.\nStability fixes to address rare cases of crashes during EBS volume detachment.\nAWS PV 8.5.0 installation on Windows Server 2012 R2 and older OS versions will fail.\nFixed bugs in the package installer.\nUpdated the PV installer to use Pnputil.\n31 October 2024\n8.4.3\nFixed bugs in the package installer to improve the upgrade experience. 24 January 2023\n8.4.2\nStability fixes to address race condition. 13 April 2022\n8.4.1\nImproved package installer. 7 January 2022\n8.4.0\nStability fixes to address rare cases of stuck disk IO.\nStability fixes to address rare cases of crashes during EBS volume detachment.\nAdded feature to distribute load across multiple cores for workloads that leverage more than 20,000 IOPS and experience degradation due to bottlenecks. To enable this feature, see Workloads that leverage more than 20,000 disk IOPS experience degradation due to CPU bottlenecks.\nAWS PV 8.4 installation on Windows Server 2008 R2 will fail. AWS PV version 8.3.5 and earlier are supported on Windows Server 2008 R2.\n2 March 2021\n8.3.5\nImproved package installer.\n7 January 2022\n8.3.4\nImproved reliability of network device attachment. 4 August 2020\n8.3.3\nUpdate to XenStore-facing component to prevent bug check during error-handling paths.\nUpdate to storage component to avoid crashes when an invalid SRB is submitted.\nTo update this driver on Windows Server 2008 R2 instances, you must first verify that the appropriate patches are installed to address the following Microsoft Security Advisory: Microsoft Security Advisory 3033929.\n4 February 2020\n8.3.2\nEnhanced reliability of networking components.\n30 July 2019\n8.3.1\nImproved performance and robustness of storage component.\n12 June 2019\n8.2.7\nImproved efficiency to support migrating to latest generation instance types.\n20 May 2019\n8.2.6\nImproved efficiency of crash dump path.\n15 January 2019\n8.2.5\nAdditional security enhancements.\nPowerShell installer now available in package.\n12 December 2018\n8.2.4\nReliability improvements.\n2 October 2018\n8.2.3\nBug fixes and performance improvements.\nReport EBS volume ID as disk serial number for EBS volumes. This enables cluster scenarios such as S2D.\n29 May 2018\n8.2.1\nNetwork and storage performance improvements plus multiple robustness fixes.\nTo verify that this version has been installed, refer to the following Windows registry value: HKLM\\Software\\Amazon\\PVDriver\\Version 8.2.1.\n8 March 2018\n7.4.3\nAdded support for Windows Server 2016.\nStability fixes for all supported Windows OS versions.\n*AWS PV driver version 7.4.3's signature expires on March 29, 2019. We recommend updating to the latest AWS PV driver.\n18 Nov 2016\n7.4.2\nStability fixes for support of X1 instance type.\n2 Aug 2016\n7.4.1\nPerformance improvement in AWS PV Storage driver.\nStability fixes in AWS PV Storage driver: Fixed an issue where the instances were hitting a system crash with bug check code 0x0000DEAD.\nStability fixes in AWS PV Network driver.\nAdded support for Windows Server 2008R2.\n12 July 2016\n7.3.2\nImproved logging and diagnostics.\nStability fix in AWS PV Storage driver. In some cases disks may not surface in Windows after reattaching the disk to the instance.\nAdded support for Windows Server 2012.\n24 June 2015\n7.3.1\nTRIM update: Fix related to TRIM requests. This fix stabilizes instances and improves instance performance when managing large numbers of TRIM requests.\n7.3.0\nTRIM support: The AWS PV driver now sends TRIM requests to the hypervisor. Ephemeral disks will properly process TRIM requests given the underlying storage supports TRIM (SSD). Note that EBS-based storage does not support TRIM as of March 2015.\n7.2.5\nStability fix in AWS PV Storage drivers: In some cases the AWS PV driver could dereference invalid memory and cause a system failure.\nStability fix while generating a crash dump: In some cases the AWS PV driver could get stuck in a race condition when writing a crash dump. Before this release, the issue could only be resolved by forcing the driver to stop and restart which lost the memory dump.\n7.2.4\nDevice ID persistence: This driver fix masks the platform PCI device ID and forces the system to always surface the same device ID, even if the instance is moved. More generally, the fix affects how the hypervisor surfaces virtual devices. The fix also includes modifications to the co-installer for the AWS PV drivers so the system persists mapped virtual devices.\n7.2.2\nLoad the AWS PV drivers in Directory Services Restore Mode (DSRM) mode: Directory Services Restore Mode is a safe mode boot option for Windows Server domain controllers.\nPersist device ID when virtual network adapter device is reattached: This fix forces the system to check the MAC address mapping and persist the device ID. This fix ensures that adapters retain their static settings if the adapters are reattached.\n7.2.1\nRun in safe mode: Fixed an issue where the driver would not load in safe mode. Previously the AWS PV Drivers would only instantiate in normal running systems.\nAdd disks to Microsoft Windows Storage Pools: Previously we synthesized page 83 queries. The fix disabled page 83 support. Note this does not affect storage pools that are used in a cluster environment because PV disks are not valid cluster disks.\n7.2.0\nBase: The AWS PV base version.\nCitrix PV drivers\nThe Citrix PV drivers are stored in the %ProgramFiles%\\Citrix\\XenTools (32-bit instances) or %ProgramFiles(x86)%\\Citrix\\XenTools (64-bit instances) directory.\nThe Citrix PV driver components are listed in the Windows registry under HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services. These driver components are as follows: xenevtchn, xeniface, xennet, Xennet6, xensvc, xenvbd, and xenvif.\nCitrix also has a driver component named XenGuestAgent, which runs as a Windows service. It handles tasks such as shutdown and restart events from the API. You can access and manage services by running Services.msc from the command line.\nIf you are encountering networking errors while performing certain workloads, you may need to disable the TCP offloading feature for the Citrix PV driver. For more information, see TCP offloading.\nRed Hat PV drivers\nRed Hat drivers are supported for legacy instances, but are not recommended on newer instances with more than 12GB of RAM due to driver limitations. Instances with more than 12GB of RAM running Red Hat drivers can fail to boot and become inaccessible. We recommend upgrading Red Hat drivers to Citrix PV drivers, and then upgrade Citrix PV drivers to AWS PV drivers.\nThe source files for the Red Hat drivers are in the %ProgramFiles%\\RedHat (32-bit instances) or %ProgramFiles(x86)%\\RedHat (64-bit instances) directory. The two drivers are rhelnet, the Red Hat Paravirtualized network driver, and rhelscsi, the Red Hat SCSI miniport driver.\nSubscribe to notifications\nAmazon SNS can notify you when new versions of EC2 Windows Drivers are released. Use one of the following methods to subscribe to these notifications.\nNote\nYou must specify the Region for the SNS Topic you subscribe to.\nSubscribe to EC2 notifications from the console\nOpen the Amazon SNS console at https://console.aws.amazon.com/sns/v3/home.\nIn the navigation bar, change the Region to US East (N. Virginia), if necessary. You must select this Region because the SNS notifications that you are subscribing to are in this Region.\nIn the navigation pane, choose Subscriptions.\nChoose Create subscription.\nIn the Create subscription dialog box, do the following:\nFor TopicARN, copy the following Amazon Resource Name (ARN):\narn:aws:sns:us-east-1:801119661308:ec2-windows-drivers\nFor Protocol, choose Email.\nFor Endpoint, type an email address that you can use to receive the notifications.\nChoose Create subscription.\nYou'll receive a confirmation email. Open the email and follow the directions to complete your subscription.\nSubscribe to EC2 notifications using the AWS CLI\nTo subscribe to EC2 notifications with the AWS CLI, use the following command.\naws sns subscribe --topic-arn arn:aws:sns:us-east-1:801119661308:ec2-windows-drivers --region us-east-1 --protocol email --notification-endpoint YourUserName@YourDomainName.ext\nSubscribe to EC2 notifications using the AWS Tools for PowerShell\nTo subscribe to EC2 notifications with Tools for Windows PowerShell, use the following command.\nConnect-SNSNotification -TopicArn 'arn:aws:sns:us-east-1:801119661308:ec2-windows-drivers' -Region us-east-1 -Protocol email -Endpoint 'YourUserName@YourDomainName.ext'\nWhenever new EC2 Windows drivers are released, we send notifications to subscribers. If you no longer want to receive these notifications, use the following procedure to unsubscribe.\nUnsubscribe from Amazon EC2 Windows driver notification\nOpen the Amazon SNS console at https://console.aws.amazon.com/sns/v3/home.\nIn the navigation pane, choose Subscriptions.\nSelect the checkbox for the subscription and then choose Actions, Delete subscriptions. When prompted for confirmation, choose Delete."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Upgrading_PV_drivers.html",
        "content": "We recommend that you install the latest PV drivers to improve the stability and performance of your EC2 Windows instances. The directions on this page help you download the driver package and run the install program.\nTo verify which driver your Windows instance uses\nOpen Network Connections in Control Panel and view Local Area Connection. Check whether the driver is one of the following:\nAWS PV Network Device\nCitrix PV Ethernet Adapter\nRed Hat PV NIC Driver\nAlternatively, you can check the output from the pnputil -e command.\nSystem requirements\nBe sure to check the readme.txt file in the download for system requirements.\nContents\nUpgrade Windows Server instances (AWS PV upgrade) with Distributor\nUpgrade Windows Server instances (AWS PV upgrade) manually\nUpgrade a domain controller (AWS PV upgrade)\nUpgrade Windows Server 2008 and 2008 R2 instances (Red Hat to Citrix PV upgrade)\nUpgrade your Citrix Xen guest agent service\nUpgrade Windows Server instances (AWS PV upgrade) with Distributor\nYou can use Distributor, a capability of AWS Systems Manager, to install or upgrade the AWS PV driver package. The installation or upgrade can be performed one time, or you can install or update it on a schedule. The In-place update option for Installation Type isn't supported for this Distributor package.\nImportant\nIf your instance is a domain controller, see Upgrade a domain controller (AWS PV upgrade). The upgrade process for domain controller instances is different than standard editions of Windows.\nWe recommend that you create a backup in case you need to roll back your changes.\nTip\nInstead of creating the AMI from the Amazon EC2 console, you can use Systems Manager Automation to create the AMI using the AWS-CreateImage runbook. For more information, see AWS-CreateImage in the AWS Systems Manager Automation runbook reference User Guide.\nWhen you stop an instance, the data on any instance store volumes is erased. Before you stop an instance, verify that you've copied any data that you need from your instance store volumes to persistent storage, such as Amazon EBS or Amazon S3.\nIn the navigation pane, choose Instances.\nSelect the instance that requires the driver upgrade, and choose Instance state, Stop instance.\nAfter the instance is stopped, select the instance, choose Actions, then Image and templates, and then choose Create image.\nChoose Instance state, Start instance.\nConnect to the instance using Remote Desktop. For more information, see Connect to your Windows instance using an RDP client.\nWe recommend that you take all non-system disks offline and note any drive letter mappings to the secondary disks in Disk Management before you perform this upgrade. This step is not required if you are performing an in-place update of AWS PV drivers. We also recommend setting non-essential services to Manual start-up in the Services console.\nFor the instructions for how to install or upgrade the AWS PV driver package using Distributor, see the procedures in Install or update packages in the AWS Systems Manager User Guide.\nFor Name, choose AWSPVDriver.\nFor Installation type, select Uninstall and reinstall.\nConfigure the other parameters for the package as necessary and run installation or upgrade using the referenced procedure in Step 4.\nAfter running the Distributor package, the instance automatically reboots and then upgrades the driver. The instance will not be available for up to 15 minutes.\nAfter the upgrade is complete, and the instance passes both health checks in the Amazon EC2 console, verify that the new driver was installed by connecting to the instance using Remote Desktop.\nOnce you have connected, run the following PowerShell command:\nGet-ItemProperty HKLM:\\SOFTWARE\\Amazon\\PVDriver\nVerify that the driver version is the same as the latest version listed in the Driver Version History table. For more information, see AWS PV driver package history Open Disk Management to review any offline secondary volumes and bring them online corresponding to the drive letters noted in Step 3.\nIf you previously disabled TCP offloading using Netsh for Citrix PV drivers we recommend that you re-enable this feature after upgrading to AWS PV drivers. TCP Offloading issues with Citrix drivers are not present in the AWS PV drivers. As a result, TCP Offloading provides better performance with AWS PV drivers.\nIf you previously applied a static IP address or DNS configuration to the network interface, you might need to reapply the static IP address or DNS configuration after upgrading AWS PV drivers.\nUpgrade Windows Server instances (AWS PV upgrade) manually\nUse the following procedure to perform an in-place upgrade of AWS PV drivers, or to upgrade from Citrix PV drivers to AWS PV drivers on Windows Server 2008 R2, Windows Server 2012, Windows Server 2012 R2, Windows Server 2016, Windows Server 2019, or Windows Server 2022. This upgrade is not available for Red Hat drivers, or for other versions of Windows Server.\nSome older versions of Windows Server can't use the latest drivers. To verify which driver version to use for your operating system, see the driver version table in the Paravirtual drivers for Windows instances page.\nImportant\nIf your instance is a domain controller, see Upgrade a domain controller (AWS PV upgrade). The upgrade process for domain controller instances is different than standard editions of Windows.\nTo upgrade AWS PV drivers manually\nWe recommend that you create a backup in case you need to roll back your changes.\nTip\nInstead of creating the AMI from the Amazon EC2 console, you can use Systems Manager Automation to create the AMI using the AWS-CreateImage runbook. For more information, see AWS-CreateImage in the AWS Systems Manager Automation runbook reference User Guide.\nWhen you stop an instance, the data on any instance store volumes is erased. Before you stop an instance, verify that you've copied any data that you need from your instance store volumes to persistent storage, such as Amazon EBS or Amazon S3.\nIn the navigation pane, choose Instances.\nSelect the instance that requires the driver upgrade, and choose Instance state, Stop instance.\nAfter the instance is stopped, select the instance, choose Actions, then Image and templates, and then choose Create image.\nChoose Instance state, Start instance.\nConnect to the instance using Remote Desktop.\nWe recommend that you take all non-system disks offline and note any drive letter mappings to the secondary disks in Disk Management before you perform this upgrade. This step is not required if you are performing an in-place update of AWS PV drivers. We also recommend setting non-essential services to Manual start-up in the Services console.\nDownload the latest driver package to the instance.\nOr, run the following PowerShell command:\nInvoke-WebRequest https://s3.amazonaws.com/ec2-windows-drivers-downloads/AWSPV/Latest/AWSPVDriver.zip -outfile $env:USERPROFILE\\pv_driver.zip\nExpand-Archive $env:userprofile\\pv_driver.zip -DestinationPath $env:userprofile\\pv_drivers\nNote\nIf you receive an error when downloading the file, and you are using Windows Server 2016 or earlier, TLS 1.2 might need to be enabled for your PowerShell terminal. You can enable TLS 1.2 for the current PowerShell session with the following command and then try again:\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nExtract the contents of the folder and then run AWSPVDriverSetup.msi.\nAfter running the MSI, the instance automatically reboots and then upgrades the driver. The instance will not be available for up to 15 minutes. After the upgrade is complete and the instance passes both health checks in the Amazon EC2 console, you can verify that the new driver was installed by connecting to the instance using Remote Desktop and then running the following PowerShell command:\nGet-ItemProperty HKLM:\\SOFTWARE\\Amazon\\PVDriver\nVerify that the driver version is the same as the latest version listed in the Driver Version History table. For more information, see AWS PV driver package history Open Disk Management to review any offline secondary volumes and bring them online corresponding to the drive letters noted in Step 3.\nIf you previously disabled TCP offloading using Netsh for Citrix PV drivers we recommend that you re-enable this feature after upgrading to AWS PV drivers. TCP Offloading issues with Citrix drivers are not present in the AWS PV drivers. As a result, TCP Offloading provides better performance with AWS PV drivers.\nIf you previously applied a static IP address or DNS configuration to the network interface, you might need to reapply the static IP address or DNS configuration after upgrading AWS PV drivers.\nUpgrade a domain controller (AWS PV upgrade)\nUse the following procedure on a domain controller to perform either an in-place upgrade of AWS PV drivers, or to upgrade from Citrix PV drivers to AWS PV drivers. To ensure that your FSMO roles remain operational during the upgrade, we recommend that you transfer those roles to other domain controllers before you start the upgrade. For more information, see How to view and transfer FSMO roles on the Microsoft Learn website.\nTo upgrade a domain controller\nWe recommend that you create a backup of your domain controller in case you need to roll back your changes. Using an AMI as a backup is not supported. For more information, see Backup and restore considerations in the Microsoft documentation.\nRun the following command to configure Windows to boot into Directory Services Restore Mode (DSRM).\nWarning\nBefore running this command, confirm that you know the DSRM password. You'll need this information so that you can log in to your instance after the upgrade is complete and the instance automatically reboots.\nbcdedit /set {default} safeboot dsrepair\nPowerShell:\nPS C:\\> bcdedit /set \"{default}\" safeboot dsrepair\nThe system must boot into DSRM because the upgrade utility removes Citrix PV storage drivers so it can install AWS PV drivers. Therefore we recommend noting any drive letter and folder mappings to the secondary disks in Disk Management. When Citrix PV storage drivers are not present, secondary drives are not detected. Domain controllers that use an NTDS folder on secondary drives will not boot because the secondary disk is not detected.\nWarning\nAfter you run this command do not manually reboot the system. The system will be unreachable because Citrix PV drivers do not support DSRM.\nRun the following command to add DisableDCCheck to the registry:\nreg add HKLM\\SOFTWARE\\Wow6432Node\\Amazon\\AWSPVDriverSetup /v DisableDCCheck /t REG_SZ /d true\nDownload the latest driver package to the instance.\nExtract the contents of the folder and then run AWSPVDriverSetup.msi.\nAfter running the MSI, the instance automatically reboots and then upgrades the driver. The instance will not be available for up to 15 minutes.\nAfter the upgrade is complete and the instance passes both health checks in the Amazon EC2 console, connect to the instance using Remote Desktop. Open Disk Management to review any offline secondary volumes and bring them online corresponding to the drive letters and folder mappings noted earlier.\nYou must connect to the instance by specifying the username in the following format hostname\\administrator. For example, Win2k12TestBox\\administrator.\nRun the following command to remove the DSRM boot configuration:\nbcdedit /deletevalue safeboot\nReboot the instance.\nTo complete the upgrade process, verify that the new driver was installed. In Device Manager, under Storage Controllers, locate AWS PV Storage Host Adapter. Verify that the driver version is the same as the latest version listed in the Driver Version History table. For more information, see AWS PV driver package history.\nRun the following command to delete DisableDCCheck from the registry:\nreg delete HKLM\\SOFTWARE\\Wow6432Node\\Amazon\\AWSPVDriverSetup /v DisableDCCheck\nNote\nIf you previously disabled TCP offloading using Netsh for Citrix PV drivers we recommend that you re-enable this feature after upgrading to AWS PV Drivers. TCP Offloading issues with Citrix drivers are not present in the AWS PV drivers. As a result, TCP Offloading provides better performance with AWS PV drivers.\nUpgrade Windows Server 2008 and 2008 R2 instances (Red Hat to Citrix PV upgrade)\nBefore you start upgrading your Red Hat drivers to Citrix PV drivers, make sure you do the following:\nInstall the latest version of the EC2Config service. For more information, see Install the latest version of EC2Config.\nVerify that you have Windows PowerShell 3.0 installed. To verify the version that you have installed, run the following command in a PowerShell window:\nPS C:\\> $PSVersionTable.PSVersion\nWindows PowerShell 3.0 is bundled in the Windows Management Framework (WMF) version 3.0 install package. If you need to install Windows PowerShell 3.0, see Windows Management Framework 3.0 in the Microsoft Download Center.\nBack up your important information on the instance, or create an AMI from the instance. For more information about creating an AMI, see Create an Amazon EBS-backed AMI.\nTip\nInstead of creating the AMI from the Amazon EC2 console, you can use Systems Manager Automation to create the AMI using the AWS-CreateImage runbook. For more information, see AWS-CreateImage in the AWS Systems Manager Automation runbook reference User Guide.\nIf you create an AMI, make sure that you do the following:\nWrite down your password.\nDo not run the Sysprep tool manually or using the EC2Config service.\nSet your Ethernet adapter to obtain an IP address automatically using DHCP.\nTo upgrade Red Hat drivers\nConnect to your instance and log in as the local administrator. For more information about connecting to your instance, see Connect to your Windows instance using RDP.\nIn your instance, download the Citrix PV upgrade package.\nExtract the contents of the upgrade package to a location of your choice.\nDouble-click the Upgrade.bat file. If you get a security warning, choose Run.\nIn the Upgrade Drivers dialog box, review the information and choose Yes if you are ready to start the upgrade.\nIn the Red Hat Paravirtualized Xen Drivers for Windows uninstaller dialog box, choose Yes to remove the Red Hat software. Your instance will be rebooted.\nNote\nIf you do not see the uninstaller dialog box, choose Red Hat Paravirtualize in the Windows taskbar.\nCheck that the instance has rebooted and is ready to be used.\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nOn the Instances page, select Actions, then Monitor and troubleshoot, and then choose Get system log.\nThe upgrade operations should have restarted the server 3 or 4 times. You can see this in the log file by the number of times Windows is Ready to use is displayed.\nConnect to your instance and log in as the local administrator.\nClose the Red Hat Paravirtualized Xen Drivers for Windows uninstaller dialog box.\nConfirm that the installation is complete. Navigate to the Citrix-WIN_PV folder that you extracted earlier, open the PVUpgrade.log file, and then check for the text INSTALLATION IS COMPLETE.\nUpgrade your Citrix Xen guest agent service\nIf you are using Citrix PV drivers on Windows Server, you can upgrade the Citrix Xen guest agent service. This Windows service handles tasks such as shutdown and restart events from the API. You can run this upgrade package on any version of Windows Server, as long as the instance is running Citrix PV drivers.\nImportant\nFor Windows Server 2008 R2 and later, we recommend you upgrade to AWS PV drivers that include the Guest Agent update.\nBefore you start upgrading your drivers, make sure you back up your important information on the instance, or create an AMI from the instance. For more information about creating an AMI, see Create an Amazon EBS-backed AMI.\nTip\nInstead of creating the AMI from the Amazon EC2 console, you can use Systems Manager Automation to create the AMI using the AWS-CreateImage runbook. For more information, see AWS-CreateImage in the AWS Systems Manager Automation runbook reference User Guide.\nIf you create an AMI, make sure you do the following:\nDo not enable the Sysprep tool in the EC2Config service.\nWrite down your password.\nSet your Ethernet adapter to DHCP.\nTo upgrade your Citrix Xen guest agent service\nConnect to your instance and log in as the local administrator. For more information about connecting to your instance, see Connect to your Windows instance using RDP.\nOn your instance, download the Citrix upgrade package.\nExtract the contents of the upgrade package to a location of your choice.\nDouble-click the Upgrade.bat file. If you get a security warning, choose Run.\nIn the Upgrade Drivers dialog box, review the information and choose Yes if you are ready to start the upgrade.\nWhen the upgrade is complete, the PVUpgrade.log file will open and contain the text UPGRADE IS COMPLETE.\nReboot your instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/pvdrivers-troubleshooting.html",
        "content": "The following are solutions to issues that you might encounter with older Amazon EC2 images and PV drivers.\nContents\nWindows Server 2012 R2 loses network and storage connectivity after an instance reboot\nTCP offloading\nTime synchronization\nWorkloads that leverage more than 20,000 disk IOPS experience degradation due to CPU bottlenecks\nWindows Server 2012 R2 loses network and storage connectivity after an instance reboot\nImportant\nThis issue occurs only with AMIs made available before September 2014.\nWindows Server 2012 R2 Amazon Machine Images (AMIs) made available before September 10, 2014 can lose network and storage connectivity after an instance reboot. The error in the AWS Management Console system log states: \u201cDifficulty detecting PV driver details for Console Output.\u201d The connectivity loss is caused by the Plug and Play Cleanup feature. This features scans for and disables inactive system devices every 30 days. The feature incorrectly identifies the EC2 network device as inactive and removes it from the system. When this happens, the instance loses network connectivity after a reboot.\nFor systems that you suspect could be affected by this issue, you can download and run an in-place driver upgrade. If you are unable to perform the in-place driver upgrade, you can run a helper script. The script determines if your instance is affected. If it is affected, and the Amazon EC2 network device has not been removed, the script disables the Plug and Play Cleanup scan. If the network device was removed, the script repairs the device, disables the Plug and Play Cleanup scan, and enables your instance to reboot with network connectivity enabled.\nContents\nChoose how to fix problems\nMethod 1 - Enhanced networking\nMethod 2 - Registry configuration\nRun the remediation script\nChoose how to fix problems\nThere are two methods for restoring network and storage connectivity to an instance affected by this issue. Choose one of the following methods:\nMethod Prerequisites Procedure Overview\nMethod 1 - Enhanced networking Enhanced networking is only available in a virtual private cloud (VPC) which requires a C3 instance type. If the server does not currently use the C3 instance type, then you must temporarily change it. You change the server instance type to a C3 instance. Enhanced networking then enables you to connect to the affected instance and fix the problem. After you fix the problem, you change the instance back to the original instance type. This method is typically faster than Method 2 and less likely to result in user error. You will incur additional charges as long as the C3 instance is running.\nMethod 2 - Registry configuration Ability to create or access a second server. Ability to change Registry settings. You detach the root volume from the affected instance, attach it to a different instance, connect, and make changes in the Registry. You will incur additional charges as long as the additional server is running. This method is slower than Method 1, but this method has worked in situations where Method 1 failed to resolve the problem.\nMethod 1 - Enhanced networking\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nLocate the affected instance. Select the instance and choose Instance state, and then choose Stop instance.\nWarning\nWhen you stop an instance, the data on any instance store volumes is erased. To keep data from instance store volumes, be sure to back it up to persistent storage.\nAfter the instance is stopped, create a backup. Select the instance and choose Actions, then Image and templates, and then choose Create image.\nChange the instance type to any C3 instance type.\nStart the instance.\nConnect to the instance using Remote Desktop and then download the AWS PV Drivers Upgrade package to the instance.\nExtract the contents of the folder and run AWSPVDriverSetup.msi.\nAfter running the MSI, the instance automatically reboots and then upgrades the drivers. The instance will not be available for up to 15 minutes.\nAfter the upgrade is complete and the instance passes both health checks in the Amazon EC2 console, connect to the instance using Remote Desktop and verify that the new drivers were installed. In Device Manager, under Storage Controllers, locate AWS PV Storage Host Adapter. Verify that the driver version is the same as the latest version listed in the Driver Version History table. For more information, see AWS PV driver package history.\nStop the instance and change the instance back to its original instance type.\nStart the instance and resume normal use.\nMethod 2 - Registry configuration\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nLocate the affected instance. Select the instance, choose Instance state, and then choose Stop instance.\nWarning\nWhen you stop an instance, the data on any instance store volumes is erased. To keep data from instance store volumes, be sure to back it up to persistent storage.\nChoose Launch instances and create a temporary Windows Server 2008 or Windows Server 2012 instance in the same Availability Zone as the affected instance. Do not create a Windows Server 2012 R2 instance.\nImportant\nIf you do not create the instance in the same Availability Zone as the affected instance you will not be able to attach the root volume of the affected instance to the new instance.\nIn the navigation pane, choose Volumes.\nLocate the root volume of the affected instance. Detach the volume and then attach the volume to the temporary instance that you created earlier. Attach it with the default device name (xvdf).\nUse Remote Desktop to connect to the temporary instance, and then use the Disk Management utility to make the volume available for use.\nOn the temporary instance, open the Run dialog box, type regedit, and press Enter.\nIn the Registry Editor navigation pane, choose HKEY_Local_Machine, and then from the File menu choose Load Hive.\nIn the Load Hive dialog box, navigate to Affected Volume\\Windows\\System32\\config\\System and type a temporary name in the Key Name dialog box. For example, enter OldSys.\nIn the navigation pane of the Registry Editor, locate the following keys:\nHKEY_LOCAL_MACHINE\\your_temporary_key_name\\ControlSet001\\Control\\Class\\4d36e97d-e325-11ce-bfc1-08002be10318\nHKEY_LOCAL_MACHINE\\your_temporary_key_name\\ControlSet001\\Control\\Class\\4d36e96a-e325-11ce-bfc1-08002be10318\nFor each key, double-click UpperFilters, enter a value of XENFILT, and then choose OK.\nLocate the following key:\nHKEY_LOCAL_MACHINE\\your_temporary_key_name\\ControlSet001\\Services\\XENBUS\\Parameters\nCreate a new string (REG_SZ) with the name ActiveDevice and the following value:\nPCI\\VEN_5853&DEV_0001&SUBSYS_00015853&REV_01\nLocate the following key:\nHKEY_LOCAL_MACHINE\\your_temporary_key_name\\ControlSet001\\Services\\XENBUS\nChange the Count from 0 to 1.\nLocate and delete the following keys:\nHKEY_LOCAL_MACHINE\\your_temporary_key_name\\ControlSet001\\Services\\xenvbd\\StartOverride\nHKEY_LOCAL_MACHINE \\your_temporary_key_name\\ControlSet001\\Services\\xenfilt\\StartOverride\nIn the Registry Editor navigation pane, choose the temporary key that you created when you first opened the Registry Editor.\nFrom the File menu, choose Unload Hive.\nIn the Disk Management Utility, choose the drive you attached earlier, open the context (right-click) menu, and choose Offline.\nIn the Amazon EC2 console, detach the affected volume from the temporary instance and reattach it to your Windows Server 2012 R2 instance with the device name /dev/sda1. You must specify this device name to designate the volume as a root volume.\nStart the instance.\nConnect to the instance using Remote Desktop and then download the AWS PV Drivers Upgrade package to the instance.\nExtract the contents of the folder and run AWSPVDriverSetup.msi.\nAfter running the MSI, the instance automatically reboots and then upgrades the drivers. The instance will not be available for up to 15 minutes.\nAfter the upgrade is complete and the instance passes both health checks in the Amazon EC2 console, connect to the instance using Remote Desktop and verify that the new drivers were installed. In Device Manager, under Storage Controllers, locate AWS PV Storage Host Adapter. Verify that the driver version is the same as the latest version listed in the Driver Version History table. For more information, see AWS PV driver package history.\nDelete or stop the temporary instance you created in this procedure.\nRun the remediation script\nIf you are unable to perform an in-place driver upgrade or migrate to a newer instance you can run the remediation script to fix the problems caused by the Plug and Play Cleanup task.\nTo run the remediation script\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance for which you want to run the remediation script. Choose Instance state, and then choose Stop instance.\nWarning\nWhen you stop an instance, the data on any instance store volumes is erased. To keep data from instance store volumes, be sure to back it up to persistent storage.\nAfter the instance is stopped, create a backup. Select the instance, choose Actions, then Image and templates, and then choose Create image.\nChoose Instance state, and then choose Start instance.\nConnect to the instance by using Remote Desktop and then download the RemediateDriverIssue.zip folder to the instance.\nExtract the contents of the folder.\nRun the remediation script according to the instructions in the Readme.txt file. The file is located in the folder where you extracted RemediateDriverIssue.zip.\nTCP offloading\nImportant\nThis issue does not apply to instances running AWS PV or Intel network drivers.\nBy default, TCP offloading is enabled for the Citrix PV drivers in Windows AMIs. If you encounter transport-level errors or packet transmission errors (as visible on the Windows Performance Monitor)\u2014for example, when you're running certain SQL workloads\u2014you may need to disable this feature.\nWarning\nDisabling TCP offloading may reduce the network performance of your instance.\nTo disable TCP offloading for Windows Server 2012 and 2008\nConnect to your instance and log in as the local administrator.\nIf you're using Windows Server 2012, press Ctrl+Esc to access the Start screen, and then choose Control Panel. If you're using Windows Server 2008, choose Start and select Control Panel.\nChoose Network and Internet, then Network and Sharing Center.\nChoose Change adapter settings.\nRight-click Citrix PV Ethernet Adapter #0 and select Properties.\nIn the Local Area Connection Properties dialog box, choose Configure to open the Citrix PV Ethernet Adapter #0 Properties dialog box.\nOn the Advanced tab, disable each of the properties, except for Correct TCP/UDP Checksum Value. To disable a property, select it from Property and choose Disabled from Value.\nChoose OK.\nRun the following commands from a Command Prompt window.\nnetsh int ip set global taskoffload=disabled\nnetsh int tcp set global chimney=disabled\nnetsh int tcp set global rss=disabled\nnetsh int tcp set global netdma=disabled\nReboot the instance.\nTime synchronization\nPrior to the release of the 2013.02.13 Windows AMI, the Citrix Xen guest agent could set the system time incorrectly. This can cause your DHCP lease to expire. If you have issues connecting to your instance, you might need to update the agent.\nTo determine whether you have the updated Citrix Xen guest agent, check whether the C:\\Program Files\\Citrix\\XenGuestAgent.exe file is from March 2013. If the date on this file is earlier than that, update the Citrix Xen guest agent service. For more information, see Upgrade your Citrix Xen guest agent service.\nWorkloads that leverage more than 20,000 disk IOPS experience degradation due to CPU bottlenecks\nYou can be affected by this issue if you are using Windows instances running AWS PV drivers that leverage more than 20,000 IOPS, and you experience bug check code 0x9E: USER_MODE_HEALTH_MONITOR.\nDisk reads and writes (IOs) in the AWS PV drivers occur in two phases: IO preparation and IO completion. By default, the preparation phase runs on a single arbitrary core. The completion phase runs on core 0. The amount of computation required to process an IO varies based on it size and other properties. Some IOs use more computation in the preparation phase, and others in the completion phase. When an instance drives more than 20,000 IOPS, the preparation or completion phase may result in a bottleneck, where the CPU upon which it runs is at 100% capacity. Whether or not the preparation or completion phase becomes a bottleneck depends on the properties of the IOs used by the application.\nStarting with AWS PV drivers 8.4.0, the load of the preparation phase and the completion phase can be distributed across multiple cores, eliminating bottlenecks. Each application uses different IO properties. Therefore, applying one of the following configurations may raise, lower, or not impact the performance of your application. After you apply any of these configurations, monitor the application to verify that it is meeting your desired performance.\nPrerequisites\nBefore you begin this troubleshooting procedure, verify the following prerequisites:\nYour instance uses AWS PV drivers version 8.4.0 or later. To upgrade, see Upgrade PV drivers on EC2 Windows instances.\nYou have RDP access to the instance. For steps to connect to your Windows instance using RDP, see Connect to your Windows instance using an RDP client.\nYou have administrator access on the instance.\nObserve CPU load on your instance\nYou can use Windows Task Manager to view the load on each CPU to determine potential bottlenecks to disk IO.\nVerify that your application is running and handling traffic similar to your production workload.\nConnect to your instance using RDP.\nChoose the Start menu on your instance.\nEnter Task Manager in the Start menu to open Task Manager.\nIf Task Manager displays the Summary View, choose More details to expand the detailed view.\nChoose the Performance tab.\nSelect CPU in the left pane.\nRight-click on the graph in the main pane and select Change graph to>Logical processors to display each individual core.\nDepending on how many cores are on your instance, you may see lines displaying CPU load over time, or you may just see a number.\nIf you see graphs displaying load over time, look for CPUs where the box is almost entirely shaded.\nIf you see a number on each core, look for cores that consistently show 95% or greater.\nNote whether core 0 or a different core is experiencing a heavy load.\nChoose which configuration to apply\nConfiguration name When to apply this configuration Notes\nDefault configuration Workload is driving less than 20,000 IOPS, or other configurations did not improve performance or stability.\nFor this configuration, IO occurs on a few cores, which may benefit smaller workloads by increasing cache locality and reducing context switching.\nAllow driver to choose whether to distribute completion Workload is driving more than 20,000 IOPS and moderate or high load is observed on core 0. This configuration is recommended for all Xen instances using PV 8.4.0 or later and leveraging more than 20,000 IOPS, whether or not problems are encountered.\nDistribute both preparation and completion Workload is driving more than 20,000 IOPS, and either allowing the driver to choose the distribution did not improve performance, or a core other than 0 is experiencing a high load. This configuration enables distribution of both IO preparation and IO completion.\nNote\nWe recommend that you do not distribute IO preparation without also distributing IO completion (setting DpcRedirection without setting NotifierDistributed) because the completion phase is sensitive to overload by the preparation phase when the preparation phase is running in parallel.\nRegistry key values\nNotifierDistributed\nValue 0 or not present \u2014 The completion phase will run on core 0.\nValue 1 \u2014 The driver chooses to run the completion phase or core 0 or one additional core per attached disk.\nValue 2 \u2014 The driver runs the completion phase on one additional core per attached disk.\nDpcRedirection\nValue 0 or not present \u2014 The preparation phase will run on a single, arbitrary core.\nValue 1 \u2014 The preparation phase is distributed across multiple cores.\nDefault configuration\nApply the default configuration with AWS PV driver versions prior to 8.4.0, or if performance or stability degradation is observed after applying one of the other configurations in this section.\nConnect to your instance using RDP.\nOpen a new PowerShell command prompt as an administrator.\nRun the following commands to remove the NotifierDistributed and DpcRedirection registry keys.\nRemove-ItemProperty -Path HKLM:\\System\\CurrentControlSet\\Services\\xenvbd\\Parameters -Name NotifierDistributed\nRemove-ItemProperty -Path HKLM:\\System\\CurrentControlSet\\Services\\xenvbd\\Parameters -Name DpcRedirection\nReboot your instance.\nAllow driver to choose whether to distribute completion\nSet NotiferDistributed registry key to allow the PV storage driver to choose whether or not to distribute IO completion.\nConnect to your instance using RDP.\nOpen a new PowerShell command prompt as an administrator.\nRun the following command to set the NotiferDistributed registry key.\nSet-ItemProperty -Type DWORD -Path HKLM:\\System\\CurrentControlSet\\Services\\xenvbd\\Parameters -Value 0x00000001 -Name NotifierDistributed\nReboot your instance.\nDistribute both preparation and completion\nSet NotifierDistributed and DpcRedirection registry keys to always distribute both the preparation and completion phases.\nConnect to your instance using RDP.\nOpen a new PowerShell command prompt as an administrator.\nRun the following commands to set the NotifierDistributed and DpcRedirection registry keys.\nSet-ItemProperty -Type DWORD -Path HKLM:\\System\\CurrentControlSet\\Services\\xenvbd\\Parameters -Value 0x00000002 -Name NotifierDistributed\nSet-ItemProperty -Type DWORD -Path HKLM:\\System\\CurrentControlSet\\Services\\xenvbd\\Parameters -Value 0x00000001 -Name DpcRedirection\nReboot your instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/aws-nvme-drivers.html",
        "content": "Amazon EBS volumes and instance store volumes are exposed as NVMe block devices on Nitro-based instances. To fully utilize the performance and capabilities of Amazon EBS features for volumes exposed as NVMe block devices, the instance must have the AWS NVMe driver installed. All current generation AWS Windows AMIs come with the AWS NVMe driver installed by default.\nFor more information about EBS and NVMe, see Amazon EBS and NVMe in the Amazon EBS User Guide. For more information about SSD instance store and NVMe, see SSD instance store volumes for EC2 instances.\nLinux instances\nWindows instances\nConfigure SCSI persistent reservations for Windows instances\nAfter AWS NVMe driver version 1.5.0 or later has been installed, you can enable or disable SCSI persistent reservations using the Windows registry for Windows Server 2016 and later. You must reboot the instance for these registry changes to take effect.\nYou can enable SCSI persistent reservations with the following command which sets the EnableSCSIPersistentReservations to a value of 1.\nPS C:\\> $registryPath = \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\AWSNVMe\\Parameters\\Device\"\nSet-ItemProperty -Path $registryPath -Name EnableSCSIPersistentReservations -Value 1\nYou can disable SCSI persistent reservations with the following command which sets the EnableSCSIPersistentReservations to a value of 0.\nPS C:\\> $registryPath = \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\AWSNVMe\\Parameters\\Device\"\nSet-ItemProperty -Path $registryPath -Name EnableSCSIPersistentReservations -Value 0"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nvme-driver-version-history.html",
        "content": "The following table shows which AWS NVMe drivers run on each version of Windows Server on Amazon EC2.\nWindows Server version AWS NVMe driver version\nWindows Server 2025 latest version\nWindows Server 2022 latest version\nWindows Server 2019 latest version\nWindows Server 2016 latest version\nWindows Server 2012 R2 version 1.5.1 and earlier\nWindows Server 2012 version 1.5.1 and earlier\nWindows Server 2008 R2 version 1.3.2 and earlier\nWindows Server 2008 version 1.3.2 and earlier\nThe following table describes the released versions of the AWS NVMe driver.\nPackage version Driver version Details Release date\n1.6.0\n1.6.0\nUpdated the install script to use PnPUtil.\nUpdated ebsnvme-id.exe to use NVMe IOCTL.\nNote\nThe AWSNVMe 1.6.0 installation will fail on Windows Server 2012 and Windows Server 2012 R2. Only AWSNVMe 1.5.1 and earlier versions are supported on Windows Server 2012 and Windows Server 2012 R2.\n25 October 2024\n1.5.1\n1.5.0\nFixed the install script to create a folder for the ebsnvme-id tool if it is not present.\n17 November 2023\n1.5.0\n1.5.0\nAdded support for Small Computer System Interface (SCSI) persistent reservations for instances running Windows Server 2016 and later. The ebsnvme-id tool (ebsnvme-id.exe) is now installed by default.\n31 August 2023\n1.4.2\n1.4.2 Fixed a bug where the AWS NVMe driver did not support instance store volumes on D3 instances. 16 March 2023\n1.4.1\n1.4.1\nReports Namespace Preferred Write Granularity (NPGW) for EBS volumes that support this optional NVMe feature. For more information, see section 8.25, \"Improving Performance through I/O Size and Alignment Adherence,\" in the NVMe Base Specification, version 1.4.\n20 May 2022\n1.4.0\n1.4.0\nAdded support for IOCTLs that allow applications to interact with NVMe devices. This support allows applications to get IdentifyController, IdentifyNamespace, and NameSpace list from the NVMe device. For more information, see Protocol-specific queries in the Microsoft documentation.\nAWSNVMe 1.4.0 installation on Windows Server 2008 R2 will fail. AWSNVMe version 1.3.2 and earlier are supported on Windows Server 2008 R2.\nThe 1.4.0 driver version and the latest ebsnvme-id tool (ebsnvme-id.exe) are combined in a single package. This combination allows you to install both driver and tool from a single package. For more details, see AWS NVMe drivers.\nBug fixes and reliability improvements.\n23 November 2021\n1.3.2\n1.3.2 Fixed issue with modifying EBS volumes actively processing IO, which may result in data corruption. Customers who do not modify online EBS volumes (for example, resizing or changing type) are not impacted.\n10 September 2019\n1.3.1 1.3.1 Reliability Improvements. 21 May 2019\n1.3.0 1.3.0 Device optimization improvements. 31 August 2018\n1.2.0 1.2.0 Performance and reliability improvements for AWS NVMe devices on all supported instances, including bare metal instances. 13 June 2018\n>1.0.0 >1.0.0 AWS NVMe driver for supported instance types running Windows Server. 12 February 2018\nSubscribe to notifications\nAmazon SNS can notify you when new versions of EC2 Windows Drivers are released. Use the following procedure to subscribe to these notifications.\nTo subscribe to EC2 notifications from the console\nOpen the Amazon SNS console at https://console.aws.amazon.com/sns/v3/home.\nIn the navigation bar, change the Region to US East (N. Virginia), if necessary. You must select this Region because the SNS notifications that you are subscribing to are in this Region.\nIn the navigation pane, choose Subscriptions.\nChoose Create subscription.\nIn the Create subscription dialog box, do the following:\nFor TopicARN, copy the following Amazon Resource Name (ARN):\narn:aws:sns:us-east-1:801119661308:ec2-windows-drivers\nFor Protocol, choose Email.\nFor Endpoint, type an email address that you can use to receive the notifications.\nChoose Create subscription.\nYou'll receive a confirmation email. Open the email and follow the directions to complete your subscription.\nWhenever new EC2 Windows drivers are released, we send notifications to subscribers. If you no longer want to receive these notifications, use the following procedure to unsubscribe.\nTo unsubscribe from Amazon EC2 Windows driver notification\nOpen the Amazon SNS console at https://console.aws.amazon.com/sns/v3/home.\nIn the navigation pane, choose Subscriptions.\nSelect the checkbox for the subscription and then choose Actions, Delete subscriptions. When prompted for confirmation, choose Delete.\nTo subscribe to EC2 notifications using the AWS CLI\nTo subscribe to EC2 notifications with the AWS CLI, use the following command.\naws sns subscribe --topic-arn arn:aws:sns:us-east-1:801119661308:ec2-windows-drivers --protocol email --notification-endpoint YourUserName@YourDomainName.ext\nTo subscribe to EC2 notifications using AWS Tools for Windows PowerShell\nTo subscribe to EC2 notifications with AWS Tools for Windows PowerShell, use the following command.\nConnect-SNSNotification -TopicArn 'arn:aws:sns:us-east-1:801119661308:ec2-windows-drivers' -Protocol email -Region us-east-1 -Endpoint 'YourUserName@YourDomainName.ext'"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-windows-instances.html",
        "content": "After you've launched a Windows instance, you can log in as an administrator to perform additional configuration for Windows features and system settings. EC2 Windows troubleshooting utilities can help you troubleshoot issues on your instance.\nYou can configure Windows launch agents and other Windows-specific features as follows.\nWindows launch agents\nEach AWS Windows AMI (and many other AMIs that are available on the AWS Marketplace) includes a Windows launch agent that's pre-configured with default settings. Launch agents perform tasks during instance startup and run if an instance is stopped and later started, or restarted.\nEC2 Fast Launch for Windows\nEvery Amazon EC2 Windows instance must go through the standard Windows operating system (OS) launch steps, which include several reboots, and often take 15 minutes or longer to complete. Amazon EC2 Windows Server AMIs that have the EC2 Fast Launch feature enabled complete some of those steps and reboots in advance to reduce the time it takes to launch an instance.\nWindows-specific system settings\nThe following list includes some system settings that apply only for Windows operating systems:\nChange the Windows Administrator password\nWhen you connect to a Windows instance, you must specify a user account and password that has permission to access the instance. The first time that you connect to an instance, you must use the Administrator account and provide the default password. When you connect to an instance the first time, we recommend that you change the Administrator password from its default value.\nAdd Windows System components\nWindows Server operating systems include many optional components. Including all optional components in each AWS Windows Server AMI is not practical. Instead, we provide installation media EBS snapshots that have the necessary files to configure or install components on your Windows instance.\nInstall WSL on Windows\nWindows Subsystem for Linux (WSL) is a free download that you can install on your Windows instance. By installing WSL, you can run native Linux command line tools directly on your Windows instance and use the Linux tools for scripting, alongside your traditional Windows desktop. You can easily swap between Linux and Windows on a single Windows instance, which you might find useful in a development environment.\nAWS device drivers for Windows instances\nYou can update the AWS device drivers for your Windows instances. For more information, see Manage device drivers for your EC2 instance.\nThe following table summarizes the supported drivers for Nitro-based instances by Windows version.\nVersion Storage driver Enhanced networking driver\nWindows Server 2025 AWS NVMe latest version ENA latest version\nWindows Server 2022 AWS NVMe latest version ENA latest version\nWindows Server 2019 AWS NVMe latest version ENA latest version\nWindows Server 2016 AWS NVMe latest version ENA latest version\nWindows Server 2012 R2 AWS NVMe version 1.5.1 ENA version 2.6.0\nWindows Server 2008 R2 AWS NVMe version 1.3.2 ENA version 2.2.3\nThe following table summarizes the supported drivers for Xen-based instances by Windows version.\nVersion Storage driver Enhanced networking driver\nWindows Server 2025 AWS PV latest version\nENA latest version 1\nIntel VF 2\nAWS PV latest version 3\nWindows Server 2022 AWS PV latest version\nENA latest version 1\nIntel VF 2\nAWS PV latest version 3\nWindows Server 2019 AWS PV latest version\nENA latest version 1\nIntel VF 2\nAWS PV latest version 3\nWindows Server 2016 AWS PV latest version\nENA latest version 1\nIntel VF 2\nAWS PV latest version 3\nWindows Server 2012 R2 AWS PV version 8.4.3\nENA version 2.6.0 1\nIntel VF 2\nAWS PV version 8.4.3 3\nWindows Server 2008 R2 AWS PV version 8.3.5\nENA version 2.2.3 1\nIntel VF 2\nAWS PV version 8.3.5 3\n1 For instance types G3, H1, I3, m4.16xlarge, P2, P3, P3dn, and R4.\n2 For instance types C3, C4, D2, I2, M4 (excluding m4.16xlarge), and R3.\n3 For instance types C1, M1, M2, M3, T1, T2, X1, and X1e."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configure-launch-agents.html",
        "content": "Each AWS Windows AMI includes a Windows launch agent that's pre-configured with default settings. Launch agents perform tasks during instance startup and run if an instance is stopped and later started, or restarted. For information about a specific agent, see the detail pages in the following list.\nFor more information about AWS Windows AMIs, see the AWS Windows AMI reference.\nUse the EC2Launch v2 agent to perform tasks during EC2 Windows instance launch\nUse the EC2Launch v1 agent to perform tasks during EC2 Windows instance launch\nUse the EC2Config service to perform tasks during EC2 legacy Windows operating system instance launch\nContent\nCompare Amazon EC2 launch agents\nConfigure DNS Suffix for EC2 Windows launch agents\nSubscribe to EC2 Windows launch agent notifications\nMigrate to EC2Launch v2 for Windows instances\nWindows Service administration for EC2Launch v2 and EC2Config agents\nCompare Amazon EC2 launch agents\nThe following table shows the major functional differences between EC2Config, EC2Launch v1, and EC2Launch v2.\nFeature EC2Config EC2Launch v1 EC2Launch v2\nRun as Windows Service PowerShell Scripts Windows Service\nSupports Legacy OS only\nWindows Server 2016\nWindows Server 2019 (LTSC and SAC)\nWindows Server 2016\nWindows Server 2019 (LTSC and SAC)\nWindows Server 2022\nWindows Server 2025\nConfiguration file\nXML JSON JSON/YAML\nSet Administrator username\nNo No\nYes\nUser data size\n16 KB 16 KB\n60 KB (compressed)\nLocal user data baked on AMI\nNo No Yes, configurable\nTask configuration in user data No No Yes\nConfigurable wallpaper\nNo No\nYes\nCustomize task run order\nNo No\nYes\nConfigurable tasks\n15\n9\n20 at launch\nSupports Windows Event Viewer\nYes\nNo\nYes\nNumber of Event Viewer event types\n2\n0\n30\nNote\nEC2Config documentation is provided for historical reference only. The operating system versions it runs on are no longer supported by Microsoft. We strongly recommend that you upgrade to the latest launch service."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/launch-agents-set-dns.html",
        "content": "With Amazon EC2 launch agents, you can configure a list of DNS suffixes that Windows instances use for domain name resolution. The launch agents override the standard Windows settings in the System\\CurrentControlSet\\Services\\Tcpip\\Parameters\\SearchList registry key by adding the following values to the DNS suffix search list:\nThe domain of the instance\nThe suffixes that result from devolution of the instance domain\nNV domain\nThe domains specified by each network interface cards\nAll launch agents support DNS suffix configuration. For more information, see your specific launch agent version:\nFor information about the setDnsSuffix task and how to configure DNS suffixes in EC2Launch v2, see setDnsSuffix .\nFor information about DNS suffix list setup and how to enable or disable devolution for EC2Launch v1, see Configure the EC2Launch v1 agent on your Windows instance.\nFor information about DNS suffix list setup and how to enable or disable devolution for EC2Config, see EC2Config settings files.\nDomain name devolution\nDomain name devolution is an Active Directory behavior that allows computers in a child domain to access resources in the parent domain without using a fully qualified domain name. By default, domain name devolution continues until there are only two nodes left in the domain name progression.\nLaunch agents perform devolution on the domain name if the instance is connected to a domain, and add the results to the DNS suffix search list that's maintained in the System\\CurrentControlSet\\Services\\Tcpip\\Parameters\\SearchList registry key. The agents use the settings from the following registry keys, to determine the devolution behavior.\nSystem\\CurrentControlSet\\Services\\Tcpip\\Parameters\\UseDomainNameDevolution\nWhen not set, disables devolution\nWhen set to 1, enables devolution (default)\nWhen set to 0, disables devolution\nSystem\\CurrentControlSet\\Services\\Dnscache\\Parameters\\DomainNameDevolutionLevel\nWhen not set, use level of 2 (default)\nWhen set to 3 or greater, use value to set level\nWhen you disable devolution or change your devolution settings to a higher level, the System\\CurrentControlSet\\Services\\Tcpip\\Parameters\\SearchList registry key stil contains the suffixes that were added previously. They are not automatically removed. You can manually update the list, or you can clear the list and let your agent run through the process to set up the new list.\nNote\nTo clear the DNS suffix list from the registry, you can run the following command.\nPS C:\\> Invoke-CimMethod -ClassName Win32_NetworkAdapterConfiguration -MethodName \"SetDNSSuffixSearchOrder\" -Arguments @{ DNSDomainSuffixSearchOrder = $null } | Out-Null\nDevolution examples\nThe following examples show domain name progression through the devolution process.\ncorp.example.com\nProgresses to example.com\nlocale.region.corp.example.com\nProgresses to region.corp.example.com\nProgresses to corp.example.com\nProgresses to example.com\nlocale.region.corp.example.com with a setting of DomainNameDevolutionLevel=3\nProgresses to region.corp.example.com\nProgresses to corp.example.com. The progression stops here, due to the level setting."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/launch-agents-subscribe-notifications.html",
        "content": "Amazon SNS can notify you when new versions of the EC2 launch agents are released. Use the following procedure to subscribe to these notifications.\nSubscribe to EC2Config notifications\nOpen the Amazon SNS console at https://console.aws.amazon.com/sns/v3/home.\nIn the navigation bar, change the Region to US East (N. Virginia), if necessary. You must select this Region because the SNS notifications that you are subscribing to were created in this Region.\nIn the navigation pane, choose Subscriptions.\nChoose Create subscription.\nIn the Create subscription dialog box, do the following:\nFor Topic ARN, use the following Amazon Resource Name (ARN) that matches the agent you want to receive notifications for:\nEC2Launch v2:\narn:aws:sns:us-east-1:309726204594:amazon-ec2launch-v2\nEC2Launch or EC2Config:\narn:aws:sns:us-east-1:801119661308:ec2-windows-ec2config\nFor Protocol, choose Email.\nFor Endpoint, enter the email address where you want to receive the notifications.\nChoose Create subscription.\nYou'll receive a email asking you to confirm your subscription. Open the email and follow the directions to complete your subscription.\nWhenever a new version of the launch agent is released, we send notifications to subscribers. If you no longer want to receive these notifications, use the following procedure to unsubscribe.\nUnsubscribe from launch agent notifications\nOpen the Amazon SNS console.\nIn the navigation pane, choose Subscriptions.\nSelect the subscription and then choose Actions, Delete subscriptions. When prompted for confirmation, choose Delete."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2launch-v2-migrate.html",
        "content": "The EC2Launch migration tool upgrades the installed launch agent (EC2Config and EC2Launch v1) by uninstalling it and installing EC2Launch v2. Applicable configurations from previous launch services are automatically migrated to the new service. The migration tool does not detect any scheduled tasks linked to EC2Launch v1 scripts; therefore, it does not automatically set up those tasks in EC2Launch v2. To configure these tasks, edit the agent-config.yml file, or use the EC2Launch v2 settings dialog box. For example, if an instance has a scheduled task that runs InitializeDisks.ps1, then after you run the migration tool, you must specify the volumes you want to initialize in the EC2Launch v2 settings dialog box. See Step 6 of the procedure to Change settings using the EC2Launch v2 settings dialog box.\nYou can download the migration tool or install with an SSM RunCommand document.\nYou can download the tool from the following location:\n64Bit \u2014 https://s3.amazonaws.com/amazon-ec2launch-v2-utils/MigrationTool/windows/amd64/latest/EC2LaunchMigrationTool.zip\nNote\nYou must run the EC2Launch v2 migration tool as an Administrator. EC2Launch v2 is installed as a service after you run the migration tool. It does not run immediately. By default, it runs during instance startup and runs if an instance is stopped and later started, or restarted.\nUse the AWSEC2Launch-RunMigration SSM document to migrate to the latest EC2Launch v2 version with SSM Run Command. The document does not require any parameters. For more information about using SSM Run Command, see AWS Systems Manager Run Command.\nThe migration tool applies the following configurations from EC2Config to EC2Launch v2.\nIf Ec2DynamicBootVolumeSize is set to false, removes EC2Launch v2 boot stage\nIf Ec2SetPassword is set to Enabled, sets EC2Launch v2 password type to random\nIf Ec2SetPassword is set to Disabled, sets EC2Launch v2 password type to donothing\nIf SetDnsSuffixList is set to false, removes EC2Launch v2 setDnsSuffix task\nIf EC2SetComputerName is set to true, adds EC2Launch v2 setHostName task to yaml configuration\nThe migration tool applies the following configurations from EC2Launch v1 to EC2Launch v2.\nIf ExtendBootVolumeSize is set to false, removes EC2Launch v2 boot stage\nIf AdminPasswordType is set to Random, sets EC2Launch v2 password type to random\nIf AdminPasswordType is set to Specify, sets EC2Launch v2password type to static and password data to the password specified in AdminPassword\nIf SetWallpaper is set to false, removes EC2Launch v2 setWallpaper task\nIf AddDnsSuffixList is set to false, removes EC2Launch v2 setDnsSuffix task\nIf SetComputerName is set to true, adds EC2Launch v2 setHostName task"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/launch-agents-service-admin.html",
        "content": "If you've logged into your instance as a user with administrative rights, you can manage the EC2Launch v2 and EC2Config launch agents just as you would any other Windows service. EC2Launch v1 is a set of PowerShell scripts that is managed via scheduled task by default. This section covers service administration for EC2Launch v2 and EC2Config.\nTo apply updated settings to your instance, you can stop and restart the EC2Launch v2 agent or the EC2Config service launch agent from the Microsoft Management Console (MMC) interface for Services. Similarly, when you install a new version of the launch agent, you must stop the agent first, then restart it when the installation is complete.\nNote\nYou must open the MMC Services interface as an administrator to select these actions. To do this, you can select Run as administrator from the context menu. Alternatively, to open the interface using your keyboard, follow these steps:\nUsing the Tab key or arrow keys, select the Services menu item from the Administrative Tools menu.\nUse the following keyboard combination to open as an administrator: Ctrl + Shift + Enter.\nThe following procedures list steps to stop and start the launch agent on your instance.\nStop the launch agent\nLaunch and connect to your Windows instance.\nSelect Administrative Tools from the Windows Start menu.\nOpen the Services console as an administrator, as described at the beginning of this section.\nIn the list of services, select the agent that's running on your instance (EC2Launch or EC2Config), then choose Stop from the Action menu. Alternatively, you can use the context menu to stop the agent.\nRestart the launch agent\nLaunch and connect to your Windows instance.\nSelect Administrative Tools from the Windows Start menu.\nOpen the Services console as an administrator, as described at the beginning of this section.\nIn the list of services, select the agent that's running on your instance (EC2Launch or EC2Config), then choose Start or Restart from the Action menu. Alternatively, you can use the context menu to restart the agent.\nIf you don't need to update the configuration settings, create your own AMI, or use AWS Systems Manager, you can delete or uninstall the launch agent.\nDelete\nDeleting a service removes its registry subkey.\nUninstall\nUninstalling a service removes the files, the registry subkey, and any shortcuts to the service.\nDelete the launch agent\nLaunch and connect to your Windows instance.\nStart a Windows Command Prompt window.\nRun one of the following commands to delete the launch agent.\nRun the following command to delete the EC2Launch or EC2Launch v2:\nsc delete ec2launch\nRun the following command to delete the EC2Config service:\nsc delete ec2config\nUninstall the launch agent\nLaunch and connect to your Windows instance.\nChoose Windows System, then Control Panel from the Windows Start menu.\nChoose Programs and Features to open the list of programs that are installed on your instance.\nSelect your launch agent from the list (Amazon EC2Launch or EC2ConfigService), then choose Uninstall from the File menu. Alternatively, you can use the context menu.\nNote\nYou can see what launch agent version is installed in the Version column."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2launch-v2.html",
        "content": "All supported instances of Amazon EC2 that are launched from AWS Windows Server 2022 and Windows Server 2025 AMIs include the EC2Launch v2 launch agent (EC2Launch.exe) by default. We also provide Windows Server 2016 and 2019 AMIs with EC2Launch v2 installed as the default launch agent. These AMIs are provided in addition to the Windows Server 2016 and 2019 AMIs that include EC2Launch v1. You can search for Windows AMIs that include EC2Launch v2 by default by entering the following prefix in your search from the AMIs page in the Amazon EC2 console: EC2LaunchV2-Windows_Server-*.\nTo compare launch agent version features, see Compare Amazon EC2 launch agents.\nEC2Launch v2 performs tasks during instance startup and runs if an instance is stopped and later started, or restarted. EC2Launch v2 can also perform tasks on demand. Some of these tasks are automatically enabled, while others must be enabled manually. The EC2Launch v2 service supports all EC2Config and EC2Launch features.\nThis service uses a configuration file to control its operation. You can update the configuration file using either a graphical tool or by directly editing it as a single .yml file (agent-config.yml). The service binaries are located in the %ProgramFiles%\\Amazon\\EC2Launch directory.\nEC2Launch v2 publishes Windows event logs to help you troubleshoot errors and set triggers. For more information, see Windows event logs.\nThe EC2Launch v2 agent supports the following Windows Server operating system (OS) versions:\nSupported OS versions\nWindows Server 2025\nWindows Server 2022\nWindows Server 2019 (Long-Term Servicing Channel and Semi-Annual Channel)\nWindows Server 2016\nEC2Launch v2 concepts\nThe following concepts are useful to understand when considering EC2Launch v2.\nTask\nYou can invoke a task to perform an action on an instance. You can configure tasks in the agent-config.yml file or through user data. For a list of available tasks for EC2Launch v2, see EC2Launch v2 tasks. For task configuration schema and details, see EC2Launch v2 task configuration.\nStage\nA stage is a logical grouping of tasks that the EC2Launch v2 agent runs. Some tasks can run only in a specific stage. Others can run in multiple stages. When using agent-config.yml, you must specify a list of stages, and a list of tasks to run within each stage.\nThe service runs stages in the following order:\nStage 1: Boot\nStage 2: Network\nStage 3: PreReady\nWindows is ready\nAfter the PreReady stage completes, the service sends the Windows is ready message to the Amazon EC2 console.\nStage 4: PostReady\nUser data runs during the PostReady stage. Some script versions run before the agent-config.yml file PostReady stage, and some run after, as follows:\nBefore agent-config.yml\nYAML user data version 1.1\nXML user data\nAfter agent-config.yml\nYAML user data version 1.0 (legacy version for backwards compatibility)\nFor example stages and tasks, see Example: agent-config.yml.\nWhen you use user data, you must specify a list of tasks for the launch agent to run. The stage is implied. For example tasks, see Example: user data.\nEC2Launch v2 runs the list of tasks in the order that you specify in agent-config.yml and in user data. Stages run sequentially. The next stage starts after the previous stage completes. Tasks also run sequentially.\nFrequency\nTask frequency determines when tasks should run, depending on the boot context. Most tasks have only one allowed frequency. You can specify a frequency for executeScript tasks.\nYou will see the following frequencies in the EC2Launch v2 task configuration.\nOnce \u2013 The task runs once, when the AMI has booted for the first time (finished Sysprep).\nAlways \u2013 The task runs every time that the launch agent runs. The launch agent runs when:\nan instance starts or restarts\nthe EC2Launch service runs\nEC2Launch.exe run is invoked\nagent-config\nagent-config is a file that is located in the configuration folder for EC2Launch v2. It includes configuration for the boot, network, PreReady, and PostReady stages. This file is used to specify the instance configuration for tasks that should run when the AMI is either booted for the first time or for subsequent times.\nBy default, the EC2Launch v2 installation installs an agent-config file that includes recommended configurations that are used in standard Amazon Windows AMIs. You can update the configuration file to alter the default boot experience for your AMI that EC2Launch v2 specifies.\nUser data\nUser data is data that is configurable when you launch an instance. You can update user data to dynamically change how custom AMIs or quickstart AMIs are configured. EC2Launch v2 supports 60 kB user data input length. User data includes only the UserData stage, and therefore runs after the agent-config file. You can enter user data when you launch an instance using the launch instance wizard, or you can modify user data from the EC2 console. For more information about working with user data, see How Amazon EC2 handles user data for Windows instances.\nEC2Launch v2 task overview\nEC2Launch v2 can perform the following tasks at each boot:\nSet up new and optionally customized wallpaper that renders information about the instance.\nSet the attributes for the administrator account that is created on the local machine.\nAdd DNS suffixes to the list of search suffixes. Only suffixes that do not already exist are added to the list.\nSet drive letters for any additional volumes and extend them to use available space.\nWrite files from the configuration to the disk.\nRun scripts specified in the EC2Launch v2 config file or from user-data. Scripts from user-data can be plain text or zipped and provided as a base64 format.\nRun a program with given arguments.\nSet the computer name.\nSend instance information to the Amazon EC2 console.\nSend the RDP certificate thumbprint to the Amazon EC2 console.\nDynamically extend the operating system partition to include any unpartitioned space.\nRun user data. For more information about specifying user data, see EC2Launch v2 task configuration.\nSet non-persistent static routes to reach the metadata service and AWS KMS servers.\nSet non-boot partitions to mbr or gpt.\nStart the Systems Manager service following Sysprep.\nOptimize ENA settings.\nEnable OpenSSH for later Windows versions.\nEnable Jumbo Frames.\nSet Sysprep to run with EC2Launch v2.\nPublish Windows event logs.\nEC2Launch v2 directory structure\nEC2Launch v2 should be installed in the following directories:\nService binaries: %ProgramFiles%\\Amazon\\EC2Launch\nService data (settings, log files, and state files): %ProgramData%\\Amazon\\EC2Launch\nNote\nBy default, Windows hides files and folders under C:\\ProgramData. To view EC2Launch v2 directories and files, you must either enter the path in Windows Explorer or change the folder properties to show hidden files and folders.\nThe %ProgramFiles%\\Amazon\\EC2Launch directory contains binaries and supporting libraries. It includes the following subdirectories:\nsettings\nEC2LaunchSettingsUI.exe \u2014 user interface for modifying the agent-config.yml file\nYamlDotNet.dll \u2014 DLL for supporting some operations in the user interface\ntools\nebsnvme-id.exe \u2014 tool for examining the metadata of the EBS volumes on the instance\nAWSAcpiSpcrReader.exe \u2014 tool for determining the correct COM port to use\nEC2LaunchEventMessage.dll \u2014 DLL for supporting the Windows event logging for EC2Launch.\nservice\nEC2LaunchService.exe \u2014 Windows service executable that is launched when the launch agent runs as a service.\nEC2Launch.exe \u2014 main EC2Launch executable\nEC2LaunchAgentAttribution.txt \u2014 attribution for code used within EC2 Launch\nThe %ProgramData%\\Amazon\\EC2Launch directory contains the following subdirectories. All of the data produced by the service, including logs, configuration, and state, is stored in this directory.\nconfig \u2013 Configuration\nThe service configuration file is stored in this directory as agent-config.yml. This file can be updated to modify, add, or remove default tasks run by the service. Permission to create files in this directory is restricted to the administrator account to prevent privilege escalation.\nlog \u2013 Instance logs\nLogs for the service (agent.log), console (console.log), performance (bench.log), errors (err.log), and telemetry (telemetry.log are stored in this directory. Log files are appended to on subsequent executions of the service.\nstate \u2013 Service state data\nThe state that the service uses to determine which tasks should run is stored here. There is a .run-once file that indicates whether the service has already run after Sysprep (so tasks with a frequency of once will be skipped on the next run). This subdirectory includes a state.json and previous-state.json to track the status of each task.\nsysprep \u2013 Sysprep\nThis directory contains files that are used to determine which operations to perform by Sysprep when it creates a customized Windows AMI that can be reused.\nwallpaper \u2013 Wallpaper\nThis wallpaper images is stored in this directory.\nTelemetry\nTelemetry is additional information that helps AWS to better understand your requirements, diagnose issues, and deliver features to improve your experience with AWS services.\nEC2Launch v2 version 2.0.592 and later collect telemetry, such as usage metrics and errors. This data is collected from the Amazon EC2 instance on which EC2Launch v2 runs. This includes all Windows AMIs owned by AWS.\nThe following types of telemetry are collected by EC2Launch v2:\nUsage information \u2014 agent commands, install method, and scheduled run frequency.\nErrors and diagnostic information \u2014 agent installation error codes, run error codes, and error call stacks.\nExamples of collected data:\n2021/07/15 21:44:12Z: EC2LaunchTelemetry: IsAgentScheduledPerBoot=true\n2021/07/15 21:44:12Z: EC2LaunchTelemetry: IsUserDataScheduledPerBoot=true\n2021/07/15 21:44:12Z: EC2LaunchTelemetry: AgentCommandCode=1\n2021/07/15 21:44:12Z: EC2LaunchTelemetry: AgentCommandErrorCode=5\n2021/07/15 21:44:12Z: EC2LaunchTelemetry: AgentInstallCode=2\n2021/07/15 21:44:12Z: EC2LaunchTelemetry: AgentInstallErrorCode=0\nTelemetry is enabled by default. You can disable telemetry collection at any time. If telemetry is enabled, EC2Launch v2 sends telemetry data without additional customer notifications.\nTelemetry visibility\nWhen telemetry is enabled, it appears in the Amazon EC2 console output as follows.\n2021/07/15 21:44:12Z: Telemetry: <Data>\nDisable telemetry on an instance\nTo disable telemetry for a single instance, you can either set a system environment variable, or use the MSI to modify the installation.\nTo disable telemetry by setting a system environment variable, run the following command as an administrator.\nsetx /M EC2LAUNCH_TELEMETRY 0\nTo disable telemetry using the MSI, run the following command after you download the MSI.\nmsiexec /i \".\\AmazonEC2Launch.msi\" Remove=\"Telemetry\" /q\nMore topics for EC2Launch v2\nInstall the latest version of EC2Launch v2\nConfigure EC2Launch v2 settings for Windows instances\nTask definitions for EC2Launch v2 startup tasks\nTroubleshoot issues with the EC2Launch v2 agent\nEC2Launch v2 version histories"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2launch-v2-install.html",
        "content": "You can use one of the following methods to install the EC2Launch v2 agent on your EC2 instance:\nDownload the agent from Amazon S3 and install with Windows PowerShell. For download URLs, see EC2Launch v2 downloads on Amazon S3.\nInstall with SSM Distributor.\nInstall from an EC2 Image Builder component when you create a custom image.\nLaunch your instance from an AMI that has EC2Launch v2 pre-installed.\nWarning\nAmazonEC2Launch.msi uninstalls previous versions of the EC2 launch services, such as EC2Launch (v1) and EC2Config.\nFor install steps, select the tab that matches your preferred method.\nWindows PowerShell\nAWS Systems Manager Distributor\nEC2 Image Builder component\nAMI\nTo install the latest version of EC2Launch v2 agent with Windows PowerShell, follow these steps.\nCreate your local directory.\nNew-Item -Path \"$env:USERPROFILE\\Desktop\\EC2Launchv2\" -ItemType Directory\nSet the URL for your download location. Run the following command with the Amazon S3 URL you'll use. For download URLs, see EC2Launch v2 downloads on Amazon S3\n$Url = \"Amazon S3 URL/AmazonEC2Launch.msi\"\nUse the following compound command to download the agent and run the install\n$DownloadFile = \"$env:USERPROFILE\\Desktop\\EC2Launchv2\\\" + $(Split-Path -Path $Url -Leaf)\nInvoke-WebRequest -Uri $Url -OutFile $DownloadFile\nmsiexec /i \"$DownloadFile\"\nNote\nIf you receive an error when downloading the file, and you are using Windows Server 2016 or earlier, TLS 1.2 might need to be enabled for your PowerShell terminal. You can enable TLS 1.2 for the current PowerShell session with the following command and then try again:\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nThe msiexec command installs EC2Launch v2 in the following location on Windows Server instances: %ProgramFiles%\\Amazon\\EC2Launch. To verify that the install ran, you can check the local file system on your instance.\nAutomatically install and update EC2Launch v2 with AWS Systems Manager Distributor Quick Setup\nWith AWS Systems Manager Distributor Quick Setup, you can set up automatic updates for EC2Launch v2. The following process sets up a Systems Manager Association on your instance that automatically updates the EC2Launch v2 agent at a frequency that you specify. The Association that the Distributor Quick Setup creates can include instances within an AWS account and Region, or instances within an AWS Organization. For more information about setting up an organization, see Tutorial: Creating and configuring an organization in the AWS Organizations User Guide.\nBefore you begin, make sure that your instances meet all of the prerequisites.\nPrerequisites\nTo set up automatic updates with Distributor Quick Setup, your instances must meet the following prerequisites.\nYou have at least one running instance that supports EC2Launch v2. See supported operating systems for EC2Launch v2.\nYou've performed the Systems Manager set-up tasks on your instances. For more information, see Setting up Systems Manager in the AWS Systems Manager User Guide.\nEC2Launch v2 must be the only launch agent installed on your instance. If you have more than one launch agent installed, your Distributor Quick Setup configuration will fail. Before you configure EC2Launch v2 with a Distributor Quick Setup, uninstall EC2Config or EC2Launch v1 launch agents, if they exist.\nConfigure Distributor Quick Setup for EC2Launch v2\nTo create a configuration for EC2Launch v2 with Distributor Quick Setup, use the following settings when you complete the steps for Distributor package deployment:\nSoftware packages: Amazon EC2Launch v2 agent.\nUpdate frequency: Select a frequency from the list.\nTargets: Choose from the available deployment options.\nTo check the status of your configuration, navigate to the Systems Manager Quick Setup Configurations tab in the AWS Management Console.\nOpen the AWS Systems Manager console at https://console.aws.amazon.com/systems-manager/.\nIn the navigation pane, choose Quick Setup.\nIn the Configurations tab, select the row that's associated with the configuration that you created. The Configurations tab lists your configurations, and includes a summary of key details, such as Region, Deployment status, and Association status.\nNote\nThe association name for every EC2Launch v2 Distributor configuration begins with the following prefix: AWS-QuickSetup-Distributor-EC2Launch-Agent-.\nTo view details, select the configuration and choose View details.\nFor more information and troubleshooting steps, see Troubleshooting Quick Setup results in the AWS Systems Manager User Guide.\nEC2Launch v2 downloads on Amazon S3\nTo install the latest version of EC2Launch v2, download the installer from the following location:\n64Bit \u2014 https://s3.amazonaws.com/amazon-ec2launch-v2/windows/amd64/latest/AmazonEC2Launch.msi\nConfigure install options\nWhen you install or upgrade EC2Launch v2, you can configure installation options with the EC2Launch v2 install dialog or with the msiexec command in a command line shell.\nThe first time the EC2Launch v2 installer runs on an instance, it initializes launch agent settings on your instance as follows:\nIt creates the local path and writes the launch agent file to it. This is sometimes referred to as a clean install.\nIt creates the EC2LAUNCH_TELEMETRY environment variable if it doesn't already exist, and sets it based on your configuration.\nFor configuration details, select the tab that matches the configuration method that you'll use.\nAmazon EC2Launch Setup dialog\nCommand line\nWhen you install or upgrade EC2Launch v2, you can configure the following installation options through the EC2Launch v2 install dialog.\nBasic Install options\nSend Telemetry\nWhen you include this feature in the setup dialog, the installer sets the EC2LAUNCH_TELEMETRY environment variable to a value of 1. If you disable Send Telemetry, the installer sets the environment variable to a value of 0.\nWhen the EC2Launch v2 agent runs, it reads the EC2LAUNCH_TELEMETRY environment variable to determine whether to upload telemetry data. If the value equals 1, it uploads the data. Otherwise, it doesn't upload.\nDefault configuration\nThe default configuration for EC2Launch v2 is to overwrite the local launch agent if it exists already. The first time you run an install on an instance, the default configuration performs a clean install. If you disable the default configuration on the initial install, the installation fails.\nIf you run the install again on the instance, you can disable the default configuration to perform an upgrade that doesn't replace the %ProgramData%/Amazon/EC2Launch/config/agent-config.yml file.\nExample: Upgrade EC2Launch v2 with telemetry\nThe following example shows the EC2Launch v2 setup dialog configured to upgrade the current installation and enable telemetry. This configuration performs an install without replacing the agent configuration file, and sets the EC2LAUNCH_TELEMETRY environment variable to a value of 1.\nVerify the EC2Launch v2 version\nUse one of the following procedures to verify the version of EC2Launch v2 that is installed on your instances.\nWindows PowerShell\nWindows Control Panel\nVerify the installed version of EC2Launch v2 with Windows PowerShell, as follows.\nLaunch an instance from your AMI and connect to it.\nRun the following command in PowerShell to verify the installed version of EC2Launch v2:\n& \"C:\\Program Files\\Amazon\\EC2Launch\\EC2Launch.exe\" version\nTo view the latest updates for the AWS Windows AMIs, see Windows AMI version history in the AWS Windows AMI Reference.\nFor the latest version of EC2Launch v2, see EC2Launch v2 version history.\nFor the latest version of the EC2Launch v2 migration tool, see EC2Launch v2 migration tool version history.\nYou can receive notifications when new versions of the EC2Launch v2 service are released. For more information, see Subscribe to EC2 Windows launch agent notifications."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2launch-v2-settings.html",
        "content": "This section contains information about how to configure settings for EC2Launch v2.\nTopics include:\nChange settings using the EC2Launch v2 settings dialog box\nConfigure EC2Launch v2 using the CLI\nEC2Launch v2 task configuration\nEC2Launch v2 exit codes and reboots\nEC2Launch v2 and Sysprep\nChange settings using the EC2Launch v2 settings dialog box\nThe following procedure describes how to use the EC2Launch v2 settings dialog box to enable or disable settings.\nNote\nIf you improperly configure custom tasks in the agent-config.yml file, and you attempt to open the Amazon EC2Launch settings dialog box, you will receive an error. For example schema, see Example: agent-config.yml.\nLaunch and connect to your Windows instance.\nFrom the Start menu, choose All Programs, and then navigate to EC2Launch settings.\nOn the General tab of the EC2Launch settings dialog box, you can enable or disable the following settings.\nSet Computer Name\nIf this setting is enabled (it is disabled by default), the current host name is compared to the desired host name at each boot. If the host names do not match, the host name is reset, and the system then optionally reboots to pick up the new host name. If a custom host name is not specified, it is generated using the hexadecimal-formatted private IPv4 address, for example, ip-AC1F4E6. To prevent your existing host name from being modified, do not enable this setting.\nExtend Boot Volume\nThis setting dynamically extends Disk 0/Volume 0 to include any unpartitioned space. This can be useful when the instance is booted from a root device volume that has a custom size.\nSet Administrator Account\nWhen enabled, you can set the username and password attributes for the administrator account that is created on your local machine. If this feature is not enabled, an administrator account is not created on the system following Sysprep. Provide a password in adminPassword only if adminPasswordtype is Specify.\nThe password types are defined as follows:\nRandom\nEC2Launch generates a password and encrypts it using the user's key. The system disables this setting after the instance is launched so that this password persists if the instance is rebooted or stopped and started.\nSpecify\nEC2Launch uses the password that you specify in adminPassword. If the password does not meet the system requirements, EC2Launch generates a random password instead. The password is stored in agent-config.yml as clear text and is deleted after Sysprep sets the administrator password. EC2Launch encrypts the password using the user's key.\nDo not set\nEC2Launch uses the password that you specify in the unattend.xml file. If you don't specify a password in unattend.xml, the administrator account is disabled.\nStart SSM Service\nWhen selected, the Systems Manager service is enabled to start following Sysprep. EC2Launch v2 performs all of the tasks described earlier, and the SSM Agent processes requests for Systems Manager capabilities, such as Run Command and State Manager.\nYou can use Run Command to upgrade your existing instances to use the latest version of the EC2Launch v2 service and SSM Agent. For more information, see Update SSM Agent using Run Command in the AWS Systems Manager User Guide.\nOptimize ENA\nWhen selected, ENA settings are configured to ensure that ENA Receive Side Scaling and Receive Queue Depth settings are optimized for AWS. For more information, see Configure Receive side scaling CPU affinity.\nEnable SSH\nThis setting enables OpenSSH for later Windows versions to allow for remote system administration.\nEnable Jumbo Frames\nSelect to enable Jumbo Frames. Jumbo Frames can have unintended effects on your network communications, so ensure you understand how Jumbo Frames will impact your system before enabling. For more information about Jumbo Frames, see Jumbo frames (9001 MTU).\nPrepare for Imaging\nSelect whether you want your EC2 instance to shut down with or without Sysprep. When you want to run Sysprep with EC2Launch v2, choose Shutdown with Sysprep.\nOn the DNS Suffix tab, you can select whether you want to add a DNS suffix list for DNS resolution of servers running in EC2, without providing the fully qualified domain name. DNS suffixes can contain the variables $REGION and $AZ. Only suffixes that do not already exist will be added to the list.\nOn the Wallpaper tab, you can configure your instance wallpaper with a background image, and specify instance details for the wallpaper to display. Amazon EC2 generates the details each time you log in.\nYou can configure your wallpaper with the following controls.\nDisplay instance details on wallpaper \u2013 This checkbox activates or deactivates instance detail display on the wallpaper.\nImage path (.jpg) \u2013 Specify the path to the image to use as the wallpaper background.\nSelect attributes to display on wallpaper \u2013 Select the check boxes for the instance details that you want to appear on the wallpaper. Clear the check boxes for previously selected instance details that you want to remove from the wallpaper.\nDisplay Instance Tags on wallpaper \u2013 Select one of the following settings to display instance tags on the wallpaper:\nNone \u2013 Don't display any instance tags on the wallpaper.\nShow all \u2013 Display all instance tags on the wallpaper.\nShow filtered \u2013 Display specified instance tags on the wallpaper. When you select this setting, you can add instance tags that you want to display on your wallpaper in the Instance tag filter box.\nNote\nYou must enable tags in metadata to show tags on the wallpaper. For more information about instance tags and metadata, see View tags for your EC2 instances using instance metadata.\nOn the Volumes tab, select whether you want to initialize the volumes that are attached to the instance. Enabling sets drive letters for any additional volumes and extends them to use available space. If you select All, all of the storage volumes are initialized. If you select Devices, only devices that are specified in the list are initialized. You must enter the device for each device to be initialized. Use the devices listed on the EC2 console, for example, xvdb or /dev/nvme0n1. The dropdown list displays the storage volumes that are attached to the instance. To enter a device that is not attached to the instance, enter it in the text field.\nName, Letter, and Partition are optional fields. If no value is specified for Partition, storage volumes larger than 2 TB are initialized with the gpt partition type, and those smaller than 2 TB are initialized with the mbr partition type. If devices are configured, and a non-NTFS device either contains a partition table, or the first 4 KB of the disk contain data, then the disk is skipped and the action logged.\nThe following is an example configuration YAML file created from the settings entered in the EC2Launch dialog.\nversion: 1.0\nconfig:\n  - stage: boot\n tasks:\n      - task: extendRootPartition\n  - stage: preReady\n    tasks:\n      - task: activateWindows\n        inputs:\n          activation:\n            type: amazon\n      - task: setDnsSuffix\n        inputs:\n          suffixes:\n            - $REGION.ec2-utilities.amazonaws.com\n      - task: setAdminAccount\n        inputs:\n          password:\n            type: random\n      - task: setWallpaper\n        inputs:\n          path: C:\\ProgramData\\Amazon\\EC2Launch\\wallpaper\\Ec2Wallpaper.jpg\n          attributes:\n            - hostName\n            - instanceId\n            - privateIpAddress\n            - publicIpAddress\n            - instanceSize\n            - availabilityZone\n            - architecture\n            - memory\n            - network\n  - stage: postReady\n    tasks:\n      - task: startSsm\nConfigure EC2Launch v2 using the CLI\nYou can use the Command Line Interface (CLI) to configure your EC2Launch settings and manage the service. The following section contains descriptions and usage information for the CLI commands that you can use to manage EC2Launch v2.\nCommands\ncollect-logs\nget-agent-config\nlist-volumes\nreset\nrun\nstatus\nsysprep\nvalidate\nversion\nwallpaper\ncollect-logs\nCollects log files for EC2Launch, zips the files, and places them in a specified directory.\nExample\nec2launch collect-logs -o C:\\Mylogs.zip\nUsage\nec2launch collect-logs [flags]\nFlags\n-h, --help\nhelp for collect-logs\n-o, --output string\npath to zipped output log files\nget-agent-config\nPrints agent-config.yml in the format specified (JSON or YAML). If no format is specified, agent-config.yml is printed in the format previously specified.\nExample\nec2launch get-agent-config -f json\nExample 2\nThe following PowerShell commands show how to edit and save the agent-config file in JSON format.\n$config = & \"$env:ProgramFiles/Amazon/EC2Launch/EC2Launch.exe\" --format json | ConvertFrom-Json\n$jumboFrame =@\"\n{\n   \"task\": \"enableJumboFrames\"\n}\n\"@\n$config.config | %{if($_.stage -eq 'postReady'){$_.tasks += (ConvertFrom-Json -InputObject $jumboFrame)}}\n$config | ConvertTo-Json -Depth 6 | Out-File -encoding UTF8\n$env:ProgramData/Amazon/EC2Launch/config/agent-config.yml\nUsage\nec2launch get-agent-config [flags]\nFlags\n-h, --help\nhelp for get-agent-config\n-f, --format string\noutput format of agent-config file: json, yaml\nlist-volumes\nLists all of the storage volumes attached to the instance, including ephemeral and EBS volumes.\nExample\nec2launch list-volumes\nUsage\nec2launch list-volumes\nFlags\n-h, --help\nhelp for list-volumes\nreset\nThe main goal of this task is to reset the agent for the next time that it runs. To do that, the reset command deletes all of the agent state data for EC2Launch v2 from the local EC2Launch directory (see EC2Launch v2 directory structure). Reset optionally deletes the service and Sysprep logs.\nScript behavior depends on what mode the agent runs the scripts in \u2013 inline, or detached.\nInline (default)\nThe EC2Launch v2 agent runs scripts one at a time (detach: false). This is the default setting.\nNote\nWhen your inline script issues a reset or sysprep command, it runs immediately and resets the agent. The current task finishes, then the agent shuts down without running any further tasks.\nFor example, if the task that issues the command would have been followed by a startSsm task (included by default after user data runs), the task doesn't run and the Systems Manager service never starts.\nDetached\nThe EC2Launch v2 agent runs scripts concurrently with other tasks (detach: true).\nNote\nWhen your detached script issues a reset or sysprep command, those commands wait for the agent to finish before they run. Tasks after the executeScript will still run.\nExample\nec2launch reset -c\nUsage\nec2launch reset [flags]\nFlags\n-c, --clean\ncleans instance logs before reset\n-h, --help\nhelp for reset\nrun\nRuns EC2Launch v2.\nExample\nec2launch run\nUsage\nec2launch run [flags]\nFlags\n-h, --help\nhelp for run\nstatus\nGets the status of the EC2Launch v2 agent. Optionally blocks the process until the agent is finished. The process exit code determines the agent state:\n0 \u2013the agent ran and was successful.\n1 \u2013 the agent ran and failed.\n2 \u2013 the agent is still running.\n3 \u2013 the agent is in an unknown state. The agent state is not running or stopped.\n4 \u2013 an error occurred when attempting to retrieve the agent state.\n5 \u2013 the agent is not running and the status of the last known run is unknown. This could mean one of the following:\nboth the state.json and previous-state.json are deleted.\nthe previous-state.json is corrupted.\nThis is the agent state after running the reset command.\nExample:\nec2launch status -b\nUsage\nec2launch status [flags]\nFlags\n-b,--block\nblocks the process until the agent finishes running\n-h,--help\nhelp for status\nsysprep\nThe main goal of this task is to reset the agent for the next time that it runs. To do that, the sysprep command resets the agent state, updates the unattend.xml file, disables RDP, and runs Sysprep.\nScript behavior depends on what mode the agent runs the scripts in \u2013 inline, or detached.\nInline (default)\nThe EC2Launch v2 agent runs scripts one at a time (detach: false). This is the default setting.\nNote\nWhen your inline script issues a reset or sysprep command, it runs immediately and resets the agent. The current task finishes, then the agent shuts down without running any further tasks.\nFor example, if the task that issues the command would have been followed by a startSsm task (included by default after user data runs), the task doesn't run and the Systems Manager service never starts.\nDetached\nThe EC2Launch v2 agent runs scripts concurrently with other tasks (detach: true).\nNote\nWhen your detached script issues a reset or sysprep command, those commands wait for the agent to finish before they run. Tasks after the executeScript will still run.\nExample:\nec2launch sysprep\nUsage\nec2launch sysprep [flags]\nFlags\n-c,--clean\ncleans instance logs before sysprep\n-h,--help\nhelp for Sysprep\n-s,--shutdown\nshuts down the instance after sysprep\nvalidate\nValidates the agent-config file C:\\ProgramData\\Amazon\\EC2Launch\\config\\agent-config.yml.\nExample\nec2launch validate\nUsage\nec2launch validate [flags]\nFlags\n-h , --help\nhelp for validate\nversion\nGets the executable version.\nExample\nec2launch version\nUsage\nec2launch version [flags]\nFlags\n-h, --help\nhelp for version\nwallpaper\nSets new wallpaper to the wallpaper path that is provided (.jpg file), and displays the selected instance details.\nSyntax\nec2launch wallpaper ^\n--path=\"C:\\ProgramData\\Amazon\\EC2Launch\\wallpaper\\Ec2Wallpaper.jpg\" ^\n--all-tags ^\n--attributes=hostName,instanceId,privateIpAddress,publicIpAddress,instanceSize,availabilityZone,architecture,memory,network\nInputs\nParameters\n--allowed-tags [tag-name-1, tag-name-n]\n(Optional) Base64 encoded JSON array of instance tag names to display on the wallpaper. You can use this tag or the --all-tags, but not both.\n--attributes attribute-string-1, attribute-string-n\n(Optional) A comma-separated list of wallpaper attribute strings to apply settings to the wallpaper.\n[--path | -p] path-string\n(Required) Specifies the wallpaper background image file path.\nFlags\n--all-tags\n(Optional) Displays all of the instance tags on the wallpaper. You can use this tag or the --allowed-tags, but not both.\n[--help | -h]\nDisplays help for the wallpaper command.\nEC2Launch v2 task configuration\nThis section includes the configuration schema, tasks, details, and examples for agent-config.yml and user data.\nTasks and examples\nSchema: agent-config.yml\nConfigure EC2Launch v2 user data scripts that run during launch or reboot\nSchema: agent-config.yml\nThe structure of the agent-config.yml file is shown below. Note that a task cannot be repeated in the same stage. For task properties, see the task descriptions that follow.\nDocument structure: agent-config.yml\nJSON\n{\n \"version\": \"1.0\",\n \"config\": [\n  {\n   \"stage\": \"string\",\n   \"tasks\": [\n    {\n     \"task\": \"string\",\n     \"inputs\": {\n      ...\n     }\n    },\n    ...\n   ]\n  },\n  ...\n ]\n}\nYAML\nversion: 1.0\nconfig:\n- stage: string\n  tasks:\n  - task: string\n inputs:\n   ...\n  ...\n...\nExample: agent-config.yml\nThe following example shows settings for the agent-config.yml configuration file.\nversion: 1.0\nconfig:\n- stage: boot\n  tasks:\n  - task: extendRootPartition\n- stage: preReady\n  tasks:\n  - task: activateWindows\n    inputs:\n      activation:\n        type: amazon\n  - task: setDnsSuffix\n    inputs:\n      suffixes:\n      - $REGION.ec2-utilities.amazonaws.com\n  - task: setAdminAccount\n    inputs:\n      password:\n        type: random\n  - task: setWallpaper\n    inputs:\n      path: C:\\ProgramData\\Amazon\\EC2Launch\\wallpaper\\Ec2Wallpaper.jpg\n      attributes:\n      - hostName\n      - instanceId\n      - privateIpAddress\n      - publicIpAddress\n      - instanceSize\n      - availabilityZone\n      - architecture\n      - memory\n      - network\n- stage: postReady\n  tasks:\n  - task: startSsm\nConfigure EC2Launch v2 user data scripts that run during launch or reboot\nThe following JSON and YAML examples show the document structure for user data. Amazon EC2 parses each task named in the tasks array that you specify in the document. Each task has its own set of properties and requirements. For details, see the Task definitions for EC2Launch v2 startup tasks.\nNote\nA task must only appear once in the user data tasks array.\nDocument structure: user data\nJSON\n{\n \"version\": \"1.1\",\n \"tasks\": [\n  {\n   \"task\": \"string\",\n   \"inputs\": {\n    ...\n   },\n  },\n  ...\n ]\n}\nYAML\nversion: 1.1\ntasks:\n- task: string\n  inputs:\n    ...\n...\nExample: user data\nFor more information about user data, see How Amazon EC2 handles user data for Windows instances.\nThe following YAML document example shows a PowerShell script that EC2Launch v2 runs as user data to create a file.\nversion: 1.1\ntasks:\n- task: executeScript\n  inputs:\n  - frequency: always\n    type: powershell\n    runAs: localSystem\n    content: |-\n      New-Item -Path 'C:\\PowerShellTest.txt' -ItemType File\nYou can use an XML format for the user data that's compatible with previous versions of the launch agent. EC2Launch v2 runs the script as an executeScript task in the UserData stage. To conform with EC2Launch v1 and EC2Config behavior, the user data script runs as an attached/inline process by default.\nYou can add optional tags to customize how your script runs. For example, to run the user data script when the instance reboots in addition to one time when the instance launches, you can use the following tag:\n<persist>true</persist>\nExample:\n<powershell>\n  $file = $env:SystemRoot + \"\\Temp\" + (Get-Date).ToString(\"MM-dd-yy-hh-mm\")\n  New-Item $file -ItemType file\n</powershell>\n<persist>true</persist>\nYou can specify one or more PowerShell arguments with the <powershellArguments> tag. If no arguments are passed, EC2Launch v2 adds the following argument by default: -ExecutionPolicy Unrestricted.\nExample:\n<powershell>\n  $file = $env:SystemRoot + \"\\Temp\" + (Get-Date).ToString(\"MM-dd-yy-hh-mm\")\n  New-Item $file -ItemType file\n</powershell>\n<powershellArguments>-ExecutionPolicy Unrestricted -NoProfile -NonInteractive</powershellArguments>\nTo run an XML user data script as a detached process, add the following tag to your user data.\n<detach>true</detach>\nExample:\n<powershell>\n  $file = $env:SystemRoot + \"\\Temp\" + (Get-Date).ToString(\"MM-dd-yy-hh-mm\")\n  New-Item $file -ItemType file\n</powershell>\n<detach>true</detach>\nNote\nThe detach tag is not supported on previous launch agents.\nChange log: user data\nThe following table lists changes for user data, and cross-references them to the EC2Launch v2 agent version that applies.\nUser data version Details Introduced in\n1.1\nUser data tasks run before the PostReady stage in the agent config file.\nRuns user data before starting the Systems Manager Agent (same behavior as EC2Launch v1 and EC2Config).*\nEC2Launch v2 version 2.0.1245\n1.0\nWill be deprecated.\nUser data tasks run after the PostReady stage in the agent config file. This is not backwards compatible with EC2Launch v1.\nImpacted by a race condition between Systems Manager Agent start and user data tasks.\nEC2Launch v2 version 2.0.0\n* When used with the default agent-config.yml file.\nEC2Launch v2 exit codes and reboots\nYou can use EC2Launch v2 to define how exit codes are handled by your scripts. By default, the exit code of the last command that is run in a script is reported as the exit code for the entire script. For example, if a script includes three commands and the first command fails but the following ones succeed, the run status is reported as success because the final command succeeded.\nIf you want a script to reboot an instance, then you must specify exit 3010 in your script, even when the reboot is the last step in your script. exit 3010 instructs EC2Launch v2 to reboot the instance and call the script again until it returns an exit code that is not 3010, or until the maximum reboot count has been reached. EC2Launch v2 permits a maximum of 5 reboots per task. If you attempt to reboot an instance from a script by using a different mechanism, such as Restart-Computer, then the script run status will be inconsistent. For example, it may get stuck in a restart loop or not perform the restart.\nIf you are using an XML user data format that is compatible with older agents, the user data may run more times than you intend it to. For more information, see Service runs user data more than once in the Troubleshooting section.\nEC2Launch v2 and Sysprep\nThe EC2Launch v2 service runs Sysprep, a Microsoft tool that enables you to create a customized Windows AMI that can be reused. When EC2Launch v2 calls Sysprep, it uses the files in %ProgramData%\\Amazon\\EC2Launch to determine which operations to perform. You can edit these files indirectly using the EC2Launch settings dialog box, or directly using a YAML editor or a text editor. However, there are some advanced settings that aren't available in the EC2Launch settings dialog box, so you must edit those entries directly.\nIf you create an AMI from an instance after updating its settings, the new settings are applied to any instance that's launched from the new AMI. For information about creating an AMI, see Create an Amazon EBS-backed AMI."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2launch-v2-task-definitions.html",
        "content": "Each task that EC2Launch v2 runs during launch or statup has its own set of properties and requirements. Task details include settings for how often a task runs \u2013 once, or always, what stage of the agent boot process it runs in, syntax, and YAML document examples. For more information, review the task details shown in this reference.\nEC2Launch v2 Tasks\nactivateWindows\nenableJumboFrames\nenableOpenSsh\nexecuteProgram\nexecuteScript\nextendRootPartition\ninitializeVolume\noptimizeEna\nsetAdminAccount\nsetDnsSuffix\nsetHostName\nsetWallpaper\nstartSsm\nsysprep\nwriteFile\nactivateWindows\nActivates Windows against a set of AWS KMS servers. Activation is skipped if the instance is detected as Bring-Your-Own-License (BYOL).\nFrequency \u2014 once\nAllowedStages \u2014 [PreReady]\nInputs \u2014\nactivation: (map)\ntype: (string) activation type to use, set to amazon\nExample\ntask: activateWindows\n  inputs:\n    activation:\n    type: amazon\nenableJumboFrames\nEnables Jumbo Frames, which increase the maximum transmission unit (MTU) of the network adapter. For more information, see Jumbo frames (9001 MTU).\nFrequency \u2014 always\nAllowedStages \u2014 [PostReady, UserData]\nInputs \u2014 none\nExample\ntask: enableJumboFrames\nenableOpenSsh\nEnables Windows OpenSSH and adds the public key for the instance to the authorized keys folder.\nFrequency \u2014 once\nAllowedStages \u2014 [PreReady, UserData]\nInputs \u2014 none\nExample\nThe following example shows how to enable OpenSSH on an instance, and to add the public key for the instance to the authorized keys folder. This configuration works only on instances running Windows Server 2019 and later versions.\ntask: enableOpenSsh\nexecuteProgram\nRuns a program with optional arguments and a specified frequency.\nStages: You can run the executeProgram task during the PreReady, PostReady, and UserData stages.\nFrequency: configurable, see Inputs.\nInputs\nThis section contains one or more programs for the executeProgram task to run (inputs). Each input can include the following configurable settings:\nfrequency (string)\n(Required) Specify exactly one of the following values:\nonce\nalways\npath (string)\n(Required) The file path for the executable to run.\narguments (list of strings)\n(Optional) A comma separated list of arguments to provide to the program as input.\nrunAs (string)\n(Required) Must be set to localSystem\nOutput\nAll of the tasks write logfile entries to the agent.log file. Additional output from the executeProgram task is stored separately in a dynamically named folder, as follows:\n%LocalAppData%\\Temp\\EC2Launch#########\\outputfilename.tmp\nThe exact path to the output files is included in the agent.log file, for example:\nProgram file is created at: C:\\Windows\\system32\\config\\systemprofile\\AppData\\Local\\Temp\\EC2Launch123456789\\ExecuteProgramInputs.tmp\nOutput file is created at: C:\\Windows\\system32\\config\\systemprofile\\AppData\\Local\\Temp\\EC2Launch123456789\\Output.tmp\nError file is created at: C:\\Windows\\system32\\config\\systemprofile\\AppData\\Local\\Temp\\EC2Launch123456789\\Err.tmp\nOutput files for the executeProgram task\nExecuteProgramInputs.tmp\nContains the path for the executable, and all of the input parameters that the executeProgram task passes to it when it runs.\nOutput.tmp\nContains runtime output from the program that the executeProgram task runs.\nErr.tmp\nContains runtime error messages from the program that the executeProgram task runs.\nExamples\nThe following examples show how to run an executable file from a local directory on an instance with the executeProgram task.\nExample 1: Setup executable with one argument\nThis example shows an executeProgram task that runs a setup executable in quiet mode.\ntask: executeProgram\n  inputs:\n    - frequency: always\n      path: C:\\Users\\Administrator\\Desktop\\setup.exe\n      arguments: ['-quiet']\nExample 2: VLC executable with two arguments\nThis example shows an executeProgram task that runs a VLC executable file with two arguments passed as input parameters.\ntask: executeProgram\n  inputs:\n    - frequency: always\n      path: C:\\vlc-3.0.11-win64.exe \n      arguments: ['/L=1033','/S']\n      runAs: localSystem\nexecuteScript\nRuns a script with optional arguments and a specified frequency. Script behavior depends on what mode the agent runs the scripts in \u2013 inline, or detached.\nInline (default)\nThe EC2Launch v2 agent runs scripts one at a time (detach: false). This is the default setting.\nNote\nWhen your inline script issues a reset or sysprep command, it runs immediately and resets the agent. The current task finishes, then the agent shuts down without running any further tasks.\nFor example, if the task that issues the command would have been followed by a startSsm task (included by default after user data runs), the task doesn't run and the Systems Manager service never starts.\nDetached\nThe EC2Launch v2 agent runs scripts concurrently with other tasks (detach: true).\nNote\nWhen your detached script issues a reset or sysprep command, those commands wait for the agent to finish before they run. Tasks after the executeScript will still run.\nStages: You can run the executeScript task during the PreReady, PostReady, and UserData stages.\nFrequency: configurable, see Inputs.\nInputs\nThis section contains one or more scripts for the executeScript task to run (inputs). Each input can include the following configurable settings:\nfrequency (string)\n(Required) Specify exactly one of the following values:\nonce\nalways\ntype (string)\n(Required) Specify exactly one of the following values:\nbatch\npowershell\narguments (list of strings)\n(Optional) A list of string arguments to pass to the shell (not to the PowerShell script). This parameter isn't supported for type: batch. If no arguments are passed, EC2Launch v2 adds the following argument by default: -ExecutionPolicy Unrestricted.\ncontent (string)\n(Required) Script content.\nrunAs (string)\n(Required) Specify exactly one of the following values:\nadmin\nlocalSystem\ndetach (Boolean)\n(Optional) The EC2Launch v2 agent defaults to run scripts one at a time (detach: false). To run the script concurrently with other tasks, set the value to true (detach: true).\nNote\nScript exit codes (including 3010) have no effect when detach is set to true.\nOutput\nAll of the tasks write logfile entries to the agent.log file. Additional output from script that the executeScript task runs is stored separately in a dynamically named folder, as follows:\n%LocalAppData%\\Temp\\EC2Launch#########\\outputfilename.ext\nThe exact path to the output files is included in the agent.log file, for example:\nProgram file is created at: C:\\Windows\\system32\\config\\systemprofile\\AppData\\Local\\Temp\\EC2Launch123456789\\UserScript.ps1\nOutput file is created at: C:\\Windows\\system32\\config\\systemprofile\\AppData\\Local\\Temp\\EC2Launch123456789\\Output.tmp\nError file is created at: C:\\Windows\\system32\\config\\systemprofile\\AppData\\Local\\Temp\\EC2Launch123456789\\Err.tmp\nOutput files for the executeScript task\nUserScript.ext\nContains the script that the executeScript task ran. The file extension depends on the type of script you specified in the type parameter for the executeScript task, as follows:\nIf the type is batch, then the file extension is .bat.\nIf the type is powershell, then the file extension is .ps1.\nOutput.tmp\nContains runtime output from the script that the executeScript task runs.\nErr.tmp\nContains runtime error messages from the script that the executeScript task runs.\nExamples\nThe following examples show how to run an inline script with the executeScript task.\nExample 1: Hello world output text file\nThis example shows an executeScript task that runs a PowerShell script to create a \"Hello world\" text file on the C: drive.\ntask: executeScript\n  inputs:\n    - frequency: always\n      type: powershell\n      runAs: admin\n      content: |-\n        New-Item -Path 'C:\\PowerShellTest.txt' -ItemType File\n        Set-Content 'C:\\PowerShellTest.txt' \"Hello world\"\nExample 2: Run two scripts\nThis example shows that the executeScript task can run more than one script, and the script type doesn't necessarily need to match.\nThe first script (type: powershell) writes a summary of the processes that are currently running on the instance to a text file located on the C: drive.\nThe second script (batch) writes the system information to the Output.tmp file.\ntask: executeScript\n  inputs:\n    - frequency: always\n      type: powershell\n      runAs: localSystem\n      content: |\n        Get-Process | Out-File -FilePath C:\\Process.txt\n    - frequency: always\n      type: batch\n      runAs: localSystem\n      content: |\n        systeminfo\nExample 3: Idempotent system configuration with reboots\nThis example shows an executeScript task that runs an idempotent script to perform the following system configuration with a reboot between each step:\nRename the computer.\nJoin the computer to the domain.\nEnable Telnet.\nThe script ensures that each operation runs one time only. This prevents a reboot loop and makes the script idempotent.\ntask: executeScript\n  inputs:\n    - frequency: always\n      type: powershell\n      runAs: localSystem\n      content: |-\n        $name = $env:ComputerName\n        if ($name -ne $desiredName) {\n          Rename-Computer -NewName $desiredName\n          exit 3010\n        }\n        $domain = Get-ADDomain\n        if ($domain -ne $desiredDomain) \n        {\n          Add-Computer -DomainName $desiredDomain\n          exit 3010\n        }\n        $telnet = Get-WindowsFeature -Name Telnet-Client\n        if (-not $telnet.Installed)\n        {\n          Install-WindowsFeature -Name \"Telnet-Client\"\n          exit 3010 \n        }\nextendRootPartition\nExtends the root volume to use all of the available space on the disk.\nFrequency \u2014 once\nAllowedStages \u2014 [Boot]\nInputs \u2014 none\nExample\ntask: extendRootPartition\ninitializeVolume\nInitializes empty volumes that are attached to the instance so that they're activated and partitioned. The launch agent skips initialization if it detects that the volume is not empty. A volume is considered empty if the first 4 KiB of the volume are empty, or if the volume doesn't have a Windows-recognizable drive layout.\nThe letter input parameter is always applied when this task runs, regardless of whether the drive is already initialized.\nThe initializeVolume task performs the following actions.\nSet disk attributes offline and readonly to false.\nCreate a partition. If no partition type is specified in the partition input parameter, the following defaults apply:\nIf the disk size is smaller than 2 TB, set the partition type to mbr.\nIf the disk size is 2 TB or larger, set the partition type to gpt.\nFormat the volume as NTFS.\nSet the volume label as follows:\nUse the value of the name input parameter, if specified.\nIf the volume is ephemeral, and no name was specified, set the volume label to Temporary Storage Z.\nIf the volume is ephemeral (SSD or HDD \u2013 not Amazon EBS), create an Important.txt file at the root of the volume with the following content:\nThis is an 'Instance Store' disk and is provided at no additional charge.\n\n*This disk offers increased performance since it is local to the host\n*The number of Instance Store disks available to an instance vary by instance type\n*DATA ON THIS DRIVE WILL BE LOST IN CASES OF IMPAIRMENT OR STOPPING THE INSTANCE. PLEASE ENSURE THAT ANY IMPORTANT DATA IS BACKED UP FREQUENTLY\n\nFor more information, please refer to: Instance store temporary block storage for EC2 instances.\nSet the drive letter to the value specified in the letter input parameter.\nStages: You can run the initializeVolume task during the PostReady and UserData stages.\nFrequency: always.\nInputs\nYou can configure runtime parameters as follows:\ndevices (list of maps)\n(Conditional) Configuration for each device that the launch agent initializes. This is required if the initialize input parameter is set to devices.\ndevice (string, required) \u2013 Identifies the device during instance creation. For example, xvdb, xvdf, or \\dev\\nvme0n1.\nletter (string, optional) \u2013 One character. The drive letter to assign.\nname (string, optional) \u2013 The volume name to assign.\npartition (string, optional) \u2013 Specify one of the following values for the type of partition to create, or let the launch agent default based on volume size:\nmbr\ngpt\ninitialize (string)\n(Required) Specify exactly one of the following values:\nall\ndevices\nExamples\nThe following examples show sample input configurations for the initializeVolume task.\nExample 1: Initialize two volumes on an instance\nThis example shows an initializeVolume task that initializes two secondary volumes on an instance. The device named DataVolume2 in the example is ephemeral.\ntask: initializeVolume\ninputs:\n  initialize: devices\n  devices:\n  - device: xvdb\n    name: DataVolume1\n    letter: D\n    partition: mbr\n  - device: /dev/nvme0n1\n    name: DataVolume2\n    letter: E\n    partition: gpt\nExample 2: Initialize EBS volumes attached to an instance\nThis example shows an initializeVolume task that initializes all empty EBS volumes that are attached to the instance.\ntask: initializeVolume\ninputs:\n  initialize: all\noptimizeEna\nOptimizes ENA settings based on the current instance type; might reboot the instance.\nFrequency \u2014 always\nAllowedStages \u2014 [PostReady, UserData]\nInputs \u2014 none\nExample\ntask: optimizeEna\nsetAdminAccount\nSets attributes for the default administrator account that is created on the local machine.\nFrequency \u2014 once\nAllowedStages \u2014 [PreReady]\nInputs \u2014\nname: (string) name of the administrator account\npassword: (map)\ntype: (string) strategy to set the password, either as static, random, or doNothing\ndata: (string) stores data if the type field is static\nExample\ntask: setAdminAccount\ninputs:\n  name: Administrator\n  password:\n  type: random\nsetDnsSuffix\nAdds DNS suffixes to the list of search suffixes. Only suffixes that do not already exist are added to the list. For more information about how launch agents set DNS suffixes, see Configure DNS Suffix for EC2 Windows launch agents.\nFrequency \u2014 always\nAllowedStages \u2014 [PreReady]\nInputs \u2014\nsuffixes: (list of strings) list of one or more valid DNS suffixes; valid substitution variables are $REGION and $AZ\nExample\ntask: setDnsSuffix\ninputs:\n  suffixes:\n  - $REGION.ec2-utilities.amazonaws.com\nsetHostName\nSets the hostname of the computer to a custom string or, if hostName is not specified, the private IPv4 address.\nFrequency \u2014 always\nAllowedStages \u2014 [PostReady, UserData]\nInputs \u2014\nhostName: (string) optional host name, which must be formatted as follows.\nMust be 15 characters or less\nMust contain only alphanumeric (a-z, A-Z, 0-9) and hyphen (-) characters.\nMust not consist entirely of numerical characters.\nreboot: (boolean) denotes whether a reboot is permitted when the hostname is changed\nExample\ntask: setHostName\ninputs:\n  reboot: true\nsetWallpaper\nCreates the setwallpaper.lnk shortcut file in the startup folder of each existing user except for Default User. This shortcut file runs when the user logs in for the first time after instance boot. It sets up the instance with a custom wallpaper that displays the instance attributes.\nThe shortcut file path is:\n$env:SystemDrive/Users/<user>/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Startup/setwallpaper.lnk\nNote\nWhen you remove the setWallpaper task, it does not delete this shortcut file. For more information, see setWallpaper task is not enabled but the wallpaper resets at reboot.\nStages: You can configure wallpaper during the PreReady and UserData stages.\nFrequency: always\nWallpaper configuration\nYou can use the following settings to configure your wallpaper.\nInputs\nInput parameters that you provide, and attributes that you can set to configure your wallpaper:\nattributes (list of strings)\n(Optional) You can add one or more of the following attributes to your wallpaper:\narchitecture\navailabilityZone\nhostName\ninstanceId\ninstanceSize\nmemory\nnetwork\nprivateIpAddress\npublicIpAddress\ninstanceTags\n(Optional) You can use exactly one of the following options for this setting.\nAllTags (string) \u2013 Add all instance tags to your wallpaper.\ninstanceTags: AllTags\ninstanceTags (list of strings) \u2013 Specify a list of instance tag names to add to your wallpaper. For example:\ninstanceTags:\n  - Tag 1\n  - Tag 2\npath (string)\n(Required) The filename path of the local .jpg format image file to use for your wallpaper image.\nExample\nThe following example shows wallpaper configuration inputs that set the file path for the wallpaper background image, along with instance tags named Tag 1 and Tag 2, and attributes that include the host name, instance ID, and private and public IP addresses for the instance.\ntask: setWallpaper\ninputs:\n  path: C:\\ProgramData\\Amazon\\EC2Launch\\wallpaper\\Ec2Wallpaper.jpg\n  attributes:\n  - hostName\n  - instanceId\n  - privateIpAddress\n  - publicIpAddress\ninstanceTags:\n  - Tag 1\n  - Tag 2\nNote\nYou must enable tags in metadata to show tags on the wallpaper. For more information about instance tags and metadata, see View tags for your EC2 instances using instance metadata.\nstartSsm\nStarts the Systems Manager (SSM) service following Sysprep.\nFrequency \u2014 always\nAllowedStages \u2014 [PostReady, UserData]\nInputs \u2014 none\nExample\ntask: startSsm\nsysprep\nResets the service state, updates unattend.xml, disables RDP, and runs Sysprep. This task runs only after all other tasks are completed.\nFrequency \u2014 once\nAllowedStages \u2014 [UserData]\nInputs \u2014\nclean: (boolean) cleans instance logs before running Sysprep\nshutdown: (boolean) shuts down the instance after running Sysprep\nExample\ntask: sysprep\ninputs:\nclean: true\nshutdown: true\nwriteFile\nWrites a file to a destination.\nFrequency \u2014 see Inputs\nAllowedStages \u2014 [PostReady, UserData]\nInputs \u2014\nfrequency: (string) one of once or always\ndestination: (string) path to which to write the content\ncontent: (string) text to write to the destination\nExample\ntask: writeFile\ninputs:\n  - frequency: once\n  destination: C:\\Users\\Administrator\\Desktop\\booted.txt\n  content: Windows Has Booted"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2launchv2-troubleshooting.html",
        "content": "This section shows common troubleshooting scenarios for EC2Launch v2, information about viewing Windows event logs, and console log output and messages.\nTroubleshooting topics\nCommon scenarios\nWindows event logs\nEC2Launch v2 console log output\nCommon troubleshooting scenarios\nThis section shows common troubleshooting scenarios and steps for resolution.\nScenarios\nService fails to set the wallpaper\nService fails to run user data\nService runs a task only one time\nService fails to run a task\nService runs user data more than once\nScheduled tasks from EC2Launch v1 fail to run after migration to EC2Launch v2\nService initializes an EBS volume that is not empty\nsetWallpaper task is not enabled but the wallpaper resets at reboot\nService stuck in running status\nInvalid agent-config.yml prevents opening EC2Launch v2 settings dialog box\ntask:executeScript should be unique and only invoked once\nService fails to set the wallpaper\nResolution\nCheck that %AppData%\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\setwallpaper.lnk exists.\nCheck %ProgramData%\\Amazon\\EC2Launch\\log\\agent.log to see if any errors occurred.\nService fails to run user data\nPossible cause: Service may have failed before running user data.\nResolution\nCheck %ProgramData%\\Amazon\\EC2Launch\\state\\previous-state.json.\nSee if boot, network, preReady, and postReadyLocalData have all been marked as success.\nIf one of the stages failed, check %ProgramData%\\Amazon\\EC2Launch\\log\\agent.log for specific errors.\nService runs a task only one time\nResolution\nCheck the frequency of the task.\nIf the service already ran after Sysprep, and the task frequency is set to once, the task will not run again.\nSet the frequency of the task to always if you want it to run the task every time EC2Launch v2 runs.\nService fails to run a task\nResolution\nCheck the latest entries in %ProgramData%\\Amazon\\EC2Launch\\log\\agent.log.\nIf no errors occurred, try running the service manually from \"%ProgramFiles%\\Amazon\\EC2Launch\\EC2Launch.exe\" run to see if the tasks succeed.\nService runs user data more than once\nResolution\nUser data is handled differently between EC2Launch v1 and EC2Launch v2. EC2Launch v1 runs user data as a scheduled task on the instance when persist is set to true. If persist is set to false, the task is not scheduled even when it exits with a reboot or is interrupted while running.\nEC2Launch v2 runs user data as an agent task and tracks its run state. If user data issues a computer restart or if user data was interrupted while running, the run state persists as pending and the user data will run again at the next instance boot. If you want to prevent the user data script from running more than once, make the script idempotent.\nThe following example idempotent script sets the computer name and joins a domain.\n<powershell>\n  $name = $env:computername\n  if ($name -ne $desiredName) {\n Rename-Computer -NewName $desiredName\n  }\n  $domain = Get-ADDomain\n  if ($domain -ne $desiredDomain) \n  {\n Add-Computer -DomainName $desiredDomain\n  }\n  $telnet = Get-WindowsFeature -Name Telnet-Client\n  if (-not $telnet.Installed)\n  {\n Install-WindowsFeature -Name \"Telnet-Client\"\n  }\n</powershell>\n<persist>false</persist>\nScheduled tasks from EC2Launch v1 fail to run after migration to EC2Launch v2\nResolution\nThe migration tool does not detect any scheduled tasks linked to EC2Launch v1 scripts; therefore, it does not automatically set up those tasks in EC2Launch v2. To configure these tasks, edit the agent-config.yml file, or use the EC2Launch v2 settings dialog box. For example, if an instance has a scheduled task that runs InitializeDisks.ps1, then after you run the migration tool, you must specify the volumes you want to initialize in the EC2Launch v2 settings dialog box. See Step 6 of the procedure to Change settings using the EC2Launch v2 settings dialog box.\nService initializes an EBS volume that is not empty\nResolution\nBefore it initializes a volume, EC2Launch v2 attempts to detect whether it is empty. If a volume is not empty, it skips the initialization. Any volumes that are detected as not empty are not initialized. A volume is considered empty if the first 4 KiB of a volume are empty, or if a volume does not have a Windows-recognizable drive layout. A volume that was initialized and formatted on a Linux system does not have a Windows-recognizable drive layout, for example MBR or GPT. Therefore, it will be considered as empty and initialized. If you want to preserve this data, do not rely on EC2Launch v2 empty drive detection. Instead, specify volumes that you would like to initialize in the EC2Launch v2 settings dialog box (see step 6) or in the agent-config.yml.\nsetWallpaper task is not enabled but the wallpaper resets at reboot\nThe setWallpaper task creates the setwallpaper.lnk shortcut file in the startup folder of each existing user except for Default User. This shortcut file runs when the user logs in for the first time after instance boot. It sets up the instance with a custom wallpaper that displays the instance attributes. Removing the setWallpaper task does not delete this shortcut file. You must manually delete this file or delete it using a script.\nThe shortcut path is:\n$env:SystemDrive/Users/<user>/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Startup/setwallpaper.lnk\nResolution\nManually delete this file, or delete it using a script.\nExample PowerShell script to delete shortcut file\nforeach ($userDir in (Get-ChildItem \"C:\\Users\" -Force -Directory).FullName)\n{\n $startupPath = Join-Path $userDir -ChildPath \"AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\"\n if (Test-Path $startupPath)\n {\n  $wallpaperSetupPath = Join-Path $startupPath -ChildPath \"setwallpaper.lnk\"\n  if (Test-Path $wallpaperSetupPath)\n  {\n   Remove-Item $wallpaperSetupPath -Force -Confirm:$false\n  }\n }\n}\nService stuck in running status\nDescription\nEC2Launch v2 is blocked, with log messages (agent.log) similar to the following:\n2022-02-24 08:08:58 Info: *****************************************************************************************\n2022-02-24 08:08:58 Info: EC2Launch Service starting\n2022-02-24 08:08:58 Info: Windows event custom log exists: Amazon EC2Launch\n2022-02-24 08:08:58 Info: ACPI SPCR table not supported. Bailing Out\n2022-02-24 08:08:58 Info: Serial port is in use. Waiting for Serial Port...\n2022-02-24 08:09:00 Info: ACPI SPCR table not supported. Use default console port.\n2022-02-24 08:09:02 Info: ACPI SPCR table not supported. Use default console port.\n2022-02-24 08:09:04 Info: ACPI SPCR table not supported. Use default console port.\n2022-02-24 08:09:06 Info: ACPI SPCR table not supported. Use default console port.\nPossible cause\nSAC is enabled and using the serial port. For more information, see Use SAC to troubleshoot your Windows instance.\nResolution\nTry the following steps to resolve this issue:\nDisable the service that is using the serial port.\nIf you want the service to continue to use the serial port, write custom scripts to perform launch agent tasks and invoke them as scheduled tasks.\nInvalid agent-config.yml prevents opening EC2Launch v2 settings dialog box\nDescription\nEC2Launch v2 settings attempts to parse the agent-config.yml file before it opens the dialog box. If the YAML configuration file does not follow the supported schema, the dialog box will show the following error:\nUnable to parse configuration file agent-config.yml. Review configuration file. Exiting application.\nResolution\nVerify that the configuration file follows the supported schema.\nIf you want to start from scratch, copy the default configuration file into agent-config.yml. You can use the example agent-config.yml provided in the Task Configuration section.\nYou can also start over by deleting agent-config.yml. EC2Launch v2 settings generates an empty configuration file.\ntask:executeScript should be unique and only invoked once\nDescription\nA task cannot be repeated in the same stage.\nResolution\nSome tasks must be input as an array, such as executeScript and executeProgram. For an example of how to write the script as an array, see executeScript.\nWindows event logs\nEC2Launch v2 publishes Windows event logs for important events, such as service starting, Windows is ready, and task success and failure. Event identifiers uniquely identify a particular event. Each event contains stage, task, and level information, and a description. You can set triggers for specific events using the event identifier.\nEvent IDs provide information about an event and uniquely identify some events. The least significant digit of an event ID indicates the severity of an event.\nEvent Least significant digit\nSuccess . . .0\nInformational . . .1\nWarning . . .2\nError . . .3\nService-related events that are generated when the service starts or stops include a single digit event identifier.\nEvent Single digit identifier\nSuccess 0\nInformational 1\nWarning 2\nError 3\nThe event messages for EC2LaunchService.exe events begin with Service:. The event messages for EC2Launch.exe events do not begin with Service:.\nFour digit event IDs include information about the stage, task, and severity of an event.\nTopics\nEvent ID format\nEvent ID examples\nWindows event log schema\nEvent ID format\nThe following table shows the format of an EC2Launch v2 event identifier.\n3 2 1 0\nS\nT\nL\nThe letters and numbers in the table represent the following event type and definitions.\nEvent type Definition\nS (Stage)\n0 - Service-level message\n1 - Boot\n2 - Network\n3 - PreReady\n5 - Windows is Ready\n6 - PostReady\n7 - User Data\nT (Task)\nThe tasks represented by the corresponding two values are different for each stage. To view the complete list of events, see Windows Event log schema.\nL (Level of the event)\n0 - Success\n1 - Informational\n2 - Warning\n3 - Error\nEvent ID examples\nThe following are example event IDs.\n5000 - Windows is ready to use\n3010 - Activate windows task in PreReady stage was successful\n6013 - Set wallpaper task in PostReady Local Data stage encountered an error\nWindows event log schema\nMessageId/Event Id Event message\n. . .0 Success\n. . .1 Informational\n. . .2 Warning\n. . .3 Error\nx EC2Launch service-level logs\n0 EC2Launch service exited successfully\n1 EC2Launch service informational logs\n2 EC2Launch service warning logs\n3 EC2Launch service error logs\n10 Replace state.json with previous-state.json\n100 Serial Port\n200 Sysprep\n300 PrimaryNic\n400 Metadata\nx000 Stage (1 digit), Task (2 digits), Status (1 digit)\n1000 Boot\n1010 Boot - extend_root_partition\n2000 Network\n2010 Network - add_routes\n3000 PreReady\n3010 PreReady - activate_windows\n3020 PreReady - install_egpu_manager\n3030 PreReady - set_monitor_on\n3040 PreReady - set_hibernation\n3050 PreReady - set_admin_account\n3060 PreReady - set_dns_suffix\n3070 PreReady - set_wallpaper\n3080 PreReady - set_update_schedule\n3090 PreReady - output_log\n3100 PreReady - enable_open_ssh\n5000 Windows is Ready to use\n6000 PostReadyLocalData\n7000 PostReadyUserData\n6010/7010 PostReadyLocal/UserData - set_wallpaper\n6020/7020 PostReadyLocal/UserData - set_update_schedule\n6030/7030 PostReadyLocal/UserData - set_hostname\n6040/7040 PostReadyLocal/UserData - execute_program\n6050/7050 PostReadyLocal/UserData - execute_script\n6060/7060 PostReadyLocal/UserData - manage_package\n6070/7070 PostReadyLocal/UserData - initialize_volume\n6080/7080 PostReadyLocal/UserData - write_file\n6090/7090 PostReadyLocal/UserData - start_ssm\n7100 PostReadyUserData - enable_open_ssh\n6110/7110 PostReadyLocal/UserData - enable_jumbo_frames\nEC2Launch v2 console log output\nThis section contains sample console log output for EC2Launch v2 and lists all of the EC2Launch v2 console log error messages to help you to troubleshoot issues. For more information about instance console output and how to access it, see Instance console output.\nOutputs\nEC2Launch v2 console log output\nEC2Launch v2 console log messages\nEC2Launch v2 console log output\nThe following is sample console log output for EC2Launch v2.\n2023/11/30 20:18:53Z: Windows sysprep configuration complete.\n2023/11/30 20:18:57Z: Message: Waiting for access to metadata...\n2023/11/30 20:18:57Z: Message: Meta-data is now available.\n2023/11/30 20:18:57Z: AMI Origin Version: 2023.11.15\n2023/11/30 20:18:57Z: AMI Origin Name: Windows_Server-2022-English-Full-Base\n2023/11/30 20:18:58Z: OS: Microsoft Windows NT 10.0.20348\n2023/11/30 20:18:58Z: OsVersion: 10.0\n2023/11/30 20:18:58Z: OsProductName: Windows Server 2022 Datacenter\n2023/11/30 20:18:58Z: OsBuildLabEx: 20348.1.amd64fre.fe_release.210507-1500\n2023/11/30 20:18:58Z: OsCurrentBuild: 20348\n2023/11/30 20:18:58Z: OsReleaseId: 2009\n2023/11/30 20:18:58Z: Language: en-US\n2023/11/30 20:18:58Z: TimeZone: UTC\n2023/11/30 20:18:58Z: Offset: UTC +0000\n2023/11/30 20:18:58Z: Launch: EC2 Launch v2.0.1643\n2023/11/30 20:18:58Z: AMI-ID: ami-1234567890abcdef1\n2023/11/30 20:18:58Z: Instance-ID: i-1234567890abcdef0\n2023/11/30 20:18:58Z: Instance Type: c5.large\n2023/11/30 20:19:00Z: Driver: AWS NVMe Driver v1.5.0.33\n2023/11/30 20:19:00Z: SubComponent: AWS NVMe Driver v1.5.0.33; EnableSCSIPersistentReservations: 0\n2023/11/30 20:19:00Z: Driver: AWS PV Driver Package v8.4.3\n2023/11/30 20:19:01Z: Driver: Amazon Elastic Network Adapter v2.6.0.0\n2023/11/30 20:19:01Z: RDPCERTIFICATE-SUBJECTNAME: EC2AMAZ-SO1T009\n2023/11/30 20:19:01Z: RDPCERTIFICATE-THUMBPRINT: 1234567890ABCDEF1234567890ABCDEF1234567890\n2023/11/30 20:19:09Z: SSM: Amazon SSM Agent v3.2.1705.0\n2023/11/30 20:19:13Z: Username: Administrator\n2023/11/30 20:19:13Z: Password: <Password>\n1234567890abcdef1EXAMPLEPASSWORD\n</Password>\n2023/11/30 20:19:14Z: User data format: no_user_data \n2023/11/30 20:19:14Z: EC2LaunchTelemetry: IsTelemetryEnabled=true\n2023/11/30 20:19:14Z: EC2LaunchTelemetry: AgentOsArch=windows_amd64\n2023/11/30 20:19:14Z: EC2LaunchTelemetry: IsAgentScheduledPerBoot=true\n2023/11/30 20:19:14Z: EC2LaunchTelemetry: AgentCommandErrorCode=0\n2023/11/30 20:19:14Z: Message: Windows is Ready to use\nEC2Launch v2 console log messages\nThe following is a list of all of the EC2Launch v2 console log messages.\nMessage: Error EC2Launch service is stopping. {error message}\n Error setting up EC2Launch agent folders\n See instance logs for detail\n Error stopping service\n Error initializing service\nMessage: Windows sysprep configuration complete\nMessage: Invalid administrator username: {invalid username}\nMessage: Invalid administrator password\nUsername: {username}\nPassword: <Password>{encrypted password}</Password>\nAMI Origin Version: {amiVersion}\nAMI Origin Name: {amiName}\nMicrosoft Windows NT {currentVersion}.{currentBuildNumber}\nOsVersion: {currentVersion}\nOsProductName: {productName}\nOsBuildLabEx: {buildLabEx}\nOsCurrentBuild: {currentBuild}\nOsReleaseId: {releaseId}\nLanguage: {language}\nTimeZone: {timeZone}\nOffset: UTC {offset}\nLaunch agent: EC2Launch {BuildVersion}\nAMI-ID: {amiId}\nInstance-ID: {instanceId}\nInstance Type: {instanceType}\nRDPCERTIFICATE-SUBJECTNAME: {certificate subject name}\nRDPCERTIFICATE-THUMBPRINT: {thumbprint hash}\nSqlServerBilling: {sql billing}\nSqlServerInstall: {sql patch leve, edition type}\nDriver: AWS NVMe Driver {version}\nDriver: Inbox NVMe Driver {version}\nDriver: AWS PV Driver Package {version}\nMicrosoft-Hyper-V is installed.\nUnable to get service status for vmms\nMicrosoft-Hyper-V is {status}\nSSM: Amazon SSM Agent {version}\nAWS VSS Version: {version}\nMessage: Windows sysprep configuration complete\nMessage: Windows is being configured. SysprepState is {state}\nWindows is still being configured. SysprepState is {state}\nMessage: Windows is Ready to use\nMessage: Waiting for meta-data accessibility...\nMessage: Meta-data is now available.\nMessage: Still waiting for meta-data accessibility...\nMessage: Failed to find primary network interface...retrying...\nUser data format: {format}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2launchv2-versions.html",
        "content": "Version histories\nEC2Launch v2 version history\nEC2Launch v2 migration tool version history\nEC2Launch v2 version history\nThe following table describes the released versions of EC2Launch v2.\nVersion Details Release date\n2.0.2046\nUpdated the wallpaper path in the agent-config.yml file to use the default operating system wallpaper path.\nAdded telemetry to monitor the locations where agent errors occurred.\nUpdated agent log messaging.\nOctober 3, 2024\n2.0.1981\nUpdated EC2Launch.exe CLI command error messages for non-Administrator users.\nAugust 6, 2024\n2.0.1948\nAdded telemetry to monitor usage of admin password options.\nModified EC2Launch permissions.\nJuly 1, 2024\n2.0.1924\nUpdated the EC2Launch Settings UI.\nUpdated the wallpaper CLI command.\nUpdated the EC2Launch installer.\nJune 10, 2024\n2.0.1914\nAdd routes with unspecified gateway addresses (0.0.0.0 for IPv4 or :: for IPv6).\nAlways add both IPv4 and IPv6 routes.\nFixed an issue where the Administrator username was added to the agent-config.yml file when it wasn't specified.\nModified EC2Launch v2 permissions.\nJune 5, 2024\n2.0.1881\nAdded an encrypted password option to setAdminAccount task.\nAdded CLI command to encrypt static password in agent-config.yml.\nFixed an issue where XML user data doesn't add PowerShell arguments when it runs with Administrator permissions. For more details, see How Amazon EC2 handles user data for Windows instances.\nAdjusted PowerShell arguments for the executeScript task and user data scripts when they run with LocalSystem permissions. When arguments are empty, the agent uses the following default value: -ExecutionPolicy Unrestricted.\nPrevented printing duplicate driver versions to the console log.\nMay 8, 2024\n2.0.1815\nAdjusted error handling to fail on critical setup issues before sysprep.\nFixed an issue where wallpaper and hostname tasks could use an incorrect IP address on instances with multiple IP addresses assigned to the primary network interface.\nWallpaper and hostname tasks changed to get private IP from IMDS first, then fail back to WMI if IMDS is disabled.\nFixed an issue with the initializeVolume task where sc1 volumes failed to initialize due to a transient error.\nMarch 6, 2024\n2.0.1739\nFixed an issue that prevented exit codes from being captured by executeScript tasks that were run as the Windows Administrator user.\nJanuary 17, 2024\n2.0.1702\nRestricted Telemetry.log permissions to read-execute only for standard users.\nConfigured the EC2Launch Windows service to restart on start-up failure.\nMade add-routes failures actionable by logging route.exe stderr output.\nFixed an issue that occurs when route metrics are outside of the range [1, 9999].\nAdded wallpaper support to several new instance types.\nFixed an issue caused by user data scripts that run as the Windows Administrator user and send output to stderr.\nJanuary 4, 2024\n2.0.1643\nUpdated the ebsnvme-id.exe tool to version 1.1.0.7.\nFixed an issue with receive side scaling (RSS) and receive queue depth settings on metal instance types that begin with 'metal-*', such as metal-48x1.\nRemoved telemetry event that reports on XML userdata commands that block the agent.\nUpdated setDnsSuffix task to limit domain name devolution based on registry entry: HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\Dnscache\\Parameters\\DomainNameDevolutionLevel.\nAdded a public task and CLI that adds network routes.\nNote \u2013 This is the last version to officially support Windows Server 2012.\nNote \u2013 This is the last version to officially support 32-bit operating systems.\nOctober 4, 2023\n2.0.1580\nChanged the way that the launch agent handles errors when you modify log file permissions.\nAdded a timeout for connecting to the serial port. The timeout allows the launch agent to continue running if the serial port is in use.\nSeptember 5, 2023\n2.0.1521\nDeprecated the \u2014block flag of the EC2Launch.exe reset and sysprep commands.\nUpdated EC2Launch.exe to detect and handle the reset and sysprep commands that are used in inline executeScript tasks. Those commands cause the agent to stop running after the executeScript task runs them.\nUpdated XML userdata scripts to run inline by default.\nEnable XML userdata scripts to run detached with the new detach tag. For more details, see User data scripts.\nMade the following changes to the agent log.\nUpdated agent log messages.\nRemoved executeScript content and output from the agent log.\nRemoved executeProgram arguments and output from the agent log.\nMade the following changes to the console log.\nAdded EnableSCSIPersistentReservations value to the console log.\nJuly 3, 2023\n2.0.1303\nAdded additional error handling and log lines when adding network routes.\nAllowed executeScript and executeProgram tasks in the PreReady stage.\nUpdated executeProgram task to generate output files similar to the output from the executeScript task. For more information, see executeProgram.\nAdded telemetry to monitor usage of blocking agent commands in XML user data.\nMay 3, 2023\n2.0.1245\nImproved visibility into crashes by logging crash call stacks in clear text.\nAdded the EventLog service as a startup dependency to fix a crash when the Amazon EC2Launch service starts up faster than the EventLog service.\nMade XML user data run before PostReady stage from the agent config file (like EC2Launch v1 and EC2Config).\nAdded YAML user data version 1.1 to make user data run before PostReady stage from the agent config file (YAML user data version 1.0 runs after PostReady stage from the agent config file).\nMarch 8, 2023\n2.0.1173\nAdds an optional feature to display instance tags on wallpaper. For more information, see setWallpaper .\nAdds error handling when the security group for Elastic Graphics is not properly set up.\nFixes a timeout when the Instance Metadata Service is not enabled.\nFebruary 6, 2023\n2.0.1121\nFixes an issue where a 404 error is printed to the wallpaper when no public IPv4 address is assigned.\nFixes an issue where the volume's file system is formatted as RAW instead of NTFS when its device's drive letter is set to D.\nFixes an issue where NVMe SSD volumes are incorrectly identified as EBS volumes.\nFixes an error when activating Windows when IMDS is disabled.\nJanuary 4, 2023\n2.0.1082\nFixes an issue where the setWallpaper: privateIpAddress field is blank when IMDS is disabled.\nFixes an issue with setting the hostname to the private IPv4 address when IMDS is disabled.\nFixes an issue with initializing volumes on Windows Server 2012.\nFixes an issue with setting jumbo frames.\nFixes an error when no SSH key is specified at instance launch.\nFixes an error on Windows Server 2012 when Windows does not have a 'ReleaseId' registry key.\nDecember 7, 2022\n2.0.1011\nFixes logic for finding network adapter when PnPDeviceID is empty.\nNovember 11, 2022\n2.0.1009\nUses PCI segment information to select the console port.\nNovember 8, 2022\n2.0.982\nAdds retry logic to get RDP information.\nFixes errors during volume initialization on d2.8xlarge instances.\nFixes issue where an incorrect network adapter can be selected after a reboot.\nRemoves false alarm error message when ACPI SPCR is unavailable.\nOctober 31, 2022\n2.0.863\nUpdates IMDS wait logic to make only IMDSv2 requests.\nAdds logic to assign drive letter to volumes that are already initialized but not mounted.\nPrints a more specific error message when key pair type is not supported.\nFixes 3010 reboot code bug.\nAdds check for invalid base64-encoded user data.\nJuly 6, 2022\n2.0.698\nFixes typo in log output when executing scripts.\nJanuary 30, 2022\n2.0.674\nTelemetry uploads the enabled/disabled privacy control.\nFixes index out of bounds bug.\nRemoves wallpaper shortcuts during sysprep.\nNovember 15, 2021\n2.0.651\nAdds logic to uninstall legacy agents during EC2Launch v2 installation.\nFixes list-volume CLI issue when root volume is not listed as volume 0.\nOctober 7, 2021\n2.0.592\nFixes bug to correctly report stage status.\nRemoves false alarm error messages when log files are closed.\nAdds telemetry.\nAugust 31, 2021\n2.0.548\nAdds leading zeros for hex IP hostname.\nFixes file permissions for enableOpenSsh task.\nFixes sysprep command crash.\nAugust 4, 2021\n2.0.470\nFixes bug in network stage to wait for DHCP to assign an IP to the instance.\nFixes bug with setDnsSuffix when SearchList registry key does not exist.\nFixes bug in DNS devolution logic in setDnsSuffix.\nAdds network routes after intermediate reboots.\nAllows initializeVolume to re-letter existing volumes.\nRemoves extra information from version subcommand.\nJuly 20, 2021\n2.0.285\nAdds option to run user scripts in a detached process.\nLegacy userdata (XML userdata) now runs in a detached process, which is similar behavior to the prior launch agent.\nAdds CLI flag to the sysprep and reset commands, which allows them to block until the service stops.\nRestricts the config folder permissions.\nMarch 8, 2021\n2.0.207\nAdds optional hostName field to setHostName task.\nFixes reboot bug. Reboot tasks executeScript and executeProgram will be marked as running.\nAdds more return codes to the status command.\nAdds bootstrap service to fix startup issue when running on t2.nano instance type.\nFixes clean installation mode to remove files not tracked by installer.\nFebruary 2, 2021\n2.0.160\nFixes validate command to detect invalid stage name.\nAdds w32tm resync command in addroutes task.\nFixes issue with changing DNS suffix search order.\nAdds check conditions to better report invalid user data.\nDecember 4, 2020\n2.0.153 Adds Sysprep functionality in UserData. November 3, 2020\n2.0.146\nFixes issue with RootExtend on non-English AMIs.\nGrants users group write permission to log files.\nCreates MS Reserved partition for GPT volumes.\nAdds list-volumes command and volume dropdown in Amazon EC2Launch settings.\nAdds get-agent-config command for printing agent-config.yml file in yaml or json format.\nErases static password if no public key detected.\nOctober 6, 2020\n2.0.124\nAdds option to display OS version on wallpaper.\nInitializes encrypted EBS volumes.\nAdds routes for VPCs with no local DNS name.\nSeptember 10, 2020\n2.0.104\nCreates DNS suffix search list if it does not exist.\nSkips Hibernation if not requested.\nAugust 12, 2020\n2.0.0 Initial release. June 30, 2020\nEC2Launch v2 migration tool version history\nThe following table describes the released versions of the EC2Launch v2 migration tool.\nYou can receive notifications when new versions of the EC2Launch v2 agent are released. For more information, see Subscribe to EC2 Windows launch agent notifications.\nVersion Details Release date\n1.0.435\nUpdate migration tool with the latest version of the EC2Launch v2 agent: 2.0.2046.\nOctober 10, 2024\n1.0.413\nUpdate migration tool with the latest version of the EC2Launch v2 agent: 2.0.1981.\nAugust 9, 2024\n1.0.412\nUpdate migration tool with the latest version of the EC2Launch v2 agent: 2.0.1948.\nAugust 7, 2024\n1.0.396\nUpdate migration tool with the latest version of the EC2Launch v2 agent: 2.0.1924.\nJune 11, 2024\n1.0.394\nUpdate migration tool with the latest version of the EC2Launch v2 agent: 2.0.1914.\nJune 6, 2024\n1.0.384\nUpdate migration tool with the latest version of the EC2Launch v2 agent: 2.0.1881.\nMay 8, 2024\n1.0.358\nUpdate migration tool with the latest version of the EC2Launch v2 agent: 2.0.1815.\nMarch 8, 2024\n1.0.345\nUpdate migration tool with the latest version of the EC2Launch v2 agent: 2.0.1739.\nJanuary 18, 2024\n1.0.342\nUpdate migration tool with the latest version of the EC2Launch v2 agent: 2.0.1702.\nJanuary 5, 2024\n1.0.331\nUpdate migration tool with the latest version of the EC2Launch v2 agent: 2.0.1643\nFix an error that occurs when running .Install.ps1 -DryRun.\nFix an issue where password configuration is incorrectly set to random during migration from EC2Config.\nFix an error that occurs if setWallpaper is set to False during migration from EC2Launch.\nNovember 3, 2023\n1.0.303 Update migration tool with the latest version of the EC2Launch v2 agent: 2.0.1580. September 14, 2023\n1.0.286 Update migration tool with the latest version of the EC2Launch v2 agent: 2.0.1521. July 14, 2023\n1.0.272 Update migration tool with the latest version of the EC2Launch v2 agent: 2.0.1303. May 3, 2023\n1.0.262 Update migration tool with the latest version of the EC2Launch v2 agent: 2.0.1245. March 9, 2023\n1.0.241 Increments the version number of the EC2Launch v2 agent to 2.0.1011. December 7, 2022\n1.0.218\nValidates Region value retrieved from instance metadata.\nFixes migration failure bug in language packs.\nIncrements the version number of the EC2Launch v2 agent to 2.0.863.\nSeptember 3, 2022\n1.0.162\nMoves logic to remove legacy agents to the EC2Launch v2 MSI.\nIncrements the version number of the EC2Launch v2 agent to 2.0.698.\nMarch 18, 2022\n1.0.136 Increments the version number of the EC2Launch v2 agent to 2.0.651. October 13, 2021\n1.0.130 Increments the version number of the EC2Launch v2 agent to 2.0.548. August 5, 2021\n1.0.113 Uses IMDSv2 in place of IMDSv1. June 4, 2021\n1.0.101 Increments the version number of the EC2Launch v2 agent to 2.0.285. March 12, 2021\n1.0.86 Increments the version number of the EC2Launch v2 agent to 2.0.207. February 3, 2021\n1.0.76 Increments the version number of the EC2Launch v2 agent to 2.0.160. December 4, 2020\n1.0.69 Increments the version number of the EC2Launch v2 agent to 2.0.153. November 5, 2020\n1.0.65 Increments the version number of the EC2Launch v2 agent to 2.0.146. October 9, 2020\n1.0.60 Increments the version number of the EC2Launch v2 agent to 2.0.124. September 10, 2020\n1.0.54\nInstalls EC2Launch v2 if no agents are installed.\nIncrements the version number of the EC2Launch v2 agent to 2.0.104.\nDecouples the SSM agent.\nAugust 12, 2020\n1.0.50 Removes NuGet dependency. August 10, 2020\n1.0.0 Initial release. June 30, 2020"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2launch.html",
        "content": "EC2Launch is a set of Windows PowerShell scripts that replaced the EC2Config service on Windows Server 2016 and 2019 AMIs. Many of these AMIs are still available. EC2Launch v2 is the latest launch agent for all supported Windows versions, which replaces both EC2Config and EC2Launch. For more information, see Use the EC2Launch v2 agent to perform tasks during EC2 Windows instance launch.\nNote\nTo use EC2Launch with IMDSv2, the version must be 1.3.2002730 or later.\nYou can use the following Windows PowerShell command to verify the installed version of EC2Launch.\nTest-ModuleManifest -Path \"C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Module\\Ec2Launch.psd1\" | Select Version\nEC2Launch tasks\nEC2Launch performs the following tasks by default during the initial instance boot:\nSets up new wallpaper that renders information about the instance.\nSets the computer name to the private IPv4 address of the instance.\nSends instance information to the Amazon EC2 console.\nSends the RDP certificate thumbprint to the EC2 console.\nSets a random password for the administrator account.\nAdds DNS suffixes.\nDynamically extends the operating system partition to include any unpartitioned space.\nExecutes user data (if specified). For more information about specifying user data, see Run commands when you launch an EC2 instance with user data input.\nSets persistent static routes to reach the metadata service and AWS KMS servers.\nImportant\nIf a custom AMI is created from this instance, these routes are captured as part of the OS configuration and any new instances launched from the AMI will retain the same routes, regardless of subnet placement. In order to update the routes, see Update metadata/KMS routes for Server 2016 and later when launching a custom AMI.\nThe following tasks help to maintain backward compatibility with the EC2Config service. You can also configure EC2Launch to perform these tasks during startup:\nInitialize secondary EBS volumes.\nSend Windows Event logs to the EC2 console logs.\nSend the Windows is ready to use message to the EC2 console.\nEC2Launch directory structure\nEC2Launch is installed by default on Windows Server 2016 and later AMIs in the root directory C:\\ProgramData\\Amazon\\EC2-Windows\\Launch.\nNote\nBy default, Windows hides files and folders under C:\\ProgramData. To view EC2Launch directories and files, you must either type the path in Windows Explorer or change the folder properties to show hidden files and folders.\nThe Launch directory contains the following subdirectories.\nScripts \u2014 Contains the PowerShell scripts that make up EC2Launch.\nModule \u2014 Contains the module for building scripts related to Amazon EC2.\nConfig \u2014 Contains script configuration files that you can customize.\nSysprep \u2014 Contains Sysprep resources.\nSettings \u2014 Contains an application for the Sysprep graphical user interface.\nLibrary \u2014 Contains shared libraries for EC2 launch agents.\nLogs \u2014 Contains log files generated by scripts.\nTelemetry\nTelemetry is additional information that helps AWS to better understand your requirements, diagnose issues, and deliver features to improve your experience with AWS services.\nEC2Launch version 1.3.2003498 and later collect telemetry, such as usage metrics and errors. This data is collected from the Amazon EC2 instance on which EC2Launch runs. This includes all Windows AMIs owned by AWS.\nThe following types of telemetry are collected by EC2Launch:\nUsage information \u2014 agent commands, install method, and scheduled run frequency.\nErrors and diagnostic information \u2014 agent installation and run error codes.\nExamples of collected data:\n2021/07/15 21:44:12Z: EC2LaunchTelemetry: IsAgentScheduledPerBoot=true\n2021/07/15 21:44:12Z: EC2LaunchTelemetry: IsUserDataScheduledPerBoot=true\n2021/07/15 21:44:12Z: EC2LaunchTelemetry: AgentCommandCode=1\n2021/07/15 21:44:12Z: EC2LaunchTelemetry: AgentCommandErrorCode=5\n2021/07/15 21:44:12Z: EC2LaunchTelemetry: AgentInstallCode=2\n2021/07/15 21:44:12Z: EC2LaunchTelemetry: AgentInstallErrorCode=0\nTelemetry is enabled by default. You can disable telemetry collection at any time. If telemetry is enabled, EC2Launch sends telemetry data without additional customer notifications.\nYour choice to enable or disable telemetry is collected.\nYou can opt in or out of telemetry collection. Your selection to opt in or out of telemetry is collected to ensure that we adhere to your telemetry option.\nTelemetry visibility\nWhen telemetry is enabled, it appears in the Amazon EC2 console output as follows:\n2021/07/15 21:44:12Z: Telemetry: <Data>\nDisable telemetry on an instance\nTo disable telemetry by setting a system environment variable, run the following command as an administrator:\nsetx /M EC2LAUNCH_TELEMETRY 0\nTo disable telemetry during installation, run install.ps1 as follows:\n. .\\install.ps1 -EnableTelemetry:$false\nMore topics for EC2Launch\nInstall the latest version of EC2Launch\nConfigure the EC2Launch v1 agent on your Windows instance\nEC2Launch version history"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2launch-download.html",
        "content": "Use the following procedure to download and install the latest version of EC2Launch on your instances.\nTo download and install the latest version of EC2Launch\nIf you have already installed and configured EC2Launch on an instance, make a backup of the EC2Launch configuration file. The installation process does not preserve changes in this file. By default, the file is located in the C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Config directory.\nDownload EC2-Windows-Launch.zip to a directory on the instance.\nDownload install.ps1 to the same directory where you downloaded EC2-Windows-Launch.zip.\nRun install.ps1\nIf you made a backup of the EC2Launch configuration file, copy it to the C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Config directory.\nTo download and install the latest version of EC2Launch using PowerShell\nIf you have already installed and configured EC2Launch on an instance, make a backup of the EC2Launch configuration file. The installation process does not preserve changes in this file. By default, the file is located in the C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Config directory.\nTo install the latest version of EC2Launch using PowerShell, run the following commands from a PowerShell window\nmkdir $env:USERPROFILE\\Desktop\\EC2Launch\n$Url = \"https://s3.amazonaws.com/ec2-downloads-windows/EC2Launch/latest/EC2-Windows-Launch.zip\"\n$DownloadZipFile = \"$env:USERPROFILE\\Desktop\\EC2Launch\\\" + $(Split-Path -Path $Url -Leaf)\nInvoke-WebRequest -Uri $Url -OutFile $DownloadZipFile\n$Url = \"https://s3.amazonaws.com/ec2-downloads-windows/EC2Launch/latest/install.ps1\"\n$DownloadZipFile = \"$env:USERPROFILE\\Desktop\\EC2Launch\\\" + $(Split-Path -Path $Url -Leaf)\nInvoke-WebRequest -Uri $Url -OutFile $DownloadZipFile\n& $env:USERPROFILE\\Desktop\\EC2Launch\\install.ps1\nNote\nIf you receive an error when downloading the file, and you are using Windows Server 2016, TLS 1.2 might need to be enabled for your PowerShell terminal. You can enable TLS 1.2 for the current PowerShell session with the following command and then try again:\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nVerify the installation by checking the launch agent as follows.\nImport-Module C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Module\\Ec2Launch.psm1\nImport-LocalizedData -BaseDirectory C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Module\\ -FileName 'Ec2Launch.psd1' -BindingVariable moduleManifest\n$moduleManifest.Get_Item('ModuleVersion')"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2launch-config.html",
        "content": "After your instance has been initialized the first time, you can configure EC2Launch to run again and perform different start-up tasks.\nTasks\nConfigure initialization tasks\nSchedule EC2Launch to run on every boot\nInitialize drives and map drive letters\nSend Windows event logs to the EC2 console\nSend Windows is ready message after a successful boot\nConfigure initialization tasks\nSpecify settings in the LaunchConfig.json file to enable or disable the following initialization tasks:\nSet the computer name to the instance private IPv4 address.\nSet the monitor to always stay on.\nSet up new wallpaper.\nAdd DNS suffix list.\nNote\nThis adds a DNS suffix lookup for the following domain and configures other standard suffixes. For more information about how launch agents set DNS suffixes, see Configure DNS Suffix for EC2 Windows launch agents.\nregion.ec2-utilities.amazonaws.com\nExtend the boot volume size.\nSet the administrator password.\nTo configure initialization settings\nOn the instance to configure, open the following file in a text editor: C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Config\\LaunchConfig.json.\nUpdate the following settings as needed and save your changes. Provide a password in adminPassword only if adminPasswordtype is Specify.\n{\n \"setComputerName\": false,\n \"setMonitorAlwaysOn\": true,\n \"setWallpaper\": true,\n \"addDnsSuffixList\": true,\n \"extendBootVolumeSize\": true,\n \"handleUserData\": true,       \n \"adminPasswordType\": \"Random | Specify | DoNothing\",\n \"adminPassword\": \"password that adheres to your security policy (optional)\"\n}\nThe password types are defined as follows:\nRandom\nEC2Launch generates a password and encrypts it using the user's key. The system disables this setting after the instance is launched so that this password persists if the instance is rebooted or stopped and started.\nSpecify\nEC2Launch uses the password you specify in adminPassword. If the password does not meet the system requirements, EC2Launch generates a random password instead. The password is stored in LaunchConfig.json as clear text and is deleted after Sysprep sets the administrator password. EC2Launch encrypts the password using the user's key.\nDoNothing\nEC2Launch uses the password you specify in the unattend.xml file. If you don't specify a password in unattend.xml, the administrator account is disabled.\nIn Windows PowerShell, run the following command to schedule the script to run as a Windows Scheduled Task. The script runs one time during the next boot and then disables these tasks from running again.\nC:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Scripts\\InitializeInstance.ps1 -Schedule\nSchedule EC2Launch to run on every boot\nYou can schedule EC2Launch to run on every boot instead of only the initial boot.\nTo enable EC2Launch to run on every boot:\nOpen Windows PowerShell and run the following command:\nC:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Scripts\\InitializeInstance.ps1 -SchedulePerBoot\nOr, run the executable with the following command:\nC:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Settings\\Ec2LaunchSettings.exe\nThen select Run EC2Launch on every boot. You can specify that your EC2 instance Shutdown without Sysprep or Shutdown with Sysprep.\nNote\nWhen you enable EC2Launch to run on every boot, the following happens the next time EC2Launch runs:\nIf AdminPasswordType is still set to Random, EC2Launch will generate a new password at the next boot. After that boot, AdminPasswordType is automatically set to DoNothing to prevent EC2Launch from generating new passwords on subsequent boots. To prevent EC2Launch from generating a new password on the first boot, manually set AdminPasswordType to DoNothing before you reboot.\nHandleUserData will be set back to false unless the user data has persist set to true. For more information, see User data scripts.\nInitialize drives and map drive letters\nSpecify settings in the DriveLetterMappingConfig.json file to map drive letters to volumes on your EC2 instance. The script initializes drives that are not already initialized and partitioned. For more information about getting volume details in Windows, see Get-Volume in the Microsoft documentation.\nTo map drive letters to volumes\nOpen the C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Config\\DriveLetterMappingConfig.json file in a text editor.\nSpecify the following volume settings and save your changes:\n{\n \"driveLetterMapping\": [\n  {\n   \"volumeName\": \"sample volume\",\n   \"driveLetter\": \"H\"\n  }\n ]\n}\nOpen Windows PowerShell and use the following command to run the EC2Launch script that initializes the disks:\nC:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Scripts\\InitializeDisks.ps1\nTo initialize the disks each time the instance boots, add the -Schedule flag as follows:\nC:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Scripts\\InitializeDisks.ps1 -Schedule\nSend Windows event logs to the EC2 console\nSpecify settings in the EventLogConfig.json file to send Windows Event logs to EC2 console logs.\nTo configure settings to send Windows Event logs\nOn the instance, open the C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Config\\EventLogConfig.json file in a text editor.\nConfigure the following log settings and save your changes:\n{\n \"events\": [\n  {\n   \"logName\": \"System\",\n   \"source\": \"An event source (optional)\",\n   \"level\": \"Error | Warning | Information\",\n   \"numEntries\": 3\n  }\n ]\n}\nIn Windows PowerShell, run the following command so that the system schedules the script to run as a Windows Scheduled Task each time the instance boots.\nC:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Scripts\\SendEventLogs.ps1 -Schedule\nThe logs can take three minutes or more to appear in the EC2 console logs.\nSend Windows is ready message after a successful boot\nThe EC2Config service sent the \"Windows is ready\" message to the EC2 console after every boot. EC2Launch sends this message only after the initial boot. For backwards compatibility with the EC2Config service, you can schedule EC2Launch to send this message after every boot. On the instance, open Windows PowerShell and run the following command. The system schedules the script to run as a Windows Scheduled Task.\nC:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Scripts\\SendWindowsIsReady.ps1 -Schedule"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2launch-version-details.html",
        "content": "Windows AMIs starting with Windows Server 2016 include a set of Windows Powershell scripts called EC2Launch. EC2Launch performs tasks during the initial instance boot. For information about the EC2Launch versions included in AWS Windows AMIs, see AWS Windows AMI version history.\nTo download and install the latest version of EC2Launch, see Install the latest version of EC2Launch.\nYou can receive notifications when new versions of the EC2Launch agent are released. For more information, see Subscribe to EC2 Windows launch agent notifications.\nThe following table describes the released versions of EC2Launch. Note that the version format changed after version 1.3.610.\nVersion Details Release date\n1.3.2005065\nFixed an issue where RDP certificate information was not properly retrieved or validated. Added functionality to automatically start the Remote Desktop Services if needed.\n22 October 2024\n1.3.2005008\nUpdated Set-Wallpaper to fall back to a solid color background if the default wallpaper image is not found.\n6 August 2024\n1.3.2004959\nUpdated installer logic to prevent unsupported installation on Windows Server 2025 or later.\n2 July 2024\n1.3.2004891\nFixed an issue where HandleUserData was not set to false as expected.\nAdded an Encrypted password option to LaunchConfig.json.\nChanged Settings UI behavior to encrypt the user specified password by default.\nAdded SetAdminPasswordConfig.ps1 to convert the Specify password option to the Encrypted password option in the agent configuration file.\n31 May 2024\n1.3.2004617\nFixed an error when setting the wallpaper.\n15 January 2024\n1.3.2004592\nUpdated access permissions set by install.ps1 for %ProgramData%\\Amazon\\EC2-Windows\\Launch.\nRestricted EC2Launch folder/file access to read-execute only for standard user accounts.\nChanged the agent to stop waiting for the Instance Metadata Service (IMDS) to initialize if IMDS is not enabled for the instance.\nAdded a five minute timeout when waiting for the IMDS to initialize.\nChanged the agent to write telemetry to the instance console log before the Windows is Ready message instead of after.\nAdded wallpaper support to several new instance types.\nFor more information about access permissions and user account permissions of EC2Launch directories, see EC2Launch directory structure.\n2 January 2024\n1.3.2004491\nAdded telemetry to monitor usage of the Specify admin password option.\n9 November 2023\n1.3.2004462\nAdded flush after every write to the serial console.\n18 October 2023\n1.3.2004438\nLimit domain name devolution based on registry entry: HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\Dnscache\\Parameters\\DomainNameDevolutionLevel.\nLimited UserdataExecution.log permissions to Administrators only.\nAdded error messages in the Windows Event Log when log initialization fails.\n4 October 2023\n1.3.2004256\nAdded EnableSCSIPersistentReservations value to console log.\nAdded retry capability for Get-ConsolePort.\n7 July 2023\n1.3.2004052\nFixed an error that occurred when no SSH key is specified at instance launch.\nUpdated to retry starting the AmazonSSMAgent Windows service on failure.\nUpdated to fail SysprepInstance.ps1 if BeforeSysprep.cmd fails with a non-zero exit code.\n8 March 2023\n1.3.2003975\nFixed issue impacting Packer AMI builds where SysprepInstance.ps1 returns a $LastErrorCode of 1.\n24 December 2022\n1.3.2003961\nFixed issue where explicitly specified administrator passwords are overwritten with a random password on fast-launched instances.\nFixed issue where SSM Agent fails to start on smaller instance types.\nFixed an issue where the instance console log contains RDPCERTIFICATE-THUMBPRINT: 00000000000000000000000 instead of a valid RDP certificate thumbprint value.\n6 December 2022\n1.3.2003923\nFixes logic for finding network adapter when PnPDeviceID is empty.\n9 November 2022\n1.3.2003919\nUpdated Get-ConsolePort to use PCI segment information.\nFixed issue where an incorrect network adapter can be selected after reboot.\nFixed start-SSM-Agent timeout logic.\nFixed backwards compatibility for Send-AdminCredentials function alias.\n8 November 2022\n1.3.2003857\nPrioritizes adapters with a default gateway when the primary network adapter is selected.\nExtended in-memory password encryption.\n3 October 2022\n1.3.2003824\nFixed error during setComputerName.\nAdded logic to skip Windows activation when a BYOL billing code is detected.\nAdded in-memory password encryption.\nFixed error during volume initialization on m6id.4xlarge.\n30 August 2022\n1.3.2003691\nUpdated IMDS wait logic to make only IMDSv2 requests.\nFixed bug impacting eGPU installation.\n21 June 2022\n1.3.2003639\nAdded network-adapter wait logic to prevent use before initialization.\nFixed minor issues.\n10 May 2022\n1.3.2003498\nAdded telemetry.\nAdded shortcut to Settings UI.\nFormatted PowerShell scripts.\nFixed issue with shutdown occurring before BeforeSysprep.cmd completes.\n31 January 2022\n1.3.2003411 Changed password generation logic to exclude passwords with low complexity. 04 August 2021\n1.3.2003364 Updated Install-EgpuManager with IMDSv2 support. 07 June 2021\n1.3.2003312\nAdded log lines before and after setMonitorAlwaysOn setting.\nAdded AWS Nitro Enclaves package version to console log.\n04 May 2021\n1.3.2003284 Improved permission model by updating location for storing user data to LocalAppData. 23 March 2021\n1.3.2003236\nUpdated method for setting user password in Set-AdminAccount and Randomize-LocalAdminPassword.\nFixedInitializeDisks to check whether disk is set to read only before setting it to writable.\n11 February 2021\n1.3.2003210 Localization fix for install.ps1. 7 January 2021\n1.3.2003205 Security fix for install.ps1 to update permissions on %ProgramData%AmazonEC2-WindowsLaunchModuleScripts directory. 28 December 2020\n1.3.2003189 Added w32tm resync after adding routes. 4 December 2020\n1.3.2003155 Updated instance type information. 25 August 2020\n1.3.2003150 Added OsCurrentBuild and OsReleaseId to console output . 22 April 2020\n1.3.2003040 Fixed IMDS version 1 fallback logic. 7 April 2020\n1.3.2002730\nAdded support for IMDS V2. 3 March 2020\n1.3.2002240\nFixed minor issues. 31 October 2019\n1.3.2001660\nFixed automatic login issue for users without password after first time executing Sysprep. 2 July 2019\n1.3.2001360\nFixed minor issues. 27 March 2019\n1.3.2001220\nAll PowerShell scripts signed. 28 February 2019\n1.3.2001200\nFixed issue with InitializeDisks.ps1 where running the script on a node in a Windows Server Failover Cluster would format drives on remote nodes whose drive letter matched the local drive letter. 27 February 2019\n1.3.2001160\nFixed missing wallpaper in Windows 2019. 22 February 2019\n1.3.2001040\nAdded plugin for setting the monitor to never turn off to fix ACPI issues.\nSQL Server edition and version written to console.\n21 January 2019\n1.3.2000930\nFix for adding routes to metadata on ipv6-enabled ENIs. 2 January 2019\n1.3.2000760\nAdded default configuration for RSS and Receive Queue settings for ENA devices.\nDisabled hibernation during Sysprep.\n5 December 2018\n1.3.2000630\nAdded route 169.254.169.253/32 for DNS server.\nAdded filter of setting Admin user.\nImprovements made to instance hibernation.\nAdded option to schedule EC2Launch to run on every boot.\n9 November 2018\n1.3.2000430.0\nAdded route 169.254.169.123/32 to AMZN time service.\nAdded route 169.254.169.249/32 to GRID license service.\nAdded timeout of 25 seconds when attempting to start Systems Manager.\n19 September 2018\n1.3.200039.0\nFixed improper drive lettering for EBS NVME volumes.\nAdded additional logging for NVME driver versions.\n15 August 2018\n1.3.2000080\nFixed minor issues.\n1.3.610\nFixed issue with redirecting output and errors to files from user data.\n1.3.590\nAdded missing instances types in the wallpaper.\nFixed an issue with drive letter mapping and disk installation.\n1.3.580\nFixed Get-Metadata to use the default system proxy settings for web requests.\nAdded a special case for NVMe in disk initialization.\nFixed minor issues.\n1.3.550\nAdded a -NoShutdown option to enable Sysprep with no shutdown.\n1.3.540\nFixed minor issues.\n1.3.530\nFixed minor issues.\n1.3.521\nFixed minor issues.\n1.3.0\nFixed a hexadecimal length issue for computer name change.\nFixed a possible reboot loop for computer name change.\nFixed an issue in wallpaper setup.\n1.2.0\nUpdate to display information about installed operating system (OS) in EC2 system log.\nUpdate to display EC2Launch and SSM Agent version in EC2 system log.\nFixed minor issues.\n1.1.2\nUpdate to display ENA driver information in EC2 system log.\nUpdate to exclude Hyper-V from primary NIC filter logic.\nAdded AWS KMS server and port into registry key for KMS activation.\nImproved wallpaper setup for multiple users.\nUpdate to clear routes from persistent store.\nUpdate to remove the z from availability zone in DNS suffix list.\nUpdate to address an issue with the <runAsLocalSystem> tag in user data.\n1.1.1\nInitial release."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2config-service.html",
        "content": "Note\nEC2Config documentation is provided for historical reference only. The operating system versions it runs on are no longer supported by Microsoft. We strongly recommend that you upgrade to the latest launch agent.\nThe latest launch agent for Windows Server 2022 and later operating system versions is EC2Launch v2, which replaces both EC2Config and EC2Launch, and comes pre-installed on AWS Windows Server 2022 and 2025 AMIs. You can also Migrate to EC2Launch v2 with the migration tool, or you can manually install and configure the agent on Windows Server 2016 and 2019.\nWindows AMIs for Windows Server versions prior to Windows Server 2016 include an optional service, the EC2Config service (EC2Config.exe). EC2Config starts when the instance boots and performs tasks during startup and each time you stop or start the instance. EC2Config can also perform tasks on demand. Some of these tasks are automatically enabled, while others must be enabled manually. Although optional, this service provides access to advanced features that aren't otherwise available. This service runs in the LocalSystem account.\nThe EC2Config service runs Sysprep, a Microsoft tool that enables you to create a customized Windows AMI that can be reused. When EC2Config calls Sysprep, it uses the files in %ProgramFiles%\\Amazon\\EC2ConfigService\\Settings to determine which operations to perform. You can edit these files indirectly using the EC2 Service Properties system dialog, or directly using an XML editor or a text editor. However, there are some advanced settings that aren't available in the Ec2 Service Properties system dialog, so you must edit those entries directly.\nIf you create an AMI from an instance after updating its settings, the new settings are applied to any instance that's launched from the new AMI. For information about creating an AMI, see Create an Amazon EBS-backed AMI.\nEC2Config uses settings files to control its operation. You can update these settings files using either a graphical tool or by directly editing XML files. The service binaries and additional files are contained in the %ProgramFiles%\\Amazon\\EC2ConfigService directory.\nContents\nEC2Config and AWS Systems Manager\nEC2Config tasks\nEC2Config settings files\nInstall the latest version of EC2Config\nConfigure .NET proxy settings for the EC2Config service\nSet EC2Config service properties from the system dialog on your EC2 Windows instance\nTroubleshoot issues with the EC2Config launch agent\nEC2Config version history\nEC2Config and AWS Systems Manager\nThe EC2Config service processes Systems Manager requests on instances created from AMIs for versions of Windows Server prior to Windows Server 2016 that were published before November 2016.\nInstances created from AMIs for versions of Windows Server prior to Windows Server 2016 that were published after November 2016 include the EC2Config service and SSM Agent. EC2Config performs all of the tasks described earlier, and SSM Agent processes requests for Systems Manager capabilities like Run Command and State Manager.\nYou can use Run Command to upgrade your existing instances to use to the latest version of the EC2Config service and SSM Agent. For more information, see Update SSM Agent using Run Command in the AWS Systems Manager User Guide.\nEC2Config tasks\nEC2Config runs initial startup tasks when the instance is first started and then disables them. To run these tasks again, you must explicitly enable them prior to shutting down the instance, or by running Sysprep manually. These tasks are as follows:\nSet a random, encrypted password for the administrator account.\nGenerate and install the host certificate used for Remote Desktop Connection.\nDynamically extend the operating system partition to include any unpartitioned space.\nExecute the specified user data (and Cloud-Init, if it's installed). For more information about specifying user data, see Run commands when you launch an EC2 instance with user data input.\nEC2Config performs the following tasks every time the instance starts:\nChange the host name to match the private IP address in Hex notation (this task is disabled by default and must be enabled in order to run at instance start).\nConfigure the key management server (AWS KMS), check for Windows activation status, and activate Windows as necessary.\nMount all Amazon EBS volumes and instance store volumes, and map volume names to drive letters.\nWrite event log entries to the console to help with troubleshooting (this task is disabled by default and must be enabled in order to run at instance start).\nWrite to the console that Windows is ready.\nAdd a custom route to the primary network adapter to enable the following IP addresses when a single NIC or multiple NICs are attached: 169.254.169.250, 169.254.169.251, and 169.254.169.254. These addresses are used by Windows Activation and when you access instance metadata.\nNote\nIf the Windows OS is configured to use IPv4, these IPv4 link-local addresses can be used. If the Windows OS has the IPv4 network protocol stack disabled and uses IPv6 instead, add [fd00:ec2::240] in place of 169.254.169.250 and 169.254.169.251. Then add [fd00:ec2::254] in place of 169.254.169.254.\nEC2Config performs the following task every time a user logs in:\nDisplay wallpaper information to the desktop background.\nWhile the instance is running, you can request that EC2Config perform the following task on demand:\nRun Sysprep and shut down the instance so that you can create an AMI from it. For more information, see Create an Amazon EC2 AMI using Windows Sysprep.\nEC2Config settings files\nThe settings files control the operation of the EC2Config service. These files are located in the C:\\Program Files\\Amazon\\Ec2ConfigService\\Settings directory:\nActivationSettings.xml\u2014Controls product activation using a key management server (AWS KMS).\nAWS.EC2.Windows.CloudWatch.json\u2014Controls which performance counters to send to CloudWatch and which logs to send to CloudWatch Logs.\nBundleConfig.xml\u2014Controls how EC2Config prepares an instance store-backed instance for AMI creation.\nConfig.xml\u2014Controls the primary settings.\nDriveLetterConfig.xml\u2014Controls drive letter mappings.\nEventLogConfig.xml\u2014Controls the event log information that's displayed on the console while the instance is booting.\nWallpaperSettings.xml\u2014Controls the information that's displayed on the desktop background.\nActivationSettings.xml\nThis file contains settings that control product activation. When Windows boots, the EC2Config service checks whether Windows is already activated. If Windows is not already activated, it attempts to activate Windows by searching for the specified AWS KMS server.\nSetAutodiscover\u2014Indicates whether to detect a AWS KMS automatically.\nTargetKMSServer\u2014Stores the private IP address of a AWS KMS. The AWS KMS must be in the same Region as your instance.\nDiscoverFromZone\u2014Discovers the AWS KMS server from the specified DNS zone.\nReadFromUserData\u2014Gets the AWS KMS server from UserData.\nLegacySearchZones\u2014Discovers the AWS KMS server from the specified DNS zone.\nDoActivate\u2014Attempts activation using the specified settings in the section. This value can be true or false.\nLogResultToConsole\u2014Displays the result to the console.\nBundleConfig.xml\nThis file contains settings that control how EC2Config prepares an instance for AMI creation.\nAutoSysprep\u2014Indicates whether to use Sysprep automatically. Change the value to Yes to use Sysprep.\nSetRDPCertificate\u2014Sets a self-signed certificate to the Remote Desktop server. This enables you to securely RDP into the instances. Change the value to Yes if the new instances should have the certificate.\nThis setting is not used for instances with operating system versions prior to Windows Server 2016, because they can generate their own certificates.\nSetPasswordAfterSysprep\u2014Sets a random password on a newly launched instance, encrypts it with the user launch key, and outputs the encrypted password to the console. Change the value of this setting to No if the new instances should not be set to a random encrypted password.\nConfig.xml\nPlug-ins\nEc2SetPassword\u2014Generates a random encrypted password each time you launch an instance. This feature is disabled by default after the first launch so that reboots of this instance don't change a password set by the user. Change this setting to Enabled to continue to generate passwords each time you launch an instance.\nThis setting is important if you are planning to create an AMI from your instance.\nEc2SetComputerName\u2014Sets the host name of the instance to a unique name based on the IP address of the instance and reboots the instance. To set your own host name, or prevent your existing host name from being modified, you must disable this setting.\nEc2InitializeDrives\u2014Initializes and formats all volumes during startup. This feature is enabled by default.\nEc2EventLog\u2014Displays event log entries in the console. By default, the three most recent error entries from the system event log are displayed. To specify the event log entries to display, edit the EventLogConfig.xml file located in the EC2ConfigService\\Settings directory. For information about the settings in this file, see Eventlog Key.\nEc2ConfigureRDP\u2014Sets up a self-signed certificate on the instance, so users can securely access the instance using Remote Desktop. This setting is not used for instances with operating system versions prior to Windows Server 2016, because they can generate their own certificates.\nEc2OutputRDPCert\u2014Displays the Remote Desktop certificate information to the console so that the user can verify it against the thumbprint.\nEc2SetDriveLetter\u2014Sets the drive letters of the mounted volumes based on user-defined settings. By default, when an Amazon EBS volume is attached to an instance, it can be mounted using the drive letter on the instance. To specify your drive letter mappings, edit the DriveLetterConfig.xml file located in the EC2ConfigService\\Settings directory.\nEc2WindowsActivate\u2014The plug-in handles Windows activation. It checks to see if Windows is activated. If not, it updates the AWS KMS client settings, and then activates Windows.\nTo modify the AWS KMS settings, edit the ActivationSettings.xml file located in the EC2ConfigService\\Settings directory.\nEc2DynamicBootVolumeSize\u2014Extends Disk 0/Volume 0 to include any unpartitioned space.\nEc2HandleUserData\u2014Creates and runs scripts created by the user on the first launch of an instance after Sysprep is run. Commands wrapped in script tags are saved to a batch file, and commands wrapped in PowerShell tags are saved to a .ps1 file (corresponds to the User Data checkbox on the Ec2 Service Properties system dialog).\nEc2ElasticGpuSetup\u2014Installs the Elastic GPU software package if the instance is associated with an elastic GPU.\nEc2FeatureLogging\u2014Sends Windows feature installation and corresponding service status to the console. Supported only for the Microsoft Hyper-V feature and corresponding vmms service.\nGlobal Settings\nManageShutdown\u2014Ensures that instances launched from instance store-backed AMIs do not terminate while running Sysprep.\nSetDnsSuffixList\u2014Sets the DNS suffix of the network adapter for Amazon EC2. This allows DNS resolution of servers running in Amazon EC2 without providing the fully qualified domain name.\nNote\nThis adds a DNS suffix lookup for the following domain and configures other standard suffixes. For more information about how launch agents set DNS suffixes, see Configure DNS Suffix for EC2 Windows launch agents.\nregion.ec2-utilities.amazonaws.com\nWaitForMetaDataAvailable\u2014Ensures that the EC2Config service will wait for metadata to be accessible and the network available before continuing with the boot. This check ensures that EC2Config can obtain information from metadata for activation and other plug-ins.\nShouldAddRoutes\u2014Adds a custom route to the primary network adapter to enable the following IP addresses when multiple NICs are attached: 169.254.169.250, 169.254.169.251, and 169.254.169.254. These addresses are used by Windows Activation and when you access instance metadata.\nRemoveCredentialsfromSyspreponStartup\u2014Removes the administrator password from Sysprep.xml the next time the service starts. To ensure that this password persists, edit this setting.\nDriveLetterConfig.xml\nThis file contains settings that control drive letter mappings. By default, a volume can be mapped to any available drive letter. You can mount a volume to a particular drive letter as follows.\n<?xml version=\"1.0\" standalone=\"yes\"?>\n<DriveLetterMapping>\n  <Mapping>\n    <VolumeName></VolumeName>\n    <DriveLetter></DriveLetter>\n  </Mapping>\n  . . .\n  <Mapping>\n    <VolumeName></VolumeName>\n    <DriveLetter></DriveLetter>\n  </Mapping>\n</DriveLetterMapping>\nVolumeName\u2014The volume label. For example, My Volume. To specify a mapping for an instance storage volume, use the label Temporary Storage X, where X is a number from 0 to 25.\nDriveLetter\u2014The drive letter. For example, M:. The mapping fails if the drive letter is already in use.\nEventLogConfig.xml\nThis file contains settings that control the event log information that's displayed on the console while the instance is booting. By default, we display the three most recent error entries from the System event log.\nCategory\u2014The event log key to monitor.\nErrorType\u2014The event type (for example, Error, Warning, Information.)\nNumEntries\u2014The number of events stored for this category.\nLastMessageTime\u2014To prevent the same message from being pushed repeatedly, the service updates this value every time it pushes a message.\nAppName\u2014The event source or application that logged the event.\nWallpaperSettings.xml\nThis file contains settings that control the information that's displayed on the desktop background. The following information is displayed by default.\nHostname\u2014Displays the computer name.\nInstance ID\u2014Displays the ID of the instance.\nPublic IP Address\u2014Displays the public IP address of the instance.\nPrivate IP Address\u2014Displays the private IP address of the instance.\nAvailability Zone\u2014Displays the Availability Zone in which the instance is running.\nInstance Size\u2014Displays the type of instance.\nArchitecture\u2014Displays the setting of the PROCESSOR_ARCHITECTURE environment variable.\nYou can remove any of the information that's displayed by default by deleting its entry. You can add additional instance metadata to display as follows.\n<WallpaperInformation>\n  <name>display_name</name>\n  <source>metadata</source>\n  <identifier>meta-data/path</identifier>\n</WallpaperInformation>\nYou can add additional System environment variables to display as follows.\n<WallpaperInformation>\n  <name>display_name</name>\n  <source>EnvironmentVariable</source>\n  <identifier>variable-name</identifier>\n</WallpaperInformation>\nInitializeDrivesSettings.xml\nThis file contains settings that control how EC2Config initializes drives.\nBy default, EC2Config initialize drives that were not brought online with the operating system. You can customize the plugin as follows.\n<InitializeDrivesSettings>\n    <SettingsGroup>setting</SettingsGroup>\n</InitializeDrivesSettings>\nUse a settings group to specify how you want to initialize drives:\nFormatWithTRIM\nEnables the TRIM command when formatting drives. After a drive has been formatted and initialized, the system restores TRIM configuration.\nStarting with EC2Config version 3.18, the TRIM command is disabled during the disk format operation by default. This improves formatting times. Use this setting to enable TRIM during the disk format operation for EC2Config version 3.18 and later.\nFormatWithoutTRIM\nDisables the TRIM command when formatting drives and improves formatting times in Windows. After a drive has been formatted and initialized, the system restores TRIM configuration.\nDisableInitializeDrives\nDisables formatting for new drives. Use this setting to initialize drives manually."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UsingConfig_Install.html",
        "content": "By default, the EC2Config service is included in AMIs prior to Windows Server 2016. When the EC2Config service is updated, new Windows AMIs from AWS include the latest version of the service. However, you need to update your own Windows AMIs and instances with the latest version of EC2Config.\nNote\nEC2Launch replaces EC2Config on Windows Server 2016 and 2019. For more information, see Use the EC2Launch v1 agent to perform tasks during EC2 Windows instance launch. The latest launch service for all supported Windows Server versions is EC2Launch v2, which replaces both EC2Config and EC2Launch.\nFor information about how to receive notifications for EC2Config updates, see Subscribe to EC2 Windows launch agent notifications. For information about the changes in each version, see the EC2Config version history.\nBefore you begin\nVerify that you have .NET framework 3.5 SP1 or greater.\nBy default, Setup replaces your settings files with default settings files during installation and restarts the EC2Config service when the installation is completed. If you changed EC2Config service settings, copy the config.xml file from the %Program Files%\\Amazon\\Ec2ConfigService\\Settings directory. After you update the EC2Config service, you can restore this file to retain your configuration changes.\nIf your version of EC2Config is earlier than version 2.1.19 and you are installing version 2.2.12 or earlier, you must first install version 2.1.19. To install version 2.1.19, download EC2Install_2.1.19.zip, unzip the file, and then run EC2Install.exe.\nNote\nIf your version of EC2Config is earlier than version 2.1.19 and you are installing version 2.3.313 or later, you can install it directly without installing version 2.1.19 first.\nVerify the EC2Config version\nUse the following procedure to verify the version of EC2Config that is installed on your instances.\nTo verify the installed version of EC2Config\nLaunch an instance from your AMI and connect to it.\nIn Control Panel, select Programs and Features.\nIn the list of installed programs, look for Ec2ConfigService. Its version number appears in the Version column.\nUpdate EC2Config\nUse the following procedure to download and install the latest version of EC2Config on your instances.\nTo download and install the latest version of EC2Config\nDownload and unzip the EC2Config installer.\nRun EC2Install.exe. For a complete list of options, run EC2Install with the /? option. By default, setup displays prompts. To run the command with no prompts, use the /quiet option.\nImportant\nTo keep the custom settings from the config.xml file that you saved, run EC2Install with the /norestart option, restore your settings, and then restart the EC2Config service manually.\nIf you are running EC2Config version 4.0 or later, you must restart SSM Agent on the instance from the Microsoft Services snap-in.\nNote\nThe updated EC2Config version information will not appear in the instance System Log or Trusted Advisor check until you reboot or stop and start your instance.\nTo download and install the latest version of EC2Config using PowerShell\nTo download, unzip, and install the latest version of EC2Config using PowerShell, run the following commands from a PowerShell window:\n$Url = \"https://s3.amazonaws.com/ec2-downloads-windows/EC2Config/EC2Install.zip\"\n$DownloadZipFile = \"$env:USERPROFILE\\Desktop\\\" + $(Split-Path -Path $Url -Leaf)\n$ExtractPath = \"$env:USERPROFILE\\Desktop\\\"\nInvoke-WebRequest -Uri $Url -OutFile $DownloadZipFile\n$ExtractShell = New-Object -ComObject Shell.Application \n$ExtractFiles = $ExtractShell.Namespace($DownloadZipFile).Items() \n$ExtractShell.NameSpace($ExtractPath).CopyHere($ExtractFiles) \nStart-Process $ExtractPath\nStart-Process `\n    -FilePath $env:USERPROFILE\\Desktop\\EC2Install.exe `\n    -ArgumentList \"/S\"\nNote\nIf you receive an error when downloading the file, and you are using Windows Server 2016 or earlier, TLS 1.2 might need to be enabled for your PowerShell terminal. You can enable TLS 1.2 for the current PowerShell session with the following command and then try again:\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nVerify the installation by checking C:\\Program Files\\Amazon\\ for the Ec2ConfigService directory."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2config-proxy.html",
        "content": "You can configure the EC2Config service to communicate through a proxy using one of the following methods: the AWS SDK for .NET, the system.net element, or Microsoft Group Policy and Internet Explorer. Using the AWS SDK for .NET is the preferred method because you can specify sign-in credentials.\nMethods\nConfigure proxy settings using the AWS SDK for .NET (Preferred)\nConfigure proxy settings using the system.net element\nConfigure proxy settings using Microsoft Group Policy and Microsoft Internet Explorer\nConfigure proxy settings using the AWS SDK for .NET (Preferred)\nYou can configure proxy settings for the EC2Config service by specifying the proxy element in the Ec2Config.exe.config file. For more information, see Configuration Files Reference for AWS SDK for .NET.\nTo specify the proxy element in Ec2Config.exe.config\nEdit the Ec2Config.exe.config file on an instance where you want the EC2Config service to communicate through a proxy. By default, the file is located in the following directory: %ProgramFiles%\\Amazon\\Ec2ConfigService.\nAdd the following aws element to the configSections. Do not add this to any existing sectionGroups.\nFor EC2Config versions 3.17 or earlier\n<configSections>\n   <section name=\"aws\" type=\"Amazon.AWSSection, AWSSDK\"/>\n</configSections>\nFor EC2Config versions 3.18 or later\n<configSections>\n     <section name=\"aws\" type=\"Amazon.AWSSection, AWSSDK.Core\"/>\n</configSections>\nAdd the following aws element to the Ec2Config.exe.config file.\n<aws>\n   <proxy\n     host=\"string value\"\n     port=\"string value\"\n     username=\"string value\"\n     password=\"string value\" />\n</aws>\nSave your changes.\nConfigure proxy settings using the system.net element\nYou can specify proxy settings in a system.net element in the Ec2Config.exe.config file. For more information, see defaultProxy element (network settings).\nTo specify the system.net element in Ec2Config.exe.config\nEdit the Ec2Config.exe.config file on an instance where you want the EC2Config service to communicate through a proxy. By default, the file is located in the following directory: %ProgramFiles%\\Amazon\\Ec2ConfigService.\nAdd a defaultProxy entry to system.net. For more information, see defaultProxy element (network settings).\nFor example, the following configuration routes all traffic to use the proxy that is currently configured for Internet Explorer, with the exception of the metadata and licensing traffic, which will bypass the proxy.\n<defaultProxy>\n    <proxy usesystemdefault=\"true\" />\n    <bypasslist>\n        <add address=\"169.254.169.250\" />\n        <add address=\"169.254.169.251\" />\n        <add address=\"169.254.169.254\" />\n        <add address=\"[fd00:ec2::250]\" />\n        <add address=\"[fd00:ec2::254]\" />\n    </bypasslist>\n</defaultProxy>\nSave your changes.\nConfigure proxy settings using Microsoft Group Policy and Microsoft Internet Explorer\nThe EC2Config service runs under the Local System user account. You can specify instance-wide proxy settings for this account in Internet Explorer after you change Group Policy settings on the instance.\nTo configure proxy settings using Group Policy and Internet Explorer\nOn an instance where you want the EC2Config service to communicate through a proxy, open a Command prompt as an Administrator, type gpedit.msc, and press Enter.\nIn the Local Group Policy Editor, under Local Computer Policy, choose Computer Configuration, Administrative Templates, Windows Components, Internet Explorer.\nIn the right-pane, choose Make proxy settings per-machine (rather than per-user) and then choose Edit policy setting.\nChoose Enabled, and then choose Apply.\nOpen Internet Explorer, and then choose the Tools button.\nChoose Internet Option, and then choose the Connections tab.\nChoose LAN settings.\nUnder Proxy server, choose the Use a proxy server for your LAN option.\nSpecify address and port information and then choose OK."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/set-ec2config-service-properties.html",
        "content": "The following procedure describes how to use the EC2 Service Properties system dialog to enable or disable settings.\nLaunch and connect to your Windows instance.\nFrom the Start menu, click All Programs, and then click EC2ConfigService Settings.\nOn the General tab of the EC2 Service Properties system dialog, you can enable or disable the following settings.\nSet Computer Name\nIf this setting is enabled (it is disabled by default), the host name is compared to the current internal IP address at each boot; if the host name and internal IP address do not match, the host name is reset to contain the internal IP address and then the system reboots to pick up the new host name. To set your own host name, or to prevent your existing host name from being modified, do not enable this setting.\nUser Data\nUser data execution enables you to specify scripts in the instance metadata. By default, these scripts are run during the initial launch. You can also configure them to run the next time you reboot or start the instance, or every time you reboot or start the instance.\nIf you have a large script, we recommend that you use user data to download the script, and then run it.\nFor more information, see User data execution.\nEvent Log\nUse this setting to display event log entries on the console during boot for easy monitoring and debugging.\nClick Settings to specify filters for the log entries sent to the console. The default filter sends the three most recent error entries from the system event log to the console.\nWallpaper Information\nUse this setting to display system information on the desktop background. The following is an example of the information displayed on the desktop background.\nThe information displayed on the desktop background is controlled by the settings file EC2ConfigService\\Settings\\WallpaperSettings.xml.\nEnable Hibernation\nUse this setting to allow EC2 to signal the operating system to perform hibernation.\nClick the Storage tab. You can enable or disable the following settings.\nRoot Volume\nThis setting dynamically extends Disk 0/Volume 0 to include any unpartitioned space. This can be useful when the instance is booted from a root device volume that has a custom size.\nInitialize Drives\nThis setting formats and mounts all volumes attached to the instance during start.\nDrive Letter Mapping\nThe system maps the volumes attached to an instance to drive letters. For Amazon EBS volumes, the default is to assign drive letters going from D: to Z:. For instance store volumes, the default depends on the driver. AWS PV drivers and Citrix PV drivers assign instance store volumes drive letters going from Z: to A:. Red Hat drivers assign instance store volumes drive letters going from D: to Z:.\nTo choose the drive letters for your volumes, click Mappings. In the DriveLetterSetting dialog box, specify the Volume Name and Drive Letter values for each volume, click Apply, and then click OK. We recommend that you select drive letters that avoid conflicts with drive letters that are likely to be in use, such as drive letters in the middle of the alphabet.\nAfter you specify a drive letter mapping and attach a volume with same label as one of the volume names that you specified, EC2Config automatically assigns your specified drive letter to that volume. However, the drive letter mapping fails if the drive letter is already in use. Note that EC2Config doesn't change the drive letters of volumes that were already mounted when you specified the drive letter mapping.\nTo save your settings and continue working on them later, click OK to close the EC2 Service Properties system dialog. If you have finished customizing your instance and want to create an AMI from that instance, see Create an Amazon EC2 AMI using Windows Sysprep."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/repair-ec2config.html",
        "content": "The following information can help you troubleshoot issues with the EC2Config service.\nUpdate EC2Config on an unreachable instance\nUse the following procedure to update the EC2Config service on a Windows Server instance that is inaccessible using Remote Desktop.\nTo update EC2Config on an Amazon EBS-backed Windows instance that you can't connect to\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nLocate the affected instance. Select the instance and choose Instance state, and then choose Stop instance.\nWarning\nWhen you stop an instance, the data on any instance store volumes is erased. To keep data from instance store volumes, be sure to back it up to persistent storage.\nChoose Launch instances and create a temporary t2.micro instance in the same Availability Zone as the affected instance. Use a different AMI than the one that you used to launch the affected instance.\nImportant\nIf you do not create the instance in the same Availability Zone as the affected instance you will not be able to attach the root volume of the affected instance to the new instance.\nIn the EC2 console, choose Volumes.\nLocate the root volume of the affected instance. Detach the volume and then attach the volume to the temporary instance that you created earlier. Attach it with the default device name (xvdf).\nUse Remote Desktop to connect to the temporary instance, and then use the Disk Management utility to make the volume available for use.\nDownload the latest version of the EC2Config service. Extract the files from the .zip file to the Temp directory on the drive you attached.\nOn the temporary instance, open the Run dialog box, type regedit, and press Enter.\nChoose HKEY_LOCAL_MACHINE. From the File menu, choose Load Hive. Choose the drive and then navigate to and open the following file: Windows\\System32\\config\\SOFTWARE. When prompted, specify a key name.\nSelect the key you just loaded and navigate to Microsoft\\Windows\\CurrentVersion. Choose the RunOnce key. If this key doesn't exist, choose CurrentVersion from the context (right-click) menu, choose New and then choose Key. Name the key RunOnce.\nFrom the context (right-click) menu choose the RunOnce key, choose New and then choose String Value. Enter Ec2Install as the name and C:\\Temp\\Ec2Install.exe /quiet as the data.\nChoose the HKEY_LOCAL_MACHINE\\specified key name\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon key. From the context (right-click) menu choose New, and then choose String Value. Enter AutoAdminLogon as the name and 1 as the value data.\nChoose the HKEY_LOCAL_MACHINE\\specified key name\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon> key. From the context (right-click) menu choose New, and then choose String Value. Enter DefaultUserName as the name and Administrator as the value data.\nChoose the HKEY_LOCAL_MACHINE\\specified key name\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon key. From the context (right-click) menu choose New, and then choose String Value. Type DefaultPassword as the name and enter a password in the value data.\nIn the Registry Editor navigation pane, choose the temporary key that you created when you first opened Registry Editor.\nFrom the File menu, choose Unload Hive.\nIn Disk Management Utility, choose the drive you attached earlier, open the context (right-click) menu, and choose Offline.\nIn the Amazon EC2 console, detach the affected volume from the temporary instance and reattach it to your instance with the device name /dev/sda1. You must specify this device name to designate the volume as a root volume.\nStop and start Amazon EC2 instances the instance.\nAfter the instance starts, check the system log and verify that you see the message Windows is ready to use.\nOpen Registry Editor and choose HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon. Delete the String Value keys you created earlier: AutoAdminLogon, DefaultUserName, and DefaultPassword.\nDelete or stop the temporary instance you created in this procedure."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2config-version-details.html",
        "content": "Windows AMIs prior to Windows Server 2016 include an optional service called the EC2Config service (EC2Config.exe). EC2Config starts when the instance boots and performs tasks during startup and each time you stop or start the instance.\nYou can receive notifications when new versions of the EC2Config service are released. For more information, see Subscribe to EC2 Windows launch agent notifications.\nThe following table describes the released versions of EC2Config. For information about the updates for SSM Agent, see Systems Manager SSM Agent Release Notes.\nVersion Details Release date\n4.9.5777\nFixed issue where RSS configuration was set incorrectly for some instance types.\nNew version of SSM Agent 3.3.484.0.\n17 June 2024\n4.9.5554\nLimit domain name devolution based on registry entry: HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\Dnscache\\Parameters\\DomainNameDevolutionLevel.\nNew version of SSM Agent 3.2.1630.0.\n4 October 2023\n4.9.5467\nAdded retry capability for discovering console port.\nNew version of SSM Agent 3.1.2282.0.\n1 August 2023\n4.9.5288\nUpdated AWS Core SDK to version 3.7.103.23.\nFixed issue where the AWS-UpdateEC2Config SSM document fails to update EC2Config on instances enabled with only IMDSv2.\nNew version of SSM Agent 3.1.2144.0.\n8 March 2023\n4.9.5231\nNew version of SSM Agent 3.1.1927.0.\n14 February 2023\n4.9.5103\nFixed issue where ephemeral volumes are incorrectly identified on r5d and i4i instance families.\nNew version of SSM Agent 3.1.1856.0.\n5 December 2022\n4.9.5064\nUpdated to use PCI segment information to select the console port.\nSigned PowerShell scripts and added copyright headers.\nFixed primary network adapter selection logic.\nNew version of SSM Agent 3.1.1732.0.\n16 November 2022\n4.9.4588\nUpdated IMDS wait logic to make only IMDSv2 requests.\nAdded libec2launch.dll launch-agent shared library.\nNew version of SSM Agent 3.1.1188.0.\n31 May 2022\n4.9.4556\nAdded wait logic to ensure full initialization of NIC before use.\nNew version of Log4Net 2.0.14.0 picks up security patch.\nNew version of SSM Agent 3.1.1045.0 picks up security patch.\n1 March 2022\n4.9.4536\nFixed issue where userdata crashes when the Temp folder is missing.\nNew version of SSM Agent 3.1.804.0.\n31 January 2022\n4.9.4508\nFixed issue to correctly compute diskpart script path.\nNew version of SSM Agent 3.1.338.0.\n6 October 2021\n4.9.4500\nUpdated Install-EgpuManagerConfig with IMDS v2 support.\nUpdated web links to use https.\nNew version of SSM Agent 3.1.282.0\n7 September 2021\n4.9.4419\nFixed IMDS version 1 fallback logic\nUpdated all usage of Windows temp directory to EC2Config temp directory\nNew version of SSM Agent 3.0.1124.0\n2 June 2021\n4.9.4381\nAdded support for SSM document schema version 2.2 in EC2ConfigUpdater\nAdded AWS Nitro Enclaves package version to console log\nNew version of SSM Agent 3.0.529.0\n4 May 2021\n4.9.4326\nRemoved all links in the settings UI\nThis is the last EC2Config version that supports Windows Server 2008.\n3 March 2021\n4.9.4279\nFixed security issue related to Ec2ConfigMonitor scheduled task\nFixed drive letter mapping issue and incorrect ephemeral disk count\nAdded OsCurrentBuild and OsReleaseId to console output\nNew version of SSM Agent 2.3.871.0\n11 December 2020\n4.9.4222\nFixed IMDS version 1 fallback logic\nNew version of SSM Agent 2.3.842.0\n7 April 2020\n4.9.4122\nAdded support for IMDS v2\nNew version of SSM Agent 2.3.814.0\n4 March 2020\n4.9.3865\nFixed issue detecting COM port for Windows Server 2008 R2 on metal instances\nNew version of SSM Agent 2.3.722.0\n31 October 2019\n4.9.3519\nNew version of SSM Agent 2.3.634.0\n18 June 2019\n4.9.3429\nNew version of SSM Agent 2.3.542.0\n25 April 2019\n4.9.3289\nNew version of SSM Agent 2.3.444.0\n11 February 2019\n4.9.3270\nAdded plugin for setting the monitor to never turn off to fix ACPI issues\nSQL Server edition and version written to console\nNew version of SSM Agent 2.3.415.0\n22 January 2019\n4.9.3230\nDrive Letter Mapping description updated to better align to functionality\nNew version of SSM Agent 2.3.372.0\n10 January 2019\n4.9.3160\nIncreased wait time for primary NIC\nAdded default configuration for RSS and Receive Queue settings for ENA devices\nDisabled hibernation during Sysprep\nNew version of SSM Agent 2.3.344.0\nUpgraded AWS SDK to 3.3.29.13\n15 December 2018\n4.9.3067\nImprovements made to instance hibernation\nNew version of SSM Agent 2.3.235.0\n8 November 2018\n4.9.3034\nAdded route 169.254.169.253/32 for DNS server\nNew version of SSM Agent 2.3.193.0\n24 October 2018\n4.9.2986\nAdded signing for all EC2Config related binaries\nNew version of SSM Agent 2.3.136.0\n11 October 2018\n4.9.2953\nNew version of SSM Agent (2.3.117.0)\n2 October 2018\n4.9.2926\nNew version of SSM Agent (2.3.68.0)\n18 September 2018\n4.9.2905\nNew version of SSM Agent (2.3.50.0)\nAdded route 169.254.169.123/32 to AMZN time service\nAdded route 169.254.169.249/32 to GRID license service\nFixed an issue causing EBS NVMe volumes to be marked as ephemeral\n17 September 2018\n4.9.2854\nNew version of SSM Agent (2.3.13.0)\n17 August 2018\n4.9.2831\nNew version of SSM Agent (2.2.916.0)\n7 August 2018\n4.9.2818\nNew version of SSM Agent (2.2.902.0)\n31 July 2018\n4.9.2756\nNew version of SSM Agent (2.2.800.0)\n27 June 2018\n4.9.2688\nNew version of SSM Agent (2.2.607.0)\n25 May 2018\n4.9.2660\nNew version of SSM Agent (2.2.546.0)\n11 May 2018\n4.9.2644\nNew version of SSM Agent (2.2.493.0)\n26 April 2018\n4.9.2586\nNew version of SSM Agent (2.2.392.0)\n28 March 2018\n4.9.2565\nNew version of SSM Agent (2.2.355.0)\nFixed an issue on M5 and C5 instances (unable to find PV drivers)\nAdd console logging for instance type, newest PV drivers, and NVMe drivers\n13 March 2018\n4.9.2549\nNew version of SSM Agent (2.2.325.0)\n8 March 2018\n4.9.2461\nNew version of SSM Agent (2.2.257.0)\n15 February 2018\n4.9.2439\nNew version of SSM Agent (2.2.191.0)\n6 February 2018\n4.9.2400\nNew version of SSM Agent (2.2.160.0)\n16 January 2018\n4.9.2327\nNew version of SSM Agent (2.2.120.0)\nAdded COM port discovery on Amazon EC2 bare metal instances\nAdded Hyper-V status logging on Amazon EC2 bare metal instances\n2 January 2018\n4.9.2294\nNew version of SSM Agent (2.2.103.0)\n4 December 2017\n4.9.2262\nNew version of SSM Agent (2.2.93.0)\n15 November 2017\n4.9.2246\nNew version of SSM Agent (2.2.82.0)\n11 November 2017\n4.9.2218\nNew version of SSM Agent (2.2.64.0)\n29 October 2017\n4.9.2212\nNew version of SSM Agent (2.2.58.0)\n23 October 2017\n4.9.2203\nNew version of SSM Agent (2.2.45.0)\n19 October 2017\n4.9.2188\nNew version of SSM Agent (2.2.30.0)\n10 October 2017\n4.9.2180\nNew version of SSM Agent (2.2.24.0)\nAdded the Elastic GPU plugin for GPU instances\n5 October 2017\n4.9.2143\nNew version of SSM Agent (2.2.16.0)\n1 October 2017\n4.9.2140\nNew version of SSM Agent (2.1.10.0)\n4.9.2130\nNew version of SSM Agent (2.1.4.0)\n4.9.2106\nNew version of SSM Agent (2.0.952.0)\n4.9.2061\nNew version of SSM Agent (2.0.922.0)\n4.9.2047\nNew version of SSM Agent (2.0.913.0)\n4.9.2031\nNew version of SSM Agent (2.0.902.0)\n4.9.2016\nNew version of SSM Agent (2.0.879.0)\nFixed the CloudWatch Logs directory path for Windows Server 2003\n4.9.1981\nNew version of SSM Agent (2.0.847.0)\nFixed the issue with important.txt being generated in EBS volumes.\n4.9.1964 New version of SSM Agent (2.0.842.0)\n4.9.1951\nNew version of SSM Agent (2.0.834.0)\nFixed the issue with drive letter not being mapped from Z: for ephemeral drives.\n4.9.1925\nNew version of SSM Agent (2.0.822.0)\n[Bug] This version is not a valid update target from SSM Agent v4.9.1775.\n4.9.1900 New version of SSM Agent (2.0.805.0)\n4.9.1876\nNew version of SSM Agent (2.0.796.0)\nFixed an issue with output/error redirection for admin userdata execution.\n4.9.1863\nNew version of SSM Agent (2.0.790.0)\nFixed problems with attaching multiple EBS volumes to an Amazon EC2 instance.\nImproved CloudWatch to take a configuration path, keeping the backwards compatibility.\n4.9.1791 New version of SSM Agent (2.0.767.0)\n4.9.1775\nNew version of SSM Agent (2.0.761.0)\n4.9.1752\nNew version of SSM Agent (2.0.755.0)\n4.9.1711\nNew version of SSM Agent (2.0.730.0)\n4.8.1676\nNew version of SSM Agent (2.0.716.0)\n4.7.1631\nNew version of SSM Agent (2.0.682.0)\n4.6.1579\nNew version of SSM Agent (2.0.672.0)\nFixed agent update issue with v4.3, v4.4, and v4.5\n4.5.1534\nNew version of SSM Agent (2.0.645.1)\n4.4.1503\nNew version of SSM Agent (2.0.633.0)\n4.3.1472\nNew version of SSM Agent (2.0.617.1)\n4.2.1442\nNew version of SSM Agent (2.0.599.0)\n4.1.1378\nNew version of SSM Agent (2.0.558.0)\n4.0.1343\nRun Command, State Manager, the CloudWatch agent, and domain join support have been moved into another agent called SSM Agent. SSM Agent will be installed as part of the EC2Config upgrade. For more information, see EC2Config and AWS Systems Manager.\nIf you have a proxy set up in EC2Config, you will need to update your proxy settings for SSM Agent before upgrading. If you do not update the proxy settings, you will not be able to use Run Command to manage your instances. To avoid this, see the following information before updating to the newer version: Installing and Configuring SSM Agent on Windows Instances in the AWS Systems Manager User Guide.\nIf you previously enabled CloudWatch integration on your instances by using a local configuration file (AWS.EC2.Windows.CloudWatch.json), you will need to configure the file to work with SSM Agent.\n3.19.1153\nRe-enabled activation plugin for instances with old AWS KMS configuration. Skip activation for BYOL users.\nChange default TRIM behavior to be disabled during disk format operation and added FormatWithTRIM for overriding InitializeDisks plugin with userdata.\n3.18.1118\nFix to reliably add routes to the primary network adapter.\nUpdates to improve support for AWS services.\n3.17.1032\nFixes duplicate system logs appearing when filters set to same category.\nFixes to prevent from hanging during disk initialization.\n3.16.930\nAdded support to log \"Window is Ready to use\" event to Windows Event Log on start.\n3.15.880\nFix to allow uploading Systems Manager Run Command output to S3 bucket names with '.' character.\n3.14.786\nAdded support to override InitializeDisks plugin settings. For example: To speed up SSD disk initialize, you can temporarily disable TRIM by specifying this in userdata:\n<InitializeDrivesSettings><SettingsGroup>FormatWithoutTRIM</SettingsGroup></InitializeDrivesSettings\n3.13.727\nSystems Manager Run Command - Fixes to process commands reliably after windows reboot.\n3.12.649\nFix to gracefully handle reboot when running commands/scripts.\nFix to reliably cancel running commands.\nAdd support for (optionally) uploading MSI logs to S3 when installing applications via Systems Manager Run Command.\n3.11.521\nFixes to enable RDP thumbprint generation for Windows Server 2003.\nFixes to include timezone and UTC offset in the EC2Config log lines.\nSystems Manager support to run Run Command commands in parallel.\nRoll back previous change to bring partitioned disks online.\n3.10.442\nFix Systems Manager configuration failures when installing MSI applications.\nFix to reliably bring storage disks online.\nUpdates to improve support for AWS services.\n3.9.359\nFix in post Sysprep script to leave the configuration of windows update in a default state.\nFix the password generation plugin to improve the reliability in getting GPO password policy settings.\nRestrict EC2Config/SSM log folder permissions to the local Administrators group.\nUpdates to improve support for AWS services.\n3.8.294\nFixed an issue with CloudWatch that prevented logs from getting uploaded when not on primary drive.\nImproved the disk initialization process by adding retry logic.\nAdded improved error handling when the SetPassword plugin occasionally failed during AMI creation.\nUpdates to improve support for AWS services.\n3.7.308\nImprovements to the ec2config-cli utility for config testing and troubleshooting within instance.\nAvoid adding static routes for AWS KMS and meta-data service on an OpenVPN adapter.\nFixed an issue where user-data execution was not honoring the \"persist\" tag.\nImproved error handling when logging to the EC2 console is not available.\nUpdates to improve support for AWS services.\n3.6.269\nWindows activation reliability fix to first use link local address 169.254.0.250/251 for activating windows via AWS KMS\nImproved proxy handling for Systems Manager, Windows Activation and Domain Join scenarios\nFixed an issue where duplicate lines of user accounts were added to the Sysprep answer file\n3.5.228\nAddressed a scenario where the CloudWatch plugin may consume excessive CPU and memory reading Windows Event Logs\nAdded a link to the CloudWatch configuration documentation in the EC2Config Settings UI\n3.4.212\nFixes to EC2Config when used in combination with VM-Import.\nFixed service naming issue in the WiX installer.\n3.3.174\nImproved exception handling for Systems Manager and domain join failures.\nChange to support Systems Manager SSM schema versioning.\nFixed formatting ephemeral disks on Win2K3.\nChange to support configuring disk size greater than 2TB.\nReduced virtual memory usage by setting GC mode to default.\nSupport for downloading artifacts from UNC path in aws:psModule and aws:application plugin.\nImproved logging for Windows activation plugin.\n3.2.97\nPerformance improvements by delay loading Systems Manager SSM assemblies.\nImproved exception handling for malformed sysprep2008.xml.\nCommand line support for Systems Manager \"Apply\" configuration.\nChange to support domain join when there is a pending computer rename.\nSupport for optional parameters in the aws:applications plugin.\nSupport for command array in aws:psModule plugin.\n3.0.54\nEnable support for Systems Manager.\nAutomatically domain join EC2 Windows instances to an AWS directory via Systems Manager.\nConfigure and upload CloudWatch logs/metrics via Systems Manager.\nInstall PowerShell modules via Systems Manager.\nInstall MSI applications via Systems Manager.\n2.4.233\nAdded scheduled task to recover EC2Config from service startup failures.\nImprovements to the Console log error messages.\nUpdates to improve support for AWS services.\n2.3.313\nFixed an issue with large memory consumption in some cases when the CloudWatch Logs feature is enabled.\nFixed an upgrade bug so that ec2config versions lower than 2.1.19 can now upgrade to latest.\nUpdated COM port opening exception to be more friendly and useful in logs.\nEc2configServiceSettings UI disabled resizing and fixed the attribution and version display placement in UI.\n2.2.12\nHandled NullPointerException while querying a registry key for determining Windows Sysprep state which returned null occasionally.\nFreed up unmanaged resources in finally block.\n2.2.11\nFixed a issue in CloudWatch plugin for handling empty log lines.\n2.2.10\nRemoved configuring CloudWatch Logs settings through UI.\nEnable users to define CloudWatch Logs settings in %ProgramFiles%\\Amazon\\Ec2ConfigService\\Settings\\AWS.EC2.Windows.CloudWatch.json file to allow future enhancements.\n2.2.9\nFixed unhandled exception and added logging.\n2.2.8\nFixes Windows OS version check in EC2Config Installer to support Windows Server 2003 SP1 and later.\nFixes null value handling when reading registry keys related to updating Sysprep config files.\n2.2.7\nAdded support for EC2Config to run during Sysprep execution for Windows 2008 and greater.\nImproved exception handling and logging for better diagnostics\n2.2.6\nReduced the load on the instance and on CloudWatch Logs when uploading log events.\nAddressed an upgrade issue where the CloudWatch Logs plug-in did not always stay enabled\n2.2.5\nAdded support to upload logs to CloudWatch Log Service.\nFixed a race condition issue in Ec2OutputRDPCert plug-in\nChanged EC2Config Service recovery option to Restart from TakeNoAction\nAdded more exception information when EC2Config Crashes\n2.2.4\nFixed a typo in PostSysprep.cmd\nFixed the bug which EC2Config does not pin itself onto start menu for OS2012+\n2.2.3\nAdded option to install EC2Config without service starting immediately upon install. To use, run 'Ec2Install.exe start=false' from the command prompt\nAdded parameter in wallpaper plugin to control adding/removing wallpaper. To use, run 'Ec2WallpaperInfo.exe set' or 'Ec2WallpaperInfo.exe revert' from the command prompt\nAdded checking for RealTimeIsUniversal key, output incorrect settings of the RealTimeIsUniveral registry key to the Console\nRemoved EC2Config dependency on Windows temp folder\nRemoved UserData execution dependency on .Net 3.5\n2.2.2\nAdded check to service stop behavior to check that resources are being released\nFixed issue with long execution times when joined to domain\n2.2.1\nUpdated Installer to allow upgrades from older versions\nFixed Ec2WallpaperInfo bug in .Net4.5 only environment\nFixed intermittent driver detection bug\nAdded silent install option. Execute Ec2Install.exe with the '-q' option. eg: 'Ec2Install.exe -q'\n2.2.0\nAdded support for .Net4 and .Net4.5 only environments\nUpdated Installer\n2.1.19\nAdded ephemeral disk labeling support when using Intel network driver (eg. C3 instance Type). For more information, see Enhanced networking on Amazon EC2 instances.\nAdded AMI Origin Version and AMI Origin Name support to the console output\nMade changes to the Console Output for consistent formatting/parsing\nUpdated Help File\n2.1.18\nAdded EC2Config WMI Object for Completion notification (-Namespace root\\Amazon -Class EC2_ConfigService)\nImproved Performance of Startup WMI query with large Event Logs; could cause prolonged high CPU during initial execution\n2.1.17\nFixed UserData execution issue with Standard Output and Standard Error buffer filling\nFixed incorrect RDP thumbprint sometimes appearing in Console Output for >= w2k8 OS\nConsole Output now contains 'RDPCERTIFICATE-SubjectName:' for Windows 2008+, which contains the machine name value\nAdded D:\\ to Drive Letter Mapping dropdown\nMoved Help button to top right and changed look/feel\nAdded Feedback survey link to top right\n2.1.16\nGeneral Tab includes link to EC2Config download page for new Versions\nDesktop Wallpaper overlay now stored in Users Local Appdata folder instead of My Documents to support MyDoc redirection\nMSSQLServer name sync'd with system in Post-Sysprep script (2008+)\nReordered Application Folder (moved files to Plugin directory and removed duplicate files)\nChanged System Log Output (Console):\n*Moved to a date, name, value format for easier parsing (Please start migrating dependencies to new format)\n*Added 'Ec2SetPassword' plugin status\n*Added Sysprep Start and End times\nFixed issue of Ephemeral Disks not being labeled as 'Temporary Storage' for non-english Operating Systems\nFixed EC2Config Uninstall failure after running Sysprep\n2.1.15\nOptimized requests to the Metadata service\nMetadata now bypass Proxy Settings\nEphemeral Disks labeled as 'Temporary Storage' and Important.txt placed on volume when found (Citrix PV drivers only). For more information, see Upgrade PV drivers on EC2 Windows instances.\nEphemeral Disks assigned drive letters from Z to A (Citrix PV drivers only) - assignment can be overwritten using Drive Letter Mapping plugin with Volume labels 'Temporary Storage X' where x is a number 0-25)\nUserData now runs immediately following 'Windows is Ready'\n2.1.14\nDesktop wallpaper fixes\n2.1.13\nDesktop wallpaper will display hostname by default\nRemoved dependency on Windows Time service\nRoute added in cases where multiple IPs are assigned to a single interface\n2.1.11\nChanges made to Ec2Activation Plugin\n-Verifies Activation status every 30 days\n-If Grace Period has 90 days remaining (out of 180), reattempts activation\n2.1.10\nDesktop wallpaper overlay no longer persists with Sysprep or Shutdown without Sysprep\nUserdata option to run on every service start with <persist>true</persist>\nChanged location and name of /DisableWinUpdate.cmd to /Scripts/PostSysprep.cmd\nAdministrator password set to not expire by default in /Scripts/PostSysprep.cmd\nUninstall will remove EC2Config PostSysprep script from c:\\windows\\setup\\script\\CommandComplete.cmd\nAdd Route supports custom interface metrics\n2.1.9\nUserData Execution no longer limited to 3851 Characters\n2.1.7\nOS Version and language identifier written to console\nEC2Config version written to console\nPV driver version written to console\nDetection of Bug Check and output to the console on next boot when found\nOption added to config.xml to persist Sysprep credentials\nAdd Route Retry logic in cases of ENI being unavailable at start\nUser Data execution PID written to console\nMinimum generated password length retrieved from GPO\nSet service start to retry 3 attempts\nAdded S3_DownloadFile.ps1 and S3_Upload file.ps1 examples to /Scripts folder\n2.1.6\nVersion information added to General tab\nRenamed the Bundle tab to Image\nSimplified the process of specifying passwords and moved the password-related UI from the General tab to the Image tab\nRenamed the Disk Settings tab to Storage\nAdded a Support tab with common tools for troubleshooting\nWindows Server 2003 sysprep.ini set to extend OS partition by default\nAdded the private IP address to the wallpaper\nPrivate IP address displayed on wallpaper\nAdded retry logic for Console output\nFixed Com port exception for metadata accessibility -- caused EC2Config to terminate before console output is displayed\nChecks for activation status on every boot -- activates as necessary\nFixed issue of relative paths -- caused when manually executing wallpaper shortcut from startup folder; pointing to Administrator/logs\nFixed default background color for Windows Server 2003 user (other than Administrator)\n2.1.2\nConsole timestamps in UTC (Zulu)\nRemoved appearance of hyperlink on Sysprep tab\nAddition of feature to dynamically expand Root Volume on first boot for Windows 2008+\nWhen Set-Password is enabled, now automatically enables EC2Config to set the password\nEC2Config checks activation status prior to running Sysprep (presents warning if not activated)\nWindows Server 2003 Sysprep.xml now defaults to UTC timezone instead of Pacific\nRandomized Activation Servers\nRenamed Drive Mapping tab to Disk Settings\nMoved Initialize Drives UI items from General to the Disk Settings tab\nHelp button now points to HTML help file\nUpdated HTML help file with changes\nUpdated 'Note' text for Drive Letter Mappings\nAdded InstallUpdates.ps1 to /Scripts folder for automating Patches and cleanup prior to Sysprep\n2.1.0\nDesktop wallpaper displays instance information by default upon first logon (not disconnect/reconnect)\nPowerShell can be run from the userdata by surrounding the code with <powershell></powershell>"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/win-ami-config-fast-launch.html",
        "content": "When you configure a Windows Server AMI for EC2 Fast Launch, Amazon EC2 creates a set of pre-provisioned snapshots to use for faster launching, as follows.\nAmazon EC2 launches a set of temporary t3 instances, based on your settings.\nAs each temporary instance completes the standard launch steps, Amazon EC2 creates a pre-provisioned snapshot of the instance. It stores the snapshot in your Amazon S3 bucket.\nWhen the snapshot is ready, Amazon EC2 terminates the associated t3 instance to keep resource costs as low as possible.\nThe next time Amazon EC2 launches an instance from the EC2 Fast Launch enabled AMI, it uses one of the snapshots to significantly reduce the time it takes to launch.\nAmazon EC2 automatically replenishes the snapshots you have on hand as it uses them to launch instances from the EC2 Fast Launch enabled AMI.\nAny account that has access to an AMI with EC2 Fast Launch enabled can benefit from reduced launch times. When the AMI owner grants access for you to launch instances, the pre-provisioned snapshots come from the AMI owner\u2019s account.\nIf an AMI that supports EC2 Fast Launch is shared with you, you can enable or disable faster launching on the shared AMI yourself. If you enable a shared AMI for EC2 Fast Launch, Amazon EC2 creates the pre-provisioned snapshots directly in your account. If you deplete the snapshots in your account, you can still use snapshots from the AMI owner's account.\nNote\nEC2 Fast Launch deletes pre-provisioned snapshots as soon as they're consumed by a launch to minimize storage costs and prevent reuse. However, if the deleted snapshots match a retention rule, Recycle Bin automatically retains them. We recommend that you review the scope of your Recycle Bin retention rules so that this doesn't happen. For more information, see Recycle Bin in the Amazon EBS User Guide.\nThis feature is not the same as EBS fast snapshot restore. You must explicitly enable EBS fast snapshot restore on a per-snapshot basis, and it has its own associated costs.\nThe following video demonstrates how to configure your Windows AMI for faster launching with a quick overview of the related key terms and their definitions: Launching EC2 Windows instances up to 65% faster on AWS.\nResource costs\nThere is no service charge to configure Windows AMIs for EC2 Fast Launch. However, standard pricing applies for any underlying AWS resources that Amazon EC2 uses. To learn more about associated resource costs and how to manage them, see Manage costs for EC2 Fast Launch underlying resources.\nContents\nKey terms\nEC2 Fast Launch prerequisites for Windows\nConfigure EC2 Fast Launch settings for your Amazon EC2 Windows Server AMI\nView AMIs with EC2 Fast Launch enabled\nManage costs for EC2 Fast Launch underlying resources\nMonitor EC2 Fast Launch\nService-linked role for EC2 Fast Launch\nKey terms\nThe EC2 Fast Launch feature uses the following key terms:\nPre-provisioned snapshot\nA snapshot of an instance that was launched from a Windows AMI with EC2 Fast Launch enabled, and that has completed the following Windows launch steps, rebooting as required.\nSysprep specialize\nWindows Out of Box Experience (OOBE)\nWhen these steps are complete, EC2 Fast Launch stops the instance, and creates a snapshot that is later used for faster launching from the AMI, based on your configuration.\nLaunch frequency\nControls the number of pre-provisioned snapshots that Amazon EC2 can launch within the specified timeframe. When you enable EC2 Fast Launch for your AMI, Amazon EC2 creates the initial set of pre-provisioned snapshots in the background. For example, if the launch frequency is set to five launches per hour, which is the default, then EC2 Fast Launch creates an initial set of five pre-provisioned snapshots.\nWhen Amazon EC2 launches an instance from an AMI with EC2 Fast Launch enabled, it uses one of the pre-provisioned snapshots to reduce the launch time. As snapshots are used, they are automatically replenished, up to the number specified by the launch frequency.\nIf you expect a spike in the number of instances that are launched from your AMI \u2013 during a special event, for example \u2013 you can increase the launch frequency in advance to cover the additional instances that you'll need. When your launch rate returns to normal, you can adjust the frequency back down.\nWhen you experience a higher number of launches than anticipated, you might use up all the pre-provisioned snapshots that you have available. This doesn't cause any launches to fail. However, it can result in some instances going through the standard launch process, until snapshots can be replenished.\nTarget resource count\nThe number of pre-provisioned snapshots to keep on hand for an Amazon EC2 Windows Server AMI with EC2 Fast Launch enabled.\nMax parallel launches\nControls how many instances Amazon EC2 can launch at the same time to create the pre-provisioned snapshots for EC2 Fast Launch. If your target resource count is higher than the maximum parallel launches that you've configured, then Amazon EC2 launches the number of instances specified by Max parallel launches to start creating the snapshots. As those instances complete the process, Amazon EC2 takes the snapshot and stops the instance. Then it continues to launch more instances until the total number of snapshots available has reached the target resource count. The value for Max parallel launches must be 6 or greater."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/win-start-fast-launch-prereqs.html",
        "content": "Before you set up EC2 Fast Launch, verify that you've met the following prerequisites that are required to create snapshots for the AMIs in your AWS account:\nIf you don't use a launch template to configure your settings, ensure that a default VPC is configured for the Region in which you use EC2 Fast Launch.\nNote\nIf you accidentally delete your default VPC in the Region where you plan to configure EC2 Fast Launch, you can create a new default VPC in that Region. To learn more, see Create a default VPC in the Amazon VPC User Guide.\nTo specify a non-default VPC, you must use a launch template when you configure Windows fast launch. For more information, see Use a launch template when you set up EC2 Fast Launch.\nIf your account includes a policy that enforces IMDSv2 for Amazon EC2 instances, you must create a launch template that specifies the metadata configuration to enforce IMDSv2.\nPrivate EC2 Fast Launch AMIs must support user data script execution.\nTo configure EC2 Fast Launch for an AMI, you must create the AMI using Sysprep with the shutdown option. The EC2 Fast Launch feature doesn't currently support AMIs that were created from a running instance.\nTo create an AMI using Sysprep, see Create an Amazon EC2 AMI using Windows Sysprep.\nThe default quota for Max parallel launches across all AMIs in an AWS account is 40 per Region. You can request a Service Quotas increase for your account, as follows.\nSign in to the AWS Management Console and open the Service Quotas console at https://console.aws.amazon.com/servicequotas/.\nIn the navigation pane, choose AWS services.\nIn the search bar, enter EC2 Fast Launch, and select the result.\nSelect the link for Parallel instance launches. This takes you to the Parallel instance launches service quota detail page.\nChoose Request quota increase.\nFor more information, see Requesting a quota increase in the Service Quotas User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/win-fast-launch-configure.html",
        "content": "You can configure EC2 Fast Launch for Windows AMIs that you own, or AMIs that are shared with you from the AWS Management Console, API, SDKs, CloudFormation, or AWS Command Line Interface (AWS CLI). Before you configure EC2 Fast Launch, verify that your AMI meets all of the prerequisites that are required to create the pre-provisioned snapshots. For more information, see EC2 Fast Launch prerequisites for Windows.\nWhen you enable faster launching for Windows instances, Amazon EC2 checks to make sure that you have the required permissions to launch instances from the specified AMI and Launch Template (if provided), including permissions for encrypted AMIs. To prevent errors during the instance launch process, the service validates your permissions before EC2 Fast Launch is enabled. If you don't have the required permissions, the service returns an error, and does not enable EC2 Fast Launch.\nEC2 Fast Launch integrates with EC2 Image Builder to help you create custom images with EC2 Fast Launch enabled. For more information, see Create distribution settings for a Windows AMI with EC2 Fast Launch enabled (AWS CLI) in the EC2 Image Builder User Guide.\nThe following sections cover configuration steps for the Amazon EC2 console and AWS CLI.\nEnable EC2 Fast Launch\nTo enable EC2 Fast Launch, choose the tab that matches your environment, and follow the steps.\nNote\nBefore changing these settings, make sure that your AMI, and the Region that you run in meet all EC2 Fast Launch prerequisites for Windows.\nConsole\nAWS CLI\nPowerShell\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, under Images, choose AMIs.\nChoose the AMI to update by selecting the check box next to the Name.\nFrom the Actions menu above the list of AMIs, choose Configure fast launch. This opens the Configure fast launch page, where you configure the settings for EC2 Fast Launch.\nTo start using pre-provisioned snapshots to launch instances from your Windows AMI faster, select the Enable fast launch for Windows checkbox.\nFrom the Set anticipated launch frequency drop-down list, choose a value to specify the number of snapshots that are created and maintained to cover your expected instance launch volume.\nWhen you're done making changes, choose Save changes.\nNote\nIf you need to use a launch template to specify a non-default VPC, or to configure metadata settings for IMDSv2, see Use a launch template when you set up EC2 Fast Launch.\nDisable EC2 Fast Launch\nTo disable EC2 Fast Launch, choose the tab that matches your environment, and follow the steps.\nNote\nBefore changing these settings, make sure that your AMI, and the Region that you run in meet all EC2 Fast Launch prerequisites for Windows.\nConsole\nAWS CLI\nPowerShell\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, under Images, choose AMIs.\nChoose the AMI to update by selecting the check box next to the Name.\nFrom the Actions menu above the list of AMIs, choose Configure fast launch. This opens the Configure fast launch page, where you configure the settings for EC2 Fast Launch.\nClear the Enable fast launch for Windows checkbox to disable EC2 Fast Launch and to remove pre-provisioned snapshots. This results in the AMI using the standard launch process for each instance, going forward.\nNote\nWhen you disable Windows image optimization, any existing pre-provisioned snapshots are automatically deleted. This step must be completed before you can start using the feature again.\nWhen you're done making changes, choose Save changes.\nUse a launch template when you set up EC2 Fast Launch\nWith a launch template, you can configure a set of launch parameters that Amazon EC2 uses each time it launches an instance from that template. You can specify such things as an AMI to use for your base image, instance types, storage, network settings, and more.\nLaunch templates are optional, except for the following specific cases, where you must use a launch template for your Windows AMI when you configure faster launching:\nYou must use a launch template to specify a non-default VPC for your Windows AMI.\nIf your account includes a policy that enforces IMDSv2 for Amazon EC2 instances, you must create a launch template that specifies the metadata configuration to enforce IMDSv2.\nUse the launch template that includes your metadata configuration from the EC2 console, or when you run the enable-fast-launch command in the AWS CLI, or call the EnableFastLaunch API action.\nAmazon EC2 EC2 Fast Launch doesn't support the following configuration when you use a launch template. If you use a launch template for EC2 Fast Launch, you must not specify any of the following:\nUser data scripts\nTermination protection\nDisabled metadata\nSpot option\nShutdown behavior that terminates the instance\nResource tags for network interface, elastic graphic, or spot instance requests\nSpecify a non-default VPC\nStep 1: Create a launch template\nCreate a launch template that specifies the following details for your Windows instances:\nThe VPC subnet.\nAn instance type of t3.xlarge.\nFor more information, see Create an Amazon EC2 launch template.\nStep 2: Specify the launch template for your EC2 Fast Launch AMI\nChoose the tab that matches your process:\nConsole\nAWS CLI, API\nTo specify the launch template for EC2 Fast Launch from the AWS Management Console, follow these steps:\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, under Images, choose AMIs.\nChoose the AMI to update by selecting the check box next to the Name.\nFrom the Actions menu above the list of AMIs, choose Configure fast launch. This opens the Configure fast launch page, where you configure the settings for EC2 Fast Launch.\nThe Launch template box performs a filtered search that finds launch templates in your account in the current Region that match the text you've entered. Specify all or part of the launch template name or ID in the box to show a list of matching launch templates. For example, if you enter fast in the box, Amazon EC2 finds all of the launch templates in your account in the current Region that have \"fast\" in the name.\nTo create a new launch template, you can choose Create launch template.\nWhen you select a launch template, Amazon EC2 shows the default version for that template in the Source template version box. To specify a different version, highlight the default version to replace it, and enter the version number you want in the box.\nWhen you're done making changes, choose Save changes.\nFor more information about EC2 launch templates, see Store instance launch parameters in Amazon EC2 launch templates."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/win-view-fast-launch.html",
        "content": "You can use the describe-fast-launch-images command in the AWS CLI, or the Get-EC2FastLaunchImage Tools for PowerShell Cmdlet to get details for AMIs that have EC2 Fast Launch enabled.\nAmazon EC2 provides the following details for each Windows AMI that is returned in the results:\nThe image ID for an AMI with EC2 Fast Launch enabled.\nThe resource type that is used for pre-provisioning the associated Windows AMI. Supported value: snapshot.\nThe snapshot configuration, which is a group of parameters that configure pre-provisioning for the associated Windows AMI using snapshots.\nLaunch template information, including the ID, name, and version of the launch template that the associated AMI uses when it launches Window instances from pre-provisioned snapshots.\nThe maximum number of instances that can be launched at the same time for creating resources.\nThe owner ID for the associated AMI. This is not populated for AMIs that are shared with you.\nThe current state of EC2 Fast Launch for the associated AMI. Supported values include: enabling | enabling-failed | enabled | enabled-failed | disabling | disabling-failed.\nNote\nYou can also see the current state displayed in the Manage image optimization page in the EC2 console, as Image optimization state.\nThe reason that EC2 Fast Launch for the associated AMI changed to the current state.\nThe time that EC2 Fast Launch for the associated AMI changed to the current state.\nChoose the tab that matches your command line environment:\nAWS CLI\nTools for PowerShell\nThe describe-fast-launch-images command calls the Amazon EC2 DescribeFastLaunchImages API operation.\nSyntax:\naws ec2 describe-fast-launch-images \\\n --image-ids <value> \\ (optional)\n --filters <value> \\ (optional)\n --dry-run | --no-dry-run \\ (optional)\n --cli-input-json <value> \\ (optional)\n --starting-token <value> \\ (optional)\n --page-size <value> \\ (optional)\n --max-items <value> \\ (optional)\n --generate-cli-skeleton <value> \\ (optional)\nExample:\nThe following describe-fast-launch-images example describes the details for each of the AMIs in the account that are configured for EC2 Fast Launch. In this example, only one AMI in the account is configured for EC2 Fast Launch.\naws ec2 describe-fast-launch-images\nOutput:\n{\n    \"FastLaunchImages\": [\n        {\n            \"ImageId\": \"ami-01234567890abcedf\",\n            \"ResourceType\": \"snapshot\",\n            \"SnapshotConfiguration\": {},\n            \"LaunchTemplate\": {\n                \"LaunchTemplateId\": \"lt-01234567890abcedf\",\n                \"LaunchTemplateName\": \"EC2FastLaunchDefaultResourceCreation-a8c6215d-94e6-441b-9272-dbd1f87b07e2\",\n                \"Version\": \"1\"\n            },\n            \"MaxParallelLaunches\": 6,\n            \"OwnerId\": \"0123456789123\",\n            \"State\": \"enabled\",\n            \"StateTransitionReason\": \"Client.UserInitiated\",\n            \"StateTransitionTime\": \"2022-01-27T22:20:06.552000+00:00\"\n        }\n    ]\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/win-fast-launch-manage-costs.html",
        "content": "There is no service charge to configure Windows AMIs for EC2 Fast Launch. However, when you enable EC2 Fast Launch for an Amazon EC2 Windows AMI, standard pricing applies for underlying AWS resources that Amazon EC2 uses to prepare and store the pre-provisioned snapshots. You can configure cost allocation tags to help you track and manage the costs that are associated with EC2 Fast Launch resources. For more information about how to configure cost allocation tags, see Track EC2 Fast Launch costs on your bill.\nThe following example demonstrates how the costs associated with EC2 Fast Launch snapshots costs might be allocated.\nExample scenario: The AtoZ Example company has a Windows AMI with a 50 GiB EBS root volume. They enable EC2 Fast Launch for their AMI, and set the target resource count to five. Over the course of a month, using EC2 Fast Launch for their AMI costs them around $5.00, and the cost breakdown is as follows:\nWhen AtoZ Example enables EC2 Fast Launch, Amazon EC2 launches five small instances. Each instance runs through the Sysprep and OOBE Windows launch steps, rebooting as required. This takes several minutes for each instance (time can vary, based on how busy that Region or Availability Zone (AZ) is, and on the size of the AMI).\nCosts\nInstance runtime costs (or minimum runtime, if applicable): five instances\nVolume costs: five EBS root volumes\nWhen the pre-provisioning process completes, Amazon EC2 takes a snapshot of the instance, which it stores in Amazon S3. Snapshots are typically stored for 4\u20138 hours before they are consumed by a launch. In this case, the cost is roughly $0.02 to $0.05 per snapshot.\nCosts\nSnapshot storage (Amazon S3): five snapshots\nAfter Amazon EC2 takes the snapshot, it stops the instance. At that point, the instance is no longer accruing costs. However EBS volume costs continue to accrue.\nCosts\nEBS volumes: costs continue for the associated EBS root volumes.\nNote\nThe costs shown here are for demonstration purposes only. Your costs will vary, depending on your AMI configuration and pricing plan.\nTrack EC2 Fast Launch costs on your bill\nCost allocation tags can help you organize your AWS bill to reflect the costs associated with EC2 Fast Launch. You can use the following tag that Amazon EC2 adds to the resources it creates when it prepares and stores pre-provisioned snapshots for EC2 Fast Launch:\nTag key: CreatedBy, Value: EC2 Fast Launch\nAfter you activate the tag in the Billing and Cost Management console, and set up your detailed billing report, the user:CreatedBy column appears on the report. The column includes values from all services. However, if you download the CSV file, you can import the data into a spreadsheet, and filter for EC2 Fast Launch in the value. This information also appears in the AWS Cost and Usage Report when the tag is activated.\nStep 1: Activate user-defined cost allocation tags\nTo include resource tags in your cost reports, you must first activate the tag in the Billing and Cost Management console. For more information, see Activating User-Defined Cost Allocation Tags in the AWS Billing and Cost Management User Guide.\nNote\nActivation can take up to 24 hours.\nStep 2: Set up a cost report\nIf you already have a cost report set up, a column for your tag appears the next time the report runs after activation is complete. To set up cost reports for the first time, choose one of the following.\nSee Setting up a monthly cost allocation report in the AWS Billing and Cost Management User Guide.\nSee Creating Cost and Usage Reports in the AWS Cost and Usage Report User Guide.\nNote\nIt can take up to 24 hours for AWS to start delivering reports to your S3 bucket.\nYou can configure EC2 Fast Launch for Windows AMIs that you own, or AMIs that are shared with you from the Amazon EC2 console, API, SDKs, CloudFormation, or ec2 commands in the AWS CLI. The following sections cover configuration steps for the Amazon EC2 console and AWS CLI.\nYou can also create custom Windows AMIs that are configured for EC2 Fast Launch with EC2 Image Builder. For more information, see Create distribution settings for a Windows AMI with EC2 Fast Launch enabled (AWS CLI)."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/win-fast-launch-monitor.html",
        "content": "This section covers how to monitor the Amazon EC2 Windows Server AMIs in your account that have EC2 Fast Launch enabled.\nMonitor EC2 Fast Launch state changes with EventBridge\nWhen the state changes for a Windows AMI with EC2 Fast Launch enabled, Amazon EC2 generates an EC2 Fast Launch State-change Notification event. Then Amazon EC2 sends the state change event to Amazon EventBridge (formerly known as Amazon CloudWatch Events).\nYou can create EventBridge rules that trigger one or more actions in response to the state change event. For example, you can create an EventBridge rule that detects when EC2 Fast Launch is enabled and performs the following actions:\nSends a message to an Amazon SNS topic that notifies its subscribers.\nInvokes a Lambda function that performs some action.\nSends the state change data to Amazon Data Firehose for analytics.\nFor more information, see Creating Amazon EventBridge rules that react to events in the Amazon EventBridge User Guide.\nState change events\nThe EC2 Fast Launch feature emits JSON formatted state change events on a best-effort basis. Amazon EC2 sends the events to EventBridge in near real time. This section describes the event fields and shows an example of the event format.\nEC2 Fast Launch State-change Notification\nimageId\nIdentifies the AMI with the EC2 Fast Launch state change.\nresourceType\nThe type of resource to use for pre-provisioning. Supported value: snapshot. The default value is snapshot.\nstate\nThe current state of the EC2 Fast Launch feature for the specified AMI. Valid values include the following:\nenabling \u2013 You've enabled the EC2 Fast Launch feature for the AMI, and Amazon EC2 has started creating snapshots for the pre-provisioning process.\nenabling-failed \u2013 Something went wrong that caused the pre-provisioning process to fail the first time that you enabled the EC2 Fast Launch for an AMI. This can happen anytime during the pre-provisioning process.\nenabled \u2013 The EC2 Fast Launch feature is enabled. The state changes to enabled as soon as Amazon EC2 creates the first pre-provisioned snapshot for a newly enabled EC2 Fast Launch AMI. If the AMI was already enabled and goes through pre-provisioning again, the state change happens right away.\nenabled-failed \u2013 This state applies only if this is not the first time your EC2 Fast Launch AMI goes through the pre-provisioning process. This can happen if the EC2 Fast Launch feature is disabled and then later enabled again, or if there is a configuration change or other error after pre-provisioning is completed for the first time.\ndisabling \u2013 The AMI owner has turned off the EC2 Fast Launch feature for the AMI, and Amazon EC2 has started the clean up process.\ndisabled \u2013 The EC2 Fast Launch feature is disabled. The state changes to disabled as soon as Amazon EC2 completes the clean up process.\ndisabling-failed \u2013 Something went wrong that caused the clean up process to fail. This means that some pre-provisioned snapshots may still remain in the account.\nstateTransitionReason\nThe reason that the state changed for the EC2 Fast Launch AMI.\nNote\nAll fields in this event message are required.\nThe following example shows a newly enabled EC2 Fast Launch AMI that has launched the first instance to start the pre-provisioning process. At this point, the state is enabling. After Amazon EC2 creates the first pre-provisioned snapshot, the state changes to enabled.\n{\n \"version\": \"0\",\n \"id\": \"01234567-0123-0123-0123-012345678901\",\n \"detail-type\": \"EC2 Fast Launch State-change Notification\",\n \"source\": \"aws.ec2\",\n \"account\": \"123456789012\",\n \"time\": \"2022-08-31T20:30:12Z\",\n \"region\": \"us-east-1\",\n \"resources\": [\n  \"arn:aws:ec2:us-east-1:123456789012:image/ami-123456789012\"\n ],\n \"detail\": {\n  \"imageId\": \"ami-123456789012\",\n  \"resourceType\": \"snapshot\",\n  \"state\": \"enabling\",\n  \"stateTransitionReason\": \"Client.UserInitiated\"\n }\n}\nMonitor EC2 Fast Launch metrics with CloudWatch\nAmazon EC2 AMIs with EC2 Fast Launch enabled send metrics to Amazon CloudWatch. You can use the AWS Management Console, the AWS CLI, or an API to list the metrics that EC2 Fast Launch sends to CloudWatch. The AWS/EC2 namespace includes the following EC2 Fast Launch metrics:\nMetric Description\nNumberOfAvailableFastLaunchSnapshots\nThe number of pre-provisioned snapshots available per EC2 Fast Launch enabled AMI.\nNumberOfInstancesFastLaunched\nThe number of instances per EC2 Fast Launch enabled AMI that were launched from pre-provisioned snapshots.\nNumberOfInstancesNotFastLaunched\nThe number of instances per EC2 Fast Launch enabled AMI that resulted in a cold boot due to the lack of available pre-provisioned snapshots at launch time.\nFastLaunchSnapshotUsedToRefillStartTime\nThe timestamp when Amazon EC2 launched a new image from a EC2 Fast Launch enabled AMI to create another snapshot after an existing snapshot was used.\nFastLaunchSnapshotCreationTime\nMeasures the time it took for Amazon EC2 to launch an instance and create a snapshot for a EC2 Fast Launch enabled AMI."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/slr-windows-fast-launch.html",
        "content": "Amazon EC2 uses service-linked roles for the permissions that it requires to call other AWS services on your behalf. A service-linked role is a unique type of IAM role that is linked directly to an AWS service. Service-linked roles provide a secure way to delegate permissions to AWS services because only the linked service can assume a service-linked role. For more information about how Amazon EC2 uses IAM roles, including service-linked roles, see IAM roles for Amazon EC2.\nAmazon EC2 uses the service-linked role named AWSServiceRoleForEC2FastLaunch to create and manage a set of pre-provisioned snapshots that reduce the time it takes to launch instances from your Windows AMI.\nYou don't need to create this service-linked role manually. When you start using EC2 Fast Launch for your AMI, Amazon EC2 creates the service-linked role for you, if it doesn't already exist.\nNote\nIf the service-linked role is deleted from your account, you can enable EC2 Fast Launch for another Windows AMI to re-create the role in your account. Alternatively, you can disable EC2 Fast Launch for your current AMI, and then enable it again. However, disabling the feature results in your AMI using the standard launch process for all new instances while Amazon EC2 removes all of your pre-provisioned snapshots. After all of the pre-provisioned snapshots are gone, you can enable using EC2 Fast Launch for your AMI again.\nAmazon EC2 does not allow you to edit the AWSServiceRoleForEC2FastLaunch service-linked role. After you create a service-linked role, you cannot change the name of the role because various entities might reference the role. However, you can edit the description of the role by using IAM. For more information, see Editing a service-linked role in the IAM User Guide.\nYou can delete a service-linked role only after first deleting all of the related resources. This protects the Amazon EC2 resources that are associated with your Amazon EC2 Windows Server AMI with EC2 Fast Launch enabled, because you can't inadvertently remove permission to access the resources.\nAmazon EC2 supports the EC2 Fast Launch service-linked role in all of the Regions where the Amazon EC2 service is available. For more information, see Regions.\nPermissions granted by AWSServiceRoleForEC2FastLaunch\nAmazon EC2 uses the EC2FastLaunchServiceRolePolicy managed policy to complete the following actions:\ncloudwatch:PutMetricData \u2013 Post metric data associated with EC2 Fast Launch to the Amazon EC2 namespace.\nec2:CreateLaunchTemplate \u2013 Create a launch template for your Amazon EC2 Windows Server AMI with EC2 Fast Launch enabled.\nec2:CreateSnapshot \u2013 Create pre-provisioned snapshots for your Amazon EC2 Windows Server AMI with EC2 Fast Launch enabled.\nec2:CreateTags \u2013 Create tags for resources that are associated with launching and pre-provisioning Windows instances for your Amazon EC2 Windows Server AMI with EC2 Fast Launch enabled.\nec2:DeleteSnapshots \u2013 Delete all associated pre-provisioned snapshots if EC2 Fast Launch is turned off for a previously enabled AMI.\nec2:DescribeImages \u2013 Describe images for all resources.\nec2:DescribeInstanceAttribute \u2013 Describe instance attributes for all resources.\nec2:DescribeInstanceStatus \u2013 Describe instance status for all resources.\nec2:DescribeInstances \u2013 Describe instances for all resources.\nec2:DescribeInstanceTypeOfferings \u2013 Describe instance type offerings for all resources.\nec2:DescribeLaunchTemplates \u2013 Describe launch templates for all resources.\nec2:DescribeLaunchTemplateVersions \u2013 Describe launch template versions for all resources.\nec2:DescribeSnapshots \u2013 Describe snapshot resources for all resources.\nec2:DescribeSubnets \u2013 Describe subnets for all resources.\nec2:RunInstances \u2013 Launch instances from an Amazon EC2 Windows Server AMI with EC2 Fast Launch enabled, in order to perform provisioning steps.\nec2:StopInstances \u2013 Stop instances that were launched from an Amazon EC2 Windows Server AMI with EC2 Fast Launch enabled, in order to create pre-provisioned snapshots.\nec2:TerminateInstances \u2013 Terminate an instance that was launched from an Amazon EC2 Windows Server AMI with EC2 Fast Launch enabled, after creating the pre-provisioned snapshot from it.\niam:PassRole \u2013 Allows the AWSServiceRoleForEC2FastLaunch service-linked role to launch instances on your behalf using the instance profile from your launch template.\nFor more information about using managed policies for Amazon EC2, see AWS managed policies for Amazon EC2.\nAccess to customer managed keys for use with encrypted AMIs and EBS snapshots\nPrerequisite\nTo enable Amazon EC2 to access an encrypted AMI on your behalf, you must have permission for the createGrant action in the customer managed key.\nWhen you enable EC2 Fast Launch for an encrypted AMI, Amazon EC2 ensures that permission is granted for the AWSServiceRoleForEC2FastLaunch role to use the customer managed key to access your AMI. This permission is needed to launch instances and create pre-provisioned snapshots on your behalf."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-windows-passwords.html",
        "content": "If you launch your instance from an AWS Windows AMI, the launch agents that are pre-installed set the default password as follows:\nFor Windows Server 2022 and later, EC2Launch v2 generates the default password.\nFor Windows Server 2016 and 2019, the EC2Launch agent generates the default password.\nFor Windows Server 2012 R2 and earlier, the EC2Config service generates the default password.\nNote\nFor Windows Server 2016 and later AMIs, Password never expires is disabled for the local administrator. For AMI versions prior to Windows Server 2016, Password never expires is enabled for the local administrator.\nChange the Administrator password after connecting\nWhen you connect to an instance the first time, we recommend that you change the Administrator password from its default value. Use the following procedure to change the Administrator password for a Windows instance.\nImportant\nStore the new password in a safe place. You won't be able to retrieve the new password using the Amazon EC2 console. The console can only retrieve the default password. If you attempt to connect to the instance using the default password after changing it, you'll get a \"Your credentials did not work\" error.\nTo change the local Administrator password\nConnect to the instance and open a command prompt.\nRun the following command. If your new password includes special characters, enclose the password in double quotes.\nnet user Administrator \"new_password\"\nStore the new password in a safe place.\nChange a lost or expired password\nIf you lose your password or it expires, you can generate a new password. For password reset procedures, see Reset the Windows administrator password for an Amazon EC2 Windows instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/windows-optional-components.html",
        "content": "To access and install the optional components, you must find the correct EBS snapshot for your version of Windows Server, create a volume from the snapshot, and attach the volume to your instance.\nBefore you begin\nUse the AWS Management Console or a command line tool to get the instance ID and Availability Zone of your instance. You must create your EBS volume in the same Availability Zone as your instance.\nUse one of the following procedures to add Windows Server components to your instance.\nConsole\nAWS CLI\nTools for Windows PowerShell\nTo add Windows components to your instance using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Snapshots.\nFrom the Filter bar, choose Public snapshots.\nAdd the Owner Alias filter and choose amazon.\nAdd the Description filter and enter Windows.\nPress Enter\nSelect the snapshot that matches your system architecture and language preference. For example, select Windows 2019 English Installation Media if your instance is running Windows Server 2019.\nChoose Actions, Create volume from snapshot.\nFor Availability Zone, select the Availability Zone that matches your Windows instance. Choose Add tag and enter Name for the tag key and a descriptive name for the tag value. Choose Create volume.\nIn the Successfully created volume message (green banner), choose the volume that you just created.\nChoose Actions, Attach volume.\nFrom Instance, select the instance ID.\nFor Device name, enter the name of the device for the attachment. If you need help with the device name, see Device names for volumes on Amazon EC2 instances.\nChoose Attach volume.\nConnect to your instance and make the volume available. For more information, see Make an Amazon EBS volume available for use in the Amazon EBS User Guide.\nImportant\nDo not initialize the volume.\nOpen Control Panel, Programs and Features. Choose Turn Windows features on or off. If you are prompted for installation media, specify the EBS volume with the installation media.\n(Optional) When you are finished with the installation media, you can detach the volume. After you detach the volume, you can delete it."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/install-wsl-on-ec2-windows-instance.html",
        "content": "There are two versions of Windows Subsystem for Linux (WSL) that you can install depending on your instance type and instance operating system: WSL 1 and WSL 2. For .metal instance types, you can install either WSL 1 or WSL 2. For all other instance types, the following requirements apply:\nFor virtualized EC2 instances, you must install WSL 1.\nFor instances that run Windows Server, the operating system version must be one of the following to install WSL:\nWindows Server 2019\nWindows Server 2022\nNote\nWhen you install WSL, it automatically enables Virtualization-based Security (VBS) on instance types that support it. EC2 instances don't support VBS for Windows Server 2025. The system could fail to start after a reboot if it's enabled.\nFor more information about WSL, see the Windows Subsystem for Linux Documentation on the Microsoft Build website.\nInstall WSL\nThe following instructions install WSL on an EC2 instance running Windows Server 2022. For the instructions to install WSL on an EC2 instance running Windows Server 2019, see Install WSL on previous versions of Windows Server on the Microsoft website. After you've followed those instructions, you can use step 3 in the instructions below to configure WSL to use WSL 1.\nInstall WSL 1\nTo install WSL, run the following standard installation command on your EC2 instance, but make sure to enable WSL 1 by including --enable-wsl1. By default, WSL 2 is installed. If your instance was launched using a virtualized instance type, you must complete step 3 in this procedure to set the version to WSL 1.\nwsl --install --enable-wsl1 --no-launch\nRestart your EC2 instance.\nshutdown -r -t 20\nTo configure WSL to use WSL 1, run the following command on your instance. For more information about setting the WSL version, see Manual installation steps for older versions of WSL on the Microsoft Build website.\nwsl --set-default-version 1\nInstall the default distribution.\nwsl --install\nInstall WSL 2\nTo install WSL, run the following standard installation command on your EC2 instance. By default, WSL 2 is installed. If you are installing WSL on a .metal instance, then this is the only step to perform.\nwsl --install\nFor more information, see Install Linux on Windows with WSL on the Microsoft Build website."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/windows-troubleshooting-utils.html",
        "content": "The EC2WinUtil driver provides the following types of troubleshooting support for your Windows instance.\nCrash call stacks\nEC2WinUtil collects basic crash information from your instance and writes it out to the serial console. The following list includes some of the key details that the utility writes to the console.\nIdentification of the module that generated the fault.\nThe Windows error code associated with the event.\nA stack trace of the most recent calls.\nWith these details, you can perform initial root cause analysis and determine if further analysis is needed. Output to the serial console also enables AWS to track crash trends for Amazon EC2 drivers, and diagnose large scale crash events.\nNote\nEC2WinUtil doesn't collect any customer data in its crash call stacks.\nHibernate/resume stability\nEC2WinUtil tracks the virtualization settings of the instance across hibernate/resume cycles. This helps to improve the long-term stability of instances that have enabled hibernation.\nFor driver release notes, see EC2 Windows Utility Driver version history"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2winutil-driver-version-history.html",
        "content": "The following table shows which EC2WinUtil drivers run on each version of Windows Server on Amazon EC2. Earlier versions of the operating system use the driver that's preinstalled on AWS Windows Server AMIs that the instance launched from. AMIs that are shared with you or that you subscribe to through AWS Marketplace don't have the driver preinstalled.\nWindows Server version EC2WinUtil driver version\nWindows Server 2025 latest version\nWindows Server 2022 latest version\nWindows Server 2019 latest version\nWindows Server 2016 latest version\nNote\nPrior to driver version 3.0.0, the EC2WinUtil driver was not available to download for manual installation. Earlier versions were only available as preinstalled drivers for AWS Windows AMIs.\nThe following table describes the released versions of the EC2WinUtil driver.\nPackage download link Driver version Details Release date\n3.0.0\n3.0.0 Modernized the driver for Windows 10 and added support for installation as a primitive driver. June 13, 2024\nDownload not available for this version. 2.0.0 Added support for output on MMIO serial ports for metal instance types. Also improved crash parsing and updated the output format. August 23, 2018\nDownload not available for this version. 1.0.1\nChanged the driver name to EC2WinUtil due to a namespace conflict with Amazon Inspector. Several bug fixes are included.\nMarch 1, 2018\nDownload not available for this version. 1.0.0\nInitial release. The driver was initially called AwsAgent.\nNovember 28, 2017"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/serverupgrade.html",
        "content": "If it's time to upgrade the Windows Server operating system on your EC2 Windows instance from an earlier version, you can use one of the following methods.\nIn-place upgrade\nAn in-place upgrade operates on an existing instance. Only the operating system files are affected during this proces, while your settings, server roles, and data are left intact.\nMigration (also known as a side-by-side upgrade)\nA migration involves capturing settings, configurations, and data, and porting these to a newer operating system on a fresh EC2 Windows instance. You can launch your instance from a public or private Windows AMI that you subscribe to from the AWS Marketplace, or an AMI that's shared with you. You can also create a custom AMI with EC2 Image Builder. See the Image Builder User Guide for more information.\nNote\nAWS provides a set of publicly available Amazon Machine Images (AMIs) for Windows Server versions that run on EC2 instances. These AMIs are updated on a monthly basis. For information about the latest Windows AMIs, see the AWS Windows AMI Reference.\nMicrosoft has traditionally recommended migrating to a newer version of Windows Server instead of upgrading in place. Migrating can result in fewer upgrade errors or issues, but can take longer than an in-place upgrade because of the need to provision a new instance, plan for and port applications, and adjust configuration settings on the new instance. An in-place upgrade can be faster, but software incompatibilities can produce errors.\nContents\nPerform an in-place upgrade on your EC2 Windows instance\nUse Automation runbooks to upgrade an EC2 Windows instance\nMigrate an EC2 Windows instance to a Nitro-based instance type\nTroubleshoot an operating system upgrade on an EC2 Windows instance"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/os-inplaceupgrade.html",
        "content": "Before you perform an in-place upgrade, you must determine which network drivers the instance is running. PV network drivers enable you to access your instance using Remote Desktop. Instances use either AWS PV, Intel Network Adapter, or the Enhanced Networking drivers. For more information, see Paravirtual drivers for Windows instances.\nBefore you begin an in-place upgrade\nComplete the following tasks and note the following important details before you begin your in-place upgrade.\nRead the Microsoft documentation to understand the upgrade requirements, known issues, and restrictions. Also review the official instructions for upgrading.\nUpgrade Options for Windows Server 2012\nUpgrade Options for Windows Server 2012 R2\nUpgrade and conversion options for Windows Server 2016 and above\nWindows Server Upgrades\nWe recommend performing an operating system upgrade on instances with at least 2 vCPUs and 4GB of RAM. If needed, you can change the instance to a larger size of the same type (t2.small to t2.large, for example), perform the upgrade, and then resize it back to the original size. If you are required to retain the instance size, you can monitor the progress using the instance console screenshot. For more information, see Amazon EC2 instance type changes.\nVerify that the root volume on your Windows instance has enough free disk space. The Windows Setup process might not warn you of insufficient disk space. For information about how much disk space is required to upgrade a specific operating system, see the Microsoft documentation. If the volume does not have enough space, it can be expanded. For more information, see Amazon EBS Elastic Volumes in the Amazon EBS User Guide.\nDetermine your upgrade path. You must upgrade the operating system to the same architecture. For example, you must upgrade a 32-bit system to a 32-bit system. Windows Server 2008 R2 and later are 64-bit only.\nDisable antivirus and anti-spyware software and firewalls. These types of software can conflict with the upgrade process. Re-enable antivirus and anti-spyware software and firewalls after the upgrade completes.\nUpdate to the latest drivers as described in Migrate an EC2 Windows instance to a Nitro-based instance type.\nThe Upgrade Helper Service only supports instances running Citrix PV drivers. If the instance is running Red Hat drivers, you must manually upgrade those drivers first.\nUpgrade an instance in-place with AWS PV, Intel Network Adapter, or the Enhanced Networking drivers\nUse the following procedure to upgrade a Windows Server instance using the AWS PV, Intel Network Adapter, or the Enhanced Networking network drivers.\nTo perform the in-place upgrade\nCreate an AMI of the system you plan to upgrade for either backup or testing purposes. You can then perform the upgrade on the copy to simulate a test environment. If the upgrade completes, you can switch traffic to this instance with little downtime. If the upgrade fails, you can revert to the backup. For more information, see Create an Amazon EBS-backed AMI.\nEnsure that your Windows Server instance is using the latest network drivers.\nTo update your AWS PV driver, see Upgrade PV drivers on EC2 Windows instances.\nTo update your ENA driver, see Install the ENA driver on EC2 Windows instances.\nTo update your Intel drivers, see Enhanced networking with the Intel 82599 VF interface\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances. Locate the instance. Make a note of the instance ID and Availability Zone for the instance. You need this information later in this procedure.\nIf you are upgrading from Windows Server 2012 or 2012 R2 to Windows Server 2016 or later, perform the following on your instance before you proceed.\nUninstall the EC2Config service. For more information, see Windows Service administration for EC2Launch v2 and EC2Config agents.\nInstall EC2Launch v1 or the EC2Launch v2 agent. For more information, see Use the EC2Launch v1 agent to perform tasks during EC2 Windows instance launch and Use the EC2Launch v2 agent to perform tasks during EC2 Windows instance launch.\nInstall the AWS Systems Manager SSM Agent. For more information, see Working with SSM Agent in the AWS Systems Manager User Guide.\nCreate a new volume from a Windows Server installation media snapshot.\nIn the left navigation pane, under Elastic Block Store, choose Snapshots.\nFrom the filter bar, choose Public snapshots.\nIn the search bar, specify the following filters:\nChoose Owner Alias, then =, then amazon.\nChoose Description, and then start typing Windows. Select the Windows filter that matches the system architecture and language preference you're upgrading to. For example, choose Windows 2019 English Installation Media to upgrade to Windows Server 2019.\nSelect the checkbox next to the snapshot that matches the system architecture and language preference you're upgrading to, and then choose Actions, Create volume from snapshot.\nOn the Create volume page, choose the Availability Zone that matches your Windows instance, and then choose Create volume.\nIn the Successfully created volume vol-1234567890example banner at the top of the page, choose the ID of the volume that you just created.\nChoose Actions, Attach volume.\nOn the Attach volume page, for Instance, select the instance ID of your Windows instance, and then choose Attach volume.\nMake the new volume available for use by following the steps at Make an Amazon EBS volume available for use.\nImportant\nDo not initialize the disk because doing so will delete the existing data.\nIn Windows PowerShell, switch to the new volume drive. Begin the upgrade by opening the installation media volume you attached to the instance.\nIf you are upgrading to Windows Server 2016 or later, run the following:\n.\\setup.exe /auto upgrade /dynamicupdate disable\nNote\nRunning the setup.exe with the /dynamicupdate option set to disabled prevents Windows from installing updates during the Windows Server upgrade process, as installing updates during the upgrade can cause failures. You can install updates with Windows Update after the upgrade completes.\nIf you are upgrading to an earlier version of Windows Server, run the following:\nSources\\setup.exe\nFor Select the operating system you want to install, select the full installation SKU for your Windows Server instance, and choose Next.\nFor Which type of installation do you want?, choose Upgrade.\nComplete the wizard.\nWindows Server Setup copies and processes files. After several minutes, your Remote Desktop session closes. The time it takes to upgrade depends on the number of applications and server roles running on your Windows Server instance. The upgrade process could take as little as 40 minutes or several hours. The instance fails status check 1 of 2 during the upgrade process. When the upgrade completes, both status checks pass. You can check the system log for console output or use Amazon CloudWatch metrics for disk and CPU activity to determine whether the upgrade is progressing.\nNote\nIf upgrading to Windows Server 2019, after the upgrade is complete you can change the desktop background manually to remove the previous operating system name if desired.\nIf the instance has not passed both status checks after several hours, see Troubleshoot an operating system upgrade on an EC2 Windows instance.\nPost upgrade tasks\nLog in to the instance to initiate an upgrade for the .NET Framework and reboot the system when prompted.\nIf you haven't already done so in a prior step, install the EC2Launch v1 or EC2Launch v2 agent. For more information, see Use the EC2Launch v1 agent to perform tasks during EC2 Windows instance launch and Use the EC2Launch v2 agent to perform tasks during EC2 Windows instance launch.\nIf you upgraded to Windows Server 2012 R2, we recommend that you upgrade the PV drivers to AWS PV drivers. If you upgraded on a Nitro-based instance, we recommend that you install or upgrade the NVME and ENA drivers. For more information, see AWS NVMe drivers or Enable enhanced networking on Windows.\nRe-enable antivirus and anti-spyware software and firewalls."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/automated-upgrades.html",
        "content": "You can perform an automated upgrade of your Windows and SQL Server instances on AWS with AWS Systems Manager Automation runbooks.\nContents\nRelated services\nExecution options\nUpgrade Windows Server\nUpgrade SQL Server\nRelated services\nThe following AWS services are used in the automated upgrade process:\nAWS Systems Manager. AWS Systems Manager is a powerful, unified interface for centrally managing your AWS resources. For more information, see the AWS Systems Manager User Guide.\nAWS Systems Manager Agent (SSM Agent) is Amazon software that can be installed and configured on an Amazon EC2 instance, an on-premises server, or a virtual machine (VM). SSM Agent makes it possible for Systems Manager to update, manage, and configure these resources. The agent processes requests from the Systems Manager service in the AWS Cloud, and then runs them as specified in the request. For more information, see Working with SSM Agent in the AWS Systems Manager User Guide.\nAWS Systems Manager SSM runbooks. An SSM runbook defines the actions that Systems Manager performs on your managed instances. SSM runbooks use JavaScript Object Notation (JSON) or YAML, and they include steps and parameters that you specify. This topic uses two Systems Manager SSM runbooks for automation. For more information, see AWS Systems Manager Automation runbook reference in the AWS Systems Manager User Guide.\nExecution options\nWhen you select Automation on the Systems Manager console, select Execute. After you select an Automation document, you are then prompted to choose an automation execution option. You choose from the following options. In the steps for the paths provided later in this topic, we use the Simple execution option.\nSimple execution\nChoose this option if you want to update a single instance but do not want to go through each automation step to audit the results. This option is explained in further detail in the upgrade steps that follow.\nRate control\nChoose this option if you want to apply the upgrade to more than one instance. You define the following settings.\nParameter\nThis setting, which is also set in Multi-Account and Region settings, defines how your automation branches out.\nTargets\nSelect the target to which you want to apply the automation. This setting is also set in Multi-Account and Region settings.\nParameter Values\nUse the values defined in the automation document parameters.\nResource Group\nIn AWS, a resource is an entity you can work with. Examples include Amazon EC2 instances, AWS CloudFormation stacks, or Amazon S3 buckets. If you work with multiple resources, it might be useful to manage them as a group as opposed to moving from one AWS service to another for every task. In some cases, you may want to manage large numbers of related resources, such as EC2 instances that make up an application layer. In this case, you will likely need to perform bulk actions on these resources at one time.\nTags\nTags help you categorize your AWS resources in different ways, for example, by purpose, owner, or environment. This categorization is useful when you have many resources of the same type. You can quickly identify a specific resource using the assigned tags.\nRate Control\nRate Control is also set in Multi-Account and Region settings. When you set the rate control parameters, you define how many of your fleet to apply the automation to, either by target count or by percentage of the fleet.\nMulti-Account and Region\nIn addition to the parameters specified under Rate Control that are also used in the Multi-Account and Region settings, there are two additional settings:\nAccounts and organizational units (OUs)\nSpecify multiple accounts on which you want to run the automation.\nAWS Regions\nSpecify multiple AWS Regions where you want to run the automation.\nManual execution\nThis option is similar to Simple execution, but allows you to step through each automation step and audit the results.\nUpgrade Windows Server\nThe AWSEC2-CloneInstanceAndUpgradeWindows runbook creates an Amazon Machine Image (AMI) from a Windows Server instance in your account and upgrades this AMI to a supported version of your choice. This multi-step process can take up to two hours to complete.\nThere are two AMIs included in the automated upgrade process:\nCurrent running instance. The first AMI is the current running instance, which is not upgraded. This AMI is used to launch another instance to run the in-place upgrade. When the process is complete, this AMI is deleted from your account, unless you specifically request to keep the original instance. This setting is handled by the parameter KeepPreUpgradeImageBackUp (default value is false, which means the AMI is deleted by default).\nUpgraded AMI. This AMI is the outcome of the automation process.\nThe final result is one AMI, which is the upgraded instance of the AMI.\nWhen the upgrade is complete, you can test your application functionality by launching the new AMI in your Amazon VPC. After testing, and before you perform another upgrade, schedule application downtime before completely switching to the upgraded instance.\nPrerequisites\nIn order to automate your Windows Server upgrade with the AWS Systems Manager Automation document, you must perform the following tasks:\nCreate an IAM role with the specified IAM policies to allow Systems Manager to perform automation tasks on your Amazon EC2 instances and verify that you meet the prerequisites to use Systems Manager. For more information, see Creating a role to delegate permissions to an AWS service in the AWS Identity and Access Management User Guide.\nSelect the option for how you want the automation to be run. The options for execution are Simple execution, Rate control, Multi-account and Region, and Manual execution. For more information about these options, see Execution options.\nVerify that SSM Agent is installed on your instance. For more information see Installing and configuring SSM Agent on Amazon EC2 instances for Windows Server.\nWindows PowerShell 3.0 or later must be installed on your instance.\nFor instances that are joined to a Microsoft Active Directory domain, we recommend specifying a SubnetId that does not have connectivity to your domain controllers to help avoid hostname conflicts.\nThe instance subnet must have outbound connectivity to the internet, which provides access to AWS services such as Amazon S3 and access to download patches from Microsoft. This requirement is met if either the subnet is a public subnet and the instance has a public IP address, or if the subnet is a private subnet with a route that sends internet traffic to a public NAT device.\nThis Automation works with instances running Windows Server 2008 R2, Windows Server 2012 R2, Windows Server 2016, and Windows Server 2019.\nVerify that the instance has 20 GB of free disk space in the boot disk.\nIf the instance does not use a Windows license provided by AWS, then specify an Amazon EBS snapshot ID that includes Windows Server 2012 R2 installation media. To do this:\nVerify that the Amazon EC2 instance is running Windows Server 2012 or later.\nCreate a 6 GB Amazon EBS volume in the same Availability Zone where the instance is running. Attach the volume to the instance. Mount it, for example, as drive D.\nRight-click the ISO and mount it to an instance as, for example, drive E.\nCopy the content of the ISO from drive E:\\ to drive D:\\\nCreate an Amazon EBS snapshot of the 6 GB volume created in step 2 above.\nWindows Server upgrade limitations\nThis automation doesn't support upgrading Windows domain controllers, clusters, or Windows desktop operating systems. In addition, this automation doesn't support Amazon EC2 instances for Windows Server with the following roles installed:\nRemote Desktop Session Host (RDSH)\nRemote Desktop Connection Broker (RDCB)\nRemote Desktop Virtualization Host (RDVH)\nRemote Desktop Web Access (RDWA)\nSteps to perform an automated upgrade of Windows Server\nFollow these steps to upgrade your Windows Server instance using the AWSEC2-CloneInstanceAndUpgradeWindows automation runbook.\nOpen Systems Manager from the AWS Management Console.\nFrom the left navigation pane, under Change Management, choose Automation.\nChoose Execute automation.\nSearch for the automation document called AWSEC2-CloneInstanceAndUpgradeWindows.\nWhen the document name appears, select it. When you select it, the document details appear.\nChoose Execute automation to input the parameters for this document. Leave Simple execution selected at the top of the page.\nEnter the requested parameters based on the following guidance.\nInstanceID\nType: String\n(Required) The instance running Windows Server 2008 R2, 2012 R2, 2016, or 2019 with the SSM agent installed.\nInstanceProfile.\nType: String\n(Required) The IAM instance profile. This is the IAM role used to perform the Systems Manager automation against the Amazon EC2 instance and AWS AMIs. For more information, see Configure EC2 instance permissions in the AWS Systems Manager User Guide.\nTargetWindowsVersion\nType: String\n(Required) Select the target Windows version.\nSubnetId\nType: String\n(Required) This is the subnet for the upgrade process and where your source EC2 instance resides. Verify that the subnet has outbound connectivity to AWS services, including Amazon S3, and also to Microsoft (in order to download patches).\nKeepPreUpgradedBackUp\nType: String\n(Optional) If this parameter is set to true, the automation retains the image created from the instance. The default setting is false.\nRebootInstanceBeforeTakingImage\nType: String\n(Optional) The default is false (no reboot). If this parameter is set to true, Systems Manager reboots the instance before creating an AMI for the upgrade.\nAfter you have entered the parameters, choose Execute. When the automation begins, you can monitor the execution progress.\nWhen the automation completes, you will see the AMI ID. You can launch the AMI to verify that the Windows OS is upgraded.\nNote\nIt is not necessary for the automation to run all of the steps. The steps are conditional based on the behavior of the automation and instance. Systems Manager might skip some steps that are not required.\nAdditionally, some steps may time out. Systems Manager attempts to upgrade and install all of the latest patches. Sometimes, however, patches time out based on a definable timeout setting for the given step. When this happens, the Systems Manager automation continues to the next step to ensure that the internal OS is upgraded to the target Windows Server version.\nAfter the automation completes, you can launch an Amazon EC2 instance using the AMI ID to review your upgrade. For more information about how to create an Amazon EC2 instance from an AWS AMI, see How do I launch an EC2 instance from a custom AMI?\nUpgrade SQL Server\nThe AWSEC2-CloneInstanceAndUpgradeSQLServer script creates an AMI from an Amazon EC2 instance running SQL Server in your account, and then upgrades the AMI to a later version of SQL Server. This multi-step process can take up to two hours to complete.\nIn this workflow, the automation creates an AMI from the instance and then launches the new AMI in the subnet you provide. The automation then performs an in-place upgrade of SQL Server. After the upgrade is complete, the automation creates a new AMI before terminating the upgraded instance.\nThere are two AMIs included in the automated upgrade process:\nCurrent running instance. The first AMI is the current running instance, which is not upgraded. This AMI is used to launch another instance to run the in-place upgrade. When the process is complete, this AMI is deleted from your account, unless you specifically request to keep the original instance. This setting is handled by the parameter KeepPreUpgradeImageBackUp (default value is false, which means the AMI is deleted by default).\nUpgraded AMI. This AMI is the outcome of the automation process.\nThe final result is one AMI, which is the upgraded instance of the AMI.\nWhen the upgrade is complete, you can test your application functionality by launching the new AMI in your Amazon VPC. After testing, and before you perform another upgrade, schedule application downtime before completely switching to the upgraded instance.\nPrerequisites\nIn order to automate your SQL Server upgrade with the AWS Systems Manager Automation document, you must perform the following tasks:\nCreate an IAM role with the specified IAM policies to allow Systems Manager to perform automation tasks on your Amazon EC2 instances and verify that you meet the prerequisites to use Systems Manager. For more information, see Creating a role to delegate permissions to an AWS service in the AWS Identity and Access Management User Guide.\nSelect the option for how you want the automation to be run. The options for execution are Simple execution, Rate control, Multi-account and Region, and Manual execution. For more information about these options, see Execution options.\nThe Amazon EC2 instance must use Windows Server 2008 R2 or later and SQL Server 2008 or later.\nVerify that SSM Agent is installed on your instance. For more information, see Working with SSM Agent on Amazon EC2 instances for Windows Server.\nVerify that the instance has enough free disk space:\nIf you are upgrading from Windows Server 2008 R2 to 2012 R2, or from Windows Server 2012 R2 to a later operating system, verify that you have 20 GB of free disk space in the instance boot disk.\nIf you are upgrading from Windows Server 2008 R2 to 2016 or later, verify that the instance has 40 GB of free disk space in the instance boot disk.\nFor instances that use a Bring Your Own License (BYOL) SQL Server version, the following additional prerequisites apply:\nProvide an Amazon EBS snapshot ID that includes the target SQL Server installation media. To do this:\nVerify that the Amazon EC2 instance is running Windows Server 2008 R2 or later.\nCreate a 6 GB Amazon EBS volume in the same Availability Zone where the instance is running. Attach the volume to the instance. Mount it, for example, as drive D.\nRight-click the ISO and mount it to an instance as, for example, drive E.\nCopy the content of the ISO from drive E:\\ to drive D:\\\nCreate an Amazon EBS snapshot of the 6 GB volume created in step 2.\nSQL Server automated upgrade limitations\nThe following limitations apply when using the AWSEC2-CloneInstanceAndUpgradeSQLServer runbook to perform an automated upgrade:\nThe upgrade can be performed on only a SQL Server using Windows authentication.\nVerify that no security patch updates are pending on the instances. Open Control Panel, then choose Check for updates.\nSQL Server deployments in HA and mirroring mode are not supported.\nSteps to perform an automated upgrade of SQL Server\nFollow these steps to upgrade your SQL Server using the AWSEC2-CloneInstanceAndUpgradeSQLServer automation runbook.\nIf you haven't already, download the SQL Server 2016 .iso file and mount it to the source server.\nAfter the .iso file is mounted, copy all of the component files and place them on any volume of your choice.\nTake an Amazon EBS snapshot of the volume and copy the snapshot ID onto a clipboard for later use. For more information, see Create Amazon EBS snapshots in the Amazon EBS User Guide.\nAttach the instance profile to the Amazon EC2 source instance. This allows Systems Manager to communicate with the EC2 instance and run commands on it after it is added to the AWS Systems Manager service. For this example, we named the role SSM-EC2-Profile-Role with the AmazonSSMManagedInstanceCore policy attached to the role.\nIn the AWS Systems Manager console, in the left navigation pane, choose Managed Instances. Verify that your EC2 instance is in the list of managed instance. If you don't see your instance after a few minutes, see Where Are My Instances? in the AWS Systems Manager User Guide.\nIn the left navigation pane, under Change Management choose Automation.\nChoose Execute automation.\nSearch for the automation document called AWSEC2-CloneInstanceAndUpgradeSQLServer.\nChoose the AWSEC2-CloneInstanceAndUpgradeSQLServer SSM document, and then choose Next.\nEnsure that the Simple execution option is selected.\nEnter the requested parameters based on the following guidance.\nInstanceId\nType: String\n(Required) The instance running SQL Server 2008 R2 (or later).\nIamInstanceProfile\nType: String\n(Required) The IAM instance profile.\nSQLServerSnapshotId\nType: String\n(Required) The Snapshot ID for the target SQL Server installation media. This parameter is not required for SQL Server license-included instances.\nSubnetId\nType: String\n(Required) This is the subnet for the upgrade process and where your source EC2 instance resides. Verify that the subnet has outbound connectivity to AWS services, including Amazon S3, and also to Microsoft (in order to download patches).\nKeepPreUpgradedBackUp\nType: String\n(Optional) If this parameter is set to true, the automation retains the image created from the instance. The default setting is false.\nRebootInstanceBeforeTakingImage\nType: String\n(Optional) The default is false (no reboot). If this parameter is set to true, Systems Manager reboots the instance before creating an AMI for the upgrade.\nTargetSQLVersion\nType: String\n(Optional) The target SQL Server version. The default is 2016.\nAfter you have entered the parameters, choose Execute. When the automation begins, you can monitor the execution progress.\nWhen Execution status shows Success, expand Outputs to view the AMI information. You can use the AMI ID to launch your SQL Server instance for the VPC of your choice.\nOpen the Amazon EC2 console. In the left navigation pane, choose AMIs. You should see the new AMI.\nTo verify that the new SQL Server version has been successfully installed, choose the new AMI and choose Launch.\nChoose the type of instance that you want for the AMI, the VPC and subnet that you want to deploy to, and the storage that you want to use. Because you're launching the new instance from an AMI, the volumes are presented to you as an option to include within the new EC2 instance you are launching. You can remove any of these volumes, or you can add volumes.\nAdd a tag to help you identify your instance.\nAdd the security group or groups to the instance.\nChoose Launch Instance.\nChoose the tag name for the instance and select Connect under the Actions dropdown.\nVerify that the new SQL Server version is the database engine on the new instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/migrating-latest-types.html",
        "content": "The AWS Windows AMIs are configured with the default settings used by the Microsoft installation media, with some customizations. The customizations include drivers and configurations that support Nitro-based instances, such as M5 and C5.\nWhen migrating from Xen-based instances to Nitro-based instances, including bare metal instances, we recommend that you follow the steps in this topic in the following cases:\nIf you are launching instances from custom Windows AMIs\nIf you are launching instances from Windows AMIs provided by Amazon that were created before August 2018\nAlternatively, you can use the AWSSupport-UpgradeWindowsAWSDrivers automation document to automate the procedures described in Part 1, Part 2, and Part 3. If you choose to use the automated procedure, see (Alternative) Upgrade the AWS PV, ENA, and NVMe drivers using AWS Systems Manager, and then continue with Part 4 and Part 5.\nFor more information, see Amazon EC2 Update \u2014 Additional Instance Types, Nitro System, and CPU Options.\nNote\nThe following migration procedures can be performed on Windows Server version 2016 and later. Earlier operating system versions that have reached end of life are not tested, and might not be compatible with the latest instance types.\nTo migrate Linux instances, see Amazon EC2 instance type changes.\nContents\nPart 1: Install and upgrade AWS PV drivers\nPart 2: Install and upgrade ENA\nPart 3: Upgrade AWS NVMe drivers\nPart 4: Update EC2Config and EC2Launch\nPart 5: Install the serial port driver for bare metal instances\nPart 6: Update power management settings\nPart 7: Update Intel chipset drivers for new instance types\n(Alternative) Upgrade the AWS PV, ENA, and NVMe drivers using AWS Systems Manager\nBefore you begin\nThis procedure assumes that you have a Xen-based instance, such as an M4 or C4, and you are migrating to a Nitro-based instance.\nYou must use PowerShell version 3.0 or later to successfully perform the upgrade.\nNote\nWhen migrating, the static IP or custom DNS network settings on the existing network interface card may be lost as the instance will default to a new Enhanced Networking Adapter device.\nBefore following the steps in this procedure, we recommend that you create a backup of the instance. From the EC2 console, choose the instance that requires the migration, open the context (right-click) menu, and choose Instance State, Stop.\nWarning\nWhen you stop an instance, the data on any instance store volumes is erased. To preserve data on instance store volumes, ensure that you back up the data to persistent storage.\nOpen the context (right-click) menu for the instance in the EC2 console, choose Image, and then choose Create Image.\nNote\nParts 4 and 5 of these instructions can be completed after you migrate or change the instance type. However, we recommend that you complete them before you migrate, especially if you are migrating to a bare metal instance type.\nPart 1: Install and upgrade AWS PV drivers\nThough AWS PV drivers are not used in the Nitro system, you should still upgrade them if you are on previous versions of either Citrix PV or AWS PV. The latest AWS PV drivers resolve bugs in previous versions of the drivers that may appear while you are on a Nitro system, or if you need to migrate back to a Xen-based instance. As a best practice, we recommend always updating to the latest drivers for Windows instances on AWS.\nUse the following procedure to perform an in-place upgrade of AWS PV drivers, or to upgrade from Citrix PV drivers to AWS PV drivers on Windows Server 2008 R2, Windows Server 2012, Windows Server 2012 R2, Windows Server 2016, or Windows Server 2019. For more information, see Upgrade PV drivers on EC2 Windows instances.\nTo upgrade a Domain Controller, see Upgrade a domain controller (AWS PV upgrade).\nTo perform an upgrade of or to AWS PV drivers\nConnect to the instance using Remote Desktop and prepare the instance for upgrade. Take all non-system disks offline before you perform the upgrade. If you are performing an in-place update of AWS PV drivers, this step is not required. Set non-essential services to Manual start-up in the Services console.\nDownload the latest driver package to the instance.\nExtract the contents of the folder and run AWSPVDriverSetup.msi.\nAfter running the MSI, the instance automatically reboots and upgrades the driver. The instance may not be available for up to 15 minutes.\nAfter the upgrade is complete and the instance passes both health checks in the Amazon EC2 console, connect to the instance using Remote Desktop and verify that the new driver was installed. In Device Manager, under Storage Controllers, locate AWS PV Storage Host Adapter. Verify that the driver version is the same as the latest version listed in the Driver Version History table. For more information, see AWS PV driver package history.\nPart 2: Install and upgrade ENA\nUpgrade to the latest Elastic Network Adapter driver to ensure that all network features are supported. If you launched your instance and it does not have enhanced networking already enabled, you must download and install the required network adapter driver on your instance. Then, set the enaSupport instance attribute to activate enhanced networking. You can only enable this attribute on supported instance types and only if the ENA driver is installed. For more information, see Enable enhanced networking with ENA on your EC2 instances.\nDownload the latest driver to the instance. If you need a previous version of the driver, see ENA Windows driver version history.\nExtract the zip archive.\nInstall the driver by running the install.ps1 PowerShell script from the extracted folder.\nNote\nTo avoid installation errors, run the install.ps1 script as an administrator.\nCheck if your AMI has enaSupport activated. If not, continue by following the documentation at Enable enhanced networking with ENA on your EC2 instances.\nPart 3: Upgrade AWS NVMe drivers\nAWS NVMe drivers are used to interact with Amazon EBS and SSD instance store volumes that are exposed as NVMe block devices in the Nitro system for better performance.\nImportant\nThe following instructions are modified specifically for when you install or upgrade AWS NVMe on a Xen-based instance with the intention to migrate the instance to a Nitro-based instance.\nDownload the latest driver package to the instance.\nIf you need a previous version of the driver, see NVMe Windows driver releases for supported versions.\nExtract the zip archive.\nInstall the driver as described in Readme.txt.\nOpen a PowerShell session and run the following command:\nPS C:\\> start rundll32.exe sppnp.dll,Sysprep_Generalize_Pnp -wait\nNote\nTo apply the command, you must run the PowerShell session as an administrator. PowerShell (x86) versions will result in an error.\nThis command only runs sysprep on the device drivers. It does not run the full sysprep preparation.\nFor Windows Server 2008 R2 and Windows Server 2012, shut down the instance, change the instance type and start the instance, then proceed to Part 4. If you start the instance again on a Xen-based instance type before migrating to a Nitro-based instance type, it will not boot. For other supported Windows AMIs, you can change the instance type anytime after the device sysprep.\nPart 4: Update EC2Config and EC2Launch\nFor Windows instances, the latest EC2Config and EC2Launch utilities provide additional functionality and information when running on the Nitro system, including on EC2 Bare Metal. By default, the EC2Config service is included in AMIs prior to Windows Server 2016. EC2Launch replaces EC2Config on Windows Server 2016 and later AMIs.\nWhen the EC2Config and EC2Launch services are updated, new Windows AMIs from AWS include the latest version of the service. However, you must update your own Windows AMIs and instances with the latest version of EC2Config and EC2Launch.\nTo install or update EC2Config\nDownload and unzip the EC2Config Installer.\nRun EC2Install.exe. For a complete list of options, run EC2Install with the /? option. By default, setup displays prompts. To run the command with no prompts, use the /quiet option.\nFor more information, see Install the latest version of EC2Config.\nTo install or update EC2Launch\nIf you have already installed and configured EC2Launch on an instance, make a backup of the EC2Launch configuration file. The installation process does not preserve changes in this file. By default, the file is located in the C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Config directory.\nDownload EC2-Windows-Launch.zip to a directory on the instance.\nDownload install.ps1 to the same directory where you downloaded EC2-Windows-Launch.zip.\nRun install.ps1.\nNote\nTo avoid installation errors, run the install.ps1 script as an administrator.\nIf you made a backup of the EC2Launch configuration file, copy it to the C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Config directory.\nFor more information, see Use the EC2Launch v1 agent to perform tasks during EC2 Windows instance launch.\nPart 5: Install the serial port driver for bare metal instances\nThe i3.metal instance type uses a PCI-based serial device rather than an I/O port-based serial device. The latest Windows AMIs automatically use the PCI-based serial device and have the serial port driver installed. If you are not using an instance launched from an Amazon-provided Windows AMI dated 2018.04.11 or later, you must install the Serial Port Driver to enable the serial device for EC2 features such as Password Generation and Console Output. The latest EC2Config and EC2Launch utilities also support i3.metal and provide additional functionality. Follow the steps in Part 4, if you have not yet done so.\nTo install the serial port driver\nDownload the serial driver package to the instance.\nExtract the contents of the folder, open the context (right-click) menu for aws_ser.INF, and choose install.\nChoose Okay.\nPart 6: Update power management settings\nThe following update to power management settings sets displays to never turn off, which allows for graceful OS shutdowns on the Nitro system. All Windows AMIs provided by Amazon as of 2018.11.28 already have this default configuration.\nOpen a command prompt or PowerShell session.\nRun the following commands:\npowercfg /setacvalueindex 381b4222-f694-41f0-9685-ff5bb260df2e 7516b95f-f776-4464-8c53-06167f40cc99 3c0bc021-c8a8-4e07-a973-6b14cbcb2b7e 0\npowercfg /setacvalueindex 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c 7516b95f-f776-4464-8c53-06167f40cc99 3c0bc021-c8a8-4e07-a973-6b14cbcb2b7e 0\npowercfg /setacvalueindex a1841308-3541-4fab-bc81-f71556f20b4a 7516b95f-f776-4464-8c53-06167f40cc99 3c0bc021-c8a8-4e07-a973-6b14cbcb2b7e 0\nPart 7: Update Intel chipset drivers for new instance types\nThe u-6tb1.metal, u-9tb1.metal, and u-12tb1.metal instance types use hardware that requires chipset drivers that were not previously installed on Windows AMIs. If you are not using an instance launched from an Amazon-provided Windows AMI dated 2018.11.19 or later, you must install the drivers using the Intel Chipset INF Utility.\nTo install the chipset drivers\nChipset INF Utility to the instance.\nExtract the files.\nRun SetupChipset.exe.\nAccept the Intel software license agreement and install the chipset drivers.\nReboot the instance.\n(Alternative) Upgrade the AWS PV, ENA, and NVMe drivers using AWS Systems Manager\nThe AWSSupport-UpgradeWindowsAWSDrivers automation document automates the steps described in Part 1, Part 2, and Part 3. This method can also repair an instance where the driver upgrades have failed.\nThe AWSSupport-UpgradeWindowsAWSDrivers automation document upgrades or repairs storage and network AWS drivers on the specified EC2 instance. The document attempts to install the latest versions of AWS drivers online by calling the AWS Systems Manager Agent (SSM Agent). If SSM Agent is not contactable, the document can perform an offline installation of the AWS drivers if explicitly requested.\nNote\nThis procedure will fail on a domain controller. To update drivers on a domain controller, see Upgrade a domain controller (AWS PV upgrade).\nTo automatically upgrade the AWS PV, ENA, and NVMe drivers using AWS Systems Manager\nOpen the Systems Manager console at https://console.aws.amazon.com/systems-manager.\nChoose Automation, Execute Automation.\nSearch for and then select the AWSSupport-UpgradeWindowsAWSDrivers automation document, and then choose Execute automation.\nIn the Input Parameters section, configure the following options:\nInstance ID\nEnter the unique ID of the instance to upgrade.\nAllowOffline\n(Optional) Choose one of the following options:\nTrue \u2014 Choose this option to perform an offline installation. The instance is stopped and restarted during the upgrade process.\nWarning\nWhen you stop an instance, the data on any instance store volumes is erased. To preserve data on instance store volumes, ensure that you back up the data to persistent storage.\nFalse \u2014 (Default) To perform an online installation, leave this option selected. The instance is restarted during the upgrade process.\nImportant\nOnline and offline upgrades create an AMI before attempting the upgrade operations. The AMI persists after the automation completes. Secure your access to the AMI, or delete it if it is no longer needed.\nSubnetId\n(Optional) Enter one of the following values:\nSelectedInstanceSubnet \u2014 (Default) The upgrade process launches the helper instance into the same subnet as the instance that is to be upgraded. The subnet must allow communication to the Systems Manager endpoints (ssm.*).\nCreateNewVPC \u2014 The upgrade process launches the helper instance into a new VPC. Use this option if you're not sure whether the target instance's subnet allows communication to the ssm.* endpoints. Your user must have permission to create a VPC.\nA specific subnet ID \u2014 Specify the ID of a specific subnet into which to launch the helper instance. The subnet must be in the same Availability Zone as the instance that is to be upgraded, and it must allow communication with the ssm.* endpoints.\nChoose Execute.\nAllow the upgrade to complete. It could take up to 10 minutes to complete an online upgrade, and up to 25 minutes to complete an offline upgrade."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/os-upgrade-trbl.html",
        "content": "AWS provides upgrade support for issues or problems with the Upgrade Helper Service, an AWS utility that helps you perform in-place upgrades involving Citrix PV drivers.\nAfter the upgrade, the instance might temporarily experience higher than average CPU utilization while the .NET Runtime Optimization service optimizes the .NET framework. This is expected behavior.\nIf the instance has not passed both status checks after several hours, check the following.\nIf you upgraded to Windows Server 2008 and both status checks fail after several hours, the upgrade may have failed and be presenting a prompt to Click OK to confirm rolling back. Because the console is not accessible at this state, there is no way to click the button. To get around this, perform a reboot via the Amazon EC2 console or API. The reboot takes ten minutes or more to initiate. The instance might become available after 25 minutes.\nRemove applications or server roles from the server and try again.\nIf the instance does not pass both status checks after removing applications or server roles from the server, do the following.\nStop the instance and attach the root volume to another instance. For more information, see the description of how to stop and attach the root volume to another instance in \"Waiting for the metadata service\".\nAnalyze Windows Setup log files and event logs for failures.\nFor other issues or problems with an operating system upgrade or migration, we recommend reviewing the articles listed in Before you begin an in-place upgrade."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/tutorial-connect-ec2-instance-to-rds-database.html",
        "content": "Tutorial objective\nThe objective of this tutorial is to learn how to configure a secure connection between an Amazon EC2 instance and an Amazon RDS database by using the AWS Management Console.\nThere are different options for configuring the connection. In this tutorial, we explore the following three options:\nOption 1: Automatically connect an instance to an RDS database using the EC2 console\nUse the automatic connection feature in the EC2 console to automatically configure the connection between your EC2 instance and your RDS database to allow traffic between the EC2 instance and the RDS database.\nOption 2: Automatically connect an instance to an RDS database using the RDS console\nUse the automatic connection feature in the RDS console to automatically configure the connection between your EC2 instance and your RDS database to allow traffic between the EC2 instance and the RDS database.\nOption 3: Manually connect an instance to an RDS database by creating security groups\nConfigure the connection between your EC2 instance to your RDS database by manually configuring and assigning the security groups to reproduce the configuration that is automatically created by the automatic connection feature in Option 1 and Option 2.\nContext\nAs context for why you'd want to configure a connection between your EC2 instance and an RDS database, let's consider the following scenario: Your website presents a form to your users to fill in. You need to capture the form data in a database. You can host your website on an EC2 instance that's been configured as a web server, and you can capture the form data in an RDS database. The EC2 instance and the RDS database need to be connected to each other so that the form data can go from the EC2 instance to the RDS database. This tutorial explains how to configure that connection. Note that this is just one example of a use case for connecting an EC2 instance and an RDS database.\nArchitecture\nThe following diagram shows the resources that are created and the architectural configuration that results from completing all the steps in this tutorial.\nThe diagram illustrates the following resources that you'll create:\nYou'll create an EC2 instance and an RDS database in the same AWS Region, VPC, and Availability Zone.\nYou'll create the EC2 instance in a public subnet.\nYou'll create the RDS database in a private subnet.\nWhen you use the RDS console to create the RDS database and automatically connect the EC2 instance, the VPC, DB subnet group, and public access settings for the database are automatically selected. The RDS database is automatically created in a private subnet within the same VPC as the EC2 instance.\nInternet users can connect to the EC2 instance by using SSH or HTTP/HTTPS via an Internet gateway.\nInternet users cannot connect directly to the RDS database; only the EC2 instance is connected to the RDS database.\nWhen you use the automatic connection feature to allow traffic between the EC2 instance and the RDS database, the following security groups are automatically created and added:\nSecurity group ec2-rds-x is created and added to the EC2 instance. It has one outbound rule that references the rds-ec2-x security group as its destination. This allows traffic from the EC2 instance to reach the RDS database with the rds-ec2-x security group.\nSecurity group rds-ec2-x is created and added to the RDS database. It has one inbound rule that references the ec2-rds-x security group as its source. This allows traffic from the EC2 instance with the ec2-rds-x security group to reach the RDS database.\nBy using separate security groups (one for the EC2 instance, and one for the RDS database), you have better control over the security of the instance and the database. If you were to use the same security group on both the instance and the database, and then modified the security group to suit, say, only the database, the modification would affect both the instance and the database. In other words, if you were to use one security group, you could unintentionally modify the security of a resource (either the instance or the database) because you'd forgotten that the security group was attached to it.\nThe security groups that are automatically created also respect least privilege as they only allow the mutual connection for this workload on the database port by creating a workload-specific security group pair.\nConsiderations\nConsider the following when you complete the tasks in this tutorial:\nTwo consoles \u2013 You will use the following two consoles for this tutorial:\nAmazon EC2 console \u2013 You will use the EC2 console to launch instances, to automatically connect an EC2 instance to an RDS database, and for the manual option to configure the connection by creating the security groups.\nAmazon RDS console \u2013 You will use the RDS console to create an RDS database and to automatically connect an EC2 instance to an RDS database.\nOne VPC \u2013 To use the automatic connection feature, your EC2 instance and your RDS database must be in the same VPC.\nIf you were to manually configure the connection between your EC2 instance and your RDS database, you could launch your EC2 instance in one VPC and your RDS database in another VPC; however, you\u2019d need to set up additional routing and VPC configuration. This scenario is not covered in this tutorial.\nOne AWS Region \u2013 The EC2 instance and RDS database must be located in the same Region.\nTwo security groups \u2013 The connectivity between the EC2 instance and the RDS database is configured by two security groups\u2014a security group for your EC2 instance, and a security group for your RDS database.\nWhen you use the automatic connection feature in the EC2 console or RDS console to configure the connectivity (Option 1 and Option 2 of this tutorial), the security groups are automatically created and assigned to the EC2 instance and RDS database.\nIf you do not use the automatic connection feature, you'll need to manually create and assign the security groups. You do this in Option 3 of this tutorial.\nTime to complete the tutorial\n30 minutes\nYou can complete the entire tutorial in one sitting, or you can complete it one task at a time.\nCosts\nBy completing this tutorial, you might incur costs for the AWS resources that you create.\nYou can use Amazon EC2 under the free tier provided your AWS account is less than 12 months old and you configure your resources according to the free tier requirements.\nIf your EC2 instance and your RDS database are in different Availability Zones, you will incur data transfer fees. To avoid incurring these fees, the EC2 instance and the RDS database must be in the same Availability Zone. For information about data transfer fees, see Data Transfer on the Amazon EC2 On-Demand Pricing page.\nTo prevent incurring costs after you've completed the tutorial, make sure to delete the resources if they are no longer needed. For the steps to delete the resources, see Task 4 (Optional): Clean up."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/tutorial-ec2-rds-option1.html",
        "content": "The objective of Option 1 is to explore the automatic connection feature in the EC2 console that automatically configures the connection between your EC2 instance and RDS database to allow traffic from the EC2 instance to the RDS database. In Option 3, you'll learn how to manually configure the connection.\nTasks\nBefore you begin\nTask 1 (Optional): Create an RDS database\nTask 2 (Optional): Launch an EC2 instance\nTask 3: Automatically connect your EC2 instance to your RDS database\nTask 4: Verify the connection configuration\nTask 5 (Optional): Clean up\nBefore you begin\nYou'll need the following to complete this tutorial:\nAn RDS database that is in the same VPC as the EC2 instance. You can either use an existing RDS database or follow the steps in Task 1 to create a new RDS database.\nAn EC2 instance that is in the same VPC as the RDS database. You can either use an existing EC2 instance or follow the steps in Task 2 to create a new EC2 instance.\nPermissions to call the following operations:\nec2:AssociateRouteTable\nec2:AuthorizeSecurityGroupEgress\nec2:CreateRouteTable\nec2:CreateSecurityGroup\nec2:CreateSubnet\nec2:DescribeInstances\nec2:DescribeNetworkInterfaces\nec2:DescribeRouteTables\nec2:DescribeSecurityGroups\nec2:DescribeSubnets\nec2:ModifyNetworkInterfaceAttribute\nec2:RevokeSecurityGroupEgress\nTask 1 (Optional): Create an RDS database\nNote\nCreating a Amazon RDS database is not the focus of this tutorial. If you already have an RDS database and would like to use it in this tutorial, you can skip this task.\nIf you use an existing RDS database, make sure that it is in the same VPC as your EC2 instance so that you can use the automatic connection feature.\nThe objective of this task is to create an RDS database so that you can complete Task 3 where you configure the connection between your EC2 instance and your RDS database. The steps in this task configure the RDS database as follows:\nEngine type: MySQL\nTemplate: Free tier\nDB instance identifier: tutorial-database-1\nDB instance class: db.t3.micro\nImportant\nIn a production environment, you should configure your database to meet your specific needs.\nTo create a MySQL RDS database\nOpen the Amazon RDS console at https://console.aws.amazon.com/rds/.\nFrom the Region selector (at top right), choose an AWS Region. The database and the EC2 instance must be in the same Region in order to use the automatic connection feature in the EC2 console.\nOn the dashboard, choose Create database.\nUnder Choose a database creation method, check that Standard create is selected. If you choose Easy create, the VPC selector is not available. You must ensure that your database is in the same VPC as your EC2 instance in order to use the automatic connection feature in the EC2 console.\nUnder Engine options, for Engine type, choose MySQL.\nUnder Templates, choose a sample template to meet your needs. For this tutorial, choose Free tier to create an RDS database at no cost. However, note that the free tier is only available if your account is less than 12 months old. Other restrictions apply. You can read more by choosing the Info link in the Free tier box.\nUnder Settings, do the following:\nFor DB instance identifier, enter a name for the database. For this tutorial, enter tutorial-database-1.\nFor Master username, leave the default name, which is admin.\nFor Master password, enter a password that you can remember for this tutorial, and then, for Confirm password, enter the password again.\nUnder Instance configuration, for DB instance class, leave the default, which is db.t3.micro.If your account is less than 12 months, you can use this database class for free. Other restrictions apply. For more information, see AWS Free Tier.\nUnder Connectivity, for Compute resource, choose Don't connect to an EC2 compute resource because you'll connect the EC2 instance and the RDS database later in Task 3.\n(Later, in Option 2 of this tutorial, you'll try out the automatic connection feature in the RDS console by choosing Connect to an EC2 compute resource.)\nFor Virtual private cloud (VPC), choose a VPC. The VPC must have a DB subnet group. To use the automatic connection feature, your EC2 instance and RDS database must be in the same VPC.\nKeep all the default values for the other fields on this page.\nChoose Create database.\nOn the Databases screen, the Status of the new database is Creating until the database is ready to use. When the status changes to Available, you can connect to the database. Depending on the database class and the amount of storage, it can take up to 20 minutes before the new database is available.\nView an animation: Create an RDS database\nTask 2 (Optional): Launch an EC2 instance\nNote\nLaunching an instance is not the focus of this tutorial. If you already have an Amazon EC2 instance and would like to use it in this tutorial, you can skip this task.\nIf you use an existing EC2 instance, make sure that it is in the same VPC as your RDS database so that you can use the automatic connection feature.\nThe objective of this task is to launch an EC2 instance so that you can complete Task 3 where you configure the connection between your EC2 instance and your Amazon RDS database. The steps in this task configure the EC2 instance as follows:\nInstance name: tutorial-instance-1\nAMI: Amazon Linux 2\nInstance type: t2.micro\nAuto-assign public IP: Enabled\nSecurity group with the following three rules:\nAllow SSH from your IP address\nAllow HTTPS traffic from anywhere\nAllow HTTP traffic from anywhere\nImportant\nIn a production environment, you should configure your instance to meet your specific needs.\nTo launch an EC2 instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nFrom the Region selector (at top right), choose an AWS Region. The instance and the RDS database must be in the same Region in order to use the automatic connection feature in the EC2 console.\nOn the EC2 Dashboard, choose Launch instance.\nUnder Name and tags, for Name, enter a name to identify your instance. For this tutorial, name the instance tutorial-instance-1. While the instance name is not mandatory, when you select your instance in the EC2 console, the name will help you easily identify it.\nUnder Application and OS Images, choose an AMI that meets your web server needs. This tutorial uses Amazon Linux 2.\nUnder Instance type, for Instance type, select an instance type that meets your web server needs. This tutorial uses t2.micro.\nNote\nYou can use Amazon EC2 under the Free tier provided your AWS account is less than 12 months old and you choose a t2.micro instance type, or t3.micro in Regions where t2.micro is not available. Be aware that when you launch a t3.micro instance, it defaults to Unlimited mode, which might incur additional charges based on CPU usage.\nUnder Key pair (login), for Key pair name, choose your key pair.\nUnder Network settings, do the following:\nFor Network and Subnet, if you haven\u2019t made changes to your default VPC or subnets, you can keep the default settings.\nIf you have made changes to your default VPC or subnets, check the following:\nThe instance must be in the same VPC as the RDS database to use the automatic connection feature. By default you have only one VPC.\nThe VPC that you\u2019re launching your instance into must have an internet gateway attached to it so that you can access your web server from the internet. Your default VPC is automatically set up with an internet gateway.\nTo ensure that your instance receives a public IP address, for Auto-assign public IP, check that Enable is selected. If Disable is selected, choose Edit (to the right of Network Settings), and then, for Auto-assign public IP, choose Enable.\nTo connect to your instance by using SSH, you need a security group rule that authorizes SSH (Linux) or RDP (Windows) traffic from your computer\u2019s public IPv4 address. By default, when you launch an instance, a new security group is created with a rule that allows inbound SSH traffic from anywhere.\nTo make sure that only your IP address can connect to your instance, under Firewall (security groups), from the drop-down list next to the Allow SSH traffic from checkbox, choose My IP.\nTo allow traffic from the internet to your instance, select the following checkboxes:\nAllow HTTPs traffic from the internet\nAllow HTTP traffic from the internet\nIn the Summary panel, review your instance configuration and then choose Launch instance.\nKeep the confirmation page open. You'll need it for the next task when you automatically connect your instance to your database.\nIf the instance fails to launch or the state immediately goes to terminated instead of running, see Troubleshoot Amazon EC2 instance launch issues.\nFor more information about launching an instance, see Launch an EC2 instance using the launch instance wizard in the console.\nView an animation: Launch an EC2 instance\nTask 3: Automatically connect your EC2 instance to your RDS database\nThe objective of this task is to use the automatic connection feature in the EC2 console to automatically configure the connection between your EC2 instance and your RDS database.\nTo automatically connect an EC2 instance to an RDS database using the EC2 console\nOn the instance launch confirmation page (it should be open from the previous task), choose Connect an RDS database.\nIf you closed the confirmation page, follow these steps:\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the EC2 instance that you just created, and then choose Actions, Networking, Connect RDS database.\nIf Connect RDS database is not available, check that the EC2 instance is in the Running state.\nFor Database role, choose Instance. Instance in this case refers to the database instance.\nFor RDS database, choose the RDS database that you created in Task 1.\nNote\nThe EC2 instance and the RDS database must be in the same VPC in order to connect to each other.\nChoose Connect.\nView an animation: Automatically connect a newly-launched EC2 instance to an RDS database\nTask 4: Verify the connection configuration\nThe objective of this task is to verify that the two security groups were created and assigned to the instance and database.\nWhen you use the automatic connection feature in the console to configure the connectivity, the security groups are automatically created and assigned to the instance and database, as follows:\nSecurity group rds-ec2-x is created and added to the RDS database. It has one inbound rule that references the ec2-rds-x security group as its source. This allows traffic from the EC2 instance with the ec2-rds-x security group to reach the RDS database.\nSecurity group ec2-rds-x is created and added to the EC2 instance. It has one outbound rule that references the rds-ec2-x security group as its destination. This allows traffic from the EC2 instance to reach the RDS database with the rds-ec2-x security group.\nTo verify the connection configuration using the console\nOpen the Amazon RDS console at https://console.aws.amazon.com/rds/.\nIn the navigation page, choose Databases.\nChoose the RDS database that you created for this tutorial.\nOn the Connectivity & security tab, under Security, VPC security groups, verify that a security group called rds-ec2-x is displayed.\nChoose the rds-ec2-x security group. The Security Groups screen in the EC2 console opens.\nChoose the rds-ec2-x security group to open it.\nChoose the Inbound rules tab.\nVerify that the following security group rule exists, as follows:\nType: MYSQL/Aurora\nPort range: 3306\nSource: sg-0987654321example / ec2-rds-x \u2013 This is the security group that is assigned to the EC2 instance that you verified in the preceding steps.\nDescription: Rule to allow connections from EC2 instances with sg-1234567890example attached\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nChoose the EC2 instance that you selected to connect to the RDS database in the previous task, and choose the Security tab.\nUnder Security details, Security groups, verify that a security group called ec2-rds-x is in the list. x is a number.\nChoose the ec2-rds-x security group to open it.\nChoose the Outbound rules tab.\nVerify that the following security group rule exists, as follows:\nType: MYSQL/Aurora\nPort range: 3306\nDestination: sg-1234567890example / rds-ec2-x\nDescription: Rule to allow connections to database-tutorial from any instances this security group is attached to\nBy verifying that these security groups and security group rules exist and that they are assigned to the RDS database and EC2 instance as described in this procedure, you can verify that the connection was automatically configured by using the automatic connection feature.\nView an animation: Verify the connection configuration\nYou have completed Option 1 of this tutorial. You can now either complete Option 2, which teaches you how to use the RDS console to automatically connect an EC2 instance to an RDS database, or you can complete Option 3, which teaches you how to manually configure the security groups that were automatically created in Option 1.\nTask 5 (Optional): Clean up\nNow that you have completed the tutorial, it is good practice to clean up (delete) any resources you no longer want to use. Cleaning up AWS resources prevents your account from incurring any further charges.\nIf you launched an EC2 instance specifically for this tutorial, you can terminate it to stop incurring any charges associated with it.\nTo terminate an instance using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance that you created for this tutorial, and choose Instance state, Terminate instance.\nChoose Terminate when prompted for confirmation.\nIf you created an RDS database specifically for this tutorial, you can delete it to stop incurring any charges associated with it.\nTo delete an RDS database using the console\nOpen the Amazon RDS console at https://console.aws.amazon.com/rds/.\nIn the navigation pane, choose Databases.\nSelect the RDS database that you created for this tutorial, and choose Actions, Delete.\nEnter delete me in the box, and then choose Delete."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/tutorial-ec2-rds-option2.html",
        "content": "The objective of Option 2 is to explore the automatic connect feature in the RDS console that automatically configures the connection between your EC2 instance and RDS database to allow traffic from the EC2 instance to the RDS database. In Option 3, you'll learn how to manually configure the connection.\nTasks\nBefore you begin\nTask 1 (Optional): Launch an EC2 instance\nTask 2: Create an RDS database and automatically connect it to your EC2 instance\nTask 3: Verify the connection configuration\nTask 4 (Optional): Clean up\nBefore you begin\nYou'll need the following to complete this tutorial:\nAn EC2 instance that is in the same VPC as the RDS database. You can either use an existing EC2 instance or follow the steps in Task 1 to create a new instance.\nPermissions to call the following operations:\nec2:AssociateRouteTable\nec2:AuthorizeSecurityGroupEgress\nec2:CreateRouteTable\nec2:CreateSecurityGroup\nec2:CreateSubnet\nec2:DescribeInstances\nec2:DescribeNetworkInterfaces\nec2:DescribeRouteTables\nec2:DescribeSecurityGroups\nec2:DescribeSubnets\nec2:ModifyNetworkInterfaceAttribute\nec2:RevokeSecurityGroupEgress\nTask 1 (Optional): Launch an EC2 instance\nNote\nLaunching an instance is not the focus of this tutorial. If you already have an Amazon EC2 instance and would like to use it in this tutorial, you can skip this task.\nThe objective of this task is to launch an EC2 instance so that you can complete Task 2 where you configure the connection between your EC2 instance and your Amazon RDS database. The steps in this task configure the EC2 instance as follows:\nInstance name: tutorial-instance-2\nAMI: Amazon Linux 2\nInstance type: t2.micro\nAuto-assign public IP: Enabled\nSecurity group with the following three rules:\nAllow SSH from your IP address\nAllow HTTPS traffic from anywhere\nAllow HTTP traffic from anywhere\nImportant\nIn a production environment, you should configure your instance to meet your specific needs.\nTo launch an EC2 instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nOn the EC2 Dashboard, choose Launch instance.\nUnder Name and tags, for Name, enter a name to identify your instance. For this tutorial, name the instance tutorial-instance-2. While the instance name is not mandatory, when you select your instance in the RDS console, the name will help you easily identify it.\nUnder Application and OS Images, choose an AMI that meets your web server needs. This tutorial uses Amazon Linux.\nUnder Instance type, for Instance type, select an instance type that meets your web server needs. This tutorial uses t2.micro.\nNote\nYou can use Amazon EC2 under the Free tier provided your AWS account is less than 12 months old and you choose a t2.micro instance type, or t3.micro in Regions where t2.micro is not available. Be aware that when you launch a t3.micro instance, it defaults to Unlimited mode, which might incur additional charges based on CPU usage.\nUnder Key pair (login), for Key pair name, choose your key pair.\nUnder Network settings, do the following:\nFor Network and Subnet, if you haven\u2019t made changes to your default VPC or subnets, you can keep the default settings.\nIf you have made changes to your default VPC or subnets, check the following:\nThe instance must be in the same VPC as the RDS database to use the automatic connection configuration. By default you have only one VPC.\nThe VPC that you\u2019re launching your instance into must have an internet gateway attached to it so that you can access your web server from the internet. Your default VPC is automatically set up with an internet gateway.\nTo ensure that your instance receives a public IP address, for Auto-assign public IP, check that Enable is selected. If Disable is selected, choose Edit (to the right of Network Settings), and then, for Auto-assign public IP, choose Enable.\nTo connect to your instance by using SSH, you need a security group rule that authorizes SSH (Linux) or RDP (Windows) traffic from your computer\u2019s public IPv4 address. By default, when you launch an instance, a new security group is created with a rule that allows inbound SSH traffic from anywhere.\nTo make sure that only your IP address can connect to your instance, under Firewall (security groups), from the drop-down list next to the Allow SSH traffic from checkbox, choose My IP.\nTo allow traffic from the internet to your instance, select the following checkboxes:\nAllow HTTPs traffic from the internet\nAllow HTTP traffic from the internet\nIn the Summary panel, review your instance configuration and then choose Launch instance.\nChoose View all instances to close the confirmation page and return to the console. Your instance will first be in a pending state, and will then go into the running state.\nIf the instance fails to launch or the state immediately goes to terminated instead of running, see Troubleshoot Amazon EC2 instance launch issues.\nFor more information about launching an instance, see Launch an EC2 instance using the launch instance wizard in the console.\nView an animation: Launch an EC2 instance\nTask 2: Create an RDS database and automatically connect it to your EC2 instance\nThe objective of this task is to create an RDS database and use the automatic connection feature in the RDS console to automatically configure the connection between your EC2 instance and your RDS database. The steps in this task configure the DB instance as follows:\nEngine type: MySQL\nTemplate: Free tier\nDB instance identifier: tutorial-database\nDB instance class: db.t3.micro\nImportant\nIn a production environment, you should configure your instance to meet your specific needs.\nTo create an RDS database and automatically connect it to an EC2 instance\nOpen the Amazon RDS console at https://console.aws.amazon.com/rds/.\nFrom the Region selector (at top right), choose the AWS Region in which you created the EC2 instance. The EC2 instance and the RDS database must be in the same Region.\nOn the dashboard, choose Create database.\nUnder Choose a database creation method, check that Standard create is selected. If you choose Easy create, the automatic connection feature is not available.\nUnder Engine options, for Engine type, choose MySQL.\nUnder Templates, choose a sample template to meet your needs. For this tutorial, choose Free tier to create an RDS database at no cost. However, note that the free tier is only available if your account is less than 12 months old. Other restrictions apply. You can read more by choosing the Info link in the Free tier box.\nUnder Settings, do the following:\nFor DB instance identifier, enter a name for the database. For this tutorial, enter tutorial-database.\nFor Master username, leave the default name, which is admin.\nFor Master password, enter a password that you can remember for this tutorial, and then, for Confirm password, enter the password again.\nUnder Instance configuration, for DB instance class, leave the default, which is db.t3.micro. If your account is less than 12 months, you can use this instance for free. Other restrictions apply. For more information, see AWS Free Tier.\nUnder Connectivity, for Compute resource, choose Connect to an EC2 compute resource. This is the automatic connection feature in the RDS console .\nFor EC2 instance, choose the EC2 instance that you want to connect to. For the purposes of this tutorial, you can either choose the instance that you created in the previous task, which you named tutorial-instance, or choose another existing instance. If you don't see your instance in the list, choose the refresh icon to the right of Connectivity.\nWhen you use the automatic connection feature, a security group is added to this EC2 instance, and another security group is added to the RDS database. The security groups are automatically configure to allow traffic between the EC2 instance and the RDS database. In the next task, you'll verify that the security groups were created and assigned to the EC2 instance and RDS database.\nChoose Create database.\nOn the Databases screen, the Status of the new database is Creating until the database is ready to use. When the status changes to Available, you can connect to the database. Depending on the database class and the amount of storage, it can take up to 20 minutes before the new database is available.\nTo learn more, see Configure automatic network connectivity with an EC2 instance in the Amazon RDS User Guide.\nView an animation: Create an RDS database and automatically connect it to an EC2 instance\nTask 3: Verify the connection configuration\nThe objective of this task is to verify that the two security groups were created and assigned to the instance and database.\nWhen you use the automatic connection feature in the console to configure the connectivity, the security groups are automatically created and assigned to the instance and database, as follows:\nSecurity group rds-ec2-x is created and added to the RDS database. It has one inbound rule that references the ec2-rds-x security group as its source. This allows traffic from the EC2 instance with the ec2-rds-x security group to reach the RDS database.\nSecurity group ec2-rds-x is created and added to the EC2 instance. It has one outbound rule that references the rds-ec2-x security group as its destination. This allows traffic from the EC2 instance to reach the RDS database with the rds-ec2-x security group.\nTo verify the connection configuration using the console\nOpen the Amazon RDS console at https://console.aws.amazon.com/rds/.\nIn the navigation page, choose Databases.\nChoose the RDS database that you created for this tutorial.\nOn the Connectivity & security tab, under Security, VPC security groups, verify that a security group called rds-ec2-x is displayed.\nChoose the rds-ec2-x security group. The Security Groups screen in the EC2 console opens.\nChoose the rds-ec2-x security group to open it.\nChoose the Inbound rules tab.\nVerify that the following security group rule exists, as follows:\nType: MYSQL/Aurora\nPort range: 3306\nSource: sg-0987654321example / ec2-rds-x \u2013 This is the security group that is assigned to the EC2 instance that you verified in the preceding steps.\nDescription: Rule to allow connections from EC2 instances with sg-1234567890example attached\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nChoose the EC2 instance that you selected to connect to the RDS database in the previous task, and choose the Security tab.\nUnder Security details, Security groups, verify that a security group called ec2-rds-x is in the list. x is a number.\nChoose the ec2-rds-x security group to open it.\nChoose the Outbound rules tab.\nVerify that the following security group rule exists, as follows:\nType: MYSQL/Aurora\nPort range: 3306\nDestination: sg-1234567890example / rds-ec2-x\nDescription: Rule to allow connections to database-tutorial from any instances this security group is attached to\nBy verifying that these security groups and security group rules exist and that they are assigned to the RDS database and EC2 instance as described in this procedure, you can verify that the connection was automatically configured by using the automatic connection feature.\nView an animation: Verify the connection configuration\nYou have completed Option 2 of this tutorial. You can now either complete Option 3, which teaches you how to manually configure the security groups that were automatically created in Option 2.\nTask 4 (Optional): Clean up\nNow that you have completed the tutorial, it is good practice to clean up (delete) any resources you no longer want to use. Cleaning up AWS resources prevents your account from incurring any further charges.\nIf you launched an EC2 instance specifically for this tutorial, you can terminate it to stop incurring any charges associated with it.\nTo terminate an instance using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance that you created for this tutorial, and choose Instance state, Terminate instance.\nChoose Terminate when prompted for confirmation.\nIf you created an RDS database specifically for this tutorial, you can delete it to stop incurring any charges associated with it.\nTo delete an RDS database using the console\nOpen the Amazon RDS console at https://console.aws.amazon.com/rds/.\nIn the navigation pane, choose Databases.\nSelect the RDS database that you created for this tutorial, and choose Actions, Delete.\nEnter delete me in the box, and then choose Delete."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/tutorial-ec2-rds-option3.html",
        "content": "The objective of Option 3 is to learn how to manually configure the connection between an EC2 instance and an RDS database by manually reproducing the configuration of the automatic connection feature.\nTasks\nBefore you begin\nTask 1 (Optional): Launch an EC2 instance\nTask 2 (Optional): Create an RDS database\nTask 3: Manually connect your EC2 instance to your RDS database\nTask 4 (Optional): Clean up\nBefore you begin\nYou'll need the following to complete this tutorial:\nAn EC2 instance that is in the same VPC as the RDS database. You can either use an existing EC2 instance or follow the steps in Task 1 to create a new instance.\nAn RDS database that is in the same VPC as the EC2 instance. You can either use an existing RDS database or follow the steps in Task 2 to create a new database.\nPermissions to call the following operations:\nec2:AssociateRouteTable\nec2:AuthorizeSecurityGroupEgress\nec2:CreateRouteTable\nec2:CreateSecurityGroup\nec2:CreateSubnet\nec2:DescribeInstances\nec2:DescribeNetworkInterfaces\nec2:DescribeRouteTables\nec2:DescribeSecurityGroups\nec2:DescribeSubnets\nec2:ModifyNetworkInterfaceAttribute\nec2:RevokeSecurityGroupEgress\nTask 1 (Optional): Launch an EC2 instance\nNote\nLaunching an instance is not the focus of this tutorial. If you already have an Amazon EC2 instance and would like to use it in this tutorial, you can skip this task.\nThe objective of this task is to launch an EC2 instance so that you can complete Task 3 where you configure the connection between your EC2 instance and your Amazon RDS database. The steps in this task configure the EC2 instance as follows:\nInstance name: tutorial-instance\nAMI: Amazon Linux 2\nInstance type: t2.micro\nAuto-assign public IP: Enabled\nSecurity group with the following three rules:\nAllow SSH from your IP address\nAllow HTTPS traffic from anywhere\nAllow HTTP traffic from anywhere\nImportant\nIn a production environment, you should configure your instance to meet your specific needs.\nTo launch an EC2 instance\nSign in to the AWS Management Console and open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nOn the EC2 Dashboard, choose Launch instance.\nUnder Name and tags, for Name, enter a name to identify your instance. For this tutorial, name the instance tutorial-instance-manual-1. While the instance name is not mandatory, the name will help you easily identify it.\nUnder Application and OS Images, choose an AMI that meets your web server needs. This tutorial uses Amazon Linux.\nUnder Instance type, for Instance type, select an instance type that meets your web server needs. This tutorial uses t2.micro.\nNote\nYou can use Amazon EC2 under the Free tier provided your AWS account is less than 12 months old and you choose a t2.micro instance type, or t3.micro in Regions where t2.micro is not available. Be aware that when you launch a t3.micro instance, it defaults to Unlimited mode, which might incur additional charges based on CPU usage.\nUnder Key pair (login), for Key pair name, choose your key pair.\nUnder Network settings, do the following:\nFor Network and Subnet, if you haven\u2019t made changes to your default VPC or subnets, you can keep the default settings.\nIf you have made changes to your default VPC or subnets, check the following:\nThe instance must be in the same VPC as the RDS database. By default you have only one VPC.\nThe VPC that you\u2019re launching your instance into must have an internet gateway attached to it so that you can access your web server from the internet. Your default VPC is automatically set up with an internet gateway.\nTo ensure that your instance receives a public IP address, for Auto-assign public IP, check that Enable is selected. If Disable is selected, choose Edit (to the right of Network Settings), and then, for Auto-assign public IP, choose Enable.\nTo connect to your instance by using SSH, you need a security group rule that authorizes SSH (Linux) or RDP (Windows) traffic from your computer\u2019s public IPv4 address. By default, when you launch an instance, a new security group is created with a rule that allows inbound SSH traffic from anywhere.\nTo make sure that only your IP address can connect to your instance, under Firewall (security groups), from the drop-down list next to the Allow SSH traffic from checkbox, choose My IP.\nTo allow traffic from the internet to your instance, select the following checkboxes:\nAllow HTTPs traffic from the internet\nAllow HTTP traffic from the internet\nIn the Summary panel, review your instance configuration and then choose Launch instance.\nChoose View all instances to close the confirmation page and return to the console. Your instance will first be in a pending state, and will then go into the running state.\nIf the instance fails to launch or the state immediately goes to terminated instead of running, see Troubleshoot Amazon EC2 instance launch issues.\nFor more information about launching an instance, see Launch an EC2 instance using the launch instance wizard in the console.\nView an animation: Launch an EC2 instance\nTask 2 (Optional): Create an RDS database\nNote\nCreating an RDS database is not the focus of this part of the tutorial. If you already have an RDS database and would like to use it for this tutorial, you can skip this task.\nThe objective of this task is to create an RDS database. You'll use this instance in Task 3 when you connect it to your EC2 instance. The steps in this task configure the RDS database as follows:\nEngine type: MySQL\nTemplate: Free tier\nDB instance identifier: tutorial-database-manual\nDB instance class: db.t3.micro\nImportant\nIn a production environment, you should configure your instance to meet your specific needs.\nTo create a MySQL DB instance\nOpen the Amazon RDS console at https://console.aws.amazon.com/rds/.\nFrom the Region selector (at top right), choose the AWS Region in which you created the EC2 instance. The EC2 instance and the DB instance must be in the same Region.\nOn the dashboard, choose Create database.\nUnder Choose a database creation method, choose Easy create. When you choose this option, the automatic connection feature to automatically configure the connection is not available.\nUnder Engine options, for Engine type, choose MySQL.\nFor DB instance size, choose Free tier.\nFor DB instance identifier enter a name for the RDS database. For this tutorial, enter tutorial-database-manual.\nFor Master username, leave the default name, which is admin.\nFor Master password, enter a password that you can remember for this tutorial, and then, for Confirm password, enter the password again.\nChoose Create database.\nOn the Databases screen, the Status of the new DB instance is Creating until the DB instance is ready to use. When the status changes to Available, you can connect to the DB instance. Depending on the DB instance class and the amount of storage, it can take up to 20 minutes before the new instance is available.\nView an animation: Create a DB instance\nTask 3: Manually connect your EC2 instance to your RDS database by creating security groups and assigning them to the instances\nThe objective of this task is to reproduce the connection configuration of the automatic connection feature by performing the following manually: You create two new security groups, and then add a security group each to the EC2 instance and the RDS database.\nTo create two new security groups and assign one each to the EC2 instance and RDS database\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nFirst create the security group to add to the EC2 instance, as follows:\nIn the navigation pane, choose Security Groups.\nChoose Create security group.\nFor Security group name, enter a descriptive name for the security group. For this tutorial, enter ec2-rds-manual-configuration.\nFor Description, enter a brief description. For this tutorial, enter EC2 instance security group to allow EC2 instance to securely connect to RDS database.\nChoose Create security group. You'll come back to this security group to add an outbound rule after you've created the RDS database security group.\nNow, create the security group to add to the RDS database, as follows:\nIn the navigation pane, choose Security Groups.\nChoose Create security group.\nFor Security group name, enter a descriptive name for the security group. For this tutorial, enter rds-ec2-manual-configuration.\nFor Description, enter a brief description. For this tutorial, enter RDS database security group to allow EC2 instance to securely connect to RDS database.\nUnder Inbound rules, choose Add rule, and do the following:\nFor Type, choose MYSQL/Aurora.\nFor Source, choose the EC2 instance security group ec2-rds-manual-configuration that you created in Step 2 of this procedure.\nChoose Create security group.\nEdit the EC2 instance security group to add an outbound rule, as follows:\nIn the navigation pane, choose Security Groups.\nSelect the EC2 instance security group (you named it ec2-rds-manual-configuration), and choose the Outbound rules tab.\nChoose Edit outbound rules.\nChoose Add rule, and do the following:\nFor Type, choose MYSQL/Aurora.\nFor Source, choose the RDS database security group rds-ec2-manual-configuration that you created in Step 3 of this procedure.\nChoose Save rules.\nAdd the EC2 instance security group to the EC2 instance as follows:\nIn the navigation pane, choose Instances.\nSelect your EC2 instance, and choose Actions, Security, Change security groups.\nUnder Associated security groups, choose the Select security groups field, choose ec2-rds-manual-configuration that you created earlier, and then choose Add security group.\nChoose Save.\nAdd the RDS database security group to the RDS database as follows:\nOpen the Amazon RDS console at https://console.aws.amazon.com/rds/.\nIn the navigation pane, choose Databases and select your database.\nChoose Modify.\nUnder Connectivity, for Security group, choose rds-ec2-manual-configuration that you created earlier, and then choose Continue.\nUnder Scheduling of modifications, choose Apply immediately.\nChoose Modify DB instance.\nYou have now completed the manual steps that mimic the automatic steps that occur when you use the automatic connection feature.\nYou have completed Option 3 of this tutorial. If you've completed Options 1, 2, and 3, and you no longer need the resources that were created in this tutorial, you should delete them to prevent incurring unnecessary costs. For more information, see Task 4 (Optional): Clean up.\nTask 4 (Optional): Clean up\nNow that you have completed the tutorial, it is good practice to clean up (delete) any resources you no longer want to use. Cleaning up AWS resources prevents your account from incurring any further charges.\nIf you launched an EC2 instance specifically for this tutorial, you can terminate it to stop incurring any charges associated with it.\nTo terminate an instance using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance that you created for this tutorial, and choose Instance state, Terminate instance.\nChoose Terminate when prompted for confirmation.\nIf you created an RDS database specifically for this tutorial, you can delete it to stop incurring any charges associated with it.\nTo delete an RDS database using the console\nOpen the Amazon RDS console at https://console.aws.amazon.com/rds/.\nIn the navigation pane, choose Databases.\nSelect the RDS database that you created for this tutorial, and choose Actions, Delete.\nEnter delete me in the box, and then choose Delete."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Fleets.html",
        "content": "EC2 Fleet and Spot Fleet are designed to be a useful way to launch a fleet of tens, hundreds, or thousands of Amazon EC2 instances in a single operation. Each instance in a fleet is either configured by a launch template or a set of launch parameters that you configure manually at launch.\nTopics\nFeatures and benefits\nWhich is the best fleet method to use?\nConfiguration options for your EC2 Fleet or Spot Fleet\nWork with EC2 Fleet\nWork with Spot Fleet\nMonitor your EC2 Fleet or Spot Fleet\nTutorials for EC2 Fleet\nExample CLI configurations for EC2 Fleet\nExample CLI configurations Spot Fleet\nQuotas for EC2 Fleet and Spot Fleet\nFeatures and benefits\nFleets provide the following features and benefits, enabling you to maximize cost savings and optimize availability and performance when running applications on multiple EC2 instances.\nMultiple instance types\nA fleet can launch multiple instance types, ensuring it isn't dependent on the availability of any single instance type. This increases the overall availability of instances in your fleet.\nDistributing instances across Availability Zones\nA fleet automatically attempts to distribute instances evenly across multiple Availability Zones for high availability. This provides resiliency in case an Availability Zone becomes unavailable.\nMultiple purchasing options\nA fleet can launch multiple purchase options (Spot and On-Demand Instances), allowing you to optimize costs through Spot Instance usage. You can also take advantage of Reserved Instance and Savings Plan discounts by using them in conjunction with On-Demand Instances in the fleet.\nAutomated replacement of Spot Instances\nIf your fleet includes Spot Instances, it can automatically request replacement Spot capacity if your Spot Instances are interrupted. Through Capacity Rebalancing, a fleet can also monitor and proactively replace your Spot Instances that are at an elevated risk of interruption.\nReserve On-Demand capacity\nA fleet can use an On-Demand Capacity Reservation to reserve On-Demand capacity. A fleet can also include Capacity Blocks for ML, allowing you to reserve GPU instances on a future date to support you short duration machine learning (ML) workloads."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/which-fleet-method-to-use.html",
        "content": "As a general best practice, we recommend launching fleets of Spot and On-Demand Instances with Amazon EC2 Auto Scaling because it provides additional features you can use to manage your fleet. The list of additional features includes automatic health check replacements for both Spot and On-Demand Instances, application-based health checks, and an integration with Elastic Load Balancing to ensure an even distribution of application traffic to your healthy instances. You can also use Auto Scaling groups when you use AWS services such as Amazon ECS, Amazon EKS (self-managed node groups), and Amazon VPC Lattice. For more information, see the Amazon EC2 Auto Scaling User Guide.\nIf you can't use Amazon EC2 Auto Scaling, then you might consider using EC2 Fleet or Spot Fleet. EC2 Fleet and Spot Fleet offer the same core functionality. However, EC2 Fleet is only available using a command line and does not provide console support. Spot Fleet provides console support, but is based on a legacy API with no planned investment.\nUse the following table to determine which fleet method to use.\nFleet method When to use? Use case\nAmazon EC2 Auto Scaling\nYou need multiple instances with either a single configuration or a mixed configuration.\nYou want to automate the lifecycle management of your instances.\nCreate an Auto Scaling group that manages the lifecycle of your instances while maintaining the desired number of instances. Supports horizontal scaling (adding more instances) between specified minimum and maximum limits.\nEC2 Fleet\nYou need multiple instances with either a single configuration or a mixed configuration.\nYou want to self-manage your instance lifecycle.\nIf you don\u2019t need auto scaling, we recommend that you use an instant type EC2 Fleet.\nCreate an instant fleet of both On-Demand Instances and Spot Instances in a single operation, with multiple launch specifications that vary by instance type, AMI, Availability Zone, or subnet. The Spot Instance allocation strategy defaults to lowest-price per unit, but we recommend changing it to price-capacity-optimized.\nSpot Fleet\nWe strongly discourage using Spot Fleet because it is based on a legacy API with no planned investment.\nIf you want to manage your instance lifecycle, rather use EC2 Fleet.\nIf you don't want to manage your instance lifecycle, rather use an Auto Scaling group.\nUse Spot Fleet only if you need console support for a use case for when you would use EC2 Fleet."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-configuration-strategies.html",
        "content": "When planning your EC2 Fleet or Spot Fleet, we recommend that you consider the following options when deciding how to configure your fleet.\nConfiguration option Question Documentation\nFleet request type\nDo you want a fleet that submits a one-time request for the desired target capacity, or a fleet that maintains target capacity over time?\nEC2 Fleet and Spot Fleet request types\nSpot Instances Do you plan to include Spot Instances in your fleet? Review the Spot best practices and use them when you plan your fleet so that you can provision the instances at the lowest possible price. Best practices for Amazon EC2 Spot\nSpending limit for your fleet Do you want to limit how much you'll pay for your fleet per hour? Set a spending limit for your EC2 Fleet or Spot Fleet\nInstance types and attribute-based instance type selection\nDo you want to specify the instance types in your fleet, or let Amazon EC2 select the instance types that meet your application requirements?\nSpecify attributes for instance type selection for EC2 Fleet or Spot Fleet\nInstance weighting Do you want to assign weights to each instance type to represent their compute capacity and performance, so that Amazon EC2 can select any combination of available instance types to fulfil your desired target capacity? Use instance weighting to manage cost and performance of your EC2 Fleet or Spot Fleet\nAllocation strategies Do you want to decide whether to optimize for available capacity, price, or instance types to use for the Spot Instances and On-Demand Instances in your fleet? Use allocation strategies to determine how EC2 Fleet or Spot Fleet fulfills Spot and On-Demand capacity\nCapacity Rebalancing Do you want your fleet to automatically replace at-risk Spot Instances? Use Capacity Rebalancing in EC2 Fleet and Spot Fleet to replace at-risk Spot Instances\nOn-Demand Capacity Reservation Do you want to reserve capacity for the On-Demand Instances in your fleet? Use Capacity Reservations to reserve On-Demand capacity in EC2 Fleet"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-request-type.html",
        "content": "The request type for an EC2 Fleet or Spot Fleet determines whether the request is synchronous or asynchronous, and whether it is a one-time request for the desired target capacity or an ongoing effort to maintain the capacity over time. When configuring your fleet, you must specify the request type.\nBoth EC2 Fleet and Spot Fleet offer two request types: request and maintain. In addition, EC2 Fleet offers a third request type called instant.\nFleet request types\ninstant (EC2 Fleet only)\nIf you configure the request type as instant, EC2 Fleet places a synchronous one-time request for your desired capacity. In the API response, it returns the instances that launched and provides errors for those instances that could not be launched. For more information, see Configure an EC2 Fleet of type instant.\nrequest\nIf you configure the request type as request, the fleet places an asynchronous one-time request for your desired capacity. If capacity diminishes due to Spot interruptions, the fleet does not attempt to replenish Spot Instances, nor does it submit requests in alternative Spot capacity pools if capacity is unavailable. When creating a Spot Fleet of type request using the console, clear the Maintain target capacity checkbox.\nmaintain (default)\nIf you configure the request type as maintain, the fleet places an asynchronous request for your desired capacity, and maintains it by automatically replenishing any interrupted Spot Instances. When creating a Spot Fleet of type maintain using the console, select the Maintain target capacity checkbox"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instant-fleet.html",
        "content": "The EC2 Fleet of type instant is a synchronous one-time request that makes only one attempt to launch your desired capacity. The API response lists the instances that launched, along with errors for those instances that could not be launched. There are several benefits to using an EC2 Fleet of type instant, which are described in this article. Example configurations are provided at the end of the article.\nFor workloads that need a launch-only API to launch EC2 instances, you can use the RunInstances API. However, with RunInstances, you can only launch On-Demand Instances or Spot Instances, but not both in the same request. Furthermore, when you use RunInstances to launch Spot Instances, your Spot Instance request is limited to one instance type and one Availability Zone. This targets a single Spot capacity pool (a set of unused instances with the same instance type and Availability Zone). If the Spot capacity pool does not have sufficient Spot Instance capacity for your request, the RunInstances call fails.\nInstead of using RunInstances to launch Spot Instances, we recommend that you rather use the CreateFleet API with the type parameter set to instant for the following benefits:\nLaunch On-Demand Instances and Spot Instances in one request. An EC2 Fleet can launch On-Demand Instances, Spot Instances, or both. The request for Spot Instances is fulfilled if there is available capacity and the maximum price per hour for your request exceeds the Spot price.\nIncrease the availability of Spot Instances. By using an EC2 Fleet of type instant, you can launch Spot Instances following Spot best practices with the resulting benefits:\nSpot best practice: Be flexible about instance types and Availability Zones.\nBenefit: By specifying several instance types and Availability Zones, you increase the number of Spot capacity pools. This gives the Spot service a better chance of finding and allocating your desired Spot compute capacity. A good rule of thumb is to be flexible across at least 10 instance types for each workload and make sure that all Availability Zones are configured for use in your VPC.\nSpot best practice: Use the price-capacity-optimized allocation strategy.\nBenefit: The price-capacity-optimized allocation strategy identifies instances from the most-available Spot capacity pools, and then automatically provisions instances from the lowest priced of these pools. Because your Spot Instance capacity is sourced from pools with optimal capacity, this decreases the possibility that your Spot Instances will be interrupted when Amazon EC2 needs the capacity back.\nGet access to a wider set of capabilities. For workloads that need a launch-only API, and where you prefer to manage the lifecycle of your instance rather than let EC2 Fleet manage it for you, use the EC2 Fleet of type instant instead of the RunInstances API. EC2 Fleet provides a wider set of capabilities than RunInstances, as demonstrated in the following examples. For all other workloads, you should use Amazon EC2 Auto Scaling because it supplies a more comprehensive feature set for a wide variety of workloads, like ELB-backed applications, containerized workloads, and queue processing jobs.\nYou can use EC2 Fleet of type instant to launch instances into Capacity Blocks. For more information, see Tutorial: Configure your EC2 Fleet to launch instances into Capacity Blocks.\nAWS services like Amazon EC2 Auto Scaling and Amazon EMR use EC2 Fleet of type instant to launch EC2 instances.\nPrerequisites for EC2 Fleet of type instant\nFor the prerequisites for creating an EC2 Fleet, see EC2 Fleet prerequisites.\nHow instant EC2 Fleet works\nWhen working with an EC2 Fleet of type instant, the sequence of events is as follows:\nConfigure the CreateFleet request type as instant. For more information, see Create an EC2 Fleet. Note that after you make the API call, you can't modify it.\nWhen you make the API call, EC2 Fleet places a synchronous one-time request for your desired capacity.\nThe API response lists the instances that launched, along with errors for those instances that could not be launched.\nYou can describe your EC2 Fleet, list the instances associated with your EC2 Fleet, and view the history of your EC2 Fleet.\nAfter your instances launch, you can delete the fleet request. When deleting the fleet request, you can also choose to terminate the associated instances, or leave them running.\nYou can terminate the instances at any time.\nExamples\nThe following examples show how to use EC2 Fleet of type instant for different use cases. For more information about using the EC2 CreateFleet API parameters, see CreateFleet in the Amazon EC2 API Reference.\nExamples\nExample 1: Launch Spot Instances with the capacity-optimized allocation strategy\nExample 2: Launch a single Spot Instance with the capacity-optimized allocation strategy\nExample 3: Launch Spot Instances using instance weighting\nExample 4: Launch Spot Instances within single Availability Zone\nExample 5: Launch Spot Instances of single instance type within single Availability zone\nExample 6: Launch Spot Instances only if minimum target capacity can be launched\nExample 7: Launch Spot Instances only if minimum target capacity can be launched of same Instance Type in a single Availability Zone\nExample 8: Launch instances with multiple Launch Templates\nExample 9: Launch Spot Instance with a base of On-Demand Instances\nExample 10: Launch Spot Instances using capacity-optimized allocation strategy with a base of On-Demand Instances using Capacity Reservations and the prioritized allocation strategy\nExample 11: Launch Spot Instances using capacity-optimized-prioritized allocation strategy\nExample 12: Specify a Systems Manager parameter instead of an AMI ID\nExample 1: Launch Spot Instances with the capacity-optimized allocation strategy\nThe following example specifies the parameters required in an EC2 Fleet of type instant: a launch template, target capacity, default purchasing option, and launch template overrides.\nThe launch template is identified by its launch template name and version number.\nThe 12 launch template overrides specify 4 different instance types and 3 different subnets, each in a separate Availability Zone. Each instance type and subnet combination defines a Spot capacity pool, resulting in 12 Spot capacity pools.\nThe target capacity for the fleet is 20 instances.\nThe default purchasing option is spot, which results in the fleet attempting to launch 20 Spot Instances into the Spot capacity pool with optimal capacity for the number of instances that are launching.\n{\n    \"SpotOptions\": {\n        \"AllocationStrategy\": \"capacity-optimized\"\n    },\n    \"LaunchTemplateConfigs\": [\n      {\n         \"LaunchTemplateSpecification\":{\n            \"LaunchTemplateName\":\"ec2-fleet-lt1\",\n            \"Version\":\"$Latest\"\n         },\n         \"Overrides\":[\n            {\n               \"InstanceType\":\"c5.large\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"c5.large\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"c5.large\",\n               \"SubnetId\":\"subnet-49e41922\"\n            },\n            {\n               \"InstanceType\":\"c5d.large\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"c5d.large\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"c5d.large\",\n               \"SubnetId\":\"subnet-49e41922\"\n            },\n            {\n               \"InstanceType\":\"m5.large\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"m5.large\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"m5.large\",\n               \"SubnetId\":\"subnet-49e41922\"\n            },\n            {\n               \"InstanceType\":\"m5d.large\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"m5d.large\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"m5d.large\",\n               \"SubnetId\":\"subnet-49e41922\"\n            }\n         ]\n      }\n    ],\n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 20,\n        \"DefaultTargetCapacityType\": \"spot\"\n    },\n    \"Type\": \"instant\"\n}\nExample 2: Launch a single Spot Instance with the capacity-optimized allocation strategy\nYou can optimally launch one Spot Instance at a time by making multiple EC2 Fleet API calls of type instant, by setting the TotalTargetCapacity to 1.\nThe following example specifies the parameters required in an EC2 Fleet of type instant: a launch template, target capacity, default purchasing option, and launch template overrides. The launch template is identified by its launch template name and version number. The 12 launch template overrides have 4 different instance types and 3 different subnets, each in a separate Availability Zone. The target capacity for the fleet is 1 instance, and the default purchasing option is spot, which results in the fleet attempting to launch a Spot Instance from one of the 12 Spot capacity pools based on the capacity-optimized allocation strategy, to launch a Spot Instance from the most-available capacity pool.\n{\n    \"SpotOptions\": {\n        \"AllocationStrategy\": \"capacity-optimized\"\n    },\n    \"LaunchTemplateConfigs\": [\n      {\n         \"LaunchTemplateSpecification\":{\n            \"LaunchTemplateName\":\"ec2-fleet-lt1\",\n            \"Version\":\"$Latest\"\n         },\n         \"Overrides\":[\n            {\n               \"InstanceType\":\"c5.large\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"c5.large\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"c5.large\",\n               \"SubnetId\":\"subnet-49e41922\"\n            },\n            {\n               \"InstanceType\":\"c5d.large\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"c5d.large\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"c5d.large\",\n               \"SubnetId\":\"subnet-49e41922\"\n            },\n            {\n               \"InstanceType\":\"m5.large\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"m5.large\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"m5.large\",\n               \"SubnetId\":\"subnet-49e41922\"\n            },\n            {\n               \"InstanceType\":\"m5d.large\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"m5d.large\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"m5d.large\",\n               \"SubnetId\":\"subnet-49e41922\"\n            }\n         ]\n      }\n    ],\n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 1,\n        \"DefaultTargetCapacityType\": \"spot\"\n    },\n    \"Type\": \"instant\"\n}\nExample 3: Launch Spot Instances using instance weighting\nThe following examples use instance weighting, which means that the price is per unit hour instead of per instance hour. Each launch configuration lists a different instance type and a different weight based on how many units of the workload can run on the instance assuming a unit of the workload requires a 15 GB of memory and 4 vCPUs. For example an m5.xlarge (4 vCPUs and 16 GB of memory) can run one unit and is weighted 1, m5.2xlarge (8 vCPUs and 32 GB of memory) can run 2 units and is weighted 2, and so on. The total target capacity is set to 40 units. The default purchasing option is spot, and the allocation strategy is capacity-optimized, which results in either 40 m5.xlarge (40 divided by 1), 20 m5.2xlarge (40 divided by 2), 10 m5.4xlarge (40 divided by 4), 5 m5.8xlarge (40 divided by 8), or a mix of the instance types with weights adding up to the desired capacity based on the capacity-optimized allocation strategy.\nFor more information, see Use instance weighting to manage cost and performance of your EC2 Fleet or Spot Fleet.\n{\n   \"SpotOptions\":{\n      \"AllocationStrategy\":\"capacity-optimized\"\n   },\n   \"LaunchTemplateConfigs\":[\n      {\n         \"LaunchTemplateSpecification\":{\n            \"LaunchTemplateName\":\"ec2-fleet-lt1\",\n            \"Version\":\"$Latest\"\n         },\n         \"Overrides\":[\n            {\n               \"InstanceType\":\"m5.xlarge\",\n               \"SubnetId\":\"subnet-fae8c380\",\n               \"WeightedCapacity\":1\n            },\n            {\n               \"InstanceType\":\"m5.xlarge\",\n               \"SubnetId\":\"subnet-e7188bab\",\n               \"WeightedCapacity\":1\n            },\n            {\n               \"InstanceType\":\"m5.xlarge\",\n               \"SubnetId\":\"subnet-49e41922\",\n               \"WeightedCapacity\":1\n            },\n            {\n               \"InstanceType\":\"m5.2xlarge\",\n               \"SubnetId\":\"subnet-fae8c380\",\n               \"WeightedCapacity\":2\n            },\n            {\n               \"InstanceType\":\"m5.2xlarge\",\n               \"SubnetId\":\"subnet-e7188bab\",\n               \"WeightedCapacity\":2\n            },\n            {\n               \"InstanceType\":\"m5.2xlarge\",\n               \"SubnetId\":\"subnet-49e41922\",\n               \"WeightedCapacity\":2\n            },\n            {\n               \"InstanceType\":\"m5.4xlarge\",\n               \"SubnetId\":\"subnet-fae8c380\",\n               \"WeightedCapacity\":4\n            },\n            {\n               \"InstanceType\":\"m5.4xlarge\",\n               \"SubnetId\":\"subnet-e7188bab\",\n               \"WeightedCapacity\":4\n            },\n            {\n               \"InstanceType\":\"m5.4xlarge\",\n               \"SubnetId\":\"subnet-49e41922\",\n               \"WeightedCapacity\":4\n            },\n            {\n               \"InstanceType\":\"m5.8xlarge\",\n               \"SubnetId\":\"subnet-fae8c380\",\n               \"WeightedCapacity\":8\n            },\n            {\n               \"InstanceType\":\"m5.8xlarge\",\n               \"SubnetId\":\"subnet-e7188bab\",\n               \"WeightedCapacity\":8\n            },\n            {\n               \"InstanceType\":\"m5.8xlarge\",\n               \"SubnetId\":\"subnet-49e41922\",\n               \"WeightedCapacity\":8\n            }\n         ]\n      }\n   ],\n   \"TargetCapacitySpecification\":{\n      \"TotalTargetCapacity\":40,\n      \"DefaultTargetCapacityType\":\"spot\"\n   },\n   \"Type\":\"instant\"\n}\nExample 4: Launch Spot Instances within single Availability Zone\nYou can configure a fleet to launch all instances in a single Availability Zone by setting the Spot options SingleAvailabilityZone to true.\nThe 12 launch template overrides have different instance types and subnets (each in a separate Availability Zone) but the same weighted capacity. The total target capacity is 20 instances, the default purchasing option is spot, and the Spot allocation strategy is capacity-optimized. The EC2 Fleet launches 20 Spot Instances all in a single AZ, from the Spot capacity pool(s) with optimal capacity using the launch specifications.\n{\n    \"SpotOptions\": {\n        \"AllocationStrategy\": \"capacity-optimized\",\n        \"SingleAvailabilityZone\": true\n    },\n    \"LaunchTemplateConfigs\": [\n      {\n         \"LaunchTemplateSpecification\":{\n            \"LaunchTemplateName\":\"ec2-fleet-lt1\",\n            \"Version\":\"$Latest\"\n         },\n         \"Overrides\":[\n            {\n               \"InstanceType\":\"c5.4xlarge\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"c5.4xlarge\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"c5.4xlarge\",\n               \"SubnetId\":\"subnet-49e41922\"\n            },\n            {\n               \"InstanceType\":\"c5d.4xlarge\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"c5d.4xlarge\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"c5d.4xlarge\",\n               \"SubnetId\":\"subnet-49e41922\"\n            },\n            {\n               \"InstanceType\":\"m5.4xlarge\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"m5.4xlarge\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"m5.4xlarge\",\n               \"SubnetId\":\"subnet-49e41922\"\n            },\n            {\n               \"InstanceType\":\"m5d.4xlarge\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"m5d.4xlarge\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"m5d.4xlarge\",\n               \"SubnetId\":\"subnet-49e41922\"\n            }\n         ]\n      }\n    ],\n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 20,\n        \"DefaultTargetCapacityType\": \"spot\"\n    },\n    \"Type\": \"instant\"\n}\nExample 5: Launch Spot Instances of single instance type within single Availability zone\nYou can configure a fleet to launch all instances of the same instance type and in a single Availability Zone by setting the SpotOptions SingleInstanceType to true and SingleAvailabilityZone to true.\nThe 12 launch template overrides have different instance types and subnets (each in a separate Availability Zone) but the same weighted capacity. The total target capacity is 20 instances, the default purchasing option is spot, the Spot allocation strategy is capacity-optimized. The EC2 Fleet launches 20 Spot Instances of the same instance type all in a single AZ from the Spot Instance pool with optimal capacity using the launch specifications.\n{\n    \"SpotOptions\": {\n        \"AllocationStrategy\": \"capacity-optimized\",\n        \"SingleInstanceType\": true,\n        \"SingleAvailabilityZone\": true\n    },\n    \"LaunchTemplateConfigs\": [\n      {\n         \"LaunchTemplateSpecification\":{\n            \"LaunchTemplateName\":\"ec2-fleet-lt1\",\n            \"Version\":\"$Latest\"\n         },\n         \"Overrides\":[\n            {\n               \"InstanceType\":\"c5.4xlarge\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"c5.4xlarge\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"c5.4xlarge\",\n               \"SubnetId\":\"subnet-49e41922\"\n            },\n            {\n               \"InstanceType\":\"c5d.4xlarge\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"c5d.4xlarge\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"c5d.4xlarge\",\n               \"SubnetId\":\"subnet-49e41922\"\n            },\n            {\n               \"InstanceType\":\"m5.4xlarge\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"m5.4xlarge\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"m5.4xlarge\",\n               \"SubnetId\":\"subnet-49e41922\"\n            },\n            {\n               \"InstanceType\":\"m5d.4xlarge\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"m5d.4xlarge\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"m5d.4xlarge\",\n               \"SubnetId\":\"subnet-49e41922\"\n            }\n         ]\n      }\n    ],\n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 20,\n        \"DefaultTargetCapacityType\": \"spot\"\n    },\n    \"Type\": \"instant\"\n}\nExample 6: Launch Spot Instances only if minimum target capacity can be launched\nYou can configure a fleet to launch instances only if the minimum target capacity can be launched by setting the Spot options MinTargetCapacity to the minimum target capacity you want to launch together.\nThe 12 launch template overrides have different instance types and subnets (each in a separate Availability Zone) but the same weighted capacity. The total target capacity and the minimum target capacity are both set to 20 instances, the default purchasing option is spot, the Spot allocation strategy is capacity-optimized. The EC2 Fleet launches 20 Spot Instances from the Spot capacity pool with optimal capacity using the launch template overrides, only if it can launch all 20 instances at the same time.\n{\n    \"SpotOptions\": {\n        \"AllocationStrategy\": \"capacity-optimized\",\n        \"MinTargetCapacity\": 20\n    },\n    \"LaunchTemplateConfigs\": [\n      {\n         \"LaunchTemplateSpecification\":{\n            \"LaunchTemplateName\":\"ec2-fleet-lt1\",\n            \"Version\":\"$Latest\"\n         },\n         \"Overrides\":[\n            {\n               \"InstanceType\":\"c5.4xlarge\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"c5.4xlarge\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"c5.4xlarge\",\n               \"SubnetId\":\"subnet-49e41922\"\n            },\n            {\n               \"InstanceType\":\"c5d.4xlarge\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"c5d.4xlarge\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"c5d.4xlarge\",\n               \"SubnetId\":\"subnet-49e41922\"\n            },\n            {\n               \"InstanceType\":\"m5.4xlarge\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"m5.4xlarge\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"m5.4xlarge\",\n               \"SubnetId\":\"subnet-49e41922\"\n            },\n            {\n               \"InstanceType\":\"m5d.4xlarge\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"m5d.4xlarge\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"m5d.4xlarge\",\n               \"SubnetId\":\"subnet-49e41922\"\n            }\n         ]\n      }\n    ],\n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 20,\n        \"DefaultTargetCapacityType\": \"spot\"\n    },\n    \"Type\": \"instant\"\n}\nExample 7: Launch Spot Instances only if minimum target capacity can be launched of same Instance Type in a single Availability Zone\nYou can configure a fleet to launch instances only if the minimum target capacity can be launched with a single instance type in a single Availability Zone by setting the Spot options MinTargetCapacity to the minimum target capacity you want to launch together along with SingleInstanceType and SingleAvailabilityZone options.\nThe 12 launch specifications which override the launch template, have different instance types and subnets (each in a separate Availability Zone) but the same weighted capacity. The total target capacity and the minimum target capacity are both set to 20 instances, the default purchasing option is spot, the Spot allocation strategy is capacity-optimized, the SingleInstanceType is true and SingleAvailabilityZone is true. The EC2 Fleet launches 20 Spot Instances of the same Instance type all in a single AZ from the Spot capacity pool with optimal capacity using the launch specifications, only if it can launch all 20 instances at the same time.\n{\n    \"SpotOptions\": {\n        \"AllocationStrategy\": \"capacity-optimized\",\n        \"SingleInstanceType\": true,\n        \"SingleAvailabilityZone\": true,\n        \"MinTargetCapacity\": 20\n    },\n    \"LaunchTemplateConfigs\": [\n      {\n         \"LaunchTemplateSpecification\":{\n            \"LaunchTemplateName\":\"ec2-fleet-lt1\",\n            \"Version\":\"$Latest\"\n         },\n         \"Overrides\":[\n            {\n               \"InstanceType\":\"c5.4xlarge\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"c5.4xlarge\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"c5.4xlarge\",\n               \"SubnetId\":\"subnet-49e41922\"\n            },\n            {\n               \"InstanceType\":\"c5d.4xlarge\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"c5d.4xlarge\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"c5d.4xlarge\",\n               \"SubnetId\":\"subnet-49e41922\"\n            },\n            {\n               \"InstanceType\":\"m5.4xlarge\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"m5.4xlarge\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"m5.4xlarge\",\n               \"SubnetId\":\"subnet-49e41922\"\n            },\n            {\n               \"InstanceType\":\"m5d.4xlarge\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"m5d.4xlarge\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"m5d.4xlarge\",\n               \"SubnetId\":\"subnet-49e41922\"\n            }\n         ]\n      }\n    ],\n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 20,\n        \"DefaultTargetCapacityType\": \"spot\"\n    },\n    \"Type\": \"instant\"\n}\nExample 8: Launch instances with multiple Launch Templates\nYou can configure a fleet to launch instances with different launch specifications for different instance types or a group of instance types, by specifying multiple launch templates. In this example we want have different EBS volume sizes for different instance types and we have that configured in the launch templates ec2-fleet-lt-4xl, ec2-fleet-lt-9xl and ec2-fleet-lt-18xl.\nIn this example, we are using 3 different launch templates for the 3 instance types based on their size. The launch specification overrides on all the launch templates use instance weights based on the vCPUs on the instance type. The total target capacity is 144 units, the default purchasing option is spot, and the Spot allocation strategy is capacity-optimized. The EC2 Fleet can either launch 9 c5n.4xlarge (144 divided by 16) using the launch template ec2-fleet-4xl or 4 c5n.9xlarge (144 divided by 36) using the launch template ec2-fleet-9xl, or 2 c5n.18xlarge (144 divided by 72) using the launch template ec2-fleet-18xl, or a mix of the instance types with weights adding up to the desired capacity based on the capacity-optimized allocation strategy.\n{\n    \"SpotOptions\": {\n        \"AllocationStrategy\": \"capacity-optimized\"\n    },\n    \"LaunchTemplateConfigs\": [\n      {\n         \"LaunchTemplateSpecification\":{\n            \"LaunchTemplateName\":\"ec2-fleet-lt-18xl\",\n            \"Version\":\"$Latest\"\n         },\n         \"Overrides\":[\n            {\n               \"InstanceType\":\"c5n.18xlarge\",\n               \"SubnetId\":\"subnet-fae8c380\",\n               \"WeightedCapacity\":72\n            },\n            {\n               \"InstanceType\":\"c5n.18xlarge\",\n               \"SubnetId\":\"subnet-e7188bab\",\n               \"WeightedCapacity\":72\n            },\n            {\n               \"InstanceType\":\"c5n.18xlarge\",\n               \"SubnetId\":\"subnet-49e41922\",\n               \"WeightedCapacity\":72\n            }\n         ]\n      },\n      {\n         \"LaunchTemplateSpecification\":{\n            \"LaunchTemplateName\":\"ec2-fleet-lt-9xl\",\n            \"Version\":\"$Latest\"\n         },\n         \"Overrides\":[\n            {\n               \"InstanceType\":\"c5n.9xlarge\",\n               \"SubnetId\":\"subnet-fae8c380\",\n               \"WeightedCapacity\":36\n            },\n            {\n               \"InstanceType\":\"c5n.9xlarge\",\n               \"SubnetId\":\"subnet-e7188bab\",\n               \"WeightedCapacity\":36\n            },\n            {\n               \"InstanceType\":\"c5n.9xlarge\",\n               \"SubnetId\":\"subnet-49e41922\",\n               \"WeightedCapacity\":36\n            }\n         ]\n      },\n      {\n         \"LaunchTemplateSpecification\":{\n            \"LaunchTemplateName\":\"ec2-fleet-lt-4xl\",\n            \"Version\":\"$Latest\"\n         },\n         \"Overrides\":[\n            {\n               \"InstanceType\":\"c5n.4xlarge\",\n               \"SubnetId\":\"subnet-fae8c380\",\n               \"WeightedCapacity\":16\n            },\n            {\n               \"InstanceType\":\"c5n.4xlarge\",\n               \"SubnetId\":\"subnet-e7188bab\",\n               \"WeightedCapacity\":16\n            },\n            {\n               \"InstanceType\":\"c5n.4xlarge\",\n               \"SubnetId\":\"subnet-49e41922\",\n               \"WeightedCapacity\":16\n            }\n         ]\n      }\n    ],\n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 144,\n        \"DefaultTargetCapacityType\": \"spot\"\n    },\n    \"Type\": \"instant\"\n}\nExample 9: Launch Spot Instance with a base of On-Demand Instances\nThe following example specifies the total target capacity of 20 instances for the fleet, and a target capacity of 5 On-Demand Instances. The default purchasing option is spot. The fleet launches 5 On-Demand Instance as specified, but needs to launch 15 more instances to fulfill the total target capacity. The purchasing option for the difference is calculated as TotalTargetCapacity \u2013 OnDemandTargetCapacity = DefaultTargetCapacityType, which results in the fleet launching 15 Spot Instances form one of the 12 Spot capacity pools based on the capacity-optimized allocation strategy.\n{\n    \"SpotOptions\": {\n        \"AllocationStrategy\": \"capacity-optimized\"\n    },\n    \"LaunchTemplateConfigs\": [\n      {\n         \"LaunchTemplateSpecification\":{\n            \"LaunchTemplateName\":\"ec2-fleet-lt1\",\n            \"Version\":\"$Latest\"\n         },\n         \"Overrides\":[\n            {\n               \"InstanceType\":\"c5.large\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"c5.large\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"c5.large\",\n               \"SubnetId\":\"subnet-49e41922\"\n            },\n            {\n               \"InstanceType\":\"c5d.large\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"c5d.large\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"c5d.large\",\n               \"SubnetId\":\"subnet-49e41922\"\n            },\n            {\n               \"InstanceType\":\"m5.large\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"m5.large\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"m5.large\",\n               \"SubnetId\":\"subnet-49e41922\"\n            },\n            {\n               \"InstanceType\":\"m5d.large\",\n               \"SubnetId\":\"subnet-fae8c380\"\n            },\n            {\n               \"InstanceType\":\"m5d.large\",\n               \"SubnetId\":\"subnet-e7188bab\"\n            },\n            {\n               \"InstanceType\":\"m5d.large\",\n               \"SubnetId\":\"subnet-49e41922\"\n            }\n         ]\n      }\n    ],\n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 20,\n        \"OnDemandTargetCapacity\": 5,\n        \"DefaultTargetCapacityType\": \"spot\"\n    },\n    \"Type\": \"instant\"\n}\nExample 10: Launch Spot Instances using capacity-optimized allocation strategy with a base of On-Demand Instances using Capacity Reservations and the prioritized allocation strategy\nYou can configure a fleet to use On-Demand Capacity Reservations first when launching a base of On-Demand Instances with the default target capacity type as spot by setting the usage strategy for Capacity Reservations to use-capacity-reservations-first. And if multiple instance pools have unused Capacity Reservations, the chosen On-Demand allocation strategy is applied. In this example, the On-Demand allocation strategy is prioritized.\nIn this example, there are 6 available unused Capacity Reservations. This is less than the fleet's target On-Demand capacity of 10 On-Demand Instances.\nThe account has the following 6 unused Capacity Reservations in 2 pools. The number of Capacity Reservations in each pool is indicated by AvailableInstanceCount.\n{\n    \"CapacityReservationId\": \"cr-111\", \n    \"InstanceType\": \"m5.large\", \n    \"InstancePlatform\": \"Linux/UNIX\", \n    \"AvailabilityZone\": \"us-east-1a\", \n    \"AvailableInstanceCount\": 3, \n    \"InstanceMatchCriteria\": \"open\", \n    \"State\": \"active\"\n}\n \n{\n    \"CapacityReservationId\": \"cr-222\", \n    \"InstanceType\": \"c5.large\", \n    \"InstancePlatform\": \"Linux/UNIX\", \n    \"AvailabilityZone\": \"us-east-1a\", \n    \"AvailableInstanceCount\": 3, \n    \"InstanceMatchCriteria\": \"open\", \n    \"State\": \"active\"\n}\nThe following fleet configuration shows only the pertinent configurations for this example. The On-Demand allocation strategy is prioritized, and the usage strategy for Capacity Reservations is use-capacity-reservations-first. The Spot allocation strategy is capacity-optimized. The total target capacity is 20, the On-Demand target capacity is 10, and the default target capacity type is spot.\n{\n    \"SpotOptions\": {\n        \"AllocationStrategy\": \"capacity-optimized\"\n    },\n    \"OnDemandOptions\":{\n       \"CapacityReservationOptions\": {\n         \"UsageStrategy\": \"use-capacity-reservations-first\"\n       },\n       \"AllocationStrategy\":\"prioritized\"\n    },\n    \"LaunchTemplateConfigs\": [\n      {\n         \"LaunchTemplateSpecification\":{\n            \"LaunchTemplateName\":\"ec2-fleet-lt1\",\n            \"Version\":\"$Latest\"\n         },\n         \"Overrides\":[\n            {\n               \"InstanceType\":\"c5.large\",\n               \"SubnetId\":\"subnet-fae8c380\",\n               \"Priority\": 1.0\n            },\n            {\n               \"InstanceType\":\"c5.large\",\n               \"SubnetId\":\"subnet-e7188bab\",\n               \"Priority\": 2.0\n            },\n            {\n               \"InstanceType\":\"c5.large\",\n               \"SubnetId\":\"subnet-49e41922\",\n               \"Priority\": 3.0\n            },\n            {\n               \"InstanceType\":\"c5d.large\",\n               \"SubnetId\":\"subnet-fae8c380\",\n               \"Priority\": 4.0\n            },\n            {\n               \"InstanceType\":\"c5d.large\",\n               \"SubnetId\":\"subnet-e7188bab\",\n               \"Priority\": 5.0\n            },\n            {\n               \"InstanceType\":\"c5d.large\",\n               \"SubnetId\":\"subnet-49e41922\",\n               \"Priority\": 6.0\n            },\n            {\n               \"InstanceType\":\"m5.large\",\n               \"SubnetId\":\"subnet-fae8c380\",\n               \"Priority\": 7.0\n            },\n            {\n               \"InstanceType\":\"m5.large\",\n               \"SubnetId\":\"subnet-e7188bab\",\n               \"Priority\": 8.0\n            },\n            {\n               \"InstanceType\":\"m5.large\",\n               \"SubnetId\":\"subnet-49e41922\",\n               \"Priority\": 9.0\n            },\n            {\n               \"InstanceType\":\"m5d.large\",\n               \"SubnetId\":\"subnet-fae8c380\",\n               \"Priority\": 10.0\n            },\n            {\n               \"InstanceType\":\"m5d.large\",\n               \"SubnetId\":\"subnet-e7188bab\",\n               \"Priority\": 11.0\n            },\n            {\n               \"InstanceType\":\"m5d.large\",\n               \"SubnetId\":\"subnet-49e41922\",\n               \"Priority\": 12.0\n            }\n         ]\n      }\n    ],\n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 20,\n        \"OnDemandTargetCapacity\": 10,\n        \"DefaultTargetCapacityType\": \"spot\"\n    },\n    \"Type\": \"instant\"\n}\nAfter you create the instant fleet using the preceding configuration, the following 20 instances are launched to meet the target capacity:\n7 c5.large On-Demand Instances in us-east-1a \u2013 c5.large in us-east-1a is prioritized first, and there are 3 available unused c5.large Capacity Reservations. The Capacity Reservations are used first to launch 3 On-Demand Instances plus 4 additional On-Demand Instances are launched according to the On-Demand allocation strategy, which is prioritized in this example.\n3 m5.large On-Demand Instances in us-east-1a \u2013 m5.large in us-east-1a is prioritized second, and there are 3 available unused c3.large Capacity Reservations.\n10 Spot Instances from one of the 12 Spot capacity pools that has the optimal capacity according to the capacity-optimized allocation strategy.\nAfter the fleet is launched, you can run describe-capacity-reservations to see how many unused Capacity Reservations are remaining. In this example, you should see the following response, which shows that all of the c5.large and m5.large Capacity Reservations were used.\n{\n    \"CapacityReservationId\": \"cr-111\",\n    \"InstanceType\": \"m5.large\",  \n    \"AvailableInstanceCount\": 0\n}\n \n{\n    \"CapacityReservationId\": \"cr-222\",\n    \"InstanceType\": \"c5.large\", \n    \"AvailableInstanceCount\": 0\n}\nExample 11: Launch Spot Instances using capacity-optimized-prioritized allocation strategy\nThe following example specifies the parameters required in an EC2 Fleet of type instant: a launch template, target capacity, default purchasing option, and launch template overrides. The launch template is identified by its launch template name and version number. The 12 launch specifications which override the launch template have 4 different instance types with a priority assigned, and 3 different subnets, each in a separate Availability Zone. The target capacity for the fleet is 20 instances, and the default purchasing option is spot, which results in the fleet attempting to launch 20 Spot Instances from one of the 12 Spot capacity pools based on the capacity-optimized-prioritized allocation strategy, which implements priorities on a best-effort basis, but optimizes for capacity first.\n{\n    \"SpotOptions\": {\n        \"AllocationStrategy\": \"capacity-optimized-prioritized\"\n    },\n    \"LaunchTemplateConfigs\": [\n      {\n         \"LaunchTemplateSpecification\":{\n            \"LaunchTemplateName\":\"ec2-fleet-lt1\",\n            \"Version\":\"$Latest\"\n         },\n         \"Overrides\":[\n            {\n               \"InstanceType\":\"c5.large\",\n               \"SubnetId\":\"subnet-fae8c380\",\n               \"Priority\": 1.0\n            },\n            {\n               \"InstanceType\":\"c5.large\",\n               \"SubnetId\":\"subnet-e7188bab\",\n               \"Priority\": 1.0\n            },\n            {\n               \"InstanceType\":\"c5.large\",\n               \"SubnetId\":\"subnet-49e41922\",\n               \"Priority\": 1.0\n            },\n            {\n               \"InstanceType\":\"c5d.large\",\n               \"SubnetId\":\"subnet-fae8c380\",\n               \"Priority\": 2.0\n            },\n            {\n               \"InstanceType\":\"c5d.large\",\n               \"SubnetId\":\"subnet-e7188bab\",\n               \"Priority\": 2.0\n            },\n            {\n               \"InstanceType\":\"c5d.large\",\n               \"SubnetId\":\"subnet-49e41922\",\n               \"Priority\": 2.0\n            },\n            {\n               \"InstanceType\":\"m5.large\",\n               \"SubnetId\":\"subnet-fae8c380\",\n               \"Priority\": 3.0\n            },\n            {\n               \"InstanceType\":\"m5.large\",\n               \"SubnetId\":\"subnet-e7188bab\",\n               \"Priority\": 3.0\n            },\n            {\n               \"InstanceType\":\"m5.large\",\n               \"SubnetId\":\"subnet-49e41922\",\n               \"Priority\": 3.0\n            },\n            {\n               \"InstanceType\":\"m5d.large\",\n               \"SubnetId\":\"subnet-fae8c380\",\n               \"Priority\": 4.0\n            },\n            {\n               \"InstanceType\":\"m5d.large\",\n               \"SubnetId\":\"subnet-e7188bab\",\n               \"Priority\": 4.0\n            },\n            {\n               \"InstanceType\":\"m5d.large\",\n               \"SubnetId\":\"subnet-49e41922\",\n               \"Priority\": 4.0\n            }\n         ]\n      }\n    ],\n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 20,\n        \"DefaultTargetCapacityType\": \"spot\"\n    },\n    \"Type\": \"instant\"\n}\nExample 12: Specify a Systems Manager parameter instead of an AMI ID\nThe following example uses a launch template to specify the configuration for the instances in the fleet. In this example, for ImageId, instead of specifying an AMI ID, the AMI is referenced with a System Manager parameter. On instance launch, the Systems Manager parameter will resolve to an AMI ID.\nIn this example, the Systems Manager parameter is specified in a valid format: resolve:ssm:golden-ami. There are other valid formats for the Systems Manager parameter. For more information, see Use a Systems Manager parameter instead of an AMI ID.\nNote\nThe fleet type must be of type instant. Other fleet types do not support specifying a System Manager parameter instead of an AMI ID.\n{\n    \"LaunchTemplateData\": {\n        \"ImageId\": \"resolve:ssm:golden-ami\",\n        \"InstanceType\": \"m5.4xlarge\",\n        \"TagSpecifications\": [{\n            \"ResourceType\": \"instance\",\n            \"Tags\": [{\n                \"Key\": \"Name\",\n                \"Value\": \"webserver\"\n            }]\n        }]\n    }\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-control-spending.html",
        "content": "You can set a limit on how much you're willing to spend per hour on your EC2 Fleet or Spot Fleet. When your spending limit is reached, the fleet stops launching instances, even if the target capacity hasn't been reached.\nThere are separate spending limits for On-Demand Instances and Spot Instances.\nTo configure a spending limit for On-Demand Instances and Spot Instances in your EC2 Fleet\nUse the create-fleet command and the following parameters:\nFor On-Demand Instances: In the OnDemandOptions structure, specify your spending limit in the MaxTotalPrice field.\nFor Spot Instances: In the SpotOptions structure, specify your spending limit in the MaxTotalPrice field.\nTo configure a spending limit for On-Demand Instances and Spot Instances in your Spot Fleet\nYou can use the Amazon EC2 console or the AWS CLI to configure your spending limit.\n(Console) When creating the Spot Fleet, select the Set maximum cost for Spot Instances checkbox, and then enter a value for Set your max cost (per hour). For more information, see step 6.e. in Create a Spot Fleet request using defined parameters (console).\n(AWS CLI) Use the request-spot-fleet command and the following parameters:\nFor On-Demand Instances: Specify your spending limit in the OnDemandMaxTotalPrice field.\nFor Spot Instances: Specify your spending limit in the SpotMaxTotalPrice field.\nExamples\nThe following examples show two different scenarios. In the first example, the fleet stops launching On-Demand Instances when it has met the target capacity set for On-Demand Instances (OnDemandTargetCapacity). In the second example, the fleet stops launching On-Demand Instances when it has reached the maximum amount you\u2019re willing to pay per hour for On-Demand Instances (MaxTotalPrice).\nExample: Stop launching On-Demand Instances when target capacity is reached\nGiven a request for m4.large On-Demand Instances, where:\nOn-Demand Price: $0.10 per hour\nOnDemandTargetCapacity: 10\nMaxTotalPrice: $1.50\nThe fleet launches 10 On-Demand Instances because the total of $1.00 (10 instances x $0.10) does not exceed the MaxTotalPrice of $1.50 for On-Demand Instances.\nExample: Stop launching On-Demand Instances when maximum total price is reached\nGiven a request for m4.large On-Demand Instances, where:\nOn-Demand Price: $0.10 per hour\nOnDemandTargetCapacity: 10\nMaxTotalPrice: $0.80\nIf the fleet launches the On-Demand target capacity (10 On-Demand Instances), the total cost per hour would be $1.00. This is more than the amount ($0.80) specified for MaxTotalPrice for On-Demand Instances. To prevent spending more than you're willing to pay, the fleet launches only 8 On-Demand Instances (below the On-Demand target capacity) because launching more would exceed the MaxTotalPrice for On-Demand Instances.\nBurstable performance instances\nIf you launch your Spot Instances using a burstable performance instance type, and if you plan to use your burstable performance Spot Instances immediately and for a short duration, with no idle time for accruing CPU credits, we recommend that you launch them in Standard mode to avoid paying higher costs. If you launch burstable performance Spot Instances in Unlimited mode and burst CPU immediately, you'll spend surplus credits for bursting. If you use the instance for a short duration, the instance doesn't have time to accrue CPU credits to pay down the surplus credits, and you are charged for the surplus credits when you terminate the instance.\nUnlimited mode is suitable for burstable performance Spot Instances only if the instance runs long enough to accrue CPU credits for bursting. Otherwise, paying for surplus credits makes burstable performance Spot Instances more expensive than using other instances. For more information, see When to use unlimited mode versus fixed CPU.\nLaunch credits are meant to provide a productive initial launch experience for T2 instances by providing sufficient compute resources to configure the instance. Repeated launches of T2 instances to access new launch credits is not permitted. If you require sustained CPU, you can earn credits (by idling over some period), use Unlimited mode for T2 Spot Instances, or use an instance type with dedicated CPU."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html",
        "content": "When you create an EC2 Fleet or Spot Fleet, you must specify one or more instance types for configuring the On-Demand Instances and Spot Instances in the fleet. As an alternative to manually specifying the instance types, you can specify the attributes that an instance must have, and Amazon EC2 will identify all the instance types with those attributes. This is known as attribute-based instance type selection. For example, you can specify the minimum and maximum number of vCPUs required for your instances, and the fleet will launch the instances using any available instance types that meet those vCPU requirements.\nAttribute-based instance type selection is ideal for workloads and frameworks that can be flexible about what instance types they use, such as when running containers or web \ufb02eets, processing big data, and implementing continuous integration and deployment (CI/CD) tooling.\nBenefits\nAttribute-based instance type selection has the following benefits:\nEasily use the right instance types \u2013 With so many instance types available, finding the right instance types for your workload can be time consuming. When you specify instance attributes, the instance types will automatically have the required attributes for your workload.\nSimplified configuration \u2013 To manually specify multiple instance types for a fleet, you must create a separate launch template override for each instance type. But with attribute-based instance type selection, to provide multiple instance types, you need only specify the instance attributes in the launch template or in a launch template override.\nAutomatic use of new instance types \u2013 When you specify instance attributes rather than instance types, your fleet can use newer generation instance types as they\u2019re released, \"future proofing\" the fleet's configuration.\nInstance type flexibility \u2013 When you specify instance attributes rather than instance types, the fleet can select from a wide range of instance types for launching Spot Instances, which adheres to the Spot best practice of instance type flexibility.\nTopics\nHow attribute-based instance type selection works\nPrice protection\nPerformance protection\nConsiderations\nCreate an EC2 Fleet with attribute-based instance type selection\nCreate a Spot Fleet with attribute-based instance type selection\nExamples of EC2 Fleet configurations that are valid and not valid\nExamples of Spot Fleet configurations that are valid and not valid\nPreview instance types with specified attributes\nHow attribute-based instance type selection works\nTo use attribute-based instance type selection in your fleet configuration, you replace the list of instance types with a list of instance attributes that your instances require. EC2 Fleet or Spot Fleet will launch instances on any available instance types that have the specified instance attributes.\nTopics\nTypes of instance attributes\nWhere to configure attribute-based instance type selection\nHow EC2 Fleet or Spot Fleet uses attribute-based instance type selection when provisioning a fleet\nTypes of instance attributes\nThere are several instance attributes that you can specify to express your compute requirements, such as:\nvCPU count \u2013 The minimum and maximum number of vCPUs per instance.\nMemory \u2013 The minimum and maximum GiBs of memory per instance.\nLocal storage \u2013 Whether to use EBS or instance store volumes for local storage.\nBurstable performance \u2013 Whether to use the T instance family, including T4g, T3a, T3, and T2 types.\nFor a description of each attribute and the default values, see InstanceRequirements in the Amazon EC2 API Reference.\nWhere to configure attribute-based instance type selection\nDepending on whether you use the console or the AWS CLI, you can specify the instance attributes for attribute-based instance type selection as follows:\nIn the console, you can specify the instance attributes in the following fleet configuration components:\nIn a launch template, and then reference the launch template in the fleet request\n(Spot Fleet only) In the fleet request\nIn the AWS CLI, you can specify the instance attributes in one or all of the following fleet configuration components:\nIn a launch template, and then reference the launch template in the fleet request\nIn a launch template override\nIf you want a mix of instances that use different AMIs, you can specify instance attributes in multiple launch template overrides. For example, different instance types can use x86 and Arm-based processors.\n(Spot Fleet only) In a launch specification\nHow EC2 Fleet or Spot Fleet uses attribute-based instance type selection when provisioning a fleet\nEC2 Fleet or Spot Fleet provisions a fleet in the following way:\nIt identifies the instance types that have the specified attributes.\nIt uses price protection to determine which instance types to exclude.\nIt determines the capacity pools from which it will consider launching the instances based on the AWS Regions or Availability Zones that have matching instance types.\nIt applies the specified allocation strategy to determine from which capacity pools to launch the instances.\nNote that attribute-based instance type selection does not pick the capacity pools from which to provision the fleet; that's the job of the allocation strategies.\nIf you specify an allocation strategy, the fleet will launch instances according to the specified allocation strategy.\nFor Spot Instances, attribute-based instance type selection supports the price capacity optimized, capacity optimized, and lowest price allocation strategies. Note that we don't recommend the lowest price Spot allocation strategy because it has the highest risk of interruption for your Spot Instances.\nFor On-Demand Instances, attribute-based instance type selection supports the lowest price allocation strategy.\nIf there is no capacity for the instance types with the specified instance attributes, no instances can be launched, and the fleet returns an error.\nPrice protection\nPrice protection is a feature that prevents your EC2 Fleet or Spot Fleet from using instance types that you would consider too expensive even if they happen to fit the attributes that you specified. To use price protection, you set a price threshold. Then, when Amazon EC2 selects instance types with your attributes, it excludes instance types priced above your threshold.\nThe way that Amazon EC2 calculates the price threshold is as follows:\nAmazon EC2 first identifies the lowest priced instance type from those that match your attributes.\nAmazon EC2 then takes the value (expressed as a percentage) that you specified for the price protection parameter and multiplies it with the price of the identified instance type. The result is the price that is used as the price threshold.\nThere are separate price thresholds for On-Demand Instances and Spot Instances.\nWhen you create a fleet with attribute-based instance type selection, price protection is enabled by default. You can keep the default values, or you can specify your own.\nYou can also turn off price protection. To indicate no price protection threshold, specify a high percentage value, such as 999999.\nTopics\nHow the lowest priced instance type is identified\nOn-Demand Instance price protection\nSpot Instance price protection\nSpecify the price protection threshold\nHow the lowest priced instance type is identified\nAmazon EC2 determines the price to base the price threshold on by identifying the instance type with the lowest price from those that match your specified attributes. It does this in the following way:\nIt first looks at the current generation C, M, or R instance types that match your attributes. If it finds any matches, it identifies the lowest priced instance type.\nIf there is no match, it then looks at any current generation instance types that match your attributes. If it finds any matches, it identifies the lowest priced instance type.\nIf there is no match, it then looks at any previous generation instance types that match your attributes, and identifies the lowest priced instance type.\nOn-Demand Instance price protection\nThe price protection threshold for On-Demand instance types is calculated as a percentage higher than the identified lowest priced On-Demand instance type (OnDemandMaxPricePercentageOverLowestPrice). You specify the percentage higher that you're willing to pay. If you don't specify this parameter, then a default value of 20 is used to calculate a price protection threshold of 20% higher than the identified price.\nFor example, if the identified On-Demand instance price is 0.4271, and you specify 25, then the price threshold is 25% more than 0.4271. It is calculated as follows: 0.4271 * 1.25 = 0.533875. The calculated price is the maximum you're willing to pay for On-Demand Instances, and, in this example, Amazon EC2 will exclude any On-Demand instance types that cost more than 0.533875.\nSpot Instance price protection\nBy default, Amazon EC2 will automatically apply optimal Spot Instance price protection to consistently select from a wide range of instance types. You can also manually set the price protection yourself. However, letting Amazon EC2 do it for you can improve the likelihood that your Spot capacity is fulfilled.\nYou can manually specify the price protection using one of the following options. If you manually set the price protection, we recommend using the first option.\nA percentage of the identified lowest priced On-Demand instance type [MaxSpotPriceAsPercentageOfOptimalOnDemandPrice]\nFor example, if the identified On-Demand instance type price is 0.4271, and you specify 60, then the price threshold is 60% of 0.4271. It is calculated as follows: 0.4271 * 0.60 = 0.25626. The calculated price is the maximum you're willing to pay for Spot Instances, and, in this example, Amazon EC2 will exclude any Spot instance types that cost more than 0.25626.\nA percentage higher than the identified lowest priced Spot instance type [SpotMaxPricePercentageOverLowestPrice]\nFor example, if the identified Spot instance type price is 0.1808, and you specify 25, then the price threshold is 25% more than 0.1808. It is calculated as follows: 0.1808 * 1.25 = 0.226. The calculated price is the maximum you're willing to pay for Spot Instances, and, in this example, Amazon EC2 will exclude any Spot instance types that cost more than 0.266. We do not recommend using this parameter because Spot prices can fluctuate, and therefore your price protection threshold might also fluctuate.\nSpecify the price protection threshold\nTo specify the price protection threshold using the AWS CLI\nWhile creating an EC2 Fleet or Spot Fleet using the AWS CLI, configure the fleet for attribute-based instance type selection, and then do the following:\nTo specify the On-Demand Instance price protection threshold, in the JSON configuration file, in the InstanceRequirements structure, for OnDemandMaxPricePercentageOverLowestPrice, enter the price protection threshold as a percentage.\nTo specify the Spot Instance price protection threshold, in the JSON configuration file, in the InstanceRequirements structure, specify one of the following parameters:\nFor MaxSpotPriceAsPercentageOfOptimalOnDemandPrice, enter the price protection threshold as a percentage.\nFor SpotMaxPricePercentageOverLowestPrice, enter the price protection threshold as a percentage.\nFor more information, see Create an EC2 Fleet with attribute-based instance type selection or Create a Spot Fleet with attribute-based instance type selection.\n(Spot Fleet only) To specify the price protection threshold using the console\nWhile creating a Spot Fleet in the console, configure the fleet for attribute-based instance type selection, and then do the following:\nTo specify the On-Demand Instance price protection threshold, under Additional instance attribute, choose On-demand price protection, choose Add attribute, and then enter the price protection threshold as a percentage.\nTo specify the Spot Instance price protection threshold, Additional instance attribute, choose Spot price protection, choose Add attribute, choose a base value on which to base your price, and then enter the price protection threshold as a percentage.\nNote\nWhen creating the fleet, if you set TargetCapacityUnitType to vcpu or memory-mib, the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per-instance price.\nPerformance protection\nPerformance protection is a feature that ensures your EC2 Fleet or Spot Fleet uses instance types that are similar to or exceed a specified performance baseline. To use performance protection, you specify an instance family as a baseline reference. The capabilities of the specified instance family establish the lowest acceptable level of performance. When Amazon EC2 selects instance types for your fleet, it considers your specified attributes and the performance baseline. Instance types that fall below the performance baseline are automatically excluded from selection, even if they match your other specified attributes. This ensures that all selected instance types offer performance similar to or better than the baseline established by the specified instance family. Amazon EC2 uses this baseline to guide instance type selection, but there is no guarantee that the selected instance types will always exceed the baseline for every application.\nCurrently, this feature only supports CPU performance as a baseline performance factor. The CPU performance of the specified instance family's CPU processor serves as the performance baseline, ensuring that selected instance types are similar to or exceed this baseline. Instance families with the same CPU processors lead to the same filtering results, even if their network or disk performance differs. For example, specifying either c6in or c6i as the baseline reference would produce identical performance-based filtering results because both instance families use the same CPU processor.\nUnsupported instance families\nThe following instance families are not supported for performance protection:\nc1\ng3 | g3s\nhpc7g\nm1 | m2\nmac1 | mac2 | mac2-m1ultra | mac2-m2 | mac2-m2pro\np3dn | p4d | p5\nt1\nu-12tb1 | u-18tb1 | u-24tb1 | u-3tb1 | u-6tb1 | u-9tb1 | u7i-12tb | u7in-16tb | u7in-24tb | u7in-32tb\nIf you enable performance protection by specifying a supported instance family, the returned instance types will exclude the above unsupported instance families.\nIf you specify an unsupported instance family as a value for baseline performance, the API returns an empty response for GetInstanceTypesFromInstanceRequirements and an exception for CreateFleet, RequestSpotFleet, ModifyFleet, and ModifySpotFleetRequest.\nExample: Set a CPU performance baseline\nIn the following example, the instance requirement is to launch with instance types that have CPU cores that are as performant as the c6i instance family. This will filter out instance types with less performant CPU processors, even if they meet your other specified instance requirements such as the number of vCPUs. For example, if your specified instance attributes include 4 vCPUs and 16 GB of memory, an instance type with these attributes but with lower CPU performance than c6i will be excluded from selection.\n\"BaselinePerformanceFactors\": {\n        \"Cpu\": {\n            \"References\": [\n                {\n                    \"InstanceFamily\": \"c6i\"\n                }\n            ]\n        }\nConsiderations\nYou can specify either instance types or instance attributes in an EC2 Fleet or Spot Fleet, but not both at the same time.\nWhen using the CLI, the launch template overrides will override the launch template. For example, if the launch template contains an instance type and the launch template override contains instance attributes, the instances that are identified by the instance attributes will override the instance type in the launch template.\nWhen using the CLI, when you specify instance attributes as overrides, you can't also specify weights or priorities.\nYou can specify a maximum of four InstanceRequirements structures in a request configuration.\nCreate an EC2 Fleet with attribute-based instance type selection\nYou can configure an EC2 Fleet to use attribute-based instance type selection by using the AWS CLI.\nTo create an EC2 Fleet with attribute-based instance type selection (AWS CLI)\nUse the create-fleet (AWS CLI) command to create an EC2 Fleet. Specify the fleet configuration in a JSON file.\naws ec2 create-fleet \\\n    --region us-east-1 \\\n    --cli-input-json file://file_name.json\nExample file_name.json file\nThe following example contains the parameters that configure an EC2 Fleet to use attribute-based instance type selection, and is followed by a text explanation.\n{\n \"SpotOptions\": {\n  \"AllocationStrategy\": \"price-capacity-optimized\"\n },\n \"LaunchTemplateConfigs\": [{\n  \"LaunchTemplateSpecification\": {\n   \"LaunchTemplateName\": \"my-launch-template\",\n   \"Version\": \"1\"\n  },\n  \"Overrides\": [{\n   \"InstanceRequirements\": {\n    \"VCpuCount\": {\n     \"Min\": 2\n    },\n    \"MemoryMiB\": {\n     \"Min\": 4\n    }\n   }\n  }]\n }],\n \"TargetCapacitySpecification\": {\n  \"TotalTargetCapacity\": 20,\n  \"DefaultTargetCapacityType\": \"spot\"\n },\n \"Type\": \"instant\"\n}\nThe attributes for attribute-based instance type selection are specified in the InstanceRequirements structure. In this example, two attributes are specified:\nVCpuCount \u2013 A minimum of 2 vCPUs is specified. Because no maximum is specified, there is no maximum limit.\nMemoryMiB \u2013 A minimum of 4 MiB of memory is specified. Because no maximum is specified, there is no maximum limit.\nAny instance types that have 2 or more vCPUs and 4 MiB or more of memory will be identified. However, price protection and the allocation strategy might exclude some instance types when EC2 Fleet provisions the fleet.\nFor a list and descriptions of all the possible attributes that you can specify, see InstanceRequirements in the Amazon EC2 API Reference.\nNote\nWhen InstanceRequirements is included in the fleet configuration, InstanceType and WeightedCapacity must be excluded; they cannot determine the fleet configuration at the same time as instance attributes.\nThe JSON also contains the following fleet configuration:\n\"AllocationStrategy\": \"price-capacity-optimized\" \u2013 The allocation strategy for the Spot Instances in the fleet.\n\"LaunchTemplateName\": \"my-launch-template\", \"Version\": \"1\" \u2013 The launch template contains some instance configuration information, but if any instance types are specified, they will be overridden by the attributes that are specified in InstanceRequirements.\n\"TotalTargetCapacity\": 20 \u2013 The target capacity is 20 instances.\n\"DefaultTargetCapacityType\": \"spot\" \u2013 The default capacity is Spot Instances.\n\"Type\": \"instant\" \u2013 The request type for the fleet is instant.\nCreate a Spot Fleet with attribute-based instance type selection\nYou can configure a fleet to use attribute-based instance type selection by using the Amazon EC2 console or the AWS CLI.\nTopics\nCreate a Spot Fleet using the console\nCreate a Spot Fleet using the AWS CLI\nCreate a Spot Fleet using the console\nTo configure a Spot Fleet for attribute-based instance type selection (console)\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Spot Requests, and then choose Request Spot Instances.\nFollow the steps to create a Spot Fleet. For more information, see Create a Spot Fleet request using defined parameters (console).\nWhile creating the Spot Fleet, configure the fleet for attribute-based instance type selection as follows:\nFor Instance type requirements, choose Specify instance attributes that match your compute requirements.\nFor vCPUs, enter the desired minimum and maximum number of vCPUs. To specify no limit, select No minimum, No maximum, or both.\nFor Memory (GiB), enter the desired minimum and maximum amount of memory. To specify no limit, select No minimum, No maximum, or both.\n(Optional) For Additional instance attributes, you can optionally specify one or more attributes to express your compute requirements in more detail. Each additional attribute adds further constraints to your request.\n(Optional) Expand Preview matching instance types to view the instance types that have your specified attributes.\nCreate a Spot Fleet using the AWS CLI\nTo configure a Spot Fleet for attribute-based instance type selection using the AWS CLI\nUse the request-spot-fleet command to create a Spot Fleet. Specify the fleet configuration in a JSON file.\naws ec2 request-spot-fleet \\\n    --region us-east-1 \\\n    --spot-fleet-request-config file://file_name.json\nExample file_name.json file\nThe following example contains the parameters that configure a Spot Fleet to use attribute-based instance type selection, and is followed by a text explanation.\n{\n \"AllocationStrategy\": \"priceCapacityOptimized\",\n \"TargetCapacity\": 20,\n \"Type\": \"request\",\n \"LaunchTemplateConfigs\": [{\n  \"LaunchTemplateSpecification\": {\n   \"LaunchTemplateName\": \"my-launch-template\",\n   \"Version\": \"1\"\n  },\n  \"Overrides\": [{\n   \"InstanceRequirements\": {\n    \"VCpuCount\": {\n     \"Min\": 2\n    },\n    \"MemoryMiB\": {\n     \"Min\": 4\n    }\n   }\n  }]\n }]\n}\nThe attributes for attribute-based instance type selection are specified in the InstanceRequirements structure. In this example, two attributes are specified:\nVCpuCount \u2013 A minimum of 2 vCPUs is specified. Because no maximum is specified, there is no maximum limit.\nMemoryMiB \u2013 A minimum of 4 MiB of memory is specified. Because no maximum is specified, there is no maximum limit.\nAny instance types that have 2 or more vCPUs and 4 MiB or more of memory will be identified. However, price protection and the allocation strategy might exclude some instance types when Spot Fleet provisions the fleet.\nFor a list and descriptions of all the possible attributes that you can specify, see InstanceRequirements in the Amazon EC2 API Reference.\nNote\nWhen InstanceRequirements is included in the fleet configuration, InstanceType and WeightedCapacity must be excluded; they cannot determine the fleet configuration at the same time as instance attributes.\nThe JSON also contains the following fleet configuration:\n\"AllocationStrategy\": \"priceCapacityOptimized\" \u2013 The allocation strategy for the Spot Instances in the fleet.\n\"LaunchTemplateName\": \"my-launch-template\", \"Version\": \"1\" \u2013 The launch template contains some instance configuration information, but if any instance types are specified, they will be overridden by the attributes that are specified in InstanceRequirements.\n\"TargetCapacity\": 20 \u2013 The target capacity is 20 instances.\n\"Type\": \"request\" \u2013 The request type for the fleet is request.\nExamples of EC2 Fleet configurations that are valid and not valid\nIf you use the AWS CLI to create an EC2 Fleet, you must make sure that your fleet configuration is valid. The following examples show configurations that are valid and not valid.\nConfigurations are considered not valid when they contain the following:\nA single Overrides structure with both InstanceRequirements and InstanceType\nTwo Overrides structures, one with InstanceRequirements and the other with InstanceType\nTwo InstanceRequirements structures with overlapping attribute values within the same LaunchTemplateSpecification\nExample configurations\nValid configuration: Single launch template with overrides\nValid configuration: Single launch template with multiple InstanceRequirements\nValid configuration: Two launch templates, each with overrides\nValid configuration: Only InstanceRequirements specified, no overlapping attribute values\nConfiguration not valid: Overrides contain InstanceRequirements and InstanceType\nConfiguration not valid: Two Overrides contain InstanceRequirements and InstanceType\nConfiguration not valid: Overlapping attribute values\nValid configuration: Single launch template with overrides\nThe following configuration is valid. It contains one launch template and one Overrides structure containing one InstanceRequirements structure. A text explanation of the example configuration follows.\n{\n        \"LaunchTemplateConfigs\": [\n        {\n            \"LaunchTemplateSpecification\": {\n                \"LaunchTemplateName\": \"My-launch-template\",\n                \"Version\": \"1\"\n                },\n                \"Overrides\": [\n                {\n                    \"InstanceRequirements\": {\n                        \"VCpuCount\": {\n                            \"Min\": 2,\n                            \"Max\": 8\n                        },\n                        \"MemoryMib\": {\n                            \"Min\": 0,\n                            \"Max\": 10240\n                        },\n                        \"MemoryGiBPerVCpu\": {\n                            \"Max\": 10000\n                        },\n                        \"RequireHibernateSupport\": true\n                    }\n                }\n            ]\n        }\n    ],\n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 5000,\n        \"DefaultTargetCapacityType\": \"spot\",\n        \"TargetCapacityUnitType\": \"vcpu\"\n        }\n    }\n}\nInstanceRequirements\nTo use attribute-based instance selection, you must include the InstanceRequirements structure in your fleet configuration, and specify the desired attributes for the instances in the fleet.\nIn the preceding example, the following instance attributes are specified:\nVCpuCount \u2013 The instance types must have a minimum of 2 and a maximum of 8 vCPUs.\nMemoryMiB \u2013 The instance types must have a maximum of 10240 MiB of memory. A minimum of 0 indicates no minimum limit.\nMemoryGiBPerVCpu \u2013 The instance types must have a maximum of 10,000 GiB of memory per vCPU. The Min parameter is optional. By omitting it, you indicate no minimum limit.\nTargetCapacityUnitType\nThe TargetCapacityUnitType parameter specifies the unit for the target capacity. In the example, the target capacity is 5000 and the target capacity unit type is vcpu, which together specify a desired target capacity of 5,000 vCPUs. EC2 Fleet will launch enough instances so that the total number of vCPUs in the fleet is 5,000 vCPUs.\nValid configuration: Single launch template with multiple InstanceRequirements\nThe following configuration is valid. It contains one launch template and one Overrides structure containing two InstanceRequirements structures. The attributes specified in InstanceRequirements are valid because the values do not overlap\u2014the first InstanceRequirements structure specifies a VCpuCount of 0-2 vCPUs, while the second InstanceRequirements structure specifies 4-8 vCPUs.\n{\n        \"LaunchTemplateConfigs\": [\n            {\n                \"LaunchTemplateSpecification\": {\n                    \"LaunchTemplateName\": \"MyLaunchTemplate\",\n                    \"Version\": \"1\"\n                },\n                \"Overrides\": [\n                {\n                    \"InstanceRequirements\": {\n                        \"VCpuCount\": {\n                            \"Min\": 0,\n                            \"Max\": 2\n                        },\n                        \"MemoryMiB\": {\n                            \"Min\": 0\n                        }\n                    }\n                },\n                {\n                    \"InstanceRequirements\": {\n                        \"VCpuCount\": {\n                            \"Min\": 4,\n                            \"Max\": 8\n                        },\n                        \"MemoryMiB\": {\n                            \"Min\": 0\n                        }\n                    }\n                }\n              ]\n            }\n        ],\n        \"TargetCapacitySpecification\": {\n            \"TotalTargetCapacity\": 1,\n            \"DefaultTargetCapacityType\": \"spot\"\n        }\n    }\n}\nValid configuration: Two launch templates, each with overrides\nThe following configuration is valid. It contains two launch templates, each with one Overrides structure containing one InstanceRequirements structure. This configuration is useful for arm and x86 architecture support in the same fleet.\n{\n        \"LaunchTemplateConfigs\": [\n            {\n                \"LaunchTemplateSpecification\": {\n                    \"LaunchTemplateName\": \"armLaunchTemplate\",\n                    \"Version\": \"1\"\n                },\n                \"Overrides\": [\n                {\n                    \"InstanceRequirements\": {\n                        \"VCpuCount\": {\n                            \"Min\": 0,\n                            \"Max\": 2\n                        },\n                        \"MemoryMiB\": {\n                            \"Min\": 0\n                        }\n                    }\n                },\n                {\n                \"LaunchTemplateSpecification\": {\n                    \"LaunchTemplateName\": \"x86LaunchTemplate\",\n                    \"Version\": \"1\"\n                },\n                \"Overrides\": [\n                {\n                    \"InstanceRequirements\": {\n                        \"VCpuCount\": {\n                            \"Min\": 0,\n                            \"Max\": 2\n                        },\n                        \"MemoryMiB\": {\n                            \"Min\": 0\n                        }\n                    }\n                }\n              ]\n            }\n        ],\n         \"TargetCapacitySpecification\": {\n            \"TotalTargetCapacity\": 1,\n            \"DefaultTargetCapacityType\": \"spot\"\n        }\n    }\n}\nValid configuration: Only InstanceRequirements specified, no overlapping attribute values\nThe following configuration is valid. It contains two LaunchTemplateSpecification structures, each with a launch template and an Overrides structure containing an InstanceRequirements structure. The attributes specified in InstanceRequirements are valid because the values do not overlap\u2014the first InstanceRequirements structure specifies a VCpuCount of 0-2 vCPUs, while the second InstanceRequirements structure specifies 4-8 vCPUs.\n{\n        \"LaunchTemplateConfigs\": [\n            {\n                \"LaunchTemplateSpecification\": {\n                    \"LaunchTemplateName\": \"MyLaunchTemplate\",\n                    \"Version\": \"1\"\n                },\n                \"Overrides\": [\n                {\n                    \"InstanceRequirements\": {\n                        \"VCpuCount\": {\n                            \"Min\": 0,\n                            \"Max\": 2\n                        },\n                        \"MemoryMiB\": {\n                            \"Min\": 0\n                        }\n                    }\n                }\n              ]\n            },\n            {\n                \"LaunchTemplateSpecification\": {\n                    \"LaunchTemplateName\": \"MyOtherLaunchTemplate\",\n                    \"Version\": \"1\"\n                },\n                \"Overrides\": [\n                {\n                    \"InstanceRequirements\": {\n                        \"VCpuCount\": {\n                            \"Min\": 4,\n                            \"Max\": 8\n                        },\n                        \"MemoryMiB\": {\n                            \"Min\": 0\n                        }\n                    }\n                }\n              ]\n            }\n        ],\n        \"TargetCapacitySpecification\": {\n            \"TotalTargetCapacity\": 1,\n            \"DefaultTargetCapacityType\": \"spot\"\n        }\n    }\n}\nConfiguration not valid: Overrides contain InstanceRequirements and InstanceType\nThe following configuration is not valid. The Overrides structure contains both InstanceRequirements and InstanceType. For the Overrides, you can specify either InstanceRequirements or InstanceType, but not both.\n{\n        \"LaunchTemplateConfigs\": [\n            {\n                \"LaunchTemplateSpecification\": {\n                    \"LaunchTemplateName\": \"MyLaunchTemplate\",\n                    \"Version\": \"1\"\n                },\n                \"Overrides\": [\n                {\n                    \"InstanceRequirements\": {\n                        \"VCpuCount\": {\n                            \"Min\": 0,\n                            \"Max\": 2\n                        },\n                        \"MemoryMiB\": {\n                            \"Min\": 0\n                        }\n                    }\n                },\n                {\n                    \"InstanceType\": \"m5.large\"\n                }\n              ]\n            }\n        ],\n        \"TargetCapacitySpecification\": {\n            \"TotalTargetCapacity\": 1,\n            \"DefaultTargetCapacityType\": \"spot\"\n        }\n    }\n}\nConfiguration not valid: Two Overrides contain InstanceRequirements and InstanceType\nThe following configuration is not valid. The Overrides structures contain both InstanceRequirements and InstanceType. You can specify either InstanceRequirements or InstanceType, but not both, even if they're in different Overrides structures.\n{\n        \"LaunchTemplateConfigs\": [\n            {\n                \"LaunchTemplateSpecification\": {\n                    \"LaunchTemplateName\": \"MyLaunchTemplate\",\n                    \"Version\": \"1\"\n                },\n                \"Overrides\": [\n                {\n                    \"InstanceRequirements\": {\n                        \"VCpuCount\": {\n                            \"Min\": 0,\n                            \"Max\": 2\n                        },\n                        \"MemoryMiB\": {\n                            \"Min\": 0\n                        }\n                    }\n                }\n              ]\n            },\n            {\n                \"LaunchTemplateSpecification\": {\n                    \"LaunchTemplateName\": \"MyOtherLaunchTemplate\",\n                    \"Version\": \"1\"\n                },\n                \"Overrides\": [\n                {\n                    \"InstanceType\": \"m5.large\"\n                }\n              ]\n            }\n        ],\n         \"TargetCapacitySpecification\": {\n            \"TotalTargetCapacity\": 1,\n            \"DefaultTargetCapacityType\": \"spot\"\n        }\n    }\n}\nConfiguration not valid: Overlapping attribute values\nThe following configuration is not valid. The two InstanceRequirements structures each contain \"VCpuCount\": {\"Min\": 0, \"Max\": 2}. The values for these attributes overlap, which will result in duplicate capacity pools.\n{\n        \"LaunchTemplateConfigs\": [\n            {\n                \"LaunchTemplateSpecification\": {\n                    \"LaunchTemplateName\": \"MyLaunchTemplate\",\n                    \"Version\": \"1\"\n                },\n                \"Overrides\": [\n                {\n                    \"InstanceRequirements\": {\n                        \"VCpuCount\": {\n                            \"Min\": 0,\n                            \"Max\": 2\n                        },\n                        \"MemoryMiB\": {\n                            \"Min\": 0\n                        }\n                    },\n                    {\n                      \"InstanceRequirements\": {\n                          \"VCpuCount\": {\n                              \"Min\": 0,\n                              \"Max\": 2\n                          },\n                          \"MemoryMiB\": {\n                              \"Min\": 0\n                          }\n                      }\n                  }\n                }\n              ]\n            }\n        ],\n         \"TargetCapacitySpecification\": {\n            \"TotalTargetCapacity\": 1,\n            \"DefaultTargetCapacityType\": \"spot\"\n        }\n    }\n}\nExamples of Spot Fleet configurations that are valid and not valid\nIf you use the AWS CLI to create a Spot Fleet, you must make sure that your fleet configuration is valid. The following examples show configurations that are valid and not valid.\nConfigurations are considered not valid when they contain the following:\nA single Overrides structure with both InstanceRequirements and InstanceType\nTwo Overrides structures, one with InstanceRequirements and the other with InstanceType\nTwo InstanceRequirements structures with overlapping attribute values within the same LaunchTemplateSpecification\nExample configurations\nValid configuration: Single launch template with overrides\nValid configuration: Single launch template with multiple InstanceRequirements\nValid configuration: Two launch templates, each with overrides\nValid configuration: Only InstanceRequirements specified, no overlapping attribute values\nConfiguration not valid: Overrides contain InstanceRequirements and InstanceType\nConfiguration not valid: Two Overrides contain InstanceRequirements and InstanceType\nConfiguration not valid: Overlapping attribute values\nValid configuration: Single launch template with overrides\nThe following configuration is valid. It contains one launch template and one Overrides structure containing one InstanceRequirements structure. A text explanation of the example configuration follows.\n{\n    \"SpotFleetRequestConfig\": {\n        \"AllocationStrategy\": \"priceCapacityOptimized\",\n        \"ExcessCapacityTerminationPolicy\": \"default\",\n        \"IamFleetRole\": \"arn:aws:iam::000000000000:role/aws-ec2-spot-fleet-tagging-role\",\n        \"LaunchTemplateConfigs\": [\n        {\n            \"LaunchTemplateSpecification\": {\n                \"LaunchTemplateName\": \"My-launch-template\",\n                \"Version\": \"1\"\n                },\n                \"Overrides\": [\n                {\n                    \"InstanceRequirements\": {\n                        \"VCpuCount\": {\n                            \"Min\": 2,\n                            \"Max\": 8\n                        },\n                        \"MemoryMib\": {\n                            \"Min\": 0,\n                            \"Max\": 10240\n                        },\n                        \"MemoryGiBPerVCpu\": {\n                            \"Max\": 10000\n                        },\n                        \"RequireHibernateSupport\": true\n                    }\n                }\n            ]\n        }\n    ],\n        \"TargetCapacity\": 5000,\n            \"OnDemandTargetCapacity\": 0,\n            \"TargetCapacityUnitType\": \"vcpu\"\n    }\n}\nInstanceRequirements\nTo use attribute-based instance selection, you must include the InstanceRequirements structure in your fleet configuration, and specify the desired attributes for the instances in the fleet.\nIn the preceding example, the following instance attributes are specified:\nVCpuCount \u2013 The instance types must have a minimum of 2 and a maximum of 8 vCPUs.\nMemoryMiB \u2013 The instance types must have a maximum of 10240 MiB of memory. A minimum of 0 indicates no minimum limit.\nMemoryGiBPerVCpu \u2013 The instance types must have a maximum of 10,000 GiB of memory per vCPU. The Min parameter is optional. By omitting it, you indicate no minimum limit.\nTargetCapacityUnitType\nThe TargetCapacityUnitType parameter specifies the unit for the target capacity. In the example, the target capacity is 5000 and the target capacity unit type is vcpu, which together specify a desired target capacity of 5,000 vCPUs. Spot Fleet will launch enough instances so that the total number of vCPUs in the fleet is 5,000 vCPUs.\nValid configuration: Single launch template with multiple InstanceRequirements\nThe following configuration is valid. It contains one launch template and one Overrides structure containing two InstanceRequirements structures. The attributes specified in InstanceRequirements are valid because the values do not overlap\u2014the first InstanceRequirements structure specifies a VCpuCount of 0-2 vCPUs, while the second InstanceRequirements structure specifies 4-8 vCPUs.\n{\n    \"SpotFleetRequestConfig\": {\n        \"AllocationStrategy\": \"priceCapacityOptimized\",\n        \"ExcessCapacityTerminationPolicy\": \"default\",\n        \"IamFleetRole\": \"arn:aws:iam::000000000000:role/aws-ec2-spot-fleet-tagging-role\",\n        \"LaunchTemplateConfigs\": [\n            {\n                \"LaunchTemplateSpecification\": {\n                    \"LaunchTemplateName\": \"MyLaunchTemplate\",\n                    \"Version\": \"1\"\n                },\n                \"Overrides\": [\n                {\n                    \"InstanceRequirements\": {\n                        \"VCpuCount\": {\n                            \"Min\": 0,\n                            \"Max\": 2\n                        },\n                        \"MemoryMiB\": {\n                            \"Min\": 0\n                        }\n                    }\n                },\n                {\n                    \"InstanceRequirements\": {\n                        \"VCpuCount\": {\n                            \"Min\": 4,\n                            \"Max\": 8\n                        },\n                        \"MemoryMiB\": {\n                            \"Min\": 0\n                        }\n                    }\n                }\n              ]\n            }\n        ],\n        \"TargetCapacity\": 1,\n        \"OnDemandTargetCapacity\": 0,\n        \"Type\": \"maintain\"\n    }\n}\nValid configuration: Two launch templates, each with overrides\nThe following configuration is valid. It contains two launch templates, each with one Overrides structure containing one InstanceRequirements structure. This configuration is useful for arm and x86 architecture support in the same fleet.\n{\n    \"SpotFleetRequestConfig\": {\n        \"AllocationStrategy\": \"priceCapacityOptimized\",\n        \"ExcessCapacityTerminationPolicy\": \"default\",\n        \"IamFleetRole\": \"arn:aws:iam::000000000000:role/aws-ec2-spot-fleet-tagging-role\",\n        \"LaunchTemplateConfigs\": [\n            {\n                \"LaunchTemplateSpecification\": {\n                    \"LaunchTemplateName\": \"armLaunchTemplate\",\n                    \"Version\": \"1\"\n                },\n                \"Overrides\": [\n                {\n                    \"InstanceRequirements\": {\n                        \"VCpuCount\": {\n                            \"Min\": 0,\n                            \"Max\": 2\n                        },\n                        \"MemoryMiB\": {\n                            \"Min\": 0\n                        }\n                    }\n                },\n                {\n                \"LaunchTemplateSpecification\": {\n                    \"LaunchTemplateName\": \"x86LaunchTemplate\",\n                    \"Version\": \"1\"\n                },\n                \"Overrides\": [\n                {\n                    \"InstanceRequirements\": {\n                        \"VCpuCount\": {\n                            \"Min\": 0,\n                            \"Max\": 2\n                        },\n                        \"MemoryMiB\": {\n                            \"Min\": 0\n                        }\n                    }\n                }\n              ]\n            }\n        ],\n        \"TargetCapacity\": 1,\n        \"OnDemandTargetCapacity\": 0,\n        \"Type\": \"maintain\"\n    }\n}\nValid configuration: Only InstanceRequirements specified, no overlapping attribute values\nThe following configuration is valid. It contains two LaunchTemplateSpecification structures, each with a launch template and an Overrides structure containing an InstanceRequirements structure. The attributes specified in InstanceRequirements are valid because the values do not overlap\u2014the first InstanceRequirements structure specifies a VCpuCount of 0-2 vCPUs, while the second InstanceRequirements structure specifies 4-8 vCPUs.\n{\n    \"SpotFleetRequestConfig\": {\n        \"AllocationStrategy\": \"priceCapacityOptimized\",\n        \"ExcessCapacityTerminationPolicy\": \"default\",\n        \"IamFleetRole\": \"arn:aws:iam::000000000000:role/aws-ec2-spot-fleet-tagging-role\",\n        \"LaunchTemplateConfigs\": [\n            {\n                \"LaunchTemplateSpecification\": {\n                    \"LaunchTemplateName\": \"MyLaunchTemplate\",\n                    \"Version\": \"1\"\n                },\n                \"Overrides\": [\n                {\n                    \"InstanceRequirements\": {\n                        \"VCpuCount\": {\n                            \"Min\": 0,\n                            \"Max\": 2\n                        },\n                        \"MemoryMiB\": {\n                            \"Min\": 0\n                        }\n                    }\n                }\n              ]\n            },\n            {\n                \"LaunchTemplateSpecification\": {\n                    \"LaunchTemplateName\": \"MyOtherLaunchTemplate\",\n                    \"Version\": \"1\"\n                },\n                \"Overrides\": [\n                {\n                    \"InstanceRequirements\": {\n                        \"VCpuCount\": {\n                            \"Min\": 4,\n                            \"Max\": 8\n                        },\n                        \"MemoryMiB\": {\n                            \"Min\": 0\n                        }\n                    }\n                }\n              ]\n            }\n        ],\n        \"TargetCapacity\": 1,\n        \"OnDemandTargetCapacity\": 0,\n        \"Type\": \"maintain\"\n    }\n}\nConfiguration not valid: Overrides contain InstanceRequirements and InstanceType\nThe following configuration is not valid. The Overrides structure contains both InstanceRequirements and InstanceType. For the Overrides, you can specify either InstanceRequirements or InstanceType, but not both.\n{\n    \"SpotFleetRequestConfig\": {\n        \"AllocationStrategy\": \"priceCapacityOptimized\",\n        \"ExcessCapacityTerminationPolicy\": \"default\",\n        \"IamFleetRole\": \"arn:aws:iam::000000000000:role/aws-ec2-spot-fleet-tagging-role\",\n        \"LaunchTemplateConfigs\": [\n            {\n                \"LaunchTemplateSpecification\": {\n                    \"LaunchTemplateName\": \"MyLaunchTemplate\",\n                    \"Version\": \"1\"\n                },\n                \"Overrides\": [\n                {\n                    \"InstanceRequirements\": {\n                        \"VCpuCount\": {\n                            \"Min\": 0,\n                            \"Max\": 2\n                        },\n                        \"MemoryMiB\": {\n                            \"Min\": 0\n                        }\n                    }\n                },\n                {\n                    \"InstanceType\": \"m5.large\"\n                }\n              ]\n            }\n        ],\n        \"TargetCapacity\": 1,\n        \"OnDemandTargetCapacity\": 0,\n        \"Type\": \"maintain\"\n    }\n}\nConfiguration not valid: Two Overrides contain InstanceRequirements and InstanceType\nThe following configuration is not valid. The Overrides structures contain both InstanceRequirements and InstanceType. You can specify either InstanceRequirements or InstanceType, but not both, even if they're in different Overrides structures.\n{\n    \"SpotFleetRequestConfig\": {\n        \"AllocationStrategy\": \"priceCapacityOptimized\",\n        \"ExcessCapacityTerminationPolicy\": \"default\",\n        \"IamFleetRole\": \"arn:aws:iam::000000000000:role/aws-ec2-spot-fleet-tagging-role\",\n        \"LaunchTemplateConfigs\": [\n            {\n                \"LaunchTemplateSpecification\": {\n                    \"LaunchTemplateName\": \"MyLaunchTemplate\",\n                    \"Version\": \"1\"\n                },\n                \"Overrides\": [\n                {\n                    \"InstanceRequirements\": {\n                        \"VCpuCount\": {\n                            \"Min\": 0,\n                            \"Max\": 2\n                        },\n                        \"MemoryMiB\": {\n                            \"Min\": 0\n                        }\n                    }\n                }\n              ]\n            },\n            {\n                \"LaunchTemplateSpecification\": {\n                    \"LaunchTemplateName\": \"MyOtherLaunchTemplate\",\n                    \"Version\": \"1\"\n                },\n                \"Overrides\": [\n                {\n                    \"InstanceType\": \"m5.large\"\n                }\n              ]\n            }\n        ],\n        \"TargetCapacity\": 1,\n        \"OnDemandTargetCapacity\": 0,\n        \"Type\": \"maintain\"\n    }\n}\nConfiguration not valid: Overlapping attribute values\nThe following configuration is not valid. The two InstanceRequirements structures each contain \"VCpuCount\": {\"Min\": 0, \"Max\": 2}. The values for these attributes overlap, which will result in duplicate capacity pools.\n{\n    \"SpotFleetRequestConfig\": {\n        \"AllocationStrategy\": \"priceCapacityOptimized\",\n        \"ExcessCapacityTerminationPolicy\": \"default\",\n        \"IamFleetRole\": \"arn:aws:iam::000000000000:role/aws-ec2-spot-fleet-tagging-role\",\n        \"LaunchTemplateConfigs\": [\n            {\n                \"LaunchTemplateSpecification\": {\n                    \"LaunchTemplateName\": \"MyLaunchTemplate\",\n                    \"Version\": \"1\"\n                },\n                \"Overrides\": [\n                {\n                    \"InstanceRequirements\": {\n                        \"VCpuCount\": {\n                            \"Min\": 0,\n                            \"Max\": 2\n                        },\n                        \"MemoryMiB\": {\n                            \"Min\": 0\n                        }\n                    },\n                    {\n                      \"InstanceRequirements\": {\n                          \"VCpuCount\": {\n                              \"Min\": 0,\n                              \"Max\": 2\n                          },\n                          \"MemoryMiB\": {\n                              \"Min\": 0\n                          }\n                      }\n                  }\n                }\n              ]\n            }\n        ],\n        \"TargetCapacity\": 1,\n        \"OnDemandTargetCapacity\": 0,\n        \"Type\": \"maintain\"\n    }\n}\nPreview instance types with specified attributes\nYou can use the get-instance-types-from-instance-requirements command to preview the instance types that match the attributes that you specify. This is especially useful for working out what attributes to specify in your request configuration without launching any instances. Note that the command does not consider available capacity.\nTo preview a list of instance types by specifying attributes using the AWS CLI\n(Optional) To generate all of the possible attributes that can be specified, use the get-instance-types-from-instance-requirements command and the --generate-cli-skeleton parameter. You can optionally direct the output to a file to save it by using input > attributes.json.\naws ec2 get-instance-types-from-instance-requirements \\\n    --region us-east-1 \\\n    --generate-cli-skeleton input > attributes.json\nExpected output\n{\n    \"DryRun\": true,\n    \"ArchitectureTypes\": [\n        \"i386\"\n    ],\n    \"VirtualizationTypes\": [\n        \"hvm\"\n    ],\n    \"InstanceRequirements\": {\n        \"VCpuCount\": {\n            \"Min\": 0,\n            \"Max\": 0\n        },\n        \"MemoryMiB\": {\n            \"Min\": 0,\n            \"Max\": 0\n        },\n        \"CpuManufacturers\": [\n            \"intel\"\n        ],\n        \"MemoryGiBPerVCpu\": {\n            \"Min\": 0.0,\n            \"Max\": 0.0\n        },\n        \"ExcludedInstanceTypes\": [\n            \"\"\n        ],\n        \"InstanceGenerations\": [\n            \"current\"\n        ],\n        \"SpotMaxPricePercentageOverLowestPrice\": 0,\n        \"OnDemandMaxPricePercentageOverLowestPrice\": 0,\n        \"BareMetal\": \"included\",\n        \"BurstablePerformance\": \"included\",\n        \"RequireHibernateSupport\": true,\n        \"NetworkInterfaceCount\": {\n            \"Min\": 0,\n            \"Max\": 0\n        },\n        \"LocalStorage\": \"included\",\n        \"LocalStorageTypes\": [\n            \"hdd\"\n        ],\n        \"TotalLocalStorageGB\": {\n            \"Min\": 0.0,\n            \"Max\": 0.0\n        },\n        \"BaselineEbsBandwidthMbps\": {\n            \"Min\": 0,\n            \"Max\": 0\n        },\n        \"AcceleratorTypes\": [\n            \"gpu\"\n        ],\n        \"AcceleratorCount\": {\n            \"Min\": 0,\n            \"Max\": 0\n        },\n        \"AcceleratorManufacturers\": [\n            \"nvidia\"\n        ],\n        \"AcceleratorNames\": [\n            \"a100\"\n        ],\n        \"AcceleratorTotalMemoryMiB\": {\n            \"Min\": 0,\n            \"Max\": 0\n        },\n        \"NetworkBandwidthGbps\": {\n            \"Min\": 0.0,\n            \"Max\": 0.0\n        },\n        \"AllowedInstanceTypes\": [\n            \"\"\n        ]\n    },\n    \"MaxResults\": 0,\n    \"NextToken\": \"\"\n}\nCreate a JSON configuration file using the output from the previous step, and configure it as follows:\nNote\nYou must provide values for ArchitectureTypes, VirtualizationTypes, VCpuCount, and MemoryMiB. You can omit the other attributes; when omitted, the default values are used.\nFor a description of each attribute and their default values, see get-instance-types-from-instance-requirements.\nFor ArchitectureTypes, specify one or more types of processor architecture.\nFor VirtualizationTypes, specify one or more types of virtualization.\nFor VCpuCount, specify the minimum and maximum number of vCPUs. To specify no minimum limit, for Min, specify 0. To specify no maximum limit, omit the Max parameter.\nFor MemoryMiB, specify the minimum and maximum amount of memory in MiB. To specify no minimum limit, for Min, specify 0. To specify no maximum limit, omit the Max parameter.\nYou can optionally specify one or more of the other attributes to further constrain the list of instance types that are returned.\nTo preview the instance types that have the attributes that you specified in the JSON file, use the get-instance-types-from-instance-requirements command, and specify the name and path to your JSON file by using the --cli-input-json parameter. You can optionally format the output to appear in a table format.\naws ec2 get-instance-types-from-instance-requirements \\\n    --cli-input-json file://attributes.json \\\n    --output table\nExample attributes.json file\nIn this example, the required attributes are included in the JSON file. They are ArchitectureTypes, VirtualizationTypes, VCpuCount, and MemoryMiB. In addition, the optional InstanceGenerations attribute is also included. Note that for MemoryMiB, the Max value can be omitted to indicate that there is no limit.\n{\n    \n    \"ArchitectureTypes\": [\n        \"x86_64\"\n    ],\n    \"VirtualizationTypes\": [\n        \"hvm\"\n    ],\n    \"InstanceRequirements\": {\n        \"VCpuCount\": {\n            \"Min\": 4,\n            \"Max\": 6\n        },\n        \"MemoryMiB\": {\n            \"Min\": 2048\n        },\n        \"InstanceGenerations\": [\n            \"current\"\n        ]\n    }\n}\nExample output\n------------------------------------------\n|GetInstanceTypesFromInstanceRequirements|\n+----------------------------------------+\n||             InstanceTypes            ||\n|+--------------------------------------+|\n||             InstanceType             ||\n|+--------------------------------------+|\n||  c4.xlarge                           ||\n||  c5.xlarge                           ||\n||  c5a.xlarge                          ||\n||  c5ad.xlarge                         ||\n||  c5d.xlarge                          ||\n||  c5n.xlarge                          ||\n||  d2.xlarge                           ||\n...\nAfter identifying instance types that meet your needs, make note of the instance attributes that you used so that you can use them when configuring your fleet request."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-instance-weighting.html",
        "content": "With instance weighting, you assign a weight to each instance type in your EC2 Fleet or Spot Fleet to represent their compute capacity and performance relative to each other. Based on the weights, the fleet can use any combination of the specified instance types, as long as it can fulfil the desired target capacity. This can help you manage the cost and performance of your fleet.\nThe weight represents the capacity units that an instance type contributes to the total target capacity.\nExample: Use instance weighting for performance management\nSuppose your fleet has two instance types, and you assign a different weight to each instance type to reflect how many you need of each to achieve the same performance, as follows:\nm5.large \u2013 weight: 1\nm5.2xlarge \u2013 weight: 4\nBy assigning these weights, you're saying that you'd need 4 m5.large instances to achieve the same performance as 1 m5.2xlarge.\nTo calculate how many instances of each instance type are needed for a given target capacity, use the following formula:\ntarget capacity / weight = number of instances\nIf your target capacity is 8 units, the fleet could fulfill the target capacity with either m5.large or m5.2xlarge, or a mix of both, as follows:\n8 m5.large instances (capacity of 8 / weight of 1 = 8 instances)\n2 m5.2xlarge instances (capacity of 8 / weight of 4 = 2 instances)\n4 m5.large and 1 m5.2xlarge\nExample: Use instance weighting for cost management\nBy default, the price that you specify is per instance hour. When you use the instance weighting feature, the price that you specify is per unit hour. You can calculate your price per unit hour by dividing your price for an instance type by the number of units that it represents. The fleet calculates the number of instances to launch by dividing the target capacity by the instance weight. If the result isn't an integer, the fleet rounds it up to the next integer, so that the size of your fleet is not below its target capacity. The fleet can select any pool that you specify in your launch specification, even if the capacity of the instances launched exceeds the requested target capacity.\nThe following table includes examples of calculations to determine the price per unit for a fleet with a target capacity of 10.\nInstance type Instance weight Target capacity Number of instances launched Price per instance hour Price per unit hour\nr3.xlarge\n2\n10\n5\n(10 divided by 2)\n$0.05\n$0.025\n(.05 divided by 2)\nr3.8xlarge\n8\n10\n2\n(10 divided by 8, result rounded up)\n$0.10\n$0.0125\n(.10 divided by 8)\nUse the fleet instance weighting as follows to provision the target capacity that you want in the pools with the lowest price per unit at the time of fulfillment:\nSet the target capacity for your fleet either in instances (the default) or in the units of your choice, such as vCPU, memory, storage, or throughput.\nSet the price per unit.\nFor each launch specification, specify the weight, which is the number of units that the instance type represents toward the target capacity.\nInstance weighting example\nConsider a fleet request with the following configuration:\nA target capacity of 24\nA launch specification with an instance type r3.2xlarge and a weight of 6\nA launch specification with an instance type c3.xlarge and a weight of 5\nThe weights represent the number of units that instance type represents toward the target capacity. If the first launch specification provides the lowest price per unit (price for r3.2xlarge per instance hour divided by 6), the fleet would launch four of these instances (24 divided by 6).\nIf the second launch specification provides the lowest price per unit (price for c3.xlarge per instance hour divided by 5), the fleet would launch five of these instances (24 divided by 5, result rounded up).\nInstance weighting and allocation strategy\nConsider a fleet request with the following configuration:\nA target capacity of 30 Spot Instances\nA launch specification with an instance type c3.2xlarge and a weight of 8\nA launch specification with an instance type m3.xlarge and a weight of 8\nA launch specification with an instance type r3.xlarge and a weight of 8\nThe fleet would launch four instances (30 divided by 8, result rounded up). With the diversified strategy, the fleet launches one instance in each of the three pools, and the fourth instance in whichever of the three pools provides the lowest price per unit."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-allocation-strategy.html",
        "content": "When you use multiple capacity pools (each comprising an instance type and Availability Zone) in an EC2 Fleet or Spot Fleet, you can use an allocation strategy to manage how Amazon EC2 fulfills your Spot and On-Demand capacities from these pools. The allocation strategies can optimize for available capacity, price, and the instance types to use. There are different allocation strategies for Spot Instances and On-Demand Instances.\nTopics\nAllocation strategies for Spot Instances\nAllocation strategies for On-Demand Instances\nChoose the appropriate Spot allocation strategy\nMaintain target capacity for Spot Instances\nPrioritize instance types for On-Demand capacity\nAllocation strategies for Spot Instances\nYour launch configuration determines all the possible Spot capacity pools (instance types and Availability Zones) from which EC2 Fleet or Spot Fleet can launch Spot Instances. However, when launching instances, the fleet uses the allocation strategy that you specify to pick the specific pools from all your possible pools.\nNote\n(Linux instances only) If you configure your Spot Instance to launch with AMD SEV-SNP turned on, you are charged an additional hourly usage fee that is equivalent to 10% of the On-Demand hourly rate for the selected instance type. If the allocation strategy uses price as an input, the fleet does not include this additional fee; only the Spot price is used.\nYou can specify one of the following allocation strategies for Spot Instances:\nPrice capacity optimized (recommended)\nThe fleet identifies the pools with the highest capacity availability for the number of instances that are launching. This means that we will request Spot Instances from the pools that we believe have the lowest chance of interruption in the near term. The fleet then requests Spot Instances from the lowest priced of these pools.\nThe price capacity optimized allocation strategy is the best choice for most Spot workloads, such as stateless containerized applications, microservices, web applications, data and analytics jobs, and batch processing.\nIf you're using the AWS CLI, the parameter name is price-capacity-optimized for EC2 Fleet and priceCapacityOptimized for Spot Fleet.\nCapacity optimized\nThe fleet identifies the pools with the highest capacity availability for the number of instances that are launching. This means that we will request Spot Instances from the pools that we believe have the lowest chance of interruption in the near term. You can optionally set a priority for each instance type in your fleet, where the fleet optimizes for capacity first, but honors instance type priorities on a best-effort basis.\nWith Spot Instances, pricing changes slowly over time based on long-term trends in supply and demand, but capacity fluctuates in real time. The capacity optimized strategy automatically launches Spot Instances into the most available pools by looking at real-time capacity data and predicting which are the most available. This works well for workloads that may have a higher cost of interruption associated with restarting work, such as long Continuous Integration (CI), image and media rendering, Deep Learning, and High Performance Compute (HPC) workloads that may have a higher cost of interruption associated with restarting work. By offering the possibility of fewer interruptions, the capacity optimized strategy can lower the overall cost of your workload.\nAlternatively, you can use the capacity optimized prioritized allocation strategy with a priority parameter to order instance types from highest to lowest priority. You can set the same priority for different instance types. The fleet will optimize for capacity first, but will honor instance type priorities on a best-effort basis (for example, if honoring the priorities will not significantly affect the fleet's ability to provision optimal capacity). This is a good option for workloads where the possibility of disruption must be minimized and the preference for certain instance types matters. Note that when you set the priority for instance types for your Spot capacity, the same priority is also applied to your On-Demand Instances if the On-Demand allocation strategy is set to prioritized. For Spot Fleet, using priorities is supported only if your fleet uses a launch template.\nIf you're using the AWS CLI, the parameter names are capacity-optimized and capacity-optimized-prioritized for EC2 Fleet and capacityOptimized and capacityOptimizedPrioritized for Spot Fleet.\nDiversified\nThe Spot Instances are distributed across all Spot capacity pools. If you're using the AWS CLI, the parameter name is diversified for both EC2 Fleet and Spot Fleet.\nLowest price (not recommended)\nWarning\nWe don't recommend the lowest price allocation strategy because it has the highest risk of interruption for your Spot Instances.\nThe Spot Instances come from the lowest priced pool that has available capacity. When using the AWS CLI, this is the default strategy. However, we recommend that you override the default by specifying the price capacity optimized allocation strategy.\nWith the lowest price strategy, if the lowest priced pool doesn't have available capacity, the Spot Instances come from the next lowest priced pool that has available capacity. If a pool runs out of capacity before fulfilling your desired capacity, the fleet will continue to fulfill your request by drawing from the next lowest priced pool. To ensure that your desired capacity is met, you might receive Spot Instances from several pools.\nBecause this strategy only considers instance price and not capacity availability, it might lead to high interruption rates.\nThe lowest price allocation strategy is only available when using the AWS CLI. The parameter name is lowest-price for EC2 Fleet and lowestPrice for Spot Fleet.\nNumber of pools to use\nThe number of Spot pools across which to allocate your target Spot capacity. Valid only when the allocation strategy is set to lowest price. The fleet selects the lowest priced Spot pools and evenly allocates your target Spot capacity across the number of Spot pools that you specify.\nNote that the fleet attempts to draw Spot Instances from the number of pools that you specify on a best effort basis. If a pool runs out of Spot capacity before fulfilling your target capacity, the fleet will continue to fulfill your request by drawing from the next lowest priced pool. To ensure that your target capacity is met, you might receive Spot Instances from more than the number of pools that you specified. Similarly, if most of the pools have no Spot capacity, you might receive your full target capacity from fewer than the number of pools that you specified.\nThis parameter is only available when specifying the lowest price allocation strategy and only when using the AWS CLI. The parameter name is InstancePoolsToUseCount for both EC2 Fleet and Spot Fleet.\nAllocation strategies for On-Demand Instances\nYour launch configuration determines all the possible capacity pools (instance types and Availability Zones) from which EC2 Fleet or Spot Fleet can launch On-Demand Instances. However, when launching instances, the fleet uses the allocation strategy that you specify to pick the specific pools from all your possible pools.\nYou can specify one of the following allocation strategies for On-Demand Instances:\nLowest price\nThe On-Demand Instances come from the lowest priced pool that has available capacity. This is the default strategy.\nIf the lowest priced pool doesn't have available capacity, the On-Demand Instances come from the next lowest priced pool that has available capacity.\nIf a pool runs out of capacity before fulfilling your desired capacity, the fleet will continue to fulfill your request by drawing from the next lowest priced pool. To ensure that your desired capacity is met, you might receive On-Demand Instances from several pools.\nPrioritized\nThe fleet uses the priority that you assigned to each launch template override, launching instance types in order of the highest priority first. This strategy can't be used with attribute-based instance type selection. For an example of how to use this allocation strategy, see Prioritize instance types for On-Demand capacity.\nChoose the appropriate Spot allocation strategy\nYou can optimize your fleet for your use case by choosing the appropriate Spot allocation strategy.\nBalance lowest price and capacity availability\nTo balance the trade-offs between the lowest priced Spot capacity pools and the Spot capacity pools with the highest capacity availability, we recommend that you use the price capacity optimized allocation strategy. This strategy makes decisions about which pools to request Spot Instances from based on both the price of the pools and the capacity availability of Spot Instances in those pools. This means that we will request Spot Instances from the pools that we believe have the lowest chance of interruption in the near term, while still taking price into consideration.\nIf your fleet runs resilient and stateless workloads, including containerized applications, microservices, web applications, data and analytics jobs, and batch processing, then use the price capacity optimized allocation strategy for optimal cost savings and capacity availability.\nIf your fleet runs workloads that might have a higher cost of interruption associated with restarting work, then you should implement checkpointing so that applications can restart from that point if they're interrupted. By using checkpointing, you make the price capacity optimized allocation strategy a good fit for these workloads because it allocates capacity from the lowest priced pools that also offer a low Spot Instance interruption rate.\nFor example JSON configurations that use the price capacity optimized allocation strategy, see the following:\nEC2 Fleet \u2013 Example 10: Launch Spot Instances in a price-capacity-optimized fleet\nSpot Fleet \u2013 Example 11: Launch Spot Instances in a priceCapacityOptimized fleet\nWhen workloads have a high cost of interruption\nYou can optionally use the capacity optimized strategy if you run workloads that either use similarly priced instance types, or where the cost of interruption is so significant that any cost saving is inadequate in comparison to a marginal increase in interruptions. This strategy allocates capacity from the most available Spot capacity pools that offer the possibility of fewer interruptions, which can lower the overall cost of your workload.\nWhen the possibility of interruptions must be minimized but the preference for certain instance types matters, you can express your pool priorities by using the capacity optimized prioritized allocation strategy and then setting the order of instance types to use from highest to lowest priority.\nNote that when you set priorities for capacity optimized prioritized, the same priorities are also applied to your On-Demand Instances if the On-Demand allocation strategy is set to prioritized. Also note that, for Spot Fleet, using priorities is supported only if your fleet uses a launch template.\nFor example JSON configurations that use the capacity optimized allocation strategy, see the following:\nEC2 Fleet \u2013 Example 8: Launch Spot Instances in a capacity-optimized fleet\nSpot Fleet \u2013 Example 9: Launch Spot Instances in a capacity-optimized fleet\nFor example JSON configurations that use the capacity optimized prioritized allocation strategy, see the following:\nEC2 Fleet \u2013 Example 9: Launch Spot Instances in a capacity-optimized fleet with priorities\nSpot Fleet \u2013 Example 10: Launch Spot Instances in a capacity-optimized fleet with priorities\nWhen your workload is time flexible and capacity availability is not a factor\nIf your fleet is small or runs for a short time, you can use price capacity optimized to maximize cost savings while still considering capacity availability.\nWhen your fleet is large or runs for a long time\nIf your fleet is large or runs for a long time, you can improve the availability of your fleet by distributing the Spot Instances across multiple pools using the diversified strategy. For example, if your fleet specifies 10 pools and a target capacity of 100 instances, the fleet launches 10 Spot Instances in each pool. If the Spot price for one pool exceeds your maximum price for this pool, only 10% of your fleet is affected. Using this strategy also makes your fleet less sensitive to increases in the Spot price in any one pool over time. With the diversified strategy, the fleet does not launch Spot Instances into any pools with a Spot price that is equal to or higher than the On-Demand price.\nMaintain target capacity for Spot Instances\nAfter Spot Instances are terminated due to a change in the Spot price or available capacity of a Spot capacity pool, a fleet of type maintain launches replacement Spot Instances. The allocation strategy determines the pools from which the replacement instances are launched, as follows:\nIf the allocation strategy is price capacity optimized, the fleet launches replacement instances in the pools that have the most Spot Instance capacity availability while also taking price into consideration and identifying lowest priced pools with high capacity availability.\nIf the allocation strategy is capacity optimized, the fleet launches replacement instances in the pools that have the most Spot Instance capacity availability.\nIf the allocation strategy is diversified, the fleet distributes the replacement Spot Instances across the remaining pools.\nPrioritize instance types for On-Demand capacity\nWhen an EC2 Fleet or Spot Fleet attempts to fulfill your On-Demand capacity, it defaults to launching the lowest priced instance type first. If the On-Demand allocation strategy is set to prioritized, the fleet uses priority to determine which instance type to use first when fulfilling On-Demand capacity. The priority is assigned to the launch template override, and the highest priority is launched first.\nExample: Prioritize instance types\nIn this example, you configure three launch template overrides, each with a different instance type.\nThe On-Demand price for the instance types range in price. The following are the instance types used in this example, listed in order of price, starting with the least expensive instance type:\nm4.large \u2013 least expensive\nm5.large\nm5a.large\nIf you do not use priority to determine the order, the fleet fulfills the On-Demand capacity by starting with the least expensive instance type.\nHowever, say you have unused m5.large Reserved Instances that you want to use first. You can set the launch template override priority so that the instance types are used in the order of priority, as follows:\nm5.large \u2013 priority 1\nm4.large \u2013 priority 2\nm5a.large \u2013 priority 3"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-capacity-rebalance.html",
        "content": "With Capacity Rebalancing, your EC2 Fleet or Spot Fleet can maintain the desired Spot capacity by proactively replacing Spot Instances at risk of interruption. When a Spot Instance is at an elevated risk of interruption, Amazon EC2 sends a rebalance recommendation. If Capacity Rebalancing is enabled, the rebalance recommendation triggers the launch of a new Spot Instance before the at-risk instance is interrupted.\nCapacity Rebalancing helps you maintain workload availability by proactively augmenting your fleet with new Spot Instances before running instances are interrupted by Amazon EC2.\nTo configure EC2 Fleet to use Capacity Rebalancing to launch a replacement Spot Instance\nUse the create-fleet command and the relevant parameters in the MaintenanceStrategies structure. For an example JSON configuration, see Example 7: Configure Capacity Rebalancing to launch replacement Spot Instances.\nTo configure Spot Fleet to use Capacity Rebalancing to launch a replacement Spot Instance\nYou can use the Amazon EC2 console or the AWS CLI to configure Capacity Rebalancing.\n(Console) When creating the Spot Fleet, select the Capacity rebalance checkbox. For more information, see step 6.d. in Create a Spot Fleet request using defined parameters (console).\n(AWS CLI) Use the request-spot-fleet command and the relevant parameters in the SpotMaintenanceStrategies structure. For an example JSON configuration, see Example 8: Configure Capacity Rebalancing to launch replacement Spot Instances.\nTopics\nLimitations\nConfiguration options\nConsiderations\nLimitations\nCapacity Rebalancing is available only for fleets of type maintain.\nWhen the fleet is running, you can't modify the Capacity Rebalancing setting. To change the Capacity Rebalancing setting, you must delete the fleet and create a new fleet.\nConfiguration options\nThe ReplacementStrategy for EC2 Fleet and Spot Fleet supports the following two values:\nlaunch-before-terminate\nAmazon EC2 terminates the Spot Instances that receive a rebalance notification after new replacement Spot Instances are launched. When you specify launch-before-terminate, you must also specify a value for termination-delay. After the new replacement instances are launched, Amazon EC2 waits for the duration of the termination-delay, and then terminates the old instances. For termination-delay, the minimum is 120 seconds (2 minutes), and the maximum is 7200 seconds (2 hours).\nWe recommend that you use launch-before-terminate only if you can predict how long your instance shutdown procedures will take to complete. This will ensure that the old instances are terminated only after the shutdown procedures are completed. Note that Amazon EC2 can interrupt the old instances with a two-minute warning before the termination-delay.\nWe strongly recommend against using the lowest-price (EC2 Fleet) or lowestPrice (Spot Fleet) allocation strategy in combination with launch-before-terminate to avoid having replacement Spot Instances that are also at an elevated risk of interruption.\nlaunch\nAmazon EC2 launches replacement Spot Instances when a rebalance notification is emitted for existing Spot Instances. Amazon EC2 does not terminate the instances that receive a rebalance notification. You can terminate the old instances, or you can leave them running. You are charged for all instances while they are running.\nConsiderations\nIf you configure an EC2 Fleet or Spot Fleet for Capacity Rebalancing, consider the following:\nProvide as many Spot capacity pools in the request as possible\nConfigure your fleet to use multiple instance types and Availability Zones. This provides the flexibility to launch Spot Instances in various Spot capacity pools. For more information, see Be flexible about instance types and Availability Zones.\nAvoid an elevated risk of interruption of replacement Spot Instances\nTo avoid an elevated risk of interruption, we recommend the capacity-optimized or capacity-optimized-prioritized allocation strategy. These strategies ensure that replacement Spot Instances are launched in the most optimal Spot capacity pools, and are therefore less likely to be interrupted in the near future. For more information, see Use the price and capacity optimized allocation strategy.\nIf you use the lowest-price allocation strategy, your replacement Spot Instances might be at an elevated risk of interruption. This is because Amazon EC2 will always launch instances in the lowest priced pool that has available capacity at that moment, even if your replacement Spot Instances are likely to be interrupted soon after being launched.\nAmazon EC2 will only launch a new instance if availability is the same or better\nOne of the goals of Capacity Rebalancing is to improve a Spot Instance's availability. If an existing Spot Instance receives a rebalance recommendation, Amazon EC2 will only launch a new instance if the new instance provides the same or better availability than the existing instance. If the risk of interruption of a new instance will be worse than the existing instance, then Amazon EC2 will not launch a new instance. Amazon EC2 will, however, continue to assess the Spot capacity pools, and will launch a new instance if availability improves.\nThere is a chance that your existing instance will be interrupted without Amazon EC2 proactively launching a new instance. When this happens, Amazon EC2 will attempt to launch a new instance regardless of whether the new instance has a high risk of interruption.\nCapacity Rebalancing does not increase your Spot Instance interruption rate\nWhen you enable Capacity Rebalancing, it does not increase your Spot Instance interruption rate (the number of Spot Instances that are reclaimed when Amazon EC2 needs the capacity back). However, if Capacity Rebalancing detects an instance is at risk of interruption, Amazon EC2 will immediately attempt to launch a new instance. The result is that more instances might be replaced than if you\u2019d waited for Amazon EC2 to launch a new instance after the at-risk instance was interrupted.\nWhile you might replace more instances with Capacity Rebalancing enabled, you benefit from being proactive rather than reactive by having more time to take action before your instances are interrupted. With a Spot Instance interruption notice, you typically only have up to two minutes to gracefully shut down your instance. With Capacity Rebalancing launching a new instance in advance, you give existing processes a better chance of completing on your at-risk instance, you can start your instance shutdown procedures, and prevent new work from being scheduled on your at-risk instance. You can also start preparing the newly-launched instance to take over the application. With Capacity Rebalancing\u2019s proactive replacement, you benefit from graceful continuity.\nAs a theoretical example to demonstrate the risks and benefits of using Capacity Rebalancing, consider the following scenario:\n2:00 PM \u2013 A rebalance recommendation is received for instance-A, and Amazon EC2 immediately starts attempting to launch a replacement instance-B, giving you time to start your shutdown procedures.*\n2:30 PM \u2013 A rebalance recommendation is received for instance-B, replaced with instance-C, giving you time to start your shutdown procedures.*\n2:32 PM \u2013 If Capacity Rebalancing wasn\u2019t enabled, and if a Spot Instance interruption notice would've been received at 2:32 PM for instance-A, you would only have had up to two minutes to take action, but Instance-A would have been running up till this time.\n* If launch-before-terminate is specified, Amazon EC2 will terminate the at-risk instance after the replacement instance comes online.\nAmazon EC2 can launch new replacement Spot Instances until fulfilled capacity is double target capacity\nWhen a fleet is configured for Capacity Rebalancing, the fleet attempts to launch a new replacement Spot Instance for every Spot Instance that receives a rebalance recommendation. After a Spot Instance receives a rebalance recommendation, it is no longer counted as part of the fulfilled capacity. Depending on the replacement strategy, Amazon EC2 either terminates the instance after a preconfigured termination delay, or leaves it running. This gives you the opportunity to perform rebalancing actions on the instance.\nIf your fleet reaches double its target capacity, it stops launching new replacement instances even if the replacement instances themselves receive a rebalance recommendation.\nFor example, you create a fleet with a target capacity of 100 Spot Instances. All of the Spot Instances receive a rebalance recommendation, which causes Amazon EC2 to launch 100 replacement Spot Instances. This raises the number of fulfilled Spot Instances to 200, which is double the target capacity. Some of the replacement instances receive a rebalance recommendation, but no more replacement instances are launched because the fleet can't exceed double its target capacity.\nNote that you are charged for all of the instances while they are running.\nWe recommend that you configure your fleet to terminate Spot Instances that receive a rebalance recommendation\nIf you configure your fleet for Capacity Rebalancing, we recommend that you choose launch-before-terminate with an appropriate termination delay only if you can predict how long your instance shutdown procedures will take to complete. This will ensure that the old instances are terminated only after the shutdown procedures are completed.\nIf you choose to terminate the instances that are recommended for rebalance yourself, we recommend that you monitor the rebalance recommendation signal that is received by the Spot Instances in the fleet. By monitoring the signal, you can quickly perform rebalancing actions on the affected instances before Amazon EC2 interrupts them, and then you can manually terminate them. If you do not terminate the instances, you continue paying for them while they are running. Amazon EC2 does not automatically terminate the instances that receive a rebalance recommendation.\nYou can set up notifications using Amazon EventBridge or instance metadata. For more information, see Monitor rebalance recommendation signals.\nThe fleet does not count instances that receive a rebalance recommendation when calculating fulfilled capacity during scale in or out\nIf your fleet is configured for Capacity Rebalancing, and you change the target capacity to either scale in or scale out, the fleet does not count the instances that are marked for rebalance as part of the fulfilled capacity, as follows:\nScale in \u2013 If you decrease your desired target capacity, Amazon EC2 terminates instances that are not marked for rebalance until the desired capacity is reached. The instances that are marked for rebalance are not counted towards the fulfilled capacity.\nFor example, you create a fleet with a target capacity of 100 Spot Instances. 10 instances receive a rebalance recommendation, so Amazon EC2 launches 10 new replacement instances, resulting in a fulfilled capacity of 110 instances. You then reduce the target capacity to 50 (scale in), but the fulfilled capacity is actually 60 instances because the 10 instances that are marked for rebalance are not terminated by Amazon EC2. You need to manually terminate these instances, or you can leave them running.\nScale out \u2013 If you increase your desired target capacity, Amazon EC2 launches new instances until the desired capacity is reached. The instances that are marked for rebalance are not counted towards the fulfilled capacity.\nFor example, you create a fleet with a target capacity of 100 Spot Instances. 10 instances receive a rebalance recommendation, so the fleet launches 10 new replacement instances, resulting in a fulfilled capacity of 110 instances. You then increase the target capacity to 200 (scale out), but the fulfilled capacity is actually 210 instances because the 10 instances that are marked for rebalance are not counted by the fleet as part of the target capacity. You need to manually terminate these instances, or you can leave them running."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-on-demand-capacity-reservations.html",
        "content": "With On-Demand Capacity Reservations, you can reserve compute capacity for your On-Demand Instances in a specified Availability Zone for any duration. You can configure an EC2 Fleet to use the Capacity Reservations first when launching On-Demand Instances.\nOn-Demand Capacity Reservations are available only for EC2 Fleet with the request type set to instant.\nCapacity Reservations are configured as either open or targeted. EC2 Fleet can launch On-Demand Instances into either open or targeted Capacity Reservations, as follows:\nIf a Capacity Reservation is open, On-Demand Instances that have matching attributes automatically run in the reserved capacity.\nIf a Capacity Reservation is targeted, On-Demand Instances must specifically target it to run in the reserved capacity. This is useful for using up specific Capacity Reservations or for controlling when to use specific Capacity Reservations.\nIf you use targeted Capacity Reservations in your EC2 Fleet, there must be enough Capacity Reservations to fulfil the target On-Demand capacity, otherwise the launch fails. To avoid a launch fail, rather add the targeted Capacity Reservations to a resource group, and then target the resource group. The resource group doesn't need to have enough Capacity Reservations; if it runs out of Capacity Reservations before the target On-Demand capacity is fulfilled, the fleet can launch the remaining target capacity into regular On-Demand capacity.\nTo use Capacity Reservations with EC2 Fleet\nConfigure the fleet as type instant. You can't use Capacity Reservations for fleets of other types.\nConfigure the usage strategy for Capacity Reservations as use-capacity-reservations-first.\nIn the launch template, for Capacity reservation, choose either Open or Target by group. If you choose Target by group, specify the Capacity Reservations resource group ID.\nWhen the fleet attempts to fulfil the On-Demand capacity, if it finds that multiple instance pools have unused matching Capacity Reservations, it determines the pools in which to launch the On-Demand Instances based on the On-Demand allocation strategy (lowest-price or prioritized).\nRelated resources\nFor CLI examples of how to configure a fleet to use Capacity Reservations to fulfil On-Demand capacity, see Example CLI configurations for EC2 Fleet, specifically Examples 5 through 7.\nFor a tutorial that takes you through the steps for creating Capacity Reservations, using them in your fleet, and viewing how many Capacity Reservations are remaining, see Tutorial: Configure EC2 Fleet to launch On-Demand Instances using targeted Capacity Reservations\nFor information about configuring Capacity Reservations, see Reserve compute capacity with EC2 On-Demand Capacity Reservations and the On-Demand Capacity Reservation FAQs."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html",
        "content": "To start using an EC2 Fleet, create a request that includes the total target capacity, On-Demand capacity, Spot capacity, and a launch template specifying the configuration for the instances in the fleet. You can optionally specify additional parameters, or let the fleet use default values. You can also tag the fleet request, and its instances and volumes, when you create the fleet.\nThe fleet launches On-Demand Instances when there is available capacity, and launches Spot Instances when your maximum price exceeds the Spot price and capacity is available.\nOnce your fleet is launched, you can describe the fleet request, the instances in the fleet, and any fleet events. You can also assign additional tags as needed.\nIf you need to change any fleet parameters, such as the total target capacity, you can modify the fleet, provided it was configured to maintain capacity. You can't modify the capacity of a one-time request after it's been submitted.\nThe fleet request remains active until it expires or you delete it. When you delete the fleet request, you can either terminate the instances or leave them running. If you choose to leave them running, the On-Demand Instances run until you terminate them, and the Spot Instances run until they're interrupted or you terminate them.\nTopics\nEC2 Fleet request states\nCreate an EC2 Fleet\nTag a new or existing EC2 Fleet request and the instances and volumes it launches\nDescribe the configuration, instances, and event history for EC2 Fleet\nModify an EC2 Fleet\nDelete an EC2 Fleet request and the instances in the fleet"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EC2-fleet-states.html",
        "content": "An EC2 Fleet request can be one of various states, with each state indicating a different stage of the request's lifecycle and its management of instances.\nAn EC2 Fleet request can be in one of the following states:\nsubmitted\nThe EC2 Fleet request is being evaluated and Amazon EC2 is preparing to launch the target number of instances. If a request would exceed your fleet limits, it is deleted immediately.\nactive\nThe EC2 Fleet request has been validated and Amazon EC2 is attempting to maintain the target number of running instances. The request remains in this state until it is modified or deleted.\nmodifying\nThe EC2 Fleet request is being modified. The request remains in this state until the modification is fully processed or the request is deleted. Only a maintain fleet type can be modified. This state does not apply to other request types.\ndeleted_running\nThe EC2 Fleet request is deleted and does not launch additional Spot Instances. Its existing instances continue to run until they are interrupted or terminated manually. The request remains in this state until all instances are interrupted or terminated. Only an EC2 Fleet of type maintain or request can have running instances after the EC2 Fleet request is deleted. A deleted instant fleet with running instances is not supported. This state does not apply to instant fleets.\ndeleted_terminating\nThe EC2 Fleet request is deleted and its instances are terminating. The request remains in this state until all instances are terminated.\ndeleted\nThe EC2 Fleet is deleted and has no running instances. The request is deleted two days after its instances are terminated."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/create-ec2-fleet.html",
        "content": "To create an EC2 Fleet, define the fleet configuration in a JSON file and reference the file with the create-fleet command. In the JSON file, you must specify the total target capacity for the fleet, separate target capacities for Spot Instances and On-Demand Instances, and a launch template that defines the configuration for the instances in the fleet, such as an AMI, instance type, subnet or Availability Zone, and one or more security groups. You can optionally specify additional configurations, such as parameters to override the launch template configuration, allocation strategies for selecting Spot Instances and On-Demand Instances from the EC2 capacity pools, and the maximum amount you're willing to pay for the fleet. For more information, see Configuration options for your EC2 Fleet or Spot Fleet.\nThe EC2 Fleet launches On-Demand Instances when capacity is available, and launches Spot Instances when your maximum price exceeds the Spot price and capacity is available.\nIf your fleet includes Spot Instances and is of type maintain, Amazon EC2 will attempt to maintain your fleet target capacity when your Spot Instances are interrupted.\nEC2 Fleet limitations\nThe following limitations apply to EC2 Fleet:\nCreating an EC2 Fleet is available only through the Amazon EC2 API, AWS CLI, AWS SDKs, and AWS CloudFormation.\nAn EC2 Fleet request can't span AWS Regions. You need to create a separate EC2 Fleet for each Region.\nAn EC2 Fleet request can't span different subnets from the same Availability Zone.\nEC2 Fleet prerequisites\nTo create an EC2 Fleet, the following prerequisites must be in place:\nLaunch template\nService-linked role for EC2 Fleet\nGrant access to customer managed keys for use with encrypted AMIs and EBS snapshots\nPermissions for EC2 Fleet users\nLaunch template\nA launch template specifies the configuration information about the instances to launch, such as the instance type and Availability Zone. For more information about launch templates, see Store instance launch parameters in Amazon EC2 launch templates.\nService-linked role for EC2 Fleet\nThe AWSServiceRoleForEC2Fleet role grants the EC2 Fleet permission to request, launch, terminate, and tag instances on your behalf. Amazon EC2 uses this service-linked role to complete the following actions:\nec2:RunInstances \u2013 Launch instances.\nec2:RequestSpotInstances \u2013 Request Spot Instances.\nec2:TerminateInstances \u2013 Terminate instances.\nec2:DescribeImages \u2013 Describe Amazon Machine Images (AMIs) for the instances.\nec2:DescribeInstanceStatus \u2013 Describe the status of the instances.\nec2:DescribeSubnets \u2013 Describe the subnets for instances.\nec2:CreateTags \u2013 Add tags to the EC2 Fleet, instances, and volumes.\nEnsure that this role exists before you use the AWS CLI or an API to create an EC2 Fleet.\nNote\nAn instant EC2 Fleet does not require this role.\nTo create the role, use the IAM console as follows.\nTo create the AWSServiceRoleForEC2Fleet role for EC2 Fleet\nOpen the IAM console at https://console.aws.amazon.com/iam/.\nIn the navigation pane, choose Roles.\nChoose Create role.\nOn the Select trusted entity page, do the following:\nFor Trusted entity type, choose AWS service.\nUnder Use case, for Service or use case, choose EC2 - Fleet.\nTip\nBe sure to choose EC2 - Fleet. If you choose EC2, the EC2 - Fleet use case does not appear in the Use case list. The EC2 - Fleet use case will automatically create a policy with the required IAM permissions and will suggest AWSServiceRoleForEC2Fleet as the role name.\nChoose Next.\nOn the Add permissions page, choose Next.\nOn the Name, review, and create page, choose Create role.\nIf you no longer need to use EC2 Fleet, we recommend that you delete the AWSServiceRoleForEC2Fleet role. After this role is deleted from your account, you can create the role again if you create another fleet.\nFor more information, see Service-linked roles in the IAM User Guide.\nGrant access to customer managed keys for use with encrypted AMIs and EBS snapshots\nIf you specify an encrypted AMI or an encrypted Amazon EBS snapshot in your EC2 Fleet and you use an AWS KMS key for encryption, you must grant the AWSServiceRoleForEC2Fleet role permission to use the customer managed key so that Amazon EC2 can launch instances on your behalf. To do this, you must add a grant to the customer managed key, as shown in the following procedure.\nWhen providing permissions, grants are an alternative to key policies. For more information, see Using grants and Using key policies in AWS KMS in the AWS Key Management Service Developer Guide.\nTo grant the AWSServiceRoleForEC2Fleet role permissions to use the customer managed key\nUse the create-grant command to add a grant to the customer managed key and to specify the principal (the AWSServiceRoleForEC2Fleet service-linked role) that is given permission to perform the operations that the grant permits. The customer managed key is specified by the key-id parameter and the ARN of the customer managed key. The principal is specified by the grantee-principal parameter and the ARN of the AWSServiceRoleForEC2Fleet service-linked role.\naws kms create-grant \\\n    --region us-east-1 \\\n    --key-id arn:aws:kms:us-east-1:444455556666:key/1234abcd-12ab-34cd-56ef-1234567890ab \\\n    --grantee-principal arn:aws:iam::111122223333:role/AWSServiceRoleForEC2Fleet \\\n    --operations \"Decrypt\" \"Encrypt\" \"GenerateDataKey\" \"GenerateDataKeyWithoutPlaintext\" \"CreateGrant\" \"DescribeKey\" \"ReEncryptFrom\" \"ReEncryptTo\"\nPermissions for EC2 Fleet users\nIf your users will create or manage an EC2 Fleet, be sure to grant them the required permissions.\nTo create a policy for EC2 Fleet\nOpen the IAM console at https://console.aws.amazon.com/iam/.\nIn the navigation pane, choose Policies.\nChoose Create policy.\nOn the Create policy page, choose the JSON tab, replace the text with the following, and choose Review policy.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:*\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n              \"iam:ListRoles\",\n              \"iam:PassRole\",\n              \"iam:ListInstanceProfiles\"\n            ],\n            \"Resource\":\"arn:aws:iam::123456789012:role/DevTeam*\"\n        }\n    ]\n}\nThe ec2:* grants a user permission to call all Amazon EC2 API actions. To limit the user to specific Amazon EC2 API actions, specify those actions instead.\nThe user must have permission to call the iam:ListRoles action to enumerate existing IAM roles, the iam:PassRole action to specify the EC2 Fleet role, and the iam:ListInstanceProfiles action to enumerate existing instance profiles.\n(Optional) To enable a user to create roles or instance profiles using the IAM console, you must also add the following actions to the policy:\niam:AddRoleToInstanceProfile\niam:AttachRolePolicy\niam:CreateInstanceProfile\niam:CreateRole\niam:GetRole\niam:ListPolicies\nOn the Review policy page, enter a policy name and description, and choose Create policy.\nTo provide access, add permissions to your users, groups, or roles:\nUsers and groups in AWS IAM Identity Center:\nCreate a permission set. Follow the instructions in Create a permission set in the AWS IAM Identity Center User Guide.\nUsers managed in IAM through an identity provider:\nCreate a role for identity federation. Follow the instructions in Create a role for a third-party identity provider (federation) in the IAM User Guide.\nIAM users:\nCreate a role that your user can assume. Follow the instructions in Create a role for an IAM user in the IAM User Guide.\n(Not recommended) Attach a policy directly to a user or add a user to a user group. Follow the instructions in Adding permissions to a user (console) in the IAM User Guide.\nCreate an EC2 Fleet\nTo launch a fleet of instances using EC2 Fleet, you need only specify the following parameters in your fleet request, and the fleet will use the default values for the other parameters:\nLaunchTemplateId or LaunchTemplateName \u2013 Specifies the launch template to use (which contains the parameters for the instances to launch, such as the instance type and Availability Zone)\nTotalTargetCapacity \u2013 Specifies the total target capacity for the fleet\nDefaultTargetCapacityType \u2013 Specifies whether the default purchasing option is On-Demand or Spot\nTo override the parameters specified in the launch template, you can specify one or more overrides. Each override can vary by instance type, Availability Zone, subnet, and maximum price, and can include a different weighted capacity. As an alternative to specifying an instance type, you can specify the attributes that an instance must have, and Amazon EC2 will identify all the instance types with those attributes. For more information, see Specify attributes for instance type selection for EC2 Fleet or Spot Fleet.\nFor EC2 Fleets of type instant, you can specify a Systems Manager parameter instead of the AMI ID. You can specify the Systems Manager parameter in the override or in the launch template. For more information, see Use a Systems Manager parameter instead of an AMI ID.\nYou can specify the fleet parameters in a JSON file. For information about all the possible parameters you can specify, see View all the EC2 Fleet configuration options.\nFor fleet configuration examples, see Example CLI configurations for EC2 Fleet.\nThere is currently no console support for creating an EC2 Fleet.\nTo create an EC2 Fleet\nUse the create-fleet command to create the fleet and specify the JSON file that contains the fleet configuration parameters.\naws ec2 create-fleet --cli-input-json file://file_name.json\nThe following is example output for a fleet of type request or maintain.\n{\n    \"FleetId\": \"fleet-12a34b55-67cd-8ef9-ba9b-9208dEXAMPLE\"\n} \nThe following is example output for a fleet of type instant that launched the target capacity.\n{\n  \"FleetId\": \"fleet-12a34b55-67cd-8ef9-ba9b-9208dEXAMPLE\",\n  \"Errors\": [],\n  \"Instances\": [\n    {\n      \"LaunchTemplateAndOverrides\": {\n        \"LaunchTemplateSpecification\": {\n          \"LaunchTemplateId\": \"lt-01234a567b8910abcEXAMPLE\",\n          \"Version\": \"1\"\n        },\n        \"Overrides\": {\n          \"InstanceType\": \"c5.large\",\n          \"AvailabilityZone\": \"us-east-1a\"\n        }\n      },\n      \"Lifecycle\": \"on-demand\",\n      \"InstanceIds\": [\n        \"i-1234567890abcdef0\",\n        \"i-9876543210abcdef9\" \n      ],\n      \"InstanceType\": \"c5.large\",\n      \"Platform\": null\n    },\n    {\n      \"LaunchTemplateAndOverrides\": {\n        \"LaunchTemplateSpecification\": {\n          \"LaunchTemplateId\": \"lt-01234a567b8910abcEXAMPLE\",\n          \"Version\": \"1\"\n        },\n        \"Overrides\": {\n          \"InstanceType\": \"c4.large\",\n          \"AvailabilityZone\": \"us-east-1a\"\n        }\n      },\n      \"Lifecycle\": \"on-demand\",\n      \"InstanceIds\": [\n        \"i-5678901234abcdef0\",\n        \"i-5432109876abcdef9\" \n      ]\n  ]\n}\nThe following is example output for a fleet of type instant that launched part of the target capacity with errors for instances that were not launched.\n{\n  \"FleetId\": \"fleet-12a34b55-67cd-8ef9-ba9b-9208dEXAMPLE\",\n  \"Errors\": [\n    {\n      \"LaunchTemplateAndOverrides\": {\n        \"LaunchTemplateSpecification\": {\n          \"LaunchTemplateId\": \"lt-01234a567b8910abcEXAMPLE\",\n          \"Version\": \"1\"\n        },\n        \"Overrides\": {\n          \"InstanceType\": \"c4.xlarge\",\n          \"AvailabilityZone\": \"us-east-1a\",\n        }\n      },\n      \"Lifecycle\": \"on-demand\",\n      \"ErrorCode\": \"InsufficientInstanceCapacity\",\n      \"ErrorMessage\": \"\"\n    },\n  ],\n  \"Instances\": [\n    {\n      \"LaunchTemplateAndOverrides\": {\n        \"LaunchTemplateSpecification\": {\n          \"LaunchTemplateId\": \"lt-01234a567b8910abcEXAMPLE\",\n          \"Version\": \"1\"\n        },\n        \"Overrides\": {\n          \"InstanceType\": \"c5.large\",\n          \"AvailabilityZone\": \"us-east-1a\"\n        }\n      },\n      \"Lifecycle\": \"on-demand\",\n      \"InstanceIds\": [\n        \"i-1234567890abcdef0\",\n        \"i-9876543210abcdef9\" \n      ]\n  ]\n}\nThe following is example output for a fleet of type instant that launched no instances.\n{\n  \"FleetId\": \"fleet-12a34b55-67cd-8ef9-ba9b-9208dEXAMPLE\",\n  \"Errors\": [\n    {\n      \"LaunchTemplateAndOverrides\": {\n        \"LaunchTemplateSpecification\": {\n          \"LaunchTemplateId\": \"lt-01234a567b8910abcEXAMPLE\",\n          \"Version\": \"1\"\n        },\n        \"Overrides\": {\n          \"InstanceType\": \"c4.xlarge\",\n          \"AvailabilityZone\": \"us-east-1a\",\n        }\n      },\n      \"Lifecycle\": \"on-demand\",\n      \"ErrorCode\": \"InsufficientCapacity\",\n      \"ErrorMessage\": \"\"\n    },\n    {\n      \"LaunchTemplateAndOverrides\": {\n        \"LaunchTemplateSpecification\": {\n          \"LaunchTemplateId\": \"lt-01234a567b8910abcEXAMPLE\",\n          \"Version\": \"1\"\n        },\n        \"Overrides\": {\n          \"InstanceType\": \"c5.large\",\n          \"AvailabilityZone\": \"us-east-1a\",\n        }\n      },\n      \"Lifecycle\": \"on-demand\",\n      \"ErrorCode\": \"InsufficientCapacity\",\n      \"ErrorMessage\": \"\"\n    },\n  ],\n  \"Instances\": []\n}\nCreate an EC2 Fleet that replaces unhealthy Spot Instances\nEC2 Fleet checks the health status of the instances in the fleet every two minutes. The health status of an instance is either healthy or unhealthy.\nEC2 Fleet determines the health status of an instance by using the status checks provided by Amazon EC2. An instance is determined as unhealthy when the status of either the instance status check or the system status check is impaired for three consecutive health status checks. For more information, see Status checks for Amazon EC2 instances.\nYou can configure your fleet to replace unhealthy Spot Instances. After setting ReplaceUnhealthyInstances to true, a Spot Instance is replaced when it is reported as unhealthy. The fleet can go below its target capacity for up to a few minutes while an unhealthy Spot Instance is being replaced.\nRequirements\nHealth check replacement is supported only for EC2 Fleets that maintain a target capacity (fleets of type maintain), and not for fleets of type request or instant.\nHealth check replacement is supported only for Spot Instances. This feature is not supported for On-Demand Instances.\nYou can configure your EC2 Fleet to replace unhealthy instances only when you create it.\nUsers can use health check replacement only if they have permission to call the ec2:DescribeInstanceStatus action.\nTo configure an EC2 Fleet to replace unhealthy Spot Instances\nUse the information for creating an EC2 Fleet in Create an EC2 Fleet.\nTo configure the fleet to replace unhealthy Spot Instances, in the JSON file, for ReplaceUnhealthyInstances, specify true.\nView all the EC2 Fleet configuration options\nTo view the full list of EC2 Fleet configuration parameters, you can generate a JSON file. For a description of each parameter, see create-fleet.\nTo generate a JSON file with all possible EC2 Fleet parameters\nUse the create-fleet (AWS CLI) command and the --generate-cli-skeleton parameter to generate an EC2 Fleet JSON file, and direct the output to a file to save it.\naws ec2 create-fleet \\\n    --generate-cli-skeleton input > ec2createfleet.json\nExample output\n{\n    \"DryRun\": true,\n    \"ClientToken\": \"\",\n    \"SpotOptions\": {\n        \"AllocationStrategy\": \"price-capacity-optimized\",\n        \"MaintenanceStrategies\": {\n            \"CapacityRebalance\": {\n                \"ReplacementStrategy\": \"launch\"\n            }\n        },\n        \"InstanceInterruptionBehavior\": \"hibernate\",\n        \"InstancePoolsToUseCount\": 0,\n        \"SingleInstanceType\": true,\n        \"SingleAvailabilityZone\": true,\n        \"MinTargetCapacity\": 0,\n        \"MaxTotalPrice\": \"\"\n    },\n    \"OnDemandOptions\": {\n        \"AllocationStrategy\": \"prioritized\",\n        \"CapacityReservationOptions\": {\n            \"UsageStrategy\": \"use-capacity-reservations-first\"\n        },\n        \"SingleInstanceType\": true,\n        \"SingleAvailabilityZone\": true,\n        \"MinTargetCapacity\": 0,\n        \"MaxTotalPrice\": \"\"\n    },\n    \"ExcessCapacityTerminationPolicy\": \"termination\",\n    \"LaunchTemplateConfigs\": [\n        {\n            \"LaunchTemplateSpecification\": {\n                \"LaunchTemplateId\": \"\",\n                \"LaunchTemplateName\": \"\",\n                \"Version\": \"\"\n            },\n            \"Overrides\": [\n                {\n                    \"InstanceType\": \"r5.metal\",\n                    \"MaxPrice\": \"\",\n                    \"SubnetId\": \"\",\n                    \"AvailabilityZone\": \"\",\n                    \"WeightedCapacity\": 0.0,\n                    \"Priority\": 0.0,\n                    \"Placement\": {\n                        \"AvailabilityZone\": \"\",\n                        \"Affinity\": \"\",\n                        \"GroupName\": \"\",\n                        \"PartitionNumber\": 0,\n                        \"HostId\": \"\",\n                        \"Tenancy\": \"dedicated\",\n                        \"SpreadDomain\": \"\",\n                        \"HostResourceGroupArn\": \"\"\n                    },\n                    \"InstanceRequirements\": {\n                        \"VCpuCount\": {\n                            \"Min\": 0,\n                            \"Max\": 0\n                        },\n                        \"MemoryMiB\": {\n                            \"Min\": 0,\n                            \"Max\": 0\n                        },\n                        \"CpuManufacturers\": [\n                            \"amd\"\n                        ],\n                        \"MemoryGiBPerVCpu\": {\n                            \"Min\": 0.0,\n                            \"Max\": 0.0\n                        },\n                        \"ExcludedInstanceTypes\": [\n                            \"\"\n                        ],\n                        \"InstanceGenerations\": [\n                            \"previous\"\n                        ],\n                        \"SpotMaxPricePercentageOverLowestPrice\": 0,\n                        \"OnDemandMaxPricePercentageOverLowestPrice\": 0,\n                        \"BareMetal\": \"included\",\n                        \"BurstablePerformance\": \"required\",\n                        \"RequireHibernateSupport\": true,\n                        \"NetworkInterfaceCount\": {\n                            \"Min\": 0,\n                            \"Max\": 0\n                        },\n                        \"LocalStorage\": \"excluded\",\n                        \"LocalStorageTypes\": [\n                            \"ssd\"\n                        ],\n                        \"TotalLocalStorageGB\": {\n                            \"Min\": 0.0,\n                            \"Max\": 0.0\n                        },\n                        \"BaselineEbsBandwidthMbps\": {\n                            \"Min\": 0,\n                            \"Max\": 0\n                        },\n                        \"AcceleratorTypes\": [\n                            \"inference\"\n                        ],\n                        \"AcceleratorCount\": {\n                            \"Min\": 0,\n                            \"Max\": 0\n                        },\n                        \"AcceleratorManufacturers\": [\n                            \"amd\"\n                        ],\n                        \"AcceleratorNames\": [\n                            \"a100\"\n                        ],\n                        \"AcceleratorTotalMemoryMiB\": {\n                            \"Min\": 0,\n                            \"Max\": 0\n                        }\n                    }\n                }\n            ]\n        }\n    ],\n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 0,\n        \"OnDemandTargetCapacity\": 0,\n        \"SpotTargetCapacity\": 0,\n        \"DefaultTargetCapacityType\": \"on-demand\",\n        \"TargetCapacityUnitType\": \"memory-mib\"\n    },\n    \"TerminateInstancesWithExpiration\": true,\n    \"Type\": \"instant\",\n    \"ValidFrom\": \"1970-01-01T00:00:00\",\n    \"ValidUntil\": \"1970-01-01T00:00:00\",\n    \"ReplaceUnhealthyInstances\": true,\n    \"TagSpecifications\": [\n        {\n            \"ResourceType\": \"fleet\",\n            \"Tags\": [\n                {\n                    \"Key\": \"\",\n                    \"Value\": \"\"\n                }\n            ]\n        }\n    ],\n    \"Context\": \"\"\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/tag-ec2-fleet.html",
        "content": "To help categorize and manage your EC2 Fleet requests and the instances and volumes that it launches, you can tag them with custom metadata. You can assign a tag to an EC2 Fleet request when you create it, or afterward. Similarly, you can assign a tag to the instances and volumes when they're launched by the fleet, or afterward.\nWhen you tag a fleet request, the instances and volumes that are launched by the fleet are not automatically tagged. You need to explicitly tag the instances and volumes launched by the fleet. You can choose to assign tags to only the fleet request, or to only the instances launched by the fleet, or to only the volumes attached to the instances launched by the fleet, or to all of them.\nNote\nFor instant fleet types, you can tag volumes that are attached to On-Demand Instances and Spot Instances. For request or maintain fleet types, you can only tag volumes that are attached to On-Demand Instances.\nFor more information about how tags work, see Tag your Amazon EC2 resources.\nPrerequisite\nGrant the user the permission to tag resources. For more information, see Example: Tag resources.\nTo grant a user the permission to tag resources\nCreate a IAM policy that includes the following:\nThe ec2:CreateTags action. This grants the user permission to create tags.\nThe ec2:CreateFleet action. This grants the user permission to create an EC2 Fleet request.\nFor Resource, we recommend that you specify \"*\". This allows users to tag all resource types.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"TagEC2FleetRequest\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateTags\",\n                \"ec2:CreateFleet\"\n            ],\n            \"Resource\": \"*\"\n}\nImportant\nWe currently do not support resource-level permissions for the create-fleet resource. If you specify create-fleet as a resource, you will get an unauthorized exception when you try to tag the fleet. The following example illustrates how not to set the policy.\n{\n    \"Effect\": \"Allow\",\n    \"Action\": [\n        \"ec2:CreateTags\",\n        \"ec2:CreateFleet\"\n    ],\n    \"Resource\": \"arn:aws:ec2:us-east-1:111122223333:create-fleet/*\"\n}\nTo provide access, add permissions to your users, groups, or roles:\nUsers and groups in AWS IAM Identity Center:\nCreate a permission set. Follow the instructions in Create a permission set in the AWS IAM Identity Center User Guide.\nUsers managed in IAM through an identity provider:\nCreate a role for identity federation. Follow the instructions in Create a role for a third-party identity provider (federation) in the IAM User Guide.\nIAM users:\nCreate a role that your user can assume. Follow the instructions in Create a role for an IAM user in the IAM User Guide.\n(Not recommended) Attach a policy directly to a user or add a user to a user group. Follow the instructions in Adding permissions to a user (console) in the IAM User Guide.\nTo tag a new EC2 Fleet request\nTo tag an EC2 Fleet request when you create it, specify the key-value pair in the JSON file used to create the fleet. The value for ResourceType must be fleet. If you specify another value, the fleet request fails.\nTo tag instances and volumes launched by an EC2 Fleet\nTo tag instances and volumes when they are launched by the fleet, specify the tags in the launch template that is referenced in the EC2 Fleet request.\nNote\nYou can't tag volumes attached to Spot Instances that are launched by a request or maintain fleet type.\nTo tag an existing EC2 Fleet request, instance, and volume\nUse the create-tags command to tag existing resources.\naws ec2 create-tags \\\n    --resources fleet-12a34b55-67cd-8ef9-ba9b-9208dEXAMPLE i-1234567890abcdef0 vol-1234567890EXAMPLE \\\n    --tags Key=purpose,Value=test"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/describe-ec2-fleet.html",
        "content": "You can describe your EC2 Fleet configuration, the instances in your EC2 Fleet, and the event history of your EC2 Fleet.\nTopics\nDescribe all your EC2 Fleets\nDescribe all instances in the specified EC2 Fleet\nDescribe the event history for your EC2 Fleet\nDescribe all your EC2 Fleets\nUse the describe-fleets command to describe all your EC2 Fleets.\naws ec2 describe-fleets\nImportant\nIf a fleet is of type instant, you must specify the fleet ID, otherwise it does not appear in the response. Include --fleet-ids as follows:\naws ec2 describe-fleets --fleet-ids fleet-8a22eee4-f489-ab02-06b8-832a7EXAMPLE\nExample output\n{\n    \"Fleets\": [\n        {\n            \"ActivityStatus\": \"fulfilled\",\n            \"CreateTime\": \"2022-02-09T03:35:52+00:00\",\n            \"FleetId\": \"fleet-364457cd-3a7a-4ed9-83d0-7b63e51bb1b7\",\n            \"FleetState\": \"active\",\n            \"ExcessCapacityTerminationPolicy\": \"termination\",\n            \"FulfilledCapacity\": 2.0,\n            \"FulfilledOnDemandCapacity\": 0.0,\n            \"LaunchTemplateConfigs\": [\n                {\n                    \"LaunchTemplateSpecification\": {\n                        \"LaunchTemplateName\": \"my-launch-template\",\n                        \"Version\": \"$Latest\"\n                    }\n                }\n            ],\n            \"TargetCapacitySpecification\": {\n                \"TotalTargetCapacity\": 2,\n                \"OnDemandTargetCapacity\": 0,\n                \"SpotTargetCapacity\": 2,\n                \"DefaultTargetCapacityType\": \"spot\"\n            },\n            \"TerminateInstancesWithExpiration\": false,\n            \"Type\": \"maintain\",\n            \"ReplaceUnhealthyInstances\": false,\n            \"SpotOptions\": {\n                \"AllocationStrategy\": \"capacity-optimized\",\n                \"InstanceInterruptionBehavior\": \"terminate\"\n            },\n            \"OnDemandOptions\": {\n                \"AllocationStrategy\": \"lowestPrice\"\n            }\n        }\n    ]\n}\nDescribe all instances in the specified EC2 Fleet\nUse the describe-fleet-instances command to describe the instances for the specified EC2 Fleet. The returned list of running instances is refreshed periodically and might be out of date.\naws ec2 describe-fleet-instances  --fleet-id fleet-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE\nExample output\n{\n    \"ActiveInstances\": [\n        {\n            \"InstanceId\": \"i-09cd595998cb3765e\", \n            \"InstanceHealth\": \"healthy\", \n            \"InstanceType\": \"m4.large\", \n            \"SpotInstanceRequestId\": \"sir-86k84j6p\"\n        }, \n        {\n            \"InstanceId\": \"i-09cf95167ca219f17\", \n            \"InstanceHealth\": \"healthy\", \n            \"InstanceType\": \"m4.large\", \n            \"SpotInstanceRequestId\": \"sir-dvxi7fsm\"\n        }\n    ], \n    \"FleetId\": \"fleet-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE\"\n}\nDescribe the event history for your EC2 Fleet\nUse the describe-fleet-history command to describe the events for the specified EC2 Fleet for the specified time. For more information about the events returned in the output, see EC2 Fleet event types.\naws ec2 describe-fleet-history \\\n    --fleet-id fleet-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE \\\n    --start-time 2018-04-10T00:00:00Z\nExample output\n{\n    \"HistoryRecords\": [\n        {\n            \"EventInformation\": {\n                \"EventSubType\": \"submitted\"\n            },\n            \"EventType\": \"fleetRequestChange\",\n            \"Timestamp\": \"2020-09-01T18:26:05.000Z\"\n        },\n        {\n            \"EventInformation\": {\n                \"EventSubType\": \"active\"\n            },\n            \"EventType\": \"fleetRequestChange\",\n            \"Timestamp\": \"2020-09-01T18:26:15.000Z\"\n        },\n        {\n            \"EventInformation\": {\n                \"EventDescription\": \"t2.small, ami-07c8bc5c1ce9598c3, ...\",\n                \"EventSubType\": \"progress\"\n            },\n            \"EventType\": \"fleetRequestChange\",\n            \"Timestamp\": \"2020-09-01T18:26:17.000Z\"\n        },\n        {\n            \"EventInformation\": {\n                \"EventDescription\": \"{\\\"instanceType\\\":\\\"t2.small\\\", ...}\",\n                \"EventSubType\": \"launched\",\n                \"InstanceId\": \"i-083a1c446e66085d2\"\n            },\n            \"EventType\": \"instanceChange\",\n            \"Timestamp\": \"2020-09-01T18:26:17.000Z\"\n        },\n        {\n            \"EventInformation\": {\n                \"EventDescription\": \"{\\\"instanceType\\\":\\\"t2.small\\\", ...}\",\n                \"EventSubType\": \"launched\",\n                \"InstanceId\": \"i-090db02406cc3c2d6\"\n            },\n            \"EventType\": \"instanceChange\",\n            \"Timestamp\": \"2020-09-01T18:26:17.000Z\"\n        }\n    ], \n    \"FleetId\": \"fleet-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE\", \n    \"LastEvaluatedTime\": \"1970-01-01T00:00:00.000Z\", \n    \"StartTime\": \"2018-04-09T23:53:20.000Z\"\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/modify-ec2-fleet.html",
        "content": "You can modify the total target capacity, Spot capacity, and On-Demand capacity of an EC2 Fleet. You can also modify whether running instances should be terminated if the new total target capacity is reduced below the current size of the fleet.\nConsiderations\nConsider the following when modifying an EC2 Fleet:\nFleet type \u2013 You can only modify an EC2 Fleet of type maintain. You can't modify an EC2 Fleet of type request or instant.\nFleet parameters \u2013 You can modify the following parameters of an EC2 Fleet:\ntarget-capacity-specification \u2013 Increase or decrease the target capacity for:\nTotalTargetCapacity\nOnDemandTargetCapacity\nSpotTargetCapacity\nexcess-capacity-termination-policy \u2013 Whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the fleet. Valid values are:\nno-termination\ntermination\nFleet behavior when increasing total target capacity \u2013 When you increase the total target capacity, the EC2 Fleet launches the additional instances according to the instance purchasing option specified for DefaultTargetCapacityType, which is either On-Demand Instances or Spot Instances, and according to the specified allocation strategy.\nFleet behavior when decreasing Spot target capacity \u2013 When you decrease the Spot target capacity, the EC2 Fleet deletes any open requests that exceed the new target capacity. You can request that the fleet terminate Spot Instances until the size of the fleet reaches the new target capacity. If the allocation strategy is lowest-price, the fleet terminates the instances with the highest price per unit. If the allocation strategy is diversified, the fleet terminates instances across the pools. Alternatively, you can request that EC2 Fleet keep the fleet at its current size, but not replace any Spot Instances that are interrupted or any instances that you terminate manually.\nWhen an EC2 Fleet terminates a Spot Instance because the target capacity was decreased, the instance receives a Spot Instance interruption notice.\nFleet state \u2013 You can modify an EC2 Fleet that is in the submitted or active state. When you modify a fleet, it enters the modifying state.\nCommands for modifying an EC2 Fleet\nYou can use the modify-fleet command to modify an EC2 Fleet.\nTo modify the total target capacity of an EC2 Fleet\nUse the modify-fleet command to update the target capacity of the specified EC2 Fleet.\naws ec2 modify-fleet \\\n    --fleet-id fleet-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE \\\n    --target-capacity-specification TotalTargetCapacity=20\nTo specify that excess running instances mustn't be deleted when decreasing the total target capacity of an EC2 Fleet\nIf you are decreasing the target capacity but want to keep the fleet at its current size, you can modify the previous command as follows.\naws ec2 modify-fleet \\\n    --fleet-id fleet-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE \\\n    --target-capacity-specification TotalTargetCapacity=10 \\\n    --excess-capacity-termination-policy no-termination"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/delete-fleet.html",
        "content": "If you no longer require an EC2 Fleet request, you can delete it. After you delete a fleet request, all Spot requests associated with the fleet are canceled, so that no new Spot Instances are launched.\nWhen you delete an EC2 Fleet request, you must also specify if you want to terminate all of its instances. These include both On-Demand Instances and Spot Instances. For instant fleets, EC2 Fleet must terminate the instances when the fleet is deleted. A deleted instant fleet with running instances is not supported.\nIf you specify that the instances must be terminated when the fleet request is deleted, the fleet request enters the deleted_terminating state. Otherwise, it enters the deleted_running state, and the instances continue to run until they are interrupted or you terminate them manually.\nRestrictions\nYou can delete up to 25 fleets of type instant in a single operation.\nYou can delete up to 100 fleets of type maintain or request in a single operation.\nYou can delete up to 125 fleets in a single operation, provided you do not exceed the quota for each fleet type, as specified above.\nIf you exceed the specified number of fleets to delete, no fleets are deleted.\nUp to 1000 instances can be terminated in a single operation to delete instant fleets.\nTo delete an EC2 Fleet and terminate its instances\nUse the delete-fleets command and the --terminate-instances parameter to delete the specified EC2 Fleet and terminate its associated instances.\naws ec2 delete-fleets \\\n    --fleet-ids fleet-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE \\\n    --terminate-instances\nExample output\n{\n    \"UnsuccessfulFleetDeletions\": [], \n    \"SuccessfulFleetDeletions\": [\n        {\n            \"CurrentFleetState\": \"deleted_terminating\", \n            \"PreviousFleetState\": \"active\", \n            \"FleetId\": \"fleet-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE\"\n        }\n    ]\n}\nTo delete an EC2 Fleet without terminating its instances\nYou can modify the previous command using the --no-terminate-instances parameter to delete the specified EC2 Fleet without terminating its associated instances.\nNote\n--no-terminate-instances is not supported for instant fleets.\naws ec2 delete-fleets \\\n    --fleet-ids fleet-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE \\\n    --no-terminate-instances\nExample output\n{\n    \"UnsuccessfulFleetDeletions\": [], \n    \"SuccessfulFleetDeletions\": [\n        {\n            \"CurrentFleetState\": \"deleted_running\", \n            \"PreviousFleetState\": \"active\", \n            \"FleetId\": \"fleet-4b8aaae8-dfb5-436d-a4c6-3dafa4c6b7dcEXAMPLE\"\n        }\n    ]\n}\nTroubleshoot when a fleet fails to delete\nIf an EC2 Fleet fails to delete, UnsuccessfulFleetDeletions in the output returns the ID of the EC2 Fleet, an error code, and an error message.\nThe error codes are:\nExceededInstantFleetNumForDeletion\nfleetIdDoesNotExist\nfleetIdMalformed\nfleetNotInDeletableState\nNoTerminateInstancesNotSupported\nUnauthorizedOperation\nunexpectedError\nTroubleshoot ExceededInstantFleetNumForDeletion\nIf you try to delete more than 25 instant fleets in a single request, the ExceededInstantFleetNumForDeletion error is returned. The following is example output for this error.\n{\n    \"UnsuccessfulFleetDeletions\": [\n     {\n          \"FleetId\": \" fleet-5d130460-0c26-bfd9-2c32-0100a098f625\",\n          \"Error\": {\n                  \"Message\": \"Can\u2019t delete more than 25 instant fleets in a single request.\",\n                  \"Code\": \"ExceededInstantFleetNumForDeletion\"\n           }\n     },\n     {\n           \"FleetId\": \"fleet-9a941b23-0286-5bf4-2430-03a029a07e31\",\n           \"Error\": {\n                  \"Message\": \"Can\u2019t delete more than 25 instant fleets in a single request.\",\n                  \"Code\": \"ExceededInstantFleetNumForDeletion\"\n            }\n     }\n     .\n     .\n     .\n     ],\n     \"SuccessfulFleetDeletions\": []\n}\nTroubleshoot NoTerminateInstancesNotSupported\nIf you specify that the instances in an instant fleet must not be terminated when you delete the fleet, the NoTerminateInstancesNotSupported error is returned. --no-terminate-instances is not supported for instant fleets. The following is example output for this error.\n{\n      \"UnsuccessfulFleetDeletions\": [\n            {\n                  \"FleetId\": \"fleet-5d130460-0c26-bfd9-2c32-0100a098f625\",\n                  \"Error\": {\n                          \"Message\": \"NoTerminateInstances option is not supported for instant fleet\",\n                          \"Code\": \"NoTerminateInstancesNotSupported\"\n                   }\n            }\n       ],\n       \"SuccessfulFleetDeletions\": []\nTroubleshoot UnauthorizedOperation\nIf you do not have permission to terminate instances, you get the UnauthorizedOperation error when deleting a fleet that must terminate its instances. The following is the error response.\n<Response><Errors><Error><Code>UnauthorizedOperation</Code><Message>You are not authorized to perform this \noperation. Encoded authorization failure message: VvuncIxj7Z_CPGNYXWqnuFV-YjByeAU66Q9752NtQ-I3-qnDLWs6JLFd\nKnSMMiq5s6cGqjjPtEDpsnGHzzyHasFHOaRYJpaDVravoW25azn6KNkUQQlFwhJyujt2dtNCdduJfrqcFYAjlEiRMkfDHt7N63SKlweKUl\nBHturzDK6A560Y2nDSUiMmAB1y9UNtqaZJ9SNe5sNxKMqZaqKtjRbk02RZu5V2vn9VMk6fm2aMVHbY9JhLvGypLcMUjtJ76H9ytg2zRlje\nVPiU5v2s-UgZ7h0p2yth6ysUdhlONg6dBYu8_y_HtEI54invCj4CoK0qawqzMNe6rcmCQHvtCxtXsbkgyaEbcwmrm2m01-EMhekLFZeJLr\nDtYOpYcEl4_nWFX1wtQDCnNNCmxnJZAoJvb3VMDYpDTsxjQv1PxODZuqWHs23YXWVywzgnLtHeRf2o4lUhGBw17mXsS07k7XAfdPMP_brO\nPT9vrHtQiILor5VVTsjSPWg7edj__1rsnXhwPSu8gI48ZLRGrPQqFq0RmKO_QIE8N8s6NWzCK4yoX-9gDcheurOGpkprPIC9YPGMLK9tug\n</Message></Error></Errors><RequestID>89b1215c-7814-40ae-a8db-41761f43f2b0</RequestID></Response>\nTo resolve the error, you must add the ec2:TerminateInstances action to the IAM policy, as shown in the following example.\n{\n       \"Version\": \"2012-10-17\",\n       \"Statement\": [\n            {\n                \"Sid\": \"DeleteFleetsAndTerminateInstances\",\n                \"Effect\": \"Allow\",\n                \"Action\": [\n                       \"ec2:DeleteFleets\"\n                       \"ec2:TerminateInstances\"\n                ],\n                \"Resource\": \"*\"\n            }\n       ]\n    }"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/work-with-spot-fleets.html",
        "content": "To start using a Spot Fleet, create a request that includes the total target capacity for Spot Instances, an optional On-Demand portion, and either manually specify an AMI and a key pair, or specify a launch template that includes the configuration for the instances in the fleet. You can optionally specify additional parameters, or let the fleet use default values. You can also tag the fleet request, and its instances and volumes, when you create the fleet.\nThe fleet launches On-Demand Instances when there is available capacity, and launches Spot Instances when your maximum price exceeds the Spot price and capacity is available.\nOnce your fleet is launched, you can describe the fleet request, the instances in the fleet, and any fleet events. You can also assign additional tags as needed.\nIf you need to change any fleet parameters, such as the total target capacity, you can modify the fleet, provided it was configured to maintain capacity. You can't modify the capacity of a one-time request after it's been submitted.\nThe fleet request remains active until it expires or you cancel (delete) it. When you cancel the fleet request, you can either terminate the instances or leave them running. If you choose to leave them running, the On-Demand Instances run until you terminate them, and the Spot Instances run until they're interrupted or you terminate them.\nTopics\nSpot Fleet request states\nCreate a Spot Fleet\nTag a new or existing Spot Fleet request and the instances and volumes it launches\nDescribe a Spot Fleet configuration, its instances, and event history\nModify a Spot Fleet request\nCancel (delete) a Spot Fleet request\nUnderstand automatic scaling for Spot Fleet"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-states.html",
        "content": "A Spot Fleet request can be one of various states, with each state indicating a different stage of the request's lifecycle and its management of instances.\nA Spot Fleet request can be in one of the following states:\nsubmitted\nThe Spot Fleet request is being evaluated and Amazon EC2 is preparing to launch the target number of instances. If a request would exceed your Spot Fleet quotas, it is canceled immediately.\nactive\nThe Spot Fleet has been validated and Amazon EC2 is attempting to maintain the target number of running Spot Instances. The request remains in this state until it is modified or canceled.\nmodifying\nThe Spot Fleet request is being modified. The request remains in this state until the modification is fully processed or the request is canceled. Only a maintain fleet type can be modified. This state does not apply to a one-time request fleet type.\ncancelled_running\nThe Spot Fleet is canceled (deleted) and does not launch additional Spot Instances. Its existing instances continue to run until they are interrupted or terminated manually. The request remains in this state until all instances are interrupted or terminated.\ncancelled_terminating\nThe Spot Fleet is canceled (deleted) and its instances are terminating. The request remains in this state until all instances are terminated.\ncancelled\nThe Spot Fleet is canceled (deleted) and has no running instances. The request is deleted two days after its instances are terminated."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/create-spot-fleet.html",
        "content": "Using the AWS Management Console, quickly create a Spot Fleet request by choosing only an AMI and your desired total target capacity. Amazon EC2 will configure a fleet that best meets your needs and follows Spot best practice. For more information, see Quickly create a Spot Fleet request (console). Otherwise, you can modify any of the default settings. For more information, see Create a Spot Fleet request using defined parameters (console) and Create a Spot Fleet using the AWS CLI.\nIf you want to include On-Demand Instances in your fleet, you need to specify a launch template in your request and specify you desired On-Demand capacity.\nThe fleet launches On-Demand Instances when capacity is available, and launches Spot Instances when your maximum price exceeds the Spot price and capacity is available.\nIf your fleet includes Spot Instances and is of type maintain, Amazon EC2 will attempt to maintain your fleet target capacity when your Spot Instances are interrupted.\nTopics\nSpot Fleet permissions\nQuickly create a Spot Fleet request (console)\nCreate a Spot Fleet request using defined parameters (console)\nCreate a Spot Fleet using the AWS CLI\nCreate a Spot Fleet that replaces unhealthy Spot Instances\nSpot Fleet permissions\nIf your users will create or manage a Spot Fleet, you need to grant them the required permissions.\nIf you use the Amazon EC2 console to create a Spot Fleet, it creates two service-linked roles named AWSServiceRoleForEC2SpotFleet and AWSServiceRoleForEC2Spot, and a role named aws-ec2-spot-fleet-tagging-role that grant the Spot Fleet the permissions to request, launch, terminate, and tag resources on your behalf. If you use the AWS CLI or an API, you must ensure that these roles exist.\nUse the following instructions to grant the required permissions and create the roles.\nPermissions and roles\nGrant permission to users for Spot Fleet\nService-linked role for Spot Fleet\nService-linked role for Spot Instances\nIAM role for tagging a Spot Fleet\nGrant permission to users for Spot Fleet\nIf your users will create or manage a Spot Fleet, be sure to grant them the required permissions.\nTo create a policy for Spot Fleet\nOpen the IAM console at https://console.aws.amazon.com/iam/.\nIn the navigation pane, choose Policies, Create policy.\nOn the Create policy page, choose JSON, and replace the text with the following.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:RunInstances\",\n                \"ec2:CreateTags\",\n                \"ec2:RequestSpotFleet\",\n                \"ec2:ModifySpotFleetRequest\",\n                \"ec2:CancelSpotFleetRequests\",\n                \"ec2:DescribeSpotFleetRequests\",\n                \"ec2:DescribeSpotFleetInstances\",\n                \"ec2:DescribeSpotFleetRequestHistory\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"iam:PassRole\",\n            \"Resource\": \"arn:aws:iam::*:role/aws-ec2-spot-fleet-tagging-role\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:CreateServiceLinkedRole\",\n                \"iam:ListRoles\",\n                \"iam:ListInstanceProfiles\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\nThe preceding example policy grants a user the permissions required for most Spot Fleet use cases. To limit the user to specific API actions, specify only those API actions instead.\nRequired EC2 and IAM APIs\nThe following APIs must be included in the policy:\nec2:RunInstances \u2013 Required to launch instances in a Spot Fleet\nec2:CreateTags \u2013 Required to tag the Spot Fleet request, instances, or volumes\niam:PassRole \u2013 Required to specify the Spot Fleet role\niam:CreateServiceLinkedRole \u2013 Required to create the service-linked role\niam:ListRoles \u2013 Required to enumerate existing IAM roles\niam:ListInstanceProfiles \u2013 Required to enumerate existing instance profiles\nImportant\nIf you specify a role for the IAM instance profile in the launch specification or launch template, you must grant the user the permission to pass the role to the service. To do this, in the IAM policy include \"arn:aws:iam::*:role/IamInstanceProfile-role\" as a resource for the iam:PassRole action. For more information, see Granting a user permissions to pass a role to an AWS service in the IAM User Guide.\nSpot Fleet APIs\nAdd the following Spot Fleet API actions to your policy, as needed:\nec2:RequestSpotFleet\nec2:ModifySpotFleetRequest\nec2:CancelSpotFleetRequests\nec2:DescribeSpotFleetRequests\nec2:DescribeSpotFleetInstances\nec2:DescribeSpotFleetRequestHistory\nOptional IAM APIs\n(Optional) To enable a user to create roles or instance profiles using the IAM console, you must add the following actions to the policy:\niam:AddRoleToInstanceProfile\niam:AttachRolePolicy\niam:CreateInstanceProfile\niam:CreateRole\niam:GetRole\niam:ListPolicies\nChoose Review policy.\nOn the Review policy page, enter a policy name and description, and choose Create policy.\nTo provide access, add permissions to your users, groups, or roles:\nUsers and groups in AWS IAM Identity Center:\nCreate a permission set. Follow the instructions in Create a permission set in the AWS IAM Identity Center User Guide.\nUsers managed in IAM through an identity provider:\nCreate a role for identity federation. Follow the instructions in Create a role for a third-party identity provider (federation) in the IAM User Guide.\nIAM users:\nCreate a role that your user can assume. Follow the instructions in Create a role for an IAM user in the IAM User Guide.\n(Not recommended) Attach a policy directly to a user or add a user to a user group. Follow the instructions in Adding permissions to a user (console) in the IAM User Guide.\nService-linked role for Spot Fleet\nAmazon EC2 uses service-linked roles for the permissions that it requires to call other AWS services on your behalf. A service-linked role is a unique type of IAM role that is linked directly to an AWS service. Service-linked roles provide a secure way to delegate permissions to AWS services because only the linked service can assume a service-linked role. For more information, see Service-linked roles in the IAM User Guide.\nAmazon EC2 uses the service-linked role named AWSServiceRoleForEC2SpotFleet to launch and manage instances on your behalf.\nImportant\nIf you specify an encrypted AMI or an encrypted Amazon EBS snapshot in your Spot Fleet, you must grant the AWSServiceRoleForEC2SpotFleet role permission to use the CMK so that Amazon EC2 can launch instances on your behalf. For more information, see Grant access to CMKs for use with encrypted AMIs and EBS snapshots.\nPermissions granted by AWSServiceRoleForEC2SpotFleet\nThe AWSServiceRoleForEC2SpotFleet role grants the Spot Fleet permission to request, launch, terminate, and tag instances on your behalf. Amazon EC2 uses this service-linked role to complete the following actions:\nec2:RequestSpotInstances - Request Spot Instances\nec2:RunInstances - Launch instances\nec2:TerminateInstances - Terminate instances\nec2:DescribeImages - Describe Amazon Machine Images (AMIs) for the instances\nec2:DescribeInstanceStatus - Describe the status of the instances\nec2:DescribeSubnets - Describe the subnets for the instances\nec2:CreateTags - Add tags to the Spot Fleet request, instances, and volumes\nelasticloadbalancing:RegisterInstancesWithLoadBalancer - Add the specified instances to the specified load balancer\nelasticloadbalancing:RegisterTargets - Register the specified targets with the specified target group\nCreate the service-linked role\nUnder most circumstances, you don't need to manually create a service-linked role. Amazon EC2 creates the AWSServiceRoleForEC2SpotFleet service-linked role the first time you create a Spot Fleet using the console.\nIf you had an active Spot Fleet request before October 2017, when Amazon EC2 began supporting this service-linked role, Amazon EC2 created the AWSServiceRoleForEC2SpotFleet role in your AWS account. For more information, see A new role appeared in my AWS account in the IAM User Guide.\nIf you use the AWS CLI or an API to create a Spot Fleet, you must first ensure that this role exists.\nTo create the AWSServiceRoleForEC2SpotFleet role for Spot Fleet using the console\nOpen the IAM console at https://console.aws.amazon.com/iam/.\nIn the navigation pane, choose Roles.\nChoose Create role.\nOn the Select trusted entity page, do the following:\nFor Trusted entity type, choose AWS service.\nUnder Use case, for Service or use case, choose EC2.\nFor Use case, choose EC2 - Spot Fleet.\nNote\nThe EC2 - Spot Fleet use case will automatically create a policy with the required IAM permissions and will suggest AWSEC2SpotFleetServiceRolePolicy as the role name.\nChoose Next.\nOn the Add permissions page, choose Next.\nOn the Name, review, and create page, choose Create role.\nTo create the AWSServiceRoleForEC2SpotFleet role for Spot Fleet using the AWS CLI\nUse the create-service-linked-role command as follows.\naws iam create-service-linked-role --aws-service-name spotfleet.amazonaws.com\nIf you no longer need to use Spot Fleet, we recommend that you delete the AWSServiceRoleForEC2SpotFleet role. After this role is deleted from your account, Amazon EC2 will create the role again if you request a Spot Fleet using the console. For more information, see Deleting a service-linked role in the IAM User Guide.\nGrant access to CMKs for use with encrypted AMIs and EBS snapshots\nIf you specify an encrypted AMI or an encrypted Amazon EBS snapshot in your Spot Fleet request and you use a customer managed key for encryption, you must grant the AWSServiceRoleForEC2SpotFleet role permission to use the CMK so that Amazon EC2 can launch instances on your behalf. To do this, you must add a grant to the CMK, as shown in the following procedure.\nWhen providing permissions, grants are an alternative to key policies. For more information, see Using Grants and Using Key Policies in AWS KMS in the AWS Key Management Service Developer Guide.\nTo grant the AWSServiceRoleForEC2SpotFleet role permissions to use the CMK\nUse the create-grant command to add a grant to the CMK and to specify the principal (the AWSServiceRoleForEC2SpotFleet service-linked role) that is given permission to perform the operations that the grant permits. The CMK is specified by the key-id parameter and the ARN of the CMK. The principal is specified by the grantee-principal parameter and the ARN of the AWSServiceRoleForEC2SpotFleet service-linked role.\naws kms create-grant \\\n    --region us-east-1 \\\n    --key-id arn:aws:kms:us-east-1:444455556666:key/1234abcd-12ab-34cd-56ef-1234567890ab \\\n    --grantee-principal arn:aws:iam::111122223333:role/AWSServiceRoleForEC2SpotFleet \\\n    --operations \"Decrypt\" \"Encrypt\" \"GenerateDataKey\" \"GenerateDataKeyWithoutPlaintext\" \"CreateGrant\" \"DescribeKey\" \"ReEncryptFrom\" \"ReEncryptTo\"\nService-linked role for Spot Instances\nAmazon EC2 uses the service-linked role named AWSServiceRoleForEC2Spot to launch and manage Spot Instances on your behalf. For more information, see Service-linked role for Spot Instance requests.\nIAM role for tagging a Spot Fleet\nThe aws-ec2-spot-fleet-tagging-role IAM role grants the Spot Fleet permission to tag the Spot Fleet request, instances, and volumes. For more information, see Tag a new or existing Spot Fleet request and the instances and volumes it launches.\nImportant\nIf you choose to tag instances in the fleet and you also choose to maintain target capacity (the Spot Fleet request is of type maintain), the differences in the permissions that are set for the user and the IamFleetRole might lead to inconsistent tagging behavior of instances in the fleet. If the IamFleetRole does not include the CreateTags permission, some of the instances launched by the fleet might not be tagged. While we are working to fix this inconsistency, to ensure that all instances launched by the fleet are tagged, we recommend that you use the aws-ec2-spot-fleet-tagging-role role for the IamFleetRole. Alternatively, to use an existing role, attach the AmazonEC2SpotFleetTaggingRole AWS Managed Policy to the existing role. Otherwise, you need to manually add the CreateTags permission to your existing policy.\nTo create the IAM role for tagging a Spot Fleet\nOpen the IAM console at https://console.aws.amazon.com/iam/.\nIn the navigation pane, choose Roles.\nChoose Create role.\nOn the Select trusted entity page, under Trusted entity type, choose AWS service.\nUnder Use case, from Use cases for other AWS services, choose EC2, and then choose EC2 - Spot Fleet Tagging.\nChoose Next.\nOn the Add permissions page, choose Next.\nOn the Name, review, and create page, for Role name, enter a name for the role (for example, aws-ec2-spot-fleet-tagging-role).\nReview the information on the page, and then choose Create role.\nCross-service confused deputy prevention\nThe confused deputy problem is a security issue where an entity that doesn't have permission to perform an action can coerce a more-privileged entity to perform the action. We recommend that you use the aws:SourceArn and aws:SourceAccount global condition context keys in the aws-ec2-spot-fleet-tagging-role trust policy to limit the permissions that Spot Fleet gives another service to the resource.\nTo add the aws:SourceArn and aws:SourceAccount condition keys to the aws-ec2-spot-fleet-tagging-role trust policy\nOpen the IAM console at https://console.aws.amazon.com/iam/.\nIn the navigation pane, choose Roles.\nFind the aws-ec2-spot-fleet-tagging-role that you created previously and choose the link (not the checkbox).\nUnder Summary, choose the Trust relationships tab, and then choose Edit trust policy.\nIn the JSON statement, add a Condition element containing your aws:SourceAccount and aws:SourceArn global condition context keys to prevent the confused deputy problem, as follows:\n\"Condition\": {\n      \"ArnLike\": {\n        \"aws:SourceArn\": \"arn:aws:ec2:us-east-1:account_id:spot-fleet-request/sfr-*\"\n      },\n      \"StringEquals\": {\n        \"aws:SourceAccount\": \"account_id\"\n      }\nNote\nIf the aws:SourceArn value contains the account ID and you use both global condition context keys, the aws:SourceAccount value and the account in the aws:SourceArn value must use the same account ID when used in the same policy statement.\nThe final trust policy will be as follows:\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": {\n    \"Sid\": \"ConfusedDeputyPreventionExamplePolicy\",\n    \"Effect\": \"Allow\",\n    \"Principal\": {\n      \"Service\": \"spotfleet.amazonaws.com\"\n    },\n    \"Action\": \"sts:AssumeRole\",\n    \"Condition\": {\n      \"ArnLike\": {\n        \"aws:SourceArn\": \"arn:aws:ec2:us-east-1:account_id:spot-fleet-request/sfr-*\"\n      },\n      \"StringEquals\": {\n        \"aws:SourceAccount\": \"account_id\"\n      }\n    }\n  }\n}\nChoose Update policy.\nThe following table provides potential values for aws:SourceArn to limit the scope of the your aws-ec2-spot-fleet-tagging-role in varying degrees of specificity.\nAPI operation Called service Scope aws:SourceArn\nRequestSpotFleet AWS STS (AssumeRole) Limit the AssumeRole capability on aws-ec2-spot-fleet-tagging-role to spot-fleet-requests in the specified account. arn:aws:ec2:*:123456789012:spot-fleet-request/sfr-*\nRequestSpotFleet AWS STS (AssumeRole) Limit the AssumeRole capability on aws-ec2-spot-fleet-tagging-role to spot-fleet-requests in the specified account and specified Region. Note that this role will not be usable in other Regions. arn:aws:ec2:us-east-1:123456789012:spot-fleet-request/sfr-*\nRequestSpotFleet AWS STS (AssumeRole) Limit the AssumeRole capability on aws-ec2-spot-fleet-tagging-role to only actions affecting the fleet sfr-11111111-1111-1111-1111-111111111111. Note that this role may not be usable for other Spot Fleets. Also, this role cannot be used to launch any new Spot Fleets through request-spot-fleet. arn:aws:ec2:us-east-1:123456789012:spot-fleet-request/sfr-11111111-1111-1111-1111-111111111111\nQuickly create a Spot Fleet request (console)\nFollow these steps to quickly create a Spot Fleet request.\nTo create a Spot Fleet request using the recommended settings (console)\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Spot Requests.\nIf you are new to Spot, you see a welcome page; choose Get started. Otherwise, choose Request Spot Instances.\nUnder Launch parameters, choose Manually configure launch parameters.\nFor AMI, choose an AMI.\nUnder Target capacity, for Total target capacity, specify the number of units to request. For the type of unit, you can choose Instances, vCPUs, or Memory (GiB).\nFor Your fleet request at a glance, review your fleet configuration, and choose Launch.\nCreate a Spot Fleet request using defined parameters (console)\nYou can create a Spot Fleet by using parameters that you define.\nTo create a Spot Fleet request using defined parameters (console)\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Spot Requests.\nIf you are new to Spot, you see a welcome page; choose Get started. Otherwise, choose Request Spot Instances.\nFor Launch parameters, you can either manually configure the launch parameters or you can use a launch template, as follows:\n[Manually configure] To define the launch parameters in the Amazon EC2 console, choose Manually configure launch parameters, and then do the following:\nFor AMI, choose one of the basic AMIs provided by AWS, or choose Search for AMI to use an AMI from our user community, the AWS Marketplace, or one of your own.\nNote\nIf an AMI specified in the launch parameters is deregistered or disabled, no new instances can be launched from the AMI. For fleets that are set to maintain target capacity, the target capacity will not be maintained.\n(Optional) For Key pair name, choose an existing key pair or create a new one.\n[Existing key pair] Choose the key pair.\n[New key pair] Choose Create new key pair to go the Key pairs page. When you are done, return to the Spot Requests page and refresh the list.\n(Optional) Expand Additional launch parameters, and do the following:\n(Optional) To enable Amazon EBS optimization, for EBS-optimized, select Launch EBS-optimized instances.\n(Optional) To add temporary block-level storage for your instances, for Instance store, choose Attach at launch.\n(Optional) To add storage, choose Add new volume, and specify additional instance store volumes or Amazon EBS volumes, depending on the instance type.\n(Optional) By default, basic monitoring is enabled for your instances. To enable detailed monitoring, for Monitoring, select Enable CloudWatch detailed monitoring.\n(Optional) To run a Dedicated Spot Instance, for Tenancy, choose Dedicated - run a dedicated instance.\n(Optional) For Security groups, choose one or more security groups or create a new one.\n[Existing security group] Choose one or more security groups.\n[New security group] Choose Create new security group to go the Security Groups page. When you are done, return to the Spot Requests and refresh the list.\n(Optional) To make your instances reachable from the internet, for Auto-assign IPv4 Public IP, choose Enable.\n(Optional) To launch your Spot Instances with an IAM role, for IAM instance profile, choose the role.\n(Optional) To run a start-up script, copy it to User data.\n(Optional) To add a tag, choose Create tag and enter the key and value for the tag, and choose Create. Repeat for each tag.\nFor each tag, to tag the instances and the Spot Fleet request with the same tag, ensure that both Instances and Fleet are selected. To tag only the instances launched by the fleet, clear Fleet. To tag only the Spot Fleet request, clear Instances.\n[Launch template] To use a configuration you created in a launch template, choose Use a launch template, and for Launch template, choose a launch template.\nNote\nIf you want On-Demand capacity in your Spot Fleet, you must specify a launch template.\nFor Additional request details, do the following:\nReview the additional request details. To make changes, clear Apply defaults.\n(Optional) For IAM fleet role, you can use the default role or choose a different role. To use the default role after changing the role, choose Use default role.\n(Optional) To create a request that is valid only during a specific time period, edit Request valid from and Request valid until.\n(Optional) By default, Amazon EC2 terminates your Spot Instances when the Spot Fleet request expires. To keep them running after your request expires, clear Terminate the instances when the request expires.\n(Optional) To register your Spot Instances with a load balancer, choose Receive traffic from one or more load balancers and choose one or more Classic Load Balancers or target groups.\nFor Target capacity, do the following:\nFor Total target capacity, specify the number of units to request. For the type of unit, you can choose Instances, vCPUs, or Memory (MiB). To specify a target capacity of 0 so that you can add capacity later, you must first select Maintain target capacity.\n(Optional) For Include On-Demand base capacity, specify the number of On-Demand units to request. The number must be less than the Total target capacity. Amazon EC2 calculates the difference, and allocates the difference to Spot units to request.\nImportant\nTo specify optional On-Demand capacity, you must first choose a launch template.\n(Optional) By default, Amazon EC2 terminates Spot Instances when they are interrupted. To maintain the target capacity, select Maintain target capacity. You can then specify that Amazon EC2 terminates, stops, or hibernates Spot Instances when they are interrupted. To do so, choose the corresponding option from Interruption behavior.\nNote\nIf an AMI specified in the launch parameters is deregistered or disabled, no new instances can be launched from the AMI. In this case, for fleets that are set to maintain target capacity, the target capacity will not be maintained.\n(Optional) To allow Spot Fleet to launch a replacement Spot Instance when an instance rebalance notification is emitted for an existing Spot Instance in the fleet, select Capacity rebalance, and then choose an instance replacement strategy. If you choose Launch before terminate, specify the delay (in seconds) before Amazon EC2 terminates the old instances. For more information, see Use Capacity Rebalancing in EC2 Fleet and Spot Fleet to replace at-risk Spot Instances.\n(Optional) To control the amount you pay per hour for all the Spot Instances in your fleet, select Set maximum cost for Spot Instances and then enter the maximum total amount you're willing to pay per hour. When the maximum total amount is reached, Spot Fleet stops launching Spot Instances even if it hasn\u2019t met the target capacity. For more information, see Set a spending limit for your EC2 Fleet or Spot Fleet.\nFor Network, do the following:\nFor Network, choose an existing VPC or create a new one.\n[Existing VPC] Choose the VPC.\n[New VPC] Choose Create new VPC to go the Amazon VPC console. When you're done, return to this screen and refresh the list.\n(Optional) For Availability Zone, let Amazon EC2 choose the Availability Zones for your Spot Instances, or specify one or more Availability Zones.\nIf you have more than one subnet in an Availability Zone, choose the appropriate subnet from Subnet. To add subnets, choose Create new subnet to go to the Amazon VPC console. When you are done, return to this screen and refresh the list.\nFor Instance type requirements, you can either specify instance attributes and let Amazon EC2 identify the optimal instance types with these attributes, or you can specify a list of instances. For more information, see Specify attributes for instance type selection for EC2 Fleet or Spot Fleet.\nIf you choose Specify instance attributes that match your compute requirements, specify your instance attributes as follows:\nFor vCPUs, enter the desired minimum and maximum number of vCPUs. To specify no limit, select No minimum or No maximum, or both.\nFor Memory (GiB), enter the desired minimum and maximum amount of memory. To specify no limit, select No minimum or No maximum, or both.\n(Optional) For Additional instance attribute, you can optionally specify one or more attributes to express your compute requirements in more detail. Each additional attribute adds a further constraint to your request. You can omit the additional attributes; when omitted, the default values are used. For a description of each attribute and their default values, see get-spot-placement-scores.\n(Optional) To view the instance types with your specified attributes, expand Preview matching instance types. To exclude instance types from being used in your request, select the instances and then choose Exclude selected instance types.\nIf you choose Manually select instance types, Spot Fleet provides a default list of instance types. To select more instance types, choose Add instance types, select the instance types to use in your request, and choose Select. To delete instance types, select the instance types and choose Delete.\nFor Allocation strategy, choose a Spot allocation strategy and an On-Demand allocation strategy that meets your needs. For more information, see Use allocation strategies to determine how EC2 Fleet or Spot Fleet fulfills Spot and On-Demand capacity.\nFor Your fleet request at a glance, review your fleet configuration, and make any adjustments if necessary.\n(Optional) To download a copy of the launch configuration for use with the AWS CLI, choose JSON config.\nWhen you're ready to launch your Spot Fleet, choose Launch.\nThe Spot Fleet request type is fleet. When the request is fulfilled, requests of type instance are added, where the state is active and the status is fulfilled.\nCreate a Spot Fleet using the AWS CLI\nTo create a Spot Fleet request using the AWS CLI\nUse the request-spot-fleet command to create a Spot Fleet request.\naws ec2 request-spot-fleet --spot-fleet-request-config file://config.json\nFor example configuration files, see Example CLI configurations Spot Fleet.\nThe following is example output:\n{\n    \"SpotFleetRequestId\": \"sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE\"\n} \nCreate a Spot Fleet that replaces unhealthy Spot Instances\nSpot Fleet checks the health status of the Spot Instances in the fleet every two minutes. The health status of an instance is either healthy or unhealthy.\nSpot Fleet determines the health status of an instance by using the status checks provided by Amazon EC2. An instance is determined as unhealthy when the status of either the instance status check or the system status check is impaired for three consecutive health checks. For more information, see Status checks for Amazon EC2 instances.\nYou can configure your fleet to replace unhealthy Spot Instances. After enabling health check replacement, a Spot Instance is replaced when it is reported as unhealthy. The fleet could go below its target capacity for up to a few minutes while an unhealthy Spot Instance is being replaced.\nRequirements\nHealth check replacement is supported only for Spot Fleets that maintain a target capacity (fleets of type maintain), not for one-time Spot Fleets (fleets of type request).\nHealth check replacement is supported only for Spot Instances. This feature is not supported for On-Demand Instances.\nYou can configure your Spot Fleet to replace unhealthy instances only when you create it.\nUsers can use health check replacement only if they have permission to call the ec2:DescribeInstanceStatus action.\nConsole\nAWS CLI\nTo configure a Spot Fleet to replace unhealthy Spot Instances using the console\nFollow the steps for creating a Spot Fleet in Create a Spot Fleet request using defined parameters (console).\nTo configure the fleet to replace unhealthy Spot Instances, expand Additional launch parameters, and under Health check, select Replace unhealthy instances. To enable this option, you must first choose Maintain target capacity."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/tag-spot-fleet.html",
        "content": "To help categorize and manage your Spot Fleet requests and the instances and volumes that it launches, you can tag them with custom metadata. You can assign a tag to a Spot Fleet request when you create it, or afterward. Similarly, you can assign a tag to the instances and volumes when they're launched by the fleet, or afterward.\nWhen you tag a fleet request, the instances and volumes that are launched by the fleet are not automatically tagged. You need to explicitly tag the instances and volumes launched by the fleet. You can choose to assign tags to only the fleet request, or to only the instances launched by the fleet, or to only the volumes attached to the instances launched by the fleet, or to all of them.\nNote\nYou can only tag volumes that are attached to On-Demand Instances. You can't tag volumes that are attached to Spot Instances.\nYou can assign tags using the Amazon EC2 console or a command line tool.\nFor more information about how tags work, see Tag your Amazon EC2 resources.\nContents\nPrerequisite\nTag a new Spot Fleet and the instances and volumes that it launches\nTag an existing Spot Fleet\nView Spot Fleet request tags\nPrerequisite\nGrant the user the permission to tag resources. For more information, see Example: Tag resources.\nTo grant a user the permission to tag resources\nCreate an IAM policy that includes the following:\nThe ec2:CreateTags action. This grants the user permission to create tags.\nThe ec2:RequestSpotFleet action. This grants the user permission to create a Spot Fleet request.\nFor Resource, you must specify \"*\". This allows users to tag all resource types.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"TagSpotFleetRequest\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateTags\",\n                \"ec2:RequestSpotFleet\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\nImportant\nWe currently do not support resource-level permissions for the spot-fleet-request resource. If you specify spot-fleet-request as a resource, you will get an unauthorized exception when you try to tag the fleet. The following example illustrates how not to set the policy.\n{\n    \"Effect\": \"Allow\",\n    \"Action\": [\n        \"ec2:CreateTags\",\n        \"ec2:RequestSpotFleet\"\n    ],\n    \"Resource\": \"arn:aws:ec2:us-east-1:111122223333:spot-fleet-request/*\"\n}\nTo provide access, add permissions to your users, groups, or roles:\nUsers and groups in AWS IAM Identity Center:\nCreate a permission set. Follow the instructions in Create a permission set in the AWS IAM Identity Center User Guide.\nUsers managed in IAM through an identity provider:\nCreate a role for identity federation. Follow the instructions in Create a role for a third-party identity provider (federation) in the IAM User Guide.\nIAM users:\nCreate a role that your user can assume. Follow the instructions in Create a role for an IAM user in the IAM User Guide.\n(Not recommended) Attach a policy directly to a user or add a user to a user group. Follow the instructions in Adding permissions to a user (console) in the IAM User Guide.\nTag a new Spot Fleet and the instances and volumes that it launches\nTo tag a new Spot Fleet request and the instances and volumes that it launches using the console\nFollow the Create a Spot Fleet request using defined parameters (console) procedure.\nThe way you add a tag depends on whether you manually configured the fleet or used a launch template.\nIf you manually configured the fleet, do the following:\nTo add a tag, expand Additional launch parameters, choose Create tag, and enter the key and value for the tag. Repeat for each tag.\nFor each tag, you can tag the Spot Fleet request and the instances with the same tag. To tag both, ensure that both Instances and Fleet are selected. To tag only the Spot Fleet request, clear Instances. To tag only the instances launched by the fleet, clear Fleet.\nNote\nWhen you manually configure a fleet, there is no option to tag volumes. Volume tags are only supported for volumes that are attached to On-Demand Instances. When you manually configure a fleet, you can't specify On-Demand Instances.\nIf you used a launch template, do the following:\nTo add a tag to the fleet request, under Tags, choose Create Tag, and enter the key and value for the tag. Repeat for each tag.\nTo tag the resources in your fleet, you must specify tags in the launch template.\nTo tag a new Spot Fleet request and the instances and volumes that it launches using the AWS CLI\nTo tag a Spot Fleet request when you create it, and to tag the instances and volumes when they are launched by the fleet, configure the Spot Fleet request configuration as follows:\nSpot Fleet request tags:\nSpecify the tags for the Spot Fleet request in SpotFleetRequestConfig.\nFor ResourceType, specify spot-fleet-request. If you specify another value, the fleet request will fail.\nFor Tags, specify the key-value pair. You can specify more than one key-value pair.\nInstance tags:\nSpecify the tags for the instances in LaunchSpecifications.\nFor ResourceType, specify instance. If you specify another value, the fleet request will fail.\nFor Tags, specify the key-value pair. You can specify more than one key-value pair.\nAlternatively, you can specify the tags for the instance in the launch template that is referenced in the Spot Fleet request.\nVolume tags:\nSpecify the tags for the volumes in the launch template that is referenced in the Spot Fleet request. Volume tagging in LaunchSpecifications is not supported.\nIn the following example, the Spot Fleet request is tagged with two tags: Key=Environment and Value=Production, and Key=Cost-Center and Value=123. The instances that are launched by the fleet are tagged with one tag (which is the same as one of the tags for the Spot Fleet request): Key=Cost-Center and Value=123.\n{\n    \"SpotFleetRequestConfig\": {\n        \"AllocationStrategy\": \"priceCapacityOptimized\",\n        \"ExcessCapacityTerminationPolicy\": \"default\",\n        \"IamFleetRole\": \"arn:aws:iam::111122223333:role/aws-ec2-spot-fleet-tagging-role\",\n        \"LaunchSpecifications\": [\n            {\n                \"ImageId\": \"ami-0123456789EXAMPLE\",\n                \"InstanceType\": \"c4.large\",\n                \"TagSpecifications\": [\n                    {\n                        \"ResourceType\": \"instance\",\n                        \"Tags\": [\n                            {\n                                \"Key\": \"Cost-Center\",\n                                \"Value\": \"123\"\n                            }\n                        ]\n                    }\n                ]\n            }\n        ],\n        \"SpotPrice\": \"5\",\n        \"TargetCapacity\": 2,\n        \"TerminateInstancesWithExpiration\": true,\n        \"Type\": \"maintain\",\n        \"ReplaceUnhealthyInstances\": true,\n        \"InstanceInterruptionBehavior\": \"terminate\",\n        \"InstancePoolsToUseCount\": 1,\n        \"TagSpecifications\": [\n            {\n                \"ResourceType\": \"spot-fleet-request\",\n                \"Tags\": [\n                    {\n                        \"Key\": \"Environment\",\n                        \"Value\":\"Production\"\n                    },\n                    {\n                        \"Key\": \"Cost-Center\",\n                        \"Value\":\"123\"\n                    }\n                ]\n            }\n        ]\n    }\n}\nTo tag instances launched by a Spot Fleet using the AWS CLI\nTo tag instances when they are launched by the fleet, you can either specify the tags in the launch template that is referenced in the Spot Fleet request, or you can specify the tags in the Spot Fleet request configuration as follows:\nSpecify the tags for the instances in LaunchSpecifications.\nFor ResourceType, specify instance. If you specify another value, the fleet request will fail.\nFor Tags, specify the key-value pair. You can specify more than one key-value pair.\nIn the following example, the instances that are launched by the fleet are tagged with one tag: Key=Cost-Center and Value=123.\n{\n    \"SpotFleetRequestConfig\": {\n        \"AllocationStrategy\": \"priceCapacityOptimized\",\n        \"ExcessCapacityTerminationPolicy\": \"default\",\n        \"IamFleetRole\": \"arn:aws:iam::111122223333:role/aws-ec2-spot-fleet-tagging-role\",\n        \"LaunchSpecifications\": [\n            {\n                \"ImageId\": \"ami-0123456789EXAMPLE\",\n                \"InstanceType\": \"c4.large\",\n                \"TagSpecifications\": [\n                    {\n                        \"ResourceType\": \"instance\",\n                        \"Tags\": [\n                            {\n                                \"Key\": \"Cost-Center\",\n                                \"Value\": \"123\"\n                            }\n                        ]\n                    }\n                ]\n            }\n        ],\n        \"SpotPrice\": \"5\",\n        \"TargetCapacity\": 2,\n        \"TerminateInstancesWithExpiration\": true,\n        \"Type\": \"maintain\",\n        \"ReplaceUnhealthyInstances\": true,\n        \"InstanceInterruptionBehavior\": \"terminate\",\n        \"InstancePoolsToUseCount\": 1\n    }\n}\nTo tag volumes attached to On-Demand Instances launched by a Spot Fleet using the AWS CLI\nTo tag volumes when they are created by the fleet, you must specify the tags in the launch template that is referenced in the Spot Fleet request.\nNote\nVolume tags are only supported for volumes that are attached to On-Demand Instances. You can't tag volumes that are attached to Spot Instances.\nVolume tagging in LaunchSpecifications is not supported.\nTag an existing Spot Fleet\nTo tag an existing Spot Fleet request using the console\nAfter you create a Spot Fleet request, you can add tags to the fleet request using the console.\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Spot Requests.\nSelect your Spot Fleet request.\nChoose the Tags tab and choose Create Tag.\nTo tag an existing Spot Fleet request using the AWS CLI\nYou can use the create-tags command to tag existing resources. In the following example, the existing Spot Fleet request is tagged with Key=purpose and Value=test.\naws ec2 create-tags \\\n    --resources sfr-11112222-3333-4444-5555-66666EXAMPLE \\\n    --tags Key=purpose,Value=test\nView Spot Fleet request tags\nTo view Spot Fleet request tags using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Spot Requests.\nSelect your Spot Fleet request and choose the Tags tab.\nTo describe Spot Fleet request tags\nUse the describe-tags command to view the tags for the specified resource. In the following example, you describe the tags for the specified Spot Fleet request.\naws ec2 describe-tags \\\n    --filters \"Name=resource-id,Values=sfr-11112222-3333-4444-5555-66666EXAMPLE\"\n{\n    \"Tags\": [\n        {\n            \"Key\": \"Environment\",\n            \"ResourceId\": \"sfr-11112222-3333-4444-5555-66666EXAMPLE\",\n            \"ResourceType\": \"spot-fleet-request\",\n            \"Value\": \"Production\"\n        },\n        {\n            \"Key\": \"Another key\",\n            \"ResourceId\": \"sfr-11112222-3333-4444-5555-66666EXAMPLE\",\n            \"ResourceType\": \"spot-fleet-request\",\n            \"Value\": \"Another value\"\n        }\n    ]\n}  \nYou can also view the tags of a Spot Fleet request by describing the Spot Fleet request.\nUse the describe-spot-fleet-requests command to view the configuration of the specified Spot Fleet request, which includes any tags that were specified for the fleet request.\naws ec2 describe-spot-fleet-requests \\\n    --spot-fleet-request-ids sfr-11112222-3333-4444-5555-66666EXAMPLE\n{\n    \"SpotFleetRequestConfigs\": [\n        {\n            \"ActivityStatus\": \"fulfilled\",\n            \"CreateTime\": \"2020-02-13T02:49:19.709Z\",\n            \"SpotFleetRequestConfig\": {\n                \"AllocationStrategy\": \"capacityOptimized\",\n                \"OnDemandAllocationStrategy\": \"lowestPrice\",\n                \"ExcessCapacityTerminationPolicy\": \"Default\",\n                \"FulfilledCapacity\": 2.0,\n                \"OnDemandFulfilledCapacity\": 0.0,\n                \"IamFleetRole\": \"arn:aws:iam::111122223333:role/aws-ec2-spot-fleet-tagging-role\",\n                \"LaunchSpecifications\": [\n                    {\n                        \"ImageId\": \"ami-0123456789EXAMPLE\",\n                        \"InstanceType\": \"c4.large\"\n                    }\n                ],\n                \"TargetCapacity\": 2,\n                \"OnDemandTargetCapacity\": 0,\n                \"Type\": \"maintain\",\n                \"ReplaceUnhealthyInstances\": false,\n                \"InstanceInterruptionBehavior\": \"terminate\"\n            },\n            \"SpotFleetRequestId\": \"sfr-11112222-3333-4444-5555-66666EXAMPLE\",\n            \"SpotFleetRequestState\": \"active\",\n            \"Tags\": [\n                {\n                    \"Key\": \"Environment\",\n                    \"Value\": \"Production\"\n                },\n                {\n                    \"Key\": \"Another key\",\n                    \"Value\": \"Another value\"\n                }\n            ]\n        }\n    ]\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-spot-fleet.html",
        "content": "You can describe your Spot Fleet configuration, the instances in your Spot Fleet, and the event history of your Spot Fleet.\nTo describe your Spot Fleet (console)\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Spot Requests.\nSelect your Spot Fleet request. The ID begins with sfr-. To see the configuration details, choose Description.\nTo list the Spot Instances for the Spot Fleet, choose Instances.\nTo view the history for the Spot Fleet, choose History.\nTo describe your Spot Fleet (AWS CLI)\nUse the describe-spot-fleet-requests command to describe your Spot Fleet requests.\naws ec2 describe-spot-fleet-requests\nUse the describe-spot-fleet-instances command to describe the Spot Instances for the specified Spot Fleet.\naws ec2 describe-spot-fleet-instances \\\n    --spot-fleet-request-id sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE\nUse the describe-spot-fleet-request-history command to describe the event history for the specified Spot Fleet request.\naws ec2 describe-spot-fleet-request-history \\\n    --spot-fleet-request-id sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE \\\n    --start-time 2015-05-18T00:00:00Z"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/modify-spot-fleet.html",
        "content": "You can modify an active Spot Fleet request to complete the following tasks:\nIncrease the total target capacity and On-Demand portion\nDecrease the total target capacity and On-Demand portion\nNote\nYou can't modify a one-time Spot Fleet request. You can only modify a Spot Fleet request if you selected Maintain target capacity when you created the Spot Fleet request.\nWhen you increase the total target capacity, the Spot Fleet launches additional Spot Instances. When you increase the On-Demand portion, the Spot Fleet launches additional On-Demand Instances.\nWhen you increase the total target capacity, the Spot Fleet launches the additional Spot Instances according to the allocation strategy for its Spot Fleet request.\nWhen you decrease the total target capacity, the Spot Fleet cancels any open requests that exceed the new target capacity. You can request that the Spot Fleet terminate Spot Instances until the size of the fleet reaches the new target capacity. If the allocation strategy is diversified, the Spot Fleet terminates instances across the pools. Alternatively, you can request that the Spot Fleet keep the fleet at its current size, but not replace any Spot Instances that are interrupted or that you terminate manually.\nWhen a Spot Fleet terminates an instance because the target capacity was decreased, the instance receives a Spot Instance interruption notice.\nTo modify a Spot Fleet request (console)\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Spot Requests.\nSelect your Spot Fleet request.\nChoose Actions, Modify target capacity.\nIn Modify target capacity, do the following:\nEnter the new target capacity and On-Demand portion.\n(Optional) If you are decreasing the target capacity but want to keep the fleet at its current size, clear Terminate instances.\nChoose Submit.\nTo modify a Spot Fleet request using the AWS CLI\nUse the modify-spot-fleet-request command to update the target capacity of the specified Spot Fleet request.\naws ec2 modify-spot-fleet-request \\\n    --spot-fleet-request-id sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE \\\n    --target-capacity 20\nYou can modify the previous command as follows to decrease the target capacity of the specified Spot Fleet without terminating any Spot Instances as a result.\naws ec2 modify-spot-fleet-request \\\n    --spot-fleet-request-id sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE \\\n    --target-capacity 10 \\\n    --excess-capacity-termination-policy NoTermination"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cancel-spot-fleet.html",
        "content": "If you no longer require a Spot Fleet, you can cancel the Spot Fleet request, which deletes the request. After you cancel a fleet request, all Spot requests associated with the fleet are also canceled, so that no new Spot Instances are launched.\nWhen you cancel a Spot Fleet request, you must also specify if you want to terminate all of its instances. These include both On-Demand Instances and Spot Instances.\nIf you specify that the instances must be terminated when the fleet request is canceled, the fleet request enters the cancelled_terminating state. Otherwise, it enters the cancelled_running state, and the instances continue to run until they are interrupted or you terminate them manually.\nRestrictions\nYou can cancel up to 100 fleets in a single request. If you exceed the specified number, no fleets are canceled.\nTo cancel (delete) a Spot Fleet request (console)\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Spot Requests.\nSelect your Spot Fleet request.\nChoose Actions, Cancel request.\nIn the Cancel Spot request dialog box, do the following:\nTo terminate the associated instances at the same time as canceling the Spot Fleet request, leave the Terminate instances checkbox selected. To cancel the Spot Fleet request without terminating the associated instances, clear the Terminate instances checkbox.\nChoose Confirm.\nTo cancel (delete) a Spot Fleet request and terminate its instances using the AWS CLI\nUse the cancel-spot-fleet-requests command to cancel the specified Spot Fleet request and terminate its On-Demand Instances and Spot Instances.\naws ec2 cancel-spot-fleet-requests \\\n    --spot-fleet-request-ids sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE \\\n    --terminate-instances\nExample output\n{\n    \"SuccessfulFleetRequests\": [\n        {\n            \"SpotFleetRequestId\": \"sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE\",\n            \"CurrentSpotFleetRequestState\": \"cancelled_terminating\",\n            \"PreviousSpotFleetRequestState\": \"active\"\n        }\n    ],\n    \"UnsuccessfulFleetRequests\": []\n}\nTo cancel (delete) a Spot Fleet request without terminating its instances using the AWS CLI\nYou can modify the previous command using the --no-terminate-instances parameter to cancel the specified Spot Fleet request without terminating its On-Demand Instances and Spot Instances.\naws ec2 cancel-spot-fleet-requests \\\n    --spot-fleet-request-ids sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE \\\n    --no-terminate-instances\nExample output\n{\n    \"SuccessfulFleetRequests\": [\n        {\n            \"SpotFleetRequestId\": \"sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE\",\n            \"CurrentSpotFleetRequestState\": \"cancelled_running\",\n            \"PreviousSpotFleetRequestState\": \"active\"\n        }\n    ],\n    \"UnsuccessfulFleetRequests\": []\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-automatic-scaling.html",
        "content": "Automatic scaling enables your Spot Fleet to increase or decrease its target capacity based on demand. With automatic scaling, a Spot Fleet can either launch instances (scale out) or terminate instances (scale in) within a specified range, in response to one or more scaling policies.\nAutomatic scaling for Spot Fleet is made possible by a combination of the Amazon EC2, Amazon CloudWatch, and Application Auto Scaling APIs. Spot Fleet requests are created with Amazon EC2, alarms are created with CloudWatch, and scaling policies are created with Application Auto Scaling.\nTypes of automatic scaling\nSpot Fleet supports the following types of automatic scaling:\nTarget tracking scaling \u2013 Increase or decrease the current capacity of the fleet by targeting a value for a specific metric. This is similar to the way that your thermostat maintains the temperature of your home\u2014you select the desired temperature and the thermostat does the rest.\nStep scaling \u2013 Increase or decrease the current capacity of the fleet based on a set of scaling adjustments, known as step adjustments, that vary based on the size of the alarm breach.\nScheduled scaling \u2013 Increase or decrease the current capacity of the fleet based on the date and time.\nConsiderations\nWhen using automatic scaling for your Spot Fleet, consider the following:\nInstance weighting \u2013 If you're using instance weighting, keep in mind that Spot Fleet can exceed the target capacity as needed. Fulfilled capacity can be a floating-point number but target capacity must be an integer, so Spot Fleet rounds up to the next integer. You must take these behaviors into account when you look at the outcome of a scaling policy when an alarm is triggered. For example, suppose that the target capacity is 30, the fulfilled capacity is 30.1, and the scaling policy subtracts 1. When the alarm is triggered, the automatic scaling process subtracts 1 from 30.1 to get 29.1 and then rounds it up to 30, so no scaling action is taken. As another example, suppose that you selected instance weights of 2, 4, and 8, and a target capacity of 10, but no weight 2 instances were available so Spot Fleet provisioned instances of weights 4 and 8 for a fulfilled capacity of 12. If the scaling policy decreases target capacity by 20% and an alarm is triggered, the automatic scaling process subtracts 12*0.2 from 12 to get 9.6 and then rounds it up to 10, so no scaling action is taken.\nCooldown period \u2013 The scaling policies that you create for Spot Fleet support a cooldown period. This is the number of seconds after a scaling activity completes where previous trigger-related scaling activities can influence future scaling events. For scale-out policies, while the cooldown period is in effect, the capacity that has been added by the previous scale-out event that initiated the cooldown is calculated as part of the desired capacity for the next scale out. The intention is to continuously (but not excessively) scale out. For scale in policies, the cooldown period is used to block subsequent scale in requests until it has expired. The intention is to scale in conservatively to protect your application's availability. However, if another alarm triggers a scale-out policy during the cooldown period after a scale-in, automatic scaling scales out your scalable target immediately.\nUse detailed monitoring \u2013 We recommend that you scale based on instance metrics with a 1-minute frequency because that ensures a faster response to utilization changes. Scaling on metrics with a 5-minute frequency can result in slower response time and scaling on stale metric data. To send metric data for your instances to CloudWatch in 1-minute periods, you must specifically enable detailed monitoring. For more information, see Manage detailed monitoring for your EC2 instances and Create a Spot Fleet request using defined parameters (console).\nAWS CLI \u2013 If you use the AWS CLI for configuring scaling for Spot Fleet, you'll use the application-autoscaling commands."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-auto-scaling-IAM.html",
        "content": "Automatic scaling for Spot Fleet is made possible by a combination of the Amazon EC2, Amazon CloudWatch, and Application Auto Scaling APIs. Spot Fleet requests are created with Amazon EC2, alarms are created with CloudWatch, and scaling policies are created with Application Auto Scaling. In addition to the IAM permissions required for using Spot Fleet and Amazon EC2, the user that accesses the fleet scaling settings must have the appropriate permissions for the services that support automatic scaling.\nTo use automatic scaling for Spot Fleet, users must have permissions to use the actions shown in the following example policy.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"application-autoscaling:*\",\n                \"ec2:DescribeSpotFleetRequests\",\n                \"ec2:ModifySpotFleetRequest\",\n                \"cloudwatch:DeleteAlarms\",\n                \"cloudwatch:DescribeAlarmHistory\",\n                \"cloudwatch:DescribeAlarms\",\n                \"cloudwatch:DescribeAlarmsForMetric\",\n                \"cloudwatch:GetMetricStatistics\",\n                \"cloudwatch:ListMetrics\",\n                \"cloudwatch:PutMetricAlarm\",\n                \"cloudwatch:DisableAlarmActions\",\n                \"cloudwatch:EnableAlarmActions\",\n                \"iam:CreateServiceLinkedRole\",\n                \"sns:CreateTopic\",\n                \"sns:Subscribe\",\n                \"sns:Get*\",\n                \"sns:List*\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\nYou can also create your own IAM policies that allow more fine-grained permissions for calls to the Application Auto Scaling API. For more information, see Identity and Access Management for Application Auto Scaling in the Application Auto Scaling User Guide.\nThe Application Auto Scaling service also needs permission to describe your Spot Fleet and CloudWatch alarms, and permissions to modify your Spot Fleet target capacity on your behalf. If you enable automatic scaling for your Spot Fleet, it creates a service-linked role named AWSServiceRoleForApplicationAutoScaling_EC2SpotFleetRequest. This service-linked role grants Application Auto Scaling permission to describe the alarms for your policies, to monitor the current capacity of the fleet, and to modify the capacity of the fleet. The original managed Spot Fleet role for Application Auto Scaling was aws-ec2-spot-fleet-autoscale-role, but it is no longer required. The service-linked role is the default role for Application Auto Scaling. For more information, see Service-linked roles for Application Auto Scaling in the Application Auto Scaling User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-target-tracking.html",
        "content": "With target tracking scaling, you create a target tracking scaling policy by selecting a metric and setting a target value. Spot Fleet then creates and manages the CloudWatch alarms that trigger the scaling policy, and calculates the scaling adjustment based on the chosen metric and target value. The scaling policy adjusts capacity by adding or removing instances as needed to keep the metric at, or close to, the specified target value. A target tracking policy not only keeps the metric close to the target value, but also adjusts to the fluctuations in the metric due to a fluctuating load pattern and minimizes rapid capacity fluctuations.\nYou can create multiple target tracking scaling policies for a Spot Fleet, provided each policy uses a different metric. The fleet scales based on the policy that specifies the largest fleet capacity. This allows you to cover multiple scenarios to ensure sufficient capacity for your application workloads.\nTo ensure application availability, the fleet scales out proportionally to the metric as fast as it can, but scales in more gradually.\nWhen a Spot Fleet terminates a Spot Instance because the target capacity was decreased, the instance receives a Spot Instance interruption notice.\nNote\nDo not edit or delete the CloudWatch alarms that Spot Fleet manages for a target tracking scaling policy. Spot Fleet deletes the alarms automatically when you delete the target tracking scaling policy.\nPrerequisites\nThe Spot Fleet request must have a request type of maintain. Automatic scaling is not supported for requests of type request.\nConfigure the IAM permissions required for Spot Fleet automatic scaling.\nReview the Considerations.\nTo configure a target tracking policy (console)\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Spot Requests.\nSelect your Spot Fleet request.\nChoose the Auto Scaling tab near the bottom of the screen. If you selected the link for your Spot Fleet, there is no tab; instead, scroll down to the Auto Scaling section.\nIf automatic scaling is not configured, choose Configure.\nUse Scale capacity between to set the minimum and maximum capacity for your fleet. Automatic scaling does not scale your fleet below the minimum capacity or above the maximum capacity.\nFor Policy name, enter a name for the policy.\nChoose a Target metric.\nEnter a Target value for the metric.\nFor Cooldown period, specify a new value (in seconds) or keep the default.\n(Optional) To omit creating a scale-in policy based on the current configuration, select Disable scale-in. You can create a scale-in policy using a different configuration.\nChoose Save.\nTo configure a target tracking policy using the AWS CLI\nRegister the Spot Fleet request as a scalable target using the register-scalable-target command.\nCreate a scaling policy using the put-scaling-policy command."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-step-scaling.html",
        "content": "With step scaling policies, you specify CloudWatch alarms to trigger the scaling process. For example, if you want to scale out when CPU utilization reaches a certain level, create an alarm using the CPUUtilization metric provided by Amazon EC2.\nWhen you create a step scaling policy, you must specify one of the following scaling adjustment types:\nAdd \u2013 Increase the target capacity of the fleet by a specified number of capacity units or a specified percentage of the current capacity.\nRemove \u2013 Decrease the target capacity of the fleet by a specified number of capacity units or a specified percentage of the current capacity.\nSet to \u2013 Set the target capacity of the fleet to the specified number of capacity units.\nWhen an alarm is triggered, the automatic scaling process calculates the new target capacity using the fulfilled capacity and the scaling policy, and then updates the target capacity accordingly. For example, suppose that the target capacity and fulfilled capacity are 10 and the scaling policy adds 1. When the alarm is triggered, the automatic scaling process adds 1 to 10 to get 11, so Spot Fleet launches 1 instance.\nWhen a Spot Fleet terminates a Spot Instance because the target capacity was decreased, the instance receives a Spot Instance interruption notice.\nPrerequisites\nThe Spot Fleet request must have a request type of maintain. Automatic scaling is not supported for requests of type request.\nConfigure the IAM permissions required for Spot Fleet automatic scaling.\nConsider which CloudWatch metrics are important to your application. You can create CloudWatch alarms based on metrics provided by AWS or your own custom metrics.\nFor the AWS metrics that you will use in your scaling policies, enable CloudWatch metrics collection if the service that provides the metrics does not enable it by default.\nReview the Considerations.\nTo create a CloudWatch alarm\nOpen the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.\nIn the navigation pane, expand Alarms and choose All alarms.\nChoose Create alarm.\nOn the Specify metric and conditions page, choose Select metric.\nChoose EC2 Spot, then Fleet Request Metrics, and then select a metric (for example, TargetCapacity), and then choose Select metric.\nThe Specify metric and conditions page appears, showing a graph and other information about the metric you selected.\nFor Period, choose the evaluation period for the alarm, for example, 1 minute. When evaluating the alarm, each period is aggregated into one data point.\nNote\nA shorter period creates a more sensitive alarm.\nFor Conditions, define the alarm by defining the threshold condition. For example, you can define a threshold to trigger the alarm whenever the value of the metric is greater than or equal to 80 percent.\nUnder Additional configuration, for Datapoints to alarm, specify how many datapoints (evaluation periods) must be in the ALARM state to trigger the alarm, for example, 1 evaluation period or 2 out of 3 evaluation periods. This creates an alarm that goes to ALARM state if that many consecutive periods are breaching. For more information, see Evaluating an alarm in the Amazon CloudWatch User Guide.\nFor Missing data treatment, choose one of the options (or leave the default of Treat missing data as missing). For more information, see Configuring how CloudWatch alarms treat missing data in the Amazon CloudWatch User Guide.\nChoose Next.\n(Optional) To receive notification of a scaling event, for Notification, you can choose or create the Amazon SNS topic you want to use to receive notifications. Otherwise, you can delete the notification now and add one later as needed.\nChoose Next.\nUnder Add name and description, enter a name and description for the alarm and choose Next.\nChoose Create alarm.\nTo configure a step scaling policy for your Spot Fleet (console)\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Spot Requests.\nSelect your Spot Fleet request.\nChoose the Auto Scaling tab near the bottom of the screen. If you selected the link for your Spot Fleet, there is no tab; instead, scroll down to the Auto Scaling section.\nIf automatic scaling is not configured, choose Configure.\nUse Scale capacity between to set the minimum and maximum capacity for your fleet. Scaling policies do not scale your fleet below the minimum capacity or above the maximum capacity.\nUnder Scaling policies, for Policy type, choose Step scaling policy.\nInitially, Scaling policies contain step scaling policies named ScaleUp and ScaleDown. You can complete these policies, or choose Remove policy to delete them. You can also choose Add policy.\nTo define a policy, do the following:\nFor Policy name, enter a name for the policy.\nFor Policy trigger, select an existing alarm, or choose Create alarm to open the Amazon CloudWatch console and create an alarm.\nFor Modify capacity, define the amount by which to scale and the lower and upper bound of the step adjustment. You can add or remove a specific number of instances or a percentage of the existing fleet size, or set the fleet to an exact size.\nFor example, to create a step scaling policy that increases the capacity of the fleet by 30 percent, choose Add, enter 30 in the next field, and then choose percent. By default, the lower bound for an add policy is the alarm threshold and the upper bound is positive (+) infinity. By default, the upper bound for a remove policy is the alarm threshold and the lower bound is negative (-) infinity.\n(Optional) To add another step, choose Add step.\nFor Cooldown period, specify a new value (in seconds) or keep the default.\nChoose Save.\nTo configure step scaling policies for your Spot Fleet using the AWS CLI\nRegister the Spot Fleet request as a scalable target using the register-scalable-target command.\nCreate a scaling policy using the put-scaling-policy command.\nCreate an alarm that triggers the scaling policy using the put-metric-alarm command."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-scheduled-scaling.html",
        "content": "Scaling your fleet on a schedule enables you to scale your application in response to predictable changes in demand. By creating scheduled actions, you can instruct Spot Fleet to perform scaling activities at specific times. To create a scheduled action, you must specify an existing Spot Fleet, the time when the scaling activity must occur, and the desired minimum and maximum capacity. Scheduled actions can be configured to scale once or on a recurring schedule. If you needs change, you can edit or delete scheduled actions.\nPrerequisites\nSheduled actions can only be created for existing Spot Fleets. You can't create a scheduled action when you create a Spot Fleet.\nThe Spot Fleet request must have a request type of maintain. Automatic scaling is not supported for requests of type request.\nConfigure the IAM permissions required for Spot Fleet automatic scaling.\nReview the Considerations.\nTo create a one-time scheduled action\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Spot Requests.\nSelect your Spot Fleet request.\nChoose the Scheduled Scaling tab near the bottom of the screen. If you selected the link for your Spot Fleet, there is no tab; instead, scroll down to the Scheduled Scaling section.\nChoose Create scheduled action.\nFor Name, specify a name for the scheduled action.\nEnter a value for Minimum capacity, Maximum capacity, or both.\nFor Recurrence, choose Once.\n(Optional) Choose a date and time for Start time, End time, or both.\nChoose Create.\nTo create a recurring scheduled action\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Spot Requests.\nSelect your Spot Fleet request.\nChoose the Scheduled Scaling tab near the bottom of the screen. If you selected the link for your Spot Fleet, there is no tab; instead, scroll down to the Scheduled Scaling section.\nFor Name, specify a name for the scheduled action.\nEnter a value for Minimum capacity, Maximum capacity, or both.\nFor Recurrence, choose one of the predefined schedules (for example, Every day), or choose Custom and enter a cron expression. For more information about the cron expressions supported by scheduled scaling, see Cron expressions in the Amazon EventBridge User Guide.\n(Optional) Choose a date and time for Start time, End time, or both.\nChoose Submit.\nTo edit a scheduled action\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Spot Requests.\nSelect your Spot Fleet request.\nChoose the Scheduled Scaling tab near the bottom of the screen. If you selected the link for your Spot Fleet, there is no tab; instead, scroll down to the Scheduled Scaling section.\nSelect the scheduled action and choose Actions, Edit.\nMake the needed changes and choose Submit.\nTo delete a scheduled action\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Spot Requests.\nSelect your Spot Fleet request.\nChoose the Scheduled Scaling tab near the bottom of the screen. If you selected the link for your Spot Fleet, there is no tab; instead, scroll down to the Scheduled Scaling section.\nSelect the scheduled action and choose Actions, Delete.\nWhen prompted for confirmation, choose Delete.\nTo manage scheduled scaling using the AWS CLI\nUse the following commands:\nput-scheduled-action\ndescribe-scheduled-actions\ndelete-scheduled-action"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/fleet-monitor.html",
        "content": "Effective monitoring of your EC2 Fleet or Spot Fleet is essential for maintaining optimal performance and ensuring reliability. There are various tools to help you achieve this, including Amazon CloudWatch and Amazon EventBridge, which are covered in this topic.\nWith CloudWatch, you can collect and track metrics, set alarms, and automatically react to changes in your fleet\u2019s status.\nWith EventBridge, you can monitor and respond programmatically to events emitted by your fleet. By defining rules in EventBridge, you can automate responses to specific fleet events, such as instance termination or fleet state changes, improving your operational efficiency.\nTopics\nMonitor your EC2 Fleet or Spot Fleet using CloudWatch\nMonitor and programmatically respond to the events emitted by your EC2 Fleet or Spot Fleet using Amazon EventBridge"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-cloudwatch-metrics.html",
        "content": "You can monitor your EC2 Fleet or Spot Fleet using the Amazon CloudWatch metrics described in this section.\nImportant\nTo ensure accuracy, we recommend that you enable detailed monitoring when using these metrics. For more information, see Manage detailed monitoring for your EC2 instances.\nFor more information about using CloudWatch, see Monitor your instances using CloudWatch.\nEC2 Fleet and Spot Fleet metrics\nThe AWS/EC2Spot namespace includes the following metrics for your fleet, plus the CloudWatch metrics for the Spot Instances in your fleet. For more information, see Instance metrics.\nMetric Description\nAvailableInstancePoolsCount\nThe Spot capacity pools specified in the fleet request.\nUnits: Count\nBidsSubmittedForCapacity\nThe capacity for which Amazon EC2 has submitted fleet requests.\nUnits: Count\nEligibleInstancePoolCount\nThe Spot capacity pools specified in the fleet request where Amazon EC2 can fulfill requests. Amazon EC2 does not fulfill requests in pools where the maximum price you're willing to pay for Spot Instances is less than the Spot price or the Spot price is greater than the price for On-Demand Instances.\nUnits: Count\nFulfilledCapacity\nThe capacity that Amazon EC2 has fulfilled.\nUnits: Count\nMaxPercentCapacityAllocation\nThe maximum value of PercentCapacityAllocation across all fleet pools specified in the fleet request.\nUnits: Percent\nPendingCapacity\nThe difference between TargetCapacity and FulfilledCapacity.\nUnits: Count\nPercentCapacityAllocation\nThe capacity allocated for the Spot capacity pool for the specified dimensions. To get the maximum value recorded across all Spot capacity pools, use MaxPercentCapacityAllocation.\nUnits: Percent\nTargetCapacity\nThe target capacity of the fleet request.\nUnits: Count\nTerminatingCapacity\nThe capacity that is being terminated because the provisioned capacity is greater than the target capacity.\nUnits: Count\nIf the unit of measure for a metric is Count, the most useful statistic is Average.\nEC2 Fleet and Spot Fleet dimensions\nTo filter the data for your fleet, use the following dimensions.\nDimensions Description\nAvailabilityZone\nFilter the data by Availability Zone.\nFleetRequestId\nFilter the data by fleet request.\nInstanceType\nFilter the data by instance type.\nView the CloudWatch metrics for your EC2 Fleet or Spot Fleet\nYou can view the CloudWatch metrics for your fleet using the Amazon CloudWatch console. These metrics are displayed as monitoring graphs. These graphs show data points if the fleet is active.\nMetrics are grouped first by namespace, and then by the various combinations of dimensions within each namespace. For example, you can view all fleet metrics or fleet metrics groups by fleet request ID, instance type, or Availability Zone.\nTo view fleet metrics\nOpen the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.\nIn the navigation pane, expand Metrics, and choose All metrics.\nChoose the EC2 Spot namespace.\nNote\nIf the EC2 Spot namespace is not displayed, there are two reasons for this. Either you have never used EC2 Fleet or Spot Fleet in the Region\u2014only the AWS services that you're using send metrics to Amazon CloudWatch. Or, if you have used EC2 Fleet or Spot Fleet in the Region, but not for the past two weeks, the namespace does not appear.\nTo filter the metrics by dimension, choose one of the following:\nFleet Request Metrics \u2013 Group by fleet request\nBy Availability Zone \u2013 Group by fleet request and Availability Zone\nBy Instance Type \u2013 Group by fleet request and instance type\nBy Availability Zone/Instance Type \u2013 Group by fleet request, Availability Zone, and instance type\nTo view the data for a metric, select the checkbox next to the metric."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitor-ec2-fleet-using-eventbridge.html",
        "content": "When the state of an EC2 Fleet or Spot Fleet changes, it emits a notification. The notification is made available as an event that is sent to Amazon EventBridge (formerly known as Amazon CloudWatch Events). Events are emitted on a best effort basis.\nYou can use Amazon EventBridge to create rules that trigger programmatic actions in response to an event. For example, you can create two EventBridge rules: one triggered when a fleet state changes, and another triggered when an instance in the fleet is terminated. In this example, you can configure the first rule so that, if the fleet state changes, the rule invokes an SNS topic, sending an email notification to you. You can configure the second rule so that, if an instance in the fleet is terminated, the rule invokes a Lambda function to launch a new instance.\nNote\nOnly fleets of type maintain and request emit events. Fleets of type instant do not emit events because they submit synchronous one-time requests, and the state of the fleet is known immediately in the response. To use Amazon EventBridge to monitor fleet events, the request type must be maintain or request.\nFor instructions on how to describe a fleet's event history, see Describe the event history for your EC2 Fleet.\nTopics\nCreate Amazon EventBridge rules to monitor EC2 Fleet or Spot Fleet events\nEC2 Fleet event types\nSpot Fleet event types\nCreate Amazon EventBridge rules to monitor EC2 Fleet or Spot Fleet events\nWhen a state change notification is emitted for an EC2 Fleet or Spot Fleet, it is sent as an event to Amazon EventBridge as a JSON file. If EventBridge detects an event pattern that matches a pattern defined in a rule, EventBridge invokes the target (or targets) specified in the rule.\nYou can write EventBridge rules to automate actions based on matching event patterns.\nThe following fields in the event form the event pattern that is defined in the rule:\n\"source\": \"aws.ec2fleet\"\nIdentifies that the event is from EC2 Fleet.\n\"detail-type\": \"EC2 Fleet State Change\"\nIdentifies the event type.\n\"detail\": { \"sub-type\": \"submitted\" }\nIdentifies the event sub-type.\nFor the list of EC2 Fleet and Spot Fleet events and example event data, see EC2 Fleet event types and Spot Fleet event types.\nExamples\nCreate an EventBridge rule to send a notification\nCreate an EventBridge rule to trigger a Lambda function\nCreate an EventBridge rule to send a notification\nThe following example creates an EventBridge rule to send an email, text message, or mobile push notification every time that Amazon EC2 emits an EC2 Fleet state change notification. The signal in this example is emitted as an EC2 Fleet State Change event, which triggers the action defined by the rule.\nPrerequisite\nBefore creating the EventBridge rule, you must create the Amazon SNS topic for the email, text message, or mobile push notification.\nTo create an EventBridge rule to send a notification when an EC2 Fleet state changes\nOpen the Amazon EventBridge console at https://console.aws.amazon.com/events/.\nChoose Create rule.\nFor Define rule detail, do the following:\nEnter a Name for the rule, and, optionally, a description.\nA rule can't have the same name as another rule in the same Region and on the same event bus.\nFor Event bus, choose default. When an AWS service in your account generates an event, it always goes to your account's default event bus.\nFor Rule type, choose Rule with an event pattern.\nChoose Next.\nFor Build event pattern, do the following:\nFor Event source, choose AWS events or EventBridge partner events.\nFor Event pattern, for this example you\u2019ll specify the following event pattern to match the EC2 Fleet Instance Change event.\n{\n \"source\": [\"aws.ec2fleet\"],\n \"detail-type\": [\"EC2 Fleet Instance Change\"]\n}\nTo add the event pattern, you can either use a template by choosing Event pattern form, or specify your own pattern by choosing Custom pattern (JSON editor), as follows:\nTo use a template to create the event pattern, do the following:\nChoose Event pattern form.\nFor Event source, choose AWS services.\nFor AWS Service, choose EC2 Fleet.\nFor Event type, choose EC2 Fleet Instance Change.\nTo customize the template, choose Edit pattern and make your changes to match the example event pattern.\n(Alternative) To specify a custom event pattern, do the following:\nChoose Custom pattern (JSON editor).\nIn the Event pattern box, add the event pattern for this example.\nChoose Next.\nFor Select target(s), do the following:\nFor Target types, choose AWS service.\nFor Select a target, choose SNS topic to send an email, text message, or mobile push notification when the event occurs.\nFor Topic, choose an existing topic. You first need to create an Amazon SNS topic using the Amazon SNS console. For more information, see Using Amazon SNS for application-to-person (A2P) messaging in the Amazon Simple Notification Service Developer Guide.\n(Optional) Under Additional settings, you can optionally configure additional settings. For more information, see Creating Amazon EventBridge rules that react to events (step 16) in the Amazon EventBridge User Guide.\nChoose Next.\n(Optional) For Tags, you can optionally assign one or more tags to your rule, and then choose Next.\nFor Review and create, do the following:\nReview the details of the rule and modify them as necessary.\nChoose Create rule.\nFor more information, see Amazon EventBridge rules and Amazon EventBridge event patterns in the Amazon EventBridge User Guide\nCreate an EventBridge rule to trigger a Lambda function\nThe following example creates an EventBridge rule to trigger a Lambda function every time that Amazon EC2 emits an EC2 Fleet instance change notification for when an instance is launched. The signal in this example is emitted as an EC2 Fleet Instance Change event, sub-type launched, which triggers the action defined by the rule.\nBefore creating the EventBridge rule, you must create the Lambda function.\nTo create the Lambda function to use in the EventBridge rule\nOpen the AWS Lambda console at https://console.aws.amazon.com/lambda/.\nChoose Create function.\nEnter a name for your function, configure the code, and then choose Create function.\nFor more information, see Create your first Lambda function in the AWS Lambda Developer Guide.\nTo create an EventBridge rule to trigger a Lambda function when an instance in an EC2 Fleet changes state\nOpen the Amazon EventBridge console at https://console.aws.amazon.com/events/.\nChoose Create rule.\nFor Define rule detail, do the following:\nEnter a Name for the rule, and, optionally, a description.\nA rule can't have the same name as another rule in the same Region and on the same event bus.\nFor Event bus, choose default. When an AWS service in your account generates an event, it always goes to your account's default event bus.\nFor Rule type, choose Rule with an event pattern.\nChoose Next.\nFor Build event pattern, do the following:\nFor Event source, choose AWS events or EventBridge partner events.\nFor Event pattern, for this example you\u2019ll specify the following event pattern to match the EC2 Fleet Instance Change event and launched sub-type.\n{\n \"source\": [\"aws.ec2fleet\"],\n \"detail-type\": [\"EC2 Fleet Instance Change\"],\n \"detail\": {\n   \"sub-type\": [\"launched\"]\n}\nTo add the event pattern, you can either use a template by choosing Event pattern form, or specify your own pattern by choosing Custom pattern (JSON editor), as follows:\nTo use a template to create the event pattern, do the following:\nChoose Event pattern form.\nFor Event source, choose AWS services.\nFor AWS Service, choose EC2 Fleet.\nFor Event type, choose EC2 Fleet Instance Change.\nChoose Edit pattern, and add \"detail\": {\"sub-type\": [\"launched\"] to match the example event pattern. For proper JSON format, insert a comma (,) after the preceding square bracket (]).\n(Alternative) To specify a custom event pattern, do the following:\nChoose Custom pattern (JSON editor).\nIn the Event pattern box, add the event pattern for this example.\nChoose Next.\nFor Select target(s), do the following:\nFor Target types, choose AWS service.\nFor Select a target, choose SNS topic to send an email, text message, or mobile push notification when the event occurs.\nFor Topic, choose Lambda function, and for Function, choose the function that you created to respond when the event occurs.\n(Optional) Under Additional settings, you can optionally configure additional settings. For more information, see Creating Amazon EventBridge rules that react to events (step 16) in the Amazon EventBridge User Guide.\nChoose Next.\n(Optional) For Tags, you can optionally assign one or more tags to your rule, and then choose Next.\nFor Review and create, do the following:\nReview the details of the rule and modify them as necessary.\nChoose Create rule.\nFor a tutorial on how to create a Lambda function and an EventBridge rule that runs the Lambda function, see Tutorial: Log the State of an Amazon EC2 Instance Using EventBridge in the AWS Lambda Developer Guide.\nEC2 Fleet event types\nThere are five EC2 Fleet event types. For each event type, there are several sub-types.\nEvent types\nEC2 Fleet State Change\nEC2 Fleet Spot Instance Request Change\nEC2 Fleet Instance Change\nEC2 Fleet Information\nEC2 Fleet Error\nEC2 Fleet State Change\nEC2 Fleet sends an EC2 Fleet State Change event to Amazon EventBridge when an EC2 Fleet changes state.\nThe following is example data for this event.\n{\n    \"version\": \"0\",\n    \"id\": \"715ed6b3-b8fc-27fe-fad6-528c7b8bf8a2\",\n    \"detail-type\": \"EC2 Fleet State Change\",\n    \"source\": \"aws.ec2fleet\",\n    \"account\": \"123456789012\",\n    \"time\": \"2020-11-09T09:00:20Z\",\n    \"region\": \"us-east-1\",\n    \"resources\": [\n        \"arn:aws:ec2:us-east-1:123456789012:fleet/fleet-598fb973-87b7-422d-be4d-6b0809bfff0a\"\n    ],\n    \"detail\": {\n        \"sub-type\": \"active\"\n    }\n}\nThe possible values for sub-type are:\nactive\nThe EC2 Fleet request has been validated and Amazon EC2 is attempting to maintain the target number of running instances.\ndeleted\nThe EC2 Fleet request is deleted and has no running instances. The EC2 Fleet will be deleted two days after its instances are terminated.\ndeleted_running\nThe EC2 Fleet request is deleted and does not launch additional instances. Its existing instances continue to run until they are interrupted or terminated. The request remains in this state until all instances are interrupted or terminated.\ndeleted_terminating\nThe EC2 Fleet request is deleted and its instances are terminating. The request remains in this state until all instances are terminated.\nexpired\nThe EC2 Fleet request has expired. If the request was created with TerminateInstancesWithExpiration set, a subsequent terminated event indicates that the instances are terminated.\nmodify_in_progress\nThe EC2 Fleet request is being modified. The request remains in this state until the modification is fully processed.\nmodify_succeeded\nThe EC2 Fleet request was modified.\nsubmitted\nThe EC2 Fleet request is being evaluated and Amazon EC2 is preparing to launch the target number of instances.\nprogress\nThe EC2 Fleet request is in the process of being fulfilled.\nEC2 Fleet Spot Instance Request Change\nEC2 Fleet sends an EC2 Fleet Spot Instance Request Change event to Amazon EventBridge when a Spot Instance request in the fleet changes state.\nThe following is example data for this event.\n{\n    \"version\": \"0\",\n    \"id\": \"19331f74-bf4b-a3dd-0f1b-ddb1422032b9\",\n    \"detail-type\": \"EC2 Fleet Spot Instance Request Change\",\n    \"source\": \"aws.ec2fleet\",\n    \"account\": \"123456789012\",\n    \"time\": \"2020-11-09T09:00:05Z\",\n    \"region\": \"us-east-1\",\n    \"resources\": [\n        \"arn:aws:ec2:us-east-1:123456789012:fleet/fleet-83fd4e48-552a-40ef-9532-82a3acca5f10\"\n    ],\n    \"detail\": {\n        \"spot-instance-request-id\": \"sir-rmqske6h\",\n        \"description\": \"SpotInstanceRequestId sir-rmqske6h, PreviousState: cancelled_running\",\n        \"sub-type\": \"cancelled\"\n    }\n}\nThe possible values for sub-type are:\nactive\nThe Spot Instance request is fulfilled and has an associated Spot Instance.\ncancelled\nYou cancelled the Spot Instance request, or the Spot Instance request expired.\ndisabled\nYou stopped the Spot Instance.\nsubmitted\nThe Spot Instance request is submitted.\nEC2 Fleet Instance Change\nEC2 Fleet sends an EC2 Fleet Instance Change event to Amazon EventBridge when an instance in the fleet changes state.\nThe following is example data for this event.\n{\n    \"version\": \"0\",\n    \"id\": \"542ce428-c8f1-0608-c015-e8ed6522c5bc\",\n    \"detail-type\": \"EC2 Fleet Instance Change\",\n    \"source\": \"aws.ec2fleet\",\n    \"account\": \"123456789012\",\n    \"time\": \"2020-11-09T09:00:23Z\",\n    \"region\": \"us-east-1\",\n    \"resources\": [\n        \"arn:aws:ec2:us-east-1:123456789012:fleet/fleet-598fb973-87b7-422d-be4d-6b0809bfff0a\"\n    ],\n    \"detail\": {\n        \"instance-id\": \"i-0c594155dd5ff1829\",\n        \"description\": \"{\\\"instanceType\\\":\\\"c5.large\\\",\\\"image\\\":\\\"ami-6057e21a\\\",\\\"productDescription\\\":\\\"Linux/UNIX\\\",\\\"availabilityZone\\\":\\\"us-east-1d\\\"}\",\n        \"sub-type\": \"launched\"\n    }\n}\nThe possible values for sub-type are:\nlaunched\nA new instance was launched.\nterminated\nThe instance was terminated.\ntermination_notified\nAn instance termination notification was sent when a Spot Instance was terminated by Amazon EC2 during scale-down, when the target capacity of the fleet was modified down, for example, from a target capacity of 4 to a target capacity of 3.\nEC2 Fleet Information\nEC2 Fleet sends an EC2 Fleet Information event to Amazon EventBridge when there is an error during fulfillment. The information event does not block the fleet from attempting to fulfil its target capacity.\nThe following is example data for this event.\n{\n    \"version\": \"0\",\n    \"id\": \"76529817-d605-4571-7224-d36cc1b2c0c4\",\n    \"detail-type\": \"EC2 Fleet Information\",\n    \"source\": \"aws.ec2fleet\",\n    \"account\": \"123456789012\",\n    \"time\": \"2020-11-09T08:17:07Z\",\n    \"region\": \"us-east-1\",\n    \"resources\": [\n        \"arn:aws:ec2:us-east-1:123456789012:fleet/fleet-8becf5fe-bb9e-415d-8f54-3fa5a8628b91\"\n    ],\n    \"detail\": {\n        \"description\": \"c4.xlarge, ami-0947d2ba12ee1ff75, Linux/UNIX, us-east-1a, Spot price in either SpotFleetRequestConfigData or SpotFleetLaunchSpecification or LaunchTemplate or LaunchTemplateOverrides is less than Spot market price $0.0619\",\n        \"sub-type\": \"launchSpecUnusable\"\n    }\n}\nThe possible values for sub-type are:\nfleetProgressHalted\nThe price in every launch specification is not valid because it is below the Spot price (all the launch specifications have produced launchSpecUnusable events). A launch specification might become valid if the Spot price changes.\nlaunchSpecTemporarilyBlacklisted\nThe configuration is not valid and several attempts to launch instances have failed. For more information, see the description of the event.\nlaunchSpecUnusable\nThe price in a launch specification is not valid because it is below the Spot price.\nregisterWithLoadBalancersFailed\nAn attempt to register instances with load balancers failed. For more information, see the description of the event.\nEC2 Fleet Error\nEC2 Fleet sends an EC2 Fleet Error event to Amazon EventBridge when there is an error during fulfillment. The error event blocks the fleet from attempting to fulfil its target capacity.\nThe following is example data for this event.\n{\n    \"version\": \"0\",\n    \"id\": \"69849a22-6d0f-d4ce-602b-b47c1c98240e\",\n    \"detail-type\": \"EC2 Fleet Error\",\n    \"source\": \"aws.ec2fleet\",\n    \"account\": \"123456789012\",\n    \"time\": \"2020-10-07T01:44:24Z\",\n    \"region\": \"us-east-1\",\n    \"resources\": [\n        \"arn:aws:ec2:us-east-1:123456789012:fleet/fleet-9bb19bc6-60d3-4fd2-ae47-d33e68eafa08\"\n    ],\n    \"detail\": {\n        \"description\": \"m3.large, ami-00068cd7555f543d5, Linux/UNIX: IPv6 is not supported for the instance type 'm3.large'. \",\n        \"sub-type\": \"spotFleetRequestConfigurationInvalid\"\n    }\n}\nThe possible values for sub-type are:\niamFleetRoleInvalid\nThe EC2 Fleet does not have the required permissions to either launch or terminate an instance.\nallLaunchSpecsTemporarilyBlacklisted\nNone of the configurations are valid, and several attempts to launch instances have failed. For more information, see the description of the event.\nspotInstanceCountLimitExceeded\nYou\u2019ve reached the limit on the number of Spot Instances that you can launch.\nspotFleetRequestConfigurationInvalid\nThe configuration is not valid. For more information, see the description of the event.\nSpot Fleet event types\nThere are five Spot Fleet event types. For each event type, there are several sub-types.\nEvent types\nEC2 Spot Fleet State Change\nEC2 Spot Fleet Spot Instance Request Change\nEC2 Spot Fleet Instance Change\nEC2 Spot Fleet Information\nEC2 Spot Fleet Error\nEC2 Spot Fleet State Change\nSpot Fleet sends an EC2 Spot Fleet State Change event to Amazon EventBridge when a Spot Fleet changes state.\nThe following is example data for this event.\n{\n    \"version\": \"0\",\n    \"id\": \"d1af1091-6cc3-2e24-203a-3b870e455d5b\",\n    \"detail-type\": \"EC2 Spot Fleet State Change\",\n    \"source\": \"aws.ec2spotfleet\",\n    \"account\": \"123456789012\",\n    \"time\": \"2020-11-09T08:57:06Z\",\n    \"region\": \"us-east-1\",\n    \"resources\": [\n        \"arn:aws:ec2:us-east-1:123456789012:spot-fleet-request/sfr-4b6d274d-0cea-4b2c-b3be-9dc627ad1f55\"\n    ],\n    \"detail\": {\n        \"sub-type\": \"submitted\"\n    }\n}\nThe possible values for sub-type are:\nactive\nThe Spot Fleet request has been validated and Amazon EC2 is attempting to maintain the target number of running instances.\ncancelled\nThe Spot Fleet request is canceled and has no running instances. The Spot Fleet will be deleted two days after its instances are terminated.\ncancelled_running\nThe Spot Fleet request is canceled and does not launch additional instances. Its existing instances continue to run until they are interrupted or terminated. The request remains in this state until all instances are interrupted or terminated.\ncancelled_terminating\nThe Spot Fleet request is canceled and its instances are terminating. The request remains in this state until all instances are terminated.\nexpired\nThe Spot Fleet request has expired. If the request was created with TerminateInstancesWithExpiration set, a subsequent terminated event indicates that the instances are terminated.\nmodify_in_progress\nThe Spot Fleet request is being modified. The request remains in this state until the modification is fully processed.\nmodify_succeeded\nThe Spot Fleet request was modified.\nsubmitted\nThe Spot Fleet request is being evaluated and Amazon EC2 is preparing to launch the target number of instances.\nprogress\nThe Spot Fleet request is in the process of being fulfilled.\nEC2 Spot Fleet Spot Instance Request Change\nSpot Fleet sends an EC2 Spot Fleet Spot Instance Request Change event to Amazon EventBridge when a Spot Instance request in the fleet changes state.\nThe following is example data for this event.\n{\n    \"version\": \"0\",\n    \"id\": \"cd141ef0-14af-d670-a71d-fe46e9971bd2\",\n    \"detail-type\": \"EC2 Spot Fleet Spot Instance Request Change\",\n    \"source\": \"aws.ec2spotfleet\",\n    \"account\": \"123456789012\",\n    \"time\": \"2020-11-09T08:53:21Z\",\n    \"region\": \"us-east-1\",\n    \"resources\": [\n        \"arn:aws:ec2:us-east-1:123456789012:spot-fleet-request/sfr-a98d2133-941a-47dc-8b03-0f94c6852ad1\"\n    ],\n    \"detail\": {\n        \"spot-instance-request-id\": \"sir-a2w9gc5h\",\n        \"description\": \"SpotInstanceRequestId sir-a2w9gc5h, PreviousState: cancelled_running\",\n        \"sub-type\": \"cancelled\"\n    }\n}\nThe possible values for sub-type are:\nactive\nThe Spot Instance request is fulfilled and has an associated Spot Instance.\ncancelled\nYou cancelled the Spot Instance request, or the Spot Instance request expired.\ndisabled\nYou stopped the Spot Instance.\nsubmitted\nThe Spot Instance request is submitted.\nEC2 Spot Fleet Instance Change\nSpot Fleet sends an EC2 Spot Fleet Instance Change event to Amazon EventBridge when an instance in the fleet changes state.\nThe following is example data for this event.\n{\n    \"version\": \"0\",\n    \"id\": \"11591686-5bd7-bbaa-eb40-d46529c2710f\",\n    \"detail-type\": \"EC2 Spot Fleet Instance Change\",\n    \"source\": \"aws.ec2spotfleet\",\n    \"account\": \"123456789012\",\n    \"time\": \"2020-11-09T07:25:02Z\",\n    \"region\": \"us-east-1\",\n    \"resources\": [\n        \"arn:aws:ec2:us-east-1:123456789012:spot-fleet-request/sfr-c8a764a4-bedc-4b62-af9c-0095e6e3ba61\"\n    ],\n    \"detail\": {\n        \"instance-id\": \"i-08b90df1e09c30c9b\",\n        \"description\": \"{\\\"instanceType\\\":\\\"r4.2xlarge\\\",\\\"image\\\":\\\"ami-032930428bf1abbff\\\",\\\"productDescription\\\":\\\"Linux/UNIX\\\",\\\"availabilityZone\\\":\\\"us-east-1a\\\"}\",\n        \"sub-type\": \"launched\"\n    }\n}\nThe possible values for sub-type are:\nlaunched\nA new instance was launched.\nterminated\nThe instance was terminated.\ntermination_notified\nAn instance termination notification was sent when a Spot Instance was terminated by Amazon EC2 during scale-down, when the target capacity of the fleet was modified down, for example, from a target capacity of 4 to a target capacity of 3.\nEC2 Spot Fleet Information\nSpot Fleet sends an EC2 Spot Fleet Information event to Amazon EventBridge when there is an error during fulfillment. The information event does not block the fleet from attempting to fulfil its target capacity.\nThe following is example data for this event.\n{\n    \"version\": \"0\",\n    \"id\": \"73a60f70-3409-a66c-635c-7f66c5f5b669\",\n    \"detail-type\": \"EC2 Spot Fleet Information\",\n    \"source\": \"aws.ec2spotfleet\",\n    \"account\": \"123456789012\",\n    \"time\": \"2020-11-08T20:56:12Z\",\n    \"region\": \"us-east-1\",\n    \"resources\": [\n        \"arn:aws:ec2:us-east-1:123456789012:spot-fleet-request/sfr-2531ea06-af18-4647-8757-7d69c94971b1\"\n    ],\n    \"detail\": {\n        \"description\": \"r3.8xlarge, ami-032930428bf1abbff, Linux/UNIX, us-east-1a, Spot bid price is less than Spot market price $0.5291\",\n        \"sub-type\": \"launchSpecUnusable\"\n    }\n}\nThe possible values for sub-type are:\nfleetProgressHalted\nThe price in every launch specification is not valid because it is below the Spot price (all the launch specifications have produced launchSpecUnusable events). A launch specification might become valid if the Spot price changes.\nlaunchSpecTemporarilyBlacklisted\nThe configuration is not valid and several attempts to launch instances have failed. For more information, see the description of the event.\nlaunchSpecUnusable\nThe price in a launch specification is not valid because it is below the Spot price.\nregisterWithLoadBalancersFailed\nAn attempt to register instances with load balancers failed. For more information, see the description of the event.\nEC2 Spot Fleet Error\nSpot Fleet sends an EC2 Spot Fleet Error event to Amazon EventBridge when there is an error during fulfillment. The error event blocks the fleet from attempting to fulfil its target capacity.\nThe following is example data for this event.\n{\n    \"version\": \"0\",\n    \"id\": \"10adc4e7-675c-643e-125c-5bfa1b1ba5d2\",\n    \"detail-type\": \"EC2 Spot Fleet Error\",\n    \"source\": \"aws.ec2spotfleet\",\n    \"account\": \"123456789012\",\n    \"time\": \"2020-11-09T06:56:07Z\",\n    \"region\": \"us-east-1\",\n    \"resources\": [\n        \"arn:aws:ec2:us-east-1:123456789012:spot-fleet-request/sfr-38725d30-25f1-4f30-83ce-2907c56dba17\"\n    ],\n    \"detail\": {\n        \"description\": \"r4.2xlarge, ami-032930428bf1abbff, Linux/UNIX: The associatePublicIPAddress parameter can only be specified for the network interface with DeviceIndex 0. \",\n        \"sub-type\": \"spotFleetRequestConfigurationInvalid\"\n    }\n}\nThe possible values for sub-type are:\niamFleetRoleInvalid\nThe Spot Fleet does not have the required permissions to either launch or terminate an instance.\nallLaunchSpecsTemporarilyBlacklisted\nNone of the configurations are valid, and several attempts to launch instances have failed. For more information, see the description of the event.\nspotInstanceCountLimitExceeded\nYou\u2019ve reached the limit on the number of Spot Instances that you can launch.\nspotFleetRequestConfigurationInvalid\nThe configuration is not valid. For more information, see the description of the event."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/fleet-tutorials.html",
        "content": "There are different ways to configure an EC2 Fleet. The configuration you choose depends on your specific use case.\nThe following tutorials cover some of the possible use cases and provide the tasks required to implement them.\nUse case Link to tutorial\nUse instance weighting to manage the availability and performance of your EC2 Fleet.\nWith instance weighting, you assign a weight to each instance type in your EC2 Fleet to represent their compute capacity and performance relative to each other. Based on the weights, the fleet can use any combination of the specified instance types, as long as it can fulfil the desired target capacity.\nTutorial: Configure EC2 Fleet to use instance weighting\nUse On-Demand capacity to ensure availability during peak periods, but benefit from additional Spot capacity at a lower cost.\nConfigure your EC2 Fleet to use On-Demand Instances as the primary capacity to ensure available capacity during peak periods. In addition, allocate some capacity to Spot Instances to benefit from discounted pricing, while keeping in mind that Spot Instances can be interrupted if Amazon EC2 needs the capacity back.\nTutorial: Configure EC2 Fleet to use On-Demand Instances as the primary capacity\nUse Capacity Reservations to reserve compute capacity for your On-Demand Instances.\nConfigure your EC2 Fleet to use targeted Capacity Reservations first when launching On-Demand Instances. If you have strict capacity requirements, and are running business-critical workloads that require a certain level of long or short-term capacity assurance, we recommend that you create a Capacity Reservation to ensure that you always have access to Amazon EC2 capacity when you need it, for as long as you need it.\nTutorial: Configure EC2 Fleet to launch On-Demand Instances using targeted Capacity Reservations\nUse Capacity Blocks to reserve highly sought-after GPU instances for your ML workloads.\nConfigure your EC2 Fleet to launch instances into Capacity Blocks.\nTutorial: Configure your EC2 Fleet to launch instances into Capacity Blocks"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-instance-weighting-walkthrough.html",
        "content": "This tutorial uses a fictitious company called Example Corp to illustrate the process of requesting an EC2 Fleet using instance weighting.\nObjective\nExample Corp, a pharmaceutical company, wants to use the computational power of Amazon EC2 for screening chemical compounds that might be used to fight cancer.\nPlanning\nExample Corp first reviews Spot Best Practices. Next, Example Corp determines the requirements for their EC2 Fleet.\nInstance types\nExample Corp has a compute- and memory-intensive application that performs best with at least 60 GB of memory and eight virtual CPUs (vCPUs). They want to maximize these resources for the application at the lowest possible price. Example Corp decides that any of the following EC2 instance types would meet their needs:\nInstance type Memory (GiB) vCPUs\nr3.2xlarge\n61\n8\nr3.4xlarge\n122\n16\nr3.8xlarge\n244\n32\nTarget capacity in units\nWith instance weighting, target capacity can equal a number of instances (the default) or a combination of factors such as cores (vCPUs), memory (GiBs), and storage (GBs). By considering the base for their application (60 GB of RAM and eight vCPUs) as one unit, Example Corp decides that 20 times this amount would meet their needs. So the company sets the target capacity of their EC2 Fleet request to 20 units.\nInstance weights\nAfter determining the target capacity, Example Corp calculates instance weights. To calculate the instance weight for each instance type, they determine the units of each instance type that are required to reach the target capacity as follows:\nr3.2xlarge (61.0 GB, 8 vCPUs) = 1 unit of 20\nr3.4xlarge (122.0 GB, 16 vCPUs) = 2 units of 20\nr3.8xlarge (244.0 GB, 32 vCPUs) = 4 units of 20\nTherefore, Example Corp assigns instance weights of 1, 2, and 4 to the respective launch configurations in their EC2 Fleet request.\nPrice per unit hour\nExample Corp uses the On-Demand price per instance hour as a starting point for their price. They could also use recent Spot prices, or a combination of the two. To calculate the price per unit hour, they divide their starting price per instance hour by the weight. For example:\nInstance type On-Demand price Instance weight Price per unit hour\nr3.2xLarge\n$0.7\n1\n$0.7\nr3.4xLarge\n$1.4\n2\n$0.7\nr3.8xLarge\n$2.8\n4\n$0.7\nExample Corp could use a global price per unit hour of $0.7 and be competitive for all three instance types. They could also use a global price per unit hour of $0.7 and a specific price per unit hour of $0.9 in the r3.8xlarge launch specification.\nVerify permissions\nBefore creating an EC2 Fleet, Example Corp verifies that it has an IAM role with the required permissions. For more information, see EC2 Fleet prerequisites.\nCreate a launch template\nNext, Example Corp creates a launch template. The launch template ID is used in the following step. For more information, see Create an Amazon EC2 launch template.\nCreate the EC2 Fleet\nExample Corp creates a file, config.json, with the following configuration for its EC2 Fleet. In the following example, replace the resource identifiers with your own resource identifiers.\n{ \n    \"LaunchTemplateConfigs\": [\n        {\n            \"LaunchTemplateSpecification\": {\n                \"LaunchTemplateId\": \"lt-07b3bc7625cdab851\", \n                \"Version\": \"1\"\n            }, \n            \"Overrides\": [\n                {\n                    \"InstanceType\": \"r3.2xlarge\", \n                    \"SubnetId\": \"subnet-482e4972\", \n                    \"WeightedCapacity\": 1\n                },\n                {\n                    \"InstanceType\": \"r3.4xlarge\", \n                    \"SubnetId\": \"subnet-482e4972\", \n                    \"WeightedCapacity\": 2\n                },\n                {\n                    \"InstanceType\": \"r3.8xlarge\", \n                    \"MaxPrice\": \"0.90\", \n                    \"SubnetId\": \"subnet-482e4972\", \n                    \"WeightedCapacity\": 4\n                }\n            ]\n        }\n    ], \n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 20, \n        \"DefaultTargetCapacityType\": \"spot\"\n    }\n}\nExample Corp creates the EC2 Fleet using the following create-fleet command.\naws ec2 create-fleet --cli-input-json file://config.json\nFor more information, see Create an EC2 Fleet.\nFulfillment\nThe allocation strategy determines which Spot capacity pools your Spot Instances come from.\nWith the lowest-price strategy (which is the default strategy), the Spot Instances come from the pool with the lowest price per unit at the time of fulfillment. To provide 20 units of capacity, the EC2 Fleet launches either 20 r3.2xlarge instances (20 divided by 1), 10 r3.4xlarge instances (20 divided by 2), or 5 r3.8xlarge instances (20 divided by 4).\nIf Example Corp used the diversified strategy, the Spot Instances would come from all three pools. The EC2 Fleet would launch 6 r3.2xlarge instances (which provide 6 units), 3 r3.4xlarge instances (which provide 6 units), and 2 r3.8xlarge instances (which provide 8 units), for a total of 20 units."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-on-demand-walkthrough.html",
        "content": "This tutorial uses a fictitious company called ABC Online to illustrate the process of requesting an EC2 Fleet with On-Demand as the primary capacity, and Spot capacity if available.\nObjective\nABC Online, a restaurant delivery company, aims to provision Amazon EC2 capacity across EC2 instance types and purchasing options to achieve their desired scale, performance, and cost.\nPlan\nABC Online requires a fixed capacity to handle peak periods, but would like to benefit from additional capacity at a lower cost. The company determines the following requirements for their EC2 Fleet:\nOn-Demand Instance capacity \u2013 ABC Online requires 15 On-Demand Instances to ensure that they can accommodate traffic at peak periods.\nSpot Instance capacity \u2013 To enhance performance, but at a lower price, ABC Online plans to provision 5 Spot Instances.\nVerify permissions\nBefore creating an EC2 Fleet, ABC Online verifies that it has an IAM role with the required permissions. For more information, see EC2 Fleet prerequisites.\nCreate a launch template\nNext, ABC Online creates a launch template. The launch template ID is used in the following step. For more information, see Create an Amazon EC2 launch template.\nCreate the EC2 Fleet\nABC Online creates a file, config.json, with the following configuration for its EC2 Fleet. In the following example, replace the resource identifiers with your own resource identifiers.\n{\n    \"LaunchTemplateConfigs\": [\n        {\n            \"LaunchTemplateSpecification\": {\n                \"LaunchTemplateId\": \"lt-07b3bc7625cdab851\",\n                \"Version\": \"2\"\n            }\n\n        }\n    ],\n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 20,\n        \"OnDemandTargetCapacity\":15,\n        \"DefaultTargetCapacityType\": \"spot\"\n    }\n}\nABC Online creates the EC2 Fleet using the following create-fleet command.\naws ec2 create-fleet --cli-input-json file://config.json\nFor more information, see Create an EC2 Fleet.\nFulfillment\nThe allocation strategy determines that the On-Demand capacity is always fulfilled, while the balance of the target capacity is fulfilled as Spot if there is available capacity."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-launch-on-demand-instances-using-targeted-capacity-reservations-walkthrough.html",
        "content": "This tutorial walks you through all the steps that you must perform so that your EC2 Fleet launches On-Demand Instances into targeted Capacity Reservations.\nYou will learn how to configure a fleet to use targeted On-Demand Capacity Reservations first when launching On-Demand Instances. You will also learn how to configure the fleet so that, when the total On-Demand target capacity exceeds the number of available unused Capacity Reservations, the fleet uses the specified allocation strategy for selecting the instance pools in which to launch the remaining target capacity.\nEC2 Fleet configuration\nIn this tutorial, the fleet is configured as follows:\nTarget capacity: 10 On-Demand Instances\nTotal unused targeted Capacity Reservations: 6 (less than the fleet's On-Demand target capacity of 10 On-Demand Instances)\nNumber of Capacity Reservation pools: 2 (us-east-1a and us-east-1b)\nNumber of Capacity Reservations per pool: 3\nOn-Demand allocation strategy: lowest-price (When the number of unused Capacity Reservations is less than the On-Demand target capacity, the fleet determines the pools in which to launch the remaining On-Demand capacity based on the On-Demand allocation strategy.)\nNote that you can also use the prioritized allocation strategy instead of the lowest-price allocation strategy.\nTo launch On-Demand Instances into targeted Capacity Reservations, you must perform a number of steps, as follows:\nStep 1: Create Capacity Reservations\nStep 2: Create a Capacity Reservation resource group\nStep 3: Add the Capacity Reservations to the Capacity Reservation resource group\n(Optional) Step 4: View the Capacity Reservations in the resource group\nStep 5: Create a launch template that specifies that the Capacity Reservation targets a specific resource group\n(Optional) Step 6: Describe the launch template\nStep 7: Create an EC2 Fleet\n(Optional) Step 8: View the number of remaining unused Capacity Reservations\nStep 1: Create Capacity Reservations\nUse the create-capacity-reservation command to create the Capacity Reservations, three for us-east-1a and another three for us-east-1b. Except for the Availability Zone, the other attributes of the Capacity Reservations are identical.\n3 Capacity Reservations in us-east-1a\naws ec2 create-capacity-reservation \\\n    --availability-zone us-east-1a \\\n    --instance-type c5.xlarge \\\n    --instance-platform Linux/UNIX \\\n    --instance-count 3 \\\n    --instance-match-criteria targeted\nExample of resulting Capacity Reservation ID\ncr-1234567890abcdef1\n3 Capacity Reservations in us-east-1b\naws ec2 create-capacity-reservation \\\n    --availability-zone us-east-1b \\\n    --instance-type c5.xlarge \\\n    --instance-platform Linux/UNIX \\\n    --instance-count 3 \\\n    --instance-match-criteria targeted\nExample of resulting Capacity Reservation ID\ncr-54321abcdef567890\nStep 2: Create a Capacity Reservation resource group\nUse the resource-groups service and the create-group command to create a Capacity Reservation resource group. In this example, the resource group is named my-cr-group. For information about why you must create a resource group, see Use Capacity Reservations to reserve On-Demand capacity in EC2 Fleet.\naws resource-groups create-group \\\n    --name my-cr-group \\\n    --configuration '{\"Type\":\"AWS::EC2::CapacityReservationPool\"}' '{\"Type\":\"AWS::ResourceGroups::Generic\", \"Parameters\": [{\"Name\": \"allowed-resource-types\", \"Values\": [\"AWS::EC2::CapacityReservation\"]}]}'\nStep 3: Add the Capacity Reservations to the Capacity Reservation resource group\nUse the resource-groups service and the group-resources command to add the Capacity Reservations that you created in Step 1 to the Capacity Reservations resource group. Note that you must reference the On-Demand Capacity Reservations by their ARNs.\naws resource-groups group-resources \\\n    --group my-cr-group \\\n    --resource-arns \\\n      arn:aws:ec2:us-east-1:123456789012:capacity-reservation/cr-1234567890abcdef1 \\\n      arn:aws:ec2:us-east-1:123456789012:capacity-reservation/cr-54321abcdef567890\nExample output\n{\n   \"Failed\": [], \n   \"Succeeded\": [ \n   \"arn:aws:ec2:us-east-1:123456789012:capacity-reservation/cr-1234567890abcdef1\", \n   \"arn:aws:ec2:us-east-1:123456789012:capacity-reservation/cr-54321abcdef567890\" \n   ] \n}\n(Optional) Step 4: View the Capacity Reservations in the resource group\nUse the resource-groups service and the list-group-resources command to optionally describe the resource group to view its Capacity Reservations.\naws resource-groups list-group-resources --group my-cr-group\nExample output\n{\n    \"ResourceIdentifiers\": [\n        {\n            \"ResourceType\": \"AWS::EC2::CapacityReservation\",\n            \"ResourceArn\": \"arn:aws:ec2:us-east-1:123456789012:capacity-reservation/cr-1234567890abcdef1\"\n        },\n        {\n            \"ResourceType\": \"AWS::EC2::CapacityReservation\",\n            \"ResourceArn\": \"arn:aws:ec2:us-east-1:123456789012:capacity-reservation/cr-54321abcdef567890\"\n        }\n    ]\n}\nStep 5: Create a launch template that specifies that the Capacity Reservation targets a specific resource group\nUse the create-launch-template command to create a launch template in which to specify the Capacity Reservations to use. In this example, the fleet will use targeted Capacity Reservations, which have been added to a resource group. Therefore, the launch template data specifies that the Capacity Reservation targets a specific resource group. In this example, the launch template is named my-launch-template.\naws ec2 create-launch-template \\\n    --launch-template-name my-launch-template \\\n    --launch-template-data \\\n        '{\"ImageId\": \"ami-0123456789example\",\n          \"CapacityReservationSpecification\": \n            {\"CapacityReservationTarget\": \n                { \"CapacityReservationResourceGroupArn\": \"arn:aws:resource-groups:us-east-1:123456789012:group/my-cr-group\" }\n            }\n        }'\n(Optional) Step 6: Describe the launch template\nUse the describe-launch-template-versions command to optionally describe the launch template to view its configuration.\naws ec2 describe-launch-template-versions --launch-template-name my-launch-template\nExample output\n{\n    \"LaunchTemplateVersions\": [\n        {\n            \"LaunchTemplateId\": \"lt-01234567890example\",\n            \"LaunchTemplateName\": \"my-launch-template\",\n            \"VersionNumber\": 1,\n            \"CreateTime\": \"2021-01-19T20:50:19.000Z\",\n            \"CreatedBy\": \"arn:aws:iam::123456789012:user/Admin\",\n            \"DefaultVersion\": true,\n            \"LaunchTemplateData\": {\n                \"ImageId\": \"ami-0947d2ba12ee1ff75\",\n                \"CapacityReservationSpecification\": {\n                    \"CapacityReservationTarget\": {\n                        \"CapacityReservationResourceGroupArn\": \"arn:aws:resource-groups:us-east-1:123456789012:group/my-cr-group\"\n                    }\n                }\n            }\n        }\n    ]\n}\nStep 7: Create an EC2 Fleet\nCreate an EC2 Fleet that specifies the configuration information for the instances that it will launch. The following EC2 Fleet configuration shows only the pertinent configurations for this example. The launch template my-launch-template is the launch template you created in Step 5. There are two instance pools, each with the same instance type (c5.xlarge), but with different Availability Zones (us-east-1a and us-east-1b). The price of the instance pools is the same because pricing is defined for the Region, not per Availability Zone. The total target capacity is 10, and the default target capacity type is on-demand. The On-Demand allocation strategy is lowest-price. The usage strategy for Capacity Reservations is use-capacity-reservations-first.\nNote\nThe fleet type must be instant. Other fleet types do not support use-capacity-reservations-first.\n{\n    \"LaunchTemplateConfigs\": [\n        {\n            \"LaunchTemplateSpecification\": {\n                \"LaunchTemplateName\": \"my-launch-template\",\n                \"Version\": \"1\"\n            },\n            \"Overrides\": [\n               {\n                   \"InstanceType\": \"c5.xlarge\",\n                   \"AvailabilityZone\": \"us-east-1a\"\n               },\n               {\n                    \"InstanceType\": \"c5.xlarge\",\n                    \"AvailabilityZone\": \"us-east-1b\"\n               }\n            ]\n        }\n    ],\n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 10,\n        \"DefaultTargetCapacityType\": \"on-demand\"\n    },\n    \"OnDemandOptions\": {\n        \"AllocationStrategy\": \"lowest-price\",\n        \"CapacityReservationOptions\": {\n             \"UsageStrategy\": \"use-capacity-reservations-first\"\n         }\n    },\n    \"Type\": \"instant\"\n}\nAfter you create the instant fleet using the preceding configuration, the following 10 instances are launched to meet the target capacity:\nThe Capacity Reservations are used first to launch 6 On-Demand Instances as follows:\n3 On-Demand Instances are launched into the 3 c5.xlarge targeted Capacity Reservations in us-east-1a\n3 On-Demand Instances are launched into the 3 c5.xlarge targeted Capacity Reservations in us-east-1b\nTo meet the target capacity, 4 additional On-Demand Instances are launched into regular On-Demand capacity according to the On-Demand allocation strategy, which is lowest-price in this example. However, because the pools are the same price (because price is per Region and not per Availability Zone), the fleet launches the remaining 4 On-Demand Instances into either of the pools.\n(Optional) Step 8: View the number of remaining unused Capacity Reservations\nAfter the fleet is launched, you can optionally run describe-capacity-reservations to see how many unused Capacity Reservations are remaining. In this example, you should see the following response, which shows that all of the Capacity Reservations in all of the pools were used.\n{ \"CapacityReservationId\":  \"cr-111\",\n     \"InstanceType\":  \"c5.xlarge\",  \n     \"AvailableInstanceCount\":  0\n}\n\n { \"CapacityReservationId\":  \"cr-222\",\n     \"InstanceType\":  \"c5.xlarge\", \n     \"AvailableInstanceCount\":  0\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-launch-instances-capacity-blocks-walkthrough.html",
        "content": "This tutorial walks you through the steps that you must perform so that your EC2 Fleet launches instances into Capacity Blocks.\nIn most cases, the target capacity of the EC2 Fleet request should be less than or equal to the available capacity of the Capacity Block reservation that you are targeting. Target capacity requests that exceed the limits of the Capacity Block reservation will not be fulfilled. If the target capacity request exceeds the limits of your Capacity Block reservation, you will receive an Insufficient Capacity Exception for the capacity that exceeds the limits of your Capacity Block reservation.\nNote\nFor Capacity Blocks, EC2 Fleet will not fallback to launching On-Demand Instances for the remainder of the desired target capacity.\nIf EC2 Fleet is unable to fulfill the requested target capacity in an available Capacity Block reservation, EC2 Fleet will fulfill as much capacity as it can and return the instances that it was able to launch. You can repeat the call to EC2 Fleet again until all the instances are provisioned.\nAfter configuring the EC2 Fleet request, you must wait until the start date of your Capacity Block reservation. If you make requests to EC2 Fleet to launch into a Capacity Block that hasn't started yet, you will receive an Insufficient Capacity Error.\nAfter your Capacity Block reservation becomes active, you can make EC2 Fleet API calls and provision the instances into your Capacity Block based on the parameters you selected. Instances running in the Capacity Block continue to run until you manually stop or terminate them or until Amazon EC2 terminates the instances when the Capacity Block reservation ends.\nFor more information about Capacity Blocks, see Capacity Blocks for ML.\nConsiderations\nOnly EC2 Fleet requests of type instant are supported for launching instances into Capacity Blocks. For more information, see Configure an EC2 Fleet of type instant.\nMultiple Capacity Blocks in the same EC2 Fleet request aren't supported.\nUsing OnDemandTargetCapacity or SpotTargetCapacity while also setting capacity-block as the DefaultTargetCapacity isn't supported.\nIf DefaultTargetCapacityType is set to capacity-block, you can't provide OnDemandOptions::CapacityReservationOptions. An exception will occur.\nTo configure an EC2 Fleet to launch instances into Capacity Blocks\nCreate a launch template.\nIn the launch template, do the following:\nFor InstanceMarketOptionsRequest, set MarketType to capacity-block.\nTo target the Capacity Block reservation, for CapacityReservationID, specify the Capacity Block reservation ID.\nMake note of launch template name and version. You'll use this information in the next step.\nFor more information about creating a launch template, see Create an Amazon EC2 launch template.\nConfigure the EC2 Fleet.\nCreate a file, config.json, with the following configuration for your EC2 Fleet. In the following example, replace the resource identifiers with your own resource identifiers.\nFor more information about configuring an EC2 Fleet, see Create an EC2 Fleet.\n{ \n    \"LaunchTemplateConfigs\": [\n        {\n            \"LaunchTemplateSpecification\": {\n                \"LaunchTemplateName\": \"CBR-launch-template\", \n                \"Version\": \"1\"\n            }, \n            \"Overrides\": [\n                {\n                    \"InstanceType\": \"p5.48xlarge\", \n                    \"AvailabilityZone\": \"us-east-1a\"   \n                },\n            ]\n        }\n    ], \n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 10, \n        \"DefaultTargetCapacityType\": \"capacity-block\"\n    },\n    \"Type\": \"instant\"\n}\nLaunch the fleet.\nUse the following create-fleet command.\naws ec2 create-fleet --cli-input-json file://config.json\nFor more information, see Create an EC2 Fleet."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-examples.html",
        "content": "You can define your EC2 Fleet configuration in a JSON file, and then reference that file with the create-fleet command to create your fleet, as follows:\naws ec2 create-fleet --cli-input-json file://file_name.json\nThe following examples illustrate launch configurations for various EC2 Fleet use cases. For more information about the configuration parameters, see create-fleet.\nExamples\nExample 1: Launch Spot Instances as the default purchasing option\nExample 2: Launch On-Demand Instances as the default purchasing option\nExample 3: Launch On-Demand Instances as the primary capacity\nExample 4: Launch On-Demand Instances using multiple Capacity Reservations\nExample 5: Launch On-Demand Instances using Capacity Reservations when the total target capacity exceeds the number of unused Capacity Reservations\nExample 6: Launch On-Demand Instances using targeted Capacity Reservations\nExample 7: Configure Capacity Rebalancing to launch replacement Spot Instances\nExample 8: Launch Spot Instances in a capacity-optimized fleet\nExample 9: Launch Spot Instances in a capacity-optimized fleet with priorities\nExample 10: Launch Spot Instances in a price-capacity-optimized fleet\nExample 11: Configure attribute-based instance type selection\nFor more CLI examples for fleets of type instant, see Configure an EC2 Fleet of type instant.\nExample 1: Launch Spot Instances as the default purchasing option\nThe following example specifies the minimum parameters required in an EC2 Fleet: a launch template, target capacity, and default purchasing option. The launch template is identified by its launch template ID and version number. The target capacity for the fleet is 2 instances, and the default purchasing option is spot, which results in the fleet launching 2 Spot Instances.\n{\n    \"LaunchTemplateConfigs\": [\n        {\n            \"LaunchTemplateSpecification\": {\n                \"LaunchTemplateId\": \"lt-0e8c754449b27161c\",\n                \"Version\": \"1\"\n            }\n\n        }\n    ],\n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 2,\n        \"DefaultTargetCapacityType\": \"spot\"\n    }\n}\nExample 2: Launch On-Demand Instances as the default purchasing option\nThe following example specifies the minimum parameters required in an EC2 Fleet: a launch template, target capacity, and default purchasing option. The launch template is identified by its launch template ID and version number. The target capacity for the fleet is 2 instances, and the default purchasing option is on-demand, which results in the fleet launching 2 On-Demand Instances.\n{\n    \"LaunchTemplateConfigs\": [\n        {\n            \"LaunchTemplateSpecification\": {\n                \"LaunchTemplateId\": \"lt-0e8c754449b27161c\",\n                \"Version\": \"1\"\n            }\n\n        }\n    ],\n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 2,\n        \"DefaultTargetCapacityType\": \"on-demand\"\n    }\n}\nExample 3: Launch On-Demand Instances as the primary capacity\nThe following example specifies the total target capacity of 2 instances for the fleet, and a target capacity of 1 On-Demand Instance. The default purchasing option is spot. The fleet launches 1 On-Demand Instance as specified, but needs to launch one more instance to fulfill the total target capacity. The purchasing option for the difference is calculated as TotalTargetCapacity \u2013 OnDemandTargetCapacity = DefaultTargetCapacityType, which results in the fleet launching 1 Spot Instance.\n{\n    \"LaunchTemplateConfigs\": [\n        {\n            \"LaunchTemplateSpecification\": {\n                \"LaunchTemplateId\": \"lt-0e8c754449b27161c\",\n                \"Version\": \"1\"\n            }\n\n        }\n    ],\n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 2,\n        \"OnDemandTargetCapacity\": 1,\n        \"DefaultTargetCapacityType\": \"spot\"\n    }\n}\nExample 4: Launch On-Demand Instances using multiple Capacity Reservations\nYou can configure a fleet to use On-Demand Capacity Reservations first when launching On-Demand Instances by setting the usage strategy for Capacity Reservations to use-capacity-reservations-first. This example demonstrates how the fleet selects the Capacity Reservations to use when there are more Capacity Reservations than are needed to fulfil the target capacity.\nIn this example, the fleet configuration is as follows:\nTarget capacity: 12 On-Demand Instances\nTotal unused Capacity Reservations: 15 (more than the fleet's target capacity of 12 On-Demand Instances)\nNumber of Capacity Reservation pools: 3 (m5.large, m4.xlarge, and m4.2xlarge)\nNumber of Capacity Reservations per pool: 5\nOn-Demand allocation strategy: lowest-price (When there are multiple unused Capacity Reservations in multiple instance pools, the fleet determines the pools in which to launch the On-Demand Instances based on the On-Demand allocation strategy.)\nNote that you can also use the prioritized allocation strategy instead of the lowest-price allocation strategy.\nCapacity Reservations\nThe account has the following 15 unused Capacity Reservations in 3 different pools. The number of Capacity Reservations in each pool is indicated by AvailableInstanceCount.\n{\n    \"CapacityReservationId\": \"cr-111\", \n    \"InstanceType\": \"m5.large\", \n    \"InstancePlatform\": \"Linux/UNIX\", \n    \"AvailabilityZone\": \"us-east-1a\", \n    \"AvailableInstanceCount\": 5, \n    \"InstanceMatchCriteria\": \"open\", \n    \"State\": \"active\"\n}\n\n{\n    \"CapacityReservationId\": \"cr-222\", \n    \"InstanceType\": \"m4.xlarge\", \n    \"InstancePlatform\": \"Linux/UNIX\", \n    \"AvailabilityZone\": \"us-east-1a\", \n    \"AvailableInstanceCount\": 5, \n    \"InstanceMatchCriteria\": \"open\", \n    \"State\": \"active\"\n}\n\n{\n    \"CapacityReservationId\": \"cr-333\", \n    \"InstanceType\": \"m4.2xlarge\", \n    \"InstancePlatform\": \"Linux/UNIX\", \n    \"AvailabilityZone\": \"us-east-1a\", \n    \"AvailableInstanceCount\":5, \n    \"InstanceMatchCriteria\": \"open\", \n    \"State\": \"active\"\n}\nFleet configuration\nThe following fleet configuration shows only the pertinent configurations for this example. The total target capacity is 12, and the default target capacity type is on-demand. The On-Demand allocation strategy is lowest-price. The usage strategy for Capacity Reservations is use-capacity-reservations-first.\nIn this example, the On-Demand Instance price is:\nm5.large \u2013 $0.096 per hour\nm4.xlarge \u2013 $0.20 per hour\nm4.2xlarge \u2013 $0.40 per hour\nNote\nThe fleet type must be of type instant. Other fleet types do not support use-capacity-reservations-first.\n{\n    \"LaunchTemplateConfigs\": [\n        {\n            \"LaunchTemplateSpecification\": {\n                \"LaunchTemplateId\": \"lt-abc1234567example\",\n                \"Version\": \"1\"\n            },\n            \"Overrides\": [\n                {\n                  \"InstanceType\": \"m5.large\",\n                  \"AvailabilityZone\": \"us-east-1a\",\n                  \"WeightedCapacity\": 1\n                },\n                {\n                  \"InstanceType\": \"m4.xlarge\",\n                  \"AvailabilityZone\": \"us-east-1a\",\n                  \"WeightedCapacity\": 1\n                },\n                {\n                  \"InstanceType\": \"m4.2xlarge\",\n                  \"AvailabilityZone\": \"us-east-1a\",\n                  \"WeightedCapacity\": 1\n                }\n              ]\n\n        }\n    ],\n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 12,\n        \"DefaultTargetCapacityType\": \"on-demand\"\n    },\n    \"OnDemandOptions\": {\n        \"AllocationStrategy\": \"lowest-price\",\n        \"CapacityReservationOptions\": {\n            \"UsageStrategy\": \"use-capacity-reservations-first\"\n        }\n    },\n    \"Type\": \"instant\"\n}\nAfter you create the instant fleet using the preceding configuration, the following 12 instances are launched to meet the target capacity:\n5 m5.large On-Demand Instances in us-east-1a \u2013 m5.large in us-east-1a is the lowest price, and there are 5 available unused m5.large Capacity Reservations\n5 m4.xlarge On-Demand Instances in us-east-1a \u2013 m4.xlarge in us-east-1a is the next lowest price, and there are 5 available unused m4.xlarge Capacity Reservations\n2 m4.2xlarge On-Demand Instances in us-east-1a \u2013 m4.2xlarge in us-east-1a is the third lowest price, and there are 5 available unused m4.2xlarge Capacity Reservations of which only 2 are needed to meet the target capacity\nAfter the fleet is launched, you can run describe-capacity-reservations to see how many unused Capacity Reservations are remaining. In this example, you should see the following response, which shows that all of the m5.large and m4.xlarge Capacity Reservations were used, with 3 m4.2xlarge Capacity Reservations remaining unused.\n{\n    \"CapacityReservationId\": \"cr-111\",\n    \"InstanceType\": \"m5.large\",  \n    \"AvailableInstanceCount\": 0\n}\n\n{\n    \"CapacityReservationId\": \"cr-222\",\n    \"InstanceType\": \"m4.xlarge\", \n    \"AvailableInstanceCount\": 0\n}\n\n{\n    \"CapacityReservationId\": \"cr-333\",\n    \"InstanceType\": \"m4.2xlarge\", \n    \"AvailableInstanceCount\": 3\n}\nExample 5: Launch On-Demand Instances using Capacity Reservations when the total target capacity exceeds the number of unused Capacity Reservations\nYou can configure a fleet to use On-Demand Capacity Reservations first when launching On-Demand Instances by setting the usage strategy for Capacity Reservations to use-capacity-reservations-first. This example demonstrates how the fleet selects the instance pools in which to launch On-Demand Instances when the total target capacity exceeds the number of available unused Capacity Reservations.\nIn this example, the fleet configuration is as follows:\nTarget capacity: 16 On-Demand Instances\nTotal unused Capacity Reservations: 15 (less than the fleet's target capacity of 16 On-Demand Instances)\nNumber of Capacity Reservation pools: 3 (m5.large, m4.xlarge, and m4.2xlarge)\nNumber of Capacity Reservations per pool: 5\nOn-Demand allocation strategy: lowest-price (When the number of unused Capacity Reservations is less than the On-Demand target capacity, the fleet determines the pools in which to launch the remaining On-Demand capacity based on the On-Demand allocation strategy.)\nNote that you can also use the prioritized allocation strategy instead of the lowest-price allocation strategy.\nCapacity Reservations\nThe account has the following 15 unused Capacity Reservations in 3 different pools. The number of Capacity Reservations in each pool is indicated by AvailableInstanceCount.\n{\n    \"CapacityReservationId\": \"cr-111\", \n    \"InstanceType\": \"m5.large\", \n    \"InstancePlatform\": \"Linux/UNIX\", \n    \"AvailabilityZone\": \"us-east-1a\", \n    \"AvailableInstanceCount\": 5, \n    \"InstanceMatchCriteria\": \"open\", \n    \"State\": \"active\"\n}\n\n{\n    \"CapacityReservationId\": \"cr-222\", \n    \"InstanceType\": \"m4.xlarge\", \n    \"InstancePlatform\": \"Linux/UNIX\", \n    \"AvailabilityZone\": \"us-east-1a\", \n    \"AvailableInstanceCount\": 5, \n    \"InstanceMatchCriteria\": \"open\", \n    \"State\": \"active\"\n}\n\n{\n    \"CapacityReservationId\": \"cr-333\", \n    \"InstanceType\": \"m4.2xlarge\", \n    \"InstancePlatform\": \"Linux/UNIX\", \n    \"AvailabilityZone\": \"us-east-1a\", \n    \"AvailableInstanceCount\":5, \n    \"InstanceMatchCriteria\": \"open\", \n    \"State\": \"active\"\n}\nFleet configuration\nThe following fleet configuration shows only the pertinent configurations for this example. The total target capacity is 16, and the default target capacity type is on-demand. The On-Demand allocation strategy is lowest-price. The usage strategy for Capacity Reservations is use-capacity-reservations-first.\nIn this example, the On-Demand Instance price is:\nm5.large \u2013 $0.096 per hour\nm4.xlarge \u2013 $0.20 per hour\nm4.2xlarge \u2013 $0.40 per hour\nNote\nThe fleet type must be instant. Other fleet types do not support use-capacity-reservations-first.\n{\n    \"LaunchTemplateConfigs\": [\n        {\n            \"LaunchTemplateSpecification\": {\n                \"LaunchTemplateId\": \"lt-0e8c754449b27161c\",\n                \"Version\": \"1\"\n            },\n            \"Overrides\": [\n                {\n                  \"InstanceType\": \"m5.large\",\n                  \"AvailabilityZone\": \"us-east-1a\",\n                  \"WeightedCapacity\": 1\n                },\n                {\n                  \"InstanceType\": \"m4.xlarge\",\n                  \"AvailabilityZone\": \"us-east-1a\",\n                  \"WeightedCapacity\": 1\n                },\n                {\n                  \"InstanceType\": \"m4.2xlarge\",\n                  \"AvailabilityZone\": \"us-east-1a\",\n                  \"WeightedCapacity\": 1\n                }\n              ]\n\n        }\n    ],\n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 16,\n        \"DefaultTargetCapacityType\": \"on-demand\"\n    },\n    \"OnDemandOptions\": {\n        \"AllocationStrategy\": \"lowest-price\"\n        \"CapacityReservationOptions\": {\n            \"UsageStrategy\": \"use-capacity-reservations-first\"\n        }\n    },\n    \"Type\": \"instant\",\n}\nAfter you create the instant fleet using the preceding configuration, the following 16 instances are launched to meet the target capacity:\n6 m5.large On-Demand Instances in us-east-1a \u2013 m5.large in us-east-1a is the lowest price, and there are 5 available unused m5.large Capacity Reservations. The Capacity Reservations are used first to launch 5 On-Demand Instances. After the remaining m4.xlarge and m4.2xlarge Capacity Reservations are used, to meet the target capacity an additional On-Demand Instance is launched according to the On-Demand allocation strategy, which is lowest-price in this example.\n5 m4.xlarge On-Demand Instances in us-east-1a \u2013 m4.xlarge in us-east-1a is the next lowest price, and there are 5 available unused m4.xlarge Capacity Reservations\n5 m4.2xlarge On-Demand Instances in us-east-1a \u2013 m4.2xlarge in us-east-1a is the third lowest price, and there are 5 available unused m4.2xlarge Capacity Reservations\nAfter the fleet is launched, you can run describe-capacity-reservations to see how many unused Capacity Reservations are remaining. In this example, you should see the following response, which shows that all of the Capacity Reservations in all of the pools were used.\n{\n    \"CapacityReservationId\": \"cr-111\",\n    \"InstanceType\": \"m5.large\",  \n    \"AvailableInstanceCount\": 0\n}\n\n{\n    \"CapacityReservationId\": \"cr-222\",\n    \"InstanceType\": \"m4.xlarge\", \n    \"AvailableInstanceCount\": 0\n}\n\n{\n    \"CapacityReservationId\": \"cr-333\",\n    \"InstanceType\": \"m4.2xlarge\", \n    \"AvailableInstanceCount\": 0\n}\nExample 6: Launch On-Demand Instances using targeted Capacity Reservations\nYou can configure a fleet to use targeted On-Demand Capacity Reservations first when launching On-Demand Instances by setting the usage strategy for Capacity Reservations to use-capacity-reservations-first. This example demonstrates how to launch On-Demand Instances into targeted Capacity Reservations, where the attributes of the Capacity Reservations are the same except for their Availability Zones (us-east-1a and us-east-1b). It also demonstrates how the fleet selects the instance pools in which to launch On-Demand Instances when the total target capacity exceeds the number of available unused Capacity Reservations.\nIn this example, the fleet configuration is as follows:\nTarget capacity: 10 On-Demand Instances\nTotal unused targeted Capacity Reservations: 6 (less than the fleet's On-Demand target capacity of 10 On-Demand Instances)\nNumber of Capacity Reservation pools: 2 (us-east-1a and us-east-1b)\nNumber of Capacity Reservations per pool: 3\nOn-Demand allocation strategy: lowest-price (When the number of unused Capacity Reservations is less than the On-Demand target capacity, the fleet determines the pools in which to launch the remaining On-Demand capacity based on the On-Demand allocation strategy.)\nNote that you can also use the prioritized allocation strategy instead of the lowest-price allocation strategy.\nFor a walkthrough of the procedures that you must perform to accomplish this example, see Tutorial: Configure EC2 Fleet to launch On-Demand Instances using targeted Capacity Reservations.\nCapacity Reservations\nThe account has the following 6 unused Capacity Reservations in 2 different pools. In this example, the pools differ by their Availability Zones. The number of Capacity Reservations in each pool is indicated by AvailableInstanceCount.\n{\n    \"CapacityReservationId\": \"cr-111\", \n    \"InstanceType\": \"c5.xlarge\", \n    \"InstancePlatform\": \"Linux/UNIX\", \n    \"AvailabilityZone\": \"us-east-1a\", \n    \"AvailableInstanceCount\": 3, \n    \"InstanceMatchCriteria\": \"open\", \n    \"State\": \"active\"\n}\n\n{\n    \"CapacityReservationId\": \"cr-222\", \n    \"InstanceType\": \"c5.xlarge\", \n    \"InstancePlatform\": \"Linux/UNIX\", \n    \"AvailabilityZone\": \"us-east-1b\", \n    \"AvailableInstanceCount\": 3, \n    \"InstanceMatchCriteria\": \"open\", \n    \"State\": \"active\"\n}\nFleet configuration\nThe following fleet configuration shows only the pertinent configurations for this example. The total target capacity is 10, and the default target capacity type is on-demand. The On-Demand allocation strategy is lowest-price. The usage strategy for Capacity Reservations is use-capacity-reservations-first.\nIn this example, the On-Demand Instance price for c5.xlarge in us-east-1 is $0.17 per hour.\nNote\nThe fleet type must be instant. Other fleet types do not support use-capacity-reservations-first.\n{\n    \"LaunchTemplateConfigs\": [\n        {\n            \"LaunchTemplateSpecification\": {\n                \"LaunchTemplateName\": \"my-launch-template\",\n                \"Version\": \"1\"\n            },\n            \"Overrides\": [\n               {\n                   \"InstanceType\": \"c5.xlarge\",\n                   \"AvailabilityZone\": \"us-east-1a\"\n               },\n               {\n                    \"InstanceType\": \"c5.xlarge\",\n                    \"AvailabilityZone\": \"us-east-1b\"\n               }\n            ]\n        }\n    ],\n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 10,\n        \"DefaultTargetCapacityType\": \"on-demand\"\n    },\n    \"OnDemandOptions\": {\n        \"AllocationStrategy\": \"lowest-price\",\n        \"CapacityReservationOptions\": {\n             \"UsageStrategy\": \"use-capacity-reservations-first\"\n         }\n    },\n    \"Type\": \"instant\"\n}\nAfter you create the instant fleet using the preceding configuration, the following 10 instances are launched to meet the target capacity:\nThe Capacity Reservations are used first to launch 6 On-Demand Instances as follows:\n3 On-Demand Instances are launched into the 3 c5.xlarge targeted Capacity Reservations in us-east-1a\n3 On-Demand Instances are launched into the 3 c5.xlarge targeted Capacity Reservations in us-east-1b\nTo meet the target capacity, 4 additional On-Demand Instances are launched into regular On-Demand capacity according to the On-Demand allocation strategy, which is lowest-price in this example. However, because the pools are the same price (because price is per Region and not per Availability Zone), the fleet launches the remaining 4 On-Demand Instances into either of the pools.\nAfter the fleet is launched, you can run describe-capacity-reservations to see how many unused Capacity Reservations are remaining. In this example, you should see the following response, which shows that all of the Capacity Reservations in all of the pools were used.\n{\n    \"CapacityReservationId\": \"cr-111\",\n    \"InstanceType\": \"c5.xlarge\",  \n    \"AvailableInstanceCount\": 0\n}\n\n{\n    \"CapacityReservationId\": \"cr-222\",\n    \"InstanceType\": \"c5.xlarge\", \n    \"AvailableInstanceCount\": 0\n}\nExample 7: Configure Capacity Rebalancing to launch replacement Spot Instances\nThe following example configures the EC2 Fleet to launch a replacement Spot Instance when Amazon EC2 emits a rebalance recommendation for a Spot Instance in the fleet. To configure the automatic replacement of Spot Instances, for ReplacementStrategy, specify launch-before-terminate. To configure the time delay from when the new replacement Spot Instances are launched to when the old Spot Instances are automatically deleted, for termination-delay, specify a value in seconds. For more information, see Configuration options.\nNote\nWe recommend using launch-before-terminate only if you can predict how long your instance shutdown procedures will take to complete so that the old instances are only terminated after these procedures are completed. You are charged for all instances while they are running.\nThe effectiveness of the Capacity Rebalancing strategy depends on the number of Spot capacity pools specified in the EC2 Fleet request. We recommend that you configure the fleet with a diversified set of instance types and Availability Zones, and for AllocationStrategy, specify capacity-optimized. For more information about what you should consider when configuring an EC2 Fleet for Capacity Rebalancing, see Use Capacity Rebalancing in EC2 Fleet and Spot Fleet to replace at-risk Spot Instances.\n{\n    \"ExcessCapacityTerminationPolicy\": \"termination\",\n    \"LaunchTemplateConfigs\": [\n        {\n            \"LaunchTemplateSpecification\": {\n                \"LaunchTemplateName\": \"LaunchTemplate\",\n                \"Version\": \"1\"\n            },\n                 \"Overrides\": [\n                       {\n                           \"InstanceType\": \"c3.large\",\n                           \"WeightedCapacity\": 1,\n                            \"Placement\": {\n                               \"AvailabilityZone\": \"us-east-1a\"\n                           }\n                       },\n                       {\n                           \"InstanceType\": \"c4.large\",\n                           \"WeightedCapacity\": 1,\n                            \"Placement\": {\n                               \"AvailabilityZone\": \"us-east-1a\"\n                           }\n                       },\n                       {\n                           \"InstanceType\": \"c5.large\",\n                           \"WeightedCapacity\": 1,\n                            \"Placement\": {\n                               \"AvailabilityZone\": \"us-east-1a\"\n                           }\n                       }\n                ] \n          }\n    ],\n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 5,\n        \"DefaultTargetCapacityType\": \"spot\"\n    },\n    \"SpotOptions\": {\n        \"AllocationStrategy\": \"capacity-optimized\",\n        \"MaintenanceStrategies\": {\n            \"CapacityRebalance\": {\n                \"ReplacementStrategy\": \"launch-before-terminate\",\n                \"TerminationDelay\": \"720\"\n            }\n        }\n    }\n}\nExample 8: Launch Spot Instances in a capacity-optimized fleet\nThe following example demonstrates how to configure an EC2 Fleet with a Spot allocation strategy that optimizes for capacity. To optimize for capacity, you must set AllocationStrategy to capacity-optimized.\nIn the following example, the three launch specifications specify three Spot capacity pools. The target capacity is 50 Spot Instances. The EC2 Fleet attempts to launch 50 Spot Instances into the Spot capacity pool with optimal capacity for the number of instances that are launching.\n{\n    \"SpotOptions\": {\n        \"AllocationStrategy\": \"capacity-optimized\",\n        },\n    \"LaunchTemplateConfigs\": [\n        {\n            \"LaunchTemplateSpecification\": {\n                \"LaunchTemplateName\": \"my-launch-template\",\n                \"Version\": \"1\"\n            },\n                 \"Overrides\": [\n                       {\n                           \"InstanceType\": \"r4.2xlarge\",\n                           \"Placement\": {\n                               \"AvailabilityZone\": \"us-west-2a\"\n                           },\n                      },\n                       {\n                           \"InstanceType\": \"m4.2xlarge\",\n                           \"Placement\": {\n                               \"AvailabilityZone\": \"us-west-2b\"\n                           },\n                       }, \n                       {\n                           \"InstanceType\": \"c5.2xlarge\",\n                           \"Placement\": {\n                               \"AvailabilityZone\": \"us-west-2b\"\n                           }\n                       }\n                 ] \n           }\n    ],\n    \"TargetCapacitySpecification\": {\n            \"TotalTargetCapacity\": 50,\n            \"DefaultTargetCapacityType\": \"spot\"\n\n    }\n}\nExample 9: Launch Spot Instances in a capacity-optimized fleet with priorities\nThe following example demonstrates how to configure an EC2 Fleet with a Spot allocation strategy that optimizes for capacity while using priority on a best-effort basis.\nWhen using the capacity-optimized-prioritized allocation strategy, you can use the Priority parameter to specify the priorities of the Spot capacity pools, where the lower the number the higher priority. You can also set the same priority for several Spot capacity pools if you favor them equally. If you do not set a priority for a pool, the pool will be considered last in terms of priority.\nTo prioritize Spot capacity pools, you must set AllocationStrategy to capacity-optimized-prioritized. EC2 Fleet will optimize for capacity first, but will honor the priorities on a best-effort basis (for example, if honoring the priorities will not significantly affect EC2 Fleet's ability to provision optimal capacity). This is a good option for workloads where the possibility of disruption must be minimized and the preference for certain instance types matters.\nIn the following example, the three launch specifications specify three Spot capacity pools. Each pool is prioritized, where the lower the number the higher priority. The target capacity is 50 Spot Instances. The EC2 Fleet attempts to launch 50 Spot Instances into the Spot capacity pool with the highest priority on a best-effort basis, but optimizes for capacity first.\n{\n    \"SpotOptions\": {\n        \"AllocationStrategy\": \"capacity-optimized-prioritized\"\n        },\n    \"LaunchTemplateConfigs\": [\n        {\n            \"LaunchTemplateSpecification\": {\n                \"LaunchTemplateName\": \"my-launch-template\",\n                \"Version\": \"1\"\n            },\n                 \"Overrides\": [\n                        {\n                           \"InstanceType\": \"r4.2xlarge\",    \n                           \"Priority\": 1,\n                           \"Placement\": {\n                               \"AvailabilityZone\": \"us-west-2a\"\n                           },\n                      },\n                       {\n                           \"InstanceType\": \"m4.2xlarge\",\n                           \"Priority\": 2,\n                           \"Placement\": {\n                               \"AvailabilityZone\": \"us-west-2b\"\n                           },\n                       }, \n                       {\n                           \"InstanceType\": \"c5.2xlarge\",\n                           \"Priority\": 3,\n                           \"Placement\": {\n                               \"AvailabilityZone\": \"us-west-2b\"\n                           }\n                       }\n                  ] \n             }\n    ],\n    \"TargetCapacitySpecification\": {\n            \"TotalTargetCapacity\": 50,\n            \"DefaultTargetCapacityType\": \"spot\"\n}\nExample 10: Launch Spot Instances in a price-capacity-optimized fleet\nThe following example demonstrates how to configure an EC2 Fleet with a Spot allocation strategy that optimizes for both capacity and lowest price. To optimize for capacity while taking price into consideration, you must set the Spot AllocationStrategy to price-capacity-optimized.\nIn the following example, the three launch specifications specify three Spot capacity pools. The target capacity is 50 Spot Instances. The EC2 Fleet attempts to launch 50 Spot Instances into the Spot capacity pool with optimal capacity for the number of instances that are launching while also choosing the pool that is the lowest priced.\n{\n    \"SpotOptions\": {\n        \"AllocationStrategy\": \"price-capacity-optimized\",\n        \"MinTargetCapacity\": 2,\n        \"SingleInstanceType\": true\n    },\n    \"OnDemandOptions\": {\n        \"AllocationStrategy\": \"lowest-price\"\n    },\n    \"LaunchTemplateConfigs\": [\n        {\n            \"LaunchTemplateSpecification\": {\n                \"LaunchTemplateName\": \"my-launch-template\",\n                \"Version\": \"1\"\n            },\n                 \"Overrides\": [\n                       {\n                           \"InstanceType\": \"r4.2xlarge\",\n                           \"Placement\": {\n                               \"AvailabilityZone\": \"us-west-2a\"\n                           },\n                      },\n                       {\n                           \"InstanceType\": \"m4.2xlarge\",\n                           \"Placement\": {\n                               \"AvailabilityZone\": \"us-west-2b\"\n                           },\n                       }, \n                       {\n                           \"InstanceType\": \"c5.2xlarge\",\n                           \"Placement\": {\n                               \"AvailabilityZone\": \"us-west-2b\"\n                           }\n                       }\n                 ] \n           }\n    ],\n    \"TargetCapacitySpecification\": {\n        \"TotalTargetCapacity\": 50,\n        \"OnDemandTargetCapacity\":0,\n        \"SpotTargetCapacity\":50,\n        \"DefaultTargetCapacityType\": \"spot\"\n    },\n    \"Type\": \"instant\"\n}\nExample 11: Configure attribute-based instance type selection\nThe following example demonstrates how to configure an EC2 Fleet to use attribute-based instance type selection for identifying instance types. To specify the required instance attributes, you specify the attributes in the InstanceRequirements structure.\nIn the following example, two instance attributes are specified:\nVCpuCount \u2013 A minimum of 2 vCPUs is specified. Because no maximum is specified, there is no maximum limit.\nMemoryMiB \u2013 A minimum of 4 MiB of memory is specified. Because no maximum is specified, there is no maximum limit.\nAny instance types that have 2 or more vCPUs and 4 MiB or more of memory will be identified. However, price protection and the allocation strategy might exclude some instance types when EC2 Fleet provisions the fleet.\nFor a list and descriptions of all the possible attributes that you can specify, see InstanceRequirements in the Amazon EC2 API Reference.\n{\n \"SpotOptions\": {\n  \"AllocationStrategy\": \"price-capacity-optimized\"\n },\n \"LaunchTemplateConfigs\": [{\n  \"LaunchTemplateSpecification\": {\n   \"LaunchTemplateName\": \"my-launch-template\",\n   \"Version\": \"1\"\n  },\n  \"Overrides\": [{\n   \"InstanceRequirements\": {\n    \"VCpuCount\": {\n     \"Min\": 2\n    },\n    \"MemoryMiB\": {\n     \"Min\": 4\n    }\n   }\n  }]\n }],\n \"TargetCapacitySpecification\": {\n  \"TotalTargetCapacity\": 20,\n  \"DefaultTargetCapacityType\": \"spot\"\n },\n \"Type\": \"instant\"\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-examples.html",
        "content": "You can define your Spot Fleet configuration in a JSON file, and then reference that file using the request-spot-fleet AWS CLI command to create your fleet, as follows:\naws ec2 request-spot-fleet --spot-fleet-request-config file://file_name.json\nThe following examples illustrate launch configurations for various Spot Fleet use cases. For more information about the configuration parameters, see request-spot-fleet. For more information about creating a Spot Fleet, see Create a Spot Fleet.\nNote\nFor Spot Fleet, you can't specify a network interface ID in a launch template or launch specification. Make sure you omit the NetworkInterfaceID parameter in your launch template or launch specification.\nExamples\nExample 1: Launch Spot Instances using the lowest-priced Availability Zone or subnet in the Region\nExample 2: Launch Spot Instances using the lowest-priced Availability Zone or subnet in a specified list\nExample 3: Launch Spot Instances using the lowest-priced instance type in a specified list\nExample 4. Override the price for the request\nExample 5: Launch a Spot Fleet using the diversified allocation strategy\nExample 6: Launch a Spot Fleet using instance weighting\nExample 7: Launch a Spot Fleet with On-Demand capacity\nExample 8: Configure Capacity Rebalancing to launch replacement Spot Instances\nExample 9: Launch Spot Instances in a capacity-optimized fleet\nExample 10: Launch Spot Instances in a capacity-optimized fleet with priorities\nExample 11: Launch Spot Instances in a priceCapacityOptimized fleet\nExample 12: Configure attribute-based instance type selection\nExample 1: Launch Spot Instances using the lowest-priced Availability Zone or subnet in the Region\nThe following example specifies a single launch specification without an Availability Zone or subnet. The Spot Fleet launches the instances in the lowest-priced Availability Zone that has a default subnet. The price you pay does not exceed the On-Demand price.\n{\n  \"TargetCapacity\": 20,\n  \"IamFleetRole\": \"arn:aws:iam::123456789012:role/aws-ec2-spot-fleet-tagging-role\",\n  \"LaunchSpecifications\": [\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"KeyName\": \"my-key-pair\",\n          \"SecurityGroups\": [\n              {\n                  \"GroupId\": \"sg-1a2b3c4d\"\n              }\n          ],\n          \"InstanceType\": \"m3.medium\",\n          \"IamInstanceProfile\": {\n              \"Arn\": \"arn:aws:iam::123456789012:instance-profile/my-iam-role\"\n          }\n      }\n  ]\n}\nExample 2: Launch Spot Instances using the lowest-priced Availability Zone or subnet in a specified list\nThe following examples specify two launch specifications with different Availability Zones or subnets, but the same instance type and AMI.\nAvailability Zones\nThe Spot Fleet launches the instances in the default subnet of the lowest-priced Availability Zone that you specified.\n{\n  \"TargetCapacity\": 20,\n  \"IamFleetRole\": \"arn:aws:iam::123456789012:role/aws-ec2-spot-fleet-tagging-role\",\n  \"LaunchSpecifications\": [\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"KeyName\": \"my-key-pair\",\n          \"SecurityGroups\": [\n              {\n                  \"GroupId\": \"sg-1a2b3c4d\"\n              }\n          ],\n          \"InstanceType\": \"m3.medium\",\n          \"Placement\": {\n              \"AvailabilityZone\": \"us-west-2a, us-west-2b\"\n          },\n          \"IamInstanceProfile\": {\n              \"Arn\": \"arn:aws:iam::123456789012:instance-profile/my-iam-role\"\n          }\n      }\n  ]\n}\nSubnets\nYou can specify default subnets or nondefault subnets, and the nondefault subnets can be from a default VPC or a nondefault VPC. The Spot service launches the instances in whichever subnet is in the lowest-priced Availability Zone.\nYou can't specify different subnets from the same Availability Zone in a Spot Fleet request.\n{\n  \"TargetCapacity\": 20,\n  \"IamFleetRole\": \"arn:aws:iam::123456789012:role/aws-ec2-spot-fleet-tagging-role\",\n  \"LaunchSpecifications\": [\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"KeyName\": \"my-key-pair\",\n          \"SecurityGroups\": [\n              {\n                  \"GroupId\": \"sg-1a2b3c4d\"\n              }\n          ],\n          \"InstanceType\": \"m3.medium\",\n          \"SubnetId\": \"subnet-a61dafcf, subnet-65ea5f08\",\n          \"IamInstanceProfile\": {\n              \"Arn\": \"arn:aws:iam::123456789012:instance-profile/my-iam-role\"\n          }\n      }\n  ]\n}\nIf the instances are launched in a default VPC, they receive a public IPv4 address by default. If the instances are launched in a nondefault VPC, they do not receive a public IPv4 address by default. Use a network interface in the launch specification to assign a public IPv4 address to instances launched in a nondefault VPC. When you specify a network interface, you must include the subnet ID and security group ID using the network interface.\n  ...       \n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"KeyName\": \"my-key-pair\",\n          \"InstanceType\": \"m3.medium\",\n          \"NetworkInterfaces\": [\n              {\n                  \"DeviceIndex\": 0,\n                  \"SubnetId\": \"subnet-1a2b3c4d\",\n                  \"Groups\": [ \"sg-1a2b3c4d\" ],\n                  \"AssociatePublicIpAddress\": true\n              }\n          ],\n          \"IamInstanceProfile\": {\n              \"Arn\": \"arn:aws:iam::880185128111:instance-profile/my-iam-role\"\n          }\n      }\n  ...\nExample 3: Launch Spot Instances using the lowest-priced instance type in a specified list\nThe following examples specify two launch configurations with different instance types, but the same AMI and Availability Zone or subnet. The Spot Fleet launches the instances using the specified instance type with the lowest price.\nAvailability Zone\n{\n  \"TargetCapacity\": 20,\n  \"IamFleetRole\": \"arn:aws:iam::123456789012:role/aws-ec2-spot-fleet-tagging-role\",\n  \"LaunchSpecifications\": [\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"SecurityGroups\": [\n              {\n                  \"GroupId\": \"sg-1a2b3c4d\"\n              }\n          ],\n          \"InstanceType\": \"c5.4xlarge\",\n          \"Placement\": {\n            \"AvailabilityZone\": \"us-west-2b\"\n          }\n      },\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"SecurityGroups\": [\n              {\n                  \"GroupId\": \"sg-1a2b3c4d\"\n              }\n          ],\n          \"InstanceType\": \"r3.8xlarge\",\n          \"Placement\": {\n              \"AvailabilityZone\": \"us-west-2b\"\n          }\n      }\n  ]\n}\nSubnet\n{\n  \"TargetCapacity\": 20,\n  \"IamFleetRole\": \"arn:aws:iam::123456789012:role/aws-ec2-spot-fleet-tagging-role\",\n  \"LaunchSpecifications\": [\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"SecurityGroups\": [\n              {\n                  \"GroupId\": \"sg-1a2b3c4d\"\n              }\n          ],\n          \"InstanceType\": \"c5.4xlarge\",\n          \"SubnetId\": \"subnet-1a2b3c4d\"\n      },\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"SecurityGroups\": [\n              {\n                  \"GroupId\": \"sg-1a2b3c4d\"\n              }\n          ],\n          \"InstanceType\": \"r3.8xlarge\",\n          \"SubnetId\": \"subnet-1a2b3c4d\"\n      }\n  ]\n}\nExample 4. Override the price for the request\nWe recommended that you use the default maximum price, which is the On-Demand price. If you prefer, you can specify a maximum price for the fleet request and maximum prices for individual launch specifications.\nThe following examples specify a maximum price for the fleet request and maximum prices for two of the three launch specifications. The maximum price for the fleet request is used for any launch specification that does not specify a maximum price. The Spot Fleet launches the instances using the instance type with the lowest price.\nAvailability Zone\n{\n  \"SpotPrice\": \"1.00\",\n  \"TargetCapacity\": 30,\n  \"IamFleetRole\": \"arn:aws:iam::123456789012:role/aws-ec2-spot-fleet-tagging-role\",\n  \"LaunchSpecifications\": [\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"InstanceType\": \"c3.2xlarge\",\n          \"Placement\": {\n              \"AvailabilityZone\": \"us-west-2b\"\n          },\n          \"SpotPrice\": \"0.10\"\n      },\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"InstanceType\": \"c3.4xlarge\",\n          \"Placement\": {\n              \"AvailabilityZone\": \"us-west-2b\"\n          },\n          \"SpotPrice\": \"0.20\"\n      },\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"InstanceType\": \"c3.8xlarge\",\n          \"Placement\": {\n              \"AvailabilityZone\": \"us-west-2b\"\n          }\n      }\n    ]\n}\nSubnet\n{\n  \"SpotPrice\": \"1.00\",\n  \"TargetCapacity\": 30,\n  \"IamFleetRole\": \"arn:aws:iam::123456789012:role/aws-ec2-spot-fleet-tagging-role\",\n  \"LaunchSpecifications\": [\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"InstanceType\": \"c3.2xlarge\",\n          \"SubnetId\": \"subnet-1a2b3c4d\",\n          \"SpotPrice\": \"0.10\"\n      },\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"InstanceType\": \"c3.4xlarge\",\n          \"SubnetId\": \"subnet-1a2b3c4d\",\n          \"SpotPrice\": \"0.20\"\n      },\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"InstanceType\": \"c3.8xlarge\",\n          \"SubnetId\": \"subnet-1a2b3c4d\"\n      }\n  ]\n}\nExample 5: Launch a Spot Fleet using the diversified allocation strategy\nThe following example uses the diversified allocation strategy. The launch specifications have different instance types but the same AMI and Availability Zone or subnet. The Spot Fleet distributes the 30 instances across the three launch specifications, such that there are 10 instances of each type. For more information, see Use allocation strategies to determine how EC2 Fleet or Spot Fleet fulfills Spot and On-Demand capacity.\nAvailability Zone\n{\n  \"SpotPrice\": \"0.70\", \n  \"TargetCapacity\": 30,\n  \"AllocationStrategy\": \"diversified\",\n  \"IamFleetRole\": \"arn:aws:iam::123456789012:role/aws-ec2-spot-fleet-tagging-role\",\n  \"LaunchSpecifications\": [\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"InstanceType\": \"c4.2xlarge\",\n          \"Placement\": {\n              \"AvailabilityZone\": \"us-west-2b\"\n          }\n      },\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"InstanceType\": \"m3.2xlarge\",\n          \"Placement\": {\n              \"AvailabilityZone\": \"us-west-2b\"\n          }\n      },\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"InstanceType\": \"r3.2xlarge\",\n          \"Placement\": {\n              \"AvailabilityZone\": \"us-west-2b\"\n          }\n      }\n  ]\n}\nSubnet\n{\n    \"SpotPrice\": \"0.70\", \n    \"TargetCapacity\": 30,\n    \"AllocationStrategy\": \"diversified\",\n    \"IamFleetRole\": \"arn:aws:iam::123456789012:role/aws-ec2-spot-fleet-tagging-role\",\n    \"LaunchSpecifications\": [\n        {\n            \"ImageId\": \"ami-1a2b3c4d\",\n            \"InstanceType\": \"c4.2xlarge\",\n            \"SubnetId\": \"subnet-1a2b3c4d\"\n        },\n        {\n            \"ImageId\": \"ami-1a2b3c4d\",\n            \"InstanceType\": \"m3.2xlarge\",\n            \"SubnetId\": \"subnet-1a2b3c4d\"\n        },\n        {\n            \"ImageId\": \"ami-1a2b3c4d\",\n            \"InstanceType\": \"r3.2xlarge\",\n            \"SubnetId\": \"subnet-1a2b3c4d\"\n        }\n    ]\n}\nA best practice to increase the chance that a spot request can be fulfilled by EC2 capacity in the event of an outage in one of the Availability Zones is to diversify across zones. For this scenario, include each Availability Zone available to you in the launch specification. And, instead of using the same subnet each time, use three unique subnets (each mapping to a different zone).\nAvailability Zone\n{\n  \"SpotPrice\": \"0.70\", \n  \"TargetCapacity\": 30,\n  \"AllocationStrategy\": \"diversified\",\n  \"IamFleetRole\": \"arn:aws:iam::123456789012:role/aws-ec2-spot-fleet-tagging-role\",\n  \"LaunchSpecifications\": [\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"InstanceType\": \"c4.2xlarge\",\n          \"Placement\": {\n              \"AvailabilityZone\": \"us-west-2a\"\n          }\n      },\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"InstanceType\": \"m3.2xlarge\",\n          \"Placement\": {\n              \"AvailabilityZone\": \"us-west-2b\"\n          }\n      },\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"InstanceType\": \"r3.2xlarge\",\n          \"Placement\": {\n              \"AvailabilityZone\": \"us-west-2c\"\n          }\n      }\n  ]\n}\nSubnet\n{\n    \"SpotPrice\": \"0.70\", \n    \"TargetCapacity\": 30,\n    \"AllocationStrategy\": \"diversified\",\n    \"IamFleetRole\": \"arn:aws:iam::123456789012:role/aws-ec2-spot-fleet-tagging-role\",\n    \"LaunchSpecifications\": [\n        {\n            \"ImageId\": \"ami-1a2b3c4d\",\n            \"InstanceType\": \"c4.2xlarge\",\n            \"SubnetId\": \"subnet-1a2b3c4d\"\n        },\n        {\n            \"ImageId\": \"ami-1a2b3c4d\",\n            \"InstanceType\": \"m3.2xlarge\",\n            \"SubnetId\": \"subnet-2a2b3c4d\"\n        },\n        {\n            \"ImageId\": \"ami-1a2b3c4d\",\n            \"InstanceType\": \"r3.2xlarge\",\n            \"SubnetId\": \"subnet-3a2b3c4d\"\n        }\n    ]\n}\nExample 6: Launch a Spot Fleet using instance weighting\nThe following examples use instance weighting, which means that the price is per unit hour instead of per instance hour. Each launch configuration lists a different instance type and a different weight. The Spot Fleet selects the instance type with the lowest price per unit hour. The Spot Fleet calculates the number of Spot Instances to launch by dividing the target capacity by the instance weight. If the result isn't an integer, the Spot Fleet rounds it up to the next integer, so that the size of your fleet is not below its target capacity.\nIf the r3.2xlarge request is successful, Spot provisions 4 of these instances. Divide 20 by 6 for a total of 3.33 instances, then round up to 4 instances.\nIf the c3.xlarge request is successful, Spot provisions 7 of these instances. Divide 20 by 3 for a total of 6.66 instances, then round up to 7 instances.\nFor more information, see Use instance weighting to manage cost and performance of your EC2 Fleet or Spot Fleet.\nAvailability Zone\n{\n  \"SpotPrice\": \"0.70\",\n  \"TargetCapacity\": 20,\n  \"IamFleetRole\": \"arn:aws:iam::123456789012:role/aws-ec2-spot-fleet-tagging-role\",\n  \"LaunchSpecifications\": [\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"InstanceType\": \"r3.2xlarge\",\n          \"Placement\": {\n              \"AvailabilityZone\": \"us-west-2b\"\n          },\n          \"WeightedCapacity\": 6\n      },\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"InstanceType\": \"c3.xlarge\",\n          \"Placement\": {\n              \"AvailabilityZone\": \"us-west-2b\"\n          },\n          \"WeightedCapacity\": 3\n      }\n    ]\n}\nSubnet\n{\n  \"SpotPrice\": \"0.70\",\n  \"TargetCapacity\": 20,\n  \"IamFleetRole\": \"arn:aws:iam::123456789012:role/aws-ec2-spot-fleet-tagging-role\",\n  \"LaunchSpecifications\": [\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"InstanceType\": \"r3.2xlarge\",\n          \"SubnetId\": \"subnet-1a2b3c4d\",\n          \"WeightedCapacity\": 6\n      },\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"InstanceType\": \"c3.xlarge\",\n          \"SubnetId\": \"subnet-1a2b3c4d\",\n          \"WeightedCapacity\": 3\n      }\n  ]\n}\nExample 7: Launch a Spot Fleet with On-Demand capacity\nTo ensure that you always have instance capacity, you can include a request for On-Demand capacity in your Spot Fleet request. If there is capacity, the On-Demand request is always fulfilled. The balance of the target capacity is fulfilled as Spot if there is capacity and availability.\nThe following example specifies the desired target capacity as 10, of which 5 must be On-Demand capacity. Spot capacity is not specified; it is implied in the balance of the target capacity minus the On-Demand capacity. Amazon EC2 launches 5 capacity units as On-Demand, and 5 capacity units (10-5=5) as Spot if there is available Amazon EC2 capacity and availability.\n{\n  \"IamFleetRole\": \"arn:aws:iam::781603563322:role/aws-ec2-spot-fleet-tagging-role\",\n  \"AllocationStrategy\": \"lowestPrice\",\n  \"TargetCapacity\": 10,\n  \"SpotPrice\": null,\n  \"ValidFrom\": \"2018-04-04T15:58:13Z\",\n  \"ValidUntil\": \"2019-04-04T15:58:13Z\",\n  \"TerminateInstancesWithExpiration\": true,\n  \"LaunchSpecifications\": [],\n  \"Type\": \"maintain\",\n  \"OnDemandTargetCapacity\": 5,\n  \"LaunchTemplateConfigs\": [\n    {\n      \"LaunchTemplateSpecification\": {\n        \"LaunchTemplateId\": \"lt-0dbb04d4a6cca5ad1\",\n        \"Version\": \"2\"\n      },\n      \"Overrides\": [\n        {\n          \"InstanceType\": \"t2.medium\",\n          \"WeightedCapacity\": 1,\n          \"SubnetId\": \"subnet-d0dc51fb\"\n        }\n      ]\n    }\n  ]\n}\nExample 8: Configure Capacity Rebalancing to launch replacement Spot Instances\nThe following example configures the Spot Fleet to launch a replacement Spot Instance when Amazon EC2 emits a rebalance recommendation for a Spot Instance in the fleet. To configure the automatic replacement of Spot Instances, for ReplacementStrategy, specify launch-before-terminate. To configure the time delay from the launch of the new replacement Spot Instances to the automatic deletion of the old Spot Instances, for termination-delay, specify a value in seconds. For more information, see Configuration options.\nNote\nWe recommend using launch-before-terminate only if you can predict how long your instance shutdown procedures will take to complete. This ensures that the old instances are terminated only after the shutdown procedures are completed. You are charged for all instances while they are running.\nThe effectiveness of the Capacity Rebalancing strategy depends on the number of Spot capacity pools specified in the Spot Fleet request. We recommend that you configure the fleet with a diversified set of instance types and Availability Zones, and for AllocationStrategy, specify capacityOptimized. For more information about what you should consider when configuring a Spot Fleet for Capacity Rebalancing, see Use Capacity Rebalancing in EC2 Fleet and Spot Fleet to replace at-risk Spot Instances.\n{\n    \"SpotFleetRequestConfig\": {\n        \"AllocationStrategy\": \"capacityOptimized\",\n        \"IamFleetRole\": \"arn:aws:iam::000000000000:role/aws-ec2-spot-fleet-tagging-role\",\n        \"LaunchTemplateConfigs\": [\n            {\n                \"LaunchTemplateSpecification\": {\n                    \"LaunchTemplateName\": \"LaunchTemplate\",\n                    \"Version\": \"1\"\n                },\n                 \"Overrides\": [\n                       {\n                           \"InstanceType\": \"c3.large\",\n                           \"WeightedCapacity\": 1,\n                           \"Placement\": {\n                               \"AvailabilityZone\": \"us-east-1a\"\n                           }\n                       },\n                       {\n                           \"InstanceType\": \"c4.large\",\n                           \"WeightedCapacity\": 1,\n                           \"Placement\": {\n                               \"AvailabilityZone\": \"us-east-1a\"\n                           }\n                       },\n                       {\n                           \"InstanceType\": \"c5.large\",\n                           \"WeightedCapacity\": 1,\n                           \"Placement\": {\n                               \"AvailabilityZone\": \"us-east-1a\"\n                           }\n                       }\n                ] \n          }\n    ],\n        \"TargetCapacity\": 5,\n        \"SpotMaintenanceStrategies\": {\n            \"CapacityRebalance\": {\n                \"ReplacementStrategy\": \"launch-before-terminate\",\n                \"TerminationDelay\": \"720\"\n            }\n        }\n    }\n}\nExample 9: Launch Spot Instances in a capacity-optimized fleet\nThe following example demonstrates how to configure a Spot Fleet with a Spot allocation strategy that optimizes for capacity. To optimize for capacity, you must set AllocationStrategy to capacityOptimized.\nIn the following example, the three launch specifications specify three Spot capacity pools. The target capacity is 50 Spot Instances. The Spot Fleet attempts to launch 50 Spot Instances into the Spot capacity pool with optimal capacity for the number of instances that are launching.\n{\n    \"TargetCapacity\": \"50\",\n    \"SpotFleetRequestConfig\": {\n        \"AllocationStrategy\": \"capacityOptimized\",\n    },\n    \"LaunchTemplateConfigs\": [\n        {\n            \"LaunchTemplateSpecification\": {\n                \"LaunchTemplateName\": \"my-launch-template\",\n                \"Version\": \"1\"\n            },\n                 \"Overrides\": [\n                       {\n                           \"InstanceType\": \"r4.2xlarge\",  \n                           \"AvailabilityZone\": \"us-west-2a\"\n                      },\n                       {\n                           \"InstanceType\": \"m4.2xlarge\",\n                           \"AvailabilityZone\": \"us-west-2b\"\n                       }, \n                       {\n                           \"InstanceType\": \"c5.2xlarge\",\n                           \"AvailabilityZone\": \"us-west-2b\"\n                       }\n                 ] \n           }\n      ]\n}\nExample 10: Launch Spot Instances in a capacity-optimized fleet with priorities\nThe following example demonstrates how to configure a Spot Fleet with a Spot allocation strategy that optimizes for capacity while using priority on a best-effort basis.\nWhen using the capacityOptimizedPrioritized allocation strategy, you can use the Priority parameter to specify the priorities of the Spot capacity pools, where the lower the number the higher priority. You can also set the same priority for several Spot capacity pools if you favor them equally. If you do not set a priority for a pool, the pool will be considered last in terms of priority.\nTo prioritize Spot capacity pools, you must set AllocationStrategy to capacityOptimizedPrioritized. Spot Fleet will optimize for capacity first, but will honor the priorities on a best-effort basis (for example, if honoring the priorities will not significantly affect Spot Fleet's ability to provision optimal capacity). This is a good option for workloads where the possibility of disruption must be minimized and the preference for certain instance types matters.\nIn the following example, the three launch specifications specify three Spot capacity pools. Each pool is prioritized, where the lower the number the higher priority. The target capacity is 50 Spot Instances. The Spot Fleet attempts to launch 50 Spot Instances into the Spot capacity pool with the highest priority on a best-effort basis, but optimizes for capacity first.\n{\n    \"TargetCapacity\": \"50\",\n    \"SpotFleetRequestConfig\": {\n        \"AllocationStrategy\": \"capacityOptimizedPrioritized\"\n    },\n    \"LaunchTemplateConfigs\": [\n        {\n            \"LaunchTemplateSpecification\": {\n                \"LaunchTemplateName\": \"my-launch-template\",\n                \"Version\": \"1\"\n            },\n                 \"Overrides\": [\n                        {\n                           \"InstanceType\": \"r4.2xlarge\",    \n                           \"Priority\": 1,\n                           \"AvailabilityZone\": \"us-west-2a\"\n                      },\n                       {\n                           \"InstanceType\": \"m4.2xlarge\",\n                           \"Priority\": 2,\n                           \"AvailabilityZone\": \"us-west-2b\"\n                       }, \n                       {\n                           \"InstanceType\": \"c5.2xlarge\",\n                           \"Priority\": 3,\n                           \"AvailabilityZone\": \"us-west-2b\"\n                       }\n                  ] \n             }\n       ]\n}\nExample 11: Launch Spot Instances in a priceCapacityOptimized fleet\nThe following example demonstrates how to configure a Spot Fleet with a Spot allocation strategy that optimizes for both capacity and lowest price. To optimize for capacity while taking price into consideration, you must set the Spot AllocationStrategy to priceCapacityOptimized.\nIn the following example, the three launch specifications specify three Spot capacity pools. The target capacity is 50 Spot Instances. The Spot Fleet attempts to launch 50 Spot Instances into the Spot capacity pool with optimal capacity for the number of instances that are launching while also choosing the pool that is the lowest priced.\n{\n    \"SpotFleetRequestConfig\": {\n        \"AllocationStrategy\": \"priceCapacityOptimized\",\n        \"OnDemandAllocationStrategy\": \"lowestPrice\",\n        \"ExcessCapacityTerminationPolicy\": \"default\",\n        \"IamFleetRole\": \"arn:aws:iam::111111111111:role/aws-ec2-spot-fleet-tagging-role\",\n        \"LaunchTemplateConfigs\": [\n            {\n                \"LaunchTemplateSpecification\": {\n                    \"LaunchTemplateId\": \"lt-0123456789example\",\n                    \"Version\": \"1\"\n                },\n                \"Overrides\": [\n                     {\n                           \"InstanceType\": \"r4.2xlarge\",  \n                           \"AvailabilityZone\": \"us-west-2a\"\n                      },\n                      {\n                           \"InstanceType\": \"m4.2xlarge\",\n                           \"AvailabilityZone\": \"us-west-2b\"\n                      }, \n                      {\n                           \"InstanceType\": \"c5.2xlarge\",\n                           \"AvailabilityZone\": \"us-west-2b\"\n                      }\n                ]\n            }\n        ],\n        \"TargetCapacity\": 50,\n        \"Type\": \"request\"\n    }\n}\nExample 12: Configure attribute-based instance type selection\nThe following example demonstrates how to configure a Spot Fleet to use attribute-based instance type selection for identifying instance types. To specify the required instance attributes, you specify the attributes in the InstanceRequirements structure.\nIn the following example, two instance attributes are specified:\nVCpuCount \u2013 A minimum of 2 vCPUs is specified. Because no maximum is specified, there is no maximum limit.\nMemoryMiB \u2013 A minimum of 4 MiB of memory is specified. Because no maximum is specified, there is no maximum limit.\nAny instance types that have 2 or more vCPUs and 4 MiB or more of memory will be identified. However, price protection and the allocation strategy might exclude some instance types when Spot Fleet provisions the fleet.\nFor a list and descriptions of all the possible attributes that you can specify, see InstanceRequirements in the Amazon EC2 API Reference.\n{\n \"AllocationStrategy\": \"priceCapacityOptimized\",\n \"TargetCapacity\": 20,\n \"Type\": \"request\",\n \"LaunchTemplateConfigs\": [{\n  \"LaunchTemplateSpecification\": {\n   \"LaunchTemplateName\": \"my-launch-template\",\n   \"Version\": \"1\"\n  },\n  \"Overrides\": [{\n   \"InstanceRequirements\": {\n    \"VCpuCount\": {\n     \"Min\": 2\n    },\n    \"MemoryMiB\": {\n     \"Min\": 4\n    }\n   }\n  }]\n }]\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/fleet-quotas.html",
        "content": "Your AWS account has default quotas, formerly referred to as limits, for each AWS service. Unless otherwise noted, each quota is Region-specific.\nThe usual Amazon EC2 quotas apply to instances launched by an EC2 Fleet or a Spot Fleet, such as Spot Instance limits and volume limits.\nIn addition, your AWS account has the following quotas related to EC2 Fleet and Spot Fleet:\nQuota description Quota\nThe number of EC2 Fleets and Spot Fleets per Region of type maintain and request in the active, deleted_running, and cancelled_running states 1,000 \u00b9 \u00b2 \u00b3\nThe number of EC2 Fleets of type instant Unlimited\nThe number of Spot capacity pools (unique combination of instance type and subnet) for EC2 Fleets and Spot Fleets of type maintain and request 300 \u00b9\nThe number of Spot capacity pools (unique combination of instance type and subnet) for EC2 Fleets of type instant Unlimited\nThe size of the user data in a launch specification 16 KB \u00b2\nThe target capacity per EC2 Fleet or Spot Fleet 10,000\nThe target capacity across all EC2 Fleets and Spot Fleets in a Region 100,000 \u00b9\nAn EC2 Fleet request or a Spot Fleet request can't span Regions.\nAn EC2 Fleet request or a Spot Fleet request can't span different subnets from the same Availability Zone.\n\u00b9 These quotas apply to both your EC2 Fleets and your Spot Fleets.\n\u00b2 These are hard quotas. You can't request an increase for these quotas.\n\u00b3 After you delete an EC2 Fleet or cancel a Spot Fleet request, and if you specified that the fleet should not terminate its Spot Instances when you deleted or canceled the request, the fleet request enters the deleted_running (EC2 Fleet) or cancelled_running (Spot Fleet) state and the instances continue to run until they are interrupted or you terminate them manually. If you terminate the instances, the fleet request enters the deleted_terminating (EC2 Fleet) or cancelled_terminating ( Spot Fleet) state and does not count towards this quota. For more information, see Delete an EC2 Fleet request and the instances in the fleet and Cancel (delete) a Spot Fleet request.\nRequest a quota increase for target capacity\nIf you need more than the default quota for target capacity, you can request a quota increase.\nTo request a quota increase for target capacity\nOpen the Support Center Create case form.\nChoose Service limit increase.\nFor Limit type, choose EC2 Fleet.\nFor Region, choose the AWS Region in which to request the quota increase.\nFor Limit, choose Target Fleet Capacity per Fleet (in units) or Target Fleet Capacity per Region (in units), depending on which quota you want to increase.\nFor New limit value, enter the new quota value.\nTo request an increase for another quota, choose Add another request, and repeat Steps 4\u20136.\nFor Use case description, enter your reason for requesting a quota increase.\nUnder Contact options, specify your preferred contact language and contact method.\nChoose Submit."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-networking.html",
        "content": "Amazon VPC enables you to launch AWS resources, such as Amazon EC2 instances, into a virtual network dedicated to your AWS account, known as a virtual private cloud (VPC). When you launch an instance, you can select a subnet from the VPC. The instance is configured with a primary network interface, which is a logical virtual network card. The instance receives a primary private IP address from the IPv4 address of the subnet, and it is assigned to the primary network interface.\nYou can control whether the instance receives a public IP address from Amazon's pool of public IP addresses. The public IP address of an instance is associated with your instance only until it is stopped or terminated. If you require a persistent public IP address, you can allocate an Elastic IP address for your AWS account and associate it with an instance or a network interface. An Elastic IP address remains associated with your AWS account until you release it, and you can move it from one instance to another as needed. You can bring your own IP address range to your AWS account, where it appears as an address pool, and then allocate Elastic IP addresses from your address pool.\nTo increase network performance and reduce latency, you can launch instances in a placement group. You can get significantly higher packet per second (PPS) performance using enhanced networking. You can accelerate high performance computing and machine learning applications using an Elastic Fabric Adapter (EFA), which is a network device that you can attach to a supported instance type.\nFeatures\nRegions and Zones\nInstance IP addressing\nInstance hostname types\nBring your own IP addresses\nElastic IP addresses\nNetwork interfaces\nNetwork bandwidth\nEnhanced networking\nElastic Fabric Adapter\nInstance topology\nPlacement groups\nNetwork MTU\nVirtual private clouds"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html",
        "content": "Amazon EC2 is hosted in multiple locations world-wide. These locations are composed of AWS Regions, Availability Zones, Local Zones, AWS Outposts, and Wavelength Zones.\nEach Region is a separate geographic area.\nAvailability Zones are multiple, isolated locations within each Region.\nLocal Zones provide you the ability to place resources, such as compute and storage, in multiple locations closer to your end users.\nAWS Outposts brings native AWS services, infrastructure, and operating models to virtually any data center, co-location space, or on-premises facility.\nWavelength Zones allow developers to build applications that deliver ultra-low latencies to 5G devices and end users. Wavelength deploys standard AWS compute and storage services to the edge of telecommunication carriers' 5G networks.\nAWS operates state-of-the-art, highly available data centers. Although rare, failures can occur that affect the availability of instances that are in the same location. If you host all of your instances in a single location that is affected by a failure, none of your instances would be available.\nFor more information, see AWS Global Infrastructure.\nContents\nRegions\nAvailable Regions\nRegional endpoints\nAvailability Zones\nAZ IDs\nAvailable Availability Zones\nInstances in Availability Zones\nLocal Zones\nAvailable Local Zones\nInstances in Local Zones\nWavelength Zones\nAvailable Wavelength Zones\nInstances in Wavelength Zones\nAWS Outposts\nInstances on an Outpost\nVolumes on an Outposts rack\nVolumes on an Outposts server\nRegions\nEach Region is designed to be isolated from the other Regions. This achieves the greatest possible fault tolerance and stability.\nWhen you view your resources, you see only the resources that are tied to the Region that you specified. This is because Regions are isolated from each other, and we don't automatically replicate resources across Regions.\nWhen you launch an instance, you must select an AMI that's in the same Region. If the AMI is in another Region, you can copy the AMI to the Region you're using. For more information, see Copy an Amazon EC2 AMI.\nNote that there is a charge for data transfer between Regions. For more information, see Amazon EC2 Pricing - Data Transfer.\nAvailable Regions\nYour account determines the Regions that are available to you.\nAn AWS account provides multiple Regions so that you can launch Amazon EC2 instances in locations that meet your requirements. For example, you might want to launch instances in Europe to be closer to your European customers or to meet legal requirements.\nAn AWS GovCloud (US-West) account provides access to the AWS GovCloud (US-West) Region and the AWS GovCloud (US-East) Region. For more information, see AWS GovCloud (US).\nAn Amazon AWS (China) account provides access to the Beijing and Ningxia Regions only. For more information, see Amazon Web Services in China.\nYou can't describe or access additional Regions from an AWS account, such as the AWS GovCloud (US) Regions or the China Regions.\nThe following table lists the Regions provided by an AWS account. Alternatively, call the list-regions command.\nCode Name Opt-in status\nus-east-1 US East (N. Virginia) Not required\nus-east-2 US East (Ohio) Not required\nus-west-1 US West (N. California) Not required\nus-west-2 US West (Oregon) Not required\naf-south-1 Africa (Cape Town) Required\nap-east-1 Asia Pacific (Hong Kong) Required\nap-south-2 Asia Pacific (Hyderabad) Required\nap-southeast-3 Asia Pacific (Jakarta) Required\nap-southeast-5 Asia Pacific (Malaysia) Required\nap-southeast-4 Asia Pacific (Melbourne) Required\nap-south-1 Asia Pacific (Mumbai) Not required\nap-northeast-3 Asia Pacific (Osaka) Not required\nap-northeast-2 Asia Pacific (Seoul) Not required\nap-southeast-1 Asia Pacific (Singapore) Not required\nap-southeast-2 Asia Pacific (Sydney) Not required\nap-southeast-7 Asia Pacific (Thailand) Required\nap-northeast-1 Asia Pacific (Tokyo) Not required\nca-central-1 Canada (Central) Not required\nca-west-1 Canada West (Calgary) Required\ncn-north-1 China (Beijing) Not required\ncn-northwest-1 China (Ningxia) Not required\neu-central-1 Europe (Frankfurt) Not required\neu-west-1 Europe (Ireland) Not required\neu-west-2 Europe (London) Not required\neu-south-1 Europe (Milan) Required\neu-west-3 Europe (Paris) Not required\neu-south-2 Europe (Spain) Required\neu-north-1 Europe (Stockholm) Not required\neu-central-2 Europe (Zurich) Required\nil-central-1 Israel (Tel Aviv) Required\nmx-central-1 Mexico (Central) Required\nme-south-1 Middle East (Bahrain) Required\nme-central-1 Middle East (UAE) Required\nsa-east-1 South America (S\u00e3o Paulo) Not required\nTo use a Region introduced after March 20, 2019, you must enable the Region. For more information, see Enable or disable AWS Regions in your account in the AWS Account Management Reference Guide.\nTo get the name of a Region, use the following get-parameters-by-path command. Replace region-code with the code for the Region. You might need to modify the quotes to get the example to work with your terminal.\naws ssm get-parameters-by-path \\\n    --path /aws/service/global-infrastructure/regions/region-code \\\n    --query 'Parameters[?Name.contains(@,`longName`)].Value' \\\n    --output text\nRegional endpoints\nWhen you work with an instance using the command line interface or API actions, you must specify its Regional endpoint. For more information about the Regions and endpoints for Amazon EC2, see Amazon EC2 service endpoints in the Amazon EC2 Developer Guide.\nFor more information about endpoints and protocols in AWS GovCloud (US-West), see Service Endpoints in the AWS GovCloud (US) User Guide.\nAvailability Zones\nEach Region has multiple, isolated locations known as Availability Zones. The code for an Availability Zone is its Region code followed by a letter identifier. For example, us-east-1a.\nWhen you launch an instance, you select a Region and a virtual private cloud (VPC), and then you can either select a subnet from one of the Availability Zones or let us choose one for you. If you distribute your instances across multiple Availability Zones and one instance fails, you can design your application so that an instance in another Availability Zone can handle requests. You can also use Elastic IP addresses to mask the failure of an instance in one Availability Zone by rapidly remapping the address to an instance in another Availability Zone.\nThe following diagram illustrates multiple Availability Zones in an AWS Region. Availability Zone A and Availability Zone B each have one subnet, and each subnet has instances. Availability Zone C has no subnets, therefore you can't launch instances into this Availability Zone.\nAs Availability Zones grow over time, our ability to expand them can become constrained. If this happens, we might restrict you from launching an instance in a constrained Availability Zone unless you already have an instance in that Availability Zone. Eventually, we might also remove the constrained Availability Zone from the list of Availability Zones for new accounts. Therefore, your account might have a different number of available Availability Zones in a Region than another account.\nAZ IDs\nTo ensure that resources are distributed across the Availability Zones for a Region, we independently map Availability Zones to codes for each AWS account in our oldest Regions. For example, the us-east-1a for your AWS account might not be the same physical location as the us-east-1a for another AWS account.\nTo coordinate Availability Zones across accounts in all Regions even those that map Availability Zones, use the AZ IDs, which are unique and consistent identifiers for an Availability Zone. For example, use1-az1 is an AZ ID for the us-east-1 Region, and it has the same physical location in every AWS account. You can view the AZ IDs for your account to determine the physical location of your resources relative to the resources in another account. For example, if you share a subnet in the Availability Zone with the AZ ID use1-az2 with another account, this subnet is available to that account in the Availability Zone whose AZ ID is also use1-az2.\nTo view the AZ IDs for your account, check the Service health panel on the EC2 Dashboard or use the describe-availability-zones AWS CLI command.\nThe following diagram illustrates two accounts with different mappings of Availability Zone code to AZ ID.\nAvailable Availability Zones\nEach Region has multiple Availability Zones, as shown in the following list.\nUS East (N. Virginia) \u2013 use1-az1 | use1-az2 | use1-az3 | use1-az4 | use1-az5 | use1-az6\nUS East (Ohio) \u2013 use2-az1 | use2-az2 | use2-az3\nUS West (N. California) \u2013 usw1-az1 | usw1-az2 | usw1-az3  \u2020\nUS West (Oregon) \u2013 usw2-az1 | usw2-az2 | usw2-az3 | usw2-az4\nAfrica (Cape Town) \u2013 afs1-az1 | afs1-az2 | afs1-az3\nAsia Pacific (Hong Kong) \u2013 ape1-az1 | ape1-az2 | ape1-az3\nAsia Pacific (Hyderabad) \u2013 aps2-az1 | aps2-az2 | aps2-az3\nAsia Pacific (Jakarta) \u2013 apse3-az1 | apse3-az2 | apse3-az3\nAsia Pacific (Malaysia) \u2013 apse5-az1 | apse5-az2 | apse5-az3\nAsia Pacific (Melbourne) \u2013 apse4-az1 | apse4-az2 | apse4-az3\nAsia Pacific (Mumbai) \u2013 aps1-az1 | aps1-az2 | aps1-az3\nAsia Pacific (Osaka) \u2013 apne3-az1 | apne3-az2 | apne3-az3\nAsia Pacific (Seoul) \u2013 apne2-az1 | apne2-az2 | apne2-az3 | apne2-az4\nAsia Pacific (Singapore) \u2013 apse1-az1 | apse1-az2 | apse1-az3\nAsia Pacific (Sydney) \u2013 apse2-az1 | apse2-az2 | apse2-az3\nAsia Pacific (Thailand) \u2013 apse7-az1 | apse7-az2 | apse7-az3\nAsia Pacific (Tokyo) \u2013 apne1-az1 | apne1-az2 | apne1-az3 | apne1-az4\nCanada (Central) \u2013 cac1-az1 | cac1-az2 | cac1-az4\nCanada West (Calgary) \u2013 caw1-az1 | caw1-az2 | caw1-az3\nEurope (Frankfurt) \u2013 euc1-az1 | euc1-az2 | euc1-az3\nEurope (Ireland) \u2013 euw1-az1 | euw1-az2 | euw1-az3\nEurope (London) \u2013 euw2-az1 | euw2-az2 | euw2-az3\nEurope (Milan) \u2013 eus1-az1 | eus1-az2 | eus1-az3\nEurope (Paris) \u2013 euw3-az1 | euw3-az2 | euw3-az3\nEurope (Spain) \u2013 eus2-az1 | eus2-az2 | eus2-az3\nEurope (Stockholm) \u2013 eun1-az1 | eun1-az2 | eun1-az3\nEurope (Zurich) \u2013 euc2-az1 | euc2-az2 | euc2-az3\nIsrael (Tel Aviv) \u2013 ilc1-az1 | ilc1-az2 | ilc1-az3\nMexico (Central) \u2013 mxc1-az1 | mxc1-az2 | mxc1-az3\nMiddle East (Bahrain) \u2013 mes1-az1 | mes1-az2 | mes1-az3\nMiddle East (UAE) \u2013 mec1-az1 | mec1-az2 | mec1-az3\nSouth America (S\u00e3o Paulo) \u2013 sae1-az1 | sae1-az2 | sae1-az3\nAWS GovCloud (US-East) \u2013 usge1-az1 | usge1-az2 | usge1-az3\nAWS GovCloud (US-West) \u2013 usgw1-az1 | usgw1-az2 | usgw1-az3\n\u2020 Newer accounts can access two Availability Zones in US West (N. California).\nInstances in Availability Zones\nWhen you launch an instance, select a Region that puts your instances closer to specific customers, or meets the legal or other requirements that you have. By launching your instances in separate Availability Zones, you can protect your applications from the failure of a single location in the Region.\nWhen you launch an instance, you can optionally specify an Availability Zone in the Region that you are using. If you do not specify an Availability Zone, we select an Availability Zone for you. When you launch your initial instances, we recommend that you accept the default Availability Zone, because this allows us to select the best Availability Zone for you based on system health and available capacity. If you launch additional instances, specify an Availability Zone only if your new instances must be close to, or separated from, your running instances.\nLocal Zones\nA Local Zone is an extension of an AWS Region in geographic proximity to your users. Local Zones have their own connections to the internet and support AWS Direct Connect, so that resources created in a Local Zone can serve local users with low-latency communications. For more information, see What is AWS Local Zones? in the AWS Local Zones User Guide.\nThe code for a Local Zone is its Region code followed by an identifier that indicates its physical location. For example, us-west-2-lax-1 in Los Angeles.\nThe following diagram illustrates the AWS Region us-west-2, two of its Availability Zones, and two of its Local Zones. The VPC spans the Availability Zones and one of the Local Zones. Each zone in the VPC has one subnet, and each subnet has an instance.\nAvailable Local Zones\nFor the list of available Local Zones, see Available Local Zones in the AWS Local Zones User Guide. For the list of announced Local Zones, see AWS Local Zones locations.\nInstances in Local Zones\nTo use a Local Zone, you must first enable it. Then, create a subnet in the Local Zone. You can specify the Local Zone subnet when you launch instances, which places it in the Local Zone subnet in the Local Zone.\nWhen you launch an instance in a Local Zone, you also allocate an IP address from a network border group. A network border group is a unique set of Availability Zones, Local Zones, or Wavelength Zones from which AWS advertises IP addresses, for example, us-west-2-lax-1a. You can allocate the following IP addresses from a network border group:\nAmazon-provided Elastic IPv4 addresses\nAmazon-provided IPv6 VPC addresses (available only in the Los Angeles zones)\nFor more information about how to launch an instance in a Local Zone, see Getting started with AWS Local Zones in the AWS Local Zones User Guide.\nWavelength Zones\nAWS Wavelength enables developers to build applications that deliver ultra-low latencies to mobile devices and end users. Wavelength deploys standard AWS compute and storage services to the edge of telecommunication carriers' 5G networks. Developers can extend a virtual private cloud (VPC) to one or more Wavelength Zones, and then use AWS resources like Amazon EC2 instances to run applications that require ultra-low latency and a connection to AWS services in the Region.\nA Wavelength Zone is an isolated zone in the carrier location where the Wavelength infrastructure is deployed. Wavelength Zones are tied to a Region. A Wavelength Zone is a logical extension of a Region, and is managed by the control plane in the Region.\nThe code for a Wavelength Zone is its Region code followed by an identifier that indicates the physical location. For example, us-east-1-wl1-bos-wlz-1 in Boston.\nThe following diagram illustrates the AWS Region us-west-2, two of its Availability Zones, and a Wavelength Zone. The VPC spans the Availability Zones and the Wavelength Zone. Each zone in the VPC has one subnet, and each subnet has an instance.\nWavelength Zones are not available in every Region. For information about the Regions that support Wavelength Zones, see Available Wavelength Zones in the AWS Wavelength Developer Guide.\nAvailable Wavelength Zones\nFor the list of available Wavelength Zones, see Available Wavelength Zones in the AWS Wavelength Guide.\nInstances in Wavelength Zones\nTo use a Wavelength Zone, you must first opt in to the Zone. Then, create a subnet in the Wavelength Zone. You can specify the Wavelength subnet when you launch instances. You also allocate a carrier IP address from a network border group, which is a unique set of Availability Zones, Local Zones, or Wavelength Zones from which AWS advertises IP addresses, for example, us-east-1-wl1-bos-wlz-1.\nFor step-by-step directions to launch an instance in a Wavelength Zone, see Get started with AWS Wavelength in the AWS Wavelength Developer Guide.\nAWS Outposts\nAWS Outposts is a fully managed service that extends AWS infrastructure, services, APIs, and tools to customer premises. By providing local access to AWS managed infrastructure, AWS Outposts enables customers to build and run applications on premises using the same programming interfaces as in AWS Regions, while using local compute and storage resources for lower latency and local data processing needs.\nAn Outpost is a pool of AWS compute and storage capacity deployed at a customer site. AWS operates, monitors, and manages this capacity as part of an AWS Region. You can create subnets on your Outpost and specify them when you create AWS resources. Instances in Outpost subnets communicate with other instances in the AWS Region using private IP addresses, all within the same VPC.\nThe following diagram illustrates the AWS Region us-west-2, two of its Availability Zones, and an Outpost. The VPC spans the Availability Zones and the Outpost. The Outpost is in an on-premises customer data center. Each zone in the VPC has one subnet, and each subnet has an instance.\nInstances on an Outpost\nTo begin using AWS Outposts, you must create an Outpost and order Outpost capacity. AWS Outposts offers two form factors, Outposts racks and Outposts servers. For more information about Outposts configurations, see AWS Outposts Family. After your Outpost equipment is installed, the compute and storage capacity is available for you when you launch EC2 instances on your Outpost.\nTo launch EC2 instances you must create an Outpost subnet. Security groups control inbound and outbound traffic for instances in an Outpost subnet, just as they do for instances in an Availability Zone subnet. To connect to an EC2 instance in an Outpost subnet, you can specify a key pair when you launch the instance, just as you do for instances in an Availability Zone subnet to allow connections using SSH.\nFor more information, see Get started with Outposts racks or Get started with Outposts servers.\nVolumes on an Outposts rack\nIf your Outposts compute capacity is on an Outpost rack, you can create EBS volumes in the Outpost subnet that you created. When you create the volume, specify the Amazon Resource Name (ARN) of the Outpost.\nThe following create-volume command creates an empty 50 GB volume on the specified Outpost.\naws ec2 create-volume --availability-zone us-east-2a --outpost-arn arn:aws:outposts:us-east-2:123456789012:outpost/op-03e6fecad652a6138 --size 50\nYou can dynamically modify the size of your Amazon EBS gp2 volumes without detaching them. For more information about modifying a volume without detaching it, see Request modifications to your EBS volumes in the Amazon EBS User Guide.\nWe recommend that you limit the root volume for an instance on an Outpost rack to 30 GiB or smaller. You can specify data volumes in the block device mapping of the AMI or the instance to provide additional storage. To trim unused blocks from the boot volume, see How to Build Sparse EBS Volumes in the AWS Partner Network Blog.\nWe recommend that you increase the NVMe timeout for the root volume. For more information, see I/O operation timeout in the Amazon EBS User Guide.\nVolumes on an Outposts server\nInstances on Outposts servers provide instance store volumes but do not support EBS volumes. Choose an Amazon EBS-backed AMI with only a single EBS snapshot. Choose an instance size with enough instance storage to meet the needs of your application. For more information, see Instance store limits."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html",
        "content": "Amazon EC2 and Amazon VPC support both the IPv4 and IPv6 addressing protocols. By default, Amazon VPC uses the IPv4 addressing protocol; you can't disable this behavior. When you create a VPC, you must specify an IPv4 CIDR block (a range of private IPv4 addresses). You can optionally assign an IPv6 CIDR block to your VPC and assign IPv6 addresses from that block to instances in your subnets.\nContents\nPrivate IPv4 addresses\nPublic IPv4 addresses\nPublic IPv4 address optimization\nIPv6 addresses\nEC2 instance hostnames\nLink-local addresses\nManage the IPv4 addresses for your EC2 instances\nManage the IPv6 addresses for your EC2 instances\nMultiple IP addresses for your EC2 instances\nConfigure secondary private IPv4 addresses for Windows instances\nPrivate IPv4 addresses\nA private IPv4 address is an IP address that's not reachable over the Internet. You can use private IPv4 addresses for communication between instances in the same VPC. For more information about the standards and specifications of private IPv4 addresses, see RFC 1918. We allocate private IPv4 addresses to instances using DHCP.\nNote\nYou can create a VPC with a publicly routable CIDR block that falls outside of the private IPv4 address ranges specified in RFC 1918. However, for the purposes of this documentation, we refer to private IPv4 addresses (or 'private IP addresses') as the IP addresses that are within the IPv4 CIDR range of your VPC.\nVPC subnets can be one of the following types:\nIPv4-only subnets \u2013 You can only create resources in these subnets with IPv4 addresses assigned to them.\nIPv6-only subnets \u2013 You can only create resources in these subnets with IPv6 addresses assigned to them.\nIPv4 and IPv6 subnets \u2013 You can create resources in these subnets with either IPv4 or IPv6 addresses assigned to them.\nWhen you launch an EC2 instance into an IPv4-only or dual stack (IPv4 and IPv6) subnet, the instance receives a primary private IP address from the IPv4 address range of the subnet. For more information, see IP addressing in the Amazon VPC User Guide. If you don't specify a primary private IP address when you launch the instance, we select an available IP address in the subnet's IPv4 range for you. Each instance has a default network interface (index 0) that is assigned the primary private IPv4 address. You can also specify additional private IPv4 addresses, known as secondary private IPv4 addresses. Unlike primary private IP addresses, secondary private IP addresses can be reassigned from one instance to another. For more information, see Multiple IP addresses for your EC2 instances.\nA private IPv4 address, regardless of whether it is a primary or secondary address, remains associated with the network interface when the instance is stopped and started, or hibernated and started, and is released when the instance is terminated.\nPublic IPv4 addresses\nA public IP address is an IPv4 address that's reachable from the Internet. You can use public addresses for communication between your instances and the Internet.\nWhen you launch an instance in a default VPC, we assign it a public IP address by default. When you launch an instance into a nondefault VPC, the subnet has an attribute that determines whether instances launched into that subnet receive a public IP address from the public IPv4 address pool. By default, we don't assign a public IP address to instances launched in a nondefault subnet.\nYou can control whether your instance receives a public IP address as follows:\nModify the public IP addressing attribute of your subnet. For more information, see Modify the public IPv4 addressing attribute for your subnet in the Amazon VPC User Guide.\nEnable or disable the public IP addressing feature during launch, which overrides the subnet's public IP addressing attribute. For more information, see Assign a public IPv4 address during instance launch.\nUnassign a public IP address from your instance after launch by managing the IP addresses associated with a network interface.\nA public IP address is assigned to your instance from Amazon's pool of public IPv4 addresses, and is not associated with your AWS account. When a public IP address is disassociated from your instance, it is released back into the public IPv4 address pool, and you cannot reuse it.\nIn certain cases, we release the public IP address from your instance, or assign it a new one:\nWe release your instance's public IP address when it is stopped, hibernated, or terminated. Your stopped or hibernated instance receives a new public IP address when it is started.\nWe release your instance's public IP address when you associate an Elastic IP address with it. When you disassociate the Elastic IP address from your instance, it receives a new public IP address.\nIf the public IP address of your instance in a VPC has been released, it will not receive a new one if there is more than one network interface attached to your instance.\nIf your instance's public IP address is released while it has a secondary private IP address that is associated with an Elastic IP address, the instance does not receive a new public IP address.\nIf you require a persistent public IP address that can be associated to and from instances as you require, use an Elastic IP address instead.\nIf you use dynamic DNS to map an existing DNS name to a new instance's public IP address, it might take up to 24 hours for the IP address to propagate through the Internet. As a result, new instances might not receive traffic while terminated instances continue to receive requests. To solve this problem, use an Elastic IP address. You can allocate your own Elastic IP address, and associate it with your instance. For more information, see Elastic IP addresses.\nIf you are using Amazon VPC IP Address Manager (IPAM), you can get a contiguous block of public IPv4 addresses from AWS and use it to allocate Elastic IP addresses to AWS resources. Using contiguous IPv4 address blocks can significantly reduce management overhead for security access control lists and simplify IP address allocation and tracking for enterprises scaling on AWS. For more information, see Allocate sequential Elastic IP addresses from an IPAM pool in the Amazon VPC IPAM User Guide.\nNote\nAWS charges for all public IPv4 addresses, including public IPv4 addresses associated with running instances and Elastic IP addresses. For more information, see the Public IPv4 Address tab on the Amazon VPC pricing page.\nInstances that access other instances through their public NAT IP address are charged for regional or Internet data transfer, depending on whether the instances are in the same Region.\nPublic IPv4 address optimization\nAWS charges for all public IPv4 addresses, including public IPv4 addresses associated with running instances and Elastic IP addresses. For more information, see the Public IPv4 Address tab on the Amazon VPC pricing page.\nThe following list contains actions you can take to optimize the number of public IPv4 addresses you use:\nUse an elastic load balancer to load balance traffic to your EC2 instances and disable Auto-assign public IP on the primary ENI assigned to the instances. Load balancers use a single public IPv4 address, so this reduces your public IPv4 address count. You may also want consolidate existing load balancers to further reduce the public IPv4 address count.\nIf the only reason for using a NAT gateway is to SSH into an EC2 instance in a private subnet for maintenance or emergencies, consider using EC2 Instance Connect Endpoint instead. With EC2 Instance Connect Endpoint, you can connect to an instance from the internet without requiring the instance to have a public IPv4 address.\nIf your EC2 instances are in a public subnet with public IP addresses allocated to them, consider moving the instances to a private subnet, removing the public IP addresses, and using a public NAT gateway to allow access to and from your EC2 instances. There are cost considerations for using NAT gateways. Use this calculation method to decide if NAT gateways are cost effective. You can get the Number of public IPv4 addresses required for this calculation by creating an AWS Billing Cost and Usage Report.\nNAT gateway per hour + NAT gateway public IPs + NAT gateway transfer / Existing public IP cost\nWhere:\nNAT gateway per hour = $0.045 * 730 hours in a month * Number of Availability Zones the NAT gateways are in\nNAT gateway public IPs = $0.005 * 730 hours in a month * Number of IPs associated with your NAT gateways\nNAT gateway transfer = $0.045 * Number of GBs that will go through the NAT gateway in a month\nExisting public IP cost = $0.005 * 730 hours in a month * Number of public IPv4 addresses\nIf the total is less than 1, NAT gateways are cheaper than public IPv4 addresses.\nUse AWS PrivateLink to connect privately to AWS services or services hosted by other AWS accounts rather than using public IPv4 addresses and internet gateways.\nBring your own IP address range (BYOIP) to AWS and use the range for public IPv4 addresses rather than using Amazon-owned public IPv4 addresses.\nTurn off auto-assign public IPv4 address for instances launched into subnets. This option is generally disabled by default for VPCs when you create a subnet, but you should check your existing subnets to ensure it\u2019s disabled.\nIf you have EC2 instances that do not need public IPv4 addresses, check that the network interfaces attached to your instances have Auto-assign public IP disabled.\nConfigure accelerator endpoints in AWS Global Accelerator for EC2 instances in private subnets to enable internet traffic to flow directly to the endpoints in your VPCs without requiring public IP addresses. You can also bring your own addresses to AWS Global Accelerator and use your own IPv4 addresses for your accelerator\u2019s static IP addresses.\nIPv6 addresses\nIPv6 addresses are globally unique and can be configured to remain private or reachable over the Internet. Both public and private IPv6 addressing is available in AWS:\nPrivate IPv6: AWS considers private IPv6 addresses those that are not advertised and cannot be advertised on the Internet from AWS.\nPublic IPv6: AWS considers public IPv6 addresses those that are advertised on the Internet from AWS.\nFor more information about public and private IPv6 addresses, see IPv6 addresses in the Amazon VPC User Guide.\nAll instance types support IPv6 addresses except for the following: C1, M1, M2, M3, and T1.\nYour EC2 instances receive an IPv6 address if an IPv6 CIDR block is associated with your VPC and subnet, and if one of the following is true:\nYour subnet is configured to automatically assign an IPv6 address to an instance during launch. For more information, see Modify the IP addressing attributes of your subnet.\nYou assign an IPv6 address to your instance during launch.\nYou assign an IPv6 address to the primary network interface of your instance after launch.\nYou assign an IPv6 address to a network interface in the same subnet, and attach the network interface to your instance after launch.\nWhen your instance receives an IPv6 address during launch, the address is associated with the primary network interface (index 0) of the instance. You can manage the IPv6 addresses for your instances primary network interface as follows:\nAssign and unassign IPv6 addresses from the network interface. The number of IPv6 addresses you can assign to a network interface and the number of network interfaces you can attach to an instance varies per instance type. For more information, see Maximum IP addresses per network interface.\nEnable a primary IPv6 address. A primary IPv6 address enables you to avoid disrupting traffic to instances or ENIs. For more information, see Create a network interface for your EC2 instance or Manage the IP addresses for your network interface.\nAn IPv6 address persists when you stop and start, or hibernate and start, your instance, and is released when you terminate your instance. You cannot reassign an IPv6 address while it's assigned to another network interface\u2014you must first unassign it.\nYou can control whether instances are reachable via their IPv6 addresses by controlling the routing for your subnet or by using security group and network ACL rules. For more information, see Internetwork traffic privacy in the Amazon VPC User Guide.\nFor more information about reserved IPv6 address ranges, see IANA IPv6 Special-Purpose Address Registry and RFC4291.\nEC2 instance hostnames\nWhen you create an EC2 instance, AWS creates a hostname for that instance. For more information on the types of hostnames and how they're provisioned by AWS, see Amazon EC2 instance hostname types. Amazon provides a DNS server that resolves Amazon-provided hostnames to IPv4 and IPv6 addresses. The Amazon DNS server is located at the base of your VPC network range plus two. For more information, see DNS attributes for your VPC in the Amazon VPC User Guide.\nLink-local addresses\nLink-local addresses are well-known, non-routable IP addresses. Amazon EC2 uses addresses from the link-local address space to provide services that are accessible only from an EC2 instance. These services do not run on the instance, they run on the underlying host. When you access the link-local addresses for these services, you're communicating with either the Xen hypervisor or the Nitro controller.\nLink-local address ranges\nIPv4 \u2013 169.254.0.0/16 (169.254.0.0 to 169.254.255.255)\nIPv6 \u2013 fe80::/10\nServices that you access using link-local addresses\nInstance Metadata Service\nAmazon Route 53 Resolver (also known as the Amazon DNS server)\nAmazon Time Sync Service\nAWS KMS servers"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-ip-addresses.html",
        "content": "You can assign a public IPv4 address to your instance when you launch it. You can view the IPv4 addresses for your instance in the console through either the Instances page or the Network Interfaces page.\nContents\nView the IPv4 addresses\nAssign a public IPv4 address during instance launch\nView the IPv4 addresses\nYou can use the Amazon EC2 console to view the public and private IPv4 addresses of your instances. You can also determine the public IPv4 and private IPv4 addresses of your instance from within your instance by using instance metadata. For more information, see Use instance metadata to manage your EC2 instance.\nThe public IPv4 address is displayed as a property of the network interface in the console, but it's mapped to the primary private IPv4 address through NAT. Therefore, if you inspect the properties of your network interface on your instance, for example, through ifconfig (Linux) or ipconfig (Windows), the public IPv4 address is not displayed. To determine your instance's public IPv4 address from an instance, use instance metadata.\nTo view the IPv4 addresses for an instance using the command line\nYou can use one of the following commands. For more information about these command line interfaces, see Access Amazon EC2.\ndescribe-instances (AWS CLI)\nGet-EC2Instance (AWS Tools for Windows PowerShell).\nTo determine your instance's IPv4 addresses using instance metadata\nConnect to your instance. For more information, see Connect to your EC2 instance.\nUse the following command to access the private IP address.\nIMDSv2\nIMDSv1\nTools for Windows PowerShell\n[ec2-user ~]$ TOKEN=`curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"` \\\n&& curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/local-ipv4\nUse the following command to access the public IP address. If an Elastic IP address is associated with the instance, the value returned is that of the Elastic IP address.\nIMDSv2\nIMDSv1\nTools for Windows PowerShell\n[ec2-user ~]$ TOKEN=`curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"` \\\n&& curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/public-ipv4\nAssign a public IPv4 address during instance launch\nEach subnet has an attribute that determines whether instances launched into that subnet are assigned a public IP address. By default, nondefault subnets have this attribute set to false, and default subnets have this attribute set to true. When you launch an instance, a public IPv4 addressing feature is also available for you to control whether your instance is assigned a public IPv4 address; you can override the default behavior of the subnet's IP addressing attribute. The public IPv4 address is assigned from Amazon's pool of public IPv4 addresses, and is assigned to the network interface with the device index of 0. This feature depends on certain conditions at the time you launch your instance.\nConsiderations\nYou can unassign the public IP address from your instance after launch by managing the IP addresses associated with a network interface. For more information about public IPv4 addresses, see Public IPv4 addresses.\nYou cannot auto-assign a public IP address if you specify more than one network interface. Additionally, you cannot override the subnet setting using the auto-assign public IP feature if you specify an existing network interface for device index 0.\nWhether you assign a public IP address to your instance during launch or not, you can associate an Elastic IP address with your instance after it's launched. For more information, see Elastic IP addresses. You can also modify your subnet's public IPv4 addressing behavior. For more information, see Modify the public IPv4 addressing attribute for your subnet.\nTo assign a public IPv4 address during instance launch using the console\nFollow the procedure to launch an instance, and when you configure Network Settings, choose the option to Auto-assign Public IP.\nTo enable or disable the public IP addressing feature using the command line\nYou can use one of the following commands. For more information about these command line interfaces, see Access Amazon EC2.\nUse the --associate-public-ip-address or the --no-associate-public-ip-address option with the run-instances command (AWS CLI)\nUse the -AssociatePublicIp parameter with the New-EC2Instance command (AWS Tools for Windows PowerShell)"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-ipv6-addresses.html",
        "content": "If your VPC and subnet have IPv6 CIDR blocks associated with them, you can assign an IPv6 address to your instance during or after launch. You can view the IPv6 addresses for your instances in the console on either the Instances page or the Network Interfaces page.\nContents\nAssign an IPv6 address to an instance\nView the IPv6 addresses\nUnassign an IPv6 address from an instance\nAssign an IPv6 address to an instance\nYou can specify an IPv6 address from the IPv6 address range of the subnet, or let Amazon choose one for you. This address is assigned to the primary network interface. Note that the following instance types do not support IPv6 addresses: C1, M1, M2, M3, and T1.\nTo assign an IPv6 address during instance launch\nFollow the procedure to launch an instance. When you configure Network Settings, choose the option to Auto-assign IPv6 IP.\nTo assign an IPv6 address after launch\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect your instance, and choose Actions, Networking, Manage IP addresses.\nExpand the network interface. Under IPv6 addresses, choose Assign new IP address. Enter an IPv6 address from the range of the subnet or leave the field blank to let Amazon choose one for you.\nChoose Save.\nTo assign an IPv6 address using the command line\nYou can use one of the following commands. For more information about these command line interfaces, see Access Amazon EC2.\nUse the --ipv6-addresses option with the run-instances command (AWS CLI)\nUse the Ipv6Addresses property for -NetworkInterface in the New-EC2Instance command (AWS Tools for Windows PowerShell)\nassign-ipv6-addresses (AWS CLI)\nRegister-EC2Ipv6AddressList (AWS Tools for Windows PowerShell)\nView the IPv6 addresses\nYou can use the Amazon EC2 console, AWS CLI, and instance metadata to view the IPv6 addresses for your instances.\nTo view the IPv6 addresses for an instance using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance.\nOn the Networking tab, locate IPv6 addresses.\nTo view the IPv6 addresses for an instance using the command line\nYou can use one of the following commands. For more information about these command line interfaces, see Access Amazon EC2.\ndescribe-instances (AWS CLI)\nGet-EC2Instance (AWS Tools for Windows PowerShell).\nTo view the IPv6 addresses for an instance using instance metadata\nConnect to your instance. For more information, see Connect to your EC2 instance.\nGet the MAC address of the instance from http://169.254.169.254/latest/meta-data/network/interfaces/macs/.\nUse the following command to view the IPv6 address.\nIMDSv2\nIMDSv1\nTools for Windows PowerShell\n[ec2-user ~]$ TOKEN=`curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"` \\\n&& curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/network/interfaces/macs/mac-address/ipv6s\nUnassign an IPv6 address from an instance\nYou can unassign an IPv6 address from an instance at any time.\nTo unassign an IPv6 address from an instance using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect your instance, and choose Actions, Networking, Manage IP addresses.\nExpand the network interface. Under IPv6 addresses, choose Unassign next to the IPv6 address.\nChoose Save.\nTo unassign an IPv6 address from an instance using the command line\nYou can use one of the following commands. For more information about these command line interfaces, see Access Amazon EC2.\nunassign-ipv6-addresses (AWS CLI)\nUnregister-EC2Ipv6AddressList (AWS Tools for Windows PowerShell)."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/MultipleIP.html",
        "content": "You can specify multiple private IPv4 and IPv6 addresses for your instances. The number of network interfaces and private IPv4 and IPv6 addresses that you can specify for an instance depends on the instance type. For more information, see Maximum IP addresses per network interface.\nIt can be useful to assign multiple IP addresses to an instance in your VPC to do the following:\nHost multiple websites on a single server by using multiple SSL certificates on a single server and associating each certificate with a specific IP address.\nOperate network appliances, such as firewalls or load balancers, that have multiple IP addresses for each network interface.\nRedirect internal traffic to a standby instance in case your instance fails, by reassigning the secondary IP address to the standby instance.\nContents\nHow multiple IP addresses work\nWork with multiple IPv4 addresses\nWork with multiple IPv6 addresses\nHow multiple IP addresses work\nThe following list explains how multiple IP addresses work with network interfaces:\nYou can assign a secondary private IPv4 address to any network interface.\nYou can assign multiple IPv6 addresses to a network interface that's in a subnet that has an associated IPv6 CIDR block.\nYou must choose a secondary IPv4 address from the IPv4 CIDR block range of the subnet for the network interface.\nYou must choose IPv6 addresses from the IPv6 CIDR block range of the subnet for the network interface.\nYou associate security groups with network interfaces, not individual IP addresses. Therefore, each IP address you specify in a network interface is subject to the security group of its network interface.\nMultiple IP addresses can be assigned and unassigned to network interfaces attached to running or stopped instances.\nSecondary private IPv4 addresses that are assigned to a network interface can be reassigned to another one if you explicitly allow it.\nAn IPv6 address cannot be reassigned to another network interface; you must first unassign the IPv6 address from the existing network interface.\nWhen assigning multiple IP addresses to a network interface using the command line tools or API, the entire operation fails if one of the IP addresses can't be assigned.\nPrimary private IPv4 addresses, secondary private IPv4 addresses, Elastic IP addresses, and IPv6 addresses remain with a secondary network interface when it is detached from an instance or attached to an instance.\nAlthough you can't detach the primary network interface from an instance, you can reassign the secondary private IPv4 address of the primary network interface to another network interface.\nThe following list explains how multiple IP addresses work with Elastic IP addresses (IPv4 only):\nEach private IPv4 address can be associated with a single Elastic IP address, and vice versa.\nWhen a secondary private IPv4 address is reassigned to another interface, the secondary private IPv4 address retains its association with an Elastic IP address.\nWhen a secondary private IPv4 address is unassigned from an interface, an associated Elastic IP address is automatically disassociated from the secondary private IPv4 address.\nWork with multiple IPv4 addresses\nYou can assign a secondary private IPv4 address to an instance, associate an Elastic IPv4 address with a secondary private IPv4 address, and unassign a secondary private IPv4 address.\nTasks\nAssign a secondary private IPv4 address\nConfigure the operating system to recognize secondary private IPv4 addresses\nAssociate an Elastic IP address with the secondary private IPv4 address\nView your secondary private IPv4 addresses\nUnassign a secondary private IPv4 address\nAssign a secondary private IPv4 address\nYou can assign the secondary private IPv4 address to the network interface for an instance as you launch the instance, or after the instance is running.\nTo assign a secondary private IPv4 address when launching an instance\nFollow the procedure to launch an instance. For Network settings, choose Edit.\nSelect a VPC and a subnet.\nExpand Advanced network configuration.\nFor Secondary IP, choose Automatically assign and enter the number of IP addresses (Amazon automatically assigns secondary IPv4 addresses) or choose Manually assign and enter the IPv4 addresses.\nComplete the remaining steps to launch the instance.\nTo assign a secondary IPv4 address during launch using the command line\nYou can use one of the following commands. For more information about these command line interfaces, see Access Amazon EC2.\nThe --secondary-private-ip-addresses option with the run-instances command (AWS CLI)\nDefine -NetworkInterface and specify the PrivateIpAddresses parameter with the New-EC2Instance command (AWS Tools for Windows PowerShell).\nTo assign a secondary private IPv4 address to a network interface\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Network Interfaces, and then select the network interface for the instance.\nChoose Actions, Manage IP Addresses.\nExpand the network interface. Under IPv4 addresses, choose Assign new IP address.\nEnter a specific IPv4 address that's within the subnet range for the instance, or leave the field blank to let Amazon select an IPv4 address for you.\n(Optional) Select Allow to allow the secondary private IP address to be reassigned if it is already assigned to another network interface.\nChoose Save.\nAlternatively, you can assign a secondary private IPv4 address to an instance. Choose Instances in the navigation pane, select the instance, and then choose Actions, Networking, Manage IP addresses. You can configure the same information as you did in the steps above. The IP address is assigned to the primary network interface for the instance.\nTo assign a secondary private IPv4 address to an existing instance using the command line\nYou can use one of the following commands. For more information about these command line interfaces, see Access Amazon EC2.\nassign-private-ip-addresses (AWS CLI)\nRegister-EC2PrivateIpAddress (AWS Tools for Windows PowerShell)\nConfigure the operating system to recognize secondary private IPv4 addresses\nAfter you assign a secondary private IPv4 address to your instance, you need to configure the operating system on your instance to recognize the secondary private IP address.\nLinux instances\nIf you are using Amazon Linux, the ec2-net-utils package can take care of this step for you. It configures additional network interfaces that you attach while the instance is running, refreshes secondary IPv4 addresses during DHCP lease renewal, and updates the related routing rules. You can immediately refresh the list of interfaces by using the command sudo service network restart and then view the up-to-date list using ip addr li. If you require manual control over your network configuration, you can remove the ec2-net-utils package. For more information, see Configure your network interface using ec2-net-utils.\nIf you are using another Linux distribution, see the documentation for your Linux distribution. Search for information about configuring additional network interfaces and secondary IPv4 addresses. If the instance has two or more interfaces on the same subnet, search for information about using routing rules to work around asymmetric routing.\nWindows instances\nFor more information, see Configure secondary private IPv4 addresses for Windows instances.\nAssociate an Elastic IP address with the secondary private IPv4 address\nTo associate an Elastic IP address with a secondary private IPv4 address\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Elastic IPs.\nSelect the checkbox for the Elastic IP address\nChoose Actions, Associate Elastic IP address.\nFor Resource type, choose Network interface. select the network interface, and then select the secondary IP address from the Private IP address list.\nFor Network interface, select the network interface. select the secondary IP address from the Private IP address list.\nFor Private IP address, select the secondary IP address.\nChoose Associate.\nTo associate an Elastic IP address with a secondary private IPv4 address using the command line\nYou can use one of the following commands. For more information about these command line interfaces, see Access Amazon EC2.\nassociate-address (AWS CLI)\nRegister-EC2Address (AWS Tools for Windows PowerShell)\nView your secondary private IPv4 addresses\nTo view the private IPv4 addresses assigned to a network interface\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Network Interfaces.\nSelect the checkbox for the network interface.\nOn the Details tab, under IP addresses, locate Private IPv4 address and Secondary private IPv4 addresses.\nTo view the private IPv4 addresses assigned to an instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the checkbox for the instance.\nOn the Networking tab, under Networking details, locate Private IPv4 addresses and Secondary private IPv4 addresses.\nUnassign a secondary private IPv4 address\nIf you no longer require a secondary private IPv4 address, you can unassign it from the instance or the network interface. When a secondary private IPv4 address is unassigned from a network interface, the Elastic IP address (if it exists) is also disassociated.\nTo unassign a secondary private IPv4 address from an instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect an instance, choose Actions, Networking, Manage IP addresses.\nExpand the network interface. For IPv4 addresses, choose Unassign for the IPv4 address to unassign.\nChoose Save.\nTo unassign a secondary private IPv4 address from a network interface\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Network Interfaces.\nSelect the network interface, choose Actions, Manage IP addresses.\nExpand the network interface. For IPv4 addresses, choose Unassign for the IPv4 address to unassign.\nChoose Save.\nTo unassign a secondary private IPv4 address using the command line\nYou can use one of the following commands. For more information about these command line interfaces, see Access Amazon EC2.\nunassign-private-ip-addresses (AWS CLI)\nUnregister-EC2PrivateIpAddress (AWS Tools for Windows PowerShell)\nWork with multiple IPv6 addresses\nYou can assign multiple IPv6 addresses to your instance, view the IPv6 addresses assigned to your instance, and unassign IPv6 addresses from your instance.\nContents\nAssign multiple IPv6 addresses\nView your IPv6 addresses\nUnassign an IPv6 address\nAssign multiple IPv6 addresses\nYou can assign one or more IPv6 addresses to your instance during launch or after launch. To assign an IPv6 address to an instance, the VPC and subnet in which you launch the instance must have an associated IPv6 CIDR block.\nTo assign multiple IPv6 addresses during launch\nFollow the procedure to launch an instance. For Network settings, choose Edit.\nSelect a VPC and a subnet.\nExpand Advanced network configuration.\nFor IPv6 IPs, choose Automatically assign and the number of IP addresses (Amazon automatically assigns the IPv6 addresses) or choose Manually assign and enter the IPv6 addresses.\nComplete the remaining steps to launch the instance.\nYou can use the Instances screen Amazon EC2 console to assign multiple IPv6 addresses to an existing instance. This assigns the IPv6 addresses to the primary network interface of the instance. To assign a specific IPv6 address to the instance, ensure that the IPv6 address is not already assigned to another instance or network interface.\nTo assign multiple IPv6 addresses to an existing instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect your instance, choose Actions, Networking, Manage IP addresses.\nExpand the network interface. For IPv6 addresses, choose Assign new IP address for each IPv6 address to add. You can specify an IPv6 address from the range of the subnet, or leave the field empty to let Amazon choose an IPv6 address for you.\nChoose Save.\nAlternatively, you can assign multiple IPv6 addresses to an existing network interface. The network interface must have been created in a subnet that has an associated IPv6 CIDR block. To assign a specific IPv6 address to the network interface, ensure that the IPv6 address is not already assigned to another network interface.\nTo assign multiple IPv6 addresses to a network interface\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Network Interfaces.\nSelect your network interface, choose Actions, Manage IP addresses.\nExpand the network interface. For IPv6 addresses, choose Assign new IP address for each IPv6 address to add. You can specify an IPv6 address from the range of the subnet, or leave the field empty to let Amazon choose an IPv6 address for you.\nChoose Save.\nCLI overview\nYou can use one of the following commands. For more information about these command line interfaces, see Access Amazon EC2.\nAssign an IPv6 address during launch:\nUse the --ipv6-addresses or --ipv6-address-count options with the run-instances command (AWS CLI)\nDefine -NetworkInterface and specify the Ipv6Addresses or Ipv6AddressCount parameters with the New-EC2Instance command (AWS Tools for Windows PowerShell).\nAssign an IPv6 address to a network interface:\nassign-ipv6-addresses (AWS CLI)\nRegister-EC2Ipv6AddressList (AWS Tools for Windows PowerShell)\nView your IPv6 addresses\nYou can view the IPv6 addresses for an instance or for a network interface.\nTo view the IPv6 addresses assigned to an instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the checkbox for your instance.\nOn the Networking tab, locate the IPv6 addresses field.\nTo view the IPv6 addresses assigned to a network interface\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Network Interfaces.\nSelect the checkbox for your network interface.\nOn the Details tab, under IP addresses, locate the IPv6 addresses field.\nCLI overview\nYou can use one of the following commands. For more information about these command line interfaces, see Access Amazon EC2.\nView the IPv6 addresses for an instance:\ndescribe-instances (AWS CLI)\nGet-EC2Instance (AWS Tools for Windows PowerShell).\nView the IPv6 addresses for a network interface:\ndescribe-network-interfaces (AWS CLI)\nGet-EC2NetworkInterface (AWS Tools for Windows PowerShell)\nUnassign an IPv6 address\nYou can unassign an IPv6 address from the primary network interface of an instance, or you can unassign an IPv6 address from a network interface.\nTo unassign an IPv6 address from an instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the checkbox for your instance, and then choose Actions, Networking, Manage IP addresses.\nExpand the network interface. Under IPv6 addresses, choose Unassign next to the IPv6 address.\nChoose Save.\nTo unassign an IPv6 address from a network interface\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Network Interfaces.\nSelect the checkbox for your network interface, and then choose Actions, Manage IP addresses.\nExpand the network interface. Under IPv6 addresses, choose Unassign next to the IPv6 address.\nChoose Save.\nCLI overview\nYou can use one of the following commands. For more information about these command line interfaces, see Access Amazon EC2.\nunassign-ipv6-addresses (AWS CLI)\nUnregister-EC2Ipv6AddressList (AWS Tools for Windows PowerShell)"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/config-windows-multiple-ip.html",
        "content": "You can specify multiple private IPv4 addresses for your instances. After you assign a secondary private IPv4 address to an instance, you must configure the operating system on the instance to recognize the secondary private IPv4 address.\nNote\nThese instructions are based on Windows Server 2022. The implementation of these steps might vary based on the operating system of the Windows instance.\nTasks\nPrerequisites\nStep 1: Configure static IP addressing in your instance\nStep 2: Configure a secondary private IP address for your instance\nStep 3: Configure applications to Use the secondary private IP address\nPrerequisites\nAssign the secondary private IPv4 address to the network interface for the instance. You can assign the secondary private IPv4 address when you launch the instance, or after the instance is running. For more information, see Assign a secondary private IPv4 address.\nAllocate an Elastic IP address and associate it with the secondary private IPv4 address. For more information, see Allocate an Elastic IP address and Associate an Elastic IP address with the secondary private IPv4 address.\nStep 1: Configure static IP addressing in your instance\nTo enable your Windows instance to use multiple IP addresses, you must configure your instance to use static IP addressing rather than a DHCP server.\nImportant\nWhen you configure static IP addressing in your instance, the IP address must match exactly what is shown in the console, CLI, or API. If you enter these IP addresses incorrectly, the instance could become unreachable.\nTo configure static IP addressing on a Windows instance\nConnect to your instance.\nFind the IP address, subnet mask, and default gateway addresses for the instance by performing the following steps:\nRun the following command in PowerShell:\nipconfig /all\nReview the output and note the IPv4 Address, Subnet Mask, Default Gateway, and DNS Servers values for the network interface. Your output should resemble the following example:\n...\n\nEthernet adapter Ethernet 4:\n\n   Connection-specific DNS Suffix  . : us-west-2.compute.internal\n   Description . . . . . . . . . . . : Amazon Elastic Network Adapter #2\n   Physical Address. . . . . . . . . : 02-9C-3B-FC-8E-67\n   DHCP Enabled. . . . . . . . . . . : Yes\n   Autoconfiguration Enabled . . . . : Yes\n   Link-local IPv6 Address . . . . . : fe80::f4d1:a773:5afa:cd1%7(Preferred)\n   IPv4 Address. . . . . . . . . . . : 10.200.0.128(Preferred)\n   Subnet Mask . . . . . . . . . . . : 255.255.255.0\n   Lease Obtained. . . . . . . . . . : Monday, April 8, 2024 12:19:29 PM\n   Lease Expires . . . . . . . . . . : Monday, April 8, 2024 4:49:30 PM\n   Default Gateway . . . . . . . . . : 10.200.0.1\n   DHCP Server . . . . . . . . . . . : 10.200.0.1\n   DHCPv6 IAID . . . . . . . . . . . : 151166011\n   DHCPv6 Client DUID. . . . . . . . : 00-01-00-01-2D-67-AC-FC-12-34-9A-BE-A5-E7\n   DNS Servers . . . . . . . . . . . : 10.200.0.2\n   NetBIOS over Tcpip. . . . . . . . : Enabled\nOpen the Network and Sharing Center by running the following command in PowerShell:\n& $env:SystemRoot\\system32\\control.exe ncpa.cpl\nOpen the context (right-click) menu for the network interface (Local Area Connection or Ethernet) and choose Properties.\nChoose Internet Protocol Version 4 (TCP/IPv4), Properties.\nIn the Internet Protocol Version 4 (TCP/IPv4) Properties dialog box, choose Use the following IP address, enter the following values, and then choose OK.\nField Value\nIP address The IPv4 address obtained in step 2 above.\nSubnet mask The subnet mask obtained in step 2 above.\nDefault gateway The default gateway address obtained in step 2 above.\nPreferred DNS server The DNS server obtained in step 2 above.\nAlternate DNS server The alternate DNS server obtained in step 2 above. If an alternate DNS server was not listed, leave this field blank.\nImportant\nIf you set the IP address to any value other than the current IP address, you will lose connectivity to the instance.\nYou will lose RDP connectivity to the Windows instance for a few seconds while the instance converts from using DHCP to static addressing. The instance retains the same IP address information as before, but now this information is static and not managed by DHCP.\nStep 2: Configure a secondary private IP address for your instance\nAfter you have set up static IP addressing on your Windows instance, you are ready to prepare a second private IP address.\nTo configure a secondary IP address\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances and select your instance.\nOn the Networking, note the secondary IP address.\nConnect to your instance.\nOn your Windows instance, choose Start, Control Panel.\nChoose Network and Internet, Network and Sharing Center.\nSelect the network interface (Local Area Connection or Ethernet) and choose Properties.\nOn the Local Area Connection Properties page, choose Internet Protocol Version 4 (TCP/IPv4), Properties, Advanced.\nChoose Add.\nIn the TCP/IP Address dialog box, type the secondary private IP address for IP address. For Subnet mask, type the same subnet mask that you entered for the primary private IP address in Step 1: Configure static IP addressing in your instance, and then choose Add.\nVerify the IP address settings and choose OK.\nChoose OK, Close.\nTo confirm that the secondary IP address has been added to the operating system, run the ipconfig /all command in PowerShell. Your output should resemble the following:\nEthernet adapter Ethernet 4:\n\n   Connection-specific DNS Suffix  . :\n   Description . . . . . . . . . . . : Amazon Elastic Network Adapter #2\n   Physical Address. . . . . . . . . : 02-9C-3B-FC-8E-67\n   DHCP Enabled. . . . . . . . . . . : No\n   Autoconfiguration Enabled . . . . : Yes\n   Link-local IPv6 Address . . . . . : fe80::f4d1:a773:5afa:cd1%7(Preferred)\n   IPv4 Address. . . . . . . . . . . : 10.200.0.128(Preferred)\n   Subnet Mask . . . . . . . . . . . : 255.255.255.0\n   IPv4 Address. . . . . . . . . . . : 10.200.0.129(Preferred)\n   Subnet Mask . . . . . . . . . . . : 255.255.255.0\n   Default Gateway . . . . . . . . . : 10.200.0.1\n   DHCPv6 IAID . . . . . . . . . . . : 151166011\n   DHCPv6 Client DUID. . . . . . . . : 00-01-00-01-2D-67-AC-FC-12-34-9A-BE-A5-E7\n   DNS Servers . . . . . . . . . . . : 10.200.0.2\n   NetBIOS over Tcpip. . . . . . . . : Enabled\nStep 3: Configure applications to Use the secondary private IP address\nYou can configure any applications to use the secondary private IP address. For example, if your instance is running a website on IIS, you can configure IIS to use the secondary private IP address.\nTo configure IIS to use the secondary private IP address\nConnect to your instance.\nOpen Internet Information Services (IIS) Manager.\nIn the Connections pane, expand Sites.\nOpen the context (right-click) menu for your website and choose Edit Bindings.\nIn the Site Bindings dialog box, for Type, choose http, Edit.\nIn the Edit Site Binding dialog box, for IP address, select the secondary private IP address. (By default, each website accepts HTTP requests from all IP addresses.)\nChoose OK, Close."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-naming.html",
        "content": "This section describes the Amazon EC2 instance guest OS hostname types available when you launch instances into your VPC subnets.\nThe hostname distinguishes the EC2 instances on your network. You may use the hostname of an instance if, for example, you want to run scripts to communicate with some or all of the instances on your network.\nContents\nTypes of EC2 hostnames\nWhere to find resource names and IP names\nChoosing between resource names and IP names\nChange resource based naming options for Amazon EC2\nTypes of EC2 hostnames\nThere are two hostname types for the guest OS hostname when EC2 instances are launched in a VPC:\nIP name: The legacy naming scheme where, when you launch an instance, the private IPv4 address of the instance is included in the hostname of the instance. The IP name exists for the life of the EC2 instance. When used as the Private DNS hostname, it will only return the private IPv4 address (A record).\nResource name: When you launch an instance, the EC2 instance ID is included in the hostname of the instance. The resource name exists for the life of the EC2 instance. When used as the Private DNS hostname, it can return both the private IPv4 address (A record) and/or the IPv6 Global Unicast Address (AAAA record).\nThe EC2 instance guest OS hostname type depends on the subnet settings:\nIf the instance is launched into an IPv4-only subnet, you can select either IP name or resource name.\nIf the instance is launched into a dual-stack (IPv4+IPv6) subnet, you can select either IP name or resource name.\nIf the instance is launched into an IPv6-only subnet, resource name is used automatically.\nContents\nIP name\nResource name\nThe difference between IP name and Resource name\nIP name\nWhen you launch an EC2 instance with the Hostname type of IP name, the guest OS hostname is configured to use the private IPv4 address.\nFormat for an instance in us-east-1: private-ipv4-address.ec2.internal\nExample: ip-10-24-34-0.ec2.internal\nFormat for an instance in any other AWS Region: private-ipv4-address.region.compute.internal\nExample: ip-10-24-34-0.us-west-2.compute.internal\nResource name\nWhen you launch EC2 instances in IPv6-only subnets, the Hostname type of Resource name is selected by default. When you launch an instance in IPv4-only or dual-stack (IPv4+IPv6) subnets, Resource name is an option that you can select. After you launch an instance, you can manage the hostname configuration. For more information, see Change resource based naming options for Amazon EC2.\nWhen you launch an EC2 instance with a Hostname type of Resource name, the guest OS hostname is configured to use the EC2 instance ID.\nFormat for an instance in us-east-1: ec2-instance-id.ec2.internal\nExample: i-0123456789abcdef.ec2.internal\nFormat for an instance in any other AWS Region: ec2-instance-id.region.compute.internal\nExample: i-0123456789abcdef.us-west-2.compute.internal\nThe difference between IP name and Resource name\nDNS queries for both IP names and resource names coexist to ensure backward compatibility and to allow you to migrate from IP based-naming for hostnames to resource-based naming. For private DNS hostnames based on IP names, you cannot configure whether a DNS A record query for the instance is responded to or not. DNS A record queries are always responded to irrespective of the guest OS hostname settings. In contrast, for private DNS hostnames based on resource name, you can configure whether DNS A and/or DNS AAAA queries for the instance are responded to or not. You configure the response behavior when you launch an instance or modify a subnet. For more information, see Change resource based naming options for Amazon EC2.\nWhere to find resource names and IP names\nYou can see the hostname types, resource name and IP name, in the Amazon EC2 console.\nContents\nWhen creating an EC2 instance\nWhen viewing the details of an existing EC2 instance\nWhen creating an EC2 instance\nWhen you create an EC2 instance, depending on which type of subnet you select, Hostname type of Resource name might be available or it might be selected and not be modifiable. This section explains the scenarios in which you see the hostname types resource name and IP name.\nScenario 1\nYou create an EC2 instance in the wizard (see Launch an EC2 instance using the launch instance wizard in the console) and, when you configure the details, you choose a subnet that you configured to be IPv6-only.\nIn this case, the Hostname type of Resource name is selected automatically and is not modifiable. DNS Hostname options of Enable IP name IPv4 (A record) DNS requests and Enable resource-based IPv4 (A record) DNS requests are deselected automatically and are not modifiable. Enable resource-based IPv6 (AAAA record) DNS requests is selected by default but is modifiable. If selected, DNS requests to the resource name will resolve to the IPv6 address (AAAA record) of this EC2 instance.\nScenario 2\nYou create an EC2 instance in the wizard (see Launch an EC2 instance using the launch instance wizard in the console) and, when you configure the details, you choose a subnet configured with an IPv4 CIDR block or both an IPv4 and IPv6 CIDR block (\"dual stack\").\nIn this case, Enable IP name IPv4 (A record) DNS requests is selected automatically and can't be changed. This means that requests to the IP name will resolve to the IPv4 address (A record) of this EC2 instance.\nThe options default to the configurations of the subnet, but you can modify the options for this instance depending on the subnet settings:\nHostname type: Determines whether you want the guest OS hostname of the EC2 instance to be the resource name or IP name. The default value is IP name.\nEnable resource-based IPv4 (A record) DNS requests: Determines whether requests to your resource name resolve to the private IPv4 address (A record) of this EC2 instance. This option is not selected by default.\nEnable resource-based IPv6 (AAAA record) DNS requests: Determines whether requests to your resource name resolve to the IPv6 GUA address (AAAA record) of this EC2 instance. This option is not selected by default.\nWhen viewing the details of an existing EC2 instance\nYou can see the hostname values for an existing EC2 instance in the Details tab for the EC2 instance:\nHostname type: The hostname in IP name or resource name format.\nPrivate IP DNS name (IPv4 only): The IP name that will always resolve to the private IPv4 address of the instance.\nPrivate resource DNS name: The resource name that resolves to the DNS records selected for this instance.\nAnswer private resource DNS name: The resource name resolves to IPv4 (A), IPv6 (AAAA) or IPv4 and IPv6 (A and AAAA) DNS records.\nIn addition, if you connect to your EC2 instance directly over SSH and enter the hostname command, you'll see the hostname in either the IP name or resource name format.\nChoosing between resource names and IP names\nWhen you launch an EC2 instance (see Launch an EC2 instance using the launch instance wizard in the console), if you choose a Hostname type of Resource name, the EC2 instance launches with a hostname in the resource name format. In such cases, the DNS record for this EC2 instance can also point to the resource name. This gives you the flexibility to choose whether that hostname resolves to the IPv4 address, the IPv6 address, or both the IPv4 and IPv6 address of the instance. If you plan to use IPv6 in the future or if you are using dual-stack subnets today, it\u2019s best to use a Hostname type of Resource name so that you change DNS resolution for the hostnames of your instances without making any changes to the DNS records themselves. The resource name allows you to add and remove IPv4 and IPv6 DNS resolution on an EC2 instance.\nIf instead you choose a Hostname type of IP name, and use it as the DNS hostname, it can only resolve to the IPv4 address of the instance. It will not resolve to the IPv6 address of the instance even if the instance has both an IPv4 address and an IPv6 address associated with it."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-naming-modify.html",
        "content": "You can change the hostname type and DNS hostname configurations for subnets, which affects all subsequent instance launches in that subject, or you can change them for an EC2 instances after you launch it.\nSubnets\nModify the configurations for a subnet by selecting a subnet in the Amazon VPC console and choosing Actions, Edit subnet settings.\nNote\nChanging the subnet settings doesn't change the configuration of EC2 instances that are already launched in the subnet.\nHostname type: Determines whether you want the default setting of the guest OS hostname of the EC2 instance launched in the subnet to be the resource name or IP name.\nEnable DNS hostname IPv4 (A record) requests: Determines whether DNS requests/queries to your resource name resolve to the private IPv4 address (A record) of this EC2 instance.\nEnable DNS hostname IPv6 (AAAA record) requests: Determines whether DNS requests/queries to your resource name resolve to the IPv6 address (AAAA record) of this EC2 instance.\nEC2 instances\nFollow the steps in this section to modify the Hostname type and DNS Hostname configurations for an EC2 instance.\nConsiderations\nTo change the Use resource based naming as guest OS hostname setting, you must first stop the instance. To change the Answer DNS hostname IPv4 (A record) request or Answer DNS hostname IPv6 (AAAA record) requests settings, you don't have to stop the instance.\nTo modify any of the settings for non-EBS backed EC2 instance types, you cannot stop the instance. You must terminate the instance and launch a new instance with the desired Hostname type and DNS Hostname configurations.\nTo modify the hostname type and DNS hostname configurations for an instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIf you're going to change the Use resource based naming as guest OS hostname setting, first stop the EC2 instance. Otherwise, skip this step.\nTo stop the instance, select the instance and choose Instance state, Stop instance.\nSelect the instance and choose Actions, Instance settings, Change resource based naming options.\nUse resource based naming as guest OS hostname: Determines whether you want the guest OS hostname of the EC2 instance to be the resource name or IP name.\nAnswer DNS hostname IPv4 (A record) requests: Determines whether DNS requests/queries to your resource name resolve to the private IPv4 address of this EC2 instance.\nAnswer DNS hostname IPv6 (AAAA record) requests: Determines whether DNS requests/queries to your resource name resolve to the IPv6 address (AAAA record) of this EC2 instance.\nChoose Save.\nIf you stopped the instance, start it again."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html",
        "content": "You can bring part or all of your publicly routable IPv4 or IPv6 address range from your on-premises network to your AWS account. You continue to control the address range and you can advertise the address range on the internet through AWS. After you bring the address range to Amazon EC2, it appears in your AWS account as an address pool.\nNote\nThis documentation describes how to bring your own IP address range for use in Amazon EC2 only. To bring your own IP address range for use in AWS Global Accelerator, see Bring your own IP addresses (BYOIP) in the AWS Global Accelerator Developer Guide. To bring your own IP address range for use with Amazon VPC IP Address Manager, see Tutorial: Bring your IP addresses to IPAM in the Amazon VPC IPAM User Guide.\nWhen you bring an IP address range to AWS, AWS validates that you control the IP address range. There are two methods that you can use to show that you control the range:\nIf your IP address range is registered with an Internet Registry that supports RDAP (such as ARIN, RIPE and APNIC), you can verify control of your domain with an X.509 certificate by using the process on this page. The certificate must only be valid for the duration of the provisioning process. You can remove the certificate from your RIR's record after provisioning is complete.\nRegardless of whether your Internet Registry supports RDAP, you can use Amazon VPC IPAM to verify control of your domain with a DNS TXT record. That process is documented in Tutorial: Bring your IP addresses to IPAM in the Amazon VPC IPAM User guide.\nFor more information, see the AWS Online Tech talk Deep Dive on Bring Your Own IP.\nContents\nBYOIP definitions\nRequirements and quotas\nRegional availability\nLocal Zone availability\nPrerequisites\nOnboard your address range\nUse your address range\nBYOIP definitions\nX.509 Self-sign certificate \u2014 A certificate standard most commonly used to encrypt and authenticate data within a network. It is a certificate used by AWS to validate control over IP space from an RDAP record. For more information about X.509 certificates, see RFC 3280.\nAutonomous System Number (ASN) \u2013 A globally unique identifier that defines a group of IP prefixes run by one or more network operators that maintain a single, clearly-defined routing policy.\nRegional Internet Registry (RIR) \u2013 An organization that manages allocation and registration of IP addresses and ASNs within a region of the world.\nRegistry Data Access Protocol (RDAP) \u2014 A read-only protocol to query current registration data within a RIR. Entries within the queried RIR database are referred to as \"RDAP records\". Certain record types need to be updated by customers via a RIR-provided mechanism. These records are queried by AWS to verify control of an address space in the RIR.\nRoute Origin Authorization (ROA) \u2014 An object created by RIRs for customers to authenticate IP advertisement in particular autonomous systems. For an overview, see Route Origin Authorizations (ROAs) on the ARIN website.\nLocal Internet Registry (LIR) \u2014 Organizations such as internet service providers that allocate a block of IP addresses from an RIR for their customers.\nRequirements and quotas\nThe address range must be registered with your Regional Internet Registry (RIR). See your RIR for any policies regarding geographic regions. BYOIP currently supports registration in the American Registry for Internet Numbers (ARIN), R\u00e9seaux IP Europ\u00e9ens Network Coordination Centre (RIPE), or Asia-Pacific Network Information Centre (APNIC). It must be registered to a business or institutional entity and cannot be registered to an individual person.\nThe most specific IPv4 address range that you can bring is /24.\nThe most specific IPv6 address range that you can bring is /48 for CIDRs that are publicly advertisable and /60 for CIDRs that are not publicly advertisable.\nROAs are not required for CIDR ranges that are not publicly advertisable, but the RDAP records still need to be updated.\nYou can bring each address range to one AWS Region at a time.\nYou can bring a total of five BYOIP IPv4 and IPv6 address ranges per AWS Region to your AWS account. You cannot adjust the quotas for BYOIP CIDRs using the Service Quotas console, but you can request a quota increase by contacting the AWS Support Center as described in AWS service quotas in the AWS General Reference.\nYou cannot share your IP address range with other accounts using AWS RAM unless you use Amazon VPC IP Address Manager (IPAM) and integrate IPAM with AWS Organizations. For more information, see Integrate IPAM with AWS Organizations in the Amazon VPC IPAM User Guide.\nThe addresses in the IP address range must have a clean history. We might investigate the reputation of the IP address range and reserve the right to reject an IP address range if it contains an IP address that has a poor reputation or is associated with malicious behavior.\nLegacy address space, the IPv4 address space that was distributed by the Internet Assigned Numbers Authority's (IANA) central registry prior to the formation of the Regional Internet Registry (RIR) system, still requires a corresponding ROA object.\nFor LIRs, it is common that they use a manual process to update their records. This can take days to deploy depending on the LIR.\nA single ROA object and RDAP record are needed for a large CIDR block. You can bring multiple smaller CIDR blocks from that range to AWS, even across multiple AWS Regions, using the single object and record.\nBYOIP is not supported for Wavelength Zones or on AWS Outposts.\nDo not make any manual changes for BYOIP in RADb or any other IRR. BYOIP will automatically update RADb. Any manual changes that include the BYOIP ASN will cause the BYOIP provision operation to fail.\nOnce you bring an IPv4 address range to AWS, you can use all of the IP addresses in the range, including the first address (the network address) and the last address (the broadcast address).\nRegional availability\nThe BYOIP feature is currently available in all commercial AWS Regions except for China Regions.\nLocal Zone availability\nA Local Zone is an extension of an AWS Region in geographic proximity to your users. Local Zones are grouped into \"network border groups\". In AWS, a network border group is a collection of Availability Zones (AZs), Local Zones, or Wavelength Zones from which AWS advertises a public IP address. Local Zones may have different network border groups than the AZs in an AWS Region to ensure minimum latency or physical distance between the AWS network and the customers accessing the resources in these Zones.\nYou can provision BYOIPv4 address ranges to and advertise them in the following Local Zone network border groups using the --network-border-group option:\naf-south-1-los-1\nap-northeast-1-tpe-1\nap-south-1-ccu-1\nap-south-1-del-1\nap-southeast-1-bkk-1\nap-southeast-1-mnl-1\nap-southeast-2-akl-1\nap-southeast-2-per-1\neu-central-1-ham-1\neu-central-1-waw-1\neu-north-1-cph-1\neu-north-1-hel-1\nme-south-1-mct-1\nus-east-1-atl-2\nus-east-1-bos-1\nus-east-1-bue-1\nus-east-1-chi-2\nus-east-1-dfw-2\nus-east-1-iah-2\nus-east-1-lim-1\nus-east-1-mci-1\nus-east-1-mia-2\nus-east-1-msp-1\nus-east-1-nyc-1\nus-east-1-phl-1\nus-east-1-qro-1\nus-east-1-scl-1\nus-west-2-den-1\nus-west-2-hnl-1\nus-west-2-las-1\nus-west-2-lax-1\nus-west-2-pdx-1\nus-west-2-phx-2\nus-west-2-sea-1\nIf you have Local Zones enabled (see Enable a Local Zone), you can choose a network border group for Local Zones when you provision and advertise a BYOIPv4 CIDR. Choose the network border group carefully as the EIP and the AWS resource it is associated with must reside in the same network border group.\nNote\nYou cannot provision or advertise BYOIPv6 address ranges in Local Zones at this time."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/prepare-for-byoip.html",
        "content": "The onboarding process for BYOIP has two phases, for which you must perform three steps. These steps correspond to the steps depicted in the following diagram. We include manual steps in this documentation, but your RIR might offer managed services to help you with these steps.\nTip\nThe tasks in this section require a Linux terminal and may be performed using Linux, the AWS CloudShell, or the Windows Subsystem for Linux.\nContents\nOverview\nCreate a private key and generate an X.509 certificate\nUpload the X.509 certificate to the RDAP record in your RIR\nCreate a ROA object in your RIR\nOverview\nPreparation phase\n[1] Create a private key and use it to generate a self-signed X.509 certificate for authentication purposes. This certificate is only used during the provisioning phase. You can remove the certificate from your RIR's record after provisioning is complete\nRIR configuration phase\n[2] Upload the self-signed certificate to your RDAP record comments.\n[3] Create a ROA object in your RIR. The ROA defines the desired address range, the Autonomous System Numbers (ASNs) allowed to advertise the address range, and an expiration date to register with the Resource Public Key Infrastructure (RPKI) of your RIR.\nNote\nA ROA is not required for non-publicly advertisable IPv6 address space.\nTo bring on multiple non-contiguous address ranges, you must repeat this process with each address range. However, the preparation and RIR configuration steps don't need to be repeated if splitting a contiguous block across several different AWS Regions.\nBringing on an address range has no effect on any address ranges that you brought on previously.\nCreate a private key and generate an X.509 certificate\nUse the following procedure to create a self-signed X.509 certificate and add it to the RDAP record for your RIR. This key pair is used to authenticate the address range with the RIR. The openssl commands require OpenSSL version 1.0.2 or later.\nCopy the following commands and replace only the placeholder values (in colored italic text).\nThis procedure follows the best practice of encrypting your private RSA key and requiring a passphrase to access it.\nGenerate an RSA 2048-bit private key as shown in the following.\n$ openssl genpkey -aes256 -algorithm RSA -pkeyopt rsa_keygen_bits:2048 -out private-key.pem\nThe -aes256 parameter specifies the algorithm used to encrypt the private key. The command returns the following output, including prompts to set a passphrase:\n......+++\n.+++\nEnter PEM pass phrase: xxxxxxx\nVerifying - Enter PEM pass phrase: xxxxxxx\nYou can inspect the key using the following command:\n$ openssl pkey -in private-key.pem -text\nThis returns a passphrase prompt and the contents of the key, which should be similar to the following:\nEnter pass phrase for private-key.pem: xxxxxxx\n-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDFBXHRI4HVKAhh\n3seiciooizCRTbJe1+YsxNTja4XyKypVGIFWDGhZs44FCHlPOOSVJ+NqP74w96oM\n7DPS3xo9kaQyZBFn2YEp2EBq5vf307KHNRmZZUmkn0zHOSEpNmY2fMxISBxewlxR\nFAniwmSd/8TDvHJMY9FvAIvWuTsv5l0tJKk+a91K4+tO3UdDR7Sno5WXExfsBrW3\ng1ydo3TBsx8i5/YiVOcNApy7ge2/FiwY3aCXJB6r6nuF6H8mRgI4r4vkMRsOlAhJ\nDnZPNeweboo+K3Q3lwbgbmOKD/z9svk8N/+hUTBtIX0fRtbG+PLIw3xWRHGrMSn2\nBzsPVuDLAgMBAAECggEACiJUj2hfJkKv47Dc3es3Zex67A5uDVjXmxfox2Xhdupn\nfAcNqAptV6fXt0SPUNbhUxbBKNbshoJGufFwXPli1SXnpzvkdU4Hyco4zgbhXFsE\nRNYjYfOGzTPwdBLpNMB6k3Tp4RHse6dNrlH0jDhpioL8cQEBdBJyVF5X0wymEbmV\nmC0jgH/MxsBAPWW6ZKicg9ULMlWiAZ3MRAZPjHHgpYkAAsUWKAbCBwVQcVjGO59W\njfZjzTX5pQtVVH68ruciH88DTZCwjCkjBhxg+OIkJBLE5wkh82jIHSivZ63flwLw\nz+E0+HhELSZJrn2MY6Jxmik3qNNUOF/Z+3msdj2luQKBgQDjwlC/3jxp8zJy6P8o\nJQKv7TdvMwUj4VSWOHZBHLv4evJaaia0uQjIo1UDa8AYitqhX1NmCCehGH8yuXj/\nv6V3CzMKDkmRr1NrONnSz5QsndQ04Z6ihAQlPmJ96g4wKtgoC7AYpyP0g1a+4/sj\nb1+o3YQI4pD/F71c+qaztH7PRwKBgQDdc23yNmT3+Jyptf0fKjEvONK+xwUKzi9c\nL/OzBq5yOIC1Pz2T85gOe1i8kwZws+xlpG6uBT6lmIJELd0k59FyupNu4dPvX5SD\n6GGqdx4jk9KvI74usGeOBohmF0phTHkrWKBxXiyT0oS8zjnJlEn8ysIpGgO28jjr\nLpaHNZ/MXQKBgQDfLNcnS0LzpsS2aK0tzyZU8SMyqVHOGMxj7quhneBq2T6FbiLD\nT9TVlYaGNZ0j71vQaLI19qOubWymbautH0Op5KV8owdf4+bf1/NJaPIOzhDUSIjD\nQo01WW31Z9XDSRhKFTnWzmCjBdeIcajyzf10YKsycaAW9lItu8aBrMndnQKBgQDb\nnNp/JyRwqjOrNljk7DHEs+SD39kHQzzCfqd+dnTPv2sc06+cpym3yulQcbokULpy\nfmRo3bin/pvJQ3aZX/Bdh9woTXqhXDdrrSwWInVYMQPyPk8f/D9mIOJp5FUWMwHD\nU+whIZSxsEeE+jtixlWtheKRYkQmzQZXbWdIhYyI3QKBgD+F/6wcZ85QW8nAUykA\n3WrSIx/3cwDGdm4NRGct8ZOZjTHjiy9ojMOD1L7iMhRQ/3k3hUsin5LDMp/ryWGG\nx4uIaLat40kiC7T4I66DM7P59euqdz3w0PD+VU+h7GSivvsFDdySUt7bNK0AUVLh\ndMJfWxDN8QV0b5p3WuWH1U8B\n-----END PRIVATE KEY-----\nPrivate-Key: (2048 bit)\nmodulus:\n    00:c5:05:71:d1:23:81:d5:28:08:61:de:c7:a2:72:\n    2a:28:8b:30:91:4d:b2:5e:d7:e6:2c:c4:d4:e3:6b:\n    85:f2:2b:2a:55:18:81:56:0c:68:59:b3:8e:05:08:\n    79:4f:38:e4:95:27:e3:6a:3f:be:30:f7:aa:0c:ec:\n    33:d2:df:1a:3d:91:a4:32:64:11:67:d9:81:29:d8:\n    40:6a:e6:f7:f7:d3:b2:87:35:19:99:65:49:a4:9f:\n    4c:c7:39:21:29:36:66:36:7c:cc:48:48:1c:5e:c2:\n    5c:51:14:09:e2:c2:64:9d:ff:c4:c3:bc:72:4c:63:\n    d1:6f:00:8b:d6:b9:3b:2f:e6:5d:2d:24:a9:3e:6b:\n    dd:4a:e3:eb:4e:dd:47:43:47:b4:a7:a3:95:97:13:\n    17:ec:06:b5:b7:83:5c:9d:a3:74:c1:b3:1f:22:e7:\n    f6:22:54:e7:0d:02:9c:bb:81:ed:bf:16:2c:18:dd:\n    a0:97:24:1e:ab:ea:7b:85:e8:7f:26:46:02:38:af:\n    8b:e4:31:1b:0e:94:08:49:0e:76:4f:35:ec:1e:6e:\n    8a:3e:2b:74:37:97:06:e0:6e:63:8a:0f:fc:fd:b2:\n    f9:3c:37:ff:a1:51:30:6d:21:7d:1f:46:d6:c6:f8:\n    f2:c8:c3:7c:56:44:71:ab:31:29:f6:07:3b:0f:56:\n    e0:cb\npublicExponent: 65537 (0x10001)\nprivateExponent:\n    0a:22:54:8f:68:5f:26:42:af:e3:b0:dc:dd:eb:37:\n    65:ec:7a:ec:0e:6e:0d:58:d7:9b:17:e8:c7:65:e1:\n    76:ea:67:7c:07:0d:a8:0a:6d:57:a7:d7:b7:44:8f:\n    50:d6:e1:53:16:c1:28:d6:ec:86:82:46:b9:f1:70:\n    5c:f9:62:d5:25:e7:a7:3b:e4:75:4e:07:c9:ca:38:\n    ce:06:e1:5c:5b:04:44:d6:23:61:f3:86:cd:33:f0:\n    74:12:e9:34:c0:7a:93:74:e9:e1:11:ec:7b:a7:4d:\n    ae:51:f4:8c:38:69:8a:82:fc:71:01:01:74:12:72:\n    54:5e:57:d3:0c:a6:11:b9:95:98:2d:23:80:7f:cc:\n    c6:c0:40:3d:65:ba:64:a8:9c:83:d5:0b:32:55:a2:\n    01:9d:cc:44:06:4f:8c:71:e0:a5:89:00:02:c5:16:\n    28:06:c2:07:05:50:71:58:c6:3b:9f:56:8d:f6:63:\n    cd:35:f9:a5:0b:55:54:7e:bc:ae:e7:22:1f:cf:03:\n    4d:90:b0:8c:29:23:06:1c:60:f8:e2:24:24:12:c4:\n    e7:09:21:f3:68:c8:1d:28:af:67:ad:df:97:02:f0:\n    cf:e1:34:f8:78:44:2d:26:49:ae:7d:8c:63:a2:71:\n    9a:29:37:a8:d3:54:38:5f:d9:fb:79:ac:76:3d:a5:\n    b9\nprime1:\n    00:e3:c2:50:bf:de:3c:69:f3:32:72:e8:ff:28:25:\n    02:af:ed:37:6f:33:05:23:e1:54:96:38:76:41:1c:\n    bb:f8:7a:f2:5a:6a:26:b4:b9:08:c8:a3:55:03:6b:\n    c0:18:8a:da:a1:5f:53:66:08:27:a1:18:7f:32:b9:\n    78:ff:bf:a5:77:0b:33:0a:0e:49:91:af:53:6b:38:\n    d9:d2:cf:94:2c:9d:d4:34:e1:9e:a2:84:04:25:3e:\n    62:7d:ea:0e:30:2a:d8:28:0b:b0:18:a7:23:f4:83:\n    56:be:e3:fb:23:6f:5f:a8:dd:84:08:e2:90:ff:17:\n    bd:5c:fa:a6:b3:b4:7e:cf:47\nprime2:\n    00:dd:73:6d:f2:36:64:f7:f8:9c:a9:b5:fd:1f:2a:\n    31:2f:38:d2:be:c7:05:0a:ce:2f:5c:2f:f3:b3:06:\n    ae:72:38:80:b5:3f:3d:93:f3:98:0e:7b:58:bc:93:\n    06:70:b3:ec:65:a4:6e:ae:05:3e:a5:98:82:44:2d:\n    dd:24:e7:d1:72:ba:93:6e:e1:d3:ef:5f:94:83:e8:\n    61:aa:77:1e:23:93:d2:af:23:be:2e:b0:67:8e:06:\n    88:66:17:4a:61:4c:79:2b:58:a0:71:5e:2c:93:d2:\n    84:bc:ce:39:c9:94:49:fc:ca:c2:29:1a:03:b6:f2:\n    38:eb:2e:96:87:35:9f:cc:5d\nexponent1:\n    00:df:2c:d7:27:4b:42:f3:a6:c4:b6:68:ad:2d:cf:\n    26:54:f1:23:32:a9:51:ce:18:cc:63:ee:ab:a1:9d:\n    e0:6a:d9:3e:85:6e:22:c3:4f:d4:d5:95:86:86:35:\n    9d:23:ef:5b:d0:68:b2:35:f6:a3:ae:6d:6c:a6:6d:\n    ab:ad:1f:43:a9:e4:a5:7c:a3:07:5f:e3:e6:df:d7:\n    f3:49:68:f2:0e:ce:10:d4:48:88:c3:42:8d:35:59:\n    6d:f5:67:d5:c3:49:18:4a:15:39:d6:ce:60:a3:05:\n    d7:88:71:a8:f2:cd:fd:74:60:ab:32:71:a0:16:f6:\n    52:2d:bb:c6:81:ac:c9:dd:9d\nexponent2:\n    00:db:9c:da:7f:27:24:70:aa:33:ab:36:58:e4:ec:\n    31:c4:b3:e4:83:df:d9:07:43:3c:c2:7e:a7:7e:76:\n    74:cf:bf:6b:1c:d3:af:9c:a7:29:b7:ca:e9:50:71:\n    ba:24:50:ba:72:7e:64:68:dd:b8:a7:fe:9b:c9:43:\n    76:99:5f:f0:5d:87:dc:28:4d:7a:a1:5c:37:6b:ad:\n    2c:16:22:75:58:31:03:f2:3e:4f:1f:fc:3f:66:20:\n    e2:69:e4:55:16:33:01:c3:53:ec:21:21:94:b1:b0:\n    47:84:fa:3b:62:c6:55:ad:85:e2:91:62:44:26:cd:\n    06:57:6d:67:48:85:8c:88:dd\ncoefficient:\n    3f:85:ff:ac:1c:67:ce:50:5b:c9:c0:53:29:00:dd:\n    6a:d2:23:1f:f7:73:00:c6:76:6e:0d:44:67:2d:f1:\n    93:99:8d:31:e3:8b:2f:68:8c:c3:83:d4:be:e2:32:\n    14:50:ff:79:37:85:4b:22:9f:92:c3:32:9f:eb:c9:\n    61:86:c7:8b:88:68:b6:ad:e3:49:22:0b:b4:f8:23:\n    ae:83:33:b3:f9:f5:eb:aa:77:3d:f0:d0:f0:fe:55:\n    4f:a1:ec:64:a2:be:fb:05:0d:dc:92:52:de:db:34:\n    ad:00:51:52:e1:74:c2:5f:5b:10:cd:f1:05:74:6f:\n    9a:77:5a:e5:87:d5:4f:01\nKeep your private key in a secure location when it is not in use.\nGenerate an X.509 certificate using the private key created in the previous step. In this example, the certificate expires in 365 days, after which time it cannot be trusted. Be sure to set the expiration appropriately. The certificate must only be valid for the duration of the provisioning process. You can remove the certificate from your RIR's record after provisioning is complete. The tr -d \"\\n\" command strips newline characters (line breaks) from the output. You need to provide a Common Name when prompted, but the other fields can be left blank.\n$ openssl req -new -x509 -key private-key.pem -days 365 | tr -d \"\\n\" > certificate.pem\nThis results in output similar to the following:\nEnter pass phrase for private-key.pem: xxxxxxx\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) []:\nState or Province Name (full name) []:\nLocality Name (eg, city) []:\nOrganization Name (eg, company) []:\nOrganizational Unit Name (eg, section) []:\nCommon Name (eg, fully qualified host name) []:example.com\nEmail Address []:\nNote\nThe Common Name is not needed for AWS provisioning. It can be any internal or public domain name.\nYou can inspect the certificate with the following command:\n$ cat certificate.pem\nThe output should be a long, PEM-encoded string without line breaks, prefaced by -----BEGIN CERTIFICATE----- and followed by -----END CERTIFICATE-----.\nUpload the X.509 certificate to the RDAP record in your RIR\nAdd the certificate that you previously created to the RDAP record for your RIR. Be sure to include the -----BEGIN CERTIFICATE----- and -----END CERTIFICATE----- strings before and after the encoded portion. All of this content must be on a single, long line. The procedure for updating RDAP depends on your RIR:\nFor ARIN, use the Account Manager portal to add the certificate in the \"Public Comments\" section for the \"Network Information\" object representing your address range. Do not add it to the comments section for your organization.\nFor RIPE, add the certificate as a new \"descr\" field to the \"inetnum\" or \"inet6num\" object representing your address range. These can usually be found in the \"My Resources\" section of the RIPE Database portal. Do not add it to the comments section for your organization or the \"remarks\" field of the above objects.\nFor APNIC, email the certificate to helpdesk@apnic.net to manually add it to the \"remarks\" field for your address range. Send the email using the APNIC authorized contact for the IP addresses.\nYou can remove the certificate from your RIR's record after the provisioning stage below has been completed.\nCreate a ROA object in your RIR\nCreate a ROA object to authorize the Amazon ASNs 16509 and 14618 to advertise your address range, as well as the ASNs that are currently authorized to advertise the address range. For the AWS GovCloud (US) Regions, authorize ASN 8987 instead of 16509 and 14618. You must set the maximum length to the size of the CIDR that you are bringing in. The most specific IPv4 prefix you can bring is /24. The most specific IPv6 address range that you can bring is /48 for CIDRs that are publicly advertisable and /60 for CIDRs that are not publicly advertisable.\nImportant\nIf you are creating a ROA object for Amazon VPC IP Address Manager (IPAM), when you create the ROAs, for IPv4 CIDRs you must set the maximum length of an IP address prefix to /24. For IPv6 CIDRs, if you are adding them to an advertisable pool, the maximum length of an IP address prefix must be /48. This ensures that you have full flexibility to divide your public IP address across AWS Regions. IPAM enforces the maximum length you set. For more information about BYOIP addresses to IPAM, see Tutorial: BYOIP address CIDRs to IPAM in the Amazon VPC IPAM User Guide.\nIt might take up to 24 hours for the ROA to become available to Amazon. For more information, consult your RIR:\nARIN \u2014 ROA Requests\nRIPE \u2014 Managing ROAs\nAPNIC \u2014 Route Management\nWhen you migrate advertisements from an on-premises workload to AWS, you must create a ROA for your existing ASN before creating the ROAs for Amazon's ASNs. Otherwise, you might see an impact to your existing routing and advertisements.\nImportant\nFor Amazon to advertise and continue advertising your IP address range, your ROAs with Amazon ASNs must be compliant with the above guidelines. If your ROAs are invalid or not compliant with the above guidelines, Amazon reserves the right to stop advertising your IP address range.\nNote\nThis step is not required for non-publicly advertisable IPv6 address space."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/byoip-onboard.html",
        "content": "The onboarding process for BYOIP includes the following tasks, depending on your needs.\nTasks\nProvision a publicly advertisable address range in AWS\nProvision an IPv6 address range that's not publicly advertisable\nAdvertise the address range through AWS\nDeprovision the address range\nValidate your BYOIP\nProvision a publicly advertisable address range in AWS\nWhen you provision an address range for use with AWS, you are confirming that you control the address range and are authorizing Amazon to advertise it. We also verify that you control the address range through a signed authorization message. This message is signed with the self-signed X.509 key pair that you used when updating the RDAP record with the X.509 certificate. AWS requires a cryptographically signed authorization message that it presents to the RIR. The RIR authenticates the signature against the certificate that you added to RDAP, and checks the authorization details against the ROA.\nTo provision the address range\nCompose message\nCompose the plaintext authorization message. The format of the message is as follows, where the date is the expiry date of the message:\n1|aws|account|cidr|YYYYMMDD|SHA256|RSAPSS\nReplace the account number, address range, and expiry date with your own values to create a message resembling the following:\ntext_message=\"1|aws|0123456789AB|198.51.100.0/24|20211231|SHA256|RSAPSS\"\nThis is not to be confused with a ROA message, which has a similar appearance.\nSign message\nSign the plaintext message using the private key that you created previously. The signature returned by this command is a long string that you need to use in the next step.\nImportant\nWe recommend that you copy and paste this command. Except for the message content, do not modify or replace any of the values.\nsigned_message=$( echo -n $text_message | openssl dgst -sha256 -sigopt rsa_padding_mode:pss -sigopt rsa_pss_saltlen:-1 -sign private-key.pem -keyform PEM | openssl base64 | tr -- '+=/' '-_~' | tr -d \"\\n\")\nProvision address\nUse the AWS CLI provision-byoip-cidr command to provision the address range. The --cidr-authorization-context option uses the message and signature strings that you created previously.\nImportant\nYou must specify the AWS Region where the BYOIP range should be provisioned if it differs from your Configure the AWS CLI Default region name.\naws ec2 provision-byoip-cidr --cidr address-range --cidr-authorization-context Message=\"$text_message\",Signature=\"$signed_message\" --region us-east-1\nProvisioning an address range is an asynchronous operation, so the call returns immediately, but the address range is not ready to use until its status changes from pending-provision to provisioned.\nMonitor progress\nWhile most provisioning will be completed within two hours, it might take up to one week to complete the provisioning process for publicly advertisable ranges. Use the describe-byoip-cidrs command to monitor progress, as in this example:\naws ec2 describe-byoip-cidrs --max-results 5 --region us-east-1\nIf there are issues during provisioning and the status goes to failed-provision, you must run the provision-byoip-cidr command again after the issues have been resolved.\nProvision an IPv6 address range that's not publicly advertisable\nBy default, an address range is provisioned to be publicly advertisable to the internet. You can provision an IPv6 address range that will not be publicly advertisable. For routes that are not publicly advertisable, the provisioning process generally completes within minutes. When you associate an IPv6 CIDR block from a non-public address range with a VPC, the IPv6 CIDR can only be accessed through hybrid connectivity options that support IPv6, such as AWS Direct Connect, AWS Site-to-Site VPN, or Amazon VPC Transit Gateways.\nA ROA is not required to provision a non-public address range.\nImportant\nYou can only specify whether an address range is publicly advertisable during provisioning. You cannot change the advertisable status later on.\nAmazon VPC doesn't support unique local address (ULA) CIDRs. All VPCs must have unique IPv6 CIDRs. Two VPCs can\u2019t have the same IPv6 CIDR range.\nTo provision an IPv6 address range that will not be publicly advertisable, use the following provision-byoip-cidr command.\naws ec2 provision-byoip-cidr --cidr address-range --cidr-authorization-context Message=\"$text_message\",Signature=\"$signed_message\" --no-publicly-advertisable --region us-east-1\nAdvertise the address range through AWS\nAfter the address range is provisioned, it is ready to be advertised. You must advertise the exact address range that you provisioned. You can't advertise only a portion of the provisioned address range.\nIf you provisioned an IPv6 address range that will not be publicly advertised, you do not need to complete this step.\nWe recommend that you stop advertising the address range or any portion of the range from other locations before you advertise it through AWS. If you keep advertising your IP address range or any portion of it from other locations, we can't reliably support it or troubleshoot issues. Specifically, we can't guarantee that traffic to the address range or a portion of the range will enter our network.\nTo minimize down time, you can configure your AWS resources to use an address from your address pool before it is advertised, and then simultaneously stop advertising it from the current location and start advertising it through AWS. For more information about allocating an Elastic IP address from your address pool, see Allocate an Elastic IP address.\nLimitations\nYou can run the advertise-byoip-cidr command at most once every 10 seconds, even if you specify different address ranges each time.\nYou can run the withdraw-byoip-cidr command at most once every 10 seconds, even if you specify different address ranges each time.\nTo advertise the address range, use the following advertise-byoip-cidr command.\naws ec2 advertise-byoip-cidr --cidr address-range --region us-east-1\nTo stop advertising the address range, use the following withdraw-byoip-cidr command.\naws ec2 withdraw-byoip-cidr --cidr address-range --region us-east-1\nDeprovision the address range\nTo stop using your address range with AWS, first release any Elastic IP addresses and disassociate any IPv6 CIDR blocks that are still allocated from the address pool. Then stop advertising the address range, and finally, deprovision the address range.\nYou cannot deprovision a portion of the address range. If you want to use a more specific address range with AWS, deprovision the entire address range and provision a more specific address range.\n(IPv4) To release each Elastic IP address, use the following release-address command.\naws ec2 release-address --allocation-id eipalloc-12345678abcabcabc --region us-east-1\n(IPv6) To disassociate an IPv6 CIDR block, use the following disassociate-vpc-cidr-block command.\naws ec2 disassociate-vpc-cidr-block --association-id vpc-cidr-assoc-12345abcd1234abc1 --region us-east-1\nTo stop advertising the address range, use the following withdraw-byoip-cidr command.\naws ec2 withdraw-byoip-cidr --cidr address-range --region us-east-1\nTo deprovision the address range, use the following deprovision-byoip-cidr command.\naws ec2 deprovision-byoip-cidr --cidr address-range --region us-east-1\nIt can take up to a day to deprovision an address range.\nValidate your BYOIP\nValidate the self-signed x.509 key pair\nValidate that the certificate has been uploaded and is valid via the whois command.\nFor ARIN, use whois -h whois.arin.net r + 2001:0DB8:6172::/48 to look up the RDAP record for your address range. Check the Public Comments section for the NetRange (network range) in the command output. The certificate should be added in the Public Comments section for the address range.\nYou can inspect the Public Comments containing the certificate using the following command:\nwhois -h whois.arin.net r + 2001:0DB8:6172::/48 | grep Comments | grep BEGIN\nThis returns output with the contents of the key, which should be similar to the following:\nPublic Comments:\n-----BEGIN CERTIFICATE-----\nMIID1zCCAr+gAwIBAgIUBkRPNSLrPqbRAFP8RDAHSP+I1TowDQYJKoZIhvcNAQE\nLBQAwezELMAkGA1UEBhMCTloxETAPBgNVBAgMCEF1Y2tsYW5kMREwDwYDVQQHDA\nhBdWNrbGFuZDEcMBoGA1UECgwTQW1hem9uIFdlYiBTZXJ2aWNlczETMBEGA1UEC\nwwKQllPSVAgRGVtbzETMBEGA1UEAwwKQllPSVAgRGVtbzAeFw0yMTEyMDcyMDI0\nNTRaFw0yMjEyMDcyMDI0NTRaMHsxCzAJBgNVBAYTAk5aMREwDwYDVQQIDAhBdWN\nrbGFuZDERMA8GA1UEBwwIQXVja2xhbmQxHDAaBgNVBAoME0FtYXpvbiBXZWIgU2\nVydmljZXMxEzARBgNVBAsMCkJZT0lQIERlbW8xEzARBgNVBAMMCkJZT0lQIERlb\nW8wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCfmacvDp0wZ0ceiXXc\nR/q27mHI/U5HKt7SST4X2eAqufR9wXkfNanAEskgAseyFypwEEQr4CJijI/5hp9\nprh+jsWHWwkFRoBRR9FBtwcU/45XDXLga7D3stsI5QesHVRwOaXUdprAnndaTug\nmDPkD0vrl475JWDSIm+PUxGWLy+60aBqiaZq35wU/x+wXlAqBXg4MZK2KoUu27k\nYt2zhmy0S7Ky+oRfRJ9QbAiSu/RwhQbh5Mkp1ZnVIc7NqnhdeIW48QaYjhMlUEf\nxdaqYUinzz8KpjfADZ4Hvqj9jWZ/eXo/9b2rGlHWkJsbhr0VEUyAGu1bwkgcdww\n3A7NjOxQbAgMBAAGjUzBRMB0GA1UdDgQWBBStFyujN6SYBr2glHpGt0XGF7GbGT\nAfBgNVHSMEGDAWgBStFyujN6SYBr2glHpGt0XGF7GbGTAPBgNVHRMBAf8EBTADA\nQH/MA0GCSqGSIb3DQEBCwUAA4IBAQBX6nn6YLhz521lfyVfxY0t6o3410bQAeAF\n08ud+ICtmQ4IO4A4B7zV3zIVYr0clrOOaFyLxngwMYN0XY5tVhDQqk4/gmDNEKS\nZy2QkX4Eg0YUWVzOyt6fPzjOvJLcsqc1hcF9wySL507XQz76Uk5cFypBOzbnk35\nUkWrzA9KK97cXckfIESgK/k1N4ecwxwG6VQ8mBGqVpPpey+dXpzzzv1iBKN/VY4\nydjgH/LBfdTsVarmmy2vtWBxwrqkFvpdhSGCvRDl/qdO/GIDJi77dmZWkh/ic90\nMNk1f38gs1jrCj8lThoar17Uo9y/Q5qJIsoNPyQrJRzqFU9F3FBjiPJF\n-----END CERTIFICATE-----\nFor RIPE, use whois -r -h whois.ripe.net 2001:0DB8:7269::/48 to look up the RDAP record for your address range. Check the descr section for the inetnum object (network range) in the command output. The certificate should be added as a new descr field for the address range.\nYou can inspect the descr containing the certificate using the following command:\nwhois -r -h whois.ripe.net 2001:0DB8:7269::/48 | grep descr | grep BEGIN\nThis returns output with the contents of the key, which should be similar to the following:\ndescr:\n-----BEGIN CERTIFICATE-----MIID1zCCAr+gAwIBAgIUBkRPNSLrPqbRAFP8\nRDAHSP+I1TowDQYJKoZIhvcNAQELBQAwezELMAkGA1UEBhMCTloxETAPBgNVBAg\nMCEF1Y2tsYW5kMREwDwYDVQQHDAhBdWNrbGFuZDEcMBoGA1UECgwTQW1hem9uIF\ndlYiBTZXJ2aWNlczETMBEGA1UECwwKQllPSVAgRGVtbzETMBEGA1UEAwwKQllPS\nVAgRGVtbzAeFw0yMTEyMDcyMDI0NTRaFw0yMjEyMDcyMDI0NTRaMHsxCzAJBgNV\nBAYTAk5aMREwDwYDVQQIDAhBdWNrbGFuZDERMA8GA1UEBwwIQXVja2xhbmQxHDA\naBgNVBAoME0FtYXpvbiBXZWIgU2VydmljZXMxEzARBgNVBAsMCkJZT0lQIERlbW\n8xEzARBgNVBAMMCkJZT0lQIERlbW8wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwg\ngEKAoIBAQCfmacvDp0wZ0ceiXXcR/q27mHI/U5HKt7SST4X2eAqufR9wXkfNanA\nEskgAseyFypwEEQr4CJijI/5hp9prh+jsWHWwkFRoBRR9FBtwcU/45XDXLga7D3\nstsI5QesHVRwOaXUdprAnndaTugmDPkD0vrl475JWDSIm+PUxGWLy+60aBqiaZq\n35wU/x+wXlAqBXg4MZK2KoUu27kYt2zhmy0S7Ky+oRfRJ9QbAiSu/RwhQbh5Mkp\n1ZnVIc7NqnhdeIW48QaYjhMlUEfxdaqYUinzz8KpjfADZ4Hvqj9jWZ/eXo/9b2r\nGlHWkJsbhr0VEUyAGu1bwkgcdww3A7NjOxQbAgMBAAGjUzBRMB0GA1UdDgQWBBS\ntFyujN6SYBr2glHpGt0XGF7GbGTAfBgNVHSMEGDAWgBStFyujN6SYBr2glHpGt0\nXGF7GbGTAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQBX6nn6Y\nLhz521lfyVfxY0t6o3410bQAeAF08ud+ICtmQ4IO4A4B7zV3zIVYr0clrOOaFyL\nxngwMYN0XY5tVhDQqk4/gmDNEKSZy2QkX4Eg0YUWVzOyt6fPzjOvJLcsqc1hcF9\nwySL507XQz76Uk5cFypBOzbnk35UkWrzA9KK97cXckfIESgK/k1N4ecwxwG6VQ8\nmBGqVpPpey+dXpzzzv1iBKN/VY4ydjgH/LBfdTsVarmmy2vtWBxwrqkFvpdhSGC\nvRDl/qdO/GIDJi77dmZWkh/ic90MNk1f38gs1jrCj8lThoar17Uo9y/Q5qJIsoN\nPyQrJRzqFU9F3FBjiPJF\n-----END CERTIFICATE-----\nFor APNIC, use whois -h whois.apnic.net 2001:0DB8:6170::/48 to look up the RDAP record for your BYOIP address range. Check the remarks section for the inetnum object (network range) in the command output. The certificate should be added as a new remarks field for the address range.\nYou can inspect the remarks containing the certificate using the following command:\nwhois -h whois.apnic.net 2001:0DB8:6170::/48 | grep remarks | grep BEGIN\nThis returns output with the contents of the key, which should be similar to the following:\nremarks:\n-----BEGIN CERTIFICATE-----\nMIID1zCCAr+gAwIBAgIUBkRPNSLrPqbRAFP8RDAHSP+I1TowDQYJKoZIhvcNAQE\nLBQAwezELMAkGA1UEBhMCTloxETAPBgNVBAgMCEF1Y2tsYW5kMREwDwYDVQQHDA\nhBdWNrbGFuZDEcMBoGA1UECgwTQW1hem9uIFdlYiBTZXJ2aWNlczETMBEGA1UEC\nwwKQllPSVAgRGVtbzETMBEGA1UEAwwKQllPSVAgRGVtbzAeFw0yMTEyMDcyMDI0\nNTRaFw0yMjEyMDcyMDI0NTRaMHsxCzAJBgNVBAYTAk5aMREwDwYDVQQIDAhBdWN\nrbGFuZDERMA8GA1UEBwwIQXVja2xhbmQxHDAaBgNVBAoME0FtYXpvbiBXZWIgU2\nVydmljZXMxEzARBgNVBAsMCkJZT0lQIERlbW8xEzARBgNVBAMMCkJZT0lQIERlb\nW8wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCfmacvDp0wZ0ceiXXc\nR/q27mHI/U5HKt7SST4X2eAqufR9wXkfNanAEskgAseyFypwEEQr4CJijI/5hp9\nprh+jsWHWwkFRoBRR9FBtwcU/45XDXLga7D3stsI5QesHVRwOaXUdprAnndaTug\nmDPkD0vrl475JWDSIm+PUxGWLy+60aBqiaZq35wU/x+wXlAqBXg4MZK2KoUu27k\nYt2zhmy0S7Ky+oRfRJ9QbAiSu/RwhQbh5Mkp1ZnVIc7NqnhdeIW48QaYjhMlUEf\nxdaqYUinzz8KpjfADZ4Hvqj9jWZ/eXo/9b2rGlHWkJsbhr0VEUyAGu1bwkgcdww\n3A7NjOxQbAgMBAAGjUzBRMB0GA1UdDgQWBBStFyujN6SYBr2glHpGt0XGF7GbGT\nAfBgNVHSMEGDAWgBStFyujN6SYBr2glHpGt0XGF7GbGTAPBgNVHRMBAf8EBTADA\nQH/MA0GCSqGSIb3DQEBCwUAA4IBAQBX6nn6YLhz521lfyVfxY0t6o3410bQAeAF\n08ud+ICtmQ4IO4A4B7zV3zIVYr0clrOOaFyLxngwMYN0XY5tVhDQqk4/gmDNEKS\nZy2QkX4Eg0YUWVzOyt6fPzjOvJLcsqc1hcF9wySL507XQz76Uk5cFypBOzbnk35\nUkWrzA9KK97cXckfIESgK/k1N4ecwxwG6VQ8mBGqVpPpey+dXpzzzv1iBKN/VY4\nydjgH/LBfdTsVarmmy2vtWBxwrqkFvpdhSGCvRDl/qdO/GIDJi77dmZWkh/ic90\nMNk1f38gs1jrCj8lThoar17Uo9y/Q5qJIsoNPyQrJRzqFU9F3FBjiPJF\n-----END CERTIFICATE-----\nValidate the creation of a ROA object\nValidate the successful creation of the ROA objects using the RIPEstat Data API. Be sure to test your address range against the Amazon ASNs 16509 and 14618, plus the ASNs that are currently authorized to advertise the address range.\nYou can inspect the ROA objects from different Amazon ASNs with your address range by using the following command:\ncurl --location --request GET \"https://stat.ripe.net/data/rpki-validation/data.json?resource=ASN&prefix=CIDR\nIn this example output, the response has a result of \"status\": \"valid\" for the Amazon ASN 16509. This indicates the ROA object for the address range was created successfully:\n{\n    \"messages\": [],\n    \"see_also\": [],\n    \"version\": \"0.3\",\n    \"data_call_name\": \"rpki-validation\",\n    \"data_call_status\": \"supported\",\n    \"cached\": false,\n    \"data\": {\n        \"validating_roas\": [\n            {\n                \"origin\": \"16509\",\n                \"prefix\": \"2001:0DB8::/32\",\n                \"max_length\": 48,\n                \"validity\": \"valid\"\n            },\n            {\n                \"origin\": \"14618\",\n                \"prefix\": \"2001:0DB8::/32\",\n                \"max_length\": 48,\n                \"validity\": \"invalid_asn\"\n            },\n            {\n                \"origin\": \"64496\",\n                \"prefix\": \"2001:0DB8::/32\",\n                \"max_length\": 48,\n                \"validity\": \"invalid_asn\"\n            }\n        ],\n        \"status\": \"valid\",\n        \"validator\": \"routinator\",\n        \"resource\": \"16509\",\n        \"prefix\": \"2001:0DB8::/32\"\n    },\n    \"query_id\": \"20230224152430-81e6384e-21ba-4a86-852a-31850787105f\",\n    \"process_time\": 58,\n    \"server_id\": \"app116\",\n    \"build_version\": \"live.2023.2.1.142\",\n    \"status\": \"ok\",\n    \"status_code\": 200,\n    \"time\": \"2023-02-24T15:24:30.773654\"\n}    \nA status of \u201cunknown\u201d indicates the ROA object for the address range has not been created. A status of \u201cinvalid_asn\u201d indicates that the ROA object for the address range was not created successfully."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/byoip-working-with.html",
        "content": "You can view and use the IPv4 and IPv6 address ranges that you've provisioned in your account. For more information, see Onboard your address range for use in Amazon EC2.\nIPv4 address ranges\nYou can create an Elastic IP address from your IPv4 address pool and use it with your AWS resources, such as EC2 instances, NAT gateways, and Network Load Balancers.\nTo view information about the IPv4 address pools that you've provisioned in your account, use the following describe-public-ipv4-pools command.\naws ec2 describe-public-ipv4-pools --region us-east-1\nTo create an Elastic IP address from your IPv4 address pool, use the allocate-address command. You can use the --public-ipv4-pool option to specify the ID of the address pool returned by describe-byoip-cidrs. Or you can use the --address option to specify an address from the address range that you provisioned.\nIPv6 address ranges\nTo view information about the IPv6 address pools that you've provisioned in your account, use the following describe-ipv6-pools command.\naws ec2 describe-ipv6-pools --region us-east-1\nTo create a VPC and specify an IPv6 CIDR from your IPv6 address pool, use the following create-vpc command. To let Amazon choose the IPv6 CIDR from your IPv6 address pool, omit the --ipv6-cidr-block option.\naws ec2 create-vpc --cidr-block 10.0.0.0/16 --ipv6-cidr-block ipv6-cidr --ipv6-pool pool-id --region us-east-1\nTo associate an IPv6 CIDR block from your IPv6 address pool with a VPC, use the following associate-vpc-cidr-block command. To let Amazon choose the IPv6 CIDR from your IPv6 address pool, omit the --ipv6-cidr-block option.\naws ec2 associate-vpc-cidr-block --vpc-id vpc-123456789abc123ab --ipv6-cidr-block ipv6-cidr --ipv6-pool pool-id --region us-east-1\nTo view your VPCs and the associated IPv6 address pool information, use the describe-vpcs command. To view information about associated IPv6 CIDR blocks from a specific IPv6 address pool, use the following get-associated-ipv6-pool-cidrs command.\naws ec2 get-associated-ipv6-pool-cidrs --pool-id pool-id --region us-east-1\nIf you disassociate the IPv6 CIDR block from your VPC, it's released back into your IPv6 address pool."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html",
        "content": "An Elastic IP address is a static IPv4 address designed for dynamic cloud computing. An Elastic IP address is allocated to your AWS account, and is yours until you release it. By using an Elastic IP address, you can mask the failure of an instance or software by rapidly remapping the address to another instance in your account. Alternatively, you can specify the Elastic IP address in a DNS record for your domain, so that your domain points to your instance. For more information, see the documentation for your domain registrar.\nAn Elastic IP address is a public IPv4 address, which is reachable from the internet. If you need to connect to an instance that does not have a public IPv4 address, you can associate an Elastic IP address with your instance to enable communication with the internet.\nContents\nElastic IP address pricing\nElastic IP address basics\nElastic IP address quota\nAssociate an Elastic IP address with an instance\nTransfer an Elastic IP address between AWS accounts\nRelease an Elastic IP address\nCreate a reverse DNS record for email on Amazon EC2\nElastic IP address pricing\nAWS charges for all public IPv4 addresses, including public IPv4 addresses associated with running instances and Elastic IP addresses. For more information, see the Public IPv4 Address tab on the Amazon VPC pricing page.\nElastic IP address basics\nThe following are the basic characteristics of an Elastic IP address:\nAn Elastic IP address is static; it does not change over time.\nAn Elastic IP address is for use in a specific Region only, and cannot be moved to a different Region.\nAn Elastic IP address comes from Amazon's pool of IPv4 addresses, or from a custom IPv4 address pool that you have brought to your AWS account. We do not support Elastic IP addresses for IPv6.\nTo use an Elastic IP address, you first allocate one to your account, and then associate it with your instance or a network interface.\nWhen you associate an Elastic IP address with an instance, it is also associated with the instance's primary network interface. When you associate an Elastic IP address with a network interface that is attached to an instance, it is also associated with the instance.\nWhen you associate an Elastic IP address with an instance or its primary network interface, if the instance already has a public IPv4 address associated with it, that public IPv4 address is released back into Amazon's pool of public IPv4 addresses and the Elastic IP address is associated with the instance instead. You cannot reuse the public IPv4 address previously associated with the instance and you cannot convert that public IPv4 address to an Elastic IP address. For more information, see Public IPv4 addresses.\nYou can disassociate an Elastic IP address from a resource, and then associate it with a different resource. To avoid unexpected behavior, ensure that all active connections to the resource named in the existing association are closed before you make the change. After you have associated your Elastic IP address to a different resource, you can reopen your connections to the newly associated resource.\nA disassociated Elastic IP address remains allocated to your account until you explicitly release it. You are charged for all Elastic IP addresses in your account, regardless of whether they are associated or disassociated with an instance. For more information, see the Public IPv4 Address tab on the Amazon VPC pricing page.\nWhen you associate an Elastic IP address with an instance that previously had a public IPv4 address, the public DNS host name of the instance changes to match the Elastic IP address.\nWe resolve a public DNS host name to the public IPv4 address or the Elastic IP address of the instance outside the network of the instance, and to the private IPv4 address of the instance from within the network of the instance.\nWhen you allocate an Elastic IP address from an IP address pool that you have brought to your AWS account, it does not count toward your Elastic IP address limits. For more information, see Elastic IP address quota.\nWhen you allocate the Elastic IP addresses, you can associate the Elastic IP addresses with a network border group. This is the location from which we advertise the CIDR block. Setting the network border group limits the CIDR block to this group. If you do not specify the network border group, we set the border group containing all of the Availability Zones in the Region (for example, us-west-2).\nAn Elastic IP address is for use in a specific network border group only.\nElastic IP address quota\nBy default, all AWS accounts have a quota of five (5) Elastic IP addresses per Region, because public (IPv4) internet addresses are a scarce public resource. We strongly recommend that you use Elastic IP addresses primarily for their ability to remap the address to another instance in the case of instance failure, and to use DNS hostnames for all other inter-node communication.\nIf you think your architecture warrants additional Elastic IP addresses, you can request a quota increase directly from the Service Quotas console. To request a quota increase, choose Request increase at account-level. For more information, see Amazon EC2 service quotas."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-eips.html",
        "content": "After you allocate an Elastic IP address, you can associate it with an AWS resource, such as an EC2 instance, NAT gateway, or Network Load Balancer. To associate an Elastic IP address with a different AWS resource later on, you can disassociate it from its current resource and then associated it with the new resource.\nComplete the following tasks to associate an Elastic IP address with an EC2 instance.\nTasks\nAllocate an Elastic IP address\nAssociate an Elastic IP address\nDisassociate an Elastic IP address\nAllocate an Elastic IP address\nComplete the steps in this section to allocate an Elastic IP address.\nConsole\nAWS CLI\nPowerShell\nTo allocate an Elastic IP address\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Network & Security, Elastic IPs.\nChoose Allocate Elastic IP address.\n(Optional) When you allocate an Elastic IP address (EIP), you choose the Network border group in which to allocate the EIP. A network border group is a collection of Availability Zones (AZs), Local Zones, or Wavelength Zones from which AWS advertises a public IP address. Local Zones and Wavelength Zones may have different network border groups than the AZs in a Region to ensure minimum latency or physical distance between the AWS network and the customers accessing the resources in these Zones.\nImportant\nYou must allocate an EIP in the same network border group as the AWS resource that will be associated with the EIP. An EIP in one network border group can only be advertised in zones in that network border group and not in any other zones represented by other network border groups.\nIf you have Local Zones or Wavelength Zones enabled (for more information, see Enable a Local Zone or Enable Wavelength Zones), you can choose a network border group for AZs, Local Zones, or Wavelength Zones. Choose the network border group carefully as the EIP and the AWS resource it is associated with must reside in the same network border group. You can use the EC2 console to view the network border group that your Availability Zones, Local Zones, or Wavelength Zones are in. Typically, all Availability Zones in a Region belong to the same network border group, whereas Local Zones or Wavelength Zones belong to their own separate network border groups.\nIf you don't have Local Zones or Wavelength Zones enabled, when you allocate an EIP, the network border group that represents all of the AZs for the Region (such as us-west-2) is predefined for you and you cannot change it. This means that the EIP that you allocate to this network border group will be advertised in all AZs in the Region you're in.\nFor Public IPv4 address pool, choose one of the following:\nAmazon's pool of IPv4 addresses\u2014If you want an IPv4 address to be allocated from Amazon's pool of IPv4 addresses.\nPublic IPv4 address that you bring to your AWS account\u2014If you want to allocate a non-contiguous (non-sequential) public IPv4 address from an IP address pool that you have brought to your AWS account. This option is disabled if you do not have any IP address pools. For more information about bringing your own IP address range to your AWS account, see Bring your own IP addresses (BYOIP) to Amazon EC2.\nCustomer owned pool of IPv4 addresses\u2014If you want to allocate an IPv4 address from a pool created from your on-premises network for use with an AWS Outpost. This option is disabled if you do not have an AWS Outpost.\nAllocate using an IPAM IPv4 pool: If you want to allocate sequential Elastic IP addresses from a contiguous public IPv4 block in an IPAM pool. Allocating sequential Elastic IP addresses can significantly reduce management overhead for security access control lists and simplify IP address allocation and tracking for enterprises scaling on AWS. For more information, see Allocate sequential Elastic IP addresses from an IPAM pool in the Amazon VPC IPAM User Guide.\n(Optional) To add a tag, choose Add new tag and enter a tag key and a tag value.\nAssociate an Elastic IP address\nIf you're associating an Elastic IP address with your instance to enable communication with the internet, you must also ensure that your instance is in a public subnet. For more information, see Enable internet access using an internet gateway in the Amazon VPC User Guide.\nConsole\nAWS CLI\nPowerShell\nTo associate an Elastic IP address with an instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Elastic IPs.\nSelect the Elastic IP address to associate and choose Actions, Associate Elastic IP address.\nFor Resource type, choose Instance.\nFor instance, choose the instance with which to associate the Elastic IP address. You can also enter text to search for a specific instance.\n(Optional) For Private IP address, specify a private IP address with which to associate the Elastic IP address.\nChoose Associate.\nTo associate an Elastic IP address with a network interface\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Elastic IPs.\nSelect the Elastic IP address to associate and choose Actions, Associate Elastic IP address.\nFor Resource type, choose Network interface.\nFor Network interface, choose the network interface with which to associate the Elastic IP address. You can also enter text to search for a specific network interface.\n(Optional) For Private IP address, specify a private IP address with which to associate the Elastic IP address.\nChoose Associate.\nDisassociate an Elastic IP address\nYou can disassociate an Elastic IP address from an instance or network interface at any time. After you disassociate the Elastic IP address, you can reassociate it with another resource.\nConsole\nAWS CLI\nPowerShell\nTo disassociate and reassociate an Elastic IP address\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Elastic IPs.\nSelect the Elastic IP address to disassociate, choose Actions, Disassociate Elastic IP address.\nChoose Disassociate."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/transfer-EIPs-intro-ec2.html",
        "content": "You can transfer an Elastic IP address from one AWS account to another. This can be helpful in the following situations:\nDisaster recovery \u2013 Quickly remap the IP addresses for public-facing internet workloads during emergency events.\nOrganizational restructuring \u2013 Quickly move a workload from one AWS account to another. An address transfer avoids the need to wait for new Elastic IP addresses to be allowed by your security groups and network ACLs.\nCentralized security administration \u2013 Use a centralized AWS security account to track and transfer Elastic IP addresses that have been vetted for security compliance.\nPricing\nThere is no charge for transferring Elastic IP addresses.\nTasks\nEnable Elastic IP address transfer\nAccept a transferred Elastic IP address\nDisable Elastic IP address transfer\nEnable Elastic IP address transfer\nThis section describes how to accept a transferred Elastic IP address. Note the following limitations related to enabling Elastic IP addresses for transfer:\nYou can transfer Elastic IP addresses from any AWS account (source account) to any other AWS account in the same AWS Region (transfer account).\nWhen you transfer an Elastic IP address, there is a two-step handshake between the AWS accounts. When the source account starts the transfer, the transfer accounts have seven days to accept the Elastic IP address transfer. During those seven days, the source account can view the pending transfer (for example in the AWS console or by using the describe-address-transfers command). After seven days, the transfer expires and ownership of the Elastic IP address returns to the source account.\nAccepted transfers are visible to the source account (for example in the AWS console or by using the describe-address-transfers command) for 14 days after the transfers have been accepted.\nAWS does not notify transfer accounts about pending Elastic IP address transfer requests. The owner of the source account must notify the owner of the transfer account that there is an Elastic IP address transfer request that they must accept.\nAny tags that are associated with an Elastic IP address being transferred are reset when the transfer is complete.\nYou cannot transfer Elastic IP addresses allocated from public IPv4 address pools that you bring to your AWS account \u2013 commonly referred to as Bring Your Own IP (BYOIP) address pools.\nYou cannot transfer Elastic IP addresses allocated from an Amazon-provided contiguous public IPv4 Amazon VPC IP Address Manager (IPAM) pool. Instead, IPAM allows you to share IPAM pools across AWS accounts by integrating IPAM with AWS Organizations and using AWS RAM. For more information, see Allocate sequential Elastic IP addresses from an IPAM pool in the Amazon VPC IPAM User Guide.\nIf you attempt to transfer an Elastic IP address that has a reverse DNS record associated with it, you can begin the transfer process, but the transfer account will not be able to accept the transfer until the associated DNS record is removed.\nIf you have enabled and configured AWS Outposts, you might have allocated Elastic IP addresses from a customer-owned IP address pool (CoIP). You cannot transfer Elastic IP addresses allocated from a CoIP. However, you can use AWS RAM to share a CoIP with another account. For more information, see Customer-owned IP addresses in the AWS Outposts User Guide.\nYou can use Amazon VPC IPAM to track the transfer of Elastic IP addresses to accounts in an organization from AWS Organizations. For more information, see View IP address history. If an Elastic IP address is transferred to an AWS account outside of the organization, the IPAM audit history of the Elastic IP address is lost.\nThese steps must be completed by the source account.\nConsole\nAWS CLI\nPowerShell\nTo enable Elastic IP address transfer\nEnsure that you're using the source AWS account.\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Elastic IPs.\nSelect one or more Elastic IP address to enable for transfer and choose Actions, Enable transfer.\nIf you are transferring multiple Elastic IP addresses, you\u2019ll see the Transfer type option. Choose one of the following options:\nChoose Single account if you are transferring the Elastic IP addresses to a single AWS account.\nChoose Multiple accounts if you are transferring the Elastic IP addresses to multiple AWS accounts.\nUnder Transfer account ID, enter the IDs of the AWS accounts that you want to transfer the Elastic IP addresses to.\nConfirm the transfer by entering enable in the text box.\nChoose Submit.\nTo accept the transfer, see Accept a transferred Elastic IP address. To disable the transfer, see Disable Elastic IP address transfer.\nAccept a transferred Elastic IP address\nThis section describes how to accept a transferred Elastic IP address.\nWhen you transfer an Elastic IP address, there is a two-step handshake between the AWS accounts. When the source account starts the transfer, the transfer accounts have seven days to accept the Elastic IP address transfer. During those seven days, the source account can view the pending transfer (for example in the AWS console or by using the describe-address-transfers command). After seven days, the transfer expires and ownership of the Elastic IP address returns to the source account.\nWhen accepting transfers, note the following exceptions that might occur and how to resolve them:\nAddressLimitExceeded: If your transfer account has exceeded the Elastic IP address quota, the source account can enable Elastic IP address transfer, but this exception occurs when the transfer account tries to accept the transfer. By default, all AWS accounts are limited to 5 Elastic IP addresses per Region. See Elastic IP address quota for instructions on increasing the limit.\nInvalidTransfer.AddressCustomPtrSet: If you or someone in your organization has configured the Elastic IP address that you are attempting to transfer to use reverse DNS lookup, the source account can enable transfer for the Elastic IP address, but this exception occurs when the transfer account tries to accept the transfer. To resolve this issue, the source account must remove the DNS record for the Elastic IP address. For more information, see Create a reverse DNS record for email on Amazon EC2.\nInvalidTransfer.AddressAssociated: If an Elastic IP address is associated with an ENI or EC2 instance, the source account can enable transfer for the Elastic IP address, but this exception occurs when the transfer account tries to accept the transfer. To resolve this issue, the source account must disassociate the Elastic IP address. For more information, see Disassociate an Elastic IP address.\nFor any other exceptions, contact Support.\nThese steps must be completed by the transfer account.\nConsole\nAWS CLI\nPowerShell\nTo accept an Elastic IP address transfer\nEnsure that you're using the transfer account.\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Elastic IPs.\nChoose Actions, Accept transfer.\nNo tags that are associated with the Elastic IP address being transferred are transferred with the Elastic IP address when you accept the transfer. If you want to define a Name tag for the Elastic IP address that you are accepting, select Create a tag with a key of 'Name' and a value that you specify.\nEnter the Elastic IP address that you want to transfer.\nIf you are accepting multiple transferred Elastic IP addresses, choose Add address to enter an additional Elastic IP address.\nChoose Submit.\nDisable Elastic IP address transfer\nThis section describes how to disable an Elastic IP transfer after the transfer has been enabled.\nThese steps must be completed by the source account that enabled the transfer.\nConsole\nAWS CLI\nPowerShell\nTo disable an Elastic IP address transfer\nEnsure that you're using the source AWS account.\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Elastic IPs.\nIn the resource list of Elastic IPs, ensure that you have the property enabled that shows the column Transfer status.\nSelect one or more Elastic IP address that have a Transfer status of Pending, and choose Actions, Disable transfer.\nConfirm by entering disable in the text box.\nChoose Submit."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing-eips-releasing.html",
        "content": "If you no longer need an Elastic IP address, we recommend that you release it. The Elastic IP address to release must not be currently associated with an AWS resource.\nConsole\nAWS CLI\nPowerShell\nTo release an Elastic IP address\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Elastic IPs.\nSelect the Elastic IP address to release and choose Actions, Release Elastic IP addresses.\nChoose Release.\nAfter you release your Elastic IP address, you might be able to recover. The following rules apply:\nYou can't recover an Elastic IP address if it has been allocated to another AWS account, or if it will result in your exceeding your Elastic IP address limit.\nYou can't recover tags associated with an Elastic IP address.\nAWS CLI\nPowerShell\nTo recover an Elastic IP address\nUse the allocate-address AWS CLI command and specify the IP address using the --address parameter as follows.\naws ec2 allocate-address --domain vpc --address 203.0.113.3"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Elastic_Addressing_Reverse_DNS.html",
        "content": "If you intend to send email to third parties from an EC2 instance, we recommend that you provision one or more Elastic IP addresses and assign static reverse DNS records to the Elastic IP addresses that you use to send email. This can help you avoid having your email flagged as spam by some anti-spam organizations. AWS works with ISPs and internet anti-spam organizations to reduce the chance that your email sent from these addresses will be flagged as spam.\nConsiderations\nBefore you create a reverse DNS record, you must set a corresponding forward DNS record (record type A) that points to your Elastic IP address.\nIf a reverse DNS record is associated with an Elastic IP address, the Elastic IP address is locked to your account and cannot be released from your account until the record is removed.\nIf you contacted Support to set up reverse DNS for an Elastic IP address, you can remove the reverse DNS, but you can't release the Elastic IP address because it is locked by Support. To unlock the Elastic IP address, contact AWS Support. After the Elastic IP address is unlocked, you can release it.\n[AWS GovCloud (US) Region] You can't create a reverse DNS record. AWS must assign the static reverse DNS records for you. Open a support case to remove reverse DNS and email sending limitations. You must provide your Elastic IP addresses and reverse DNS records.\nCreate a reverse DNS record\nYou can create a reverse DNS record for your Elastic IP address as follows.\nConsole\nAWS CLI\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Elastic IPs.\nSelect the Elastic IP address and choose Actions, Update reverse DNS.\nFor Reverse DNS domain name, enter the domain name.\nEnter update to confirm.\nChoose Update.\nRemove a reverse DNS record\nYou can remove a reverse DNS record from your Elastic IP address as follows.\nIf you receive the following error, you can submit a Request to remove email sending restrictions to Support for assistance.\nThe address cannot be released because it is locked to your account.\nConsole\nAWS CLI\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Elastic IPs.\nSelect the Elastic IP address and choose Actions, Update reverse DNS.\nFor Reverse DNS domain name, clear the domain name.\nEnter update to confirm.\nChoose Update."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html",
        "content": "An elastic network interface is a logical networking component in a VPC that represents a virtual network card. You can create and configure network interfaces and attach them to instances that you launch in the same Availability Zone. The attributes of a network interface follow it as it's attached or detached from an instance and reattached to another instance. When you move a network interface from one instance to another, network traffic is redirected from the original instance to the new instance.\nNote that this AWS resource is referred to as a network interface in the AWS Management Console and the Amazon EC2 API. Therefore, we use \"network interface\" in this documentation instead of \"elastic network interface\". The term \"network interface\" in this documentation always means \"elastic network interface\".\nNetwork interface attributes\nA network interface can include the following attributes:\nA primary private IPv4 address from the IPv4 address range of your subnet\nA primary IPv6 address from the IPv6 address range of your subnet\nSecondary private IPv4 addresses from the IPv4 address range of your subnet\nOne Elastic IP address (IPv4) for each private IPv4 address\nOne public IPv4 address\nSecondary IPv6 addresses\nSecurity groups\nA MAC address\nA source/destination check flag\nA description\nMonitoring traffic\nYou can enable a VPC flow log on your network interface to capture information about the traffic going to and from a network interface. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. For more information, see VPC Flow Logs in the Amazon VPC User Guide.\nContents\nNetwork interface concepts\nNetwork cards\nMaximum IP addresses per network interface\nCreate a network interface for your EC2 instance\nNetwork interface attachments for your EC2 instance\nManage the IP addresses for your network interface\nModify network interface attributes\nMultiple network interfaces for your Amazon EC2 instances\nRequester-managed network interfaces\nPrefix delegation for Amazon EC2 network interfaces\nDelete a network interface\nNetwork interface concepts\nThe following are important concepts to understand as you get started using network interfaces.\nPrimary network interface\nEach instance has a default network interface, called the primary network interface. You can't detach a primary network interface from an instance.\nSecondary network interfaces\nYou can create and attach secondary network interfaces to your instance. The maximum number of network interfaces varies by instance type. For more information, see Maximum IP addresses per network interface.\nIPv4 addresses for network interfaces\nWhen you launch an EC2 instance into an IPv4-only or dual stack subnet, the instance receives a primary private IP address from the IPv4 address range of the subnet. You can also specify additional private IPv4 addresses, known as secondary private IPv4 addresses. Unlike primary private IP addresses, secondary private IP addresses can be reassigned from one instance to another.\nPublic IPv4 addresses for network interfaces\nAll subnets have a modifiable attribute that determines whether network interfaces created in that subnet (and therefore instances launched into that subnet) are assigned a public IPv4 address. For more information, see Subnet settings in the Amazon VPC User Guide. When you launch an instance, the IP address is assigned to the primary network interface. If you specify an existing network interface as the primary network interface when you launch an instance, the public IPv4 address is determined by this network interface.\nWhen you create a network interface, it inherits the public IPv4 addressing attribute from the subnet. If you later modify the public IPv4 addressing attribute of the subnet, the network interface keeps the setting that was in effect when it was created.\nIPv6 addresses for network interfaces\nIf you associate IPv6 CIDR blocks with your VPC and subnet, you can assign IPv6 addresses from the subnet range to a network interface. Each IPv6 address can be assigned to one network interface.\nAll subnets have a modifiable attribute that determines whether network interfaces created in that subnet (and therefore instances launched into that subnet) are automatically assigned an IPv6 address from the range of the subnet. When you launch an instance, the IPv6 address is assigned to the primary network interface.\nElastic IP addresses for network interfaces\nYou can associate an Elastic IP address with one of the private IPv4 addresses for the network interface. You can associate one Elastic IP address with each private IPv4 address. If you disassociate an Elastic IP address from a network interface, you can release it or associate it with a different instance.\nTermination behavior\nYou can set the termination behavior for a network interface that's attached to an instance. You can specify whether the network interface should be automatically deleted when you terminate the instance to which it's attached.\nSource/destination checking\nYou can enable or disable source/destination checks, which ensure that the instance is either the source or the destination of any traffic that it receives. Source/destination checks are enabled by default. You must disable source/destination checks if the instance runs services such as network address translation, routing, or firewalls.\nRequester-managed network interfaces\nThese network interfaces are created and managed by AWS services to enable you to use some resources and services. You can't manage these network interfaces yourself. For more information, see Requester-managed network interfaces.\nPrefix delegation\nA prefix is a reserved private IPv4 or IPv6 CIDR range that you allocate for automatic or manual assignment to network interfaces that are associated with an instance. By using Delegated Prefixes, you can launch services faster by assigning a range of IP addresses as a single prefix.\nManaged network interfaces\nA managed network interface is managed by a service provider, such as Amazon EKS Auto Mode. You can\u2019t directly modify the settings of a managed network interface. Managed network interface are identified by a true value in the Managed field. For more information, see Amazon EC2 managed instances.\nNetwork cards\nMost instance types support one network card. Instance types that support multiple network cards provide higher network performance, including bandwidth capabilities above 100 Gbps and improved packet rate performance. When you attach a network interface to an instance that supports multiple network cards, you can select the network card for the network interface. The primary network interface must be assigned to network card index 0.\nEFA and EFA-only network interfaces count as a network interface. You can assign only one EFA or EFA-only network interface per network card. The primary network interface can't be an EFA-only network interface.\nThe following instance types support multiple network cards. For information about the number of network interfaces that an instance type supports, see Maximum IP addresses per network interface.\nInstance type Number of network cards\nc6in.32xlarge 2\nc6in.metal 2\ndl1.24xlarge 4\ng6e.24xlarge 2\ng6e.48xlarge 4\nhpc6id.32xlarge 2\nhpc7a.12xlarge 2\nhpc7a.24xlarge 2\nhpc7a.48xlarge 2\nhpc7a.96xlarge 2\nm6idn.32xlarge 2\nm6idn.metal 2\nm6in.32xlarge 2\nm6in.metal 2\np4d.24xlarge 4\np4de.24xlarge 4\np5.48xlarge 32\np5e.48xlarge 32\np5en.48xlarge 16\nr6idn.32xlarge 2\nr6idn.metal 2\nr6in.32xlarge 2\nr6in.metal 2\ntrn1.32xlarge 8\ntrn1n.32xlarge 16\ntrn2.48xlarge 16\ntrn2u.48xlarge 16\nu7in-16tb.224xlarge 2\nu7in-24tb.224xlarge 2\nu7in-32tb.224xlarge 2\nu7inh-32tb.480xlarge 2"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AvailableIpPerENI.html",
        "content": "Each instance type supports a maximum number of network interfaces, maximum number of private IPv4 addresses per network interface, and maximum number of IPv6 addresses per network interface. The limit for IPv6 addresses is separate from the limit for private IPv4 addresses per network interface. Note that all instance types support IPv6 addressing except for the following: C1, M1, M2, M3, and T1.\nAvailable network interfaces\nThe Amazon EC2 Instance Types Guide provides the information about the network interfaces available for each instance type. For more information, see the following:\nNetwork specifications \u2013 General purpose\nNetwork specifications \u2013 Compute optimized\nNetwork specifications \u2013 Memory optimized\nNetwork specifications \u2013 Storage optimized\nNetwork specifications \u2013 Accelerated computing\nNetwork specifications \u2013 High-performance computing\nNetwork specifications \u2013 Previous generation\nTo retrieve network interface information using the AWS CLI\nYou can use the describe-instance-types command to display information about an instance type, such as its supported network interfaces and IP addresses per interface. The following example displays this information for all C5 instances.\naws ec2 describe-instance-types \\\n    --filters \"Name=instance-type,Values=c5.*\" \\\n    --query \"InstanceTypes[].{ \\\n        Type: InstanceType, \\\n        MaxENI: NetworkInfo.MaximumNetworkInterfaces, \\\n        IPv4addr: NetworkInfo.Ipv4AddressesPerInterface}\" \\\n    --output table\nThe following is example output.\n---------------------------------------\n|        DescribeInstanceTypes        |\n+----------+----------+---------------+\n| IPv4addr | MaxENI   |     Type      |\n+----------+----------+---------------+\n|  30      |  8       |  c5.4xlarge   |\n|  50      |  15      |  c5.24xlarge  |\n|  15      |  4       |  c5.xlarge    |\n|  30      |  8       |  c5.12xlarge  |\n|  10      |  3       |  c5.large     |\n|  15      |  4       |  c5.2xlarge   |\n|  50      |  15      |  c5.metal     |\n|  30      |  8       |  c5.9xlarge   |\n|  50      |  15      |  c5.18xlarge  |\n+----------+----------+---------------+\nTo retrieve network interface information using the AWS Tools for PowerShell\nYou can use the Get-EC2InstanceType PowerShell command to display information about an instance type, such as its supported network interfaces and IP addresses per interface. The following example displays this information for all C5 instances.\nGet-EC2InstanceType -Filter @{Name = \"instance-type\"; Values = \"c5.*\" } | `\nSelect-Object `\n    @{Name = 'Ipv4AddressesPerInterface'; Expression = {($_.Networkinfo.Ipv4AddressesPerInterface)}},\n    @{Name = 'MaximumNetworkInterfaces'; Expression = {($_.Networkinfo.MaximumNetworkInterfaces)}},\n    InstanceType | `\nFormat-Table -AutoSize\nThe following is example output.\nIpv4AddressesPerInterface MaximumNetworkInterfaces InstanceType\n------------------------- ------------------------ ------------\n                       30                        8 c5.4xlarge\n                       15                        4 c5.xlarge\n                       30                        8 c5.12xlarge\n                       50                       15 c5.24xlarge\n                       30                        8 c5.9xlarge\n                       50                       15 c5.metal\n                       15                        4 c5.2xlarge\n                       10                        3 c5.large\n                       50                       15 c5.18xlarge"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/create-network-interface.html",
        "content": "You can create a network interface for use by your EC2 instances. When you create a network interface, you specify the subnet for which it is created. You can't move a network interface to another subnet after it's created. You must attach a network interface to an instance in the same Availability Zone. You can detach a secondary network interface from an instance and then attach it to a different instance in the same Availability Zone. You can't detach a primary network interface from an instance. For more information, see Network interface attachments for your EC2 instance.\nTo create a network interface using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Network Interfaces.\nChoose Create network interface.\n(Optional) For Description, enter a descriptive name.\nFor Subnet, select a subnet. The options available in the subsequent steps change depending on the type of subnet you select (IPv4-only, IPv6-only, or dual-stack (IPv4 and IPv6)).\nFor Private IPv4 address, do one of the following:\nChoose Auto-assign to allow Amazon EC2 to select an IPv4 address from the subnet.\nChoose Custom and enter an IPv4 address that you select from the subnet.\n(Subnets with IPv6 addresses only) For IPv6 address, do one of the following:\nChoose None if you do not want to assign an IPv6 address to the network interface.\nChoose Auto-assign to allow Amazon EC2 to select an IPv6 address from the subnet.\nChoose Custom and enter an IPv6 address that you select from the subnet.\n(Optional) If you\u2019re creating a network interface in a dual-stack or IPv6-only subnet, you have the option to Assign Primary IPv6 IP. This assigns a primary IPv6 global unicast address (GUA) to the network interface. Assigning a primary IPv6 address enables you to avoid disrupting traffic to instances or ENIs. Choose Enable if the instance that this ENI will be attached to relies on its IPv6 address not changing. AWS will automatically assign an IPv6 address associated with the ENI attached to your instance to be the primary IPv6 address. Once you enable an IPv6 GUA address to be a primary IPv6, you can't disable it. When you enable an IPv6 GUA address to be a primary IPv6, the first IPv6 GUA will be made the primary IPv6 address until the instance is terminated or the network interface is detached. If you have multiple IPv6 addresses associated with an ENI attached to your instance and you enable a primary IPv6 address, the first IPv6 GUA address associated with the ENI becomes the primary IPv6 address.\n(Optional) To create an Elastic Fabric Adapter, choose Elastic Fabric Adapter, Enable.\n(Optional) Under Advanced settings, for Idle connection tracking timeout, modify the default idle connection timeouts. For more information about these options, see Idle connection tracking timeout.\nTCP established timeout: Timeout (in seconds) for idle TCP connections in an established state. Min: 60 seconds. Max: 432000 seconds (5 days). Default: 432000 seconds. Recommended: Less than 432000 seconds.\nUDP timeout: Timeout (in seconds) for idle UDP flows that have seen traffic only in a single direction or a single request-response transaction. Min: 30 seconds. Max: 60 seconds. Default: 30 seconds.\nUDP stream timeout: Timeout (in seconds) for idle UDP flows classified as streams which have seen more than one request-response transaction. Min: 60 seconds. Max: 180 seconds (3 minutes). Default: 180 seconds.\nFor Security groups, select one or more security groups.\n(Optional) For each tag, choose Add new tag and enter a tag key and an optional tag value.\nChoose Create network interface.\nTo create a network interface using the command line\nUse one of the following commands.\ncreate-network-interface (AWS CLI)\nNew-EC2NetworkInterface (AWS Tools for Windows PowerShell)"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/network-interface-attachments.html",
        "content": "You can create network interfaces to be used by your EC2 instances as primary or secondary network interfaces. You must attach a network interface to an EC2 instance if it is in the same Availability Zone as the network interface. The instance type of an instance determines how many network interfaces you can attach to the instance. For more information, see Maximum IP addresses per network interface.\nConsiderations\nYou can attach a network interface to an instance when it's running (hot attach), when it's stopped (warm attach), or when the instance is being launched (cold attach).\nYou can detach secondary network interfaces when the instance is running or stopped. However, you can't detach the primary network interface.\nYou can detach a secondary network interface from one instance and attach it to another instance.\nWhen launching an instance using the CLI, API, or an SDK, you can specify the primary network interface and additional network interfaces.\nLaunching an Amazon Linux or Windows Server instance with multiple network interfaces automatically configures interfaces, private IPv4 addresses, and route tables on the operating system of the instance.\nA warm or hot attach of an additional network interface might require you to manually bring up the second interface, configure the private IPv4 address, and modify the route table accordingly. Instances running Amazon Linux or Windows Server automatically recognize the warm or hot attach and configure themselves.\nYou can't attach another network interface to an instance (for example, a NIC teaming configuration) to increase or double the network bandwidth to or from the dual-homed instance.\nIf you attach multiple network interfaces from the same subnet to an instance, you might encounter networking issues such as asymmetric routing. If possible, add a secondary private IPv4 address on the primary network interface instead.\nFor EC2 instances in an IPv6-only subnet, if you attach a secondary network interface, the private DNS hostname of the secondary network interface resolves to the primary IPv6 address for the primary network interface.\n[Windows instances] \u2013 If you add multiple network interfaces to an instance, you must configure the network interfaces to use static routing.\nAttach a network interface\nYou can attach a network interface to any instance in the same Availability Zone as the network interface, using either the Instances or Network Interfaces page of the Amazon EC2 console. Alternatively, you can specify existing network interfaces when you launch instances.\nIf the public IPv4 address on your instance is released, it does not receive a new one if there is more than one network interface attached to the instance. For more information about the behavior of public IPv4 addresses, see Public IPv4 addresses.\nInstances page\nNetwork Interfaces page\nTo attach a network interface to an instance using the Instances page\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the checkbox for the instance.\nChoose Actions, Networking, Attach network interface.\nChoose a VPC. The network interface can reside in the same VPC as your instance or in a different VPC that you own, as long as the network interface is in the same Availability Zone as the instance. This enables you to create multi-homed instances across VPCs with different networking and security configurations.\nSelect a network interface. If the instance supports multiple network cards, you can choose a network card.\nChoose Attach.\nTo attach a network interface to an instance using the command line\nYou can use one of the following commands. For more information about these command line interfaces, see Access Amazon EC2.\nattach-network-interface (AWS CLI)\nAdd-EC2NetworkInterface (AWS Tools for Windows PowerShell)\nDetach a network interface\nYou can detach a secondary network interface that is attached to an EC2 instance at any time, using either the Instances or Network Interfaces page of the Amazon EC2 console.\nIf you try to detach a network interface that is attached to a resource from another service, such as an Elastic Load Balancing load balancer, a Lambda function, a WorkSpace, or a NAT gateway, you get an error that you do not have permission to access the resource. To find which service created the resource attached to a network interface, check the description of the network interface. If you delete the resource, then its network interface is deleted.\nInstances page\nNetwork Interfaces page\nTo detach a network interface from an instance using the Instances page\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the checkbox for the instance. Check the Network interfaces section of the Networking tab to verify that the network interface is attached to an instance as a secondary network interface.\nChoose Actions, Networking, Detach network interface.\nSelect the network interface and choose Detach.\nTo detach a network interface using the command line\nYou can use one of the following commands. For more information about these command line interfaces, see Access Amazon EC2.\ndetach-network-interface (AWS CLI)\nDismount-EC2NetworkInterface (AWS Tools for Windows PowerShell)"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/managing-network-interface-ip-addresses.html",
        "content": "You can manage the following IP addresses for your network interfaces:\nElastic IP addresses (one per private IPv4 address)\nIPv4 addresses\nIPv6 addresses\nTo manage the Elastic IP addresses of a network interface using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Network Interfaces.\nSelect the checkbox for the network interface.\nTo associate an Elastic IP address, do the following:\nChoose Actions, Associate address.\nFor Elastic IP address, select the Elastic IP address.\nFor Private IPv4 address, select the private IPv4 address to associate with the Elastic IP address.\n(Optional) Choose Allow the Elastic IP address to be reassociated if the network interface is currently associated with another instance or network interface.\nChoose Associate.\nTo disassociate an Elastic IP address, do the following:\nChoose Actions, Disassociate address.\nFor Public IP address, select the Elastic IP address.\nChoose Disassociate.\nTo manage the IPv4 and IPv6 addresses of a network interface using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Network Interfaces.\nSelect the network interface.\nChoose Actions, Manage IP addresses.\nExpand the network interface.\nFor IPv4 addresses, modify the IP addresses as needed. To assign an IPv4 address, choose Assign new IP address and then specify an IPv4 address from the subnet range or let AWS choose one for you. To unassign an IPv4 address, choose Unassign next to the address.\nTo assign or unassign a public IPv4 address to a network interface, choose Auto-assign public IP. This option can be enabled or disabled for any network interface but will only apply to the primary network interface (for example, eth0).\nFor IPv6 addresses, modify the IP addresses as needed. To assign an IPv6 address, choose Assign new IP address and then specify an IPv6 address from the subnet range or let AWS choose one for you. To unassign an IPv6 address, choose Unassign next to the address.\n(Optional) If your modifying a network interface in a dual-stack or IPv6-only subnet, you have the option to Assign Primary IPv6 IP. Assigning a primary IPv6 address enables you to avoid disrupting traffic to instances or ENIs. Choose Enable if the instance that this ENI will be attached to relies on its IPv6 address not changing. AWS will automatically assign an IPv6 address associated with the ENI attached to your instance to be the primary IPv6 address. Once you enable an IPv6 GUA address to be a primary IPv6, you can't disable it. When you enable an IPv6 GUA address to be a primary IPv6, the first IPv6 GUA will be made the primary IPv6 address until the instance is terminated or the network interface is detached. If you have multiple IPv6 addresses associated with an ENI attached to your instance and you enable a primary IPv6 address, the first IPv6 GUA address associated with the ENI becomes the primary IPv6 address.\nChoose Save.\nTo manage the IP addresses of a network interface using the AWS CLI\nYou can use one of the following commands. For more information about these command line interfaces, see Access Amazon EC2.\nassign-ipv6-addresses\nassociate-address\ndisassociate-address\nunassign-ipv6-addresses\nTo manage the IP addresses of a network interface using the Tools for Windows PowerShell\nYou can use one of the following commands.\nRegister-EC2Address\nRegister-EC2Ipv6AddressList\nUnregister-EC2Address\nUnregister-EC2Ipv6AddressList"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/modify-network-interface-attributes.html",
        "content": "You can change the following network interface attributes:\nDescription\nSecurity groups\nDelete on termination\nSource/destination check\nTo change the description of a network interface using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Network Interfaces.\nSelect the checkbox for the network interface.\nChoose Actions, Change description.\nFor Description, enter a description for the network interface.\nChoose Save.\nTo change the security groups of a network interface using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Network Interfaces.\nSelect the checkbox for the network interface.\nChoose Actions, Change security groups.\nFor Associated security groups, select the security groups to use, and then choose Save.\nThe security group and network interface must be created for the same VPC. To change the security group for interfaces owned by other services, such as Elastic Load Balancing, do so through that service.\nTo change the termination behavior of a network interface using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Network Interfaces.\nSelect the checkbox for the network interface.\nChoose Actions, Change termination behavior.\nSelect or clear Delete on termination, Enable as needed, and then choose Save.\nTo change source/destination checking for a network interface using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Network Interfaces.\nSelect the checkbox for the network interface.\nChoose Actions, Change source/dest check.\nSelect or clear Source/destination check, Enable as needed, and then choose Save.\nTo change idle connection tracking timeouts:\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Network Interfaces.\nSelect the checkbox for the network interface.\nChoose Actions, Modify connection timeout.\nModify the idle connection tracking timeouts. For more information about these options, see Idle connection tracking timeout.\nTCP established timeout: Timeout (in seconds) for idle TCP connections in an established state. Min: 60 seconds. Max: 432000 seconds (5 days). Default: 432000 seconds. Recommended: Less than 432000 seconds.\nUDP timeout: Timeout (in seconds) for idle UDP flows that have seen traffic only in a single direction or a single request-response transaction. Min: 30 seconds. Max: 60 seconds. Default: 30 seconds.\nUDP stream timeout: Timeout (in seconds) for idle UDP flows classified as streams which have seen more than one request-response transaction. Min: 60 seconds. Max: 180 seconds (3 minutes). Default: 180 seconds.\nChoose Save.\nTo modify network interface attributes using the command line\nYou can use one of the following commands. For more information about these command line interfaces, see Access Amazon EC2.\nmodify-network-interface-attribute (AWS CLI)\nEdit-EC2NetworkInterfaceAttribute (AWS Tools for Windows PowerShell)"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/scenarios-enis.html",
        "content": "Attaching multiple network interfaces to an instance is useful when you need the following:\nA management network.\nNetwork and security appliances.\nDual-homed instances with workloads in different subnets or VPCs.\nA low-budget, high-availability solution.\nManagement network\nThe following overview describes a management network created using multiple network interfaces.\nCriteria\nThe primary network interface on the instance (for example, eth0) handles public traffic.\nThe secondary network interface on the instance (for example, eth1) handles backend management traffic. It's connected to a separate subnet that has more restrictive access controls, and is located within the same Availability Zone as the primary network interface.\nSettings\nThe primary network interface, which may or may not be behind a load balancer, has an associated security group that allows access to the server from the internet. For example, allow TCP port 80 and 443 from 0.0.0.0/0 or from the load balancer.\nThe secondary network interface has an associated security group that allows SSH access only, initiated from one of the following locations:\nAn allowed range of IP addresses, either within the VPC, or from the internet.\nA private subnet within the same Availability Zone as the primary network interface.\nA virtual private gateway.\nNote\nTo ensure failover capabilities, consider using a secondary private IPv4 for incoming traffic on a network interface. In the event of an instance failure, you can move the interface and/or secondary private IPv4 address to a standby instance.\nNetwork and security appliances\nSome network and security appliances, such as load balancers, network address translation (NAT) servers, and proxy servers prefer to be configured with multiple network interfaces. You can create and attach secondary network interfaces to instances that are running these types of applications and configure the additional interfaces with their own public and private IP addresses, security groups, and source/destination checking.\nDual-homed instances with workloads in different subnets\nYou can place a network interface on each of your web servers that connects to a mid-tier network where an application server resides. The application server can also be dual-homed to a backend network (subnet) where the database server resides. Instead of routing network packets through the dual-homed instances, each dual-homed instance receives and processes requests on the front end, initiates a connection to the backend, and then sends requests to the servers on the backend network.\nDual-homed instances with workloads in different VPCs in the same account\nYou can launch an EC2 instance in one VPC and attach a secondary ENI from a different VPC, as long as the network interface is in the same Availability Zone as the instance. This enables you to create multi-homed instances across VPCs with different networking and security configurations. You can't create multi-homed instances across VPCs in different AWS accounts.\nYou can use dual-homed instances across VPCs in the following use cases:\nOvercome CIDR overlaps between two VPCs that can\u2019t be peered together: You can leverage a secondary CIDR in a VPC and allow an instance to communicate across two non-overlapping IP ranges.\nConnect multiple VPCs within a single account: Enable communication between individual resources that would normally be separated by VPC boundaries.\nLow-budget, high-availability solution\nIf one of your instances serving a particular function fails, its network interface can be attached to a replacement or hot standby instance pre-configured for the same role in order to rapidly recover the service. For example, you can use a network interface as your primary or secondary network interface to a critical service such as a database instance or a NAT instance. If the instance fails, you (or more likely, the code running on your behalf) can attach the network interface to a hot standby instance. Because the interface maintains its private IP addresses, Elastic IP addresses, and MAC address, network traffic begins flowing to the standby instance as soon as you attach the network interface to the replacement instance. Users experience a brief loss of connectivity between the time the instance fails and the time that the network interface is attached to the standby instance, but no changes to the route table or your DNS server are required."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/requester-managed-eni.html",
        "content": "A requester-managed network interface is a network interface that an AWS service creates in your VPC on your behalf. The network interface is associated with a resource for another service, such as a DB instance from Amazon RDS, a NAT gateway, or an interface VPC endpoint from AWS PrivateLink.\nConsiderations\nYou can view the requester-managed network interfaces in your account. You can add or remove tags, but you can't change other properties of a requester-managed network interface.\nYou can't detach a requester-managed network interface.\nWhen you delete the resource associated with a requester-managed network interface, the AWS service detaches the network interface and deletes it. If the service detached a network interface but didn't delete it, you can delete the detached network interface.\nConsole\nAWS CLI\nPowerShell\nTo view requester-managed network interfaces using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Network & Security, Network Interfaces.\nSelect the ID of the network interface to open its details page.\nThe following are the key fields that you can use to determine the purpose of the network interface:\nDescription: A description provided by the AWS service that created the interface. For example, \"VPC Endpoint Interface vpce 089f2123488812123\".\nRequester-managed: Indicates whether the network interface is managed by AWS.\nRequester ID: The alias or AWS account ID of the principal or service that created the network interface. If you created the network interface, this is your AWS account ID. Otherwise, another principal or service created it."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-prefix-eni.html",
        "content": "You can assign a private IPv4 or IPv6 CIDR range, either automatically or manually, to your network interfaces. By assigning prefixes, you scale and simplify the management of applications, including container and networking applications that require multiple IP addresses on an instance. For more information about IPv4 and IPv6 addresses, see Amazon EC2 instance IP addressing.\nThe following assignment options are available:\nAutomatic assignment \u2014 AWS chooses the prefix from your VPC subnet\u2019s IPv4 or IPv6 CIDR block and assigns it to your network interface.\nManual Assignment \u2014 You specify the prefix from your VPC subnet\u2019s IPv4 or IPv6 CIDR block, and AWS verifies that the prefix is not already assigned to other resources before assigning it to your network interface.\nAssigning prefixes has the following benefits:\nIncreased IP addresses on a network interface \u2014 When you use a prefix, you assign a block of IP addresses as opposed to individual IP addresses. This increases the number of IP addresses for a network interface.\nSimplified VPC management for containers \u2014 In container applications, each container requires a unique IP address. Assigning prefixes to your instance simplifies the management of your VPCs, as you can launch and terminate containers without having to call Amazon EC2 APIs for individual IP assignments.\nContents\nBasics\nConsiderations\nManage prefixes for your network interfaces\nBasics\nYou can assign a prefix to new or existing network interfaces.\nTo use prefixes, you assign a prefix to your network interface, attach the network interface to your instance, and then configure your operating system.\nWhen you choose the option to specify a prefix, the prefix must meet the following requirements:\nThe IPv4 prefix that you can specify is /28.\nThe IPv6 prefix that you can specify is /80.\nThe prefix is in the subnet CIDR of the network interface, and does not overlap with other prefixes or IP addresses assigned to existing resources in the subnet.\nYou can assign a prefix to the primary or secondary network interface.\nYou can assign an Elastic IP address to a network interface that has a prefix assigned to it.\nYou can also assign an Elastic IP address to the IP address part of the assigned prefix.\nWe resolve the private DNS host name of an instance to the primary private IPv4 address.\nWe assign each private IPv4 address for a network interface, including those from prefixes, using the following format:\nus-east-1 Region\nip-private-ipv4-address.ec2.internal\nAll other Regions\nip-private-ipv4-address.region.compute.internal\nConsiderations\nTake the following into consideration when you use prefixes:\nNetwork interfaces with prefixes are supported with Nitro-based instances.\nPrefixes for network interfaces are limited to IPv6 addresses and private IPv4 addresses.\nThe maximum number of IP addresses that you can assign to a network interface depends on the instance type. Each prefix that you assign to a network interface counts as one IP address. For example, a c5.large instance has a limit of 10 IPv4 addresses per network interface. Each network interface for this instance has a primary IPv4 address. If a network interface has no secondary IPv4 addresses, you can assign up to 9 prefixes to the network interface. For each additional IPv4 address that you assign to a network interface, you can assign one less prefix to the network interface. For more information, see Maximum IP addresses per network interface.\nPrefixes are included in source/destination checks.\nYou must configure your operating system to work with network interfaces with prefixes. interfaces with prefixes. Note the following:\nSome Amazon Linux AMIs contain additional scripts installed by AWS, known as ec2-net-utils. These scripts optionally automate the configuration of your network interfaces. They are for use only on Amazon Linux.\nFor containers, you can use a Container Network Interface (CNI) for the Kubernetes plug-in, or dockerd if you use Docker to manage your containers."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/work-with-prefixes.html",
        "content": "You can manage the prefixes with your network interfaces as follows.\nTasks\nAssign prefixes during network interface creation\nAssign prefixes to an existing network interface\nRemove prefixes from your network interfaces\nAssign prefixes during network interface creation\nYou can assign automatic or custom prefixes when you create a network interface.\nConsole\nAWS CLI\nTo assign automatic prefixes during network interface creation\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Network Interfaces.\nChoose Create network interface.\nEnter a description for the network interface, select the subnet in which to create the network interface, and configure the private IPv4 and IPv6 addresses.\nExpand Advanced settings.\nFor IPv4 prefix delegation do one of the following:\nTo automatically assign an IPv4 prefix, choose Auto-assign. For Number of IPv4 prefixes, enter the number of prefixes to assign.\nTo assign a specific IPv4 prefix, choose Custom. Choose Add new prefix and enter the prefix.\nFor IPv6 prefix delegation do one of the following:\nTo automatically assign an IPv6 prefix, choose Auto-assign. For Number of IPv6 prefixes, enter the number of prefixes to assign.\nTo assign a specific IPv6 prefix, choose Custom. Choose Add new prefix and enter the prefix.\nNote\nIPv6 prefix delegation appears only if the selected subnet is enabled for IPv6.\nSelect the security groups to associate with the network interface and assign resource tags if needed.\nChoose Create network interface.\nAssign prefixes to an existing network interface\nYou can assign automatic or custom prefixes to an existing network interface.\nConsole\nAWS CLI\nTo assign automatic prefixes to an existing network interface\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Network Interfaces.\nSelect the network interface to which to assign the prefixes, and choose Actions, Manage prefixes.\nFor IPv4 prefix delegation do one of the following:\nTo automatically assign an IPv4 prefix, choose Auto-assign. For Number of IPv4 prefixes, enter the number of prefixes to assign.\nTo assign a specific IPv4 prefix, choose Custom. Choose Add new prefix and enter the prefix.\nFor IPv6 prefix delegation do one of the following:\nTo automatically assign an IPv6 prefix, choose Auto-assign. For Number of IPv6 prefixes, enter the number of prefixes to assign.\nTo assign a specific IPv6 prefix, choose Custom. Choose Add new prefix and enter the prefix.\nNote\nIPv6 prefix delegation appears only if the selected subnet is enabled for IPv6.\nChoose Save.\nRemove prefixes from your network interfaces\nYou can remove prefixes from an existing network interface.\nConsole\nAWS CLI\nTo remove the prefixes from a network interface\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Network Interfaces.\nSelect the network interface.\nChoose Actions, Manage prefixes.\nFor IPv4 prefix delegation, to remove specific prefixes, choose Unassign next to the prefixes to remove. To remove all prefixes, choose Do not assign.\nFor IPv6 prefix delegation, to remove specific prefixes, choose Unassign next to the prefixes to remove. To remove all prefixes, choose Do not assign.\nNote\nIPv6 prefix delegation appears only if the selected subnet is enabled for IPv6.\nChoose Save."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/delete_eni.html",
        "content": "Deleting a network interface releases all attributes associated with the interface and releases any private IP addresses or Elastic IP addresses to be used by another instance.\nYou can't delete a network interface that is in use. First, you must detach the network interface.\nTo delete a network interface using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Network Interfaces.\nSelect the checkbox for the network interface, and then choose Actions, Delete.\nWhen prompted for confirmation, choose Delete.\nTo delete a network interface using the command line\nYou can use one of the following commands. For more information about these command line interfaces, see Access Amazon EC2.\ndelete-network-interface (AWS CLI)\nRemove-EC2NetworkInterface (AWS Tools for Windows PowerShell)"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-network-bandwidth.html",
        "content": "Instance bandwidth specifications apply to both inbound and outbound traffic for the instance. For example, if an instance specifies up to 10 Gbps of bandwidth, that means it has up to 10 Gbps of bandwidth for inbound traffic, and up to 10 Gbps for outbound traffic. The network bandwidth that's available to an EC2 instance depends on several factors, as follows.\nMulti-flow traffic\nBandwidth for multi-flow traffic is limited to 50% of the available bandwidth for traffic that goes through an internet gateway or a local gateway for instances with 32 or more vCPUs, or 5 Gbps, whichever is larger. For instances with fewer than 32 vCPUs, bandwidth is limited to 5 Gbps.\nSingle-flow traffic\nBandwidth for single-flow traffic is limited to 5 Gbps when instances are not in the same cluster placement group. To reduce latency and increase single-flow bandwidth, try one of the following:\nUse a cluster placement group to achieve up to 10 Gbps bandwidth for instances within the same placement group.\nSet up multiple paths between two endpoints to achieve higher bandwidth with Multipath TCP (MPTCP).\nConfigure ENA Express for eligible instances within the same Availability Zone to achieve up to 25 Gbps between those instances.\nNote\nA single-flow is considered a unique 5-tuple TCP or UDP flow. For other protocols following the IP header, such as GRE or IPsec, the 3 tuple of source IP, destination IP, and next protocol is used to define a flow.\nAvailable instance bandwidth\nThe available network bandwidth of an instance depends on the number of vCPUs that it has. For example, an m5.8xlarge instance has 32 vCPUs and 10 Gbps network bandwidth, and an m5.16xlarge instance has 64 vCPUs and 20 Gbps network bandwidth. However, instances might not achieve this bandwidth; for example, if they exceed network allowances at the instance level, such as packet per second or number of tracked connections. How much of the available bandwidth the traffic can utilize depends on the number of vCPUs and the destination. For example, an m5.16xlarge instance has 64 vCPUs, so traffic to another instance in the Region can utilize the full bandwidth available (20 Gbps). However, traffic that goes through an internet gateway or a local gateway can utilize only 50% of the bandwidth available (10 Gbps).\nTypically, instances with 16 vCPUs or fewer (size 4xlarge and smaller) are documented as having \"up to\" a specified bandwidth; for example, \"up to 10 Gbps\". These instances have a baseline bandwidth. To meet additional demand, they can use a network I/O credit mechanism to burst beyond their baseline bandwidth. Instances can use burst bandwidth for a limited time, typically from 5 to 60 minutes, depending on the instance size.\nAn instance receives the maximum number of network I/O credits at launch. If the instance exhausts its network I/O credits, it returns to its baseline bandwidth. A running instance earns network I/O credits whenever it uses less network bandwidth than its baseline bandwidth. A stopped instance does not earn network I/O credits. Instance burst is on a best effort basis, even when the instance has credits available, as burst bandwidth is a shared resource.\nThere are separate network I/O credit buckets for inbound and outbound traffic.\nBase and burst network performance\nThe Amazon EC2 Instance Types Guide describes the network performance for each instance type, plus the baseline network bandwidth available for instances that can use burst bandwidth. For more information, see the following:\nNetwork specifications \u2013 General purpose\nNetwork specifications \u2013 Compute optimized\nNetwork specifications \u2013 Memory optimized\nNetwork specifications \u2013 Storage optimized\nNetwork specifications \u2013 Accelerated computing\nNetwork specifications \u2013 High-performance computing\nNetwork specifications \u2013 Previous generation\nAlternatively, you can use a command line tool to get this information.\nAWS CLI\nPowerShell\nYou can use the describe-instance-types command to display information about an instance type. The following example displays network performance information for all C5 instances.\naws ec2 describe-instance-types \\\n    --filters \"Name=instance-type,Values=c5.*\" \\\n    --query \"InstanceTypes[].[InstanceType, NetworkInfo.NetworkPerformance, NetworkInfo.NetworkCards[0].BaselineBandwidthInGbps] | sort_by(@,&[2])\" \\\n    --output table\nThe following is example output. If your output is missing the baseline bandwidth, update to the latest version of the AWS CLI.\n---------------------------------------------\n|           DescribeInstanceTypes           |\n+--------------+--------------------+-------+\n|  c5.large    |  Up to 10 Gigabit  |  0.75 |\n|  c5.xlarge   |  Up to 10 Gigabit  |  1.25 |\n|  c5.2xlarge  |  Up to 10 Gigabit  |  2.5  |\n|  c5.4xlarge  |  Up to 10 Gigabit  |  5.0  |\n|  c5.9xlarge  |  12 Gigabit        |  12.0 |\n|  c5.12xlarge |  12 Gigabit        |  12.0 |\n|  c5.18xlarge |  25 Gigabit        |  25.0 |\n|  c5.24xlarge |  25 Gigabit        |  25.0 |\n|  c5.metal    |  25 Gigabit        |  25.0 |\n+--------------+--------------------+-------+\nMonitor instance bandwidth\nYou can use CloudWatch metrics to monitor instance network bandwidth and the packets sent and received. You can use the network performance metrics provided by the Elastic Network Adapter (ENA) driver to monitor when traffic exceeds the network allowances that Amazon EC2 defines at the instance level.\nYou can configure whether Amazon EC2 sends metric data for the instance to CloudWatch using one-minute periods or five-minute periods. It is possible that the network performance metrics would show that an allowance was exceeded and packets were dropped while the CloudWatch instance metrics do not. This can happen when the instance has a short spike in demand for network resources (known as a microburst), but the CloudWatch metrics are not granular enough to reflect these microsecond spikes.\nLearn more\nInstance metrics\nMonitor network performance"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configure-bandwidth-weighting.html",
        "content": "Some instance types support configurable bandwidth weighting, where you can select baseline bandwidth weighting that favors either network processing or EBS operations. Default settings for baseline bandwidth are determined by your instance type. You can configure the bandwidth weighting during launch, or modify your instance settings with the following weighting preferences:\ndefault \u2013 This option uses the standard bandwidth configuration for your instance type.\nvpc-1 \u2013 This option increases the baseline bandwidth available for networking and decreases the baseline bandwidth for EBS operations.\nebs-1 \u2013 This option increases the baseline bandwidth available for EBS operations, and decreases the baseline bandwidth for networking.\nBandwidth weighting considerations\nThe following are some considerations that might affect your bandwidth weighting strategy.\nSetting bandwidth weighting preferences only affects bandwidth specifications. The network packets per second (PPS) and EBS input/output operations per second (IOPS) specifications don't change.\nThe combined bandwidth specification between networking and EBS does not change. When you select a bandwidth weighting configuration, the baseline bandwidth available for the selected option increases, and the baseline bandwidth for the remaining option is reduced by the same absolute amount. The available burst bandwidth remains the same for your selected option, and is reduced for the remaining option.\nIt's important to understand how changes in bandwidth allocation can affect I/O performance for EBS. For EC2 instances that have vpc-1 configuration (increased networking bandwidth), you might experience lower IOPS for EBS volumes if you reach the EBS bandwidth limit before you've reached the IOPS limit. This is more noticeable with larger I/O sizes.\nFor example, on an instance type that normally supports 240,000 IOPS with 16 KiB I/O size, if you select vpc-1 weighting, that might reduce the achievable IOPS due to the adjusted EBS baseline bandwidth limit.\nWhen planning your workload, consider your I/O size and patterns. Smaller I/O sizes are less likely to be affected by bandwidth limitations, while larger I/O sizes or sequential workloads might see more impact from bandwidth changes. Always test your specific workload to ensure optimal performance with your chosen configuration.\nThe networking multi-flow bandwidth specification for traffic that goes through an internet gateway or a local gateway is adjusted to 50% of the baseline bandwidth of the configured option or 5 Gbps, where applicable. For more information, see Amazon EC2 instance network bandwidth.\nThe following example is based on an instance type that has a default baseline bandwidth of 40 Gbps, and a default border bandwidth of 20 Gbps. If you choose vpc-1 bandwidth weighting for this instance, the weighted baseline bandwidth changes to 50 Gbps, and the border bandwidth changes to 25 Gbps.\nThis feature is available in all commercial regions, aligned with EC2 instance availablilty and support.\nThis feature adds no additional cost to your EC2 instance.\nSupported instance types for bandwidth weighting\nThe following instance types support configurable bandwidth weighting.\nC8g (all sizes)\nM8g (all sizes)\nR8g (all sizes)\nX8g (all sizes)\nCheck current bandwidth settings\nTo see the current bandwidth settings for your instance, select one of the tabs for instructions.\nConsole\nAWS CLI\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance that you want to check from the list, and navigate to the Networking tab. Your current setting is shown in the Configured bandwidth field. Amazon EC2 uses default settings for your instance type if the bandwidth is not set to a specific value.\nConfigure bandwidth weighting for your instance\nYou can configure bandwidth weighting either at launch or by modifying existing instances from the EC2 console, API/SDKs or CLI.\nConfigure bandwidth weighting when you launch an instance\nTo configure bandwidth settings when you launch an instance, select one of the tabs for instructions.\nConsole\nAWS CLI\nThere are many details to configure when you launch an instance. This procedure will only cover the settings that are essential to launch an instance with configurable bandwidth weighting.\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nChoose Launch instances. This opens the Launch an instance dialog. There are several additional ways that you can get to the the launch dialog, depending on your preference. For example, you can launch an instance directly from an AMI or from the Amazon EC2 dashboard itself.\nThe Amazon Machine Image (AMI) that you launch from must be based on Arm architecture. Many Quick Start images support both x86 and Arm architectures, After you choose the operating system for your instance, select the Arm option from the Architecture list.\nThe instance type must be one of the Supported instance types for this feature.\nWhen you expand the Advanced details section, you can scroll down to find the Instance bandwidth configuration settings. Select the bandwidth configuration option for your instance.\nConfigure all of the other settings for your instance as you normally would, and choose Launch instance.\nYou can also specify bandwidth weighting in a launch template. To create a launch template, see Create an Amazon EC2 launch template. The parameter to set is in the same location as it is for launching an instance directly from the console. Expand the Advanced details section, and set the Instance bandwidth configuration.\nTo launch an instance with your launch template, see Launch EC2 instances using a launch template.\nUpdate bandwidth weighting for an existing instance\nTo update bandwidth weighting for an existing instance, your instance must be in the Stopped state. Select one of the tabs for instructions.\nConsole\nAWS CLI\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance that you want to update from the list.\nBefore you change the bandwidth configuration, your instance must be in a Stopped state. If your instance is running, select Stop instance from the Instance state menu.\nChoose Manage bandwidth from the Actions > Networking menu. This opens the Manage bandwidth dialog.\nNote\nIf your instance type doesn't support configuration for bandwidth weighting, that menu item is disabled.\nSelect the option to update your instance, and choose Change to save your settings.\nBandwidth weighting impact for networking\nThe following table shows the impact of bandwidth weighting on networking bandwidth for the C8g, M8g, R8g, and X8g instance families.\nInstance size\nDefault bandwidth (Gbps)\nbaseline/burst\nvpc-1\nbaseline/burst\nebs-1\nbaseline/burst\n.medium 0.52 / 12.5 0.65 / 12.5 0.4 / 10\n.large 0.94 / 12.5 1.17 / 12.5 0.8 / 10\n.xlarge 1.88 / 12.5 2.35 / 12.5 1.6 / 10\n.2xlarge 3.75 / 15 4.69 / 15 3.1 / 12.5\n.4xlarge 7.5 / 15 9.38 / 15 6.3 / 12.5\n.8xlarge 15 18.75 12.5\n.12xlarge 22.5 28.13 18.8\n.16xlarge 30 37.5 25\n.24xlarge 40 50 32.5\n.48xlarge 50 62.5 40\n.metal-24xl 40 50 32.5\n.metal-48xl 50 62.5 40\nBandwidth weighting impact for EBS\nThe following table shows the impact of bandwidth weighting on bandwidth that's available for EBS operations for the C8g, M8g, R8g, and X8g instance families.\nInstance size\nDefault bandwidth (Gbps)\nbaseline/burst\nvpc-1\nbaseline/burst\nebs-1\nbaseline/burst\n.medium 0.3 / 10 0.2 / 6.3 0.4 / 10\n.large 0.6 / 10 0.4 / 6.3 0.8 / 10\n.xlarge 1.3 / 10 0.8 / 6.3 1.6 / 10\n.2xlarge 2.5 / 10 1.6 / 6.3 3.1 / 10\n.4xlarge 5.0 / 10 3.1 / 6.3 6.3 / 10\n.8xlarge 10 6.3 12.5\n.12xlarge 15 9.4 18.8\n.16xlarge 20 12.5 25\n.24xlarge 30 20 37.5\n.48xlarge 40 27.5 50\n.metal-24xl 30 20 37.5\n.metal-48xl 40 27.5 50"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/enhanced-networking.html",
        "content": "Enhanced networking uses single root I/O virtualization (SR-IOV) to provide high-performance networking capabilities on supported instance types. SR-IOV is a method of device virtualization that provides higher I/O performance and lower CPU utilization when compared to traditional virtualized network interfaces. Enhanced networking provides higher bandwidth, higher packet per second (PPS) performance, and consistently lower latency between instances. There is no additional charge for using enhanced networking.\nFor information about the supported network speed for each instance type, see Amazon EC2 Instance Types.\nYou can enable enhanced networking using one of the following mechanisms:\nElastic Network Adapter (ENA)\nThe Elastic Network Adapter (ENA) supports network speeds of up to 100 Gbps for supported instance types.\nAll Nitro-based instances use ENA for enhanced networking. In addition, the following Xen-based instances use ENA: H1, I3, G3, m4.16xlarge, P2, P3, P3dn, and R4.\nFor more information, see Enable enhanced networking with ENA on your EC2 instances.\nIntel 82599 Virtual Function (VF) interface\nThe Intel 82599 Virtual Function interface supports network speeds of up to 10 Gbps for supported instance types.\nThe following instance types use the Intel 82599 VF interface for enhanced networking: C3, C4, D2, I2, M4 (excluding m4.16xlarge), and R3.\nFor more information, see Enhanced networking with the Intel 82599 VF interface.\nContents\nElastic Network Adapter (ENA)\nENA Express\nIntel 82599 VF\nMonitor network performance\nTroubleshoot ENA on Linux\nTroubleshoot ENA on Windows\nImprove network latency on Linux\nNitro performance considerations\nOptimize network performance on Windows"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/enhanced-networking-ena.html",
        "content": "Amazon EC2 provides enhanced networking capabilities through the Elastic Network Adapter (ENA). To use enhanced networking, you must use an AMI that includes the required ENA driver or manually install it. Then you can enable ENA support on your instance.\nTo review release notes or install instructions for an ENA driver, see the tab that matches your instance operating system platform.\nLinux\nWindows\nYou can review the following documentation on GitHub:\nReview ENA Linux kernel driver release notes on GitHub.\nFor an overview of the ENA Linux kernel driver that includes install instructions see Linux kernel driver for Elastic Network Adapter (ENA) family on GitHub.\nFor Nitro-based instances, enhanced networking capabilities vary by the Nitro version that the instance type implements.\nTo review network specifications for your instance, choose the instance family link for your instance type. If you're not sure which instance family applies, see Naming conventions in the Amazon EC2 Instance Types guide.\nNetwork specifications for accelerated computing instances\nNetwork specifications for compute optimized instances\nNetwork specifications for general purpose instances\nNetwork specifications for high-performance computing instances\nNetwork specifications for memory optimized instances\nNetwork specifications for storage optimized instances\nContents\nPrerequisites for enhanced networking with ENA\nTest whether enhanced networking is enabled\nEnable enhanced networking on your instance\nPrerequisites for enhanced networking with ENA\nTo prepare for enhanced networking using the ENA, set up your instance as follows:\nLaunch a Nitro-based instance.\nEnsure that the instance has internet connectivity.\nIf you have important data on the instance that you want to preserve, you should back that data up now by creating an AMI from your instance. Updating the ENA kernel driver and enabling the enaSupport attribute might render incompatible instances or operating systems unreachable. If you have a recent backup, your data will still be retained if this happens.\nLinux instances \u2013 Launch the instance using a supported version of the Linux kernel and a supported distribution, so that ENA enhanced networking is enabled for your instance automatically. For more information, see ENA Linux Kernel Driver Release Notes.\nWindows instances \u2013 If the instance is running Windows Server 2008 R2 SP1, ensure that is has the SHA-2 code signing support update.\nUse AWS CloudShell from the AWS Management Console, or install and configure the AWS CLI or the AWS Tools for Windows PowerShell on any computer you choose, preferably your local desktop or laptop. For more information, see Access Amazon EC2 or the AWS CloudShell User Guide. Enhanced networking cannot be managed from the Amazon EC2 console.\nTest whether enhanced networking is enabled\nYou can test whether enhanced networking is enabled in your instances or your AMIs.\nInstance attribute\nTo check whether an instance has the enhanced networking enaSupport attribute set, use one of the following commands. If the attribute is set, the response is true.\ndescribe-instances (AWS CLI)\naws ec2 describe-instances --instance-ids instance_id --query \"Reservations[].Instances[].EnaSupport\"\nGet-EC2Instance (Tools for Windows PowerShell)\n(Get-EC2Instance -InstanceId instance-id).Instances.EnaSupport\nImage attribute\nTo check whether an AMI has the enhanced networking enaSupport attribute set, use one of the following commands. If the attribute is set, the response is true.\ndescribe-images (AWS CLI)\naws ec2 describe-images --image-id ami_id --query \"Images[].EnaSupport\"\nGet-EC2Image (Tools for Windows PowerShell)\n(Get-EC2Image -ImageId ami_id).EnaSupport\nLinux network interface driver\nUse the following command to verify that the ena kernel driver is being used on a particular interface, substituting the interface name that you want to check. If you are using a single interface (default), this is eth0. If your Linux distribution supports predictable network names, this could be a name like ens5. For more information, expand the section for RHEL, SUSE, and CentOS in Enable enhanced networking on your instance.\nIn the following example, the ena kernel driver is not loaded, because the listed driver is vif.\n[ec2-user ~]$ ethtool -i eth0\ndriver: vif\nversion:\nfirmware-version:\nbus-info: vif-0\nsupports-statistics: yes\nsupports-test: no\nsupports-eeprom-access: no\nsupports-register-dump: no\nsupports-priv-flags: no\nIn this example, the ena kernel driver is loaded and at the minimum recommended version. This instance has enhanced networking properly configured.\n[ec2-user ~]$ ethtool -i eth0\ndriver: ena\nversion: 1.5.0g\nfirmware-version:\nexpansion-rom-version:\nbus-info: 0000:00:05.0\nsupports-statistics: yes\nsupports-test: no\nsupports-eeprom-access: no\nsupports-register-dump: no\nsupports-priv-flags: no\nEnable enhanced networking on your instance\nThe procedure that you use depends on the operating system of the instance.\nAmazon Linux\nUbuntu\nRHEL, SUSE, CentOS\nUbuntu with DKMS\nEnable enhanced networking on Windows"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ena-express.html",
        "content": "ENA Express is powered by AWS Scalable Reliable Datagram (SRD) technology. SRD is a high performance network transport protocol that uses dynamic routing to increase throughput and minimize tail latency. With ENA Express, you can communicate between two EC2 instances in the same Availability Zone.\nBenefits of ENA Express\nIncreases the maximum bandwidth a single flow can use from 5 Gbps to 25 Gbps within the Availability Zone, up to the aggregate instance limit.\nReduces tail latency of network traffic between EC2 instances, especially during periods of high network load.\nDetects and avoids congested network paths.\nHandles some tasks directly in the network layer, such as packet reordering on the receiving end, and most retransmits that are needed. This frees up the application layer for other work.\nNote\nIf your application sends or receives a high volume of packets per second, and needs to optimize for latency most of the time, especially during periods when there is no congestion on the network, Enhanced networking might be a better fit for your network.\nENA Express traffic can't be sent across subnets in a Local Zone.\nAfter you've enabled ENA Express for the network interface attachment on an instance, the sending instance initiates communication with the receiving instance, and SRD detects if ENA Express is operating on both the sending instance and the reciving instance. If ENA Express is operating, the communication can use SRD transmission. If ENA Express is not operating, the communication falls back to standard ENA transmission.\nDuring periods of time when network traffic is light, you might notice a slight increase in packet latency (tens of microseconds) when the packet uses ENA Express. During those times, applications that prioritize specific network performance characteristics can benefit from ENA Express as follows:\nProcesses can benefit from increased maximum single flow bandwidth from 5 Gbps to 25 Gbps within the same Availability Zone, up to the aggregate instance limit. For example, if a specific instance type supports up to 12.5 Gbps, the single flow bandwidth is also limited to 12.5 Gbps.\nLonger running processes should experience reduced tail latency during periods of network congestion.\nProcesses can benefit from a smoother and more standard distribution for network response times.\nTopics\nHow ENA Express works\nSupported instance types for ENA Express\nPrerequisites for Linux instances\nTune performance for ENA Express settings on Linux instances\nReview ENA Express settings for your EC2 instance\nConfigure ENA Express settings for your EC2 instance\nHow ENA Express works\nENA Express is powered by AWS Scalable Reliable Datagram (SRD) technology. It distributes packets for each network flow across different AWS network paths, and dynamically adjusts distribution when it detects signs of congestion. It also manages packet reordering on the receiving end.\nTo ensure that ENA Express can manage network traffic as intended, sending and receiving instances and the communication between them must meet all of the following requirements:\nBoth sending and receiving instance types are supported. See the Supported instance types for ENA Express table for more information.\nBoth sending and receiving instances must have ENA Express configured. If there are differences in the configuration, you can run into situations where traffic defaults to standard ENA transmission. The following scenario shows what can happen.\nScenario: Differences in configuration\nInstance ENA Express Enabled UDP uses ENA Express\nInstance 1 Yes Yes\nInstance 2 Yes No\nIn this case, TCP traffic between the two instances can use ENA Express, as both instances have enabled it. However, since one of the instances does not use ENA Express for UDP traffic, communication between these two instances over UDP uses standard ENA transmission.\nThe sending and receiving instances must run in the same Availability Zone.\nThe network path between the instances must not include middleware boxes. ENA Express doesn't currently support middleware boxes.\n(Linux instances only) To utilize full bandwidth potential, use driver version 2.2.9 or higher.\n(Linux instances only) To produce metrics, use driver version 2.8 or higher.\nIf any requirement is unmet, the instances use the standard TCP/UDP protocol but without SRD to communicate.\nTo ensure that your instance network driver is configured for optimum performance, review the recommended best practices for ENA drivers. These best practices apply to ENA Express, as well. For more information, see the ENA Linux Driver Best Practices and Performance Optimization Guide on the GitHub website.\nNote\nAmazon EC2 refers to the relationship between an instance and a network interface that's attached to it as an attachment. ENA Express settings apply to the attachment. If the network interface is detached from the instance, the attachment no longer exists, and the ENA Express settings that applied to it are no longer in force. The same is true when an instance is terminated, even if the network interface remains.\nAfter you've enabled ENA Express for the network interface attachments on both the sending instance and the receiving instance, you can use ENA Express metrics to help ensure that your instances take full advantage of the performance improvements that SRD technology provides. For more information about ENA Express metrics, see Metrics for ENA Express.\nSupported instance types for ENA Express\nThe following tabs show instance types that support ENA Express.\nGeneral purpose\nCompute optimized\nMemory optimized\nAccelerated computing\nStorage optimized\nInstance type Architecture\nm6a.12xlarge x86_64\nm6a.16xlarge x86_64\nm6a.24xlarge x86_64\nm6a.32xlarge x86_64\nm6a.48xlarge x86_64\nm6a.metal x86_64\nm6i.8xlarge x86_64\nm6i.12xlarge x86_64\nm6i.16xlarge x86_64\nm6i.24xlarge x86_64\nm6i.32xlarge x86_64\nm6i.metal x86_64\nm6id.8xlarge x86_64\nm6id.12xlarge x86_64\nm6id.16xlarge x86_64\nm6id.24xlarge x86_64\nm6id.32xlarge x86_64\nm6id.metal x86_64\nm6idn.32xlarge x86_64\nm6idn.metal x86_64\nm6in.32xlarge x86_64\nm6in.metal x86_64\nm7a.12xlarge x86_64\nm7a.16xlarge x86_64\nm7a.24xlarge x86_64\nm7a.32xlarge x86_64\nm7a.48xlarge x86_64\nm7a.metal-48xl x86_64\nm7g.12xlarge arm64\nm7g.16xlarge arm64\nm7g.metal arm64\nm7gd.12xlarge arm64\nm7gd.16xlarge arm64\nm7gd.metal arm64\nm7i.12xlarge x86_64\nm7i.16xlarge x86_64\nm7i.24xlarge x86_64\nm7i.48xlarge x86_64\nm7i.metal-24xl x86_64\nm7i.metal-48xl x86_64\nm8g.12xlarge arm64\nm8g.16xlarge arm64\nm8g.24xlarge arm64\nm8g.48xlarge arm64\nm8g.metal-24xl arm64\nm8g.metal-48xl arm64\nPrerequisites for Linux instances\nTo ensure that ENA Express can operate effectively, update the settings for your Linux instance as follows.\nIf your instance uses jumbo frames, run the following command to set your maximum transmission unit (MTU) to 8900.\n[ec2-user ~]$ sudo ip link set dev eth0 mtu 8900\nIncrease the receiver (Rx) ring size, as follows:\n[ec2-user ~]$ ethtool -G device rx 8192\nTo maximize ENA Express bandwidth, configure your TCP queue limits as follows:\nSet the TCP small queue limit to 1MB or higher. This increases the amount of data that's queued for transmission on a socket.\nsudo sh -c 'echo 1048576 > /proc/sys/net/ipv4/tcp_limit_output_bytes'\nDisable byte queue limits on the eth device if they're enabled for your Linux distribution. This increases data queued for transmission for the device queue.\nsudo sh -c 'for txq in /sys/class/net/eth0/queues/tx-*; do echo max > ${txq}/byte_queue_limits/limit_min; done'\nNote\nThe ENA driver for the Amazon Linux distribution disables byte queue limits by default.\nTune performance for ENA Express settings on Linux instances\nTo check your Linux instance configuration for optimal ENA Express performance, you can run the following script that's available on the Amazon GitHub repository:\nhttps://github.com/amzn/amzn-ec2-ena-utilities/blob/main/ena-express/check-ena-express-settings.sh\nThe script runs a series of tests and suggests both recommended and required configuration changes."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ena-express-list-view.html",
        "content": "This section covers how to view ENA Express information from the AWS Management Console or from the AWS CLI. For more information, choose the tab that matches the method you'll use.\nConsole\nAWS CLI\nPowerShell\nThis tab covers how to find information about your current ENA Express settings in the AWS Management Console.\nView settings from the Network interface list\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigation pane, choose Network interfaces.\nSelect a network interface to see the details for that instance. You can choose the Network interface ID link to open the detail page, or you can select the checkbox on the left side of the list to view details in the detail pane at the bottom of the page.\nIn the Network interface attachment section on the the Details tab or detail page, review settings for ENA Express and ENA Express UDP.\nView settings from the Instances list\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigation pane, choose Instances.\nSelect an instance to see the details for that instance. You can choose the Instance ID link to open the detail page, or you can select the checkbox on the left side of the list to view details in the detail pane at the bottom of the page.\nIn the Network interfaces section on the Networking tab, scroll right to review settings for ENA Express and ENA Express UDP."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ena-express-configure.html",
        "content": "You can configure ENA Express for supported EC2 instance types without needing to install any additional software.\nThis section covers how to configure ENA Express from the AWS Management Console or from the AWS CLI. For more information, choose the tab that matches the method you'll use.\nConsole\nAWS CLI\nPowerShell\nThis tab covers how to manage ENA Express settings for network interfaces that are attached to an instance.\nManage ENA Express from the Network interface list\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigation pane, choose Network interfaces.\nSelect a network interface that is attached to an instance. You can choose the Network interface ID link to open the detail page, or you can select the checkbox on the left side of the list.\nChoose Manage ENA Express from the Action menu at the top right side of the page. This opens the Manage ENA Express dialog, with the selected network interface ID and current settings displayed.\nNote\nIf the network interface you selected is not attached to an instance, this action does not appear in the menu.\nTo use ENA Express, select the Enable checkbox.\nWhen ENA Express is enabled, you can configure UDP settings. To use ENA Express UDP, select the Enable checkbox.\nTo save your settings, choose Save.\nManage ENA Express from the Instance list\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigation pane, choose Instances.\nSelect the instance that you want to manage. You can choose the Instance ID to open the detail page, or you can select the checkbox on the left side of the list.\nSelect the Network interface to configure for your instance.\nChoose Manage ENA Express from the Action menu at the top right side of the page.\nTo configure ENA Express for a network interface that's attached to your instance, select it from the Network interface list.\nTo use ENA Express for the selected network interface attachment, select the Enable checkbox.\nWhen ENA Express is enabled, you can configure UDP settings. To use ENA Express UDP, select the Enable checkbox.\nTo save your settings, choose Save.\nConfigure ENA Express when you attach a network interface to an EC2 instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigation pane, choose Network interfaces.\nSelect a network interface that is not attached to an instance (Status is Available). You can choose the Network interface ID link to open the detail page, or you can select the checkbox on the left side of the list.\nSelect the Instance that you'll attach to.\nTo use ENA Express after you attach the network interface to the instance, select the Enable checkbox.\nWhen ENA Express is enabled, you can configure UDP settings. To use ENA Express UDP, select the Enable checkbox.\nTo attach the network interface to the instance and save your ENA Express settings, choose Attach.\nConfigure ENA Express at launch\nYou can use one of the following methods to configure ENA Express directly when you launch an instance. The specified links refer you to the AWS Management Console instructions for these methods.\nLaunch instance wizard: You can configure ENA Express at launch with the launch instance wizard. For more information, see Advanced network configuration in the Network settings for the launch instance wizard.\nLaunch template: You can configure ENA Express at launch when you use a launch template. For more information, see the Create an Amazon EC2 launch template page, then expand the Network settings section and review the Advanced network configuration."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/sriov-networking.html",
        "content": "For Xen-based instances, the Intel 82599 Virtual Function (VF) interface provides enhanced networking capabilities. The interface uses the Intel ixgbevf driver.\nThe following tabs show how to verify the network adapter driver that's installed for your instance operating system.\nLinux\nWindows\nLinux network interface driver\nUse the following command to verify that the module is being used on a particular interface, substituting the interface name that you want to check. If you are using a single interface (default), this is eth0. If the operating system supports predictable network names, this could be a name like ens5.\nIn the following example, the ixgbevf module is not loaded, because the listed driver is vif.\n[ec2-user ~]$ ethtool -i eth0\ndriver: vif\nversion:\nfirmware-version:\nbus-info: vif-0\nsupports-statistics: yes\nsupports-test: no\nsupports-eeprom-access: no\nsupports-register-dump: no\nsupports-priv-flags: no\nIn this example, the ixgbevf module is loaded. This instance has enhanced networking properly configured.\n[ec2-user ~]$ ethtool -i eth0\ndriver: ixgbevf\nversion: 4.0.3\nfirmware-version: N/A\nbus-info: 0000:00:03.0\nsupports-statistics: yes\nsupports-test: yes\nsupports-eeprom-access: no\nsupports-register-dump: yes\nsupports-priv-flags: no\nContents\nPrepare your instance for enhanced networking\nTest whether enhanced networking is enabled\nEnable enhanced networking on your instance\nTroubleshoot connectivity issues\nPrepare your instance for enhanced networking\nTo prepare for enhanced networking using the Intel 82599 VF interface, set up your instance as follows:\nVerify that the instance type is one of the following: C3, C4, D2, I2, M4 (excluding m4.16xlarge), and R3.\nEnsure that the instance has internet connectivity.\nIf you have important data on the instance that you want to preserve, you should back that data up now by creating an AMI from your instance. Updating kernels and kernel modules, as well as enabling the sriovNetSupport attribute, might render incompatible instances or operating systems unreachable. If you have a recent backup, your data will still be retained if this happens.\nLinux instances \u2013 Launch the instance from an HVM AMI using Linux kernel version of 2.6.32 or later. The latest Amazon Linux HVM AMIs have the modules required for enhanced networking installed and have the required attributes set. Therefore, if you launch an Amazon EBS\u2013backed, enhanced networking\u2013supported instance using a current Amazon Linux HVM AMI, enhanced networking is already enabled for your instance.\nWarning\nEnhanced networking is supported only for HVM instances. Enabling enhanced networking with a PV instance can make it unreachable. Setting this attribute without the proper module or module version can also make your instance unreachable.\nWindows instances \u2013 Launch the instance from a 64-bit HVM AMI. You can't enable enhanced networking on Windows Server 2008. Enhanced networking is already enabled for Windows Server 2012 R2 and Windows Server 2016 and later AMIs. Windows Server 2012 R2 includes Intel driver 1.0.15.3 and we recommend that you upgrade that driver to the latest version using the Pnputil.exe utility.\nUse AWS CloudShell from the AWS Management Console, or install and configure the AWS CLI or the AWS Tools for Windows PowerShell on any computer you choose, preferably your local desktop or laptop. For more information, see Access Amazon EC2 or the AWS CloudShell User Guide. Enhanced networking cannot be managed from the Amazon EC2 console.\nTest whether enhanced networking is enabled\nVerify that the sriovNetSupport attribute is set.\nInstance attribute (sriovNetSupport)\nTo check whether an instance has the enhanced networking sriovNetSupport attribute set, use one of the following commands. If the attribute is set, the value is simple.\ndescribe-instance-attribute (AWS CLI)\naws ec2 describe-instance-attribute --instance-id instance_id --attribute sriovNetSupport\nGet-EC2InstanceAttribute (AWS Tools for Windows PowerShell)\nGet-EC2InstanceAttribute -InstanceId instance-id -Attribute sriovNetSupport\nImage attribute (sriovNetSupport)\nTo check whether an AMI already has the enhanced networking sriovNetSupport attribute set, use one of the following commands. If the attribute is set, the value is simple.\ndescribe-images (AWS CLI)\naws ec2 describe-images --image-id ami_id --query \"Images[].SriovNetSupport\"\nGet-EC2Image (AWS Tools for Windows PowerShell)\n(Get-EC2Image -ImageId ami-id).SriovNetSupport\nEnable enhanced networking on your instance\nThe procedure that you use depends on the operating system of the instance.\nWarning\nThere is no way to disable the enhanced networking attribute after you've enabled it.\nAmazon Linux\nUbuntu\nOther Linux distributions\nWindows\nTroubleshoot connectivity issues\nIf you lose connectivity while enabling enhanced networking, the ixgbevf module might be incompatible with the kernel. Try installing the version of the ixgbevf module included with the distribution of Linux for your instance.\nIf you enable enhanced networking for a PV instance or AMI, this can make your instance unreachable.\nFor more information, see How do I turn on and configure enhanced networking on my EC2 instances?"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-network-performance-ena.html",
        "content": "The Elastic Network Adapter (ENA) driver publishes network performance metrics from the instances where they are enabled. You can use these metrics to troubleshoot instance performance issues, choose the right instance size for a workload, plan scaling activities proactively, and benchmark applications to determine whether they maximize the performance available on an instance.\nAmazon EC2 defines network maximums at the instance level to ensure a high-quality networking experience, including consistent network performance across instance sizes. AWS provides maximums for the following for each instance:\nBandwidth capability \u2013 Each EC2 instance has a maximum bandwidth for aggregate inbound and outbound traffic, based on instance type and size. Some instances use a network I/O credit mechanism to allocate network bandwidth based on average bandwidth utilization. Amazon EC2 also has maximum bandwidth for traffic to AWS Direct Connect and the internet. For more information, see Amazon EC2 instance network bandwidth.\nPacket-per-second (PPS) performance \u2013 Each EC2 instance has a maximum PPS performance, based on instance type and size.\nConnections tracked \u2013 The security group tracks each connection established to ensure that return packets are delivered as expected. There is a maximum number of connections that can be tracked per instance. For more information, see Amazon EC2 security group connection tracking\nLink-local service access \u2013 Amazon EC2 provides a maximum PPS per network interface for traffic to services such as the DNS service, the Instance Metadata Service, and the Amazon Time Sync Service.\nWhen the network traffic for an instance exceeds a maximum, AWS shapes the traffic that exceeds the maximum by queueing and then dropping network packets. You can monitor when traffic exceeds a maximum using the network performance metrics. These metrics inform you, in real time, of impact to network traffic and possible network performance issues.\nContents\nRequirements\nMetrics for the ENA driver\nView the network performance metrics for your instance\nMetrics for ENA Express\nNetwork performance metrics with the DPDK driver for ENA\nMetrics on instances running FreeBSD\nRequirements\nLinux instances\nInstall ENA driver version 2.2.10 or later. To verify the installed version, use the ethtool command. In the following example, the version meets the minimum requirement.\n[ec2-user ~]$ ethtool -i eth0 | grep version\nversion: 2.2.10\nTo upgrade your ENA driver, see Enhanced networking.\nTo import these metrics to Amazon CloudWatch, install the CloudWatch agent. For more information, see Collect network performance metrics in the Amazon CloudWatch User Guide.\nTo support conntrack_allowance_available metric, install ENA driver version 2.8.1.\nWindows instances\nInstall ENA driver version 2.2.2 or later. To verify the installed version, use Device Manager as follows.\nOpen Device Manager by running devmgmt.msc.\nExpand Network Adapters.\nChoose Amazon Elastic Network Adapter, Properties.\nOn the Driver tab, locate Driver Version.\nTo upgrade your ENA driver, see Enhanced networking.\nTo import these metrics to Amazon CloudWatch, install the CloudWatch agent. For more information, see Collect advanced network metrics in the Amazon CloudWatch User Guide.\nMetrics for the ENA driver\nThe ENA driver delivers the following metrics to the instance in real time. They provide the cumulative number of packets queued or dropped on each network interface since the last driver reset.\nMetric Description Supported on\nbw_in_allowance_exceeded\nThe number of packets queued or dropped because the inbound aggregate bandwidth exceeded the maximum for the instance.\nAll instance types\nbw_out_allowance_exceeded\nThe number of packets queued or dropped because the outbound aggregate bandwidth exceeded the maximum for the instance.\nAll instance types\nconntrack_allowance_exceeded\nThe number of packets dropped because connection tracking exceeded the maximum for the instance and new connections could not be established. This can result in packet loss for traffic to or from the instance.\nAll instance types\nconntrack_allowance_available The number of tracked connections that can be established by the instance before hitting the Connections Tracked allowance of that instance type.\nNitro-based instances only\nlinklocal_allowance_exceeded\nThe number of packets dropped because the PPS of the traffic to local proxy services exceeded the maximum for the network interface. This impacts traffic to the DNS service, the Instance Metadata Service, and the Amazon Time Sync Service.\nAll instance types\npps_allowance_exceeded\nThe number of packets queued or dropped because the bidirectional PPS exceeded the maximum for the instance. This limit also counts Egress Fragment drops that exceed 1024 PPS per ENI.\nAll instance types\nView the network performance metrics for your instance\nThe procedure that you use depends on the operating system of the instance.\nLinux instances\nWindows instances\nMetrics for ENA Express\nENA Express is powered by AWS Scalable Reliable Datagram (SRD) technology. SRD is a high performance network transport protocol that uses dynamic routing to increase throughput and minimize tail latency. If you've enabled ENA Express for the network interface attachments on both the sending instance and receiving instance, you can use ENA Express metrics to help ensure that your instances take full advantage of the performance improvements that SRD technology provides. For example:\nEvaluate your resources to ensure that they have sufficient capacity to establish more SRD connections.\nIdentify where there are potential issues that prevent eligible outgoing packets from using SRD.\nCalculate the percentage of outgoing traffic that uses SRD for the instance.\nCalculate the percentage of incoming traffic that uses SRD for the instance.\nNote\nTo produce metrics, use driver version 2.8 or higher.\nTo see a list of metrics for your Linux instance that's filtered for ENA Express, run the following ethtool command for your network interface (shown here as eth0). Take note of the value of the ena_srd_mode metric.\n[ec2-user ~]$ ethtool -S eth0 | grep ena_srd\nNIC statistics:\n ena_srd_mode: 1\n ena_srd_tx_pkts: 0\n ena_srd_eligible_tx_pkts: 0\n ena_srd_rx_pkts: 0\n ena_srd_resource_utilization: 0\nThe following metrics are available for all instances that have ENA Express enabled.\nena_srd_mode\nDescribes which ENA Express features are enabled. Values are as follows:\n0 = ENA Express off, UDP off\n1 = ENA Express on, UDP off\n2 = ENA Express off, UDP on\nNote\nThis only happens when ENA Express was originally enabled, and UDP was configured to use it. The prior value is retained for UDP traffic.\n3 = ENA Express on, UDP on\nena_srd_eligible_tx_pkts\nThe number of network as follows:\nBoth sending and receiving instance types are supported. See the Supported instance types for ENA Express table for more information.\nBoth sending and receiving instances must have ENA Express configured.\nThe sending and receiving instances must run in the same Availability Zone.\nThe network path between the instances must not include middleware boxes. ENA Express doesn't currently support middleware boxes.\nNote\nThe ENA Express eligibility metric covers source and destination requirements, and the network between the two endpoints. Eligible packets can still be disqualified after they\u2019ve already been counted. For example, if an eligible packet is over the maximum transmission unit (MTU) limit, it falls back to standard ENA transmission, though the packet is still reflected as eligible in the counter.\nena_srd_tx_pkts\nThe number of SRD packets transmitted within a given time period.\nena_srd_rx_pkts\nThe number of SRD packets received within a given time period.\nena_srd_resource_utilization\nThe percentage of the maximum allowed memory utilization for concurrent SRD connections that the instance has consumed.\nTo confirm if packet transmission is using SRD, you can compare the number of eligible packets (ena_srd_eligible_tx_pkts metric) to the number of SRD packets transmitted (ena_srd_tx_pkts metric) during a given time period.\nEgress traffic (outgoing packets)\nTo ensure that your egress traffic uses SRD as expected, compare the number of SRD eligible packets (ena_srd_eligible_tx_pkts) with the number of SRD packets sent (ena_srd_tx_pkts) over a given time period.\nSignificant differences between the number of eligible packets and the number of SRD packets sent are often caused by resource utilization issues. When the network card attached to the instance has used up its maximum resources, or if packets are over the MTU limit, eligible packets are not able to transmit via SRD, and must fall back to standard ENA transmission. Packets can also fall into this gap during live migrations or live server updates. Additional troubleshooting is required to determine the root cause.\nNote\nYou can ignore occasional minor differences between the number of eligible packets and the number of SRD packets. This can happen when your instance establishes a connection to another instance for SRD traffic, for example.\nTo find out what percentage of your total egress traffic over a given time period uses SRD, compare the number of SRD packets sent (ena_srd_tx_pkts) to the total number of packets sent for the instance (NetworkPacketOut) during that time.\nIngress traffic (incoming packets)\nTo find out what percentage of your ingress traffic uses SRD, compare the number of SRD packets received (ena_srd_rx_pkts) over a given time period to the total number of packets received for the instance (NetworkPacketIn) during that time.\nResource utilization\nResource utilization is based on the number of concurrent SRD connections a single instance can hold at a given time. The resource utilization metric (ena_srd_resource_utilization) keeps track of your current utilization for the instance. As utilization approaches 100%, you can expect to see performance issues. ENA Express falls back from SRD to standard ENA transmission, and the possibility of dropped packets increases. High resource utilization is a sign that it\u2019s time to scale the instance out to improve network performance.\nNote\nWhen the network traffic for an instance exceeds a maximum, AWS shapes the traffic that exceeds the maximum by queueing and then dropping network packets.\nPersistence\nEgress and ingress metrics accrue while ENA Express is enabled for the instance. Metrics stop accruing if ENA Express is deactivated, but persist as long as the instance is still running. Metrics reset if the instance reboots or is terminated, or if the network interface is detached from the instance.\nNetwork performance metrics with the DPDK driver for ENA\nThe ENA driver version 2.2.0 and later supports network metrics reporting. DPDK 20.11 includes the ENA driver 2.2.0 and is the first DPDK version to support this feature.\nYou can use an example application to view DPDK statistics. To start an interactive version of the example application, run the following command.\n./app/dpdk-testpmd -- -i\nWithin this interactive session, you can enter a command to retrieve extended statistics for a port. The following example command retrieves the statistics for port 0.\nshow port xstats 0\nThe following is an example of an interactive session with the DPDK example application.\n[root@ip-192.0.2.0 build]# ./app/dpdk-testpmd -- -i\n        EAL: Detected 4 lcore(s)\n        EAL: Detected 1 NUMA nodes\n        EAL: Multi-process socket /var/run/dpdk/rte/mp_socket\n        EAL: Selected IOVA mode 'PA'\n        EAL: Probing VFIO support...\n        EAL:   Invalid NUMA socket, default to 0\n        EAL:   Invalid NUMA socket, default to 0\n        EAL: Probe PCI driver: net_ena (1d0f:ec20) device: 0000:00:06.0\n(socket 0)\n        EAL: No legacy callbacks, legacy socket not created\n        Interactive-mode selected\n    \n        Port 0: link state change event\n        testpmd: create a new mbuf pool <mb_pool_0>: n=171456,\nsize=2176, socket=0\n        testpmd: preferred mempool ops selected: ring_mp_mc\n    \n        Warning! port-topology=paired and odd forward ports number, the\nlast port will pair with itself.\n    \n        Configuring Port 0 (socket 0)\n        Port 0: 02:C7:17:A2:60:B1\n        Checking link statuses...\n        Done\n        Error during enabling promiscuous mode for port 0: Operation\nnot supported - ignore\n        testpmd> show port xstats 0\n        ###### NIC extended statistics for port 0\n        rx_good_packets: 0\n        tx_good_packets: 0\n        rx_good_bytes: 0\n        tx_good_bytes: 0\n        rx_missed_errors: 0\n        rx_errors: 0\n        tx_errors: 0\n        rx_mbuf_allocation_errors: 0\n        rx_q0_packets: 0\n        rx_q0_bytes: 0\n        rx_q0_errors: 0\n        tx_q0_packets: 0\n        tx_q0_bytes: 0\n        wd_expired: 0\n        dev_start: 1\n        dev_stop: 0\n        tx_drops: 0\n        bw_in_allowance_exceeded: 0\n        bw_out_allowance_exceeded: 0\n        pps_allowance_exceeded: 0\n        conntrack_allowance_exceeded: 0\n        linklocal_allowance_exceeded: 0\n        rx_q0_cnt: 0\n        rx_q0_bytes: 0\n        rx_q0_refill_partial: 0\n        rx_q0_bad_csum: 0\n        rx_q0_mbuf_alloc_fail: 0\n        rx_q0_bad_desc_num: 0\n        rx_q0_bad_req_id: 0\n        tx_q0_cnt: 0\n        tx_q0_bytes: 0\n        tx_q0_prepare_ctx_err: 0\n        tx_q0_linearize: 0\n        tx_q0_linearize_failed: 0\n        tx_q0_tx_poll: 0\n        tx_q0_doorbells: 0\n        tx_q0_bad_req_id: 0\n        tx_q0_available_desc: 1023\n        testpmd>\nFor more information about the example application and using it to retrieve extended statistics. see Testpmd Application User Guide in the DPDK documentation.\nMetrics on instances running FreeBSD\nStarting with version 2.3.0, the ENA FreeBSD driver supports collecting network performance metrics on instances running FreeBSD. To enable the collection of FreeBSD metrics, enter the following command and set interval to a value between 1 and 3600. This specifies how often, in seconds, to collect FreeBSD metrics.\nsysctl dev.ena.network_interface.eni_metrics.sample_interval=interval\nFor example, the following command sets the driver to collect FreeBSD metrics on network interface 1 every 10 seconds:\nsysctl dev.ena.1.eni_metrics.sample_interval=10\nTo turn off the collection of FreeBSD metrics, you can run the preceding command and specify 0 as the interval.\nAfter you enable collecting FreeBSD metrics, you can retrieve the latest set of collected metrics by running the following command.\nsysctl dev.ena.network_interface.eni_metrics"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/troubleshooting-ena.html",
        "content": "The Elastic Network Adapter (ENA) is designed to improve operating system health and reduce the chances of long-term disruption because of unexpected hardware behavior and or failures. The ENA architecture keeps device or driver failures as transparent to the system as possible. This topic provides troubleshooting information for ENA.\nIf you are unable to connect to your instance, start with the Troubleshoot connectivity issues section.\nIf you experience performance degradation after migrating to a sixth generation instance type, see the article What do I need to do before I migrate my EC2 instance to a sixth generation instance to make sure that I get maximum network performance?\nIf you are able to connect to your instance, you can gather diagnostic information by using the failure detection and recovery mechanisms that are covered in the later sections of this topic.\nContents\nTroubleshoot connectivity issues\nKeep-alive mechanism\nRegister read timeout\nStatistics\nDriver error logs in syslog\nSub-optimal configuration notifications\nTroubleshoot connectivity issues\nIf you lose connectivity while enabling enhanced networking, the ena module might be incompatible with your instance's current running kernel. This can happen if you install the module for a specific kernel version (without dkms, or with an improperly configured dkms.conf file) and then your instance kernel is updated. If the instance kernel that is loaded at boot time does not have the ena module properly installed, your instance will not recognize the network adapter and your instance becomes unreachable.\nIf you enable enhanced networking for a PV instance or AMI, this can also make your instance unreachable.\nIf your instance becomes unreachable after enabling enhanced networking with ENA, you can disable the enaSupport attribute for your instance and it will fall back to the stock network adapter.\nTo disable enhanced networking with ENA (EBS-backed instances)\nFrom your local computer, stop the instance using the Amazon EC2 console or one of the following commands: stop-instances (AWS CLI), Stop-EC2Instance (AWS Tools for Windows PowerShell).\nTip\nIf you are using an instance store-backed instance, you can't stop the instance. Instead, skip to To disable enhanced networking with ENA (instance store-baked instances.\nFrom your local computer, disable the enhanced networking attribute using the following command.\nmodify-instance-attribute (AWS CLI)\naws ec2 modify-instance-attribute --instance-id instance_id --no-ena-support\nFrom your local computer, start the instance using the Amazon EC2 console or one of the following commands: start-instances (AWS CLI), Start-EC2Instance (AWS Tools for Windows PowerShell).\n(Optional) Connect to your instance and try reinstalling the ena module with your current kernel version by following the steps in Enable enhanced networking with ENA on your EC2 instances.\nTo disable enhanced networking with ENA (instance store-backed instances)\nIf your instance is an instance store-backed instance, create a new AMI as described in Create an instance store-backed AMI. Be sure to disable the enhanced networking enaSupport attribute when you register the AMI.\nregister-image (AWS CLI)\naws ec2 register-image --no-ena-support ...\nRegister-EC2Image (AWS Tools for Windows PowerShell)\nPS C:\\> Register-EC2Image -EnaSupport $false ...\nKeep-alive mechanism\nThe ENA device posts keep-alive events at a fixed rate (usually once every second). The ENA driver implements a watchdog mechanism, which checks for the presence of these keep-alive messages. If a message or messages are present, the watchdog is rearmed, otherwise the driver concludes that the device experienced a failure and then does the following:\nDumps its current statistics to syslog\nResets the ENA device\nResets the ENA driver state\nThe above reset procedure may result in some traffic loss for a short period of time (TCP connections should be able to recover), but should not otherwise affect the user.\nThe ENA device may also indirectly request a device reset procedure, by not sending a keep-alive notification, for example, if the ENA device reaches an unknown state after loading an irrecoverable configuration.\nThe following is an example of the reset procedure:\n[18509.800135] ena 0000:00:07.0 eth1: Keep alive watchdog timeout. // The watchdog process initiates a reset\n[18509.815244] ena 0000:00:07.0 eth1: Trigger reset is on  \n[18509.825589] ena 0000:00:07.0 eth1: tx_timeout: 0 // The driver logs the current statistics\n[18509.834253] ena 0000:00:07.0 eth1: io_suspend: 0\n[18509.842674] ena 0000:00:07.0 eth1: io_resume: 0\n[18509.850275] ena 0000:00:07.0 eth1: wd_expired: 1\n[18509.857855] ena 0000:00:07.0 eth1: interface_up: 1\n[18509.865415] ena 0000:00:07.0 eth1: interface_down: 0\n[18509.873468] ena 0000:00:07.0 eth1: admin_q_pause: 0\n[18509.881075] ena 0000:00:07.0 eth1: queue_0_tx_cnt: 0\n[18509.888629] ena 0000:00:07.0 eth1: queue_0_tx_bytes: 0\n[18509.895286] ena 0000:00:07.0 eth1: queue_0_tx_queue_stop: 0\n.......\n........\n[18511.280972] ena 0000:00:07.0 eth1: free uncompleted tx skb qid 3 idx 0x7 // At the end of the down process, the driver discards incomplete packets.\n[18511.420112] [ENA_COM: ena_com_validate_version] ena device version: 0.10 //The driver begins its up process\n[18511.420119] [ENA_COM: ena_com_validate_version] ena controller version: 0.0.1 implementation version 1\n[18511.420127] [ENA_COM: ena_com_admin_init] ena_defs : Version:[b9692e8] Build date [Wed Apr  6 09:54:21 IDT 2016]\n[18512.252108] ena 0000:00:07.0: Device watchdog is Enabled\n[18512.674877] ena 0000:00:07.0: irq 46 for MSI/MSI-X\n[18512.674933] ena 0000:00:07.0: irq 47 for MSI/MSI-X\n[18512.674990] ena 0000:00:07.0: irq 48 for MSI/MSI-X\n[18512.675037] ena 0000:00:07.0: irq 49 for MSI/MSI-X\n[18512.675085] ena 0000:00:07.0: irq 50 for MSI/MSI-X\n[18512.675141] ena 0000:00:07.0: irq 51 for MSI/MSI-X\n[18512.675188] ena 0000:00:07.0: irq 52 for MSI/MSI-X\n[18512.675233] ena 0000:00:07.0: irq 53 for MSI/MSI-X\n[18512.675279] ena 0000:00:07.0: irq 54 for MSI/MSI-X\n[18512.772641] [ENA_COM: ena_com_set_hash_function] Feature 10 isn't supported\n[18512.772647] [ENA_COM: ena_com_set_hash_ctrl] Feature 18 isn't supported\n[18512.775945] ena 0000:00:07.0: Device reset completed successfully // The reset process is complete\nRegister read timeout\nThe ENA architecture suggests a limited usage of memory mapped I/O (MMIO) read operations. MMIO registers are accessed by the ENA device driver only during its initialization procedure.\nIf the driver logs (available in dmesg output) indicate failures of read operations, this may be caused by an incompatible or incorrectly compiled driver, a busy hardware device, or hardware failure.\nIntermittent log entries that indicate failures on read operations should not be considered an issue; the driver will retry them in this case. However, a sequence of log entries containing read failures indicate a driver or hardware problem.\nBelow is an example of driver log entry indicating a read operation failure due to a timeout:\n[ 47.113698] [ENA_COM: ena_com_reg_bar_read32] reading reg failed for timeout. expected: req id[1] offset[88] actual: req id[57006] offset[0] \n[ 47.333715] [ENA_COM: ena_com_reg_bar_read32] reading reg failed for timeout. expected: req id[2] offset[8] actual: req id[57007] offset[0] \n[ 47.346221] [ENA_COM: ena_com_dev_reset] Reg read32 timeout occurred\nStatistics\nIf you experience insufficient network performance or latency issues, you should retrieve the device statistics and examine them. These statistics can be obtained using ethtool as follows.\n[ec2-user ~]$ ethtool -S ethN\nNIC statistics:\n tx_timeout: 0\n suspend: 0\n resume: 0\n wd_expired: 0\n interface_up: 1\n interface_down: 0\n admin_q_pause: 0\n bw_in_allowance_exceeded: 0\n bw_out_allowance_exceeded: 0\n pps_allowance_exceeded: 0\n conntrack_allowance_available: 450878\n conntrack_allowance_exceeded: 0\n linklocal_allowance_exceeded: 0\n queue_0_tx_cnt: 4329\n queue_0_tx_bytes: 1075749\n queue_0_tx_queue_stop: 0\n ...\nThe following command output parameters are described below:\ntx_timeout: N\nThe number of times that the Netdev watchdog was activated.\nsuspend: N\nThe number of times the driver performed a suspend operation.\nresume: N\nThe number of times the driver performed a resume operation.\nwd_expired: N\nThe number of times that the driver did not receive the keep-alive event in the preceding three seconds.\ninterface_up: N\nThe number of times that the ENA interface was brought up.\ninterface_down: N\nThe number of times that the ENA interface was brought down.\nadmin_q_pause: N\nThe number of times the admin queue was not found in a running state.\nbw_in_allowance_exceeded: N\nThe number of packets queued or dropped because the inbound aggregate bandwidth exceeded the maximum for the instance.\nbw_out_allowance_exceeded: N\nThe number of packets queued or dropped because the outbound aggregate bandwidth exceeded the maximum for the instance.\npps_allowance_exceeded: N\nThe number of packets queued or dropped because the bidirectional PPS exceeded the maximum for the instance. This limit also counts Egress Fragment drops that exceed 1024 PPS per ENI.\nconntrack_allowance_available: N\nThe number of tracked connections that can be established by the instance before hitting the Connections Tracked allowance of that instance type. Only available for Nitro-based instances. Not supported with FreeBSD instances or DPDK environments.\nconntrack_allowance_exceeded: N\nThe number of packets dropped because connection tracking exceeded the maximum for the instance and new connections could not be established. This can result in packet loss for traffic to or from the instance.\nlinklocal_allowance_exceeded: N\nThe number of packets dropped because the PPS of the traffic to local proxy services exceeded the maximum for the network interface. This impacts traffic to the DNS service, the Instance Metadata Service, and the Amazon Time Sync Service.\nqueue_N_tx_cnt: N\nThe number of transmitted packets for this queue.\nqueue_N_tx_bytes: N\nThe number of transmitted bytes for this queue.\nqueue_N_tx_queue_stop: N\nThe number of times that queue N was full and stopped.\nqueue_N_tx_queue_wakeup: N\nThe number of times that queue N resumed after being stopped.\nqueue_N_tx_dma_mapping_err: N\nDirect memory access error count. If this value is not 0, it indicates low system resources.\nqueue_N_tx_linearize: N\nThe number of times SKB linearization was attempted for this queue.\nqueue_N_tx_linearize_failed: N\nThe number of times SKB linearization failed for this queue.\nqueue_N_tx_napi_comp: N\nThe number of times the napi handler called napi_complete for this queue.\nqueue_N_tx_tx_poll: N\nThe number of times the napi handler was scheduled for this queue.\nqueue_N_tx_doorbells: N\nThe number of transmission doorbells for this queue.\nqueue_N_tx_prepare_ctx_err: N\nThe number of times ena_com_prepare_tx failed for this queue.\nqueue_N_tx_bad_req_id: N\nInvalid req_id for this queue. The valid req_id is zero, minus the queue_size, minus 1.\nqueue_N_tx_llq_buffer_copy: N\nThe number of packets whose headers size are larger than llq entry for this queue.\nqueue_N_tx_missed_tx: N\nThe number of packets that were left uncompleted for this queue.\nqueue_N_tx_unmask_interrupt: N\nThe number of times the tx interrupt was unmasked for this queue.\nqueue_N_rx_cnt: N\nThe number of received packets for this queue.\nqueue_N_rx_bytes: N\nThe number of received bytes for this queue.\nqueue_N_rx_rx_copybreak_pkt: N\nThe number of times the rx queue received a packet that is less than the rx_copybreak packet size for this queue.\nqueue_N_rx_csum_good: N\nThe number of times the rx queue received a packet where the checksum was checked and was correct for this queue.\nqueue_N_rx_refil_partial: N\nThe number of times the driver did not succeed in refilling the empty portion of the rx queue with the buffers for this queue. If this value is not zero, it indicates low memory resources.\nqueue_N_rx_bad_csum: N\nThe number of times the rx queue had a bad checksum for this queue (only if rx checksum offload is supported).\nqueue_N_rx_page_alloc_fail: N\nThe number of time that page allocation failed for this queue. If this value is not zero, it indicates low memory resources.\nqueue_N_rx_skb_alloc_fail: N\nThe number of time that SKB allocation failed for this queue. If this value is not zero, it indicates low system resources.\nqueue_N_rx_dma_mapping_err: N\nDirect memory access error count. If this value is not 0, it indicates low system resources.\nqueue_N_rx_bad_desc_num: N\nToo many buffers per packet. If this value is not 0, it indicates the use of very small buffers.\nqueue_N_rx_bad_req_id: N\nThe req_id for this queue is not valid. The valid req_id is from [0, queue_size - 1 ].\nqueue_N_rx_empty_rx_ring: N\nThe number of times the rx queue was empty for this queue.\nqueue_N_rx_csum_unchecked: N\nThe number of times the rx queue received a packet whose checksum wasn't checked for this queue.\nqueue_N_rx_xdp_aborted: N\nThe number of times that an XDP packet was classified as XDP_ABORT.\nqueue_N_rx_xdp_drop: N\nThe number of times that an XDP packet was classified as XDP_DROP.\nqueue_N_rx_xdp_pass: N\nThe number of times that an XDP packet was classified as XDP_PASS.\nqueue_N_rx_xdp_tx: N\nThe number of times that an XDP packet was classified as XDP_TX.\nqueue_N_rx_xdp_invalid: N\nThe number of times that the XDP return code for the packet was not valid.\nqueue_N_rx_xdp_redirect: N\nThe number of times that an XDP packet was classified as XDP_REDIRECT.\nqueue_N_xdp_tx_cnt: N\nThe number of transmitted packets for this queue.\nqueue_N_xdp_tx_bytes: N\nThe number of transmitted bytes for this queue.\nqueue_N_xdp_tx_queue_stop: N\nThe number of times that this queue was full and stopped.\nqueue_N_xdp_tx_queue_wakeup: N\nThe number of times that this queue resumed after being stopped.\nqueue_N_xdp_tx_dma_mapping_err: N\nDirect memory access error count. If this value is not 0, it indicates low system resources.\nqueue_N_xdp_tx_linearize: N\nThe number of times XDP buffer linearization was attempted for this queue.\nqueue_N_xdp_tx_linearize_failed: N\nThe number of times XDP buffer linearization failed for this queue.\nqueue_N_xdp_tx_napi_comp: N\nThe number of times the napi handler called napi_complete for this queue.\nqueue_N_xdp_tx_tx_poll: N\nThe number of times the napi handler was scheduled for this queue.\nqueue_N_xdp_tx_doorbells: N\nThe number of transmission doorbells for this queue.\nqueue_N_xdp_tx_prepare_ctx_err: N\nThe number of times ena_com_prepare_tx failed for this queue. This value should always be zero; if not, see the driver logs.\nqueue_N_xdp_tx_bad_req_id: N\nThe req_id for this queue is not valid. The valid req_id is from [0, queue_size - 1 ].\nqueue_N_xdp_tx_llq_buffer_copy: N\nThe number of packets that had their headers copied using llq buffer copy for this queue.\nqueue_N_xdp_tx_missed_tx: N\nThe number of times a tx queue entry missed a completion timeout for this queue.\nqueue_N_xdp_tx_unmask_interrupt: N\nThe number of times the tx interrupt was unmasked for this queue.\nena_admin_q_aborted_cmd: N\nThe number of admin commands that were aborted. This usually happens during the auto-recovery procedure.\nena_admin_q_submitted_cmd: N\nThe number of admin queue doorbells.\nena_admin_q_completed_cmd: N\nThe number of admin queue completions.\nena_admin_q_out_of_space: N\nThe number of times that the driver tried to submit new admin command, but the queue was full.\nena_admin_q_no_completion: N\nThe number of times that the driver did not get an admin completion for a command.\nDriver error logs in syslog\nThe ENA driver writes log messages to syslog during system boot. You can examine these logs to look for errors if you are experiencing issues. Below is an example of information logged by the ENA driver in syslog during system boot, along with some annotations for select messages.\nJun  3 22:37:46 ip-172-31-2-186 kernel: [  478.416939] [ENA_COM: ena_com_validate_version] ena device version: 0.10\nJun  3 22:37:46 ip-172-31-2-186 kernel: [  478.420915] [ENA_COM: ena_com_validate_version] ena controller version: 0.0.1 implementation version 1\nJun  3 22:37:46 ip-172-31-2-186 kernel: [  479.256831] ena 0000:00:03.0: Device watchdog is Enabled\nJun  3 22:37:46 ip-172-31-2-186 kernel: [  479.672947] ena 0000:00:03.0: creating 8 io queues. queue size: 1024\nJun  3 22:37:46 ip-172-31-2-186 kernel: [  479.680885] [ENA_COM: ena_com_init_interrupt_moderation] Feature 20 isn't supported  // Interrupt moderation is not supported by the device\nJun  3 22:37:46 ip-172-31-2-186 kernel: [  479.691609] [ENA_COM: ena_com_get_feature_ex] Feature 10 isn't supported // RSS HASH function configuration is not supported by the device\nJun  3 22:37:46 ip-172-31-2-186 kernel: [  479.694583] [ENA_COM: ena_com_get_feature_ex] Feature 18 isn't supported //RSS HASH input source configuration is not supported by the device \nJun  3 22:37:46 ip-172-31-2-186 kernel: [  479.697433] [ENA_COM: ena_com_set_host_attributes] Set host attribute isn't supported\nJun  3 22:37:46 ip-172-31-2-186 kernel: [  479.701064] ena 0000:00:03.0 (unnamed net_device) (uninitialized): Cannot set host attributes\nJun  3 22:37:46 ip-172-31-2-186 kernel: [  479.704917] ena 0000:00:03.0: Elastic Network Adapter (ENA) found at mem f3000000, mac addr 02:8a:3c:1e:13:b5 Queues 8\nJun  3 22:37:46 ip-172-31-2-186 kernel: [  480.805037] EXT4-fs (xvda1): re-mounted. Opts: (null)\nJun  3 22:37:46 ip-172-31-2-186 kernel: [  481.025842] NET: Registered protocol family 10\nWhich errors can I ignore?\nThe following warnings that may appear in your system's error logs can be ignored for the Elastic Network Adapter:\nSet host attribute isn't supported\nHost attributes are not supported for this device.\nfailed to alloc buffer for rx queue\nThis is a recoverable error, and it indicates that there may have been a memory pressure issue when the error was thrown.\nFeature X isn't supported\nThe referenced feature is not supported by the Elastic Network Adapter. Possible values for X include:\n10: RSS Hash function configuration is not supported for this device.\n12: RSS Indirection table configuration is not supported for this device.\n18: RSS Hash Input configuration is not supported for this device.\n20: Interrupt moderation is not supported for this device.\n27: The Elastic Network Adapter driver does not support polling the Ethernet capabilities from snmpd.\nFailed to config AENQ\nThe Elastic Network Adapter does not support AENQ configuration.\nTrying to set unsupported AENQ events\nThis error indicates an attempt to set an AENQ events group that is not supported by the Elastic Network Adapter.\nSub-optimal configuration notifications\nThe ENA device detects sub-optimal configuration settings in the driver that you can change. The device notifies the ENA driver and logs a warning to the console. The following example shows the format of the warning message.\nSub-optimal configuration notification code: 1. Refer to AWS ENA documentation for additional details and mitigation options.\nThe following list shows notification code details and recommended actions for sub-optimal configuration findings.\nCode 1: ENA Express with wide LLQ configuration is not recommended\nENA Express ENI is configured with wide LLQ. This configuration is sub-optimal and could impact performance for ENA Express. We recommend that you disable wide LLQ settings when you use ENA Express ENIs as follows.\nsudo rmmod ena && sudo modprobe ena force_large_llq_header=0\nFor more information about optimal configuration for ENA Express, see Improve network performance between EC2 instances with ENA Express.\nCode 2: ENA Express ENI with sub-optimal Tx queue depth is not recommended\nENA Express ENI is configured with sub-optimal Tx queue depth. This configuration could impact performance for ENA Express. We recommend that you enlarge all Tx queues to the maximum value for the network interface when you use ENA Express ENIs as follows.\nYou can run the following ethtool commands to adjust LLQ size. To learn more about how to control, query, and enable wide-LLQ, see the Large Low-Latency Queue (Large LLQ) topic of the Linux kernel driver for ENA documentation in the Amazon Drivers GitHub repository.\nethtool -g interface\nSet your Tx queues to the maximum depth:\nethtool -G interface tx depth\nFor more information about optimal configuration for ENA Express, see Improve network performance between EC2 instances with ENA Express.\nCode 3: ENA with regular LLQ size and Tx packet traffic exceeds the maximum header supported size\nBy default, ENA LLQ supports Tx packet header size up to 96 bytes. If the packet header size is larger than 96 bytes, the packet is dropped. To mitigate this issue, we recommend that you enable wide-LLQ, which increases the supported Tx packet header size to a maximum of 224 bytes.\nHowever, when you enable wide-LLQ, the maximum Tx ring size is reduced from 1000 to 512 entries. Wide-LLQ is enabled by default for all Nitro v4 and later instance types.\nNitro v4 instance types have a default maximum wide-LLQ Tx ring size of 512 entries, which can't be changed.\nNitro v5 instance types have a default wide-LLQ Tx ring size of 512 entries, which you can increase up to 1000 entries.\nYou can run the following ethtool commands to adjust LLQ size. To learn more about how to control, query, and enable wide-LLQ, see the Large Low-Latency Queue (Large LLQ) topic of the Linux kernel driver for ENA documentation in the Amazon Drivers GitHub repository.\nFind the maximum depth for your Tx queues:\nethtool -g interface\nSet your Tx queues to the maximum depth:\nethtool -G interface tx depth"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/troubleshoot-ena-driver.html",
        "content": "The Elastic Network Adapter (ENA) is designed to improve operating system health and to reduce unexpected hardware behavior or failures that can disrupt the operation of your Windows instance. The ENA architecture keeps device or driver failures as transparent to the operating system as possible.\nCollect diagnostic information on the instance\nThe steps to open Windows operating system (OS) tools vary, depending on what version of the OS is installed on your instance. In the following sections, we use the Run dialog to open the tools, which works the same across all OS versions. However, you can access these tools using any method that you prefer.\nAccess the Run dialog\nUsing the Windows logo key combination: Windows + R\nUsing the search bar:\nEnter run in the search bar.\nSelect the Run application from the search results.\nSome steps require the context menu to access properties or context-sensitive actions. There are several ways to do this, depending on your OS version and hardware.\nAccess the context menu\nUsing your mouse: right-click an item to bring up its context menu.\nUsing your keyboard:\nDepending on your OS version, use Shift + F10, or Ctrl + Shift + F10.\nIf you have the context key on your keyboard (three horizontal lines in a box), select the item you want and then press the context key.\nIf you can connect to your instance, use the following techniques to gather diagnostic information for troubleshooting.\nCheck ENA device status\nTo check the status of your ENA Windows driver using the Windows Device Manager, follow these steps:\nOpen the Run dialog using one of the methods described in the preceding section.\nTo open the Windows Device Manager, enter devmgmt.msc in the Run box.\nChoose OK. This opens the Device Manager window.\nSelect the arrow to the left of Network adapters to expand the list.\nChoose the name, or open the context menu for the Amazon Elastic Network Adapter, and then choose Properties. This opens the Amazon Elastic Network Adapter Properties dialog.\nVerify that the message in the General tab says \"This device is working properly.\"\nInvestigate driver event messages\nTo review ENA Windows driver event logs using the Windows Event Viewer, follow these steps:\nOpen the Run dialog using one of the methods described in the preceding section.\nTo open the Windows Event Viewer, enter eventvwr.msc in the Run box.\nChoose OK. This opens the Event Viewer window.\nExpand the Windows Logs menu, and then choose System.\nUnder Actions, in the top-right panel, choose Filter Current Log. This displays the filtering dialog.\nIn the Event sources box, enter ena. This limits results to events that were generated by the ENA Windows driver.\nChoose OK. This shows filtered event log results in the detail sections of the window.\nTo drill down into the details, select an event message from the list.\nThe following example shows an ENA driver event in the Windows Event Viewer system events list:\nEvent message summary\nThe following table shows event messages that the ENA Windows driver generates.\nInput\nEvent ID ENA driver event description Type\n5001 Hardware is out of resources Error\n5002 Adapter has detected a hardware error Error\n5005 Adapter has timed out on NDIS operation that did not complete in a timely manner Error\n5032 Adapter has failed to reset the device Error\n5200 Adapter has been initialized Informational\n5201 Adapter has been halted Informational\n5202 Adapter has been paused Informational\n5203 Adapter has been restarted Informational\n5204 Adapter has been shut down Informational\n5205 Adapter has been reset Error\n5206 Adapter has been surprise removed Error\n5208 Adapter initialization routine has failed Error\n5210 Adapter has encountered and successfully recovered an internal issue Error\nReview performance metrics\nThe ENA Windows driver publishes network performance metrics from the instances where metrics are enabled. You can view and enable metrics on the instance using the native Performance Monitor application. For more information about the metrics that the ENA Windows driver produces, see Monitor network performance for ENA settings on your EC2 instance.\nOn instances where ENA metrics are enabled, and the Amazon CloudWatch agent is installed, CloudWatch collects the metrics that are associated with the counters in Windows Performance Monitor, as well as some advanced metrics for ENA. These metrics are collected in addition to the metrics enabled by default on EC2 instances. For more information about the metrics, see Metrics collected by the CloudWatch agent in the Amazon CloudWatch User Guide.\nNote\nPerformance metrics are available for ENA driver versions 2.4.0 and later (also for version 2.2.3). ENA driver version 2.2.4 was rolled back due to potential performance degradation on the sixth generation EC2 instances. We recommend that you upgrade to the current version of the driver to ensure that you have the latest updates.\nSome of the ways that you can use performance metrics include:\nTroubleshoot instance performance issues.\nChoose the right instance size for a workload.\nProactively plan scaling activities.\nBenchmark applications to determine if they maximize the performance available on an instance.\nRefresh rate\nBy default, the driver refreshes metrics using a 1-second interval. However, the application that retrieves the metrics might use a different interval for polling. You can change the refresh interval in Device Manager, using the advanced properties for the driver.\nTo change the metrics refresh interval for the ENA Windows driver, follow these steps:\nOpen the Run dialog using one of the methods described in the preceding section.\nTo open the Windows Device Manager, enter devmgmt.msc in the Run box.\nChoose OK. This opens the Device Manager window.\nSelect the arrow to the left of Network adapters to expand the list.\nChoose the name, or open the context menu for the Amazon Elastic Network Adapter, and then choose Properties. This opens the Amazon Elastic Network Adapter Properties dialog.\nOpen the Advanced tab in the pop-up window.\nFrom the Property list, choose Metrics Refresh Interval to change the value.\nWhen you are done, choose OK.\nInvestigate sub-optimal configuration notifications\nThe ENA device detects sub-optimal configuration settings in the driver that you can change. The device notifies the ENA driver and logs an event notification. To review sub-optimal events in the Windows Event Viewer\nOpen the Run dialog using one of the methods described in the preceding section.\nTo open the Windows Event Viewer, enter eventvwr.msc in the Run box.\nChoose OK. This opens the Event Viewer window.\nExpand the Windows Logs menu, and then choose System.\nUnder Actions, in the top-right panel, choose Filter Current Log. This displays the filtering dialog.\nIn the Event sources box, enter ena. This limits results to events that were generated by the ENA Windows driver.\nChoose OK. This shows filtered event log results in the detail sections of the window.\nEvents with ID 59000 notify you of sub-optimal configuration findings. Right-click an event and choose Event Properties to open a detailed view, or select Preview Pane from the View menu to see the same detail.\nOpen the Details tab to see the event code. In the Binary Data: In words section, the last word is the code.\nThe following list shows notification code details and recommended actions for sub-optimal configuration findings.\nCode 1: ENA Express with wide LLQ configuration is not recommended\nENA Express ENI is configured with wide LLQ. This configuration is sub-optimal and could impact performance for ENA Express. We recommend that you disable wide LLQ settings when you use ENA Express ENIs as follows.\nTo open the Windows Device Manager, enter devmgmt.msc in the Run box.\nChoose OK. This opens the Device Manager window.\nSelect the arrow to the left of Network adapters to expand the list.\nOpen the device properties for the Amazon Elastic Network Adapter.\nFrom there, open the Advanced tab to make your changes.\nSelect the LLQ Header Size Policy property, and set its value to Normal (128 Bytes).\nChoose OK to save your changes.\nCode 2: ENA Express ENI with sub-optimal Tx queue depth is not recommended\nENA Express ENI is configured with sub-optimal Tx queue depth. This configuration could impact performance for ENA Express. We recommend that you enlarge all Tx queues to the maximum value for the network interface when you use ENA Express ENIs as follows.\nFollow these steps to enlarge the Tx queues to the maximum depth:\nTo open the Windows Device Manager, enter devmgmt.msc in the Run box.\nChoose OK. This opens the Device Manager window.\nSelect the arrow to the left of Network adapters to expand the list.\nOpen the device properties for the Amazon Elastic Network Adapter.\nFrom there, open the Advanced tab to make your changes.\nSelect the Transmit Buffers property, and set its value to the maximum supported.\nChoose OK to save your changes.\nENA adapter reset\nThe reset process starts when the ENA Windows driver detects an error on an adapter, and marks the adapter as unhealthy. The driver cannot reset itself, so it depends on the operating system to check the adapter health status, and call the reset handle for the ENA Windows driver. The reset process might result in a brief period of time where traffic loss occurs. However, TCP connections should be able to recover.\nThe ENA adapter might also indirectly request a device reset procedure, by failing to send a keep-alive notification. For example, if the ENA adapter reaches an unknown state after loading an irrecoverable configuration, it might stop sending keep-alive notifications.\nCommon causes for ENA adapter reset\nKeep-alive messages are missing\nThe ENA adapter posts keep-alive events at a fixed rate (usually once every second). The ENA Windows driver implements a watchdog mechanism, which periodically checks for the presence of these keep-alive messages. If it detects one or more new messages since the last time it checked, it records a successful outcome. Otherwise, the driver concludes that the device experienced a failure, and initiates a reset sequence.\nPackets are stuck in transmit queues\nThe ENA adapter verifies that packets are flowing through the transmit queues as expected. The ENA Windows driver detects if packets are getting stuck, and initiates a reset sequence if they are.\nRead timeout for Memory Mapped I/O (MMIO) registers\nTo limit memory mapped I/O (MMIO) read operations, the ENA Windows driver accesses MMIO registers only during initialization and reset processes. If the driver detects a timeout, it takes one of the following actions, depending on what process was running:\nIf a timeout is detected during initialization, it fails the flow, which results in the driver displaying a yellow exclamation mark by the ENA adapter in Windows Device Manager.\nIf a timeout is detected during reset, it fails the flow. The OS then initiates a surprise removal of the ENA adapter, and recovers it by stopping and starting the adapter that was removed. For more information about surprise removal of a network interface card (NIC), see Handling the Surprise Removal of a NIC in the Microsoft Windows Hardware Developer documentation.\nTroubleshooting scenarios\nThe following scenarios can help you troubleshoot issues that you might experience with the ENA Windows driver. We recommend that you start with upgrading your ENA driver, if you don't have the latest version. To find the latest driver for your Windows OS version, see Track ENA Windows driver version releases.\nUnexpected ENA driver version installed\nDevice warning for ENA driver\nConnection timeout with adapter reset (error codes 5007, 5205)\nMigrating to a sixth generation instance infrastructure impacts performance or attachment\nSuboptimal performance for the elastic network interface"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ena-improve-network-latency-linux.html",
        "content": "Network latency is the amount of time it takes for a packet of data to travel from its source to its destination. Applications that send data across the network depend on timely responses to provide a positive user experience. High network latency can lead to various issues, such as the following:\nSlow load times for web pages\nVideo stream lag\nDifficulty accessing online resources\nThis section outlines steps that you can take to improve the network latency on Amazon EC2 instances that run on Linux. To achieve optimal latency, follow these steps to configure your instance, kernel, and ENA driver settings. For additional configuration guidance, see the ENA Linux Driver Best Practices and Performance Optimization Guide on GitHub.\nNote\nSteps and settings may vary slightly, depending on your specific network hardware, the AMI that you launched your instance from, and your application use case. Before you make any changes, thoroughly test and monitor your network performance to ensure that you're getting the desired results.\nReduce the number of network hops for data packets\nEach hop that a data packet takes as it moves from router to router increases network latency. Typically, traffic must take multiple hops to reach your destination. There are two ways to reduce network hops for your Amazon EC2 instances, as follows:\nCluster placement group \u2013 When you specify a cluster placement group, Amazon EC2 launches instances that are in close proximity to each other, physically within the same Availability Zone (AZ) with tighter packing. The physical proximity of the instances in the group allows them to take advantage of high-speed connectivity, resulting in low latency and high single flow throughput.\nDedicated Host \u2013 A Dedicated Host is a physical server that's dedicated for your use. With a Dedicated Host, you can launch your instances to run on the same physical server. Communication between instances that run on the same Dedicated Host can happen without extra network hops.\nHow Linux kernel configuration affects latency\nLinux kernel configuration can increase or decrease network latency. To achieve your latency optimization goals, it's important to fine-tune the Linux kernel configuration according to the specific requirements of your workload.\nThere are many configuration options for the Linux kernel that might help decrease network latency. The most impactful options are as follows.\nEnable busy poll mode \u2013 Busy poll mode reduces latency on the network receive path. When you enable busy poll mode, the socket layer code can directly poll the receive queue of a network device. The downside of busy polling is higher CPU usage in the host that comes from polling for new data in a tight loop. There are two global settings that control the number of microseconds to wait for packets for all interfaces.\n  busy_read\nA low latency busy poll timeout for socket reads. This controls the number of microseconds to wait for the socket layer to read packets on the device queue. To enable the feature globally with the sysctl command, the Linux Kernel organization recommends a value of 50 microseconds. For more information, see busy_read in the Linux kernel user's and administrator's guide.\n[ec2-user ~]$ sudo sysctl -w net.core.busy_read=50\nbusy_poll\nA low latency busy poll timeout for poll and select. This controls the number of microseconds to wait for events. The recommended value is between 50-100 microseconds, depending on the number of sockets you're polling. The more sockets you add, the higher the number should be.\n[ec2-user ~]$ sudo sysctl -w net.core.busy_poll=50\nConfigure CPU power states (C-states) \u2013 C-states control the sleep levels that a core may enter when it's inactive. You might want to control C-states to tune your system for latency versus performance. In deeper C-states, the CPU is essentially \"asleep\" and can't respond to requests until it wakes up and transitions back to an active state. Putting cores to sleep takes time, and although a sleeping core allows more headroom for another core to boost to a higher frequency, it takes time for that sleeping core to wake back up and perform work.\nFor example, if a core that's assigned to handle network packet interrupts is asleep, there might be a delay in servicing that interrupt. You can configure the system so that it doesn't use deeper C-states. However, while this configuration reduces the processor reaction latency, it also reduces the headroom available to other cores for Turbo Boost.\nTo reduce the processor reaction latency, you can limit deeper C-states. For more information, see High performance and low latency by limiting deeper C-states in the Amazon Linux 2 User Guide.\nENA network driver configuration\nThe ENA network driver enables communication between an instance and a network. The driver processes network packets and passes them on to the network stack or to the Nitro card. When a network packet comes in, the Nitro card generates an interrupt for the CPU to notify the software of an event.\nInterrupt\nAn interrupt is a signal that a device or application sends to the processor. The interrupt tells the processor that an event has occurred or a condition has been met that requires immediate attention. Interrupts can handle time-sensitive tasks such as receiving data from a network interface, handling hardware events, or servicing requests from other devices.\nInterrupt moderation\nInterrupt moderation is a technique that reduces the number of interrupts a device generates by aggregating or delaying them. The purpose of interrupt moderation is to improve system performance by reducing the overhead associated with handling a large number of interrupts. Too many interrupts increase CPU usage, impacting the throughput adversely, while too few interrupts increase the latency.\nDynamic interrupt moderation\nDynamic interrupt moderation is an enhanced form of interrupt moderation that dynamically adjusts the interrupt rate based on the current system load and traffic patterns. It aims to strike a balance between reducing interrupt overhead and packets per second, or bandwidth.\nNote\nDynamic interrupt moderation is enabled by default in some AMIs (but can be enabled or disabled in all AMIs).\nTo minimize network latency, it might be necessary to disable interrupt moderation. However, this can also increase the overhead of interrupt processing. It's important to find the right balance between reducing latency and minimizing overhead. ethtool commands can help you configure interrupt moderation. By default, rx-usecs is set to 20, and tx-usecs is set to 64.\nTo get the current interrupt modification configuration, use the following command.\n[ec2-user ~]$ ethtool -c interface | egrep \"rx-usecs:|tx-usecs:|Adaptive RX\"\nAdaptive RX: on  TX: off\nrx-usecs: 20\ntx-usecs: 64\nTo disable interrupt modification and dynamic interrupt moderation, use the following command.\n[ec2-user ~]$ sudo ethtool -C interface adaptive-rx off rx-usecs 0 tx-usecs 0"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ena-nitro-perf.html",
        "content": "The Nitro System is a collection of hardware and software components built by AWS that enable high performance, high availability, and high security. The Nitro System provides bare metal-like capabilities that eliminate virtualization overhead and support workloads that require full access to host hardware. For more detailed information, see AWS Nitro System.\nAll current generation EC2 instance types perform network packet processing on EC2 Nitro Cards. This topic covers high level packet handling on the Nitro card, common aspects of network architecture and configuration that impact packet handling performance, and what actions you can take to achieve peak performance for your Nitro based instances.\nNitro Cards handle all input and output (I/O) interfaces, such as those needed for Virtual Private Clouds (VPCs). For all of the components that send or receive information over the network, the Nitro cards act as a self-contained computing device for I/O traffic that's physically separate from the system main board on which customer workloads run.\nNetwork packet flow on Nitro cards\nEC2 instances built on the Nitro system have hardware acceleration capabilities that enable faster packet processing, as measured by packets per second (PPS) throughput rates. When a Nitro card performs the initial evaluation for a new flow, it saves information that's the same for all packets in the flow, such as security groups, access control lists, and route table entries. When it processes additional packets for the same flow, it can use the saved information to reduce overhead for those packets.\nYour connection rate is measured by the connections per second (CPS) metric. Each new connection requires additional processing overhead that must be factored into workload capability estimates. It's important to consider both the CPS and PPS metrics when you design your workloads.\nHow a connection is established\nWhen a connection is established between a Nitro based instance and another endpoint, the Nitro card evaluates the full flow for the first packet that's sent or received between the two endpoints. For subsequent packets of the same flow, full reevaluation is usually not necessary. However, there are exceptions. For more information about the exceptions, see Packets that don't use hardware acceleration.\nThe following properties define the two endpoints and the packet flow between them. These five properties together are known as a 5-tuple flow.\nSource IP\nSource port\nDestination IP\nDestination port\nCommunication protocol\nThe direction of the packet flow is known as ingress (inbound) and egress (outbound). The following high level descriptions summarize end to end network packet flow.\nIngress \u2013 When a Nitro card handles an inbound network packet, it evaluates the packet against stateful firewall rules and access control lists. It tracks the connection, meters it, and performs other actions as applicable. Then it forwards the packet to its destination on the host CPU.\nEgress \u2013 When a Nitro card handles an outbound network packet, it looks up the remote interface destination, evaluates various VPC functions, applies rate limits, and performs other actions that apply. Then it forwards the packet to its next hop destination on the network.\nDesign your network for optimal performance\nTo take advantage of your Nitro system's performance capabilities, you must understand what your network processing needs are and how those needs affect the workload for your Nitro resources. Then you can design for optimal performance for your network landscape. Your infrastructure settings and application workload design and configuration can impact both the packet processing and connection rates. For example, if your application has a high rate of connection establishment, such as a DNS service, firewall, or virtual router, it will have less opportunity to take advantage of the hardware acceleration that only occurs after the connection is established.\nYou can configure application and infrastructure settings to streamline workloads and improve network performance. However, not all packets are eligible for acceleration. The Nitro system uses the full network flow for new connections and for packets that aren't eligible for acceleration.\nThe remainder of this section will focus on application and infrastructure design considerations to help ensure that packets flow within the accelerated path as much as possible.\nNetwork design considerations for the Nitro system\nWhen you configure network traffic for your instance, there are many aspects to consider that can affect PPS performance. After a flow is established, the majority of packets that regularly come in or go out are eligible for acceleration. However, exceptions exist to ensure that infrastructure designs and packet flows continue to meet protocol standards.\nTo get the best performance from your Nitro card, you should carefully consider the pros and cons of the following configuration details for your infrastructure and applications.\nInfrastructure considerations\nYour infrastructure configuration can affect your packet flow and processing efficiency. The following list includes some important considerations.\nNetwork interface configuration with asymmetry\nSecurity groups use connection tracking to track information about traffic that flows to and from the instance. Asymmetric routing, where traffic comes into an instance through one network interface and leaves through a different network interface, can reduce the peak performance that an instance can achieve if flows are tracked. For more information about security group connection tracking, untracked connections, and automatically tracked connections, see Amazon EC2 security group connection tracking.\nNetwork drivers\nNetwork drivers are updated and released on a regular basis. If your drivers are out of date, that can significantly impair performance. Keep your drivers up to date to ensure that you have the latest patches and can take advantage of performance improvements, such as the accelerated path feature that's only available for the latest generation of drivers. Earlier drivers don't support the accelerated path feature.\nTo take advantage of the accelerated path feature, we recommend that you install the latest ENA driver on your instances.\nLinux instances \u2013 ENA Linux driver 2.2.9 or later. To install or update the ENA Linux driver from the Amazon Drivers GitHub repository, see the Driver compilation section of the readme file.\nWindows instances \u2013 ENA Windows driver 2.0.0 or later. To install or update the ENA Windows driver, see Install the ENA driver on EC2 Windows instances.\nDistance between endpoints\nA connection between two instances in the same Availability Zone can process more packets per second than a connection across Regions as a result of TCP windowing at the application layer, which determines how much data can be in flight at any given time. Long distances between instances increase latency and decrease the number of packets that the endpoints can process.\nApplication design considerations\nThere are aspects of application design and configuration that can affect your processing efficiency. The following list includes some important considerations.\nPacket size\nLarger packet sizes can increase throughput for the data that an instance can send and receive on the network. Smaller packet sizes can increase the packet process rate, but this can reduce the maximum achieved bandwidth when the number of packets exceed PPS allowances.\nIf the size of a packet exceeds the Maximum Transmission Unit (MTU) of a network hop, a router along the path might fragment it. The resulting packet fragments are considered exceptions, and are processed at the standard rate (not accelerated). This can cause variations in your performance. Amazon EC2 supports jumbo frames of 9001 bytes, however not all services support it. We recommended that you evaluate your topology when you configure MTU.\nProtocol trade-offs\nReliable protocols like TCP have more overhead than unreliable protocols like UDP. The lower overhead and simplified network processing for the UDP transport protocol can result in a higher PPS rate, but at the expense of reliable packet delivery. If reliable packet delivery isn\u2019t critical for your application, UDP might be a good option.\nMicro-bursting\nMicro-bursting occurs when traffic exceeds allowances during brief periods of time rather than being evenly distributed. This typically happens on a microsecond scale.\nFor example, say that you have an instance that can send up to 10 Gbps, and your application sends the full 10 Gb in half a second. This micro-burst exceeds the allowance during the first half second and leaves nothing for the remainder of the second. Even though you sent 10Gb in the 1 second timeframe, allowances in the first half second can result in packets being queued or dropped.\nYou can use a network scheduler such as Linux Traffic Control to help pace your throughput and avoid causing queued or dropped packets as a result of micro-bursting.\nNumber of flows\nA single flow is limited to 5 Gbps unless it's inside of a cluster placement group that supports up to 10 Gbps, or if it uses ENA Express, which supports up to 25 Gbps.\nSimilarly, a Nitro card can process more packets across multiple flows as opposed to using a single flow. To achieve the peak packet processing rate per instance, we recommend at least 100 flows on instances with 100 Gbps or higher aggregate bandwidth. As aggregate bandwidth capabilities increase, the number of flows needed to achieve peak processing rates also increases. Benchmarking will help you determine what configuration you need to achieve peak rates on your network.\nNumber of Elastic Network Adapter (ENA) queues\nBy default, the maximum number of ENA queues are allocated to a network interface based on your instance size and type. Reducing the queue count can reduce the maximum PPS rate achievable. We recommend using the default queue allocation for best performance.\nFor Linux, a network interface is configured with the maximum by default. For applications based on the Data Plane Development Kit (DPDK), we recommend that you configure the maximum number of queues available.\nFeature process overhead\nFeatures like Traffic Mirroring and ENA Express can add more processing overhead, which can reduce absolute packet processing performance. You can limit feature use or disable features to increase packet processing rates.\nConnection tracking to maintain state\nYour security groups use connection tracking to store information about traffic to and from the instance. Connection tracking applies rules against each individual flow of network traffic to determine if the traffic is allowed or denied. The Nitro card uses flow tracking to maintain state for the flow. As more security group rules are applied, more work is required to evaluate the flow.\nNote\nNot all network traffic flows are tracked. If a security group rule is configured with Untracked connections, no additional work is required except for connections that are automatically tracked to ensure symmetric routing when there are multiple valid reply paths.\nPackets that don't use hardware acceleration\nNot all packets can take advantage of hardware acceleration. Handling these exceptions involves some processing overhead which is necessary to ensure the health of your network flows. Network flows must reliably meet protocol standards, conform to changes in the VPC design, and route packets only to allowed destinations. However, the overhead reduces your performance.\nPacket fragments\nAs mentioned under Application considerations, packet fragments that result from packets that exceed network MTU are handled as exceptions, and can't take advantage of hardware acceleration.\nIdle connections\nWhen a connection has no activity for a while, even if the connection hasn't reached its timeout limit, the system can de-prioritize it. Then, if data comes in after the connection is de-prioritized, the system needs to handle it as an exception in order to reconnect.\nTo manage your connections, you can use connection tracking timeouts to close idle connections. You can also use TCP keepalives to keep idle connections open. For more information, see Idle connection tracking timeout.\nVPC mutation\nUpdates to security groups, route tables, and access control lists all need to be reevaluated in the processing path to ensure that route entries and security group rules still apply as expected.\nICMP flows\nInternet Control Message Protocol (ICMP) is a network layer protocol that network devices use to diagnose network communication issues. These packets always use the full flow.\nMaximize network performance on your Nitro system\nBefore you make any design decisions or adjust any network settings on your instance, we recommend that you take the following steps to help ensure that you have the best outcome:\nUnderstand the pros and cons of the actions that you can take to improve performance by reviewing Network design considerations for the Nitro system.\nFor more considerations and best practices for your instance configuration on Linux, see ENA Linux Driver Best Practices and Performance Optimization Guide on GitHub.\nBenchmark your workloads with peak active flow count to determine a baseline for your application performance. With a performance baseline, you can test variations in your settings or application design to understand which considerations will have the most impact, especially if you plan to scale up or scale out.\nThe following list contains actions that you can take to tune your PPS performance, depending on your system needs.\nReduce the physical distance between two instances. When sending and receiving instances are located in same Availability Zone or use cluster placement groups, you can reduce the number of hops a packet needs to take to travel from one endpoint to another.\nUse Untracked connections.\nUse the UDP protocol for network traffic.\nFor EC2 instances with aggregate bandwidth of 100 Gbps or more, distribute the workload over 100 or more individual flows to spread the work evenly across the Nitro card.\nMonitor performance on Linux instances\nYou can use Ethtool metrics on Linux instances to monitor instance networking performance indicators such as bandwidth, packet rate, and connection tracking. For more information, see Monitor network performance for ENA settings on your EC2 instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/enhanced-networking-os.html",
        "content": "To achieve the maximum network performance on your Windows instances with enhanced networking, you might need to modify the default operating system configuration. We recommend the following configuration changes for applications that require high network performance. Other optimizations (such as turning on checksum offloading and enabling RSS, for example) are already configured on official Windows AMIs.\nNote\nTCP chimney offloading should be disabled in most use cases, and has been deprecated as of Windows Server 2016.\nIn addition to these operating system optimizations, you should also consider the maximum transmission unit (MTU) of your network traffic, and adjust according to your workload and network architecture. For more information, see Network maximum transmission unit (MTU) for your EC2 instance.\nAWS regularly measures average round trip latencies between instances launched in a cluster placement group of 50us and tail latencies of 200us at the 99.9 percentile. If your applications require consistently low latencies, we recommend using the latest version of the ENA drivers on fixed performance instances built on the Nitro System.\nConfigure Receive side scaling CPU affinity\nReceive side scaling (RSS) is used to distribute network traffic CPU load across multiple processors. By default, the official Amazon Windows AMIs are configured with RSS enabled. ENA elastic network interfaces provide up to eight RSS queues. By defining CPU affinity for RSS queues, as well as for other system processes, it is possible to spread the CPU load out over multi-core systems, enabling more network traffic to be processed. On instance types with more than 16 vCPUs, we recommend that you use the Set-NetAdapterRSS PowerShell cmdlet, which manually excludes the boot processor (logical processor 0 and 1 when hyper-threading is enabled) from the RSS configuration for all elastic network interfaces, in order to prevent contention with various system components.\nWindows is hyper-thread aware and ensures that the RSS queues of a single network interface card (NIC) are always placed on different physical cores. Therefore, unless hyper-threading is disabled, in order to completely prevent contention with other NICs, spread the RSS configuration of each NIC among a range of 16 logical processors. The Set-NetAdapterRss cmdlet allows you to define the per-NIC range of valid logical processors by defining the values of BaseProcessorGroup, BaseProcessorNumber, MaxProcessingGroup, MaxProcessorNumber, and NumaNode (optional). If there are not enough physical cores to completely eliminate inter-NIC contention, minimize the overlapping ranges or reduce the number of logical processors in the elastic network interface ranges depending on the expected workload of the interface (in other words, a low volume administrative network interface may not need as many RSS queues assigned). Also, as previously noted, various components must run on CPU 0, and therefore we recommend excluding it from all RSS configurations when sufficient vCPUs are available.\nFor example, when there are three elastic network interfaces on a 72 vCPU instance with 2 NUMA nodes with hyper-threading enabled, the following commands spread the network load between the two CPUs without overlap and prevent the use of core 0 completely.\nSet-NetAdapterRss -Name NIC1 -BaseProcessorGroup 0 -BaseProcessorNumber 2 -MaxProcessorNumber 16 \nSet-NetAdapterRss -Name NIC2 -BaseProcessorGroup 1 -BaseProcessorNumber 0 -MaxProcessorNumber 14 \nSet-NetAdapterRss -Name NIC3 -BaseProcessorGroup 1 -BaseProcessorNumber 16 -MaxProcessorNumber 30 \nNote that these settings are persistent for each network adapter. If an instance is resized to one with a different number of vCPUs, you should reevaluate the RSS configuration for each enabled elastic network interface. The complete Microsoft documentation for the cmdlet can be found here: Set-NetAdapterRss.\nSpecial note for SQL workloads: We also recommend that you review your I/O thread affinity settings along with your elastic network interface RSS configuration to minimize I/O and network contention for the same CPUs. See Server configuration: affinity mask."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/efa.html",
        "content": "An Elastic Fabric Adapter (EFA) is a network device that you can attach to your Amazon EC2 instance to accelerate Artificial Intelligence (AI), Machine Learning (ML), and High Performance Computing (HPC) applications. EFA enables you to achieve the application performance of an on-premises AI/ML or HPC cluster, with the scalability, flexibility, and elasticity provided by the AWS Cloud.\nEFA provides lower and more consistent latency and higher throughput than the TCP transport traditionally used in cloud-based HPC systems. It enhances the performance of inter-instance communication that is critical for scaling AI/ML and HPC applications. It is optimized to work on the existing AWS network infrastructure and it can scale depending on application requirements.\nEFA integrates with Libfabric 1.7.0 and later, and it supports Nvidia Collective Communications Library (NCCL) for AI and ML applications, and Open MPI 4 and later and Intel MPI 2019 Update 5 and later for HPC applications.\nContents\nEFA basics\nSupported interfaces and libraries\nSupported instance types\nSupported operating systems\nEFA limitations\nEFA pricing\nGet started with EFA and MPI\nGet started with EFA and NCCL\nMaximize network bandwidth\nCreate and attach an EFA\nDetach and delete an EFA\nMonitor an EFA\nVerify the EFA installer\nEFA basics\nAn EFA device can be attached to an EC2 instance in two ways:\nUsing a traditional EFA interface, also called EFA with ENA, which creates both an EFA device and an ENA device.\nUsing an EFA-only interface, which creates just the EFA device.\nThe EFA device provides capabilities like built-in OS-bypass and congestion control through the Scalable Reliable Datagram (SRD) protocol. The EFA device features enable low-latency, reliable transport functionality that allows EFA interface to provide better application performance for HPC and ML applications on Amazon EC2. While the ENA device offers traditional IP networking.\nTraditionally, AI/ML applications use NCCL and HPC applications use the Message Passing Interface (MPI) to interface with the system's network transport. In the AWS cloud, this has meant that applications interface with NCCL or MPI, which then uses the operating system's TCP/IP stack and the ENA device driver to enable network communication between instances.\nWith a traditional EFA (EFA with ENA) or EFA-only interface, AI/ML applications use NCCL and HPC applications use MPI, to interface directly with the Libfabric API. The Libfabric API bypasses the operating system kernel and communicates directly with the EFA device to put packets on the network. This reduces overhead and enables AI/ML and HPC applications to run more efficiently.\nNote\nLibfabric is a core component of the OpenFabrics Interfaces (OFI) framework, which defines and exports the user-space API of OFI. For more information, see the Libfabric OpenFabrics website.\nDifferences between ENA, EFA, and EFA-only network interfaces\nAmazon EC2 provides two types of network interfaces:\nENA interfaces provide all of the traditional IP networking and routing features that are required to support IP networking for a VPC. For more information, see Enable enhanced networking with ENA on your EC2 instances.\nEFA (EFA with ENA) interfaces provide both the ENA device for IP networking and the EFA device for low-latency, high-throughput communication.\nEFA-only interfaces support only the EFA device capabilities, without the ENA device for traditional IP networking.\nThe following table provides a comparison of ENA, EFA, and EFA-only network interfaces.\nENA EFA (EFA with ENA) EFA-only\nSupports IP networking functionality Yes Yes No\nCan be assigned IPv4 or IPv6 addresses Yes Yes No\nCan be used as primary network interface for instance Yes Yes No\nCounts towards ENI attachement limit for instance Yes Yes Yes\nInstance type support Supported on all Nitro-based instances types Supported instance types Supported instance types\nParameter naming in EC2 APIs interface efa efa-only\nField naming in EC2 console No selection EFA with ENA EFA-only\nSupported interfaces and libraries\nEFAs support the following interfaces and libraries:\nOpen MPI 4 and later\nNote\nOpen MPI 4.0 or newer is preferred for Graviton based instances.\nIntel MPI 2019 Update 5 and later\nNVIDIA Collective Communications Library (NCCL) 2.4.2 and later\nAWS Neuron SDK version 2.3 and later\nSupported instance types\nThe following instance types support EFAs:\nNitro v5\nNitro v4\nNitro v3\nGeneral Purpose: m8g.24xlarge | m8g.48xlarge | m8g.metal-24xl | m8g.metal-48xl\nCompute Optimized: c7gn.16xlarge | c7gn.metal | c8g.24xlarge | c8g.48xlarge | c8g.metal-24xl | c8g.metal-48xl\nMemory Optimized: r8g.24xlarge | r8g.48xlarge | r8g.metal-24xl | r8g.metal-48xl | x8g.24xlarge | x8g.48xlarge | x8g.metal-24xl | x8g.metal-48xl\nStorage Optimized: i7ie.48xlarge\nAccelerated Computing: p5en.48xlarge | trn2.48xlarge | trn2u.48xlarge\nHigh Performance Computing: hpc7g.4xlarge | hpc7g.8xlarge | hpc7g.16xlarge\nTo see the available instance types that support EFAs in a specific Region\nThe available instance types vary by Region. To see the available instance types that support EFAs in a Region, use the describe-instance-types command with the --region parameter. Include the --filters parameter to scope the results to the instance types that support EFA and the --query parameter to scope the output to the value of InstanceType.\naws ec2 describe-instance-types  --region us-east-1  --filters Name=network-info.efa-supported,Values=true  --query \"InstanceTypes[*].[InstanceType]\"  --output text | sort\nSupported operating systems\nOperating system support differs depending on the processor type. The following table shows the supported operating systems.\nOperating system Intel/AMD (x86_64) instance types AWS Graviton (arm64) instance types\nAmazon Linux 2023 \u2713 \u2713\nAmazon Linux 2 \u2713 \u2713\nRHEL 8 and 9 \u2713 \u2713\nDebian 10, 11, and 12 \u2713 \u2713\nRocky Linux 8 and 9 \u2713 \u2713\nUbuntu 20.04, 22.04, and 24.04 \u2713 \u2713\nSUSE Linux Enterprise 15 SP2 and later \u2713 \u2713\nOpenSUSE Leap 15.5 and later \u2713\nNote\nUbuntu 20.04 supports peer direct support when used with dl1.24xlarge instances.\nEFA limitations\nEFAs have the following limitations:\nNote\nEFA traffic refers to the traffic transmitted through the EFA device of either an EFA (EFA with ENA) or EFA-only interface.\nEFA traffic between P4d/P4de/DL1 instances and other instance types is currently not supported.\nInstance types that support multiple network cards can be configured with one EFA per network card. All other supported instance types support only one EFA per instance.\nFor c7g.16xlarge, m7g.16xlarge and r7g.16xlarge Dedicated Instances and Dedicated Hosts are not supported when an EFA is attached.\nEFA traffic can't cross Availability Zones or VPCs. This does not apply to normal IP traffic from the ENA device of an EFA interface.\nEFA traffic is not routable. Normal IP traffic from the ENA device of an EFA interface remains routable.\nEFA is not supported on AWS Outposts.\nThe EFA device of an EFA (EFA with ENA) interface is supported on Windows instances only for AWS Cloud Digital Interface Software Development Kit (AWS CDI SDK) based applications. If you attach an EFA (EFA with ENA) interface to a Windows instance for non-CDI SDK based applications, it functions as an ENA interface, without the added EFA device capabilities. The EFA-only interface is not supported by AWS CDI based applications on Windows or Linux. For more information, see the AWS Cloud Digital Interface Software Development Kit (AWS CDI SDK) User Guide.\nEFA pricing\nEFA is available as an optional Amazon EC2 networking feature that you can enable on any supported instance at no additional cost."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/efa-start.html",
        "content": "This tutorial helps you to launch an EFA and MPI-enabled instance cluster for HPC workloads.\nNote\nThe u7i-12tb.224xlarge, u7in-16tb.224xlarge, u7in-24tb.224xlarge, and u7in-32tb.224xlarge instances can run up to 128 parallel MPI processes with Open MPI or up to 256 parallel MPI processes with Intel MPI.\nTasks\nStep 1: Prepare an EFA-enabled security group\nStep 2: Launch a temporary instance\nStep 3: Install the EFA software\nStep 4: (Optional) Enable Open MPI 5\nStep 5: (Optional) Install Intel MPI\nStep 6: Disable ptrace protection\nStep 7. Confirm installation\nStep 8: Install your HPC application\nStep 9: Create an EFA-enabled AMI\nStep 10: Launch EFA-enabled instances into a cluster placement group\nStep 11: Terminate the temporary instance\nStep 12: Enable passwordless SSH\nStep 1: Prepare an EFA-enabled security group\nAn EFA requires a security group that allows all inbound and outbound traffic to and from the security group itself. The following procedure creates a security group that allows all inbound and outbound traffic to and from itself, and that allows inbound SSH traffic from any IPv4 address for SSH connectivity.\nImportant\nThis security group is intended for testing purposes only. For your production environments, we recommend that you create an inbound SSH rule that allows traffic only from the IP address from which you are connecting, such as the IP address of your computer, or a range of IP addresses in your local network.\nFor other scenarios, see Security group rules for different use cases.\nTo create an EFA-enabled security group\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Security Groups and then choose Create security group.\nIn the Create security group window, do the following:\nFor Security group name, enter a descriptive name for the security group, such as EFA-enabled security group.\n(Optional) For Description, enter a brief description of the security group.\nFor VPC, select the VPC into which you intend to launch your EFA-enabled instances.\nChoose Create security group.\nSelect the security group that you created, and on the Details tab, copy the Security group ID.\nWith the security group still selected, choose Actions, Edit inbound rules, and then do the following:\nChoose Add rule.\nFor Type, choose All traffic.\nFor Source type, choose Custom and paste the security group ID that you copied into the field.\nChoose Add rule.\nFor Type, choose SSH.\nFor Source type, choose Anywhere-IPv4.\nChoose Save rules.\nWith the security group still selected, choose Actions, Edit outbound rules, and then do the following:\nChoose Add rule.\nFor Type, choose All traffic.\nFor Destination type, choose Custom and paste the security group ID that you copied into the field.\nChoose Save rules.\nStep 2: Launch a temporary instance\nLaunch a temporary instance that you can use to install and configure the EFA software components. You use this instance to create an EFA-enabled AMI from which you can launch your EFA-enabled instances.\nTo launch a temporary instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances, and then choose Launch Instances to open the new launch instance wizard.\n(Optional) In the Name and tags section, provide a name for the instance, such as EFA-instance. The name is assigned to the instance as a resource tag (Name=EFA-instance).\nIn the Application and OS Images section, select an AMI for one of the supported operating systems.\nIn the Instance type section, select a supported instance type.\nIn the Key pair section, select the key pair to use for the instance.\nIn the Network settings section, choose Edit, and then do the following:\nFor Subnet, choose the subnet in which to launch the instance. If you do not select a subnet, you can't enable the instance for EFA.\nFor Firewall (security groups), choose Select existing security group, and then select the security group that you created in the previous step.\nExpand the Advanced network configuration section.\nFor Network interface 1, select Network card index = 0, Device index = 0, and Interface type = EFA with ENA.\n(Optional) If you are using a multi-card instance type, such as p4d.24xlarge or p5.48xlarge, for each additional network interface required, choose Add network interface, for Network card index select the next unused index, and then select Device index = 1 and Interface type = EFA with ENA or EFA-only.\nIn the Storage section, configure the volumes as needed.\nIn the Summary panel on the right, choose Launch instance.\nNote\nConsider requiring the use of IMDSv2 for the temporary instance as well as the AMI that you will create in Step 9 unless you have already set IMDSv2 as the default for the account. For more information about IMDSv2 configuration steps, see Configure instance metadata options for new instances.\nStep 3: Install the EFA software\nInstall the EFA-enabled kernel, EFA drivers, Libfabric, and Open MPI stack that is required to support EFA on your temporary instance.\nThe steps differ depending on whether you intend to use EFA with Open MPI, with Intel MPI, or with Open MPI and Intel MPI.\nTo install the EFA software\nConnect to the instance you launched. For more information, see Connect to your Linux instance using SSH.\nTo ensure that all of your software packages are up to date, perform a quick software update on your instance. This process may take a few minutes.\nAmazon Linux 2023, Amazon Linux 2, RHEL 8/9, Rocky Linux 8/9\n$ sudo yum update -y\nUbuntu and Debian\n$ sudo apt-get update && sudo apt-get upgrade -y\nSUSE Linux Enterprise\n$ sudo zypper update -y\nReboot the instance and reconnect to it.\nDownload the EFA software installation files. The software installation files are packaged into a compressed tarball (.tar.gz) file. To download the latest stable version, use the following command.\n$ curl -O https://efa-installer.amazonaws.com/aws-efa-installer-1.38.0.tar.gz\nYou can also get the latest version by replacing the version number with latest in the preceding command.\n(Optional) Verify the authenticity and integrity of the EFA tarball (.tar.gz) file.\nWe recommend that you do this to verify the identity of the software publisher and to check that the file has not been altered or corrupted since it was published. If you do not want to verify the tarball file, skip this step.\nShow more\nExtract the files from the compressed .tar.gz file and navigate into the extracted directory.\n$ tar -xf aws-efa-installer-1.38.0.tar.gz && cd aws-efa-installer\nInstall the EFA software. Do one of the following depending on your use case.\nNote\nEFA does not support NVIDIA GPUDirect with SUSE Linux. If you are using SUSE Linux, you must additionally specify the --skip-kmod option to prevent kmod installation. By default, SUSE Linux does not allow out-of-tree kernel modules.\nOpen MPI and Intel MPI\nOpen MPI only\nIntel MPI only\nIf you intend to use EFA with Open MPI and Intel MPI, you must install the EFA software with Libfabric and Open MPI, and you must complete Step 5: Install Intel MPI.\nTo install the EFA software with Libfabric and Open MPI, run the following command.\nNote\nFrom EFA 1.30.0, both Open MPI 4 and Open MPI 5 are installed by default. You can optionally specify the version of Open MPI that you want to install. To install only Open MPI 4, include --mpi=openmpi4. To install only Open MPI 5, include --mpi=openmpi5. To install both, omit the --mpi option.\n$ sudo ./efa_installer.sh -y\nLibfabric is installed to /opt/amazon/efa. Open MPI 4 is installed to /opt/amazon/openmpi. Open MPI 5 is installed to /opt/amazon/openmpi5.\nIf the EFA installer prompts you to reboot the instance, do so and then reconnect to the instance. Otherwise, log out of the instance and then log back in to complete the installation.\nDelete the uncompressed tarball and the tarball itself. Otherwise, these will be included in the EFA-enabled AMI that you create, increasing its size.\nStep 4: (Optional) Enable Open MPI 5\nNote\nPerform this step only if you intend to use Open MPI 5.\nFrom EFA 1.30.0, both Open MPI 4 and Open MPI 5 are installed by default. Alternatively, you can choose to install only Open MPI 4 or Open MPI 5.\nIf you chose to install Open MPI 5 in Step 3: Install the EFA software, and you intend to use it, you must perform the following steps to enable it.\nTo enable Open MPI 5\nAdd Open MPI 5 to the PATH environment variable.\n$ module load openmpi5\nVerify that Open MPI 5 is enabled for use.\n$ which mpicc\nThe command should return the Open MPI 5 installation directory - /opt/amazon/openmpi5.\n(Optional) To ensure that Open MPI 5 is added to PATH environment variable each time the instance starts, do the following:\nbash shell\ncsh and tcsh shells\nAdd module load openmpi5 to /home/username/.bashrc and /home/username/.bash_profile.\nIf you need to remove Open MPI 5 from the PATH environment variable, run the following command and remove the command from the shell startup scripts.\n$ module unload openmpi5\nStep 5: (Optional) Install Intel MPI\nImportant\nPerform this step only if you intend to use Intel MPI. If you intend to only use Open MPI, skip this step.\nIntel MPI requires an additional installation and environment variable configuration.\nPrerequisite\nEnsure that the user performing the following steps has sudo permissions.\nTo install Intel MPI\nTo download the Intel MPI installation script, do the following\nVisit the Intel website.\nIn the Intel MPI Library section of the webpage, choose the link for the Intel MPI Library for Linux Offline installer.\nRun the installation script that you downloaded in the previous step.\n$ sudo bash installation_script_name.sh\nIn the installer, choose Accept & install.\nRead the Intel Improvement Program, choose the appropriate option, and then choose Begin Installation.\nWhen the installation completes, choose Close.\nBy default, Intel MPI uses its embedded (internal) Libfabric. You can configure Intel MPI to use the Libfabric that ships with the EFA installer instead. Typically, the EFA installer ships with a later version of Libfabric than Intel MPI. In some cases, the Libfabric that ships with the EFA installer is more performant than that of Intel MPI. To configure Intel MPI to use the Libfabric that ships with the EFA installer, do one of the following depending on your shell.\nbash shells\ncsh and tcsh shells\nAdd the following statement to /home/username/.bashrc and /home/username/.bash_profile.\nexport I_MPI_OFI_LIBRARY_INTERNAL=0\nAdd the following source command to your shell script to source the vars.sh script from the installation directory to set up the compiler environment each time the instance starts. Do one of the following depending on your shell.\nbash shells\ncsh and tcsh shells\nAdd the following statement to /home/username/.bashrc and /home/username/.bash_profile.\nsource /opt/intel/oneapi/mpi/latest/env/vars.sh\nBy default, if EFA is not available due to a misconfiguration, Intel MPI defaults to the TCP/IP network stack, which might result in slower application performance. You can prevent this by setting I_MPI_OFI_PROVIDER to efa. This causes Intel MPI to fail with the following error if EFA is not available:\nAbort (XXXXXX) on node 0 (rank 0 in comm 0): Fatal error in PMPI_Init: OtherMPI error,\nMPIR_Init_thread (XXX)........: \nMPID_Init (XXXX)..............:\nMPIDI_OFI_mpi_init_hook (XXXX):\nopen_fabric (XXXX)............:\nfind_provider (XXXX)..........:\nOFI fi_getinfo() failed (ofi_init.c:2684:find_provider:\nDo one of the following depending on your shell.\nbash shells\ncsh and tcsh shells\nAdd the following statement to /home/username/.bashrc and /home/username/.bash_profile.\nexport I_MPI_OFI_PROVIDER=efa\nBy default, Intel MPI doesn't print debugging information. You can specify different verbosity levels to control the debugging information. Possible values (in order of the amount of detail they provide) are: 0 (default), 1, 2, 3, 4, 5. Level 1 and higher prints the libfabric version and libfabric provider. Use libfabric version to check whether Intel MPI is using the internal Libfabric or the Libfabric that ships with the EFA installer. If it's using the internal Libfabric, the version is suffixed with impi. Use libfabric provider to check with Intel MPI is using EFA or the TCP/IP network. If it's using EFA, the value is efa. If it's using TCP/IP, the value is tcp;ofi_rxm.\nTo enable debugging information, do one of the following depending on your shell.\nbash shells\ncsh and tcsh shells\nAdd the following statement to /home/username/.bashrc and /home/username/.bash_profile.\nexport I_MPI_DEBUG=value\nBy default, Intel MPI uses the operating system\u2019s shared memory (shm) for intra-node communication, and it uses Libfabric (ofi) only for inter-node communication. Generally, this configuration provides the best performance. However, in some cases the Intel MPI shm fabric can cause certain applications to hang indefinitely.\nTo resolve this issue, you can force Intel MPI to use Libfabric for both intra-node and inter-node communication. To do this, do one of the following depending on your shell.\nbash shells\ncsh and tcsh shells\nAdd the following statement to /home/username/.bashrc and /home/username/.bash_profile.\nexport I_MPI_FABRICS=ofi\nNote\nThe EFA Libfabric provider uses the operating system's shared memory for intra-node communication. This means that setting I_MPI_FABRICS to ofi yields similar performance to the default shm:ofi configuration.\nLog out of the instance and then log back in.\nIf you no longer want to use Intel MPI, remove the environment variables from the shell startup scripts.\nStep 6: Disable ptrace protection\nTo improve your HPC application's performance, Libfabric uses the instance's local memory for interprocess communications when the processes are running on the same instance.\nThe shared memory feature uses Cross Memory Attach (CMA), which is not supported with ptrace protection. If you are using a Linux distribution that has ptrace protection enabled by default, such as Ubuntu, you must disable it. If your Linux distribution does not have ptrace protection enabled by default, skip this step.\nTo disable ptrace protection\nDo one of the following:\nTo temporarily disable ptrace protection for testing purposes, run the following command.\n$ sudo sysctl -w kernel.yama.ptrace_scope=0\nTo permanently disable ptrace protection, add kernel.yama.ptrace_scope = 0 to /etc/sysctl.d/10-ptrace.conf and reboot the instance.\nStep 7. Confirm installation\nTo confirm successful installation\nTo confirm that MPI was successfully installed, run the following command:\n$ which mpicc\nFor Open MPI, the returned path should include /opt/amazon/\nFor Intel MPI, the returned path should include /opt/intel/. If you do not get the expected output, ensure that you have sourced the Intel MPI vars.sh script.\nTo confirm that the EFA software components and Libfabric were successfully installed, run the following command.\n$ fi_info -p efa -t FI_EP_RDM\nThe command should return information about the Libfabric EFA interfaces. The following example shows the command output.\nprovider: efa\n    fabric: EFA-fe80::94:3dff:fe89:1b70\n    domain: efa_0-rdm\n    version: 2.0\n    type: FI_EP_RDM\n    protocol: FI_PROTO_EFA\nStep 8: Install your HPC application\nInstall the HPC application on the temporary instance. The installation procedure varies depending on the specific HPC application. For more information, see Manage software on your AL2 instance in the Amazon Linux 2 User Guide.\nNote\nRefer to your HPC application\u2019s documentation for installation instructions.\nStep 9: Create an EFA-enabled AMI\nAfter you have installed the required software components, you create an AMI that you can reuse to launch your EFA-enabled instances.\nTo create an AMI from your temporary instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the temporary instance that you created and choose Actions, Image, Create image.\nFor Create image, do the following:\nFor Image name, enter a descriptive name for the AMI.\n(Optional) For Image description, enter a brief description of the purpose of the AMI.\nChoose Create image.\nIn the navigation pane, choose AMIs.\nLocate the AMI tht you created in the list. Wait for the status to change from pending to available before continuing to the next step.\nStep 10: Launch EFA-enabled instances into a cluster placement group\nLaunch your EFA-enabled instances into a cluster placement group using the EFA-enabled AMI that you created in Step 7, and the EFA-enabled security group that you created in Step 1.\nNote\nIt is not an absolute requirement to launch your EFA-enabled instances into a cluster placementgroup. However, we do recommend running your EFA-enabled instances in a cluster placement group as it launches the instances into a low-latency group in a single Availability Zone.\nTo ensure that capacity is available as you scale your cluster\u2019s instances, you can create a Capacity Reservation for your cluster placement group. For more information, see Create Capacity Reservations in cluster placement groups.\nTo launch an instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances, and then choose Launch Instances to open the new launch instance wizard.\n(Optional) In the Name and tags section, provide a name for the instance, such as EFA-instance. The name is assigned to the instance as a resource tag (Name=EFA-instance).\nIn the Application and OS Images section, choose My AMIs, and then select the AMI that you created in the previous step.\nIn the Instance type section, select a supported instance type.\nIn the Key pair section, select the key pair to use for the instance.\nIn the Network settings section, choose Edit, and then do the following:\nFor Subnet, choose the subnet in which to launch the instance. If you do not select a subnet, you can't enable the instance for EFA.\nFor Firewall (security groups), choose Select existing security group, and then select the security group that you created in the previous step.\nExpand the Advanced network configuration section.\nFor Network interface 1, select Network card index = 0, Device index = 0, and Interface type = EFA with ENA.\n(Optional) If you are using a multi-card instance type, such as p4d.24xlarge or p5.48xlarge, for each additional network interface required, choose Add network interface, for Network card index select the next unused index, and then select Device index = 1 and Interface type = EFA with ENA or EFA-only.\n(Optional) In the Storage section, configure the volumes as needed.\nIn the Advanced details section, for Placement group name, select the cluster placement group into which to launch the instances. If you need to create a new cluster placement group, choose Create new placement group.\nIn the Summary panel on the right, for Number of instances, enter the number of EFA-enabled instances that you want to launch, and then choose Launch instance.\nStep 11: Terminate the temporary instance\nAt this point, you no longer need the instance that you launched in Step 2. You can terminate the instance to stop incurring charges for it.\nTo terminate the temporary instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the temporary instance that you created and then choose Actions, Instance state, Terminate (delete) instance.\nWhen prompted for confirmation, choose Terminate (delete).\nStep 12: Enable passwordless SSH\nTo enable your applications to run across all of the instances in your cluster, you must enable passwordless SSH access from the leader node to the member nodes. The leader node is the instance from which you run your applications. The remaining instances in the cluster are the member nodes.\nTo enable passwordless SSH between the instances in the cluster\nSelect one instance in the cluster as the leader node, and connect to it.\nDisable strictHostKeyChecking and enable ForwardAgent on the leader node. Open ~/.ssh/config using your preferred text editor and add the following.\nHost *\n    ForwardAgent yes\nHost *\n    StrictHostKeyChecking no\nGenerate an RSA key pair.\n$ ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa\nThe key pair is created in the $HOME/.ssh/ directory.\nChange the permissions of the private key on the leader node.\n$ chmod 600 ~/.ssh/id_rsa\nchmod 600 ~/.ssh/config\nOpen ~/.ssh/id_rsa.pub using your preferred text editor and copy the key.\nFor each member node in the cluster, do the following:\nConnect to the instance.\nOpen ~/.ssh/authorized_keys using your preferred text editor and add the public key that you copied earlier.\nTo test that the passwordless SSH is functioning as expected, connect to your leader node and run the following command.\n$ ssh member_node_private_ip\nYou should connect to the member node without being prompted for a key or password."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/efa-start-nccl.html",
        "content": "The NVIDIA Collective Communications Library (NCCL) is a library of standard collective communication routines for multiple GPUs across a single node or multiple nodes. NCCL can be used together with EFA, Libfabric, and MPI to support various machine learning workloads. For more information, see the NCCL website.\nThe following steps help you to get started with EFA and NCCL using a base AMI for one of the supported operating systems.\nNote\nOnly the p3dn.24xlarge, p4d.24xlarge, p5.48xlarge instance types are supported.\nOnly Amazon Linux 2 and Ubuntu 20.04/22.04 base AMIs are supported.\nOnly NCCL 2.4.2 and later is supported with EFA.\nFor more information about running machine learning workloads with EFA and NCCL using an AWS Deep Learning AMIs, see Using EFA on the DLAMI in the AWS Deep Learning AMIs Developer Guide.\nSteps\nStep 1: Prepare an EFA-enabled security group\nStep 2: Launch a temporary instance\nStep 3: Install Nvidia GPU drivers, Nvidia CUDA toolkit, and cuDNN\nStep 4: Install GDRCopy\nStep 5: Install the EFA software\nStep 6: Install NCCL\nStep 7: Install the NCCL tests\nStep 8: Test your EFA and NCCL configuration\nStep 9: Install your machine learning applications\nStep 10: Create an EFA and NCCL-enabled AMI\nStep 11: Terminate the temporary instance\nStep 12: Launch EFA and NCCL-enabled instances into a cluster placement group\nStep 13: Enable passwordless SSH\nStep 1: Prepare an EFA-enabled security group\nAn EFA requires a security group that allows all inbound and outbound traffic to and from the security group itself. The following procedure creates a security group that allows all inbound and outbound traffic to and from itself, and that allows inbound SSH traffic from any IPv4 address for SSH connectivity.\nImportant\nThis security group is intended for testing purposes only. For your production environments, we recommend that you create an inbound SSH rule that allows traffic only from the IP address from which you are connecting, such as the IP address of your computer, or a range of IP addresses in your local network.\nFor other scenarios, see Security group rules for different use cases.\nTo create an EFA-enabled security group\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Security Groups and then choose Create security group.\nIn the Create security group window, do the following:\nFor Security group name, enter a descriptive name for the security group, such as EFA-enabled security group.\n(Optional) For Description, enter a brief description of the security group.\nFor VPC, select the VPC into which you intend to launch your EFA-enabled instances.\nChoose Create security group.\nSelect the security group that you created, and on the Details tab, copy the Security group ID.\nWith the security group still selected, choose Actions, Edit inbound rules, and then do the following:\nChoose Add rule.\nFor Type, choose All traffic.\nFor Source type, choose Custom and paste the security group ID that you copied into the field.\nChoose Add rule.\nFor Type, choose SSH.\nFor Source type, choose Anywhere-IPv4.\nChoose Save rules.\nWith the security group still selected, choose Actions, Edit outbound rules, and then do the following:\nChoose Add rule.\nFor Type, choose All traffic.\nFor Destination type, choose Custom and paste the security group ID that you copied into the field.\nChoose Save rules.\nStep 2: Launch a temporary instance\nLaunch a temporary instance that you can use to install and configure the EFA software components. You use this instance to create an EFA-enabled AMI from which you can launch your EFA-enabled instances.\nTo launch a temporary instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances, and then choose Launch Instances to open the new launch instance wizard.\n(Optional) In the Name and tags section, provide a name for the instance, such as EFA-instance. The name is assigned to the instance as a resource tag (Name=EFA-instance).\nIn the Application and OS Images section, select an AMI for one of the supported operating systems. Only Amazon Linux 2, Ubuntu 20.04, and Ubuntu 22.04 are supported.\nIn the Instance type section, select either p3dn.24xlarge, p4d.24xlarge, or p5.48xlarge.\nIn the Key pair section, select the key pair to use for the instance.\nIn the Network settings section, choose Edit, and then do the following:\nFor Subnet, choose the subnet in which to launch the instance. If you do not select a subnet, you can't enable the instance for EFA.\nFor Firewall (security groups), choose Select existing security group, and then select the security group that you created in the previous step.\nExpand the Advanced network configuration section.\nFor Network interface 1, select Network card index = 0, Device index = 0, and Interface type = EFA with ENA.\n(Optional) If you are using a multi-card instance type, such as p4d.24xlarge or p5.48xlarge, for each additional network interface required, choose Add network interface, for Network card index select the next unused index, and then select Device index = 1 and Interface type = EFA with ENA or EFA-only.\nIn the Storage section, configure the volumes as needed.\nNote\nYou must provision an additional 10 to 20 GiB of storage for the Nvidia CUDA Toolkit. If you do not provision enough storage, you will receive an insufficient disk space error when attempting to install the Nvidia drivers and CUDA toolkit.\nIn the Summary panel on the right, choose Launch instance.\nStep 3: Install Nvidia GPU drivers, Nvidia CUDA toolkit, and cuDNN\nAmazon Linux 2\nUbuntu 20.04/22.04\nTo install the Nvidia GPU drivers, Nvidia CUDA toolkit, and cuDNN\nTo ensure that all of your software packages are up to date, perform a quick software update on your instance.\n$ sudo yum upgrade -y && sudo reboot\nAfter the instance has rebooted, reconnect to it.\nInstall the utilities that are needed to install the Nvidia GPU drivers and the Nvidia CUDA toolkit.\n$ sudo yum groupinstall 'Development Tools' -y\nDisable the nouveau open source drivers.\nInstall the required utilities and the kernel headers package for the version of the kernel that you are currently running.\n$ sudo yum install -y wget kernel-devel-$(uname -r) kernel-headers-$(uname -r)\nAdd nouveau to the /etc/modprobe.d/blacklist.conf deny list file.\n$ cat << EOF | sudo tee --append /etc/modprobe.d/blacklist.conf\nblacklist vga16fb\nblacklist nouveau\nblacklist rivafb\nblacklist nvidiafb\nblacklist rivatv\nEOF\nAppend GRUB_CMDLINE_LINUX=\"rdblacklist=nouveau\" to the grub file and rebuild the Grub configuration.\n$ echo 'GRUB_CMDLINE_LINUX=\"rdblacklist=nouveau\"' | sudo tee -a /etc/default/grub \\\n&& sudo grub2-mkconfig -o /boot/grub2/grub.cfg\nReboot the instance and reconnect to it.\nPrepare the required repositories\nEnable the EPEL repository and set the distribution to rhel7.\n$ sudo amazon-linux-extras install epel \\\n&& distribution='rhel7'\nSet up the CUDA network repository and update the repository cache.\n$ ARCH=$( /bin/arch ) \\\n&& sudo yum-config-manager --add-repo http://developer.download.nvidia.com/compute/cuda/repos/$distribution/${ARCH}/cuda-$distribution.repo \\\n&& sudo yum clean expire-cache\n(Kernel version 5.10 only) Perform these steps only if you are using Amazon Linux 2 with kernel version 5.10. If you are using Amazon Linux 2 with kernel version 4.12, skip these steps. To check your kernel version, run uname -r.\nCreate the Nvidia driver configuration file named /etc/dkms/nvidia.conf.\n$ sudo mkdir -p /etc/dkms \\\n&& echo \"MAKE[0]=\\\"'make' -j2 module SYSSRC=\\${kernel_source_dir} IGNORE_XEN_PRESENCE=1 IGNORE_PREEMPT_RT_PRESENCE=1 IGNORE_CC_MISMATCH=1 CC=/usr/bin/gcc10-gcc\\\"\" | sudo tee /etc/dkms/nvidia.conf\n(p4d.24xlarge and p5.48xlarge only) Copy the Nvidia driver configuration file.\n$ sudo cp /etc/dkms/nvidia.conf /etc/dkms/nvidia-open.conf\nInstall the Nvidia GPU drivers, NVIDIA CUDA toolkit, and cuDNN.\n$ sudo yum clean all \\\n&& sudo yum -y install nvidia-driver-latest-dkms \\\n&& sudo yum -y install cuda-drivers-fabricmanager cuda libcudnn8-devel\nReboot the instance and reconnect to it.\n(p4d.24xlarge and p5.48xlarge only) Start the Nvidia Fabric Manager service, and ensure that it starts automatically when the instance starts. Nvidia Fabric Manager is required for NV Switch Management.\n$ sudo systemctl enable nvidia-fabricmanager && sudo systemctl start nvidia-fabricmanager\nEnsure that the CUDA paths are set each time that the instance starts.\nFor bash shells, add the following statements to /home/username/.bashrc and /home/username/.bash_profile.\nexport PATH=/usr/local/cuda/bin:$PATH\nexport LD_LIBRARY_PATH=/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\nFor tcsh shells, add the following statements to /home/username/.cshrc.\nsetenv PATH=/usr/local/cuda/bin:$PATH\nsetenv LD_LIBRARY_PATH=/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\nTo confirm that the Nvidia GPU drivers are functional, run the following command.\n$ nvidia-smi -q | head\nThe command should return information about the Nvidia GPUs, Nvidia GPU drivers, and Nvidia CUDA toolkit.\nStep 4: Install GDRCopy\nInstall GDRCopy to improve the performance of Libfabric. For more information about GDRCopy, see the GDRCopy repository.\nAmazon Linux 2\nUbuntu 20.04/22.04\nTo install GDRCopy\nInstall the required dependencies.\n$ sudo yum -y install dkms rpm-build make check check-devel subunit subunit-devel\nDownload and extract the GDRCopy package.\n$ wget https://github.com/NVIDIA/gdrcopy/archive/refs/tags/v2.4.tar.gz \\\n&& tar xf v2.4.tar.gz ; cd gdrcopy-2.4/packages\nBuild the GDRCopy RPM package.\n$ CUDA=/usr/local/cuda ./build-rpm-packages.sh\nInstall the GDRCopy RPM package.\n$ sudo rpm -Uvh gdrcopy-kmod-2.4-1dkms.noarch*.rpm \\\n&& sudo rpm -Uvh gdrcopy-2.4-1.x86_64*.rpm \\\n&& sudo rpm -Uvh gdrcopy-devel-2.4-1.noarch*.rpm\nStep 5: Install the EFA software\nInstall the EFA-enabled kernel, EFA drivers, Libfabric, aws-ofi-nccl plugin, and Open MPI stack that is required to support EFA on your instance.\nTo install the EFA software\nConnect to the instance you launched. For more information, see Connect to your Linux instance using SSH.\nDownload the EFA software installation files. The software installation files are packaged into a compressed tarball (.tar.gz) file. To download the latest stable version, use the following command.\n$ curl -O https://efa-installer.amazonaws.com/aws-efa-installer-1.38.0.tar.gz\nYou can also get the latest version by replacing the version number with latest in the preceding command.\n(Optional) Verify the authenticity and integrity of the EFA tarball (.tar.gz) file.\nWe recommend that you do this to verify the identity of the software publisher and to check that the file has not been altered or corrupted since it was published. If you do not want to verify the tarball file, skip this step.\nShow more\nExtract the files from the compressed .tar.gz file and navigate into the extracted directory.\n$ tar -xf aws-efa-installer-1.38.0.tar.gz && cd aws-efa-installer\nRun the EFA software installation script.\nNote\nFrom EFA 1.30.0, both Open MPI 4 and Open MPI 5 are installed by default. Unless you need Open MPI 5, we recommend that you install only Open MPI 4. The following command installs Open MPI 4 only. If you want to install Open MPI 4 and Open MPI 5, remove --mpi=openmpi4.\n$ sudo ./efa_installer.sh -y --mpi=openmpi4\nLibfabric is installed in the /opt/amazon/efa directory. The aws-ofi-nccl plugin is installed in the /opt/amazon/ofi-nccl directory. Open MPI is installed in the /opt/amazon/openmpi directory.\nIf the EFA installer prompts you to reboot the instance, do so and then reconnect to the instance. Otherwise, log out of the instance and then log back in to complete the installation.\nConfirm that the EFA software components were successfully installed.\n$ fi_info -p efa -t FI_EP_RDM\nThe command should return information about the Libfabric EFA interfaces. The following example shows the command output.\np3dn.24xlarge with single network interface\nprovider: efa\nfabric: EFA-fe80::94:3dff:fe89:1b70\ndomain: efa_0-rdm\nversion: 2.0\ntype: FI_EP_RDM\nprotocol: FI_PROTO_EFA\np4d.24xlarge and p5.48xlarge with multiple network interfaces\nprovider: efa\nfabric: EFA-fe80::c6e:8fff:fef6:e7ff\ndomain: efa_0-rdm\nversion: 111.0\ntype: FI_EP_RDM\nprotocol: FI_PROTO_EFA\nprovider: efa\nfabric: EFA-fe80::c34:3eff:feb2:3c35\ndomain: efa_1-rdm\nversion: 111.0\ntype: FI_EP_RDM\nprotocol: FI_PROTO_EFA\nprovider: efa\nfabric: EFA-fe80::c0f:7bff:fe68:a775\ndomain: efa_2-rdm\nversion: 111.0\ntype: FI_EP_RDM\nprotocol: FI_PROTO_EFA\nprovider: efa\nfabric: EFA-fe80::ca7:b0ff:fea6:5e99\ndomain: efa_3-rdm\nversion: 111.0\ntype: FI_EP_RDM\nprotocol: FI_PROTO_EFA\nStep 6: Install NCCL\nInstall NCCL. For more information about NCCL, see the NCCL repository.\nTo install NCCL\nNavigate to the /opt directory.\n$ cd /opt\nClone the official NCCL repository to the instance and navigate into the local cloned repository.\n$ sudo git clone https://github.com/NVIDIA/nccl.git -b v2.23.4-1 && cd nccl\nBuild and install NCCL and specify the CUDA installation directory.\n$ sudo make -j src.build CUDA_HOME=/usr/local/cuda\nStep 7: Install the NCCL tests\nInstall the NCCL tests. The NCCL tests enable you to confirm that NCCL is properly installed and that it is operating as expected. For more information about the NCCL tests, see the nccl-tests repository.\nTo install the NCCL tests\nNavigate to your home directory.\n$ cd $HOME\nClone the official nccl-tests repository to the instance and navigate into the local cloned repository.\n$ git clone https://github.com/NVIDIA/nccl-tests.git && cd nccl-tests\nAdd the Libfabric directory to the LD_LIBRARY_PATH variable.\nAmazon Linux 2\n$ export LD_LIBRARY_PATH=/opt/amazon/efa/lib64:$LD_LIBRARY_PATH\nUbuntu\n$ export LD_LIBRARY_PATH=/opt/amazon/efa/lib:$LD_LIBRARY_PATH\nInstall the NCCL tests and specify the MPI, NCCL, and CUDA installation directories.\n$ make MPI=1 MPI_HOME=/opt/amazon/openmpi NCCL_HOME=/opt/nccl/build CUDA_HOME=/usr/local/cuda\nStep 8: Test your EFA and NCCL configuration\nRun a test to ensure that your temporary instance is properly configured for EFA and NCCL.\nTo test your EFA and NCCL configuration\nCreate a host file that specifies the hosts on which to run the tests. The following command creates a host file named my-hosts that includes a reference to the instance itself.\nIMDSv2\nIMDSv1\n[ec2-user ~]$ TOKEN=`curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"` \\\n&& curl -H \"X-aws-ec2-metadata-token: $TOKEN\" -v http://169.254.169.254/latest/meta-data/local-ipv4 >> my-hosts\nRun the test and specify the host file (--hostfile) and the number of GPUs to use (-n). The following command runs the all_reduce_perf test on 8 GPUs on the instance itself, and specifies the following environment variables.\nFI_EFA_USE_DEVICE_RDMA=1\u2014(p4d.24xlarge only) uses the device's RDMA functionality for one-sided and two-sided transfer.\nNCCL_DEBUG=INFO\u2014enables detailed debugging output. You can also specify VERSION to print only the NCCL version at the start of the test, or WARN to receive only error messages.\nFor more information about the NCCL test arguments, see the NCCL Tests README in the official nccl-tests repository.\np3dn.24xlarge\n$ /opt/amazon/openmpi/bin/mpirun \\\n-x LD_LIBRARY_PATH=/opt/nccl/build/lib:/usr/local/cuda/lib64:/opt/amazon/efa/lib:/opt/amazon/openmpi/lib:/opt/amazon/ofi-nccl/lib:$LD_LIBRARY_PATH \\\n-x NCCL_DEBUG=INFO \\\n--hostfile my-hosts -n 8 -N 8 \\\n--mca pml ^cm --mca btl tcp,self --mca btl_tcp_if_exclude lo,docker0 --bind-to none \\\n$HOME/nccl-tests/build/all_reduce_perf -b 8 -e 1G -f 2 -g 1 -c 1 -n 100\np4d.24xlarge and p5.48xlarge\n$ /opt/amazon/openmpi/bin/mpirun \\\n-x FI_EFA_USE_DEVICE_RDMA=1 \\\n-x LD_LIBRARY_PATH=/opt/nccl/build/lib:/usr/local/cuda/lib64:/opt/amazon/efa/lib:/opt/amazon/openmpi/lib:/opt/amazon/ofi-nccl/lib:$LD_LIBRARY_PATH \\\n-x NCCL_DEBUG=INFO \\\n--hostfile my-hosts -n 8 -N 8 \\\n--mca pml ^cm --mca btl tcp,self --mca btl_tcp_if_exclude lo,docker0 --bind-to none \\\n$HOME/nccl-tests/build/all_reduce_perf -b 8 -e 1G -f 2 -g 1 -c 1 -n 100\nYou can confirm that EFA is active as the underlying provider for NCCL when the NCCL_DEBUG log is printed.\nip-192-168-2-54:14:14 [0] NCCL INFO NET/OFI Selected Provider is efa*\nThe following additional information is displayed when using a p4d.24xlarge instance.\nip-192-168-2-54:14:14 [0] NCCL INFO NET/OFI Running on P4d platform, Setting NCCL_TOPO_FILE environment variable to /home/ec2-user/install/plugin/share/aws-ofi-nccl/xml/p4d-24xl-topo.xml\nStep 9: Install your machine learning applications\nInstall the machine learning applications on the temporary instance. The installation procedure varies depending on the specific machine learning application. For more information about installing software on your Linux instance, see Manage software on your Amazon Linux 2 instance.\nNote\nRefer to your machine learning application\u2019s documentation for installation instructions.\nStep 10: Create an EFA and NCCL-enabled AMI\nAfter you have installed the required software components, you create an AMI that you can reuse to launch your EFA-enabled instances.\nTo create an AMI from your temporary instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the temporary instance that you created and choose Actions, Image, Create image.\nFor Create image, do the following:\nFor Image name, enter a descriptive name for the AMI.\n(Optional) For Image description, enter a brief description of the purpose of the AMI.\nChoose Create image.\nIn the navigation pane, choose AMIs.\nLocate the AMI tht you created in the list. Wait for the status to change from pending to available before continuing to the next step.\nStep 11: Terminate the temporary instance\nAt this point, you no longer need the temporary instance that you launched. You can terminate the instance to stop incurring charges for it.\nTo terminate the temporary instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the temporary instance that you created and then choose Actions, Instance state, Terminate instance.\nWhen prompted for confirmation, choose Terminate.\nStep 12: Launch EFA and NCCL-enabled instances into a cluster placement group\nLaunch your EFA and NCCL-enabled instances into a cluster placement group using the EFA-enabled AMI and the EFA-enabled security group that you created earlier.\nNote\nIt is not an absolute requirement to launch your EFA-enabled instances into a cluster placement group. However, we do recommend running your EFA-enabled instances in a cluster placement group as it launches the instances into a low-latency group in a single Availability Zone.\nTo ensure that capacity is available as you scale your cluster\u2019s instances, you can create a Capacity Reservation for your cluster placement group. For more information, see Create Capacity Reservations in cluster placement groups.\nNew console\nOld console\nTo launch a temporary instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances, and then choose Launch Instances to open the new launch instance wizard.\n(Optional) In the Name and tags section, provide a name for the instance, such as EFA-instance. The name is assigned to the instance as a resource tag (Name=EFA-instance).\nIn the Application and OS Images section, choose My AMIs, and then select the AMI that you created in the previous step.\nIn the Instance type section, select either p3dn.24xlarge or p4d.24xlarge.\nIn the Key pair section, select the key pair to use for the instance.\nIn the Network settings section, choose Edit, and then do the following:\nFor Subnet, choose the subnet in which to launch the instance. If you do not select a subnet, you can't enable the instance for EFA.\nFor Firewall (security groups), choose Select existing security group, and then select the security group that you created in the previous step.\nExpand the Advanced network configuration section.\nFor Network interface 1, select Network card index = 0, Device index = 0, and Interface type = EFA with ENA.\n(Optional) If you are using a multi-card instance type, such as p4d.24xlarge or p5.48xlarge, for each additional network interface required, choose Add network interface, for Network card index select the next unused index, and then select Device index = 1 and Interface type = EFA eith ENA or EFA-only.\n(Optional) In the Storage section, configure the volumes as needed.\nIn the Advanced details section, for Placement group name, select the cluster placement group into which to launch the instance. If you need to create a new cluster placement group, choose Create new placement group.\nIn the Summary panel on the right, for Number of instances, enter the number of EFA-enabled instances that you want to launch, and then choose Launch instance.\nStep 13: Enable passwordless SSH\nTo enable your applications to run across all of the instances in your cluster, you must enable passwordless SSH access from the leader node to the member nodes. The leader node is the instance from which you run your applications. The remaining instances in the cluster are the member nodes.\nTo enable passwordless SSH between the instances in the cluster\nSelect one instance in the cluster as the leader node, and connect to it.\nDisable strictHostKeyChecking and enable ForwardAgent on the leader node. Open ~/.ssh/config using your preferred text editor and add the following.\nHost *\n    ForwardAgent yes\nHost *\n    StrictHostKeyChecking no\nGenerate an RSA key pair.\n$ ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa\nThe key pair is created in the $HOME/.ssh/ directory.\nChange the permissions of the private key on the leader node.\n$ chmod 600 ~/.ssh/id_rsa\nchmod 600 ~/.ssh/config\nOpen ~/.ssh/id_rsa.pub using your preferred text editor and copy the key.\nFor each member node in the cluster, do the following:\nConnect to the instance.\nOpen ~/.ssh/authorized_keys using your preferred text editor and add the public key that you copied earlier.\nTo test that the passwordless SSH is functioning as expected, connect to your leader node and run the following command.\n$ ssh member_node_private_ip\nYou should connect to the member node without being prompted for a key or password."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/efa-acc-inst-types.html",
        "content": "Many instances types that support EFA also have multiple network cards. For more information, see Network cards. If you plan to use EFA with one of these instance types, we recommend the following basic configuration:\nFor the primary network interface (network card index 0, device index 0), create an EFA (EFA with ENA) interface. You can't use an EFA-only network interface as the primary network interface.\nFor each additional network interface, use the next unused network card index, device index 1, and either an EFA (EFA with ENA) or EFA-only network interface, depending on your usecase, such as ENA bandwidth requirements or IP address space. For example use cases, see EFA configuration for a P5 instances.\nNote\nP5 instances require network interfaces to be configured in a specific manner to enable maximum network bandwidth. For more information, see EFA configuration for a P5 instances.\nThe following examples show how to launch an instance based on these recommendations.\nInstance launch\nLaunch templates\nTo specify EFAs during instance launch using the launch instance wizard\nIn the Network settings section, choose Edit.\nExpand Advanced network configuration.\nFor the primary network interface (Network interface 1), select Network card index = 0, Device index = 0, and Interface type = EFA with ENA.\nFor each additional network interface required, choose Add network interface. For Network card index select the next unused index, and then select Device index = 1, and Interface type = EFA with ENA or EFA-only.\nTo specify EFAs during instance launch using the run-instances command\nFor --network-interfaces, specify the required number of network interfaces. For the primary network interface, specify NetworkCardIndex=0, DeviceIndex=0, and InterfaceType=efa. For any additional network interfaces, for NetworkCardIndex specify the next unused index, DeviceIndex=1, and InterfaceType=efa or efa-only.\nThe following example command snippet shows a request with 32 EFA devices and one ENA device.\n$ aws --region $REGION ec2 run-instances \\\n --instance-type p5.48xlarge \\\n --count 1 \\\n --key-name key_pair_name \\\n --image-id ami_id \\\n --network-interfaces \"NetworkCardIndex=0,DeviceIndex=0,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa\" \\\n\"NetworkCardIndex=1,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=2,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=3,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=4,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=5,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=6,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=7,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=8,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=9,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=10,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=11,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=12,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=13,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=14,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=15,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=16,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=17,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=18,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=19,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=20,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=21,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=22,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=23,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=24,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=25,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=26,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=27,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=28,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=29,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=30,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\" \\\n\"NetworkCardIndex=31,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa|efa-only\"\n...\nEFA configuration for a P5 instances\nP5 instances have a total network bandwidth capacity of 3,200 Gbps, of which up to 800 Gbps can be utilized for IP network traffic. Because EFA and IP network traffic share the same underlying resources, bandwidth used by one will reduce the bandwidth that is available to the other. This means that you can distribute the network bandwidth between EFA traffic and IP traffic in any combination, as long as the total bandwidth does not exceed 3,200 Gbps and IP bandwidth does not exceed 800 Gbps.\nUse case 1: Save IP addresses and avoid potential Linux IP issues\nThis configuration provides up to 3200 Gbps of EFA networking bandwidth and up to 100 Gbps of IP networking bandwidth with one private IP address. This configuration also helps to avoid potential Linux IP issues, such as disallowed auto-assignment of public IP addresses and IP routing challenges (hostname to IP address mapping issues and source IP address mismatches), that can arise if an instance has multiple network interfaces. For example, if you use 400 Gbps or IP bandwidth, you can achieve up to 2,800 Gbps of EFA bandwidth at the same time.\nFor the primary network interface (network card index 0, device index 0), use an EFA (EFA with ENA) network interface.\nFor the remaining network interfaces (network card indexes 1-31, device index 1), use EFA-only network interfaces.\nUse case 2: Maximum EFA and IP network bandwidth\nThis configuration provides up to 3200 Gbps of EFA networking bandwidth and up to 800 Gbps of IP networking bandwidth with 8 private IP address. You can't auto-assign public IP addresses with this configuration. However, you can attach an Elastic IP address to the primary network interface (network card index 0, device index 0) after launch for internet connectivity.\nFor the primary network interface (network card index 0, device index 0), use an EFA (EFA with ENA) network interface.\nFor the remaining interfaces, do the following:\nSpecify EFA-only network interfaces on network card indexes 1, 2, and 3, and use device index 1.\nSpecify one EFA (EFA with ENA) network interface and three EFA-only network interfaces in each of the following network card index subsets, and use device index 1:\n[4,5,6,7]\n[8,9,10,11]\n[12,13,14,15]\n[16,17,18,19]\n[20,21,22,23]\n[24,25,26,27]\n[28,29,30,31]\nThe following example illustrates this configuration:\n$ aws --region $REGION ec2 run-instances \\\n --instance-type p5.48xlarge \\\n --count 1 \\\n --key-name key_pair_name \\\n --image-id ami_id \\\n --network-interfaces \"NetworkCardIndex=0,DeviceIndex=0,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa\" \\\n\"NetworkCardIndex=1,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\" \\\n\"NetworkCardIndex=2,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\" \\\n\"NetworkCardIndex=3,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\" \\\n\"NetworkCardIndex=4,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa\" \\\n\"NetworkCardIndex=5,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\" \\\n\"NetworkCardIndex=6,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\" \\\n\"NetworkCardIndex=7,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\" \\\n\"NetworkCardIndex=8,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa\" \\\n\"NetworkCardIndex=9,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\" \\\n\"NetworkCardIndex=10,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\" \\\n\"NetworkCardIndex=11,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\" \\\n\"NetworkCardIndex=12,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa\" \\\n\"NetworkCardIndex=13,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\" \\\n\"NetworkCardIndex=14,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\" \\\n\"NetworkCardIndex=15,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\" \\\n\"NetworkCardIndex=16,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa\" \\\n\"NetworkCardIndex=17,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\" \\\n\"NetworkCardIndex=18,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\" \\\n\"NetworkCardIndex=19,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\" \\\n\"NetworkCardIndex=20,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa\" \\\n\"NetworkCardIndex=21,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\" \\\n\"NetworkCardIndex=22,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\" \\\n\"NetworkCardIndex=23,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\" \\\n\"NetworkCardIndex=24,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa\" \\\n\"NetworkCardIndex=25,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\" \\\n\"NetworkCardIndex=26,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\" \\\n\"NetworkCardIndex=27,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\" \\\n\"NetworkCardIndex=28,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa\" \\\n\"NetworkCardIndex=29,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\" \\\n\"NetworkCardIndex=30,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\" \\\n\"NetworkCardIndex=31,DeviceIndex=1,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa-only\"\n..."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/create-efa.html",
        "content": "You can create an EFA and attach it to an Amazon EC2 instance much like any other elastic network interface in Amazon EC2. However, unlike elastic network interfaces, EFAs can't be attached to or detached from an instance in a running state.\nConsiderations\nYou can change the security group that is associated with an EFA. To enable OS-bypass functionality, the EFA must be a member of a security group that allows all inbound and outbound traffic to and from the security group itself. For more information, see Step 1: Prepare an EFA-enabled security group.\nYou change the security group that is associated with an EFA in the same way that you change the security group that is associated with an elastic network interface. For more information, see Changing the security group.\nYou assign an Elastic IP (IPv4) and IPv6 address to an EFA (EFA with ENA) network interface in the same way that you assign an IP address to an elastic network interface. For more information, see Managing IP addresses.\nYou can't assign an IP address to an EFA-only network interface.\nTasks\nCreate an EFA\nAttach an EFA to a stopped instance\nAttach an EFA when launching an instance\nAdd an EFA to a launch template\nCreate an EFA\nYou can create an EFA in a subnet in a VPC. You can't move the EFA to another subnet after it's created, and you can only attach it to stopped instances in the same Availability Zone.\nConsole\nAWS CLI\nTo create an EFA (EFA with ENA) network interface using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Network Interfaces.\nChoose Create Network Interface.\nFor Description, enter a descriptive name for the EFA.\nFor Subnet, select the subnet in which to create the EFA.\nFor Private IP, enter the primary private IPv4 address. If you don't specify an IPv4 address, we select an available private IPv4 address from the selected subnet.\n(Optional) If you selected a subnet that has an associated IPv6 CIDR block, you can optionally specify an IPv6 address in the IPv6 IP field.\nFor Security groups, select one or more security groups.\nFor Elastic Fabric Adapter, select Enable.\nChoose Create network interface.\nTo create an EFA-only network interface using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Network Interfaces.\nExpand the Create Network Interface drop-down and choose Create EFA Only network interface.\nFor Description, enter a descriptive name for the EFA.\nFor Subnet, select the subnet in which to create the EFA.\nChoose Create network interface.\nAttach an EFA to a stopped instance\nYou can attach an EFA to any supported instance that is in the stopped state. You cannot attach an EFA to an instance that is in the running state. For more information about the supported instance types, see Supported instance types.\nYou attach an EFA to an instance in the same way that you attach a network interface to an instance. For more information, see Attach a network interface.\nAttach an EFA when launching an instance\nTo attach an existing EFA when launching an instance (AWS CLI)\nUse the run-instances command. For --network-interfaces, specify the EFA network interfaces to attach. For the primary network interface, specify an EFA network interface and NetworkCardIndex=0, DeviceIndex=0. If you are attaching multiple EFA network interfaces, see Maximize network bandwidth on Amazon EC2 instances with multiple network cards.\naws ec2 run-instances \\\n--image-id ami_id \\\n--count 1 \\\n--instance-type c5n.18xlarge \\\n--key-name my_key_pair \\\n--network-interfaces \"NetworkCardIndex=0,DeviceIndex=0,NetworkInterfaceId=efa_1_id,Groups=sg_id,SubnetId=subnet_id\"\n...\nTo attach a new EFA when launching an instance (AWS CLI)\nUse the run-instances command. For --network-interfaces, specify the EFA network interfaces to attach. For the primary network interface, use NetworkCardIndex=0, DeviceIndex=0, and InterfaceType=efa. If you are attaching multiple EFA network interfaces, see Maximize network bandwidth on Amazon EC2 instances with multiple network cards.\naws ec2 run-instances \\\n--image-id ami_id \\\n--count 1 \\\n--instance-type c5n.18xlarge \\\n--key-name my_key_pair \\\n--network-interfaces \"NetworkCardIndex=0,DeviceIndex=0,Groups=security_group_id,SubnetId=subnet_id,InterfaceType=efa\"\n...\nAdd an EFA to a launch template\nYou can create a launch template that contains the configuration information needed to launch EFA-enabled instances. You can specify both EFA and EFA-only network interfaces in the launch template. To create an EFA-enabled launch template, create a new launch template and specify a supported instance type, your EFA-enabled AMI, and an EFA-enabled security group. For NetworkInterfaces, specify the EFA network interfaces to attach. For the primary network interface, use NetworkCardIndex=0, DeviceIndex=0, and InterfaceType=efa. If you are attaching multiple EFA network interfaces, see Maximize network bandwidth on Amazon EC2 instances with multiple network cards.\nYou can leverage launch templates to launch EFA-enabled instances with other AWS services, such as AWS Batch or AWS ParallelCluster.\nFor more information about creating launch templates, see Create an Amazon EC2 launch template."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/detach-efa.html",
        "content": "You can detach an EFA from an Amazon EC2 instance and delete it in the same way as any other elastic network interface in Amazon EC2.\nDetach an EFA\nTo detach an EFA from an instance, you must first stop the instance. You cannot detach an EFA from an instance that is in the running state.\nYou detach an EFA from an instance in the same way that you detach an elastic network interface from an instance. For more information, see Detach a network interface.\nDelete an EFA\nTo delete an EFA, you must first detach it from the instance. You cannot delete an EFA while it is attached to an instance.\nYou delete EFAs in the same way that you delete elastic network interfaces. For more information, see Delete a network interface."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/efa-working-monitor.html",
        "content": "You can use the following features to monitor the performance of your Elastic Fabric Adapters.\nTopics\nEFA driver metrics for an Amazon EC2 instance\nAmazon VPC flow logs\nAmazon CloudWatch\nEFA driver metrics for an Amazon EC2 instance\nThe Elastic Fabric Adapter (EFA) driver publishes multiple metrics from the instances that have EFA interfaces attached. You can use these metrics to troubleshoot application performance issues, choose the right cluster size for a workload, plan scaling activities proactively, and benchmark applications to determine whether they maximize the EFA performance available on an instance.\nTopics\nAvailable EFA driver metrics\nRetrieve EFA driver metrics for your instance\nAvailable EFA driver metrics\nThe EFA driver publishes the following metrics to the instance in real time. They provide the cumulative number of errors and packets or bytes sent, received, or dropped by the attached EFA devices since instance launch or the last driver reset.\nMetric Description\ntx_bytes\nThe number of bytes transmitted.\nUnit: bytes\nrx_bytes\nThe number of bytes received.\nUnit: bytes\ntx_pkts\nThe number of packets transmitted.\nUnit: count\nrx_pkts\nThe number of packets received.\nUnit: count\nrx_drops\nThe number of packets that were received and then dropped.\nUnit: count\nsend_bytes\nThe number of bytes sent using send operations.\nUnit: bytes\nrecv_bytes\nThe number of bytes received by send operations.\nUnit: bytes\nsend_wrs\nThe number of packets sent using send operations.\nUnit: count\nrecv_wrs\nThe number of packets received by send operations.\nUnit: count\nrdma_write_wrs\nThe number of completed rdma write operations.\nUnit: count\nrdma_read_wrs\nThe number of completed rdma read operations.\nUnit: count\nrdma_write_bytes\nThe number of bytes written to it by other instances using rdma write operations.\nUnit: bytes\nrdma_read_bytes\nThe number of bytes received using rdma read operations.\nUnit: bytes\nrdma_write_wr_err\nThe number of rdma write operations that had local or remote errors.\nUnit: count\nrdma_read_wr_err\nThe number of rdma read operations that had local or remote errors.\nUnit: count\nrdma_read_resp_bytes\nThe number of bytes sent in response to rdma read operations.\nUnit: bytes\nrdma_write_recv_bytes\nThe number of bytes received by rdma write operations.\nUnit: bytes\nRetrieve EFA driver metrics for your instance\nYou can use the rdma-tool command line tool to retrieve the metrics for all EFA interfaces attached to an instance as follows:\n$ rdma -p statistic show\nlink rdmap0s31/1 \n    tx_bytes 0 \n    tx_pkts 0 \n    rx_bytes 0 \n    rx_pkts 0 \n    rx_drops 0 \n    send_bytes 0 \n    send_wrs 0 \n    recv_bytes 0 \n    recv_wrs 0 \n    rdma_read_wrs 0 \n    rdma_read_bytes 0 \n    rdma_read_wr_err 0 \n    rdma_read_resp_bytes 0 \n    rdma_write_wrs 0 \n    rdma_write_bytes 0 \n    rdma_write_wr_err 0\nAlternatively, you can retrieve the metrics for each EFA interface attached to an instance from the sys files using the following command.\n$ more /sys/class/infiniband/device_number/ports/port_number/hw_counters/* | cat\nFor example\n$ more /sys/class/infiniband/rdmap0s31/ports/1/hw_counters/* | cat\n::::::::::::::\n/sys/class/infiniband/rdmap0s31/ports/1/hw_counters/lifespan\n::::::::::::::\n12\n::::::::::::::\n/sys/class/infiniband/rdmap0s31/ports/1/hw_counters/rdma_read_bytes\n::::::::::::::\n0\n::::::::::::::\n/sys/class/infiniband/rdmap0s31/ports/1/hw_counters/rdma_read_resp_bytes\n::::::::::::::\n0\n::::::::::::::\n/sys/class/infiniband/rdmap0s31/ports/1/hw_counters/rdma_read_wr_err\n::::::::::::::\n0\n::::::::::::::\n/sys/class/infiniband/rdmap0s31/ports/1/hw_counters/rdma_read_wrs\n::::::::::::::\n0\n::::::::::::::\n/sys/class/infiniband/rdmap0s31/ports/1/hw_counters/rdma_write_bytes\n::::::::::::::\n0\n::::::::::::::\n/sys/class/infiniband/rdmap0s31/ports/1/hw_counters/rdma_write_recv_bytes\n::::::::::::::\n0\n::::::::::::::\n/sys/class/infiniband/rdmap0s31/ports/1/hw_counters/rdma_write_wr_err\n::::::::::::::\n0\n::::::::::::::\n/sys/class/infiniband/rdmap0s31/ports/1/hw_counters/rdma_write_wrs\n::::::::::::::\n0\n::::::::::::::\n/sys/class/infiniband/rdmap0s31/ports/1/hw_counters/recv_bytes\n::::::::::::::\n0\n::::::::::::::\n/sys/class/infiniband/rdmap0s31/ports/1/hw_counters/recv_wrs\n::::::::::::::\n0\n::::::::::::::\n/sys/class/infiniband/rdmap0s31/ports/1/hw_counters/rx_bytes\n::::::::::::::\n0\n::::::::::::::\n/sys/class/infiniband/rdmap0s31/ports/1/hw_counters/rx_drops\n::::::::::::::\n0\n::::::::::::::\n/sys/class/infiniband/rdmap0s31/ports/1/hw_counters/rx_pkts\n::::::::::::::\n0\n::::::::::::::\n/sys/class/infiniband/rdmap0s31/ports/1/hw_counters/send_bytes\n::::::::::::::\n0\n::::::::::::::\n/sys/class/infiniband/rdmap0s31/ports/1/hw_counters/send_wrs\n::::::::::::::\n0\n::::::::::::::\n/sys/class/infiniband/rdmap0s31/ports/1/hw_counters/tx_bytes\n::::::::::::::\n0\n::::::::::::::\n/sys/class/infiniband/rdmap0s31/ports/1/hw_counters/tx_pkts\n::::::::::::::\n0\nAmazon VPC flow logs\nYou can create an Amazon VPC Flow Log to capture information about the traffic going to and from an EFA. Flow log data can be published to Amazon CloudWatch Logs and Amazon S3. After you create a flow log, you can retrieve and view its data in the chosen destination. For more information, see VPC Flow Logs in the Amazon VPC User Guide.\nYou create a flow log for an EFA in the same way that you create a flow log for an elastic network interface. For more information, see Create a flow log in the Amazon VPC User Guide.\nIn the flow log entries, EFA traffic is identified by the srcAddress and destAddress, which are both formatted as MAC addresses, as shown in the following example.\nversion accountId  eniId        srcAddress        destAddress       sourcePort destPort protocol packets bytes start      end        action log-status\n2       3794735123 eni-10000001 01:23:45:67:89:ab 05:23:45:67:89:ab -          -        -        9       5689  1521232534 1524512343 ACCEPT OK\nAmazon CloudWatch\nIf you are using EFA in an Amazon EKS cluster, you can monitor your EFAs using CloudWatch Container Insights. For more information, see Amazon EKS and Kubernetes Container Insights metrics in the Amazon CloudWatch User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/efa-verify.html",
        "content": "You can optionally verify the EFA tarball (.tar.gz file) using an MD5 or SHA256 checksum. We recommend that you do this to verify the identity of the software publisher and to check that the application has not been altered or corrupted since it was published.\nTo verify the tarball\nUse the md5sum utility for the MD5 checksum, or the sha256sum utility for the SHA256 checksum, and specify the tarball filename. You must run the command from the directory in which you saved the tarball file.\nMD5\n$  md5sum tarball_filename.tar.gz\nSHA256\n$  sha256sum tarball_filename.tar.gz\nThe commands should return a checksum value in the following format.\nchecksum_value tarball_filename.tar.gz\nCompare the checksum value returned by the command with the checksum value provided in the table below. If the checksums match, then it is safe to run the installation script. If the checksums do not match, do not run the installation script, and contact Support.\nFor example, the following command verifies the EFA 1.9.4 tarball using the SHA256 checksum.\n$  sha256sum aws-efa-installer-1.9.4.tar.gz\nExample output:\n1009b5182693490d908ef0ed2c1dd4f813cc310a5d2062ce9619c4c12b5a7f14 aws-efa-installer-1.9.4.tar.gz\nThe following table lists the checksums for recent versions of EFA.\nVersion Download URL Checksums\nEFA 1.38.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.38.0.tar.gz\nMD5: 43a2a446b33a2506f40853d55059f1ea\nSHA256: 4f436954f35ad53754b4d005fd8d0be63de3b4184de41a695b504bdce0fecb22\nEFA 1.37.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.37.0.tar.gz\nMD5: 6328070192bae920eca45797ad4c1db1\nSHA256: 2584fc3c8bb99f29b3285e275747ff09d67c18e162c2a652e36c976b72154bfb\nEFA 1.36.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.36.0.tar.gz\nMD5: 1bec83180fbffb23452ab6469ca21dfa\nSHA256: de183f333cfb58aeb7908a67bf9106985ba3ccb7f8638b851d2a0d8dbfacaec4\nEFA 1.35.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.35.0.tar.gz\nMD5: 252f03c978dca5f8e8d9f34e488b256e\nSHA256: 432b6ad4368ba0cd8b902729d14a908a97be7a3dcc5239422ea994a47f35a5e1\nEFA 1.34.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.34.0.tar.gz\nMD5: 5cd4b28d27a31677c16139b54c9acb45\nSHA256: bd68839e741b0afd3ec2e37d50603803cfa7a279c120f0a736cc57c2ff2d7fdc\nEFA 1.33.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.33.0.tar.gz\nMD5: e2f61fccbcaa11e2ccfddd3660522276\nSHA256: 0372877b87c6a7337bb7791d255e1053b907d030489fb2c3732ba70069185fce\nEFA 1.32.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.32.0.tar.gz\nMD5: db8d65cc028d8d08b5a9f2d88881c1b1\nSHA256: 5f7233760be57f6fee6de8c09acbfbf59238de848e06048dc54d156ef578fc66\nEFA 1.31.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.31.0.tar.gz\nMD5: 856352f12bef2ccbadcd75e35aa52aaf\nSHA256: 943325bd37902a4300ac9e5715163537d56ecb4e7b87b37827c3e547aa1897bf\nEFA 1.30.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.30.0.tar.gz\nMD5: 31f48e1a47fe93ede8ebd273fb747358\nSHA256: 876ab9403e07a0c3c91a1a34685a52eced890ae052df94857f6081c5f6c78a0a\nEFA 1.29.1\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.29.1.tar.gz\nMD5: e1872ca815d752c1d7c2b5c175e52a16\nSHA256: 178b263b8c25845b63dc93b25bcdff5870df5204ec509af26f43e8d283488744\nEFA 1.29.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.29.0.tar.gz\nMD5: 39d06a002154d94cd982ed348133f385\nSHA256: 836655f87015547e733e7d9f7c760e4e24697f8bbc261bb5f3560abd4206bc36\nEFA 1.28.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.28.0.tar.gz\nMD5: 9dc13b7446665822605e66febe074035\nSHA256: 2e625d2d6d3e073b5178e8e861891273d896b66d03cb1a32244fd56789f1c435\nEFA 1.27.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.27.0.tar.gz\nMD5: 98bfb515ea3e8d93f554020f3837fa15\nSHA256: 1d49a97b0bf8d964d91652a79ac851f2550e33a5bf9d0cf86ec9357ff6579aa3\nEFA 1.26.1\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.26.1.tar.gz\nMD5: 884e74671fdef4725501f7cd2d451d0c\nSHA256: c616994c924f54ebfabfab32b7fe8ac56947fae00a0ff453d975e298d174fc96\nEFA 1.26.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.26.0.tar.gz\nMD5: f8839f12ff2e3b9ba09ae8a82b30e663\nSHA256: bc1abc1f76e97d204d3755d2a9ca307fc423e51c63141f798c2f15be3715aa11\nEFA 1.25.1\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.25.1.tar.gz\nMD5: 6d876b894547847a45bb8854d4431f18\nSHA256: d2abc553d22b89a4ce92882052c1fa6de450d3a801fe005da718b7d4b9602b06\nEFA 1.25.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.25.0.tar.gz\nMD5: 1993836ca749596051da04694ea0d00c\nSHA256: 98b7b26ce031a2d6a93de2297cc71b03af647194866369ca53b60d82d45ad342\nEFA 1.24.1\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.24.1.tar.gz\nMD5: 211b249f39d53086f3cb0c07665f4e6f\nSHA256: 120cfeec233af0955623ac7133b674143329f9561a9a8193e473060f596aec62\nEFA 1.24.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.24.0.tar.gz\nMD5: 7afe0187951e2dd2c9cc4b572e62f924\nSHA256: 878623f819a0d9099d76ecd41cf4f569d4c3aac0c9bb7ba9536347c50b6bf88e\nEFA 1.23.1\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.23.1.tar.gz\nMD5: 22491e114b6ee7160a8290145dca0c28\nSHA256: 5ca848d8e0ff4d1571cd443c36f8d27c8cdf2a0c97e9068ebf000c303fc40797\nEFA 1.23.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.23.0.tar.gz\nMD5: 38a6d7c1861f5038dba4e441ca7683ca\nSHA256: 555d497a60f22e3857fdeb3dfc53aa86d05926023c68c916d15d2dc3df6525bd\nEFA 1.22.1\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.22.1.tar.gz\nMD5: 600c0ad7cdbc06e8e846cb763f92901b\nSHA256: f90f3d5f59c031b9a964466b5401e86fd0429272408f6c207c3f9048254e9665\nEFA 1.22.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.22.0.tar.gz\nMD5: 8f100c93dc8ab519c2aeb5dab89e98f8\nSHA256: f329e7d54a86a03ea51da6ea9a5b68fb354fbae4a57a02f9592e21fce431dc3a\nEFA 1.21.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.21.0.tar.gz\nMD5: 959ccc3a4347461909ec02ed3ba7c372\nSHA256: c64e6ca34ccfc3ebe8e82d08899ae8442b3ef552541cf5429c43d11a04333050\nEFA 1.20.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.20.0.tar.gz\nMD5: 7ebfbb8e85f1b94709df4ab3db47913b\nSHA256: aeefd2681ffd5c4c631d1502867db5b831621d6eb85b61fe3ec80df983d1dcf0\nEFA 1.19.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.19.0.tar.gz\nMD5: 2fd45324953347ec5518da7e3fefa0ec\nSHA256: 99b77821b9e72c8dea015cc92c96193e8db307deee05b91a58094cc331f16709\nEFA 1.18.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.18.0.tar.gz\nMD5: fc2571a72f5d3c7b7b576ce2de38d91e\nSHA256: acb18a0808aedb9a5e485f1469225b9ac97f21db9af78e4cd6939700debe1cb6\nEFA 1.17.3\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.17.3.tar.gz\nMD5: 0517df4a190356ab559235147174cafd\nSHA256: 5130998b0d2883bbae189b21ab215ecbc1b01ae0231659a9b4a17b0a33ebc6ca\nEFA 1.17.2\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.17.2.tar.gz\nMD5: a329dedab53c4832df218a24449f4c9a\nSHA256: bca1fdde8b32b00346e175e597ffab32a09a08ee9ab136875fb38283cc4cd099\nEFA 1.17.1\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.17.1.tar.gz\nMD5: 733ae2cfc9d14b52017eaf0a2ab6b0ff\nSHA256: f29322640a88ae9279805993cb836276ea240623820848463ca686c8ce02136f\nEFA 1.17.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.17.0.tar.gz\nMD5: d430fc841563c11c3805c5f82a4746b1\nSHA256: 75ab0cee4fb6bd38889dce313183f5d3a83bd233e0a6ef6205d8352821ea901d\nEFA 1.16.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.16.0.tar.gz\nMD5: 399548d3b0d2e812d74dd67937b696b4\nSHA256: cecec36495a1bc6fdc82f97761a541e4fb6c9a3cbf3cfcb145acf25ea5dbd45b\nEFA 1.15.2\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.15.2.tar.gz\nMD5: 955fea580d5170b05823d51acde7ca21\nSHA256: 84df4fbc1b3741b6c073176287789a601a589313accc8e6653434e8d4c20bd49\nEFA 1.15.1\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.15.1.tar.gz\nMD5: c4610267039f72bbe4e35d7bf53519bc\nSHA256: be871781a1b9a15fca342a9d169219260069942a8bda7a8ad06d4baeb5e2efd7\nEFA 1.15.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.15.0.tar.gz\nMD5: 9861694e1cc00d884fadac07d22898be\nSHA256: b329862dd5729d2d098d0507fb486bf859d7c70ce18b61c302982234a3a5c88f\nEFA 1.14.1\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.14.1.tar.gz\nMD5: 50ba56397d359e57872fde1f74d4168a\nSHA256: c7b1b48e86fe4b3eaa4299d3600930919c4fe6d88cc6e2c7e4a408a3f16452c7\nEFA 1.14.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.14.0.tar.gz\nMD5: 40805e7fd842c36ececb9fd7f921b1ae\nSHA256: 662d62c12de85116df33780d40e0533ef7dad92709f4f613907475a7a1b60a97\nEFA 1.13.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.13.0.tar.gz\nMD5: c91d16556f4fd53becadbb345828221e\nSHA256: ad6705eb23a3fce44af3afc0f7643091595653a723ad0374084f4f2b715192e1\nEFA 1.12.3\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.12.3.tar.gz\nMD5: 818aee81f097918cfaebd724eddea678\nSHA256: 2c225321824788b8ca3fbc118207b944cdb096b847e1e0d1d853ef2f0d727172\nEFA 1.12.2\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.12.2.tar.gz\nMD5: 956bb1fc5ae0d6f0f87d2e481d49fccf\nSHA256: 083a868a2c212a5a4fcf3e4d732b685ce39cceb3ca7e5d50d0b74e7788d06259\nEFA 1.12.1\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.12.1.tar.gz\nMD5: f5bfe52779df435188b0a2874d0633ea\nSHA256: 5665795c2b4f09d5f3f767506d4d4c429695b36d4a17e5758b27f033aee58900\nEFA 1.12.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.12.0.tar.gz\nMD5: d6c6b49fafb39b770297e1cc44fe68a6\nSHA256: 28256c57e9ecc0b0778b41c1f777a9982b4e8eae782343dfe1246079933dca59\nEFA 1.11.2\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.11.2.tar.gz\nMD5: 2376cf18d1353a4551e35c33d269c404\nSHA256: a25786f98a3628f7f54f7f74ee2b39bc6734ea9374720507d37d3e8bf8ee1371\nEFA 1.11.1\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.11.1.tar.gz\nMD5: 026b0d9a0a48780cc7406bd51997b1c0\nSHA256: 6cb04baf5ffc58ddf319e956b5461289199c8dd805fe216f8f9ab8d102f6d02a\nEFA 1.11.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.11.0.tar.gz\nMD5: 7d9058e010ad65bf2e14259214a36949\nSHA256: 7891f6d45ae33e822189511c4ea1d14c9d54d000f6696f97be54e915ce2c9dfa\nEFA 1.10.1\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.10.1.tar.gz\nMD5: 78521d3d668be22976f46c6fecc7b730\nSHA256: 61564582de7320b21de319f532c3a677d26cc46785378eb3b95c636506b9bcb4\nEFA 1.10.0\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.10.0.tar.gz\nMD5: 46f73f5a7afe41b4bb918c81888fefa9\nSHA256: 136612f96f2a085a7d98296da0afb6fa807b38142e2fc0c548fa986c41186282\nEFA 1.9.5\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.9.5.tar.gz\nMD5: 95edb8a209c18ba8d250409846eb6ef4\nSHA256: a4343308d7ea4dc943ccc21bcebed913e8868e59bfb2ac93599c61a7c87d7d25\nEFA 1.9.4\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.9.4.tar.gz\nMD5: f26dd5c350422c1a985e35947fa5aa28\nSHA256: 1009b5182693490d908ef0ed2c1dd4f813cc310a5d2062ce9619c4c12b5a7f14\nEFA 1.9.3\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.9.3.tar.gz\nMD5: 95755765a097802d3e6d5018d1a5d3d6\nSHA256: 46ce732d6f3fcc9edf6a6e9f9df0ad136054328e24675567f7029edab90c68f1\nEFA 1.8.4\nhttps://efa-installer.amazonaws.com/aws-efa-installer-1.8.4.tar.gz\nMD5: 85d594c41e831afc6c9305263140457e\nSHA256: 0d974655a09b213d7859e658965e56dc4f23a0eee2dc44bb41b6d039cc5bab45"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-topology.html",
        "content": "Describing your instance topology provides a hierarchical view of the relative proximity between your Amazon EC2 instances. You can use this information to manage high performance computing (HPC) and machine learning (ML) compute infrastructure at scale, while optimizing job placement. HPC and ML jobs are sensitive to latency and throughput. You can use the instance topology to detect the location of your instances, and then use this information to optimize HPC and ML jobs by running them on instances that are physically closer to each other.\nYou can use instance topology to detect the location of your existing instances, but you can't use it to choose to launch a new instance physically close to an existing instance. To influence instance placement, you can create Capacity Reservations in cluster placement groups.\nConsiderations\nInstance topology views are only available for instances in the running state.\nEach instance topology view is unique per account.\nThe AWS Management Console does not support viewing the instance topology.\nPricing\nThere is no additional cost to describe your instance topology.\nContents\nHow it works\nPrerequisites\nExamples"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/how-ec2-instance-topology-works.html",
        "content": "Every EC2 instance connects to a node set. A node set comprises three network nodes, with each node representing a different layer in the AWS network. The network layers are arranged in a hierarchy of 3 or more layers. The node set provides the top-down view of this hierarchy, with the bottom layer connected closest to an instance.\nThe information about the node set is called the instance topology.\nThe following diagram provides a visual representation that you can use to understand the instance topology. The network nodes are identified as NN1 \u2013 NN7. The numerals i, ii, and iii identify the network layers. The numbers 1, 2, 3, and 4 identify the EC2 instances. Instances connect to a node in the bottom layer, identified by iii. More than one instance can connect to the same node.\nIn this example:\nInstance 1 connects to network node 4 (NN4) in layer iii. NN4 connects to network node 2 (NN2) in layer ii, and NN2 connects to network node 1 (NN1) in layer i, which is the top of the network hierarchy in this example. The network node set comprises NN1, NN2, and NN4, expressed hierarchically from the upper layers to the bottom layer.\nInstance 2 also connects to network node 4 (NN4). Instance 1 and instance 2 share the same network node set: NN1, NN2, and NN4.\nInstance 3 connects to network node 5 (NN5). NN5 connects to NN2, and NN2 connects to NN1. The network node set for instance 3 is NN1, NN2, and NN5.\nInstance 4 connects to network node 6 (NN6). Its network node set is NN1, NN3, and NN6.\nWhen considering the proximity of instances 1, 2, and 3, instances 1 and 2 are closer to each other because they connect to the same network node (NN4), while instance 3 is further away because it connects to a different network node (NN5).\nWhen considering the proximity of all the instances in this diagram, instances 1, 2, and 3 are closer to each other than they are to instance 4 because they share NN2 in their network node set.\nAs a general rule, if the network node connected to any two instances is the same, these instances are physically close to each other, as is the case with instances 1 and 2. Furthermore, the fewer the number of hops between network nodes, the closer the instances are to each other. For example, instances 1 and 3 have fewer hops to a common network node (NN2) than they have to the network node (NN1) they have in common with instance 4, and are therefore closer to each other than they are to instance 4.\nThere are no instances running under network node 7 (NN7) in this example, and therefore the API output won't include NN7.\nHow to interpret the output\nYou get the instance topology information using the DescribeInstanceTopology API. The output provides a hierarchical view of the underlying network topology for an instance.\nThe following example output corresponds to the network topology information of the four instances in the preceding diagram. Comments are included in the example output for the purposes of this example.\nThe following information in the output is important to note:\nNetworkNodes describes the network node set of an instance.\nIn each network node set, the network nodes are listed in hierarchical order from top to bottom.\nThe network node that is connected to the instance is the last network node in the list (the bottom layer).\nTo work out which instances are close to each other, first find common network nodes in the bottom layer. If there are no common network nodes in the bottom layer, then find common network nodes in the upper layers.\nIn the following example output, i-1111111111example and i-2222222222example are located closest to each other compared to the other instances in this example because they have the network node nn-4444444444example in common in the bottom layer.\n{\n    \"Instances\": [\n        {\n            \"InstanceId\": \"i-1111111111example\",  //Corresponds to instance 1\n            \"InstanceType\": \"p4d.24xlarge\",\n            \"GroupName\": \"ML-group\",\n            \"NetworkNodes\": [\n                \"nn-1111111111example\",           //Corresponds to NN1 in layer i\n                \"nn-2222222222example\",           //Corresponds to NN2 in layer ii\n                \"nn-4444444444example\"            //Corresponds to NN4 in layer iii - bottom layer, connected to the instance\n            ],\n            \"ZoneId\": \"usw2-az2\",\n            \"AvailabilityZone\": \"us-west-2a\"\n        },\n        {\n            \"InstanceId\": \"i-2222222222example\",  //Corresponds to instance 2\n            \"InstanceType\": \"p4d.24xlarge\",\n            \"NetworkNodes\": [\n                \"nn-1111111111example\",           //Corresponds to NN1 - layer i\n                \"nn-2222222222example\",           //Corresponds to NN2 - layer ii\n                \"nn-4444444444example\"            //Corresponds to NN4 - layer iii - connected to instance\n            ],\n            \"ZoneId\": \"usw2-az2\",\n            \"AvailabilityZone\": \"us-west-2a\"\n        },\n        {\n            \"InstanceId\": \"i-3333333333example\",  //Corresponds to instance 3\n            \"InstanceType\": \"trn1.32xlarge\",\n            \"NetworkNodes\": [\n                \"nn-1111111111example\",           //Corresponds to NN1 - layer i\n                \"nn-2222222222example\",           //Corresponds to NN2 - layer ii\n                \"nn-5555555555example\"            //Corresponds to NN5 - layer iii - connected to instance\n            ],\n            \"ZoneId\": \"usw2-az2\",\n            \"AvailabilityZone\": \"us-west-2a\"            \n        },\n        {\n            \"InstanceId\": \"i-444444444example\",  //Corresponds to instance 4\n            \"InstanceType\": \"trn1.2xlarge\",\n            \"NetworkNodes\": [\n                \"nn-1111111111example\",          //Corresponds to NN1 - layer i\n                \"nn-3333333333example\",          //Corresponds to NN3 - layer ii\n                \"nn-6666666666example\"           //Corresponds to NN6 - layer iii - connected to instance\n            ],\n            \"ZoneId\": \"usw2-az2\",\n            \"AvailabilityZone\": \"us-west-2a\"          \n        }\n    ],\n    \"NextToken\": \"SomeEncryptedToken\"\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-topology-prerequisites.html",
        "content": "Before you describe the instance topology for your instances, ensure that your instances meet the following requirements.\nRequirements to describe the topology of your instances\nAWS Regions\nInstance types\nInstance state\nIAM permission\nAWS Regions\nSupported AWS Regions:\nUS East (N. Virginia), US East (Ohio), US West (N. California), US West (Oregon)\nAsia Pacific (Mumbai), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), Asia Pacific (Tokyo)\nCanada (Central)\nEurope (Frankfurt), Europe (Ireland), Europe (London), Europe (Paris), Europe (Spain), Europe (Stockholm)\nSouth America (S\u00e3o Paulo)\nInstance types\nSupported instance types:\nhpc6a.48xlarge | hpc6id.32xlarge | hpc7a.12xlarge | hpc7a.24xlarge | hpc7a.48xlarge | hpc7a.96xlarge | hpc7g.4xlarge | hpc7g.8xlarge | hpc7g.16xlarge\np3dn.24xlarge | p4d.24xlarge | p4de.24xlarge | p5.48xlarge | p5e.48xlarge | p5en.48xlarge\ntrn1.2xlarge | trn1.32xlarge | trn1n.32xlarge | trn2.48xlarge | trn2u.48xlarge\nTo see the available instance types in a specific Region\nThe available instance types vary by Region. To see if an instance type is available in a Region, use the describe-instance-types-offerings command with the --region parameter. Include the --filters parameter to scope the results to the instance family or instance type that you're interested in and the --query parameter to scope the output to the value of InstanceType.\naws ec2 describe-instance-type-offerings \\\n    --region us-east-2 \\\n    --filters 'Name=instance-type, Values=trn1*' \\\n    --query 'InstanceTypeOfferings[].InstanceType'\nExpected output\n[\n    \"trn1.2xlarge\",\n    \"trn1.32xlarge\",\n    \"trn1n.32xlarge\"\n]\nInstance state\nInstances must be in the running state. You can\u2019t get instance topology information for instances that are in another state.\nIAM permission\nYour IAM identity (user, user group, or role) requires the following IAM permission:\nec2:DescribeInstanceTopology"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-topology-examples.html",
        "content": "You can use the describe-instance-topology command to describe the instance topology for your EC2 instances.\nWhen you use the describe-instance-topology command without parameters or filters, the response includes all your instances that match the supported instance types for this command in the specified Region. You can specify the Region by including the --region parameter, or by setting a default Region. For more information about setting a default Region, see Select a Region for your Amazon EC2 resources.\nYou can include parameters to return instances that match specified instance IDs or placement group names. You can also include filters to return instances that match a specified instance type or instance family, or instances in a specified Availability Zone or Local Zone. You can include a single parameter or filter, or a combination of parameters and filters.\nThe output is paginated, with up to 20 instances per page by default. You can specify up to 100 instances per page using the --max-results parameter.\nFor more information, see describe-instance-topology.\nRequired permissions\nThe following permission is required to describe instance topology:\nec2:DescribeInstanceTopology\nExamples\nExample 1 - No parameters or filters\nExample 2 \u2013 instance-type filter\nExample 2a \u2013 Exact match filter for a specified instance type\nExample 2b \u2013 Wild card filter for an instance family\nExample 2c \u2013 Combined instance family and exact match filters\nExample 3 \u2013 zone-id filter\nExample 3a \u2013 Availability Zone filter\nExample 3b \u2013 Local Zone filter\nExample 3c \u2013 Combined Availability Zone and Local Zone filters\nExample 4 \u2013 Combined instance-type and zone-id filters\nExample 5 \u2013 Placement group name parameter\nExample 6 \u2013 Instance IDs\nExample 1 - No parameters or filters\nTo describe the instance topology of all your instances\nUse the describe-instance-topology command without specifying any parameters or filters.\naws ec2 describe-instance-topology --region us-west-2\nThe response returns only the instances that match the supported instance types for this API. The instances can be in different Availability Zones, Local Zones (ZoneId), and placement groups (GroupName). If an instance is not in a placement group, the GroupName field does not appear in the output. In the following example output, only one instance is in a placement group.\nExample output\n{\n    \"Instances\": [\n        {\n            \"InstanceId\": \"i-1111111111example\",\n            \"InstanceType\": \"p4d.24xlarge\",\n            \"GroupName\": \"my-ml-cpg\",\n            \"NetworkNodes\": [\n                \"nn-1111111111example\",\n                \"nn-2222222222example\",\n                \"nn-3333333333example\"\n            ],\n            \"ZoneId\": \"usw2-az2\",\n            \"AvailabilityZone\": \"us-west-2a\"\n        },\n        {\n            \"InstanceId\": \"i-2222222222example\",\n            \"InstanceType\": \"p4d.24xlarge\",\n            \"NetworkNodes\": [\n                \"nn-1111111111example\",\n                \"nn-2222222222example\",\n                \"nn-3333333333example\"\n            ],\n            \"ZoneId\": \"usw2-az2\",\n            \"AvailabilityZone\": \"us-west-2a\"\n        },\n        {\n            \"InstanceId\": \"i-3333333333example\",\n            \"InstanceType\": \"trn1.32xlarge\",\n            \"NetworkNodes\": [\n                \"nn-1212121212example\",\n                \"nn-1211122211example\",\n                \"nn-1311133311example\"\n            ],\n            \"ZoneId\": \"usw2-az4\",\n            \"AvailabilityZone\": \"us-west-2d\"            \n        },\n        {\n            \"InstanceId\": \"i-444444444example\",\n            \"InstanceType\": \"trn1.2xlarge\",\n            \"NetworkNodes\": [\n                \"nn-1111111111example\",\n                \"nn-5434334334example\",\n                \"nn-1235301234example\"\n            ],\n            \"ZoneId\": \"usw2-az2\",\n            \"AvailabilityZone\": \"us-west-2a\"          \n        }\n    ],\n    \"NextToken\": \"SomeEncryptedToken\"\n}\nExample 2 \u2013 instance-type filter\nYou can filter by a specified instance type (exact match) or filter by an instance family (using a wildcard). You can also combine a specified instance type filter and instance family filter.\nExample 2a \u2013 Exact match filter for a specified instance type\nTo describe the instance topology of all your instances that match a specified instance type\nUse the describe-instance-topology command with the instance-type filter. In this example, the output is filtered for trn1n.32xlarge instances. The response will return only the instances that match the specified instance type.\naws ec2 describe-instance-topology \\\n    --region us-west-2 \\\n    --filters Name=instance-type,Values=trn1n.32xlarge\nExample output\n{\n    \"Instances\": [\n        {\n            \"InstanceId\": \"i-2222222222example\",\n            \"InstanceType\": \"trn1n.32xlarge\",\n            \"NetworkNodes\": [\n                \"nn-1111111111example\",\n                \"nn-2222222222example\",\n                \"nn-3333333333example\"\n            ],\n            \"ZoneId\": \"usw2-az2\",\n            \"AvailabilityZone\": \"us-west-2a\"\n        }\n    ],\n    \"NextToken\": \"SomeEncryptedToken\"\n} \nExample 2b \u2013 Wild card filter for an instance family\nTo describe the instance topology of all your instances that match an instance family\nUse the describe-instance-topology command with the instance-type filter. In this example, the output is filtered for trn1* instances. The response will return only the instances that match the specified instance family.\naws ec2 describe-instance-topology \\\n    --region us-west-2 \\\n    --filters Name=instance-type,Values=trn1*\nExample output\n{\n    \"Instances\": [\n        {\n            \"InstanceId\": \"i-2222222222example\",\n            \"InstanceType\": \"trn1n.32xlarge\",\n            \"NetworkNodes\": [\n                \"nn-1111111111example\",\n                \"nn-2222222222example\",\n                \"nn-3333333333example\"\n            ],\n            \"ZoneId\": \"usw2-az2\",\n            \"AvailabilityZone\": \"us-west-2a\"\n        },\n        {\n            \"InstanceId\": \"i-3333333333example\",\n            \"InstanceType\": \"trn1.32xlarge\",\n            \"NetworkNodes\": [\n                \"nn-1212121212example\",\n                \"nn-1211122211example\",\n                \"nn-1311133311example\"\n            ],\n            \"ZoneId\": \"usw2-az4\",\n            \"AvailabilityZone\": \"us-west-2d\"            \n        },\n        {\n            \"InstanceId\": \"i-444444444example\",\n            \"InstanceType\": \"trn1.2xlarge\",\n            \"NetworkNodes\": [\n                \"nn-1111111111example\",\n                \"nn-5434334334example\",\n                \"nn-1235301234example\"\n            ],\n            \"ZoneId\": \"usw2-az2\",\n            \"AvailabilityZone\": \"us-west-2a\"          \n        }\n    ],\n    \"NextToken\": \"SomeEncryptedToken\"\n}\nExample 2c \u2013 Combined instance family and exact match filters\nTo describe the instance topology of all your instances that match an instance family or specified instance type\nUse the describe-instance-topology command with the instance-type filter. In this example, the output is filtered for pd4d* or trn1n.32xlarge instances. The response will return the instances that match any of the specified filters.\naws ec2 describe-instance-topology \\\n    --region us-west-2 \\\n    --filters \"Name=instance-type,Values=p4d*,trn1n.32xlarge\"\nExample output\n{\n    \"Instances\": [\n        {\n            \"InstanceId\": \"i-1111111111example\",\n            \"InstanceType\": \"p4d.24xlarge\",\n            \"GroupName\": \"ML-group\",\n            \"NetworkNodes\": [\n                \"nn-1111111111example\",\n                \"nn-2222222222example\",\n                \"nn-3333333333example\"\n            ],\n            \"ZoneId\": \"usw2-az2\",\n            \"AvailabilityZone\": \"us-west-2a\"\n        },\n        {\n            \"InstanceId\": \"i-2222222222example\",\n            \"InstanceType\": \"trn1n.32xlarge\",\n            \"NetworkNodes\": [\n                \"nn-1111111111example\",\n                \"nn-2222222222example\",\n                \"nn-4343434343example\"\n            ],\n            \"ZoneId\": \"usw2-az2\",\n            \"AvailabilityZone\": \"us-west-2a\"\n        }\n    ],\n    \"NextToken\": \"SomeEncryptedToken\"\n}\nExample 3 \u2013 zone-id filter\nYou can use the zone-id filter to filter by an Availability Zone or Local Zone. You can also combine an Availability Zone filter and Local Zone filter.\nExample 3a \u2013 Availability Zone filter\nTo describe the instance topology of all your instances that match a specified Availability Zone\nUse the describe-instance-topology command with the zone-id filter. In this example, the output is filtered using the Availability Zone ID use1-az1. The response will return only the instances that match the specified Availability Zone.\naws ec2 describe-instance-topology \\\n    --region us-east-1 \\\n    --filters Name=zone-id,Values=use1-az1\nExample output\n{\n    \"Instances\": [\n        {\n            \"InstanceId\": \"i-2222222222example\",\n            \"InstanceType\": \"trn1n.32xlarge\",\n            \"NetworkNodes\": [\n                \"nn-1111111111example\",\n                \"nn-2222222222example\",\n                \"nn-3214313214example\"\n            ],\n            \"ZoneId\": \"use1-az1\",\n            \"AvailabilityZone\": \"us-east-1a\"\n        }\n    ],\n    \"NextToken\": \"SomeEncryptedToken\"\n}\nExample 3b \u2013 Local Zone filter\nTo describe the instance topology of all your instances that match a specified Local Zone\nUse the describe-instance-topology command with the zone-id filter. In this example, the output is filtered using the Local Zone ID use1-atl2-az1. The response will return only the instances that match the specified Local Zone.\naws ec2 describe-instance-topology \\\n    --region us-east-1 \\\n    --filters Name=zone-id,Values=use1-atl2-az1\nExample output\n{\n    \"Instances\": [\n        {\n            \"InstanceId\": \"i-1111111111example\",\n            \"InstanceType\": \"p4d.24xlarge\",\n            \"GroupName\": \"ML-group\",\n            \"NetworkNodes\": [\n                \"nn-1111111111example\",\n                \"nn-2222222222example\",\n                \"nn-3333333333example\"\n            ],\n            \"ZoneId\": \"use1-atl2-az1\",\n            \"AvailabilityZone\": \"us-east-1-atl-2a\"\n        }\n    ],\n    \"NextToken\": \"SomeEncryptedToken\"\n} \nExample 3c \u2013 Combined Availability Zone and Local Zone filters\nTo describe the instance topology of all your instances that match a specified Availability Zone or Local Zone\nUse the describe-instance-topology command with the zone-id filter. In this example, the output is filtered using the Availability Zone ID use1-az1 and the Local Zone ID use1-atl2-az1. The response will return the instances that match any of the specified filters.\naws ec2 describe-instance-topology \\\n    --region us-east-1 \\\n    --filters Name=zone-id,Values=use1-az1,use1-atl2-az1\nExample output\n{\n    \"Instances\": [\n        {\n            \"InstanceId\": \"i-1111111111example\",\n            \"InstanceType\": \"p4d.24xlarge\",\n            \"GroupName\": \"ML-group\",\n            \"NetworkNodes\": [\n                \"nn-1111111111example\",\n                \"nn-2222222222example\",\n                \"nn-3333333333example\"\n            ],\n            \"ZoneId\": \"use1-atl2-az1\",\n            \"AvailabilityZone\": \"us-east-1-atl-2a\"\n        },\n        {\n            \"InstanceId\": \"i-2222222222example\",\n            \"InstanceType\": \"trn1n.32xlarge\",\n            \"NetworkNodes\": [\n                \"nn-1111111111example\",\n                \"nn-2222222222example\",\n                \"nn-3214313214example\"\n            ],\n            \"ZoneId\": \"use1-az1\",\n            \"AvailabilityZone\": \"us-east-1a\"\n        }\n    ],\n    \"NextToken\": \"SomeEncryptedToken\"\n}\nExample 4 \u2013 Combined instance-type and zone-id filters\nYou can combine all the filters in a single command.\nTo describe the instance topology of all your instances that match a specified instance type, instance family, Availability Zone, or Local Zone\nUse the describe-instance-topology command with the instance-type and zone-id filters. In this example, the output is filtered for the p4d* instance family, trn1n.32xlarge instance type, use1-az1 Availability Zone ID, and use1-atl2-az1 Local Zone ID. The response will return the instances that match p4d* or trn1n.32xlarge instances in the us-east-1a or us-east-1-atl-2a zones.\naws ec2 describe-instance-topology \\\n    --region us-east-1 \\\n    --filters \"Name=instance-type,Values=p4d*,trn1n.32xlarge\" \"Name=zone-id,Values=use1-az1,use1-atl2-az1\"\nExample output\n{\n    \"Instances\": [\n        {\n            \"InstanceId\": \"i-1111111111example\",\n            \"InstanceType\": \"p4d.24xlarge\",\n            \"GroupName\": \"ML-group\",\n            \"NetworkNodes\": [\n                \"nn-1111111111example\",\n                \"nn-2222222222example\",\n                \"nn-3333333333example\"\n            ],\n            \"ZoneId\": \"use1-atl2-az1\",\n            \"AvailabilityZone\": \"us-east-1-atl-2a\"\n        },\n        {\n            \"InstanceId\": \"i-2222222222example\",\n            \"InstanceType\": \"trn1n.32xlarge\",\n            \"NetworkNodes\": [\n                \"nn-1111111111example\",\n                \"nn-2222222222example\",\n                \"nn-3214313214example\"\n            ],\n            \"ZoneId\": \"use1-az1\",\n            \"AvailabilityZone\": \"us-east-1a\"\n        }\n    ],\n    \"NextToken\": \"SomeEncryptedToken\"\n} \nExample 5 \u2013 Placement group name parameter\nTo describe the instance topology of all your instances in a specified placement group\nUse the describe-instance-topology command with the group-names parameter. In the following example, the instances can be in the ML-group or HPC-group placement group. The output includes instances that are in either of the placement groups.\naws ec2 describe-instance-topology \\\n    --region us-west-2 \\\n    --group-names ML-group HPC-group\nExample output\n{\n    \"Instances\": [\n        {\n            \"InstanceId\": \"i-1111111111example\",\n            \"InstanceType\": \"p4d.24xlarge\",\n            \"GroupName\": \"ML-group\",\n            \"NetworkNodes\": [\n                \"nn-1111111111example\",\n                \"nn-2222222222example\",\n                \"nn-3333333333example\"\n            ],\n            \"ZoneId\": \"usw2-az2\",\n            \"AvailabilityZone\": \"us-west-2a\"\n        },\n        {\n            \"InstanceId\": \"i-2222222222example\",\n            \"InstanceType\": \"trn1n.32xlarge\",\n            \"GroupName\": \"HPC-group\",\n            \"NetworkNodes\": [\n                \"nn-1111111111example\",\n                \"nn-2222222222example\",\n                \"nn-3214313214example\"\n            ],\n            \"ZoneId\": \"usw2-az2\",\n            \"AvailabilityZone\": \"us-west-2a\"\n        }\n    ],\n    \"NextToken\": \"SomeEncryptedToken\"\n}\nExample 6 \u2013 Instance IDs\nTo describe the instance topology of specified instances\nUse the describe-instance-topology command with the --instance-ids parameter. The response includes the instances that match the specified instance IDs.\naws ec2 describe-instance-topology \\\n    --region us-west-2 \\\n    --instance-ids i-1111111111example i-2222222222example\nExample output\n{\n    \"Instances\": [\n        {\n            \"InstanceId\": \"i-1111111111example\",\n            \"InstanceType\": \"p4d.24xlarge\",\n            \"GroupName\": \"ML-group\",\n            \"NetworkNodes\": [\n                \"nn-1111111111example\",\n                \"nn-2222222222example\",\n                \"nn-3333333333example\"\n            ],\n            \"ZoneId\": \"usw2-az2\",\n            \"AvailabilityZone\": \"us-west-2a\"\n        },\n        {\n            \"InstanceId\": \"i-2222222222example\",\n            \"InstanceType\": \"trn1n.32xlarge\",\n            \"GroupName\": \"HPC-group\",\n            \"NetworkNodes\": [\n                \"nn-1111111111example\",\n                \"nn-2222222222example\",\n                \"nn-3214313214example\"\n            ],\n            \"ZoneId\": \"usw2-az2\",\n            \"AvailabilityZone\": \"us-west-2a\"\n        }\n    ],\n    \"NextToken\": \"SomeEncryptedToken\"\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html",
        "content": "To meet the needs of your workload, you can launch a group of interdependent EC2 instances into a placement group to influence their placement.\nDepending on the type of workload, you can create a placement group using one of the following placement strategies:\nCluster \u2013 Packs instances close together inside an Availability Zone. This strategy enables workloads to achieve the low-latency network performance necessary for tightly-coupled node-to-node communication that is typical of high-performance computing (HPC) applications.\nPartition \u2013 Spreads your instances across logical partitions such that groups of instances in one partition do not share the underlying hardware with groups of instances in different partitions. This strategy is typically used by large distributed and replicated workloads, such as Hadoop, Cassandra, and Kafka.\nSpread \u2013 Strictly places a small group of instances across distinct underlying hardware to reduce correlated failures.\nPlacement groups are optional. If you don't launch your instances into a placement group, EC2 tries to place the instances in such a way that all of your instances are spread out across the underlying hardware to minimize correlated failures.\nPricing\nThere is no charge for creating a placement group.\nRules and limitations\nBefore you use placement groups, be aware of the following rules:\nAn instance can be placed in one placement group at a time; you can't place an instance in multiple placement groups.\nYou can't merge placement groups.\nOn-Demand Capacity Reservations and zonal Reserved Instances allow you to reserve capacity for EC2 instances in Availability Zones. When you launch an instance, if the instance attributes match those specified by an On-Demand Capacity Reservation or a zonal Reserved Instance, then the reserved capacity is automatically used by the instance. This is also true if you launch the instance into a placement group.\nYou can't launch Dedicated Hosts in placement groups.\nYou can't launch a Spot Instance that is configured to stop or hibernate on interruption in a placement group.\nContents\nPlacement strategies\nCreate a placement group\nChange instance placement\nDelete a placement group\nShared placement groups\nPlacement groups on AWS Outposts"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-strategies.html",
        "content": "You can create a placement group for your EC2 instances using one of the following placement strategies.\nPlacement strategies\nCluster placement groups\nPartition placement groups\nSpread placement groups\nCluster placement groups\nA cluster placement group is a logical grouping of instances within a single Availability Zone. Instances are not isolated to a single rack. A cluster placement group can span peered virtual private networks (VPCs) in the same Region. Instances in the same cluster placement group enjoy a higher per-flow throughput limit for TCP/IP traffic and are placed in the same high-bisection bandwidth segment of the network.\nThe following image shows instances that are placed into a cluster placement group.\nCluster placement groups are recommended for applications that benefit from low network latency, high network throughput, or both. They are also recommended when the majority of the network traffic is between the instances in the group. To provide the lowest latency and the highest packet-per-second network performance for your placement group, choose an instance type that supports enhanced networking. For more information, see Enhanced Networking.\nWe recommend that you launch your instances in the following way:\nUse a single launch request to launch the number of instances that you need in the placement group.\nUse the same instance type for all instances in the placement group.\nIf you try to add more instances to the placement group later, or if you try to launch more than one instance type in the placement group, you increase your chances of getting an insufficient capacity error.\nIf you stop an instance in a placement group and then start it again, it still runs in the placement group. However, the start fails if there isn't enough capacity for the instance.\nIf you receive a capacity error when launching an instance in a placement group that already has running instances, stop and start all of the instances in the placement group, and try the launch again. Starting the instances may migrate them to hardware that has capacity for all of the requested instances.\nRules and limitations\nThe following rules apply to cluster placement groups:\nThe following instance types are supported:\nCurrent generation instances, except for burstable performance instances (for example, T2), Mac1 instances, and M7i-flex instances.\nThe following previous generation instances: A1, C3, C4, I2, M4, R3, and R4.\nA cluster placement group can't span multiple Availability Zones.\nThe maximum network throughput speed of traffic between two instances in a cluster placement group is limited by the slower of the two instances. For applications with high-throughput requirements, choose an instance type with network connectivity that meets your requirements.\nFor instances that are enabled for enhanced networking, the following rules apply:\nInstances within a cluster placement group can use up to 10 Gbps for single-flow traffic. Instances that are not within a cluster placement group can use up to 5 Gbps for single-flow traffic.\nTraffic to and from Amazon S3 buckets within the same Region over the public IP address space or through a VPC endpoint can use all available instance aggregate bandwidth.\nYou can launch multiple instance types into a cluster placement group. However, this reduces the likelihood that the required capacity will be available for your launch to succeed. We recommend using the same instance type for all instances in a cluster placement group.\nWe recommend that you reserve capacity explicitly in the cluster placement group by creating an On-Demand Capacity Reservation in the cluster placement group. Note that you can't reserve capacity using zonal Reserved Instances, as they can't reserve capacity explicitly in a placement group.\nNetwork traffic to the internet and over an AWS Direct Connect connection to on-premises resources is limited to 5 Gbps for cluster placement groups.\nPartition placement groups\nPartition placement groups help reduce the likelihood of correlated hardware failures for your application. When using partition placement groups, Amazon EC2 divides each group into logical segments called partitions. Amazon EC2 ensures that each partition within a placement group has its own set of racks. Each rack has its own network and power source. No two partitions within a placement group share the same racks, allowing you to isolate the impact of hardware failure within your application.\nThe following image is a simple visual representation of a partition placement group in a single Availability Zone. It shows instances that are placed into a partition placement group with three partitions\u2014Partition 1, Partition 2, and Partition 3. Each partition comprises multiple instances. The instances in a partition do not share racks with the instances in the other partitions, allowing you to contain the impact of a single hardware failure to only the associated partition.\nPartition placement groups can be used to deploy large distributed and replicated workloads, such as HDFS, HBase, and Cassandra, across distinct racks. When you launch instances into a partition placement group, Amazon EC2 tries to distribute the instances evenly across the number of partitions that you specify. You can also launch instances into a specific partition to have more control over where the instances are placed.\nA partition placement group can have partitions in multiple Availability Zones in the same Region. A partition placement group can have a maximum of seven partitions per Availability Zone. The number of instances that can be launched into a partition placement group is limited only by the limits of your account.\nIn addition, partition placement groups offer visibility into the partitions \u2014 you can see which instances are in which partitions. You can share this information with topology-aware applications, such as HDFS, HBase, and Cassandra. These applications use this information to make intelligent data replication decisions for increasing data availability and durability.\nIf you start or launch an instance in a partition placement group and there is insufficient unique hardware to fulfill the request, the request fails. Amazon EC2 makes more distinct hardware available over time, so you can try your request again later.\nRules and limitations\nThe following rules apply to partition placement groups:\nA partition placement group supports a maximum of seven partitions per Availability Zone. The number of instances that you can launch in a partition placement group is limited only by your account limits.\nWhen instances are launched into a partition placement group, Amazon EC2 tries to evenly distribute the instances across all partitions. Amazon EC2 doesn\u2019t guarantee an even distribution of instances across all partitions.\nA partition placement group with Dedicated Instances can have a maximum of two partitions.\nCapacity Reservations do not reserve capacity in a partition placement group.\nSpread placement groups\nA spread placement group is a group of instances that are each placed on distinct hardware.\nSpread placement groups are recommended for applications that have a small number of critical instances that should be kept separate from each other. Launching instances in a spread level placement group reduces the risk of simultaneous failures that might occur when instances share the same equipment. Spread level placement groups provide access to distinct hardware, and are therefore suitable for mixing instance types or launching instances over time.\nIf you start or launch an instance in a spread placement group and there is insufficient unique hardware to fulfill the request, the request fails. Amazon EC2 makes more distinct hardware available over time, so you can try your request again later. Placement groups can spread instances across racks or hosts. Rack level spread placement groups can be used in AWS Regions and on AWS Outposts. Host level spread placement groups can be used with AWS Outposts only.\nRack level spread placement groups\nThe following image shows seven instances in a single Availability Zone that are placed into a spread placement group. The seven instances are placed on seven different racks, each rack has its own network and power source.\nA rack level spread placement group can span multiple Availability Zones in the same Region. In a Region, a rack level spread placement group can have a maximum of seven running instances per Availability Zone per group. With Outposts, a rack level spread placement group can hold as many instances as you have racks in your Outpost deployment.\nHost level spread placement groups\nHost level spread placement groups are only available with AWS Outposts. A host spread level placement group can hold as many instances as you have hosts in your Outpost deployment. For more information, see Placement groups on AWS Outposts.\nRules and limitations\nThe following rules apply to spread placement groups:\nA rack spread placement group supports a maximum of seven running instances per Availability Zone. For example, in a Region with three Availability Zones, you can run a total of 21 instances in the group, with seven instances in each Availability Zone. If you try to start an eighth instance in the same Availability Zone and in the same spread placement group, the instance will not launch. If you need more than seven instances in an Availability Zone, we recommend that you use multiple spread placement groups. Using multiple spread placement groups does not provide guarantees about the spread of instances between groups, but it does help ensure the spread for each group, thus limiting the impact from certain classes of failures.\nSpread placement groups are not supported for Dedicated Instances.\nHost level spread placement groups are only supported for placement groups on AWS Outposts. A host level spread placement group can hold as many instances as you have hosts in your Outpost deployment.\nIn a Region, a rack level spread placement group can have a maximum of seven running instances per Availability Zone per group. With AWS Outposts, a rack level spread placement group can hold as many instances as you have racks in your Outpost deployment.\nCapacity Reservations do not reserve capacity in a spread placement group."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/create-placement-group.html",
        "content": "You can use a placement group to control the placement of instances relative to each other. After you create a placement group, you can launch instances in the placement group.\nLimitation\nYou can create a maximum of 500 placement groups per Region.\nConsole\nAWS CLI\nPowerShell\nTo create a placement group\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Placement Groups.\nChoose Create placement group.\nSpecify a name for the group.\nChoose the placement strategy for the group: Cluster, Spread, or Partition.\nIf you chose Spread, you must choose the spread level: Rack or Host.\nIf you chose Partition, you must enter the number of partitions for the group.\n(Optional) To add a tag, choose Add new tag, and then enter a key and value.\nChoose Create group."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/change-instance-placement-group.html",
        "content": "You can change the placement group for an instance as follows:\nAdd an instance to a placement group\nMove an instance from one placement group to another\nRemove an instance from a placement group\nBefore you can change the placement group for an instance, the instance must be in the stopped state.\nConsole\nAWS CLI\nPowerShell\nTo change the instance placement\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance.\nChoose Actions, Instance settings, Modify instance placement.\nFor Placement group, do one of the following:\nTo add the instance to a placement group, choose the placement group.\nTo move the instance from one placement group to another, choose the placement group.\nTo remove the instance from the placement group, choose None.\nChoose Save."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/delete-placement-group.html",
        "content": "If you need to replace a placement group or no longer need one, you can delete it. You can delete a placement group using one of the following methods.\nPrerequisite\nBefore you can delete a placement group, it must contain no instances. You can terminate the instances, move them to another placement group, or remove them from the placement group.\nConsole\nAWS CLI\nPowerShell\nTo delete a placement group\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Placement Groups.\nSelect the placement group and choose Actions, Delete.\nWhen prompted for confirmation, enter Delete and then choose Delete."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/share-placement-group.html",
        "content": "Placement group sharing allows you to influence the placement of interdependent instances that are owned by separate AWS accounts. An owner can share a placement group across multiple AWS accounts or within their organization. A participant can launch instances in a placement group that is shared with their account.\nA placement group owner can share a placement group with:\nSpecific AWS accounts inside or outside of its organization\nAn organizational unit inside its organization\nIts entire organization\nYou can use VPC peering to connect instances owned by separate AWS accounts and get the full latency benefits offered by shared cluster placement groups.\nContents\nRules and limitations\nRequired permissions\nSharing across Availability Zones\nPlacement group sharing\nPlacement group unsharing\nRules and limitations\nThe following rules and limitations apply when you share a placement group or when a placement group is shared with you.\nTo share a placement group, you must own it in your AWS account. You can't share a placement group that has been shared with you.\nWhen you share a partition or spread placement group, the placement group limits do not change. A shared partition placement group supports a maximum of seven partitions per Availability Zone, and a shared spread placement group supports a maximum of seven running instances per Availability Zone.\nTo share a placement group with your organization or an organizational unit in your organization, you must enable sharing with AWS Organizations. For more information, see Sharing your AWS resources.\nWhen using the AWS Management Console to launch an instance, you can select any placement groups that were shared with you. When using the AWS CLI to launch an instance, you must specify a shared placement group by ID, not by name. You can use the name of a placement group only if you're the owner of the shared placement group.\nYou are responsible for managing the instances owned by you in a shared placement group.\nYou can't view or modify instances and capacity reservations that are associated with a shared placement group but not owned by you.\nThe Amazon Resource Name (ARN) of a placement group contains the ID of the account that owns the placement group. You can use the account ID portion of a placement group ARN to identify the owner of a placement group that is shared with you.\nRequired permissions\nTo share a placement group, users must have permissions for following actions:\nec2:PutResourcePolicy\nec2:DeleteResourcePolicy\nSharing across Availability Zones\nTo ensure that resources are distributed across the Availability Zones for a Region, we independently map Availability Zones to names for each account. This could lead to Availability Zone naming differences across accounts. For example, the Availability Zone us-east-1a for your AWS account might not have the same location as us-east-1a for another AWS account.\nTo specify the location of your Dedicated Hosts relative to your accounts, you must use the Availability Zone ID (AZ ID). The AZ ID is a unique and consistent identifier for an Availability Zone across all AWS accounts. For example, use1-az1 is an Availability Zone ID for the us-east-1 Region and it is the same location in every AWS account. For more information, see AZ IDs.\nPlacement group sharing\nTo share a placement group, you must add it to a resource share. A resource share is an AWS RAM resource that lets you share your resources across AWS accounts. A resource share specifies the resources to share, and the consumers with whom they are shared.\nIf you are part of an organization in AWS Organizations sharing within your organization is enabled, consumers in your organization are granted access to the shared placement group.\nIf the placement group is shared with an AWS account outside of your organization, the AWS account owner will receive an invitation to join the resource share. They can access the shared placement group after accepting the invitation.\nYou can share a placement group across AWS accounts using AWS Resource Access Manager. For more information, see Creating a resource share in the AWS RAM User Guide.\nPlacement group unsharing\nThe placement group owner can unshare a shared placement group at any time. When you unshare a shared placement group, the following changes occur:\nThe AWS accounts with which a placement group was shared are no longer able to launch instances or reserve capacity.\nAny instances running in a shared placement group are disassociated from the placement group, but they continue to run in your AWS account.\nAny capacity reservations in a shared placement group are disassociated from the placement group, but remain available to you in your AWS account.\nFor more information, see Deleting a resource share in the AWS RAM User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups-outpost.html",
        "content": "AWS Outposts is a fully managed service that extends AWS infrastructure, services, APIs, and tools to customer premises. By providing local access to AWS managed infrastructure, AWS Outposts enables customers to build and run applications on premises using the same programming interfaces as in AWS Regions, while using local compute and storage resources for lower latency and local data processing needs.\nAn Outpost is a pool of AWS compute and storage capacity deployed at a customer site. AWS operates, monitors, and manages this capacity as part of an AWS Region.\nYou can create placement groups on Outposts that you have created in your account. This allows you to spread out instances across underlying hardware on an Outpost at your site. You create and use placement groups on Outposts in the same way that you create and use placement groups in regular Availability Zones. When you create a placement group with a spread strategy on an Outpost, you can choose to have the placement group spread instances across hosts or racks. Spreading instances across hosts allows you to use a spread strategy with a single rack Outpost.\nConsiderations\nA rack level spread placement group can hold as many instances as you have racks in your Outpost deployment.\nA host level spread placement group can hold as many instances as you have hosts in your Outpost deployment.\nPrerequisite\nYou must have an Outpost installed at your site. For more information, see Create an Outpost and order Outpost capacity in the AWS Outposts User Guide.\nTo use a placement group on an Outpost\nCreate a subnet on the Outpost. For more information, see Create a subnet in the AWS Outposts User Guide.\nCreate a placement group in the associated Region of the Outpost. If you create a placement group with a spread strategy, you can choose host or rack level spread to determine how the group will spread instances across the underlying hardware on your Outpost. For more information, see Create a placement group for your EC2 instances.\nLaunch an instance into the placement group. For Subnet choose the subnet that you created in Step 1, and for Placement group name, select the placement group that you created in Step 2. For more information, see Launch an instance on the Outpost in the AWS Outposts User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/network_mtu.html",
        "content": "The maximum transmission unit (MTU) of a network connection is the size, in bytes, of the largest permissible packet that can be passed over the connection. The larger the MTU of a connection, the more data that can be passed in a single packet. Ethernet frames consist of the packet, or the actual data you are sending, and the network overhead information that surrounds it.\nEthernet frames can come in different formats, and the most common format is the standard Ethernet v2 frame format. It supports 1500 MTU, which is the largest Ethernet packet size supported over most of the internet. The maximum supported MTU for an instance depends on its instance type.\nContents\nJumbo frames (9001 MTU)\nPath MTU Discovery\nSet the MTU for your Amazon EC2 instances\nTroubleshoot\nJumbo frames (9001 MTU)\nJumbo frames allow more than 1500 bytes of data by increasing the payload size per packet, and thus increasing the percentage of the packet that is not packet overhead. Fewer packets are needed to send the same amount of usable data. However, traffic is limited to a maximum MTU of 1500 in the following cases:\nTraffic over an internet gateway\nTraffic over an inter-region VPC peering connection\nTraffic over VPN connections\nTraffic between AWS Regions, unless a transit gateway is used\nIf packets are over 1500 bytes, they are fragmented, or they are dropped if the Don't Fragment flag is set in the IP header.\nJumbo frames should be used with caution for internet-bound traffic or any traffic that leaves a VPC. Packets are fragmented by intermediate systems, which slows down this traffic. To use jumbo frames inside a VPC and not slow traffic that's bound for outside the VPC, you can configure the MTU size by route, or use multiple elastic network interfaces with different MTU sizes and different routes.\nFor instances that are collocated inside a cluster placement group, jumbo frames help to achieve the maximum network throughput possible, and they are recommended in this case. For more information, see Placement groups for your Amazon EC2 instances.\nYou can use jumbo frames for traffic between your VPCs and your on-premises networks over AWS Direct Connect. For more information, and for how to verify Jumbo Frame capability, see MTU for private virtual interfaces or transit virtual interfaces in the AWS Direct Connect User Guide.\nAll Amazon EC2 instance types support 1500 MTU and all current generation instance types support jumbo frames. The following previous generation instance types support jumbo frames: A1, C3, I2, M3, and R3.\nFor more information about supported MTU sizes:\nFor NAT gateways, see NAT gateway basics in the Amazon VPC User Guide.\nFor transit gateways, see Maximum transmission unit in the Amazon VPC Transit Gateways User Guide.\nFor Local Zones, see Considerations in the AWS Local Zones User Guide.\nFor AWS Wavelength, see Maximum transmission unit in the AWS Wavelength User Guide.\nFor Outposts see Service link maximum transmission unit requirements in the AWS Outposts User Guide.\nPath MTU Discovery\nPath MTU Discovery (PMTUD) is used to determine the path MTU between two devices. The path MTU is the maximum packet size that's supported on the path between the originating host and the receiving host. When there is a difference in the MTU size in the network between two hosts, PMTUD enables the receiving host to respond to the originating host with an ICMP message. This ICMP message instructs the originating host to use the lowest MTU size along the network path and to resend the request. Without this negotiation, packet drop can occur because the request is too large for the receiving host to accept.\nFor IPv4, when a host sends a packet that's larger than the MTU of the receiving host or that's larger than the MTU of a device along the path, the receiving host or device drops the packet, and then returns the following ICMP message: Destination Unreachable: Fragmentation Needed and Don't Fragment was Set (Type 3, Code 4). This instructs the transmitting host to split the payload into multiple smaller packets, and then retransmit them.\nThe IPv6 protocol does not support fragmentation in the network. When a host sends a packet that's larger than the MTU of the receiving host or that's larger than the MTU of a device along the path, the receiving host or device drops the packet, and then returns the following ICMP message: ICMPv6 Packet Too Big (PTB) (Type 2). This instructs the transmitting host to split the payload into multiple smaller packets, and then retransmit them.\nConnections made through some components, like NAT gateways and load balancers, are automatically tracked. This means that security group tracking is automatically enabled for your outbound connection attempts. If connections are automatically tracked or if your security group rules allow inbound ICMP traffic, you can receive PMTUD responses.\nNote that ICMP traffic can be blocked even if the traffic is allowed at the security group level, such as if you have a network access control list entry that denies ICMP traffic to the subnet.\nImportant\nPath MTU Discovery does not guarantee that jumbo frames will not be dropped by some routers. An internet gateway in your VPC will forward packets up to 1500 bytes only. 1500 MTU packets are recommended for internet traffic.\nFor MTU rules over NAT gateways, see Maximum transmission unit (MTU) in the Amazon VPC User Guide. For MTU rules over Transit gateways, see Maximum transmission unit (MTU) in the AWS Transit Gateway User Guide.\nTroubleshoot\nIf you experience connectivity issues between your EC2 instance and an Amazon Redshift cluster when using jumbo frames, see Queries appear to hang and sometimes fail to reach the cluster in the Amazon Redshift Management Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-mtu.html",
        "content": "The maximum transmission unit (MTU) of a network connection is the size, in bytes, of the largest permissible packet that can be passed over the connection. All Amazon EC2 instances support standard frames (1500 MTU) and all current generation instance types support jumbo frames (9001 MTU).\nYou can view the MTU for your Amazon EC2 instances, view the path MTU between your instance and another host, and configure your instances to use either standard or jumbo frames.\nTasks\nCheck the path MTU between two hosts\nCheck the MTU for your instance\nSet the MTU for your instance\nCheck the path MTU between two hosts\nYou can check the path MTU between your EC2 instance and another host. You can specify a DNS name or an IP address as the destination. If the destination is another EC2 instance, verify that its security group allows inbound UDP traffic.\nThe procedure that you use depends on the operating system of the instance.\nLinux instances\nWindows instances\nCheck the MTU for your instance\nYou can check the MTU value for your instance. Some instances are configured to use jumbo frames, and others are configured to use standard frame sizes.\nThe procedure that you use depends on the operating system of the instance.\nLinux instances\nWindows instances\nSet the MTU for your instance\nYou might want to use jumbo frames for network traffic within your VPC and standard frames for internet traffic. Whatever your use case, we recommend that you verify that your instance behaves as expected.\nThe procedure that you use depends on the operating system of the instance.\nLinux instances\nWindows instances"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-vpc.html",
        "content": "Amazon Virtual Private Cloud (Amazon VPC) enables you to define a virtual network in your own logically isolated area within the AWS cloud, known as a virtual private cloud or VPC. You can create AWS resources, such as Amazon EC2 instances, into the subnets of your VPC. Your VPC closely resembles a traditional network that you might operate in your own data center, with the benefits of using scalable infrastructure from AWS. You can configure your VPC; you can select its IP address range, create subnets, and configure route tables, network gateways, and security settings. You can connect instances in your VPC to the internet or to your own data center.\nContents\nYour default VPCs\nNondefault VPCs\nInternet access\nShared subnets\nIPv6-only subnets\nYour default VPCs\nWhen you create your AWS account, we create a default VPC in each Region. A default VPC is a VPC that is already configured and ready for you to use. For example, there is a default subnet for each Availability Zone in each default VPC, an internet gateway attached to the VPC, and there's a route in the main route table that sends all traffic (0.0.0.0/0) to the internet gateway. You can modify the configuration of your default VPCs as needed. For example, you can add subnets and route tables.\nNondefault VPCs\nInstead of using a default VPC for your resources, you can create your own VPC, as described in Create a VPC in the Amazon VPC User Guide.\nHere are some things to consider when creating a VPC for your EC2 instances.\nYou can use the default suggestion for the IPv4 CIDR block or enter the CIDR block required by your application or network.\nTo ensure high availability, create subnets in multiple Availability Zones.\nIf your instances must be accessible from the internet, do one of the following:\nIf your instances can be in a public subnet, add public subnets. Keep both DNS options enabled. You can optionally add private subnets now or later on.\nIf your instances must be in a private subnet, add only private subnets. You can add a NAT gateway to provide internet access to instances in the private subnets. If your instances send or receive a significant volume of traffic across Availability Zones, create a NAT gateway in each Availability Zone. Otherwise, you can create a NAT gateway in just one of the Availability Zones and launch instances that send or receive cross-zone traffic in the same Availability Zone as the NAT gateway.\nInternet access\nInstances launched into a default subnet in a default VPC have access to the internet, as default VPCs are configured to assign public IP addresses and DNS hostnames, and the main route table is configured with a route to an internet gateway attached to the VPC.\nFor instances that you launch in nondefault subnets and VPCs, you can use one of the following options to ensure that the instances that you launch in these subnets have access to the internet:\nConfigure an internet gateway. For more information, see Connect to the internet using an internet gateway in the Amazon VPC User Guide.\nConfigure a public NAT gateway. For more information, see Access the internet from a private subnet in the Amazon VPC User Guide.\nShared subnets\nWhen launching EC2 instances into shared VPC subnets, note the following:\nParticipants can run instances in a shared subnet by specifying the ID of the shared subnet. Participants must own any network interfaces that they specify.\nParticipants can start, stop, terminate, and describe instances that they've created in a shared subnet. Participants can't start, stop, terminate, or describe instances that the VPC owner created in the shared subnet.\nVPC owners can't start, stop, terminate, or describe instances created by participants in a shared subnet.\nParticipants can connect to an instance in a shared subnet using EC2 Instance Connect Endpoint. The participant must create the EC2 Instance Connect Endpoint in the shared subnet. Participants can't use an EC2 Instance Connect Endpoint that the VPC owner created in the shared subnet.\nFor information about shared Amazon EC2 resources, see the following:\nManage AMI sharing with an organization or OU\nShared Capacity Reservations\nShared placement groups\nCross-account Amazon EC2 Dedicated Host sharing\nFor more information about shared subnets, see Share your VPC with other accounts in the Amazon VPC User Guide.\nIPv6-only subnets\nAn EC2 instance launched in an IPv6-only subnet receives an IPv6 address but not an IPv4 address. Any instances that you launch into an IPv6-only subnet must be Nitro-based instances."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security.html",
        "content": "Cloud security at AWS is the highest priority. As an AWS customer, you benefit from a data center and network architecture that are built to meet the requirements of the most security-sensitive organizations.\nSecurity is a shared responsibility between AWS and you. The shared responsibility model describes this as security of the cloud and security in the cloud:\nSecurity of the cloud \u2013 AWS is responsible for protecting the infrastructure that runs AWS services in the AWS Cloud. AWS also provides you with services that you can use securely. Third-party auditors regularly test and verify the effectiveness of our security as part of the AWS Compliance Programs. To learn about the compliance programs that apply to Amazon EC2, see AWS Services in Scope by Compliance Program.\nSecurity in the cloud \u2013 Your responsibility includes the following areas:\nControlling network access to your instances, for example, through configuring your VPC and security groups. For more information, see Controlling network traffic.\nManaging the credentials used to connect to your instances.\nManaging the guest operating system and software deployed to the guest operating system, including updates and security patches. For more information, see Update management for Amazon EC2 instances.\nConfiguring the IAM roles that are attached to the instance and the permissions associated with those roles. For more information, see IAM roles for Amazon EC2.\nThis documentation helps you understand how to apply the shared responsibility model when using Amazon EC2. It shows you how to configure Amazon EC2 to meet your security and compliance objectives. You also learn how to use other AWS services that help you to monitor and secure your Amazon EC2 resources.\nContents\nData protection\nInfrastructure security\nResilience\nCompliance validation\nIdentity and access management\nUpdate management\nBest practices for Windows instances\nKey pairs\nSecurity groups\nNitroTPM\nCredential Guard for Windows instances\nAWS PrivateLink"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/data-protection.html",
        "content": "The AWS shared responsibility model applies to data protection in Amazon Elastic Compute Cloud. As described in this model, AWS is responsible for protecting the global infrastructure that runs all of the AWS Cloud. You are responsible for maintaining control over your content that is hosted on this infrastructure. You are also responsible for the security configuration and management tasks for the AWS services that you use. For more information about data privacy, see the Data Privacy FAQ. For information about data protection in Europe, see the AWS Shared Responsibility Model and GDPR blog post on the AWS Security Blog.\nFor data protection purposes, we recommend that you protect AWS account credentials and set up individual users with AWS IAM Identity Center or AWS Identity and Access Management (IAM). That way, each user is given only the permissions necessary to fulfill their job duties. We also recommend that you secure your data in the following ways:\nUse multi-factor authentication (MFA) with each account.\nUse SSL/TLS to communicate with AWS resources. We require TLS 1.2 and recommend TLS 1.3.\nSet up API and user activity logging with AWS CloudTrail. For information about using CloudTrail trails to capture AWS activities, see Working with CloudTrail trails in the AWS CloudTrail User Guide.\nUse AWS encryption solutions, along with all default security controls within AWS services.\nUse advanced managed security services such as Amazon Macie, which assists in discovering and securing sensitive data that is stored in Amazon S3.\nIf you require FIPS 140-3 validated cryptographic modules when accessing AWS through a command line interface or an API, use a FIPS endpoint. For more information about the available FIPS endpoints, see Federal Information Processing Standard (FIPS) 140-3.\nWe strongly recommend that you never put confidential or sensitive information, such as your customers' email addresses, into tags or free-form text fields such as a Name field. This includes when you work with Amazon EC2 or other AWS services using the console, API, AWS CLI, or AWS SDKs. Any data that you enter into tags or free-form text fields used for names may be used for billing or diagnostic logs. If you provide a URL to an external server, we strongly recommend that you do not include credentials information in the URL to validate your request to that server.\nContents\nAmazon EBS data security\nEncryption at rest\nEncryption in transit\nAmazon EBS data security\nAmazon EBS volumes are presented to you as raw, unformatted block devices. These devices are logical devices that are created on the EBS infrastructure and the Amazon EBS service ensures that the devices are logically empty (that is, the raw blocks are zeroed or they contain cryptographically pseudorandom data) prior to any use or re-use by a customer.\nIf you have procedures that require that all data be erased using a specific method, either after or before use (or both), such as those detailed in DoD 5220.22-M (National Industrial Security Program Operating Manual) or NIST 800-88 (Guidelines for Media Sanitization), you have the ability to do so on Amazon EBS. That block-level activity will be reflected down to the underlying storage media within the Amazon EBS service.\nEncryption at rest\nEBS volumes\nAmazon EBS encryption is an encryption solution for your EBS volumes and snapshots. It uses AWS KMS keys. For more information, see Amazon EBS encryption in the Amazon EBS User Guide.\n[Windows instances] You can also use Microsoft EFS and NTFS permissions for folder- and file-level encryption.\nInstance store volumes\nThe data on NVMe instance store volumes is encrypted using an XTS-AES-256 cipher, implemented on a hardware module on the instance. The keys used to encrypt data that's written to locally-attached NVMe storage devices are per-customer, and per volume. The keys are generated by, and only reside within, the hardware module, which is inaccessible to AWS personnel. The encryption keys are destroyed when the instance is stopped or terminated and cannot be recovered. You cannot disable this encryption and you cannot provide your own encryption key.\nThe data on HDD instance store volumes on H1, D3, and D3en instances is encrypted using XTS-AES-256 and one-time keys.\nWhen you stop, hibernate, or terminate an instance, every block of storage in the instance store volume is reset. Therefore, your data cannot be accessed through the instance store of another instance.\nMemory\nMemory encryption is enabled on the following instances:\nInstances with AWS Graviton2 or later AWS Graviton processors support always-on memory encryption. The encryption keys are securely generated within the host system, do not leave the host system, and are destroyed when the host is rebooted or powered down. For more information, see AWS Graviton Processors.\nInstances with 3rd generation Intel Xeon Scalable processors (Ice Lake), such as M6i instances, and 4th generation Intel Xeon Scalable processors (Sapphire Rapids), such as M7i instances. These processors support always-on memory encryption using Intel Total Memory Encryption (TME).\nInstances with 3rd generation AMD EPYC processors (Milan), such as M6a instances, and 4th generation AMD EPYC processors (Genoa), such as M7a instances. These processors support always-on memory encryption using AMD Secure Memory Encryption (SME). Instances with 3rd generation AMD EPYC processors (Milan) also support AMD Secure Encrypted Virtualization-Secure Nested Paging (SEV-SNP).\nEncryption in transit\nEncryption at the physical layer\nAll data flowing across AWS Regions over the AWS global network is automatically encrypted at the physical layer before it leaves AWS secured facilities. All traffic between AZs is encrypted. Additional layers of encryption, including those listed in this section, may provide additional protections.\nEncryption provided by Amazon VPC peering and Transit Gateway cross-Region peering\nAll cross-Region traffic that uses Amazon VPC peering and Transit Gateway peering is automatically bulk-encrypted when it exits a Region. An additional layer of encryption is automatically provided at the physical layer for all traffic before it leaves AWS secured facilities, as previously noted in this section.\nEncryption between instances\nAWS provides secure and private connectivity between EC2 instances of all types. In addition, some instance types use the offload capabilities of the underlying Nitro System hardware to automatically encrypt in-transit traffic between instances. This encryption uses Authenticated Encryption with Associated Data (AEAD) algorithms, with 256-bit encryption. There is no impact on network performance. To support this additional in-transit traffic encryption between instances, the following requirements must be met:\nThe instances use the following instance types:\nGeneral purpose: M5dn, M5n, M5zn, M6a, M6i, M6id, M6idn, M6in, M7a, M7g, M7gd, M7i, M7i-flex, M8g\nCompute optimized: C5a, C5ad, C5n, C6a, C6gn, C6i, C6id, C6in, C7a, C7g, C7gd, C7gn, C7i, C7i-flex, C8g\nMemory optimized: R5dn, R5n, R6a, R6i, R6idn, R6in, R6id, R7a, R7g, R7gd, R7i, R7iz, R8g, U-3tb1, U-6tb1, U-9tb1, U-12tb1, U-18tb1, U-24tb1, U7i-6tb, U7i-8tb, U7i-12tb, U7in-16tb, U7in-24tb, U7in-32tb, U7inh-32tb, X2idn, X2iedn, X2iezn, X8g\nStorage optimized: D3, D3en, I3en, I4g, I4i, I7ie, I8g, Im4gn, Is4gen\nAccelerated computing: DL1, DL2q, F2, G4ad, G4dn, G5, G6, G6e, Gr6, Inf1, Inf2, P3dn, P4d, P4de, P5, P5e, P5en, Trn1, Trn1n, Trn2, Trn2u, VT1\nHigh-performance computing: Hpc6a, Hpc6id, Hpc7a, Hpc7g\nThe instances are in the same Region.\nThe instances are in the same VPC or peered VPCs, and the traffic does not pass through a virtual network device or service, such as a load balancer or a transit gateway.\nAn additional layer of encryption is automatically provided at the physical layer for all traffic before it leaves AWS secured facilities, as previously noted in this section.\nTo view the instance types that encrypt in-transit traffic between instances using the AWS CLI\nUse the following describe-instance-types command.\naws ec2 describe-instance-types \\\n    --filters Name=network-info.encryption-in-transit-supported,Values=true \\\n    --query \"InstanceTypes[*].[InstanceType]\" \\\n    --output text | sort\nEncryption to and from AWS Outposts\nAn Outpost creates special network connections called service links to its AWS home Region and, optionally, private connectivity to a VPC subnet that you specify. All traffic over those connection is fully encrypted. For more information, see Connectivity through service links and Encryption in transit in the AWS Outposts User Guide.\nRemote access encryption\nThe SSH and RDP protocols provides secure communications channels for remote access to your instances, whether directly or through EC2 Instance Connect. Remote access to your instances using AWS Systems Manager Session Manager or the Run Command is encrypted using TLS 1.2, and requests to create a connection are signed using SigV4, and authenticated and authorized by AWS Identity and Access Management.\nIt is your responsibility to use an encryption protocol, such as Transport Layer Security (TLS), to encrypt sensitive data in transit between clients and your Amazon EC2 instances.\n(Windows instances) Make sure to allow only encrypted connections between EC2 instances and the AWS API endpoints or other sensitive remote network services. You can enforce this through an outbound security group or Windows Firewall rules."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/infrastructure-security.html",
        "content": "As a managed service, Amazon Elastic Compute Cloud is protected by AWS global network security. For information about AWS security services and how AWS protects infrastructure, see AWS Cloud Security. To design your AWS environment using the best practices for infrastructure security, see Infrastructure Protection in Security Pillar AWS Well\u2010Architected Framework.\nYou use AWS published API calls to access Amazon EC2 through the network. Clients must support the following:\nTransport Layer Security (TLS). We require TLS 1.2 and recommend TLS 1.3.\nCipher suites with perfect forward secrecy (PFS) such as DHE (Ephemeral Diffie-Hellman) or ECDHE (Elliptic Curve Ephemeral Diffie-Hellman). Most modern systems such as Java 7 and later support these modes.\nAdditionally, requests must be signed by using an access key ID and a secret access key that is associated with an IAM principal. Or you can use the AWS Security Token Service (AWS STS) to generate temporary security credentials to sign requests.\nFor more information, see Infrastructure Protection in the Security Pillar \u2013 AWS Well-Architected Framework.\nNetwork isolation\nA virtual private cloud (VPC) is a virtual network in your own logically isolated area in the AWS Cloud. Use separate VPCs to isolate infrastructure by workload or organizational entity.\nA subnet is a range of IP addresses in a VPC. When you launch an instance, you launch it into a subnet in your VPC. Use subnets to isolate the tiers of your application (for example, web, application, and database) within a single VPC. Use private subnets for your instances if they should not be accessed directly from the internet.\nTo call the Amazon EC2 API from your VPC using private IP addresses, use AWS PrivateLink. For more information, see Access Amazon EC2 using an interface VPC endpoint.\nIsolation on physical hosts\nDifferent EC2 instances on the same physical host are isolated from each other as though they are on separate physical hosts. The hypervisor isolates CPU and memory, and the instances are provided virtualized disks instead of access to the raw disk devices.\nWhen you stop or terminate an instance, the memory allocated to it is scrubbed (set to zero) by the hypervisor before it is allocated to a new instance, and every block of storage is reset. This ensures that your data is not unintentionally exposed to another instance.\nNetwork MAC addresses are dynamically assigned to instances by the AWS network infrastructure. IP addresses are either dynamically assigned to instances by the AWS network infrastructure, or assigned by an EC2 administrator through authenticated API requests. The AWS network allows instances to send traffic only from the MAC and IP addresses assigned to them. Otherwise, the traffic is dropped.\nBy default, an instance cannot receive traffic that is not specifically addressed to it. If you need to run network address translation (NAT), routing, or firewall services on your instance, you can disable source/destination checking for the network interface.\nControlling network traffic\nConsider the following options for controlling network traffic to your EC2 instances:\nRestrict access to your instances using security groups. Configure rules that allow the minimum required network traffic. For example, you can allow traffic only from the address ranges for your corporate network or only for specific protocols, such as HTTPS. For Windows instances, allow Windows management traffic and minimal outbound connections.\nLeverage security groups as the primary mechanism for controlling network access to Amazon EC2 instances. When necessary, use network ACLs sparingly to provide stateless, coarse-grain network control. Security groups are more versatile than network ACLs due to their ability to perform stateful packet filtering and create rules that reference other security groups. However, network ACLs can be effective as a secondary control for denying a specific subset of traffic or providing high-level subnet guard rails. Also, because network ACLs apply to an entire subnet, they can be used as defense-in-depth in case an instance is ever launched unintentionally without a correct security group.\n[Windows instances] Centrally manage Windows Firewall settings with Group Policy Objects (GPO) to further enhance network controls. Customers often use the Windows Firewall for further visibility into network traffic and to complement security group filters, creating advanced rules to block specific applications from accessing the network or to filter traffic from a subset IP addresses. For example, the Windows Firewall can limit access to the EC2 metadata service IP address to specific users or applications. Alternatively, a public-facing service might use security groups to restrict traffic to specific ports and the Windows Firewall to maintain a list of explicitly blocked IP addresses.\nUse private subnets for your instances if they should not be accessed directly from the internet. Use a bastion host or NAT gateway for internet access from an instance in a private subnet.\n[Windows instances] Use secure administration protocols like RDP encapsulation over SSL/TLS. The Remote Desktop Gateway Quick Start provides best practices for deploying remote desktop gateway, including configuring RDP to use SSL/TLS.\n[Windows instances] Use Active Directory or AWS Directory Service to tightly and centrally control and monitor interactive user and group access to Windows instances, and avoid local user permissions. Also avoid using Domain Administrators and instead create more granular, application-specific role-based accounts. Just Enough Administration (JEA) allows changes to Windows instances to be managed without interactive or administrator access. In addition, JEA enables organizations to lock down administrative access to the subset of Windows PowerShell commands required for instance administration. For additional information, see the section on \"Managing OS-level Access to Amazon EC2\" in the AWS Security Best Practices whitepaper.\n[Windows instances] System Administrators should use Windows accounts with limited access to perform daily activities, and only elevate access when necessary to perform specific configuration changes. Additionally, only access Windows instances directly when absolutely necessary. Instead, leverage central configuration management systems such as EC2 Run Command, Systems Center Configuration Manager (SCCM), Windows PowerShell DSC, or Amazon EC2 Systems Manager (SSM) to push changes to Windows servers.\nConfigure Amazon VPC subnet route tables with the minimal required network routes. For example, place only Amazon EC2 instances that require direct Internet access into subnets with routes to an internet gateway, and place only Amazon EC2 instances that need direct access to internal networks into subnets with routes to a virtual private gateway.\nConsider using additional security groups or network interfaces to control and audit Amazon EC2 instance management traffic separately from regular application traffic. This approach allows customers to implement special IAM policies for change control, making it easier to audit changes to security group rules or automated rule-verification scripts. Using multiple network interfaces also provides additional options for controlling network traffic, including the ability to create host-based routing policies or leverage different VPC subnet routing rules based on the assigned subnet of the network interface.\nUse AWS Virtual Private Network or AWS Direct Connect to establish private connections from your remote networks to your VPCs. For more information, see Network-to-Amazon VPC Connectivity Options.\nUse VPC Flow Logs to monitor the traffic that reaches your instances.\nUse GuardDuty Malware Protection to identify suspicious behavior indicative of malicious software on your instances that might compromise your workload, repurpose resources for malicious use, and gain unauthorized access to your data.\nUse GuardDuty Runtime Monitoring to identify and respond to potential threats to your instances. For more information, see How Runtime Monitoring works with Amazon EC2 instances.\nUse AWS Security Hub, Reachability Analyzer, or Network Access Analyzer to check for unintended network accessibility from your instances.\nUse EC2 Instance Connect to connect to your instances using Secure Shell (SSH) without the need to share and manage SSH keys.\nUse AWS Systems Manager Session Manager to access your instances remotely instead of opening inbound SSH or RDP ports and managing key pairs.\nUse AWS Systems Manager Run Command to automate common administrative tasks instead of connecting to your instances.\n[Windows instances] Many of the Windows OS roles and Microsoft business applications also provide enhanced functionality such as IP Address Range restrictions within IIS, TCP/IP filtering policies in Microsoft SQL Server, and connection filter policies in Microsoft Exchange. Network restriction functionality within the application layer can provide additional layers of defense for critical business application servers.\nAmazon VPC supports additional network security controls, such as gateways, proxy servers, and network monitoring options. For more information, see Control network traffic in the Amazon VPC User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/disaster-recovery-resiliency.html",
        "content": "The AWS global infrastructure is built around AWS Regions and Availability Zones. Regions provide multiple physically separated and isolated Availability Zones, which are connected through low-latency, high-throughput, and highly redundant networking. With Availability Zones, you can design and operate applications and databases that automatically fail over between zones without interruption. Availability Zones are more highly available, fault tolerant, and scalable than traditional single or multiple data center infrastructures.\nIf you need to replicate your data or applications over greater geographic distances, use AWS Local Zones. An AWS Local Zone is an extension of an AWS Region in geographic proximity to your users. Local Zones have their own connections to the internet and support AWS Direct Connect. Like all AWS Regions, AWS Local Zones are completely isolated from other AWS Zones.\nIf you need to replicate your data or applications in an AWS Local Zone, AWS recommends that you use one of the following zones as the failover zone:\nAnother Local Zone\nAn Availability Zone in the Region that is not the parent zone. You can use the describe-availability-zones command to view the parent zone.\nFor more information about AWS Regions and Availability Zones, see AWS Global Infrastructure.\nIn addition to the AWS global infrastructure, Amazon EC2 offers the following features to support your data resiliency:\nCopying AMIs across Regions\nCopying EBS snapshots across Regions\nAutomating EBS-backed AMIs using Amazon Data Lifecycle Manager\nAutomating EBS snapshots using Amazon Data Lifecycle Manager\nMaintaining the health and availability of your fleet using Amazon EC2 Auto Scaling\nDistributing incoming traffic across multiple instances in a single Availability Zone or multiple Availability Zones using Elastic Load Balancing"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/compliance-validation.html",
        "content": "To learn whether an AWS service is within the scope of specific compliance programs, see AWS services in Scope by Compliance Program and choose the compliance program that you are interested in. For general information, see AWS Compliance Programs.\nYou can download third-party audit reports using AWS Artifact. For more information, see Downloading Reports in AWS Artifact.\nYour compliance responsibility when using AWS services is determined by the sensitivity of your data, your company's compliance objectives, and applicable laws and regulations. AWS provides the following resources to help with compliance:\nSecurity Compliance & Governance \u2013 These solution implementation guides discuss architectural considerations and provide steps for deploying security and compliance features.\nArchitecting for HIPAA Security and Compliance on Amazon Web Services \u2013 This whitepaper describes how companies can use AWS to create HIPAA-eligible applications.\nNote\nNot all AWS services are HIPAA eligible. For more information, see the HIPAA Eligible Services Reference.\nAWS Compliance Resources \u2013 This collection of workbooks and guides might apply to your industry and location.\nAWS Customer Compliance Guides \u2013 Understand the shared responsibility model through the lens of compliance. The guides summarize the best practices for securing AWS services and map the guidance to security controls across multiple frameworks (including National Institute of Standards and Technology (NIST), Payment Card Industry Security Standards Council (PCI), and International Organization for Standardization (ISO)).\nEvaluating Resources with Rules in the AWS Config Developer Guide \u2013 The AWS Config service assesses how well your resource configurations comply with internal practices, industry guidelines, and regulations.\nAWS Security Hub \u2013 This AWS service provides a comprehensive view of your security state within AWS. Security Hub uses security controls to evaluate your AWS resources and to check your compliance against security industry standards and best practices. For a list of supported services and controls, see Security Hub controls reference.\nAmazon GuardDuty \u2013 This AWS service detects potential threats to your AWS accounts, workloads, containers, and data by monitoring your environment for suspicious and malicious activities. GuardDuty can help you address various compliance requirements, like PCI DSS, by meeting intrusion detection requirements mandated by certain compliance frameworks.\nAWS Audit Manager \u2013 This AWS service helps you continuously audit your AWS usage to simplify how you manage risk and compliance with regulations and industry standards."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-iam.html",
        "content": "AWS Identity and Access Management (IAM) is an AWS service that helps an administrator securely control access to AWS resources. IAM administrators control who can be authenticated (signed in) and authorized (have permissions) to use Amazon EC2 resources. IAM is an AWS service that you can use with no additional charge.\nYour security credentials identify you to services in AWS and grant you access to AWS resources, such as your Amazon EC2 resources. You can use features of Amazon EC2 and IAM to allow other users, services, and applications to use your Amazon EC2 resources without sharing your security credentials. You can use IAM to control how other users use resources in your AWS account, and you can use security groups to control access to your Amazon EC2 instances. You can choose to allow full or limited use of your Amazon EC2 resources.\nIf you are a developer, you can use IAM roles to manage the security credentials needed by the applications that you run on your EC2 instances. After you attach an IAM role to your instance, your applications running on the instance can retrieve the credentials from the Instance Metadata Service (IMDS).\nFor best practices for securing your AWS resources using IAM, see Security best practices in IAM in the IAM User Guide.\nContents\nIdentity-based policies for Amazon EC2\nExample policies to control access the Amazon EC2 API\nExample policies to control access to the Amazon EC2 console\nAWS managed policies for Amazon EC2\nIAM roles for Amazon EC2"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policies-for-amazon-ec2.html",
        "content": "By default, users don't have permission to create or modify Amazon EC2 resources, or perform tasks using the Amazon EC2 API, Amazon EC2 console, or CLI. To allow users to create or modify resources and perform tasks, you must create IAM policies that grant users permission to use the specific resources and API actions they'll need, and then attach those policies to the users, groups, or IAM roles that require those permissions.\nWhen you attach a policy to a user, group of users, or role it allows or denies the users permission to perform the specified tasks on the specified resources. For more general information about IAM policies, see Policies and permissions in IAM in the IAM User Guide. For more information about managing and creating IAM policies, see Manage IAM policies.\nAn IAM policy must grant or deny permissions to use one or more Amazon EC2 actions. It must also specify the resources that can be used with the action, which can be all resources, or in some cases, specific resources. The policy can also include conditions that you apply to the resource.\nTo get started, you can check whether the AWS managed policies for Amazon EC2 meet your needs. Otherwise, you can create your own custom policies. For more information, see AWS managed policies for Amazon EC2.\nContents\nPolicy syntax\nActions for Amazon EC2\nSupported resource-level permissions for Amazon EC2 API actions\nAmazon Resource Names (ARNs) for Amazon EC2\nCondition keys for Amazon EC2\nControl access using attribute-based access\nGrant permissions to users, groups, and roles\nCheck that users have the required permissions\nPolicy syntax\nAn IAM policy is a JSON document that consists of one or more statements. Each statement is structured as follows.\n{\n  \"Statement\":[{\n    \"Effect\":\"effect\",\n    \"Action\":\"action\",\n    \"Resource\":\"arn\",\n    \"Condition\":{\n      \"condition\":{\n        \"key\":\"value\"\n        }\n      }\n    }\n  ]\n}\nThere are various elements that make up a statement:\nEffect: The effect can be Allow or Deny. By default, users don't have permission to use resources and API actions, so all requests are denied. An explicit allow overrides the default. An explicit deny overrides any allows.\nAction: The action is the specific API action for which you are granting or denying permission. To learn about specifying action, see Actions for Amazon EC2.\nResource: The resource that's affected by the action. Some Amazon EC2 API actions allow you to include specific resources in your policy that can be created or modified by the action. You specify a resource using an Amazon Resource Name (ARN) or using the wildcard (*) to indicate that the statement applies to all resources. For more information, see Supported resource-level permissions for Amazon EC2 API actions.\nCondition: Conditions are optional. They can be used to control when your policy is in effect. For more information about specifying conditions for Amazon EC2, see Condition keys for Amazon EC2.\nFor more information about policy requirements, see the IAM JSON policy reference in the IAM User Guide. For example IAM policy statements for Amazon EC2, see Example policies to control access the Amazon EC2 API.\nActions for Amazon EC2\nIn an IAM policy statement, you can specify any API action from any service that supports IAM. For Amazon EC2, use the following prefix with the name of the API action: ec2:. For example: ec2:RunInstances and ec2:CreateImage.\nTo specify multiple actions in a single statement, separate them with commas as follows:\n\"Action\": [\"ec2:action1\", \"ec2:action2\"]\nYou can also specify multiple actions using wildcards. For example, you can specify all actions whose name begins with the word \"Describe\" as follows:\n\"Action\": \"ec2:Describe*\"\nNote\nCurrently, the Amazon EC2 Describe* API actions do not support resource-level permissions. For more information about resource-level permissions for Amazon EC2, see Identity-based policies for Amazon EC2.\nTo specify all Amazon EC2 API actions, use the * wildcard as follows:\n\"Action\": \"ec2:*\"\nFor a list of Amazon EC2 actions, see Actions defined by Amazon EC2 in the Service Authorization Reference.\nSupported resource-level permissions for Amazon EC2 API actions\nResource-level permissions refers to the ability to specify which resources users are allowed to perform actions on. Amazon EC2 has partial support for resource-level permissions. This means that for certain Amazon EC2 actions, you can control when users are allowed to use those actions based on conditions that have to be fulfilled, or specific resources that users are allowed to use. For example, you can grant users permissions to launch instances, but only of a specific type, and only using a specific AMI.\nTo specify a resource in an IAM policy statement, use its Amazon Resource Name (ARN). For more information about specifying the ARN value, see Amazon Resource Names (ARNs) for Amazon EC2. If an API action does not support individual ARNs, you must use a wildcard (*) to specify that all resources can be affected by the action.\nTo see tables that identify which Amazon EC2 API actions support resource-level permissions, and the ARNs and condition keys that you can use in a policy, see Actions, resources, and condition keys for Amazon EC2.\nKeep in mind that you can apply tag-based resource-level permissions in the IAM policies you use for Amazon EC2 API actions. This gives you better control over which resources a user can create, modify, or use. For more information, see Grant permission to tag Amazon EC2 resources during creation.\nAmazon Resource Names (ARNs) for Amazon EC2\nEach IAM policy statement applies to the resources that you specify using their ARNs.\nAn ARN has the following general syntax:\narn:aws:[service]:[region]:[account-id]:resourceType/resourcePath\nservice\nThe service (for example, ec2).\nregion\nThe Region for the resource (for example, us-east-1).\naccount-id\nThe AWS account ID, with no hyphens (for example, 123456789012).\nresourceType\nThe type of resource (for example, instance).\nresourcePath\nA path that identifies the resource. You can use the * wildcard in your paths.\nFor example, you can indicate a specific instance (i-1234567890abcdef0) in your statement using its ARN as follows.\n\"Resource\": \"arn:aws:ec2:us-east-1:123456789012:instance/i-1234567890abcdef0\"\nYou can specify all instances that belong to a specific account by using the * wildcard as follows.\n\"Resource\": \"arn:aws:ec2:us-east-1:123456789012:instance/*\"\nYou can also specify all Amazon EC2 resources that belong to a specific account by using the * wildcard as follows.\n\"Resource\": \"arn:aws:ec2:us-east-1:123456789012:*\"\nTo specify all resources, or if a specific API action does not support ARNs, use the * wildcard in the Resource element as follows.\n\"Resource\": \"*\"\nMany Amazon EC2 API actions involve multiple resources. For example, AttachVolume attaches an Amazon EBS volume to an instance, so a user must have permissions to use the volume and the instance. To specify multiple resources in a single statement, separate their ARNs with commas, as follows.\n\"Resource\": [\"arn1\", \"arn2\"]\nFor a list of ARNs for Amazon EC2 resources, see Resource types defined by Amazon EC2.\nCondition keys for Amazon EC2\nIn a policy statement, you can optionally specify conditions that control when it is in effect. Each condition contains one or more key-value pairs. Condition keys are not case-sensitive. We've defined AWS global condition keys, plus additional service-specific condition keys.\nFor a list of service-specific condition keys for Amazon EC2, see Condition keys for Amazon EC2. Amazon EC2 also implements the AWS global condition keys. For more information, see Information available in all requests in the IAM User Guide.\nAll Amazon EC2 actions support the aws:RequestedRegion and ec2:Region condition keys. For more information, see Example: Restrict access to a specific Region.\nTo use a condition key in your IAM policy, use the Condition statement. For example, the following policy grants users permission to add and remove inbound and outbound rules for any security group. It uses the ec2:Vpc condition key to specify that these actions can only be performed on security groups in a specific VPC.\n{\n\"Version\": \"2012-10-17\",\n  \"Statement\":[{\n    \"Effect\":\"Allow\",\n    \"Action\": [\n       \"ec2:AuthorizeSecurityGroupIngress\",\n       \"ec2:AuthorizeSecurityGroupEgress\",\n       \"ec2:RevokeSecurityGroupIngress\",\n       \"ec2:RevokeSecurityGroupEgress\"],\n     \"Resource\": \"arn:aws:ec2:region:account:security-group/*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"ec2:Vpc\": \"arn:aws:ec2:region:account:vpc/vpc-11223344556677889\"\n        }\n      }\n    }\n  ]\n}\nIf you specify multiple conditions, or multiple keys in a single condition, we evaluate them using a logical AND operation. If you specify a single condition with multiple values for one key, we evaluate the condition using a logical OR operation. For permissions to be granted, all conditions must be met.\nYou can also use placeholders when you specify conditions. For more information, see IAM policy elements: Variables and tags in the IAM User Guide.\nImportant\nMany condition keys are specific to a resource, and some API actions use multiple resources. If you write a policy with a condition key, use the Resource element of the statement to specify the resource to which the condition key applies. If not, the policy may prevent users from performing the action at all, because the condition check fails for the resources to which the condition key does not apply. If you do not want to specify a resource, or if you've written the Action element of your policy to include multiple API actions, then you must use the ...IfExists condition type to ensure that the condition key is ignored for resources that do not use it. For more information, see ...IfExists Conditions in the IAM User Guide.\nCondition keys\nec2:Attribute condition key\nec2:ResourceID condition keys\nec2:SourceInstanceARN condition key\nec2:Attribute condition key\nThe ec2:Attribute condition key can be used for conditions that filter access by an attribute of a resource.\nThis condition key supports only properties that are of a primitive data type (such as strings or integers), or complex AttributeValue objects that contain only a Value property (such as the Description or ImdsSupport objects of the ModifyImageAttribute API action). The condition key can't be used with complex objects that contain multiple properties, such as the LaunchPermission object of ModifyImageAttribute.\nFor example, the following policy uses the ec2:Attribute/Description condition key to filter access by the complex Description object of the ModifyImageAttribute API action. The condition key allows only requests that modify an image's description to either Production or Development.\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:ModifyImageAttribute\",\n      \"Resource\": \"arn:aws:ec2:us-east-1::image/ami-*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"ec2:Attribute/Description\": [\n            \"Production\",\n            \"Development\"\n          ]\n        }\n      }\n    }\n  ]\n}\nThe following example policy uses the ec2:Attribute condition key to filter access by the primitive Attribute property of the ModifyImageAttribute API action. The condition key denies all requests that attempt to modify an image's description.\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Deny\",\n      \"Action\": \"ec2:ModifyImageAttribute\",\n      \"Resource\": \"arn:aws:ec2:us-east-1::image/ami-*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"ec2:Attribute\": \"Description\"\n        }\n      }\n    }\n  ]\n}\nec2:ResourceID condition keys\nWhen using the following ec2:ResourceID condition keys with the specified API actions, the condition key value is used to specify the resulting resource that is created by the API action. ec2:ResourceID condition keys can't be used to specify a source resource that is specified in the API request. If you use one of the following ec2:ResourceID condition keys with a specified API, then you must always specify the wildcard (*). If you specify a different value, the condition always resolves to * during runtime. For example, to use the ec2:ImageId condition key with the CopyImage API, then you must specify the condition key as follows:\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CopyImage\",\n      \"Resource\": \"arn:aws:ec2:us-east-1::image/ami-*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          ec2:ImageID\": \"*\"\n        }\n      }\n    }\n  ]\n}\nWe recommend that you avoid using these condition keys with these API actions:\nec2:DhcpOptionsID \u2013 CreateDhcpOptions\nec2:ImageID \u2013 CopyImage, CreateImage, ImportImage, and RegisterImage\nec2:InstanceID \u2013 RunInstances and ImportInstance\nec2:InternetGatewayID \u2013 CreateInternetGateway\nec2:NetworkAclID \u2013 CreateNetworkAcl\nec2:NetworkInterfaceID \u2013 CreateNetworkInterface\nec2:PlacementGroupName \u2013 CreatePlacementGroup\nec2:RouteTableID \u2013 CreateRouteTable\nec2:SecurityGroupID \u2013 CreateSecurityGroup\nec2:SnapshotID \u2013 CopySnapshot, CreateSnapshot, CreateSnapshots, and ImportSnapshots\nec2:SubnetID \u2013 CreateSubnet\nec2:VolumeID \u2013 CreateVolume and ImportVolume\nec2:VpcID \u2013 CreateVpc\nec2:VpcPeeringConnectionID \u2013 CreateVpcPeeringConnection\nTo filter access based on specific resource IDs, we recommend that you use the Resource policy element as follows.\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CopyImage\",\n      \"Resource\": \"arn:aws:ec2:us-east-1::image/ami-01234567890abcdef\"\n    }\n  ]\n}\nec2:SourceInstanceARN condition key\nUse ec2:SourceInstanceARN to specify the ARN of the instance from which a request is made. This is an AWS global condition key, which means that you can use it with services other than Amazon EC2. For a policy example, see Example: Allow a specific instance to view resources in other AWS services.\nControl access using attribute-based access\nWhen you create an IAM policy that grants users permission to use EC2 resources, you can include tag information in the Condition element of the policy to control access based on tags. This is known as attribute-based access control (ABAC). ABAC provides better control over which resources a user can modify, use, or delete. For more information, see What is ABAC for AWS?\nFor example, you can create a policy that allows users to terminate an instance, but denies the action if the instance has the tag environment=production. To do this, you use the aws:ResourceTag condition key to allow or deny access to the resource based on the tags that are attached to the resource.\n\"StringEquals\": { \"aws:ResourceTag/environment\": \"production\" }\nTo learn whether an Amazon EC2 API action supports controlling access using the aws:ResourceTag condition key, see Actions, resources, and condition keys for Amazon EC2. Note that the Describe actions do not support resource-level permissions, so you must specify them in a separate statement without conditions.\nFor example IAM policies, see Example policies to control access the Amazon EC2 API.\nIf you allow or deny users access to resources based on tags, you must consider explicitly denying users the ability to add those tags to or remove them from the same resources. Otherwise, it's possible for a user to circumvent your restrictions and gain access to a resource by modifying its tags.\nGrant permissions to users, groups, and roles\nTo provide access, add permissions to your users, groups, or roles:\nUsers and groups in AWS IAM Identity Center:\nCreate a permission set. Follow the instructions in Create a permission set in the AWS IAM Identity Center User Guide.\nUsers managed in IAM through an identity provider:\nCreate a role for identity federation. Follow the instructions in Create a role for a third-party identity provider (federation) in the IAM User Guide.\nIAM users:\nCreate a role that your user can assume. Follow the instructions in Create a role for an IAM user in the IAM User Guide.\n(Not recommended) Attach a policy directly to a user or add a user to a user group. Follow the instructions in Adding permissions to a user (console) in the IAM User Guide.\nCheck that users have the required permissions\nAfter you've created an IAM policy, we recommend that you check whether it grants users the permissions to use the particular API actions and resources they need before you put the policy into production.\nFirst, create a user for testing purposes, and then attach the IAM policy that you created to the test user. Then, make a request as the test user.\nIf the Amazon EC2 action that you are testing creates or modifies a resource, you should make the request using the DryRun parameter (or run the AWS CLI command with the --dry-run option). In this case, the call completes the authorization check, but does not complete the operation. For example, you can check whether the user can terminate a particular instance without actually terminating it. If the test user has the required permissions, the request returns DryRunOperation; otherwise, it returns UnauthorizedOperation.\nIf the policy doesn't grant the user the permissions that you expected, or is overly permissive, you can adjust the policy as needed and retest until you get the desired results.\nImportant\nIt can take several minutes for policy changes to propagate before they take effect. Therefore, we recommend that you allow five minutes to pass before you test your policy updates.\nIf an authorization check fails, the request returns an encoded message with diagnostic information. You can decode the message using the DecodeAuthorizationMessage action. For more information, see DecodeAuthorizationMessage in the AWS Security Token Service API Reference, and decode-authorization-message."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ExamplePolicies_EC2.html",
        "content": "You can use IAM policies to grant users the permissions required to work with Amazon EC2. For step-by-step directions, see Creating IAM policies in the IAM User Guide.\nThe following examples show policy statements that you could use to grant users permissions to use Amazon EC2. These policies are designed for requests that are made using the AWS CLI or an AWS SDK. In the following examples, replace each user input placeholder with your own information.\nExamples\nRead-only access\nRestrict access to a specific Region\nWork with instances\nLaunch instances (RunInstances)\nWork with Spot Instances\nWork with Reserved Instances\nTag resources\nWork with IAM roles\nWork with route tables\nAllow a specific instance to view resources in other AWS services\nWork with launch templates\nWork with instance metadata\nWork with Amazon EBS volumes and snapshots\nFor example policies for working in the Amazon EC2 console, see Example policies to control access to the Amazon EC2 console.\nExample: Read-only access\nThe following policy grants users permissions to use all Amazon EC2 API actions whose names begin with Describe. The Resource element uses a wildcard to indicate that users can specify all resources with these API actions. The * wildcard is also necessary in cases where the API action does not support resource-level permissions. For more information about which ARNs you can use with which Amazon EC2 API actions, see Actions, resources, and condition keys for Amazon EC2.\nUsers don't have permission to perform any actions on the resources (unless another statement grants them permission to do so) because they're denied permission to use API actions by default.\n{\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:Describe*\",\n      \"Resource\": \"*\"\n    }\n   ]\n}\nExample: Restrict access to a specific Region\nThe following policy denies users permission to use all Amazon EC2 API actions unless the Region is Europe (Frankfurt). It uses the global condition key aws:RequestedRegion, which is supported by all Amazon EC2 API actions.\n{\n  \"Version\":\"2012-10-17\",\n  \"Statement\": [\n       {\n      \"Effect\": \"Deny\",\n      \"Action\": \"ec2:*\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringNotEquals\": {\n          \"aws:RequestedRegion\": \"eu-central-1\"\n        }\n      }\n    }  \n  ]\n}\nAlternatively, you can use the condition key ec2:Region, which is specific to Amazon EC2 and is supported by all Amazon EC2 API actions.\n{\n  \"Version\":\"2012-10-17\",\n  \"Statement\": [\n       {\n      \"Effect\": \"Deny\",\n      \"Action\": \"ec2:*\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringNotEquals\": {\n          \"ec2:Region\": \"eu-central-1\"\n        }\n      }\n    }  \n  ]\n}\nWork with instances\nExamples\nExample: Describe, launch, stop, start, and terminate all instances\nExample: Describe all instances, and stop, start, and terminate only particular instances\nExample: Describe, launch, stop, start, and terminate all instances\nThe following policy grants users permissions to use the API actions specified in the Action element. The Resource element uses a * wildcard to indicate that users can specify all resources with these API actions. The * wildcard is also necessary in cases where the API action does not support resource-level permissions. For more information about which ARNs you can use with which Amazon EC2 API actions, see Actions, resources, and condition keys for Amazon EC2.\nThe users don't have permission to use any other API actions (unless another statement grants them permission to do so) because users are denied permission to use API actions by default.\n{\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeInstances\", \n        \"ec2:DescribeImages\",\n        \"ec2:DescribeKeyPairs\", \n        \"ec2:DescribeSecurityGroups\",\n        \"ec2:DescribeAvailabilityZones\",\n        \"ec2:RunInstances\", \n        \"ec2:TerminateInstances\",\n        \"ec2:StopInstances\", \n        \"ec2:StartInstances\"\n      ],\n      \"Resource\": \"*\"\n    }\n   ]\n}\nExample: Describe all instances, and stop, start, and terminate only particular instances\nThe following policy allows users to describe all instances, to start and stop only instances i-1234567890abcdef0 and i-0598c7d356eba48d7, and to terminate only instances in the US East (N. Virginia) Region (us-east-1) with the resource tag \"purpose=test\".\nThe first statement uses a * wildcard for the Resource element to indicate that users can specify all resources with the action; in this case, they can list all instances. The * wildcard is also necessary in cases where the API action does not support resource-level permissions (in this case, ec2:DescribeInstances). For more information about which ARNs you can use with which Amazon EC2 API actions, see Actions, resources, and condition keys for Amazon EC2.\nThe second statement uses resource-level permissions for the StopInstances and StartInstances actions. The specific instances are indicated by their ARNs in the Resource element.\nThe third statement allows users to terminate all instances in the US East (N. Virginia) Region (us-east-1) that belong to the specified AWS account, but only where the instance has the tag \"purpose=test\". The Condition element qualifies when the policy statement is in effect.\n{\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [\n   {\n   \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DescribeInstances\",\n      \"Resource\": \"*\"\n   },\n   {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:StopInstances\", \n        \"ec2:StartInstances\"\n      ],\n      \"Resource\": [\n        \"arn:aws:ec2:us-east-1:account-id:instance/i-1234567890abcdef0\",\n        \"arn:aws:ec2:us-east-1:account-id:instance/i-0598c7d356eba48d7\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:TerminateInstances\",\n      \"Resource\": \"arn:aws:ec2:us-east-1:account-id:instance/*\",\n      \"Condition\": {\n         \"StringEquals\": {\n            \"aws:ResourceTag/purpose\": \"test\"\n         }\n      }\n   }\n\n   ]\n}\nLaunch instances (RunInstances)\nThe RunInstances API action launches one or more On-Demand Instances or one or more Spot Instances. RunInstances requires an AMI and creates an instance. Users can specify a key pair and security group in the request. Launching into a VPC requires a subnet, and creates a network interface. Launching from an Amazon EBS-backed AMI creates a volume. Therefore, the user must have permissions to use these Amazon EC2 resources. You can create a policy statement that requires users to specify an optional parameter on RunInstances, or restricts users to particular values for a parameter.\nFor more information about the resource-level permissions that are required to launch an instance, see Actions, resources, and condition keys for Amazon EC2.\nBy default, users don't have permissions to describe, start, stop, or terminate the resulting instances. One way to grant the users permission to manage the resulting instances is to create a specific tag for each instance, and then create a statement that enables them to manage instances with that tag. For more information, see Work with instances.\nResources\nAMIs\nInstance types\nSubnets\nEBS volumes\nTags\nTags in a launch template\nElastic GPUs\nLaunch templates\nAMIs\nThe following policy allows users to launch instances using only the specified AMIs, ami-9e1670f7 and ami-45cf5c3c. The users can't launch an instance using other AMIs (unless another statement grants the users permission to do so).\n{\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [\n   {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": [\n        \"arn:aws:ec2:region::image/ami-9e1670f7\",\n        \"arn:aws:ec2:region::image/ami-45cf5c3c\",\n        \"arn:aws:ec2:region:account-id:instance/*\",\n        \"arn:aws:ec2:region:account-id:volume/*\",\n        \"arn:aws:ec2:region:account-id:key-pair/*\",\n        \"arn:aws:ec2:region:account-id:security-group/*\",\n        \"arn:aws:ec2:region:account-id:subnet/*\",\n        \"arn:aws:ec2:region:account-id:network-interface/*\"\n      ]\n    }\n   ]\n}\nAlternatively, the following policy allows users to launch instances from all AMIs owned by Amazon, or certain trusted and verified partners. The Condition element of the first statement tests whether ec2:Owner is amazon. The users can't launch an instance using other AMIs (unless another statement grants the users permission to do so).\n{\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [\n         {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": [ \n         \"arn:aws:ec2:region::image/ami-*\"\n      ],\n      \"Condition\": {\n         \"StringEquals\": {\n            \"ec2:Owner\": \"amazon\"\n         }\n      }\n   },\n   {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": [ \n         \"arn:aws:ec2:region:account-id:instance/*\",\n         \"arn:aws:ec2:region:account-id:subnet/*\",\n         \"arn:aws:ec2:region:account-id:volume/*\",\n         \"arn:aws:ec2:region:account-id:network-interface/*\",\n         \"arn:aws:ec2:region:account-id:key-pair/*\",\n         \"arn:aws:ec2:region:account-id:security-group/*\"\n         ]\n      }\n   ]\n}\nInstance types\nThe following policy allows users to launch instances using only the t2.micro or t2.small instance type, which you might do to control costs. The users can't launch larger instances because the Condition element of the first statement tests whether ec2:InstanceType is either t2.micro or t2.small.\n{\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [\n        {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": [\n         \"arn:aws:ec2:region:account-id:instance/*\"\n      ],\n      \"Condition\": {\n         \"StringEquals\": {\n            \"ec2:InstanceType\": [\"t2.micro\", \"t2.small\"]\n         }\n      }\n   },\n   {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": [\n         \"arn:aws:ec2:region::image/ami-*\",\n         \"arn:aws:ec2:region:account-id:subnet/*\",\n         \"arn:aws:ec2:region:account-id:network-interface/*\",\n         \"arn:aws:ec2:region:account-id:volume/*\",\n         \"arn:aws:ec2:region:account-id:key-pair/*\",\n         \"arn:aws:ec2:region:account-id:security-group/*\"\n         ]\n      }\n   ]\n}\nAlternatively, you can create a policy that denies users permissions to launch any instances except t2.micro and t2.small instance types.\n{\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [\n        { \n      \"Effect\": \"Deny\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": [\n         \"arn:aws:ec2:region:account-id:instance/*\"\n      ],\n      \"Condition\": {\n         \"StringNotEquals\": {\n            \"ec2:InstanceType\": [\"t2.micro\", \"t2.small\"]\n         }\n      }\n   },\n   {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": [\n         \"arn:aws:ec2:region::image/ami-*\",\n         \"arn:aws:ec2:region:account-id:network-interface/*\",\n         \"arn:aws:ec2:region:account-id:instance/*\",\n         \"arn:aws:ec2:region:account-id:subnet/*\",\n         \"arn:aws:ec2:region:account-id:volume/*\",\n         \"arn:aws:ec2:region:account-id:key-pair/*\",\n         \"arn:aws:ec2:region:account-id:security-group/*\"\n         ]\n      }\n   ]\n}\nSubnets\nThe following policy allows users to launch instances using only the specified subnet, subnet-12345678. The group can't launch instances into any another subnet (unless another statement grants the users permission to do so).\n{\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": [\n        \"arn:aws:ec2:region:account-id:subnet/subnet-12345678\",\n        \"arn:aws:ec2:region:account-id:network-interface/*\",\n        \"arn:aws:ec2:region:account-id:instance/*\",\n        \"arn:aws:ec2:region:account-id:volume/*\",\n        \"arn:aws:ec2:region::image/ami-*\",\n        \"arn:aws:ec2:region:account-id:key-pair/*\",\n        \"arn:aws:ec2:region:account-id:security-group/*\"\n      ]\n    }\n   ]\n}\nAlternatively, you could create a policy that denies users permissions to launch an instance into any other subnet. The statement does this by denying permission to create a network interface, except where subnet subnet-12345678 is specified. This denial overrides any other policies that are created to allow launching instances into other subnets.\n{\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [\n         {\n      \"Effect\": \"Deny\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": [\n         \"arn:aws:ec2:region:account-id:network-interface/*\"\n      ],\n      \"Condition\": {\n         \"ArnNotEquals\": {\n            \"ec2:Subnet\": \"arn:aws:ec2:region:account-id:subnet/subnet-12345678\"\n         }\n      }\n   },\n   {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": [\n         \"arn:aws:ec2:region::image/ami-*\",\n         \"arn:aws:ec2:region:account-id:network-interface/*\",\n         \"arn:aws:ec2:region:account-id:instance/*\",\n         \"arn:aws:ec2:region:account-id:subnet/*\",\n         \"arn:aws:ec2:region:account-id:volume/*\",\n         \"arn:aws:ec2:region:account-id:key-pair/*\",\n         \"arn:aws:ec2:region:account-id:security-group/*\"\n         ]\n      }\n   ]\n}\nEBS volumes\nThe following policy allows users to launch instances only if the EBS volumes for the instance are encrypted. The user must launch an instance from an AMI that was created with encrypted snapshots, to ensure that the root volume is encrypted. Any additional volume that the user attaches to the instance during launch must also be encrypted.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n                {\n            \"Effect\": \"Allow\",\n            \"Action\": \"ec2:RunInstances\",\n            \"Resource\": [\n                \"arn:aws:ec2:*:*:volume/*\"\n            ],\n            \"Condition\": {\n                \"Bool\": {\n                    \"ec2:Encrypted\": \"true\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"ec2:RunInstances\",\n            \"Resource\": [\n                \"arn:aws:ec2:*::image/ami-*\",\n                \"arn:aws:ec2:*:*:network-interface/*\",\n                \"arn:aws:ec2:*:*:instance/*\",\n                \"arn:aws:ec2:*:*:subnet/*\",\n                \"arn:aws:ec2:*:*:key-pair/*\",\n                \"arn:aws:ec2:*:*:security-group/*\"\n            ]\n        }\n    ]\n}\nTags\nTag instances on creation\nThe following policy allows users to launch instances and tag the instances during creation. For resource-creating actions that apply tags, users must have permissions to use the CreateTags action. The second statement uses the ec2:CreateAction condition key to allow users to create tags only in the context of RunInstances, and only for instances. Users cannot tag existing resources, and users cannot tag volumes using the RunInstances request.\nFor more information, see Grant permission to tag Amazon EC2 resources during creation.\n{\n  \"Version\": \"2012-10-17\", \n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n         \"ec2:RunInstances\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n         \"ec2:CreateTags\"\n      ],\n      \"Resource\": \"arn:aws:ec2:us-east-1:account-id:instance/*\",\n      \"Condition\": {\n         \"StringEquals\": {\n             \"ec2:CreateAction\" : \"RunInstances\"\n          }\n       }\n    }\n  ]\n}\nTag instances and volumes on creation with specific tags\nThe following policy includes the aws:RequestTag condition key that requires users to tag any instances and volumes that are created by RunInstances with the tags environment=production and purpose=webserver. If users don't pass these specific tags, or if they don't specify tags at all, the request fails.\n{\n  \"Version\": \"2012-10-17\", \n  \"Statement\": [\n   {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n         \"ec2:RunInstances\"\n      ],\n      \"Resource\": [\n         \"arn:aws:ec2:region::image/*\",\n         \"arn:aws:ec2:region:account-id:subnet/*\",\n         \"arn:aws:ec2:region:account-id:network-interface/*\",\n         \"arn:aws:ec2:region:account-id:security-group/*\",\n         \"arn:aws:ec2:region:account-id:key-pair/*\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n         \"ec2:RunInstances\"\n      ],\n      \"Resource\": [\n          \"arn:aws:ec2:region:account-id:volume/*\",\n          \"arn:aws:ec2:region:account-id:instance/*\"\n      ],\n      \"Condition\": {\n         \"StringEquals\": {\n             \"aws:RequestTag/environment\": \"production\" ,\n             \"aws:RequestTag/purpose\": \"webserver\"\n          }\n       }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n         \"ec2:CreateTags\"\n      ],\n      \"Resource\": \"arn:aws:ec2:region:account-id:*/*\",\n      \"Condition\": {\n         \"StringEquals\": {\n             \"ec2:CreateAction\" : \"RunInstances\"\n          }\n       }\n    }\n  ]\n}\nTag instances and volumes on creation with at least one specific tag\nThe following policy uses the ForAnyValue modifier on the aws:TagKeys condition to indicate that at least one tag must be specified in the request, and it must contain the key environment or webserver. The tag must be applied to both instances and volumes. Any tag values can be specified in the request.\n{\n  \"Version\": \"2012-10-17\", \n  \"Statement\": [\n   {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n         \"ec2:RunInstances\"\n      ],\n      \"Resource\": [\n         \"arn:aws:ec2:region::image/*\",\n         \"arn:aws:ec2:region:account-id:subnet/*\",\n         \"arn:aws:ec2:region:account-id:network-interface/*\",\n         \"arn:aws:ec2:region:account-id:security-group/*\",\n         \"arn:aws:ec2:region:account-id:key-pair/*\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n          \"ec2:RunInstances\"\n      ],\n      \"Resource\": [\n          \"arn:aws:ec2:region:account-id:volume/*\",\n          \"arn:aws:ec2:region:account-id:instance/*\"\n      ],\n      \"Condition\": {\n          \"ForAnyValue:StringEquals\": {\n              \"aws:TagKeys\": [\"environment\",\"webserver\"]\n          }\n       }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n          \"ec2:CreateTags\"\n      ],\n      \"Resource\": \"arn:aws:ec2:region:account-id:*/*\",\n      \"Condition\": {\n          \"StringEquals\": {\n              \"ec2:CreateAction\" : \"RunInstances\"\n          }\n       }\n    }\n  ]\n}\nIf instances are tagged on creation, they must be tagged with a specific tag\nIn the following policy, users do not have to specify tags in the request, but if they do, the tag must be purpose=test. No other tags are allowed. Users can apply the tags to any taggable resource in the RunInstances request.\n{\n  \"Version\": \"2012-10-17\", \n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n         \"ec2:RunInstances\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n         \"ec2:CreateTags\"\n      ],\n      \"Resource\": \"arn:aws:ec2:region:account-id:*/*\",\n      \"Condition\": {\n         \"StringEquals\": {\n             \"aws:RequestTag/purpose\": \"test\",\n             \"ec2:CreateAction\" : \"RunInstances\"\n          },\n          \"ForAllValues:StringEquals\": {\n              \"aws:TagKeys\": \"purpose\"\n          }\n       }\n    }\n  ]\n}\nTo disallow anyone called tag on create for RunInstances\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowRun\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:RunInstances\"\n            ],\n            \"Resource\": [\n                \"arn:aws:ec2:us-east-1::image/*\",\n                \"arn:aws:ec2:us-east-1:*:subnet/*\",\n                \"arn:aws:ec2:us-east-1:*:network-interface/*\",\n                \"arn:aws:ec2:us-east-1:*:security-group/*\",\n                \"arn:aws:ec2:us-east-1:*:key-pair/*\",\n                \"arn:aws:ec2:us-east-1:*:volume/*\",\n                \"arn:aws:ec2:us-east-1:*:instance/*\",\n                \"arn:aws:ec2:us-east-1:*:spot-instances-request/*\"\n            ]\n        },\n        {\n            \"Sid\": \"VisualEditor0\",\n            \"Effect\": \"Deny\",\n            \"Action\": \"ec2:CreateTags\",\n            \"Resource\": \"*\"\n        }\n    ]\n}\nOnly allow specific tags for spot-instances-request. Surprise inconsistency number 2 comes into play here. Under normal circumstances, specifying no tags will result in Unauthenticated. In the case of spot-instances-request, this policy will not be evaluated if there are no spot-instances-request tags, so a non-tag Spot on Run request will succeed.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowRun\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:RunInstances\"\n            ],\n            \"Resource\": [\n                \"arn:aws:ec2:us-east-1::image/*\",\n                \"arn:aws:ec2:us-east-1:*:subnet/*\",\n                \"arn:aws:ec2:us-east-1:*:network-interface/*\",\n                \"arn:aws:ec2:us-east-1:*:security-group/*\",\n                \"arn:aws:ec2:us-east-1:*:key-pair/*\",\n                \"arn:aws:ec2:us-east-1:*:volume/*\",\n                \"arn:aws:ec2:us-east-1:*:instance/*\",\n            ]\n        },\n        {\n            \"Sid\": \"VisualEditor0\",\n            \"Effect\": \"Allow\",\n            \"Action\": \"ec2:RunInstances\",\n            \"Resource\": \"arn:aws:ec2:us-east-1:*:spot-instances-request/*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"aws:RequestTag/environment\": \"production\"\n                }\n            }\n        }\n    ]\n}\nTags in a launch template\nIn the following example, users can launch instances, but only if they use a specific launch template (lt-09477bcd97b0d310e). The ec2:IsLaunchTemplateResource condition key prevents users from overriding any of the resources specified in the launch template. The second part of the statement allows users to tag instances on creation\u2014this part of the statement is necessary if tags are specified for the instance in the launch template.\n{\n  \"Version\": \"2012-10-17\", \n  \"Statement\": [\n   {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n         \"ArnLike\": {\n             \"ec2:LaunchTemplate\": \"arn:aws:ec2:region:account-id:launch-template/lt-09477bcd97b0d310e\" \n          },\n          \"Bool\": {\n             \"ec2:IsLaunchTemplateResource\": \"true\"\n          }\n       }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n         \"ec2:CreateTags\"\n      ],\n      \"Resource\": \"arn:aws:ec2:region:account-id:instance/*\",\n      \"Condition\": {\n         \"StringEquals\": {\n             \"ec2:CreateAction\" : \"RunInstances\"\n          }\n       }\n    }\n  ]\n}\nElastic GPUs\nIn the following policy, users can launch an instance and specify an elastic GPU to attach to the instance. Users can launch instances in any Region, but they can only attach an elastic GPU during a launch in the us-east-2 Region.\nThe ec2:ElasticGpuType condition key ensures that instances use either the eg1.medium or eg1.large elastic GPU type.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n             {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:RunInstances\"\n            ],\n            \"Resource\": [\n                \"arn:aws:ec2:*:account-id:elastic-gpu/*\"\n            ],\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"ec2:Region\": \"us-east-2\",\n                    \"ec2:ElasticGpuType\": [\n                        \"eg1.medium\",\n                        \"eg1.large\"\n                    ]\n                }  \n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"ec2:RunInstances\",\n            \"Resource\": [\n                \"arn:aws:ec2:*::image/ami-*\",\n                \"arn:aws:ec2:*:account-id:network-interface/*\",\n                \"arn:aws:ec2:*:account-id:instance/*\",\n                \"arn:aws:ec2:*:account-id:subnet/*\",\n                \"arn:aws:ec2:*:account-id:volume/*\",\n                \"arn:aws:ec2:*:account-id:key-pair/*\",\n                \"arn:aws:ec2:*:account-id:security-group/*\"\n            ]\n        }\n    ]\n}\nLaunch templates\nIn the following example, users can launch instances, but only if they use a specific launch template (lt-09477bcd97b0d310e). Users can override any parameters in the launch template by specifying the parameters in the RunInstances action.\n{\n  \"Version\": \"2012-10-17\", \n  \"Statement\": [\n         {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n         \"ArnLike\": {\n             \"ec2:LaunchTemplate\": \"arn:aws:ec2:region:account-id:launch-template/lt-09477bcd97b0d310e\" \n          }\n       }\n    }\n  ]\n}\nIn this example, users can launch instances only if they use a launch template. The policy uses the ec2:IsLaunchTemplateResource condition key to prevent users from overriding any pre-existing ARNs in the launch template.\n{\n  \"Version\": \"2012-10-17\", \n  \"Statement\": [\n         {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n         \"ArnLike\": {\n             \"ec2:LaunchTemplate\": \"arn:aws:ec2:region:account-id:launch-template/*\" \n          },\n          \"Bool\": {\n             \"ec2:IsLaunchTemplateResource\": \"true\"\n          }\n       }\n    }\n  ]\n}\nThe following example policy allows user to launch instances, but only if they use a launch template. Users cannot override the subnet and network interface parameters in the request; these parameters can only be specified in the launch template. The first part of the statement uses the NotResource element to allow all other resources except subnets and network interfaces. The second part of the statement allows the subnet and network interface resources, but only if they are sourced from the launch template.\n{\n  \"Version\": \"2012-10-17\", \n  \"Statement\": [\n        {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:RunInstances\",\n      \"NotResource\": [\"arn:aws:ec2:region:account-id:subnet/*\",\n                      \"arn:aws:ec2:region:account-id:network-interface/*\" ],\n      \"Condition\": {\n         \"ArnLike\": {\n             \"ec2:LaunchTemplate\": \"arn:aws:ec2:region:account-id:launch-template/*\" \n          }\n       }\n    },\n   {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": [\"arn:aws:ec2:region:account-id:subnet/*\",\n                   \"arn:aws:ec2:region:account-id:network-interface/*\" ],\n      \"Condition\": {\n         \"ArnLike\": {\n             \"ec2:LaunchTemplate\": \"arn:aws:ec2:region:account-id:launch-template/*\" \n          },\n          \"Bool\": {\n             \"ec2:IsLaunchTemplateResource\": \"true\"\n          }\n       }\n    }\n  ]\n}\nThe following example allows users to launch instances only if they use a launch template, and only if the launch template has the tag Purpose=Webservers. Users cannot override any of the launch template parameters in the RunInstances action.\n{\n  \"Version\": \"2012-10-17\", \n  \"Statement\": [\n        {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:RunInstances\",\n      \"NotResource\": \"arn:aws:ec2:region:account-id:launch-template/*\",\n      \"Condition\": {\n         \"ArnLike\": {\n             \"ec2:LaunchTemplate\": \"arn:aws:ec2:region:account-id:launch-template/*\" \n          },\n         \"Bool\": {\n             \"ec2:IsLaunchTemplateResource\": \"true\"\n          }\n       }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": \"arn:aws:ec2:region:account-id:launch-template/*\",\n      \"Condition\": {\n       \"StringEquals\": {\n           \"aws:ResourceTag/Purpose\": \"Webservers\" \n        }\n       }\n     }\n  ]\n}\nWork with Spot Instances\nYou can use the RunInstances action to create Spot Instance requests, and tag the Spot Instance requests on create. The resource to specify for RunInstances is spot-instances-request.\nThe spot-instances-request resource is evaluated in the IAM policy as follows:\nIf you don't tag a Spot Instance request on create, Amazon EC2 does not evaluate the spot-instances-request resource in the RunInstances statement.\nIf you tag a Spot Instance request on create, Amazon EC2 evaluates the spot-instances-request resource in the RunInstances statement.\nTherefore, for the spot-instances-request resource, the following rules apply to the IAM policy:\nIf you use RunInstances to create a Spot Instance request and you don't intend to tag the Spot Instance request on create, you don\u2019t need to explicitly allow the spot-instances-request resource; the call will succeed.\nIf you use RunInstances to create a Spot Instance request and intend to tag the Spot Instance request on create, you must include the spot-instances-request resource in the RunInstances allow statement, otherwise the call will fail.\nIf you use RunInstances to create a Spot Instance request and intend to tag the Spot Instance request on create, you must specify the spot-instances-request resource or * wildcard in the CreateTags allow statement, otherwise the call will fail.\nYou can request Spot Instances using RunInstances or RequestSpotInstances. The following example IAM policies apply only when requesting Spot Instances using RunInstances.\nExample: Request Spot Instances using RunInstances\nThe following policy allows users to request Spot Instances by using the RunInstances action. The spot-instances-request resource, which is created by RunInstances, requests Spot Instances.\nNote\nTo use RunInstances to create Spot Instance requests, you can omit spot-instances-request from the Resource list if you do not intend to tag the Spot Instance requests on create. This is because Amazon EC2 does not evaluate the spot-instances-request resource in the RunInstances statement if the Spot Instance request is not tagged on create.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowRun\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:RunInstances\"\n            ],\n            \"Resource\": [\n                \"arn:aws:ec2:us-east-1::image/*\",\n                \"arn:aws:ec2:us-east-1:*:subnet/*\",\n                \"arn:aws:ec2:us-east-1:*:network-interface/*\",\n                \"arn:aws:ec2:us-east-1:*:security-group/*\",\n                \"arn:aws:ec2:us-east-1:*:key-pair/*\",\n                \"arn:aws:ec2:us-east-1:*:volume/*\",\n                \"arn:aws:ec2:us-east-1:*:instance/*\",\n                \"arn:aws:ec2:us-east-1:*:spot-instances-request/*\"\n            ]\n        }\n    ]\n}\nWarning\nNOT SUPPORTED \u2013 Example: Deny users permission to request Spot Instances using RunInstances\nThe following policy is not supported for the spot-instances-request resource.\nThe following policy is meant to give users the permission to launch On-Demand Instances, but deny users the permission to request Spot Instances. The spot-instances-request resource, which is created by RunInstances, is the resource that requests Spot Instances. The second statement is meant to deny the RunInstances action for the spot-instances-request resource. However, this condition is not supported because Amazon EC2 does not evaluate the spot-instances-request resource in the RunInstances statement if the Spot Instance request is not tagged on create.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowRun\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:RunInstances\"\n            ],\n            \"Resource\": [\n                \"arn:aws:ec2:us-east-1::image/*\",\n                \"arn:aws:ec2:us-east-1:*:subnet/*\",\n                \"arn:aws:ec2:us-east-1:*:network-interface/*\",\n                \"arn:aws:ec2:us-east-1:*:security-group/*\",\n                \"arn:aws:ec2:us-east-1:*:key-pair/*\",\n                \"arn:aws:ec2:us-east-1:*:volume/*\",\n                \"arn:aws:ec2:us-east-1:*:instance/*\"\n            ]\n        },\n        {\n            \"Sid\": \"DenySpotInstancesRequests - NOT SUPPORTED - DO NOT USE!\",\n            \"Effect\": \"Deny\",\n            \"Action\": \"ec2:RunInstances\",\n            \"Resource\": \"arn:aws:ec2:us-east-1:*:spot-instances-request/*\"\n        }\n    ]\n}\nExample: Tag Spot Instance requests on create\nThe following policy allows users to tag all resources that are created during instance launch. The first statement allows RunInstances to create the listed resources. The spot-instances-request resource, which is created by RunInstances, is the resource that requests Spot Instances. The second statement provides a * wildcard to allow all resources to be tagged when they are created at instance launch.\nNote\nIf you tag a Spot Instance request on create, Amazon EC2 evaluates the spot-instances-request resource in the RunInstances statement. Therefore, you must explicitly allow the spot-instances-request resource for the RunInstances action, otherwise the call will fail.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowRun\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:RunInstances\"\n            ],\n            \"Resource\": [\n                \"arn:aws:ec2:us-east-1::image/*\",\n                \"arn:aws:ec2:us-east-1:*:subnet/*\",\n                \"arn:aws:ec2:us-east-1:*:network-interface/*\",\n                \"arn:aws:ec2:us-east-1:*:security-group/*\",\n                \"arn:aws:ec2:us-east-1:*:key-pair/*\",\n                \"arn:aws:ec2:us-east-1:*:volume/*\",\n                \"arn:aws:ec2:us-east-1:*:instance/*\",\n                \"arn:aws:ec2:us-east-1:*:spot-instances-request/*\"\n            ]\n        },\n        {\n            \"Sid\": \"TagResources\",\n            \"Effect\": \"Allow\",\n            \"Action\": \"ec2:CreateTags\",\n            \"Resource\": \"*\"\n        }\n    ]\n}\nExample: Deny tag on create for Spot Instance requests\nThe following policy denies users the permission to tag the resources that are created during instance launch.\nThe first statement allows RunInstances to create the listed resources. The spot-instances-request resource, which is created by RunInstances, is the resource that requests Spot Instances. The second statement provides a * wildcard to deny all resources being tagged when they are created at instance launch. If spot-instances-request or any other resource is tagged on create, the RunInstances call will fail.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowRun\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:RunInstances\"\n            ],\n            \"Resource\": [\n                \"arn:aws:ec2:us-east-1::image/*\",\n                \"arn:aws:ec2:us-east-1:*:subnet/*\",\n                \"arn:aws:ec2:us-east-1:*:network-interface/*\",\n                \"arn:aws:ec2:us-east-1:*:security-group/*\",\n                \"arn:aws:ec2:us-east-1:*:key-pair/*\",\n                \"arn:aws:ec2:us-east-1:*:volume/*\",\n                \"arn:aws:ec2:us-east-1:*:instance/*\",\n                \"arn:aws:ec2:us-east-1:*:spot-instances-request/*\"\n            ]\n        },\n        {\n            \"Sid\": \"DenyTagResources\",\n            \"Effect\": \"Deny\",\n            \"Action\": \"ec2:CreateTags\",\n            \"Resource\": \"*\"\n        }\n    ]\n}\nWarning\nNOT SUPPORTED \u2013 Example: Allow creating a Spot Instance request only if it is assigned a specific tag\nThe following policy is not supported for the spot-instances-request resource.\nThe following policy is meant to grant RunInstances the permission to create a Spot Instance request only if the request is tagged with a specific tag.\nThe first statement allows RunInstances to create the listed resources.\nThe second statement is meant to grant users the permission to create a Spot Instance request only if the request has the tag environment=production. If this condition is applied to other resources created by RunInstances, specifying no tags results in an Unauthenticated error. However, if no tags are specified for the Spot Instance request, Amazon EC2 does not evaluate the spot-instances-request resource in the RunInstances statement, which results in non-tagged Spot Instance requests being created by RunInstances.\nNote that specifying another tag other than environment=production results in an Unauthenticated error, because if a user tags a Spot Instance request, Amazon EC2 evaluates the spot-instances-request resource in the RunInstances statement.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowRun\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:RunInstances\"\n            ],\n            \"Resource\": [\n                \"arn:aws:ec2:us-east-1::image/*\",\n                \"arn:aws:ec2:us-east-1:*:subnet/*\",\n                \"arn:aws:ec2:us-east-1:*:network-interface/*\",\n                \"arn:aws:ec2:us-east-1:*:security-group/*\",\n                \"arn:aws:ec2:us-east-1:*:key-pair/*\",\n                \"arn:aws:ec2:us-east-1:*:volume/*\",\n                \"arn:aws:ec2:us-east-1:*:instance/*\"\n            ]\n        },\n        {\n            \"Sid\": \"RequestSpotInstancesOnlyIfTagIs_environment=production - NOT SUPPORTED - DO NOT USE!\",\n            \"Effect\": \"Allow\",\n            \"Action\": \"ec2:RunInstances\",\n            \"Resource\": \"arn:aws:ec2:us-east-1:*:spot-instances-request/*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"aws:RequestTag/environment\": \"production\"\n                }\n            }\n        },\n        {\n            \"Sid\": \"TagResources\",\n            \"Effect\": \"Allow\",\n            \"Action\": \"ec2:CreateTags\",\n            \"Resource\": \"*\"\n        }\n\n    ]\n}\nExample: Deny creating a Spot Instance request if it is assigned a specific tag\nThe following policy denies RunInstances the permission to create a Spot Instance request if the request is tagged with environment=production.\nThe first statement allows RunInstances to create the listed resources.\nThe second statement denies users the permission to create a Spot Instance request if the request has the tag environment=production. Specifying environment=production as a tag results in an Unauthenticated error. Specifying other tags or specifying no tags will result in the creation of a Spot Instance request.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowRun\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:RunInstances\"\n            ],\n            \"Resource\": [\n                \"arn:aws:ec2:us-east-1::image/*\",\n                \"arn:aws:ec2:us-east-1:*:subnet/*\",\n                \"arn:aws:ec2:us-east-1:*:network-interface/*\",\n                \"arn:aws:ec2:us-east-1:*:security-group/*\",\n                \"arn:aws:ec2:us-east-1:*:key-pair/*\",\n                \"arn:aws:ec2:us-east-1:*:volume/*\",\n                \"arn:aws:ec2:us-east-1:*:instance/*\",\n                \"arn:aws:ec2:us-east-1:*:spot-instances-request/*\"\n            ]\n        },\n        {\n            \"Sid\": \"DenySpotInstancesRequests\",\n            \"Effect\": \"Deny\",\n            \"Action\": \"ec2:RunInstances\",\n            \"Resource\": \"arn:aws:ec2:us-east-1:*:spot-instances-request/*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"aws:RequestTag/environment\": \"production\"\n                }\n            }\n        },\n        {\n            \"Sid\": \"TagResources\",\n            \"Effect\": \"Allow\",\n            \"Action\": \"ec2:CreateTags\",\n            \"Resource\": \"*\"\n        }\n    ]\n}\nExample: Work with Reserved Instances\nThe following policy gives users permission to view, modify, and purchase Reserved Instances in your account.\nIt is not possible to set resource-level permissions for individual Reserved Instances. This policy means that users have access to all the Reserved Instances in the account.\nThe Resource element uses a * wildcard to indicate that users can specify all resources with the action; in this case, they can list and modify all Reserved Instances in the account. They can also purchase Reserved Instances using the account credentials. The * wildcard is also necessary in cases where the API action does not support resource-level permissions.\n{\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeReservedInstances\", \n        \"ec2:ModifyReservedInstances\",\n        \"ec2:PurchaseReservedInstancesOffering\", \n        \"ec2:DescribeAvailabilityZones\",\n        \"ec2:DescribeReservedInstancesOfferings\"\n      ],\n      \"Resource\": \"*\"\n    }\n   ]\n}\nTo allow users to view and modify the Reserved Instances in your account, but not purchase new Reserved Instances.\n{\n  \"Version\": \"2012-10-17\",\n   \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeReservedInstances\", \n        \"ec2:ModifyReservedInstances\",\n        \"ec2:DescribeAvailabilityZones\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}\nExample: Tag resources\nThe following policy allows users to use the CreateTags action to apply tags to an instance only if the tag contains the keyenvironment and the value production. No other tags are allowed and the user cannot tag any other resource types.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n              {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateTags\"\n            ],\n            \"Resource\": \"arn:aws:ec2:region:account-id:instance/*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"aws:RequestTag/environment\": \"production\"\n                }\n            }\n        }\n    ]\n}\nThe following policy allows users to tag any taggable resource that already has a tag with a key of owner and a value of the username. In addition, users must specify a tag with a key of anycompany:environment-type and a value of either test or prod in the request. Users can specify additional tags in the request.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n               {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateTags\"\n            ],\n            \"Resource\": \"arn:aws:ec2:region:account-id:*/*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"aws:RequestTag/anycompany:environment-type\": [\"test\",\"prod\"],\n                    \"aws:ResourceTag/owner\": \"${aws:username}\"\n                } \n            }\n        }\n    ]\n}\nYou can create an IAM policy that allows users to delete specific tags for a resource. For example, the following policy allows users to delete tags for a volume if the tag keys specified in the request are environment or cost-center. Any value can be specified for the tag but the tag key must match either of the specified keys.\nNote\nIf you delete a resource, all tags associated with the resource are also deleted. Users do not need permissions to use the ec2:DeleteTags action to delete a resource that has tags; they only need permissions to perform the deleting action.\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n       {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DeleteTags\",\n      \"Resource\": \"arn:aws:ec2:us-east-1:account-id:volume/*\",\n      \"Condition\": {\n        \"ForAllValues:StringEquals\": {\n          \"aws:TagKeys\": [\"environment\",\"cost-center\"]\n        }\n      }\n    }\n  ]\n}\nThis policy allows users to delete only the environment=prod tag on any resource, and only if the resource is already tagged with a key of owner and a value of the username. Users can't delete any other tags for a resource.\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n      {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteTags\"\n      ],\n      \"Resource\": \"arn:aws:ec2:region:account-id:*/*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"aws:RequestTag/environment\": \"prod\",\n          \"aws:ResourceTag/owner\": \"${aws:username}\"\n        },\n        \"ForAllValues:StringEquals\": {\n          \"aws:TagKeys\": [\"environment\"]\n        }\n      }\n    }\n  ]\n}\nExample: Work with IAM roles\nThe following policy allows users to attach, replace, and detach an IAM role to instances that have the tag department=test. Replacing or detaching an IAM role requires an association ID, therefore the policy also grants users permission to use the ec2:DescribeIamInstanceProfileAssociations action.\nUsers must have permission to use the iam:PassRole action in order to pass the role to the instance.\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:AssociateIamInstanceProfile\",\n        \"ec2:ReplaceIamInstanceProfileAssociation\",\n        \"ec2:DisassociateIamInstanceProfile\"\n      ],\n      \"Resource\": \"arn:aws:ec2:us-east-1:account-id:instance/*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"aws:ResourceTag/department\":\"test\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DescribeIamInstanceProfileAssociations\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:PassRole\",\n      \"Resource\": \"arn:aws:iam::account-id:role/DevTeam*\"\n    }\n  ]\n}\nThe following policy allows users to attach or replace an IAM role for any instance. Users can only attach or replace IAM roles with names that begin with TestRole-. For the iam:PassRole action, ensure that you specify the name of the IAM role and not the instance profile (if the names are different). For more information, see Instance profiles.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:AssociateIamInstanceProfile\",\n                \"ec2:ReplaceIamInstanceProfileAssociation\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"ec2:DescribeIamInstanceProfileAssociations\",\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"iam:PassRole\",\n            \"Resource\": \"arn:aws:iam::account-id:role/TestRole-*\"\n        }\n    ]\n}\nExample: Work with route tables\nThe following policy allows users to add, remove, and replace routes for route tables that are associated with VPC vpc-ec43eb89 only. To specify a VPC for the ec2:Vpc condition key, you must specify the full ARN of the VPC.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n              {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:DeleteRoute\",\n                \"ec2:CreateRoute\",\n                \"ec2:ReplaceRoute\"\n            ],\n            \"Resource\": [\n                \"arn:aws:ec2:region:account-id:route-table/*\"\n            ],\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"ec2:Vpc\": \"arn:aws:ec2:region:account-id:vpc/vpc-ec43eb89\"\n                }\n            }\n        }\n    ]\n}\nExample: Allow a specific instance to view resources in other AWS services\nThe following is an example of a policy that you might attach to an IAM role. The policy allows an instance to view resources in various AWS services. It uses the ec2:SourceInstanceARN global condition key to specify that the instance from which the request is made must be instance i-093452212644b0dd6. If the same IAM role is associated with another instance, the other instance cannot perform any of these actions.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n              {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:DescribeVolumes\",\n                \"s3:ListAllMyBuckets\",\n                \"dynamodb:ListTables\",\n                \"rds:DescribeDBInstances\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ],\n            \"Condition\": {\n                \"ArnEquals\": {\n                    \"ec2:SourceInstanceARN\": \"arn:aws:ec2:region:account-id:instance/i-093452212644b0dd6\"\n                }\n            }\n        }\n    ]\n}\nExample: Work with launch templates\nThe following policy allows users to create a launch template version and modify a launch template, but only for a specific launch template (lt-09477bcd97b0d3abc). Users cannot work with other launch templates.\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n   {\n      \"Action\": [\n        \"ec2:CreateLaunchTemplateVersion\",\n        \"ec2:ModifyLaunchTemplate\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"arn:aws:ec2:region:account-id:launch-template/lt-09477bcd97b0d3abc\"\n    }\n  ]\n}\nThe following policy allows users to delete any launch template and launch template version, provided that the launch template has the tag Purpose=Testing.\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n       {\n      \"Action\": [\n        \"ec2:DeleteLaunchTemplate\",\n        \"ec2:DeleteLaunchTemplateVersions\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"arn:aws:ec2:region:account-id:launch-template/*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"aws:ResourceTag/Purpose\": \"Testing\"\n        }\n      }\n    }\n  ]\n}\nWork with instance metadata\nThe following policies ensure that users can only retrieve instance metadata using Instance Metadata Service Version 2 (IMDSv2). You can combine the following four policies into one policy with four statements. When combined as one policy, you can use the policy as a service control policy (SCP). It can work equally well as a deny policy that you apply to an existing IAM policy (taking away and limiting existing permission), or as an SCP that is applied globally across an account, an organizational unit (OU), or an entire organization.\nNote\nThe following RunInstances metadata options policies must be used in conjunction with a policy that gives the principal permissions to launch an instance with RunInstances. If the principal does not also have RunInstances permissions, it will not be able to launch an instance. For more information, see the policies in Work with instances and Launch instances (RunInstances).\nImportant\nIf you use Auto Scaling groups and you need to require the use of IMDSv2 on all new instances, your Auto Scaling groups must use launch templates.\nWhen an Auto Scaling group uses a launch template, the ec2:RunInstances permissions of the IAM principal are checked when a new Auto Scaling group is created. They are also checked when an existing Auto Scaling group is updated to use a new launch template or a new version of a launch template.\nRestrictions on the use of IMDSv1 on IAM principals for RunInstances are only checked when an Auto Scaling group that is using a launch template, is created or updated. For an Auto Scaling group that is configured to use the Latest or Default launch template, the permissions are not checked when a new version of the launch template is created. For permissions to be checked, you must configure the Auto Scaling group to use a specific version of the launch template.\nTo enforce the use of IMDSv2 on instances launched by Auto Scaling groups, the following additional steps are required:\nDisable the use of launch configurations for all accounts in your organization by using either service control policies (SCPs) or IAM permissions boundaries for new principals that are created. For existing IAM principals with Auto Scaling group permissions, update their associated policies with this condition key. To disable the use of launch configurations, create or modify the relevant SCP, permissions boundary, or IAM policy with the \"autoscaling:LaunchConfigurationName\" condition key with the value specified as null.\nFor new launch templates, configure the instance metadata options in the launch template. For existing launch templates, create a new version of the launch template and configure the instance metadata options in the new version.\nIn the policy that gives any principal the permission to use a launch template, restrict association of $latest and $default by specifying \"autoscaling:LaunchTemplateVersionSpecified\": \"true\". By restricting the use to a specific version of a launch template, you can ensure that new instances will be launched using the version in which the instance metadata options are configured. For more information, see LaunchTemplateSpecification in the Amazon EC2 Auto Scaling API Reference, specifically the Version parameter.\nFor an Auto Scaling group that uses a launch configuration, replace the launch configuration with a launch template. For more information, see Migrate your Auto Scaling groups to launch templates in the Amazon EC2 Auto Scaling User Guide.\nFor an Auto Scaling group that uses a launch template, make sure that it uses a new launch template with the instance metadata options configured, or uses a new version of the current launch template with the instance metadata options configured. For more information, see update-auto-scaling-group .\nExamples\nRequire the use of IMDSv2\nDeny opt-out of IMDSv2\nSpecify maximum hop limit\nLimit who can modify the instance metadata options\nRequire role credentials to be retrieved from IMDSv2\nRequire the use of IMDSv2\nThe following policy specifies that you can\u2019t call the RunInstances API unless the instance is also opted in to require the use of IMDSv2 (indicated by \"ec2:MetadataHttpTokens\": \"required\"). If you do not specify that the instance requires IMDSv2, you get an UnauthorizedOperation error when you call the RunInstances API.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n               {\n            \"Sid\": \"RequireImdsV2\",\n            \"Effect\": \"Deny\",\n            \"Action\": \"ec2:RunInstances\",\n            \"Resource\": \"arn:aws:ec2:*:*:instance/*\",\n            \"Condition\": {\n                \"StringNotEquals\": {\n                    \"ec2:MetadataHttpTokens\": \"required\"\n                }\n            }\n        }\n    ]\n}\nDeny opt-out of IMDSv2\nThe following policy specifies that you cannot call the ModifyInstanceMetadataOptions API and allow the option of IMDSv1 or IMDSv2. If you call the ModifyInstanceMetadataOptions API, the HttpTokens attribute must be set to required.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Sid\": \"DenyIMDSv1HttpTokensModification\",\n        \"Effect\": \"Deny\",\n        \"Action\": \"ec2:ModifyInstanceMetadataOptions\",\n        \"Resource\": \"arn:aws:ec2:*:*:instance/*\",\n        \"Condition\": {\n            \"StringNotEquals\": {\n                \"ec2:Attribute/HttpTokens\": \"required\"\n            },\n            \"Null\": {\n                \"ec2:Attribute/HttpTokens\": false\n            }\n        }\n    }]\n}\nSpecify maximum hop limit\nThe following policy specifies that you can\u2019t call the RunInstances API unless you also specify a hop limit, and the hop limit can\u2019t be more than 3. If you fail to do that, you get an UnauthorizedOperation error when you call the RunInstances API.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n               {\n            \"Sid\": \"MaxImdsHopLimit\",\n            \"Effect\": \"Deny\",\n            \"Action\": \"ec2:RunInstances\",\n            \"Resource\": \"arn:aws:ec2:*:*:instance/*\",\n            \"Condition\": {\n                \"NumericGreaterThan\": {\n                    \"ec2:MetadataHttpPutResponseHopLimit\": \"3\"\n                }\n            }\n        }\n    ]\n}\nLimit who can modify the instance metadata options\nThe following policy permits only users with the role ec2-imds-admins to make changes to the instance metadata options. If any principal other than the ec2-imds-admins role tries to call the ModifyInstanceMetadataOptions API, it will get an UnauthorizedOperation error. This statement could be used to control the use of the ModifyInstanceMetadataOptions API; there are currently no fine-grained access controls (conditions) for the ModifyInstanceMetadataOptions API.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n               {\n            \"Sid\": \"AllowOnlyImdsAdminsToModifySettings\",\n            \"Effect\": \"Deny\",\n            \"Action\": \"ec2:ModifyInstanceMetadataOptions\",\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"StringNotLike\": {\n                    \"aws:PrincipalARN\": \"arn:aws:iam::*:role/ec2-imds-admins\"\n                }\n            }\n        }\n    ]\n}\nRequire role credentials to be retrieved from IMDSv2\nThe following policy specifies that if this policy is applied to a role, and the role is assumed by the EC2 service and the resulting credentials are used to sign a request, then the request must be signed by EC2 role credentials retrieved from IMDSv2. Otherwise, all of its API calls will get an UnauthorizedOperation error. This statement/policy can be applied generally because, if the request is not signed by EC2 role credentials, it has no effect.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n               {\n            \"Sid\": \"RequireAllEc2RolesToUseV2\",\n            \"Effect\": \"Deny\",\n            \"Action\": \"*\",\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"NumericLessThan\": {\n                    \"ec2:RoleDelivery\": \"2.0\"\n                }\n            }\n        }\n    ]\n}\nWork with Amazon EBS volumes and snapshots\nFor example policies for working with Amazon EBS volumes and snapshots, see Identity-based policy examples for Amazon EBS."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-policies-ec2-console.html",
        "content": "You can use IAM policies to grant users the permissions required to work with Amazon EC2. For step-by-step directions, see Creating IAM policies in the IAM User Guide.\nThe console uses additional API actions for its features, so these policies may not work as expected. For example, a user that has permission to use only the DescribeVolumes API action will encounter errors when trying to view volumes in the console. This section demonstrates policies that enable users to work with specific parts of the console. For additional information about creating policies for the Amazon EC2 console, see the following AWS Security Blog post: Granting Users Permission to Work in the Amazon EC2 Console.\nThe following examples show policy statements that you could use to grant users permissions to use Amazon EC2. Replace each user input placeholder with your own information. These policies are designed for requests that are made using the AWS Management Console. The Amazon EC2 console might call multiple API actions to display a single resource, and it might not be obvious until the user attempts a task and the console displays an error. For more information, see the following AWS Security Blog post: Granting Users Permission to Work in the Amazon EC2 Console.\nExamples\nRead-only access\nUse the EC2 launch instance wizard\nWork with security groups\nWork with Elastic IP addresses\nWork with Reserved Instances\nTo help you work out which API actions are required to perform tasks in the console, you can use a service that logs calls, such as AWS CloudTrail. If your policy does not grant permission to create or modify a specific resource, the console displays an encoded message with diagnostic information. You can decode the message using the DecodeAuthorizationMessage API action for AWS STS, or the decode-authorization-message command in the AWS CLI.\nExample: Read-only access\nTo allow users to view all resources in the Amazon EC2 console, you can use the same policy as the following example: Example: Read-only access. Users cannot perform any actions on those resources or create new resources, unless another statement grants them permission to do so.\nView instances, AMIs, and snapshots\nAlternatively, you can provide read-only access to a subset of resources. To do this, replace the * wildcard in the ec2:Describe API action with specific ec2:Describe actions for each resource. The following policy allows users to view all instances, AMIs, and snapshots in the Amazon EC2 console. The ec2:DescribeTags action allows users to view public AMIs. The console requires the tagging information to display public AMIs; however, you can remove this action to allow users to view only private AMIs.\n{\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [{\n      \"Effect\": \"Allow\",\n      \"Action\": [\n         \"ec2:DescribeInstances\", \n         \"ec2:DescribeImages\",\n         \"ec2:DescribeTags\", \n         \"ec2:DescribeSnapshots\"\n      ],\n      \"Resource\": \"*\"\n   }\n   ]\n}\nNote\nThe Amazon EC2 ec2:Describe* API actions do not support resource-level permissions, so you cannot control which individual resources users can view in the console. Therefore, the * wildcard is necessary in the Resource element of the above statement. For more information about which ARNs you can use with which Amazon EC2 API actions, see Actions, resources, and condition keys for Amazon EC2.\nView instances and CloudWatch metrics\nThe following policy allows users to view instances in the Amazon EC2 console, as well as CloudWatch alarms and metrics in the Monitoring tab of the Instances page. The Amazon EC2 console uses the CloudWatch API to display the alarms and metrics, so you must grant users permission to use the cloudwatch:DescribeAlarms, cloudwatch:DescribeAlarmsForMetric, cloudwatch:ListMetrics, cloudwatch:GetMetricStatistics, and cloudwatch:GetMetricData actions.\n{\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [{\n      \"Effect\": \"Allow\",\n      \"Action\": [\n         \"ec2:DescribeInstances\",\n         \"ec2:DescribeInstanceTypes\",\n         \"cloudwatch:DescribeAlarms\",\n         \"cloudwatch:DescribeAlarmsForMetric\",\n         \"cloudwatch:ListMetrics\",\n         \"cloudwatch:GetMetricStatistics\",\n         \"cloudwatch:GetMetricData\"\n      ],\n      \"Resource\": \"*\"\n   }\n   ]\n}\nExample: Use the EC2 launch instance wizard\nThe Amazon EC2 launch instance wizard is a screen with options to configure and launch an instance. Your policy must include permission to use the API actions that allow users to work with the wizard's options. If your policy does not include permission to use those actions, some items in the wizard cannot load properly, and users cannot complete a launch.\nBasic launch instance wizard access\nTo complete a launch successfully, users must be given permission to use the ec2:RunInstances API action, and at least the following API actions:\nec2:DescribeImages: To view and select an AMI.\nec2:DescribeInstanceTypes: To view and select an instance type.\nec2:DescribeVpcs: To view the available network options.\nec2:DescribeSubnets: To view all available subnets for the chosen VPC.\nec2:DescribeSecurityGroups or ec2:CreateSecurityGroup: To view and select an existing security group, or to create a new one.\nec2:DescribeKeyPairs or ec2:CreateKeyPair: To select an existing key pair, or to create a new one.\nec2:AuthorizeSecurityGroupIngress: To add inbound rules.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:DescribeInstances\",\n                \"ec2:DescribeImages\",\n                \"ec2:DescribeInstanceTypes\",\n                \"ec2:DescribeKeyPairs\",\n                \"ec2:DescribeVpcs\",\n                \"ec2:DescribeSubnets\",\n                \"ec2:DescribeSecurityGroups\",\n                \"ec2:CreateSecurityGroup\",\n                \"ec2:AuthorizeSecurityGroupIngress\",\n                \"ec2:CreateKeyPair\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"ec2:RunInstances\",\n            \"Resource\": \"*\"\n        }\n    ]\n}\nYou can add API actions to your policy to provide more options for users, for example:\nec2:DescribeAvailabilityZones: To view and select a specific Availability Zone.\nec2:DescribeNetworkInterfaces: To view and select existing network interfaces for the selected subnet.\nTo add outbound rules to VPC security groups, users must be granted permission to use the ec2:AuthorizeSecurityGroupEgress API action. To modify or delete existing rules, users must be granted permission to use the relevant ec2:RevokeSecurityGroup* API action.\nec2:CreateTags: To tag the resources that are created by RunInstances. For more information, see Grant permission to tag Amazon EC2 resources during creation. If users do not have permission to use this action and they attempt to apply tags on the tagging page of the launch instance wizard, the launch fails.\nImportant\nSpecifying a Name while launching an instance creates a tag and requires the ec2:CreateTags action. Be careful about granting users permission to use the ec2:CreateTags action, because doing so limits your ability to use the aws:ResourceTag condition key to restrict their use of other resources. If you grant users permission to use the ec2:CreateTags action, they can change a resource's tag in order to bypass those restrictions. For more information, see Control access using attribute-based access.\nTo use Systems Manager parameters when selecting an AMI, you must add ssm:DescribeParameters and ssm:GetParameters to your policy. ssm:DescribeParameters grants your users the permission to view and select Systems Manager parameters. ssm:GetParameters grants your users the permission to get the values of the Systems Manager parameters. You can also restrict access to specific Systems Manager parameters. For more information, see Restrict access to specific Systems Manager parameters later in this section.\nCurrently, the Amazon EC2 Describe* API actions do not support resource-level permissions, so you cannot restrict which individual resources users can view in the launch instance wizard. However, you can apply resource-level permissions on the ec2:RunInstances API action to restrict which resources users can use to launch an instance. The launch fails if users select options that they are not authorized to use.\nRestrict access to a specific instance type, subnet, and Region\nThe following policy allows users to launch t2.micro instances using AMIs owned by Amazon, and only into a specific subnet (subnet-1a2b3c4d). Users can only launch in the specified Region. If users select a different Region, or select a different instance type, AMI, or subnet in the launch instance wizard, the launch fails.\nThe first statement grants users permission to view the options in the launch instance wizard or to create new ones, as explained in the example above. The second statement grants users permission to use the network interface, volume, key pair, security group, and subnet resources for the ec2:RunInstances action, which are required to launch an instance into a VPC. For more information about using the ec2:RunInstances action, see Launch instances (RunInstances). The third and fourth statements grant users permission to use the instance and AMI resources respectively, but only if the instance is a t2.micro instance, and only if the AMI is owned by Amazon, or certain trusted and verified partners.\n{\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [{\n      \"Effect\": \"Allow\",\n      \"Action\": [\n         \"ec2:DescribeInstances\",\n         \"ec2:DescribeImages\",\n         \"ec2:DescribeInstanceTypes\",\n         \"ec2:DescribeKeyPairs\", \n         \"ec2:CreateKeyPair\", \n         \"ec2:DescribeVpcs\", \n         \"ec2:DescribeSubnets\", \"ec2:DescribeSecurityGroups\", \n         \"ec2:CreateSecurityGroup\", \n         \"ec2:AuthorizeSecurityGroupIngress\"\n   ],\n   \"Resource\": \"*\"\n   },\n   {\n      \"Effect\": \"Allow\",\n      \"Action\":\"ec2:RunInstances\",\n      \"Resource\": [\n         \"arn:aws:ec2:region:111122223333:network-interface/*\",\n         \"arn:aws:ec2:region:111122223333:volume/*\",\n         \"arn:aws:ec2:region:111122223333:key-pair/*\",\n         \"arn:aws:ec2:region:111122223333:security-group/*\",\n         \"arn:aws:ec2:region:111122223333:subnet/subnet-1a2b3c4d\"\n      ]\n   },\n   {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": [\n         \"arn:aws:ec2:region:111122223333:instance/*\"\n      ],\n      \"Condition\": {\n         \"StringEquals\": {\n            \"ec2:InstanceType\": \"t2.micro\"\n         }\n      }\n   },\n   {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": [ \n            \"arn:aws:ec2:region::image/ami-*\"\n      ],\n      \"Condition\": {\n         \"StringEquals\": {\n            \"ec2:Owner\": \"amazon\"\n         }\n      }\n   }\n   ]\n}\nRestrict access to specific Systems Manager parameters\nThe following policy grants access to use Systems Manager parameters with a specific name.\nThe first statement grants users the permission to view Systems Manager parameters when selecting an AMI in the launch instance wizard. The second statement grants users the permission to only use parameters that are named prod-*.\n{\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [{\n      \"Effect\": \"Allow\",\n      \"Action\": [\n         \"ssm:DescribeParameters\"\n      ],\n      \"Resource\": \"*\"\n   },\n   {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n         \"ssm:GetParameters\"\n      ],\n     \"Resource\": \"arn:aws:ssm:region:123456123456:parameter/prod-*\"\n   }\n   ]\n}\nExample: Work with security groups\nView security groups and add and remove rules\nThe following policy grants users permission to view security groups in the Amazon EC2 console, to add and remove inbound and outbound rules, and to list and modify rule descriptions for existing security groups that have the tag Department=Test.\nIn the first statement, the ec2:DescribeTags action allows users to view tags in the console, which makes it easier for users to identify the security groups that they are allowed to modify.\n{\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [{\n      \"Effect\": \"Allow\",\n      \"Action\": [\n         \"ec2:DescribeSecurityGroups\", \n         \"ec2:DescribeSecurityGroupRules\", \n         \"ec2:DescribeTags\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n         \"ec2:AuthorizeSecurityGroupIngress\", \n         \"ec2:RevokeSecurityGroupIngress\", \n         \"ec2:AuthorizeSecurityGroupEgress\", \n         \"ec2:RevokeSecurityGroupEgress\", \n         \"ec2:ModifySecurityGroupRules\", \n         \"ec2:UpdateSecurityGroupRuleDescriptionsIngress\", \n         \"ec2:UpdateSecurityGroupRuleDescriptionsEgress\"\n      ],\n      \"Resource\": [\n         \"arn:aws:ec2:region:111122223333:security-group/*\"\n      ],\n      \"Condition\": {\n         \"StringEquals\": {\n            \"aws:ResourceTag/Department\": \"Test\"\n         }\n      }\n   },\n   {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n         \"ec2:ModifySecurityGroupRules\"\n      ],\n      \"Resource\": [\n         \"arn:aws:ec2:region:111122223333:security-group-rule/*\"\n      ]\n   }\n]}\nWork with the Create Security Group dialog box\nYou can create a policy that allows users to work with the Create Security Group dialog box in the Amazon EC2 console. To use this dialog box, users must be granted permission to use at the least the following API actions:\nec2:CreateSecurityGroup: To create a new security group.\nec2:DescribeVpcs: To view a list of existing VPCs in the VPC list.\nWith these permissions, users can create a new security group successfully, but they cannot add any rules to it. To work with rules in the Create Security Group dialog box, you can add the following API actions to your policy:\nec2:AuthorizeSecurityGroupIngress: To add inbound rules.\nec2:AuthorizeSecurityGroupEgress: To add outbound rules to VPC security groups.\nec2:RevokeSecurityGroupIngress: To modify or delete existing inbound rules. This is useful to allow users to use the Copy to new feature in the console. This feature opens the Create Security Group dialog box and populates it with the same rules as the security group that was selected.\nec2:RevokeSecurityGroupEgress: To modify or delete outbound rules for VPC security groups. This is useful to allow users to modify or delete the default outbound rule that allows all outbound traffic.\nec2:DeleteSecurityGroup: To cater for when invalid rules cannot be saved. The console first creates the security group, and then adds the specified rules. If the rules are invalid, the action fails, and the console attempts to delete the security group. The user remains in the Create Security Group dialog box so that they can correct the invalid rule and try to create the security group again. This API action is not required, but if a user is not granted permission to use it and attempts to create a security group with invalid rules, the security group is created without any rules, and the user must add them afterward.\nec2:UpdateSecurityGroupRuleDescriptionsIngress: To add or update descriptions of ingress (inbound) security group rules.\nec2:UpdateSecurityGroupRuleDescriptionsEgress: To add or update descriptions of egress (outbound) security group rules.\nec2:ModifySecurityGroupRules: To modify security group rules.\nec2:DescribeSecurityGroupRules: To list security group rules.\nThe following policy grants users permission to use the Create Security Group dialog box, and to create inbound and outbound rules for security groups that are associated with a specific VPC (vpc-1a2b3c4d). Users can create security groups for a VPC, but they cannot add any rules to them. Similarly, users cannot add any rules to any existing security group that's not associated with VPC vpc-1a2b3c4d. Users are also granted permission to view all security groups in the console. This makes it easier for users to identify the security groups to which they can add inbound rules. This policy also grants users permission to delete security groups that are associated with VPC vpc-1a2b3c4d.\n{\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [{\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeSecurityGroups\", \n        \"ec2:CreateSecurityGroup\", \n        \"ec2:DescribeVpcs\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteSecurityGroup\", \n        \"ec2:AuthorizeSecurityGroupIngress\", \n        \"ec2:AuthorizeSecurityGroupEgress\"\n      ],\n      \"Resource\": \"arn:aws:ec2:region:111122223333:security-group/*\",\n      \"Condition\":{\n         \"ArnEquals\": {\n            \"ec2:Vpc\": \"arn:aws:ec2:region:111122223333:vpc/vpc-1a2b3c4d\"\n         }\n      }\n    }\n   ]\n}\nExample: Work with Elastic IP addresses\nTo allow users to view Elastic IP addresses in the Amazon EC2 console, you must grant users permission to use the ec2:DescribeAddresses action.\nTo allow users to work with Elastic IP addresses, you can add the following actions to your policy.\nec2:AllocateAddress: To allocate an Elastic IP address.\nec2:ReleaseAddress: To release an Elastic IP address.\nec2:AssociateAddress: To associate an Elastic IP address with an instance or a network interface.\nec2:DescribeNetworkInterfaces and ec2:DescribeInstances: To work with the Associate address screen. The screen displays the available instances or network interfaces to which you can associate an Elastic IP address.\nec2:DisassociateAddress: To disassociate an Elastic IP address from an instance or a network interface.\nThe following policy allows users to view, allocate, and associate Elastic IP addresses with instances. Users cannot associate Elastic IP addresses with network interfaces, disassociate Elastic IP addresses, or release them.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:DescribeAddresses\",\n                \"ec2:AllocateAddress\",\n                \"ec2:DescribeInstances\",\n                \"ec2:AssociateAddress\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\nExample: Work with Reserved Instances\nThe following policy allows users to view and modify Reserved Instances in your account, as well as purchase new Reserved Instances in the AWS Management Console.\nThis policy allows users to view all the Reserved Instances, as well as On-Demand Instances, in the account. It's not possible to set resource-level permissions for individual Reserved Instances.\n{\n   \"Version\": \"2012-10-17\",\n   \"Statement\": [{\n      \"Effect\": \"Allow\",\n      \"Action\": [\n         \"ec2:DescribeReservedInstances\", \n         \"ec2:ModifyReservedInstances\",\n         \"ec2:PurchaseReservedInstancesOffering\", \n         \"ec2:DescribeInstances\",\n         \"ec2:DescribeInstanceTypes\",\n         \"ec2:DescribeAvailabilityZones\", \n         \"ec2:DescribeReservedInstancesOfferings\"\n      ],\n      \"Resource\": \"*\"\n   }\n   ]\n}\nThe ec2:DescribeAvailabilityZones action is necessary to ensure that the Amazon EC2 console can display information about the Availability Zones in which you can purchase Reserved Instances. The ec2:DescribeInstances action is not required, but ensures that the user can view the instances in the account and purchase reservations to match the correct specifications.\nYou can adjust the API actions to limit user access, for example removing ec2:DescribeInstances and ec2:DescribeAvailabilityZones means the user has read-only access."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-iam-awsmanpol.html",
        "content": "To add permissions to users, groups, and roles, it is easier to use AWS managed policies than to write policies yourself. It takes time and expertise to create IAM customer managed policies that provide your team with only the permissions they need. To get started quickly, you can use our AWS managed policies. These policies cover common use cases and are available in your AWS account. For more information about AWS managed policies, see AWS managed policies in the IAM User Guide.\nAWS services maintain and update AWS managed policies. You can't change the permissions in AWS managed policies. Services occasionally add additional permissions to an AWS managed policy to support new features. This type of update affects all identities (users, groups, and roles) where the policy is attached. Services are most likely to update an AWS managed policy when a new feature is launched or when new operations become available. Services do not remove permissions from an AWS managed policy, so policy updates won't break your existing permissions.\nAdditionally, AWS supports managed policies for job functions that span multiple services. For example, the ReadOnlyAccess AWS managed policy provides read-only access to all AWS services and resources. When a service launches a new feature, AWS adds read-only permissions for new operations and resources. For a list and descriptions of job function policies, see AWS managed policies for job functions in the IAM User Guide.\nAWS managed policy: AmazonEC2FullAccess\nYou can attach the AmazonEC2FullAccess policy to your IAM identities. This policy grants permissions that allow full access to Amazon EC2.\nTo view the permissions for this policy, see AmazonEC2FullAccess in the AWS Managed Policy Reference.\nAWS managed policy: AmazonEC2ReadOnlyAccess\nYou can attach the AmazonEC2ReadOnlyAccess policy to your IAM identities. This policy grants permissions that allow read-only access to Amazon EC2.\nTo view the permissions for this policy, see AmazonEC2ReadOnlyAccess in the AWS Managed Policy Reference.\nAWS managed policy: AWSEC2CapacityReservationFleetRolePolicy\nThis policy is attached to the service-linked role named AWSServiceRoleForEC2CapacityReservationFleet to allow Capacity Reservations to create, modify, and cancel Capacity Reservations on your behalf. For more information, see Service-linked role for Capacity Reservation Fleet.\nTo view the permissions for this policy, see AWSEC2CapacityReservationFleetRolePolicy in the AWS Managed Policy Reference.\nAWS managed policy: AWSEC2FleetServiceRolePolicy\nThis policy is attached to the service-linked role named AWSServiceRoleForEC2Fleet to allow EC2 Fleet to request, launch, terminate, and tag instances on your behalf. For more information, see Service-linked role for EC2 Fleet.\nTo view the permissions for this policy, see AWSEC2FleetServiceRolePolicy in the AWS Managed Policy Reference.\nAWS managed policy: AWSEC2SpotFleetServiceRolePolicy\nThis policy is attached to the service-linked role named AWSServiceRoleForEC2SpotFleet to allow Spot Fleet to launch and manage instances on your behalf. For more information, see Service-linked role for Spot Fleet.\nTo view the permissions for this policy, see AWSEC2SpotFleetServiceRolePolicy in the AWS Managed Policy Reference.\nAWS managed policy: AWSEC2SpotServiceRolePolicy\nThis policy is attached to the service-linked role named AWSServiceRoleForEC2Spot to allow Amazon EC2 to launch and manage Spot Instances on your behalf. For more information, see Service-linked role for Spot Instance requests.\nTo view the permissions for this policy, see AWSEC2SpotServiceRolePolicy in the AWS Managed Policy Reference.\nAWS managed policy: AWSEC2VssSnapshotPolicy\nYou can attach this managed policy to the IAM instance profile role that you use for your Amazon EC2 Windows instances. The policy grants permissions to allow Amazon EC2 to create and manage VSS snapshots on your behalf.\nTo view the permissions for this policy, see AWSEC2VssSnapshotPolicy in the AWS Managed Policy Reference.\nAWS managed policy: EC2FastLaunchFullAccess\nYou can attach the EC2FastLaunchFullAccess policy to your instance profile or other IAM role. This policy grants full access to EC2 Fast Launch actions, and targeted permissions as follows.\nPermissions details\nEC2 Fast Launch \u2013 Administrative access is granted, so that the role can enable or disable EC2 Fast Launch, and describe EC2 Fast Launch images.\nAmazon EC2 \u2013 Access is granted for Amazon EC2 RunInstances, CreateTags and Describe actions that are needed to verify resource permissions.\nIAM \u2013 Access is granted to get and use instance profiles whose name contains ec2fastlaunch to create the EC2FastLaunchServiceRolePolicy service-linked role.\nTo view the permissions for this policy, see EC2FastLaunchFullAccess in the AWS Managed Policy Reference.\nAWS managed policy: EC2FastLaunchServiceRolePolicy\nThis policy is attached to the service-linked role named AWSServiceRoleForEC2FastLaunch to allow Amazon EC2 to create and manage a set of pre-provisioned snapshots that reduce the time it takes to launch instances from your EC2 Fast Launch-enabled AMI. For more information, see Service-linked role for EC2 Fast Launch.\nTo view the permissions for this policy, see EC2FastLaunchServiceRolePolicy in the AWS Managed Policy Reference.\nAWS managed policy: Ec2InstanceConnectEndpoint\nThis policy is attached to a service-linked role named AWSServiceRoleForEC2InstanceConnect to allow EC2 Instance Connect Endpoint to perform actions on your behalf. For more information, see Service-linked role for EC2 Instance Connect Endpoint.\nTo view the permissions for this policy, see Ec2InstanceConnectEndpoint in the AWS Managed Policy Reference.\nAmazon EC2 updates to AWS managed policies\nView details about updates to AWS managed policies for Amazon EC2 since this service began tracking these changes.\nChange Description Date\nAmazonEC2ReadOnlyAccess \u2013 Added permissions\nAmazon EC2 added a permission that allows you to retrieve security groups using the GetSecurityGroupsForVpc operation. December 27, 2024\nEC2FastLaunchFullAccess \u2013 New policy\nAmazon EC2 added this policy to perform API actions related to the EC2 Fast Launch feature from an instance. The policy can be attached to the instance profile for an instance that's launched from a EC2 Fast Launch enabled AMI. May 14, 2024\nAWSEC2VssSnapshotPolicy \u2013 New policy\nAmazon EC2 added the AWSEC2VssSnapshotPolicy policy that contains permissions to create and add tags to Amazon Machine Images (AMIs) and EBS snapshots. March 28, 2024\nEC2FastLaunchServiceRolePolicy \u2013 New policy\nAmazon EC2 added the EC2 Fast Launch feature to enable Windows AMIs to launch instances faster by creating a set of pre-provisioned snapshots. November 26, 2021\nAmazon EC2 started tracking changes Amazon EC2 started tracking changes to its AWS managed policies March 1, 2021"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html",
        "content": "Applications must sign their API requests with AWS credentials. Therefore, if you are an application developer, you need a strategy for managing credentials for your applications that run on EC2 instances. For example, you can securely distribute your AWS credentials to the instances, enabling the applications on those instances to use your credentials to sign requests, while protecting your credentials from other users. However, it's challenging to securely distribute credentials to each instance, especially those that AWS creates on your behalf, such as Spot Instances or instances in Auto Scaling groups. You must also be able to update the credentials on each instance when you rotate your AWS credentials.\nWe designed IAM roles so that your applications can securely make API requests from your instances, without requiring you to manage the security credentials that the applications use. Instead of creating and distributing your AWS credentials, you can delegate permission to make API requests using IAM roles as follows:\nCreate an IAM role.\nDefine which accounts or AWS services can assume the role.\nDefine which API actions and resources the application can use after assuming the role.\nSpecify the role when you launch your instance, or attach the role to an existing instance.\nHave the application retrieve a set of temporary credentials and use them.\nFor example, you can use IAM roles to grant permissions to applications running on your instances that need to use a bucket in Amazon S3. You can specify permissions for IAM roles by creating a policy in JSON format. These are similar to the policies that you create for users. If you change a role, the change is propagated to all instances.\nNote\nAmazon EC2 IAM role credentials are not subject to maximum session durations configured in the role. For more information, see Methods to assume a role in the IAM User Guide.\nWhen creating IAM roles, associate least privilege IAM policies that restrict access to the specific API calls the application requires. For Windows-to-Windows communication, use well-defined and well-documented Windows groups and roles to grant application-level access between Windows instances. Groups and roles allow customers to define least privilege application and NTFS folder-level permissions to limit access to application-specific requirements.\nYou can only attach one IAM role to an instance, but you can attach the same role to many instances. For more information about creating and using IAM roles, see Roles in the IAM User Guide.\nYou can apply resource-level permissions to your IAM policies to control the users' ability to attach, replace, or detach IAM roles for an instance. For more information, see Supported resource-level permissions for Amazon EC2 API actions and the following example: Example: Work with IAM roles.\nContents\nInstance profiles\nPermissions for your use case\nRetrieve security credentials\nPermissions to attach a role to an instance\nAttach a role to an instance\nInstance identity roles\nInstance profiles\nAmazon EC2 uses an instance profile as a container for an IAM role. When you create an IAM role using the IAM console, the console creates an instance profile automatically and gives it the same name as the role to which it corresponds. If you use the Amazon EC2 console to launch an instance with an IAM role or to attach an IAM role to an instance, you choose the role based on a list of instance profile names.\nIf you use the AWS CLI, API, or an AWS SDK to create a role, you create the role and instance profile as separate actions, with potentially different names. If you then use the AWS CLI, API, or an AWS SDK to launch an instance with an IAM role or to attach an IAM role to an instance, specify the instance profile name.\nAn instance profile can contain only one IAM role. This limit cannot be increased.\nFor more information, see Use instance profiles in the IAM User Guide.\nPermissions for your use case\nWhen you first create an IAM role for your applications, you might sometimes grant permissions beyond what is required. Before launching your application in your production environment, you can generate an IAM policy that is based on the access activity for an IAM role. IAM Access Analyzer reviews your AWS CloudTrail logs and generates a policy template that contains the permissions that have been used by the role in your specified date range. You can use the template to create a managed policy with fine-grained permissions and then attach it to the IAM role. That way, you grant only the permissions that the role needs to interact with AWS resources for your specific use case. This helps you adhere to the best practice of granting least privilege. For more information, see IAM Access Analyzer policy generation in the IAM User Guide.\nInstance identity roles for Amazon EC2 instances\nEach Amazon EC2 instance that you launch has an instance identity role that represents its identity. An instance identity role is a type of IAM role. AWS services and features that are integrated to use the instance identity role can use it to identify the instance to the service.\nThe instance identity role credentials are accessible from the Instance Metadata Service (IMDS) at /identity-credentials/ec2/security-credentials/ec2-instance. The credentials consist of an AWS temporary access key pair and a session token. They are used to sign AWS Sigv4 requests to the AWS services that use the instance identity role. The credentials are present in the instance metadata regardless of whether a service or feature that makes use of instance identity roles is enabled on the instance.\nInstance identity roles are automatically created when an instance is launched, have no role-trust policy document, and are not subject to any identity or resource policy.\nSupported services\nThe following AWS services use the instance identity role:\nAmazon EC2 \u2013 EC2 Instance Connect uses the instance identity role to update the host keys for a Linux instance.\nAmazon GuardDuty \u2013 GuardDuty Runtime Monitoring uses the instance identity role to allow the runtime agent to send security telemetry to the GuardDuty VPC endpoint.\nAWS Security Token Service (AWS STS) \u2013 Instance identity role credentials can be used with the AWS STS GetCallerIdentity action.\nAWS Systems Manager \u2013 When using Default Host Management Configuration, AWS Systems Manager uses the identity provided by the instance identity role to register EC2 instances. After identifying your instance, Systems Manager can pass your AWSSystemsManagerDefaultEC2InstanceManagementRole IAM role to your instance.\nInstance identity roles can\u2019t be used with other AWS services or features because they do not have an integration with instance identity roles.\nInstance identity role ARN\nThe instance identity role ARN takes the following format:\narn:aws-partition:iam::account-number:assumed-role/aws:ec2-instance/instance-id\nFor example:\narn:aws:iam::0123456789012:assumed-role/aws:ec2-instance/i-0123456789example\nFor more information about ARNs, see Amazon Resource Names (ARNs) in the IAM User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-metadata-security-credentials.html",
        "content": "An application on the instance retrieves the security credentials provided by the role from the instance metadata item iam/security-credentials/role-name. The application is granted the permissions for the actions and resources that you've defined for the role through the security credentials associated with the role. These security credentials are temporary and we rotate them automatically. We make new credentials available at least five minutes before the expiration of the old credentials.\nFor more information about instance metadata, see Use instance metadata to manage your EC2 instance.\nWarning\nIf you use services that use instance metadata with IAM roles, ensure that you don't expose your credentials when the services make HTTP calls on your behalf. The types of services that could expose your credentials include HTTP proxies, HTML/CSS validator services, and XML processors that support XML inclusion.\nFor your Amazon EC2 workloads, we recommend that you retrieve session credentials using the method described below. These credentials should enable your workload to make AWS API requests, without needing to use sts:AssumeRole to assume the same role that is already associated with the instance. Unless you need to pass session tags for attribute-based access control (ABAC) or pass a session policy to further restrict permissions of the role, such role assumption calls are unnecessary as they create a new set of the same temporary role session credentials.\nIf your workload uses a role to assume itself, you must create a trust policy that explicitly allows that role to assume itself. If you do not create the trust policy, you get an AccessDenied error. For more information, see Update a role trust policy in the IAM User Guide.\nThe following command retrieves the security credentials for an IAM role named s3access.\ncURL\nPowerShell\nIMDSv2\n[ec2-user ~]$ TOKEN=`curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"` \\\n&& curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/iam/security-credentials/s3access\nIMDSv1\n[ec2-user ~]$ curl http://169.254.169.254/latest/meta-data/iam/security-credentials/s3access\nThe following is example output. If you are not able to retrieve the security credentials, see I can't access the temporary security credentials on my EC2 instance in the IAM User Guide.\n{\n  \"Code\" : \"Success\",\n  \"LastUpdated\" : \"2012-04-26T16:39:16Z\",\n  \"Type\" : \"AWS-HMAC\",\n  \"AccessKeyId\" : \"ASIAIOSFODNN7EXAMPLE\",\n  \"SecretAccessKey\" : \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\",\n  \"Token\" : \"token\",\n  \"Expiration\" : \"2017-05-17T15:09:54Z\"\n}\nFor applications, AWS CLI, and Tools for Windows PowerShell commands that run on the instance, you do not have to explicitly get the temporary security credentials\u2014the AWS SDKs, AWS CLI, and Tools for Windows PowerShell automatically get the credentials from the EC2 instance metadata service and use them. To make a call outside of the instance using temporary security credentials (for example, to test IAM policies), you must provide the access key, secret key, and the session token. For more information, see Using Temporary Security Credentials to Request Access to AWS Resources in the IAM User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/permission-to-pass-iam-roles.html",
        "content": "The identities in your AWS account, such as IAM users, must have specific permissions to launch an Amazon EC2 instance with an IAM role, attach an IAM role to an instance, replace the IAM role for an instance, or detach an IAM role from an instance. You must grant permission to use the following API actions as required:\niam:PassRole\nec2:AssociateIamInstanceProfile\nec2:DisassociateIamInstanceProfile\nec2:ReplaceIamInstanceProfileAssociation\nNote\nIf you specify the resource for iam:PassRole as *, this would grant access to pass any of your IAM roles to an instance. To follow the best practice of least privilege, specify the ARNs of specific IAM roles with iam:PassRole, as shown in the example policy below.\nExample policy for programmatic access\nThe following IAM policy grants permissions to launch instances with an IAM role, attach an IAM role to an instance, or replace the IAM role for an instance using the AWS CLI or the Amazon EC2 API.\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n         \"ec2:RunInstances\",\n         \"ec2:AssociateIamInstanceProfile\",\n         \"ec2:DisassociateIamInstanceProfile\",\n         \"ec2:ReplaceIamInstanceProfileAssociation\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:PassRole\",\n      \"Resource\": \"arn:aws:iam::123456789012:role/DevTeam*\"\n    }\n  ]\n}\nAdditional requirement for console access\nTo grant permissions to complete the same tasks using the Amazon EC2 console, you must also include the iam:ListInstanceProfiles API action."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/attach-iam-role.html",
        "content": "You can create an IAM role and attach it to an instance during or after launch. You can also replace or detach IAM roles.\nTo attach an IAM role to an instance at launch using the Amazon EC2 console, expand Advanced details. For IAM instance profile, select the IAM role.\nNote\nIf you created your IAM role using the IAM console, the instance profile was created for you and given the same name as the role. If you created your IAM role using the AWS CLI, API, or an AWS SDK, you might have given your instance profile a different name than the role.\nYou can attach an IAM role to an instance that is running or stopped. If the instance already has an IAM role attached, you must replace it with the new IAM role.\nConsole\nAWS CLI\nPowerShell\nTo attach an IAM role to an instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance.\nChoose Actions, Security, Modify IAM role.\nFor IAM role, select the IAM instance profile.\nChoose Update IAM role.\nTo replace the IAM role on an instance that already has an attached IAM role, the instance must be in the running state. You can do this if you want to change the IAM role for an instance without detaching the existing one first. For example, you can do this to ensure that API actions performed by applications running on the instance are not interrupted.\nConsole\nAWS CLI\nPowerShell\nTo replace an IAM role for an instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance.\nChoose Actions, Security, Modify IAM role.\nFor IAM role, select the IAM instance profile.\nChoose Update IAM role.\nYou can detach an IAM role from a running or stopped instance.\nConsole\nAWS CLI\nPowerShell\nTo detach an IAM role from an instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance.\nChoose Actions, Security, Modify IAM role.\nFor IAM role, choose No IAM Role.\nChoose Update IAM role.\nWhen promoted for confirmation, enter Detach, and then choose Detach."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/update-management.html",
        "content": "We recommend that you regularly patch, update, and secure the operating system and applications on your EC2 instances. You can use AWS Systems Manager Patch Manager to automate the process of installing security-related updates for both the operating system and applications.\nFor EC2 instances in an Auto Scaling group, you can use the AWS-PatchAsgInstance runbook to help avoid instances that are undergoing patching from being replaced. Alternatively, you can use any automatic update services or recommended processes for installing updates that are provided by the application vendor.\nResources\nAL2023 \u2013 Updating AL2023 in the Amazon Linux 2023 User Guide\nAL2 \u2013 Manage software on your Amazon Linux 2 instance in the Amazon Linux 2 User Guide\nWindows instances \u2013 Update management"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-windows-security-best-practices.html",
        "content": "We recommend that you follow these security best practices for your Windows instances.\nContents\nHigh-level security best practices\nUpdate management\nConfiguration management\nChange management\nAudit and accountability for Amazon EC2 Windows instances\nHigh-level security best practices\nYou should adhere to the following high-level security best practices for your Windows instances:\nLeast access \u2013 Grant access only to systems and locations that are trusted and expected. This applies to all Microsoft products such as Active Directory, Microsoft business productivity servers, and infrastructure services such as Remote Desktop Services, reverse proxy servers, IIS web servers,and more. Use AWS capabilities such as Amazon EC2 instance security groups, network access control lists (ACLs), and Amazon VPC public/private subnets to layer security across multiple locations in an architecture. Within a Windows instance, customers can use Windows Firewall to further layer a defense-in-depth strategy within their deployment. Install only the OS components and applications that are necessary for the system to function as designed. Configure infrastructure services such as IIS to run under service accounts, or to use features such as application pool identities to access resources locally and remotely across your infrastructure.\nLeast privilege \u2013 Determine the minimum set of privileges that instances and accounts need in order to perform their functions. Restrict these servers and users to only allow these defined permissions. Use techniques such as Role Based Access Controls to reduce the surface area of administrative accounts, and create the most limited roles to accomplish a task. Use OS features such as Encrypting File System (EFS) within NTFS to encrypt sensitive data at rest, and control application and user access to it.\nConfiguration management \u2013 Create a baseline server configuration that incorporates up-to-date security patches and host-based protection suites that include anti-virus, anti-malware, intrusion detection/prevention, and file integrity monitoring. Assess each server against the current recorded baseline to identify and flag any deviations. Ensure each server is configured to generate and securely store appropriate log and audit data.\nChange management \u2013 Create processes to control changes to server configuration baselines and work toward fully automated change processes. Also, leverage Just Enough Administration (JEA) with Windows PowerShell DSC to limit administrative access to the minimum required functions.\nPatch management \u2013 Implement processes that regularly patch, update, and secure the operating system and applications on your EC2 instances.\nAudit logs \u2013 Audit access and all changes to Amazon EC2 instances to verify server integrity and ensure only authorized changes are made. Leverage features such as Enhanced Logging for IIS to enhance default logging capabilities. AWS capabilities such as VPC Flow Logs and AWS CloudTrail are also available to audit network access, including allowed/denied requests and API calls, respectively.\nUpdate management\nTo ensure the best results when you run Windows Server on Amazon EC2, we recommend that you implement the following best practices:\nConfigure Windows Update\nUpdate drivers\nUse the latest Windows AMIs\nTest performance before migration\nUpdate launch agents\nReboot your Windows instance after you install updates. For more information, see Reboot your instance.\nFor information about how to upgrade or migrate a Windows instance to a newer version of Windows Server, see Upgrade an EC2 Windows instance to a newer version of Windows Server.\nConfigure Windows Update\nBy default, instances that are launched from AWS Windows Server AMIs don't receive updates through Windows Update.\nUpdate Windows drivers\nMaintain the latest drivers on all Windows EC2 instances to ensure that the latest issue fixes and performance enhancements are applied across your fleet. Depending on your instance type, you should update the AWS PV, Amazon ENA, and AWS NVMe drivers.\nUse SNS topics to receive updates for new driver releases.\nUse the AWS Systems Manager Automation runbook AWSSupport-UpgradeWindowsAWSDrivers to easily apply the updates across your instances.\nLaunch instances using the latest Windows AMIs\nAWS releases new Windows AMIs each month, which contain the latest OS patches, drivers, and launch agents. You should leverage the latest AMI when you launch new instances or when you build your own custom images.\nTo view updates to each release of the AWS Windows AMIs, see AWS Windows AMI version history.\nTo build with the latest available AMIs, see Query for the Latest Windows AMI Using Systems Manager Parameter Store.\nFor more information about specialized Windows AMIs that you can use to launch instances for your database and compliance hardening use cases, see Specialized Windows AMIs in the AWS Windows AMI Reference.\nTest system/application performance before migration\nMigrating enterprise applications to AWS can involve many variables and configurations. Always performance test the EC2 solution to ensure that:\nInstance types are properly configured, including instance size, enhanced networking, and tenancy (shared or dedicated).\nInstance topology is appropriate for the workload and leverages high-performance features when necessary, such as dedicated tenancy, placement groups, instance store volumes, and bare metal.\nUpdate launch agents\nUpdate to the latest EC2Launch v2 agent to ensure that the latest enhancements are applied across your fleet. For more information, see Migrate to EC2Launch v2 for Windows instances.\nIf you have a mixed fleet, or if you want to continue to use the EC2Launch (Windows Server 2016 and 2019) or EC2 Config (legacy OS only) agents, update to the latest versions of the respective agents.\nAutomatic updates are supported on the following combinations of Windows Server version and launch agents. You can opt in to automatic updates in the SSM Quick Setup Host Management console under Amazon EC2 Launch Agents.\nWindows Version EC2Launch v1 EC2Launch v2\n2016 \u2713 \u2713\n2019 \u2713 \u2713\n2022 \u2713\nFor more information about updating to EC2Launch v2, see Install the latest version of EC2Launch v2.\nFor information to manually update EC2Config, see Install the latest version of EC2Config.\nFor information to manually update EC2Launch, see Install the latest version of EC2Launch.\nConfiguration management\nAmazon Machine Images (AMIs) provide an initial configuration for an Amazon EC2 instance, which includes the Windows OS and optional customer-specific customizations, such as applications and security controls. Create an AMI catalog containing customized security configuration baselines to ensure that all Windows instances are launched with standard security controls. Security baselines can be baked into an AMI, bootstrapped dynamically when an EC2 instance is launched, or packaged as a product for uniform distribution through AWS Service Catalog portfolios. For more information on securing an AMI, see Best Practices for Building an AMI.\nEach Amazon EC2 instance should adhere to organizational security standards. Do not install any Windows roles and features that are not required, and do install software to protect against malicious code (antivirus, antimalware, exploit mitigation), monitor host-integrity, and perform intrusion detection. Configure security software to monitor and maintain OS security settings, protect the integrity of critical OS files, and alert on deviations from the security baseline. Consider implementing recommended security configuration benchmarks published by Microsoft, the Center for Internet Security (CIS), or the National Institute of Standards and Technology (NIST). Consider using other Microsoft tools for particular application servers, such as the Best Practice Analyzer for SQL Server.\nAWS customers can also run Amazon Inspector assessments to improve the security and compliance of applications deployed on Amazon EC2 instances. Amazon Inspector automatically assesses applications for vulnerabilities or deviations from best practices and includes a knowledge base of hundreds of rules mapped to common security compliance standards (for example, PCI DSS) and vulnerability definitions. Examples of built-in rules include checking if remote root login is enabled, or if vulnerable software versions are installed. These rules are regularly updated by AWS security researchers.\nWhen securing Windows instances, we recommend that you implement Active Directory Domain Services to enable a scalable, secure, and manageable infrastructure for distributed locations. Additionally, after launching instances from the Amazon EC2 console or by using an Amazon EC2 provisioning tool, such as AWS CloudFormation, it is good practice to utilize native OS features, such as Microsoft Windows PowerShell DSC to maintain configuration state in the event that configuration drift occurs.\nChange management\nAfter initial security baselines are applied to Amazon EC2 instances at launch, control ongoing Amazon EC2 changes to maintain the security of your virtual machines. Establish a change management process to authorize and incorporate changes to AWS resources (such as security groups, route tables, and network ACLs) as well as to OS and application configurations (such as Windows or application patching, software upgrades, or configuration file updates).\nAWS provides several tools to help manage changes to AWS resources, including AWS CloudTrail, AWS Config, AWS CloudFormation, and AWS Elastic Beanstalk, and management packs for Systems Center Operations Manager and System Center Virtual Machine Manager. Note that Microsoft releases Windows patches the second Tuesday of each month (or as needed) and AWS updates all Windows AMIs managed by AWS within five days after Microsoft releases a patch. Therefore it is important to continually patch all baseline AMIs, update AWS CloudFormation templates and Auto Scaling group configurations with the latest AMI IDs, and implement tools to automate running instance patch management.\nMicrosoft provides several options for managing Windows OS and application changes. SCCM, for example, provides full lifecycle coverage of environment modifications. Select tools that address business requirements and control how changes will affect application SLAs, capacity, security, and disaster recovery procedures. Avoid manual changes and instead leverage automated configuration management software or command line tools such as the EC2 Run Command or Windows PowerShell to implement scripted, repeatable change processes. To assist with this requirement, use bastion hosts with enhanced logging for all interactions with your Windows instances to ensure that all events and tasks are automatically recorded.\nAudit and accountability for Amazon EC2 Windows instances\nAWS CloudTrail, AWS Config, and AWS Config Rules provide audit and change tracking features for auditing AWS resource changes. Configure Windows event logs to send local log files to a centralized log management system to preserve log data for security and operational behavior analysis. Microsoft System Center Operations Manager (SCOM) aggregates information about Microsoft applications deployed to Windows instances and applies preconfigured and custom rulesets based on application roles and services. System Center Management Packs build on SCOM to provide application-specific monitoring and configuration guidance. These Management Packs support Windows Server Active Directory, SharePoint Server 2013, Exchange Server 2013, Lync Server 2013, SQL Server 2014, and many more servers and technologies.\nIn addition to Microsoft systems management tools, customers can use Amazon CloudWatch to monitor instance CPU utilization, disk performance, network I/O, and perform host and instance status checks. The EC2Config, EC2Launch, and EC2Launch v2 launch agents provide access to additional, advanced features for Windows instances. For example, they can export Windows system, security, application, and Internet Information Services (IIS) logs to CloudWatch Logs which can then be integrated with Amazon CloudWatch metrics and alarms. Customers can also create scripts that export Windows performance counters to Amazon CloudWatch custom metrics."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html",
        "content": "A key pair, consisting of a public key and a private key, is a set of security credentials that you use to prove your identity when connecting to an Amazon EC2 instance. For Linux instances, the private key allows you to securely SSH into your instance. For Windows instances, the private key is required to decrypt the administrator password, which you then use to connect to your instance.\nAmazon EC2 stores the public key on your instance, and you store the private key, as shown in the following diagram. It's important that you store your private key in a secure place because anyone who possesses your private key can connect to your instances that use the key pair.\nWhen you launch an instance, you can specify a key pair, so that you can connect to your instance using a method that requires a key pair. Depending on how you manage your security, you can specify the same key pair for all your instances or you can specify different key pairs.\nFor Linux instances, when your instance boots for the first time, the public key that you specified at launch is placed on your Linux instance in an entry within ~/.ssh/authorized_keys. When you connect to your Linux instance using SSH, to log in you must specify the private key that corresponds to the public key.\nFor more information about connecting to your EC2 instance, see Connect to your EC2 instance.\nImportant\nBecause Amazon EC2 doesn't keep a copy of your private key, there is no way to recover a private key if you lose it. However, there can still be a way to connect to instances for which you've lost the private key. For more information, see I've lost my private key. How can I connect to my instance?\nAs an alternative to key pairs, you can use AWS Systems Manager Session Manager to connect to your instance with an interactive one-click browser-based shell or the AWS Command Line Interface (AWS CLI).\nContents\nCreate a key pair for your Amazon EC2 instance\nTag a key pair\nDescribe your key pairs\nDelete your key pair\nAdd or replace a public key on your Linux instance\nVerify the fingerprint of your key pair"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/create-key-pairs.html",
        "content": "You can use Amazon EC2 to create your key pairs, or you can use a third-party tool to create your key pairs, and then import them to Amazon EC2.\nAmazon EC2 supports 2048-bit SSH-2 RSA keys for Linux and Windows instances. Amazon EC2 also supports ED25519 keys for Linux instances.\nFor instructions on how to connect to your instance after you have created a key pair, see Connect to your Linux instance using SSH and Connect to your Windows instance using RDP.\nContents\nCreate a key pair using Amazon EC2\nCreate a key pair using AWS CloudFormation\nCreate a key pair using a third-party tool and import the public key to Amazon EC2\nCreate a key pair using Amazon EC2\nWhen you create a key pair using Amazon EC2, the public key is stored in Amazon EC2, and you store the private key.\nYou can create up to 5,000 key pairs per Region. To request an increase, create a support case. For more information, see Creating a support case in the Support User Guide.\nConsole\nAWS CLI\nPowerShell\nTo create a key pair using Amazon EC2\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, under Network & Security, choose Key Pairs.\nChoose Create key pair.\nFor Name, enter a descriptive name for the key pair. Amazon EC2 associates the public key with the name that you specify as the key name. A key name can include up to 255 ASCII characters. It can\u2019t include leading or trailing spaces.\nSelect a key pair type appropriate for your operating system:\n(Linux instances) For Key pair type, choose either RSA or ED25519.\n(Windows instances) For Key pair type, choose RSA. ED25519 keys are not supported for Windows instances.\nFor Private key file format, choose the format in which to save the private key. To save the private key in a format that can be used with OpenSSH, choose pem. To save the private key in a format that can be used with PuTTY, choose ppk.\nTo add a tag to the public key, choose Add tag, and enter the key and value for the tag. Repeat for each tag.\nChoose Create key pair.\nThe private key file is automatically downloaded by your browser. The base file name is the name that you specified as the name of your key pair, and the file name extension is determined by the file format that you chose. Save the private key file in a safe place.\nImportant\nThis is the only chance for you to save the private key file.\nIf you plan to use an SSH client on a macOS or Linux computer to connect to your Linux instance, use the following command to set the permissions of your private key file so that only you can read it.\nchmod 400 key-pair-name.pem\nIf you do not set these permissions, then you cannot connect to your instance using this key pair. For more information, see Error: Unprotected private key file.\nCreate a key pair using AWS CloudFormation\nWhen you create a new key pair using AWS CloudFormation, the private key is saved to AWS Systems Manager Parameter Store. The parameter name has the following format:\n/ec2/keypair/key_pair_id\nFor more information, see AWS Systems Manager Parameter Store in the AWS Systems Manager User Guide.\nTo create a key pair using AWS CloudFormation\nSpecify the AWS::EC2::KeyPair resource in your template.\nResources:\n  NewKeyPair:\n    Type: 'AWS::EC2::KeyPair'\n    Properties: \n      KeyName: new-key-pair\nUse the describe-key-pairs command as follows to get the ID of the key pair.\naws ec2 describe-key-pairs --filters Name=key-name,Values=new-key-pair --query KeyPairs[*].KeyPairId --output text\nThe following is example output.\nkey-05abb699beEXAMPLE\nUse the get-parameter command as follows to get the parameter for your key and save the key material in a .pem file.\naws ssm get-parameter --name /ec2/keypair/key-05abb699beEXAMPLE --with-decryption --query Parameter.Value --output text > new-key-pair.pem\nRequired IAM permissions\nTo enable AWS CloudFormation to manage Parameter Store parameters on your behalf, the IAM role assumed by AWS CloudFormation or your user must have the following permissions:\nssm:PutParameter \u2013 Grants permission to create a parameter for the private key material.\nssm:DeleteParameter \u2013 Grants permission to delete the parameter that stored the private key material. This permission is required whether the key pair was imported or created by AWS CloudFormation.\nWhen AWS CloudFormation deletes a key pair that was created or imported by a stack, it performs a permissions check to determine whether you have permission to delete parameters, even though AWS CloudFormation creates a parameter only when it creates a key pair, not when it imports a key pair. AWS CloudFormation tests for the required permission using a fabricated parameter name that does not match any parameter in your account. Therefore, you might see a fabricated parameter name in the AccessDeniedException error message.\nCreate a key pair using a third-party tool and import the public key to Amazon EC2\nInstead of using Amazon EC2 to create a key pair, you can create an RSA or ED25519 key pair by using a third-party tool and then import the public key to Amazon EC2.\nRequirements for key pairs\nSupported types:\n(Linux and Windows) RSA\n(Linux only) ED25519\nNote\nED25519 keys are not supported for Windows instances.\nAmazon EC2 does not accept DSA keys.\nSupported formats:\nOpenSSH public key format (for Linux, the format in ~/.ssh/authorized_keys)\n(Linux only) If you connect using SSH while using the EC2 Instance Connect API, the SSH2 format is also supported.\nSSH private key file format must be PEM or PPK\n(RSA only) Base64 encoded DER format\n(RSA only) SSH public key file format as specified in RFC 4716\nSupported lengths:\n1024, 2048, and 4096.\n(Linux only) If you connect using SSH while using the EC2 Instance Connect API, the supported lengths are 2048 and 4096.\nTo create a key pair using a third-party tool\nGenerate a key pair with a third-party tool of your choice. For example, you can use ssh-keygen (a tool provided with the standard OpenSSH installation). Alternatively, Java, Ruby, Python, and many other programming languages provide standard libraries that you can use to create a key pair.\nImportant\nThe private key must be in the PEM or PPK format. For example, use ssh-keygen -m PEM to generate the OpenSSH key in the PEM format.\nSave the public key to a local file. For example, ~/.ssh/my-key-pair.pub (Linux, macOS) or C:\\keys\\my-key-pair.pub (Windows). The file name extension for this file is not important.\nSave the private key to a local file that has the .pem or .ppk extension. For example, ~/.ssh/my-key-pair.pem or ~/.ssh/my-key-pair.ppk (Linux, macOS) or C:\\keys\\my-key-pair.pem or C:\\keys\\my-key-pair.ppk (Windows). The file extension is important because, depending on the tool you use to connect to your instance, you'll need a specific file format. OpenSSH requires a .pem file, while PuTTY requires a .ppk file.\nImportant\nSave the private key file in a safe place. You'll need to provide the name of your public key when you launch an instance, and the corresponding private key each time you connect to the instance.\nAfter you have created the key pair, use one of the following methods to import your public key to Amazon EC2.\nConsole\nAWS CLI\nPowerShell\nTo import the public key to Amazon EC2\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Key Pairs.\nChoose Import key pair.\nFor Name, enter a descriptive name for the public key. The name can include up to 255 ASCII characters. It can\u2019t include leading or trailing spaces.\nNote\nWhen you connect to your instance from the EC2 console, the console suggests this name for the name of your private key file.\nEither choose Browse to navigate to and select your public key, or paste the contents of your public key into the Public key contents field.\nChoose Import key pair.\nVerify that the public key that you imported appears in the list of key pairs."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/tag-key-pair.html",
        "content": "To help categorize and manage the key pairs that you've either created using Amazon EC2 or imported to Amazon EC2, you can tag them with custom metadata. For more information about how tags work, see Tag your Amazon EC2 resources.\nConsole\nAWS CLI\nPowerShell\nTo view, add, or delete a tag for a key pair\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Key Pairs.\nSelect a public key, and then choose Actions, Manage tags.\nThe Manage tags page displays any tags that are assigned to the public key.\nTo add a tag, choose Add tag, and then enter the tag key and value. You can add up to 50 tags per key. For more information, see Tag restrictions.\nTo delete a tag, choose Remove next to the tag to delete.\nChoose Save."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/describe-keys.html",
        "content": "You can describe the key pairs that you stored in Amazon EC2. You can also retrieve the public key material and identify the public key that was specified at launch.\nTopics\nDescribe your key pairs\nRetrieve the public key material\nIdentify the public key specified at launch\nDescribe your key pairs\nYou can view the following information about your public keys that are stored in Amazon EC2: public key name, ID, key type, fingerprint, public key material, the date and time (in the UTC time zone) the key was created by Amazon EC2 (if the key was created by a third-party tool, then it's the date and time the key was imported to Amazon EC2), and any tags that are associated with the public key.\nYou can use the Amazon EC2 console or AWS CLI to view information about your public keys.\nConsole\nAWS CLI\nTo view information about your public keys\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigator, choose Key Pairs.\nYou can view the information about each public key in the Key pairs table.\nTo view a public key's tags, select the checkbox next to the key, and then choose Actions, Manage tags.\nRetrieve the public key material\nYou can use various methods to get access to the public key material. You can retrieve the public key material from the matching private key on your local computer, from the instance metadata on the instance that was launched with the public key, or by using the describe-key-pairs AWS CLI command. For Linux instances, the public key material can also be retrieved from the authorized_keys file on the instance.\nUse one of the following methods to retrieve the public key material.\nLinux instances\nWindows instances\nIdentify the public key specified at launch\nIf you specify a public key when you launch an instance, the public key name is recorded by the instance.\nTo identify the public key that was specified at launch\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances, and then select your instance.\nOn the Details tab, under Instance details, the Key pair assigned at launch field displays the name of the public key that you specified when you launched the instance.\nNote\nThe value of the Key pair assigned at launch field does not change even if you change the public key on the instance, or add public keys."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/delete-key-pair.html",
        "content": "You can delete a key pair, which removes the public key that is stored in Amazon EC2. Deleting a key pair does not delete the matching private key.\nWhen you delete a public key using the following methods, you're only deleting the public key that you stored in Amazon EC2 when you created or imported the key pair. Deleting a public key doesn't remove the public key from any instances to which you've added it, either when you launched the instance or later. It also doesn't delete the private key on your local computer. You can continue to connect to instances that you launched using a public key that you've deleted from Amazon EC2 as long as you still have the private key (.pem) file.\nImportant\nIf you're using an Auto Scaling group (for example, in an Elastic Beanstalk environment), ensure that the public key you're deleting is not specified in an associated launch template or launch configuration. If Amazon EC2 Auto Scaling detects an unhealthy instance, it launches a replacement instance. However, the instance launch fails if the public key cannot be found. For more information, see Launch templates in the Amazon EC2 Auto Scaling User Guide.\nConsole\nAWS CLI\nPowerShell\nTo delete your public key on Amazon EC2\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Key Pairs.\nSelect the key pair to delete and choose Actions, Delete.\nIn the confirmation field, enter Delete and then choose Delete."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/replacing-key-pair.html",
        "content": "If you lose a private key, you lose access to any instances that use the key pair. For more information about connecting to an instance using a different key pair than the one that you specified at launch, see I've lost my private key.\nWhen you launch an instance, you can specify a key pair. If you specify a key pair at launch, when your instance boots for the first time, the public key material is placed on your Linux instance in an entry within ~/.ssh/authorized_keys.\nYou can change the key pair that is used to access the default system account of your instance by adding a new public key on the instance, or by replacing the public key (deleting the existing public key and adding a new one) on the instance. You can also remove all public keys from an instance. To add or replace a key pair, you must be able to connect to your instance.\nYou might add or replace a key pair for the following reasons:\nIf a user in your organization requires access to the system user using a separate key pair, you can add the public key to your instance.\nIf someone has a copy of the private key (.pem file) and you want to prevent them from connecting to your instance (for example, if they've left your organization), you can delete the public key on the instance and replace it with a new one.\nIf you create a Linux AMI from an instance, the public key material is copied from the instance to the AMI. If you launch an instance from the AMI, the new instance includes the public key from the original instance. To prevent someone who has the private key from connecting to the new instance, you can remove the public key from the original instance before creating the AMI.\nUse the following procedures to modify the key pair for the default user, such as ec2-user. For information about adding users to your instance, see the documentation for the operating system on your instance.\nTo add or replace a key pair\nCreate a new key pair using the Amazon EC2 console or a third-party tool.\nRetrieve the public key from your new key pair. For more information, see Retrieve the public key material.\nConnect to your instance using your existing private key.\nUsing a text editor of your choice, open the .ssh/authorized_keys file on the instance. Paste the public key information from your new key pair underneath the existing public key information. Save the file.\nDisconnect from your instance, and test that you can connect to your instance using the new private key file.\n(Optional) If you're replacing an existing key pair, connect to your instance and delete the public key information for the original key pair from the .ssh/authorized_keys file.\nImportant\nIf you're using an Auto Scaling group, ensure that the key pair you're replacing is not specified in your launch template or launch configuration. If Amazon EC2 Auto Scaling detects an unhealthy instance, it launches a replacement instance. However, the instance launch fails if the key pair cannot be found. For more information, see Launch templates in the Amazon EC2 Auto Scaling User Guide.\nTo remove a public key from an instance\nConnect to your instance.\nUsing a text editor of your choice, open the .ssh/authorized_keys file on the instance. Delete the public key information, and then save the file.\nWarning\nAfter you remove all the public keys from an instance and disconnect from the instance, you can't connect to it again unless the AMI provides another way of logging in."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/verify-keys.html",
        "content": "To verify the fingerprint of your key pair, compare the fingerprint displayed on the Key pairs page in the Amazon EC2 console, or returned by the describe-key-pairs command, with the fingerprint that you generate using the private key on your local computer. These fingerprints should match.\nWhen Amazon EC2 calculates a fingerprint, Amazon EC2 might append padding to the fingerprint with = characters. Other tools, such as ssh-keygen, might omit this padding.\nIf you're trying to verify the fingerprint of your Linux EC2 instance, not the fingerprint of your key pair, see Get the instance fingerprint.\nHow the fingerprints are calculated\nAmazon EC2 uses different hash functions to calculate the fingerprints for RSA and ED25519 key pairs. Furthermore, for RSA key pairs, Amazon EC2 calculates the fingerprints differently using different hash functions depending on whether the key pair was created by Amazon EC2 or imported to Amazon EC2.\nThe following table lists the hash functions that are used to calculate the fingerprints for RSA and ED25519 key pairs that are created by Amazon EC2 and imported to Amazon EC2.\n(Linux instances) Hash functions used to calculate fingerprints\nKey pair source RSA key pairs (Windows and Linux) ED25519 key pairs (Linux)\nCreated by Amazon EC2 SHA-1 SHA-256\nImported to Amazon EC2 MD5\u00b9 SHA-256\n\u00b9 If you import a public RSA key to Amazon EC2, the fingerprint is calculated using an MD5 hash function. This is true regardless of how you created the key pair, for example, by using a third-party tool or by generating a new public key from an existing private key created using Amazon EC2.\nWhen using the same key pair in different Regions\nIf you plan to use the same key pair to connect to instances in different AWS Regions, you must import the public key to all of the Regions in which you'll use it. If you use Amazon EC2 to create the key pair, you can Retrieve the public key material so that you can import the public key to the other Regions.\nNote\nIf you create an RSA key pair using Amazon EC2, and then you generate a public key from the Amazon EC2 private key, the imported public keys will have a different fingerprint than the original public key. This is because the fingerprint of the original RSA key created using Amazon EC2 is calculated using a SHA-1 hash function, while the fingerprint of the imported RSA keys is calculated using an MD5 hash function.\nFor ED25519 key pairs, the fingerprints will be same regardless of whether they\u2019re created by Amazon EC2 or imported to Amazon EC2, because the same SHA-256 hash function is used to calculate the fingerprint.\nGenerate a fingerprint from the private key\nUse one of the following commands to generate a fingerprint from the private key on your local machine.\nIf you're using a Windows local machine, you can run the following commands using the Windows Subsystem for Linux (WSL). Install the WSL and a Linux distribution using the instructions in the How to install Linux on Windows with WSL. The example in the instructions installs the Ubuntu distribution of Linux, but you can install any distribution. You are prompted to restart your computer for the changes to take effect.\nIf you created the key pair using Amazon EC2\nUse the OpenSSL tools to generate a fingerprint as shown in the following examples.\nFor RSA key pairs:\nopenssl pkcs8 -in path_to_private_key -inform PEM -outform DER -topk8 -nocrypt | openssl sha1 -c\n(Linux instances) For ED25519 key pairs:\nssh-keygen -l -f path_to_private_key\n(RSA key pairs only) If you imported the public key to Amazon EC2\nYou can follow this procedure regardless of how you created the key pair, for example, by using a third-party tool or by generating a new public key from an existing private key created using Amazon EC2\nUse the OpenSSL tools to generate the fingerprint as shown in the following example.\nopenssl rsa -in path_to_private_key -pubout -outform DER | openssl md5 -c\nIf you created an OpenSSH key pair using OpenSSH 7.8 or later and imported the public key to Amazon EC2\nUse ssh-keygen to generate the fingerprint as shown in the following examples.\nFor RSA key pairs:\nssh-keygen -ef path_to_private_key -m PEM | openssl rsa -RSAPublicKey_in -outform DER | openssl md5 -c\n(Linux instances) For ED25519 key pairs:\nssh-keygen -l -f path_to_private_key"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html",
        "content": "A security group acts as a virtual firewall for your EC2 instances to control incoming and outgoing traffic. Inbound rules control the incoming traffic to your instance, and outbound rules control the outgoing traffic from your instance. When you launch an instance, you can specify one or more security groups. If you don't specify a security group, Amazon EC2 uses the default security group for the VPC. After you launch an instance, you can change its security groups.\nSecurity is a shared responsibility between AWS and you. For more information, see Security in Amazon EC2. AWS provides security groups as one of the tools for securing your instances, and you need to configure them to meet your security needs. If you have requirements that aren't fully met by security groups, you can maintain your own firewall on any of your instances in addition to using security groups.\nPricing\nThere is no additional charge for using security groups.\nContents\nOverview\nCreate a security group for your Amazon EC2 instance\nChange the security groups for your Amazon EC2 instance\nDelete an Amazon EC2 security group\nAmazon EC2 security group connection tracking\nSecurity group rules for different use cases\nOverview\nA security group can be used only in the VPC for which it is created. You can associate each instance with multiple security groups, and you can associate each security group with multiple instances. You add rules to each security group that allow traffic to or from its associated instances. You can modify the rules for a security group at any time. New and modified rules are automatically applied to all instances that are associated with the security group. When Amazon EC2 decides whether to allow traffic to reach an instance, it evaluates all rules from all security groups that are associated with the instance. For more information, see Security group rules in the Amazon VPC User Guide.\nThe following diagram shows a VPC with a subnet, an internet gateway, and a security group. The subnet contains EC2 instances. The security group is associated with the instances. The only traffic that reaches the instance is the traffic allowed by the security group rules. For example, if the security group contains a rule that allows SSH traffic from your network, then you can connect to your instance from your computer using SSH. If the security group contains a rule that allows all traffic from the resources associated with it, then each instance can receive any traffic sent from the other instances.\nSecurity groups are stateful\u2014if you send a request from your instance, the response traffic for that request is allowed to flow in regardless of inbound security group rules. Also, responses to allowed inbound traffic are allowed to flow out, regardless of outbound rules. For more information, see Connection tracking."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-security-group.html",
        "content": "Security groups act as a firewall for associated instances, controlling both inbound and outbound traffic at the instance level. You can add rules to a security group that enable you to connect to your instance using SSH (Linux instances) or RDP (Windows instances). You can also add rules that allow client traffic, for example, HTTP and HTTPS traffic destined to a web server.\nYou can associate a security group with an instance when you launch the instance. When you add or remove rules from associated security groups, those changes are automatically applied to all instances to which you've associated the security group.\nAfter you launch an instance, you can associate additional security groups. For more information, see Change the security groups for your Amazon EC2 instance.\nYou can add inbound and outbound security group rules when you create a security group or you can add them later on. For more information, see Configure security group rules. For examples of rules that you can add to a security group, see Security group rules for different use cases.\nConsiderations\nBy default, new security groups start with only an outbound rule that allows all traffic to leave the resource. You must add rules to enable any inbound traffic or to restrict the outbound traffic.\nWhen configuring a source for a rule that allows SSH or RDP access to your instances, do not allow access from anywhere, because it would allow this access to your instance from all IP addresses on the internet. This is acceptable for a short time in a test environment, but it is unsafe for production environments.\nIf there is more than one rule for a specific port, Amazon EC2 applies the most permissive rule. For example, if you have a rule that allows access to TCP port 22 (SSH) from IP address 203.0.113.1, and another rule that allows access to TCP port 22 from anywhere, then everyone has access to TCP port 22.\nYou can associate multiple security groups with an instance. Therefore, an instance can have hundreds of rules that apply. This might cause problems when you access the instance. We recommend that you condense your rules as much as possible.\nWhen you specify a security group as the source or destination for a rule, the rule affects all instances that are associated with the security group. Incoming traffic is allowed based on the private IP addresses of the instances that are associated with the source security group (and not the public IP or Elastic IP addresses). For more information about IP addresses, see Amazon EC2 instance IP addressing.\nAmazon EC2 blocks traffic on port 25 by default. For more information, see Restriction on email sent using port 25.\nTo create a security group using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Security Groups.\nChoose Create security group.\nEnter a descriptive name and brief description for the security group. You can't change the name and description of a security group after it is created.\nFor VPC, choose the VPC in which you'll run your Amazon EC2 instances.\n(Optional) To add inbound rules, choose Inbound rules. For each rule, choose Add rule and specify the protocol, port, and source. For example, to allow SSH traffic, choose SSH for Type and specify the public IPv4 address of your computer or network for Source.\n(Optional) To add outbound rules, choose Outbound rules. For each rule, choose Add rule and specify the protocol, port, and destination. Otherwise, you can keep the default rule, which allows all outbound traffic.\n(Optional) To add a tag, choose Add new tag and enter the tag key and value.\nChoose Create security group.\nTo create a security group using the command line\ncreate-security-group (AWS CLI)\nNew-EC2SecurityGroup (AWS Tools for Windows PowerShell)"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/changing-security-group.html",
        "content": "You can specify security groups for your Amazon EC2 instances when you launch them. After you launch an instance, you can add or remove security groups. You can also add, remove, or edit security group rules for associated security groups at any time.\nSecurity groups are associated with network interfaces. Adding or removing security groups changes the security groups associated with the primary network interface. You can also change the security groups associated with any secondary network interfaces. For more information, see Modify network interface attributes.\nTasks\nAdd or remove security groups\nConfigure security group rules\nAdd or remove security groups\nAfter you launch an instance, you can add or remove security groups from the list of associated security groups. When you associate multiple security groups with an instance, the rules from each security group are effectively aggregated to create one set of rules. Amazon EC2 uses this set of rules to determine whether to allow traffic.\nRequirements\nThe instance must be in the running or stopped state.\nA security group is specific to a VPC. You can associate a security group with one or more instances.\nTo change the security groups for an instance using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect your instance, and then choose Actions, Security, Change security groups.\nFor Associated security groups, select a security group from the list and choose Add security group.\nTo remove an already associated security group, choose Remove for that security group.\nChoose Save.\nTo change the security groups for an instance using the command line\nmodify-instance-attribute (AWS CLI)\nEdit-EC2InstanceAttribute (AWS Tools for Windows PowerShell)\nConfigure security group rules\nAfter you create a security group, you can add, update, and delete its security group rules. When you add, update, or delete a rule, the change is automatically applied to the resources that are associated with the security group.\nFor examples of rules that you can add to a security group, see Security group rules for different use cases.\nSources and destinations\nYou can specify the following as sources for inbound rules or destinations for outbound rules.\nCustom \u2013 A IPv4 CIDR block, and IPv6 CIDR block, another security group, or a prefix list.\nAnywhere-IPv4 \u2013 The 0.0.0.0/0 IPv4 CIDR block.\nAnywhere-IPv6 \u2013 The ::/0 IPv6 CIDR block.\nMy IP \u2013 The public IPv4 address of your local computer.\nWarning\nIf you add inbound rules for ports 22 (SSH) or 3389 (RDP), we strongly recommend that you authorize only the specific IP address or range of addresses that need access to your instances. If you choose Anywhere-IPv4, you allow traffic from all IPv4 addresses to access your instances using the specified protocol. If you choose Anywhere-IPv6, you allow traffic from all IPv6 addresses to access your instances using the specified protocol.\nTo configure security group rules using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Security Groups.\nSelect the security group.\nTo edit the inbound rules, choose Edit inbound rules from Actions or the Inbound rules tab.\nTo add a rule, choose Add rule and enter the type, protocol, port, and source for the rule.\nIf the type is TCP or UDP, you must enter the port range to allow. For custom ICMP, you must choose the ICMP type name from Protocol, and, if applicable, the code name from Port range. For any other type, the protocol and port range are configured for you.\nTo update a rule, change its protocol, description, and source as needed. However, you can't change the source type. For example, if the source is an IPv4 CIDR block, you can't specify an IPv6 CIDR block, a prefix list, or a security group.\nTo delete a rule, choose its Delete button.\nTo edit the outbound rules, choose Edit outbound rules from Actions or the Outbound rules tab.\nTo add a rule, choose Add rule and enter the type, protocol, port, and destination for the rule. You can also enter an optional description.\nIf the type is TCP or UDP, you must enter the port range to allow. For custom ICMP, you must choose the ICMP type name from Protocol, and, if applicable, the code name from Port range. For any other type, the protocol and port range are configured for you.\nTo update a rule, change its protocol, description, and source as needed. However, you can't change the source type. For example, if the source is an IPv4 CIDR block, you can't specify an IPv6 CIDR block, a prefix list, or a security group.\nTo delete a rule, choose its Delete button.\nChoose Save rules.\nTo configure security group rules using the AWS CLI\nAdd \u2013 Use the authorize-security-group-ingress and authorize-security-group-egress commands.\nRemove \u2013 Use the revoke-security-group-ingress and revoke-security-group-egress commands.\nModify \u2013 Use the modify-security-group-rules, update-security-group-rule-descriptions-ingress, and update-security-group-rule-descriptions-egresscommands.\nTo configure security group rules using the Tools for Windows PowerShell\nAdd \u2013 Use Grant-EC2SecurityGroupIngress and Grant-EC2SecurityGroupEgress.\nRemove \u2013 Use Revoke-EC2SecurityGroupIngress and Revoke-EC2SecurityGroupEgress.\nModify \u2013 Use Edit-EC2SecurityGroupRule, Update-EC2SecurityGroupRuleIngressDescription, and Update-EC2SecurityGroupRuleEgressDescription."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/deleting-security-group.html",
        "content": "When you are finished with a security group that you created for use with your Amazon EC2 instances, you can delete it.\nRequirements\nThe security group can't be associated with an instance or network interface.\nThe security group can't be referenced by a rule in another security group.\nTo delete a security group using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\n(Optional) To verify that your security group is not associated with an instance, do the following:\nIn the navigation pane, choose Security Groups.\nCopy the ID of the security group to delete.\nIn the navigation pane, choose Instances.\nIn the search bar, add Security group IDs equals filter and paste the ID of the security group. If there are no results, then the security group is not associated with an instance. Otherwise, you must disassociate the security group before you can delete it.\nIn the navigation pane, choose Security Groups.\nSelect the security group and choose Actions, Delete security groups.\nIf you selected more than one security group, you are prompted for confirmation. If some of the security groups can't be deleted, we display the status of each security group, which indicates whether it will be deleted. To confirm deletion, enter Delete.\nChoose Delete.\nTo delete a security group using the command line\ndelete-security-group (AWS CLI)\nRemove-EC2SecurityGroup (AWS Tools for Windows PowerShell)"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-connection-tracking.html",
        "content": "Your security groups use connection tracking to track information about traffic to and from the instance. Rules are applied based on the connection state of the traffic to determine if the traffic is allowed or denied. With this approach, security groups are stateful. This means that responses to inbound traffic are allowed to flow out of the instance regardless of outbound security group rules, and vice versa.\nAs an example, suppose that you initiate a command such as netcat or similar to your instances from your home computer, and your inbound security group rules allow ICMP traffic. Information about the connection (including the port information) is tracked. Response traffic from the instance for the command is not tracked as a new request, but rather as an established connection, and is allowed to flow out of the instance, even if your outbound security group rules restrict outbound ICMP traffic.\nFor protocols other than TCP, UDP, or ICMP, only the IP address and protocol number is tracked. If your instance sends traffic to another host, and the host sends the same type of traffic to your instance within 600 seconds, the security group for your instance accepts it regardless of inbound security group rules. The security group accepts it because it\u2019s regarded as response traffic for the original traffic.\nWhen you change a security group rule, its tracked connections are not immediately interrupted. The security group continues to allow packets until existing connections time out. To ensure that traffic is immediately interrupted, or that all traffic is subject to firewall rules regardless of the tracking state, you can use a network ACL for your subnet. Network ACLs are stateless and therefore do not automatically allow response traffic. Adding a network ACL that blocks traffic in either direction breaks existing connections. For more information, see Network ACLs in the Amazon VPC User Guide.\nNote\nSecurity groups have no effect on DNS traffic to or from the Route 53 Resolver, sometimes referred to as the 'VPC+2 IP address' (see What is Amazon Route 53 Resolver? in the Amazon Route 53 Developer Guide), or the \u2018AmazonProvidedDNS\u2019 (see Work with DHCP option sets in the Amazon Virtual Private Cloud User Guide). If you wish to filter DNS requests through the Route 53 Resolver, you can enable Route 53 Resolver DNS Firewall (see Route 53 Resolver DNS Firewall in the Amazon Route 53 Developer Guide).\nUntracked connections\nNot all flows of traffic are tracked. If a security group rule permits TCP or UDP flows for all traffic (0.0.0.0/0 or ::/0) and there is a corresponding rule in the other direction that permits all response traffic (0.0.0.0/0 or ::/0) for any port (0-65535), then that flow of traffic is not tracked, unless it is part of an automatically tracked connection. The response traffic for an untracked flow is allowed based on the inbound or outbound rule that permits the response traffic, not based on tracking information.\nAn untracked flow of traffic is immediately interrupted if the rule that enables the flow is removed or modified. For example, if you have an open (0.0.0.0/0) outbound rule, and you remove a rule that allows all (0.0.0.0/0) inbound SSH (TCP port 22) traffic to the instance (or modify it such that the connection would no longer be permitted), your existing SSH connections to the instance are immediately dropped. The connection was not previously being tracked, so the change will break the connection. On the other hand, if you have a narrower inbound rule that initially allows an SSH connection (meaning that the connection was tracked), but change that rule to no longer allow new connections from the address of the current SSH client, the existing SSH connection is not interrupted because it is tracked.\nAutomatically tracked connections\nConnections made through the following are automatically tracked, even if the security group configuration does not otherwise require tracking:\nEgress-only internet gateways\nGlobal Accelerator accelerators\nNAT gateways\nNetwork Firewall firewall endpoints\nNetwork Load Balancers\nAWS PrivateLink (interface VPC endpoints)\nAWS Lambda (Hyperplane elastic network interfaces)\nConnection tracking allowances\nAmazon EC2 defines the maximum number of connections that can be tracked per instance. After the maximum is reached, any packets that are sent or received are dropped because a new connection cannot be established. When this happens, applications that send and receive packets cannot communicate properly. Use the conntrack_allowance_available network performance metric to determine the number of tracked connections still available for that instance type.\nTo determine whether packets were dropped because the network traffic for your instance exceeded the maximum number of connections that can be tracked, use the conntrack_allowance_exceeded network performance metric. For more information, see Monitor network performance for ENA settings on your EC2 instance.\nWith Elastic Load Balancing, if you exceed the maximum number of connections that can be tracked per instance, we recommend that you scale either the number of instances registered with the load balancer or the size of the instances registered with the load balancer.\nConnection tracking performance considerations\nAsymmetric routing, where traffic comes into an instance through one network interface and leaves through a different network interface, can reduce the peak performance that an instance can achieve if flows are tracked.\nTo maintain peak performance when connection tracking is enabled for your security groups, we recommend the following configuration:\nAvoid asymmetric routing topologies, if possible.\nInstead of using security groups for filtering, use network ACLs.\nIf you must use security groups with connection tracking, configure the shortest idle connection tracking timeout possible. For more details on idle connection tracking timeout, see the following section.\nFor more information about performance tuning on the Nitro system, see Nitro system considerations for performance tuning.\nIdle connection tracking timeout\nThe security group tracks each connection established to ensure that return packets are delivered as expected. There is a maximum number of connections that can be tracked per instance. Connections that remain idle can lead to connection tracking exhaustion and cause connections not to be tracked and packets to be dropped. You can set the timeout for idle connection tracking on an Elastic network interface.\nNote\nThis feature is available only with Nitro-based instances.\nThere are three configurable timeouts:\nTCP established timeout: Timeout (in seconds) for idle TCP connections in an established state. Min: 60 seconds. Max: 432000 seconds (5 days). Default: 432000 seconds. Recommended: Less than 432000 seconds.\nUDP timeout: Timeout (in seconds) for idle UDP flows that have seen traffic only in a single direction or a single request-response transaction. Min: 30 seconds. Max: 60 seconds. Default: 30 seconds.\nUDP stream timeout: Timeout (in seconds) for idle UDP flows classified as streams which have seen more than one request-response transaction. Min: 60 seconds. Max: 180 seconds (3 minutes). Default: 180 seconds.\nYou may want to modify the default timeouts for any of the following cases:\nIf you are monitoring tracked connections using Amazon EC2 network performance metrics, the conntrack_allowance_exceeded and conntrack_allowance_available metrics enable you to monitor dropped packets and tracked connection utilization to proactively manage EC2 instance capacity with scale up or out actions to help meet network connections demand before dropping packets. If you are observing conntrack_allowance_exceeded drops on your EC2 instances, you may benefit from setting a lower TCP established timeout to account for stale TCP/UDP sessions resulting from improper clients or network middle boxes.\nTypically, load balancers or firewalls have TCP Established idle timeout in the range of 60 to 90 minutes. If you are running workloads that are expected to handle a very high number of connections (greater than 100k) from appliances like network firewalls, configuring a similar timeout on an EC2 network interface is advised.\nIf you are running a workload that utilizes an asymmetric routing topology, we recommend that you configure a TCP Established idle timeout of 60 seconds.\nIf you are running workloads with high numbers of connections like DNS, SIP, SNMP, Syslog, Radius and other services that primarily use UDP to serve requests, setting the \u2018UDP-stream\u2019 timeout to 60s provides higher scale/performance for existing capacity and to prevent gray failures.\nFor TCP/UDP connections through network load balancers (NLBs) and elastic load balancers (ELB), all connections are tracked. Idle timeout value for TCP flows is 350secs and UDP flows is 120 secs, and varies from interface level timeout values. You may want to configure timeouts at the network interface level to allow for more flexibility for timeout than the defaults for ELB/NLB.\nYou have the option to configure the connection tracking timeouts when you do the following:\nCreate a network interface\nModify network interface attributes\nLaunch an EC2 instance\nCreate an EC2 instance launch template\nExample\nIn the following example, the security group has inbound rules that allow TCP and ICMP traffic, and outbound rules that allow all outbound traffic.\nInbound\nProtocol type Port number Source\nTCP 22 (SSH) 203.0.113.1/32\nTCP 80 (HTTP) 0.0.0.0/0\nTCP 80 (HTTP) ::/0\nICMP All 0.0.0.0/0\nOutbound\nProtocol type Port number Destination\nAll All 0.0.0.0/0\nAll All ::/0\nWith a direct network connection to the instance or network interface, the tracking behavior is as follows:\nInbound and outbound TCP traffic on port 22 (SSH) is tracked, because the inbound rule allows traffic from 203.0.113.1/32 only, and not all IP addresses (0.0.0.0/0).\nInbound and outbound TCP traffic on port 80 (HTTP) is not tracked, because the inbound and outbound rules allow traffic from all IP addresses.\nICMP traffic is always tracked.\nIf you remove the outbound rule for IPv4 traffic, all inbound and outbound IPv4 traffic is tracked, including traffic on port 80 (HTTP). The same applies for IPv6 traffic if you remove the outbound rule for IPv6 traffic."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html",
        "content": "You can create a security group and add rules that reflect the role of the instance that's associated with the security group. For example, an instance that's configured as a web server needs security group rules that allow inbound HTTP and HTTPS access. Likewise, a database instance needs rules that allow access for the type of database, such as access over port 3306 for MySQL.\nThe following are examples of the kinds of rules that you can add to security groups for specific kinds of access.\nExamples\nWeb server rules\nDatabase server rules\nRules to connect to instances from your computer\nRules to connect to instances from an instance with the same security group\nRules for ping/ICMP\nDNS server rules\nAmazon EFS rules\nElastic Load Balancing rules\nFor instructions, see Create a security group and Configure security group rules.\nWeb server rules\nThe following inbound rules allow HTTP and HTTPS access from any IP address. If your VPC is enabled for IPv6, you can add rules to control inbound HTTP and HTTPS traffic from IPv6 addresses.\nProtocol type Protocol number Port Source IP Notes\nTCP 6 80 (HTTP) 0.0.0.0/0 Allows inbound HTTP access from any IPv4 address\nTCP 6 443 (HTTPS) 0.0.0.0/0 Allows inbound HTTPS access from any IPv4 address\nTCP 6 80 (HTTP) ::/0 Allows inbound HTTP access from any IPv6 address\nTCP 6 443 (HTTPS) ::/0 Allows inbound HTTPS access from any IPv6 address\nDatabase server rules\nThe following inbound rules are examples of rules you might add for database access, depending on what type of database you're running on your instance. For more information about Amazon RDS instances, see the Amazon RDS User Guide.\nFor the source IP, specify one of the following:\nA specific IP address or range of IP addresses (in CIDR block notation) in your local network\nA security group ID for a group of instances that access the database\nProtocol type Protocol number Port Notes\nTCP 6 1433 (MS SQL) The default port to access a Microsoft SQL Server database, for example, on an Amazon RDS instance\nTCP 6 3306 (MYSQL/Aurora) The default port to access a MySQL or Aurora database, for example, on an Amazon RDS instance\nTCP 6 5439 (Redshift) The default port to access an Amazon Redshift cluster database.\nTCP 6 5432 (PostgreSQL) The default port to access a PostgreSQL database, for example, on an Amazon RDS instance\nTCP 6 1521 (Oracle) The default port to access an Oracle database, for example, on an Amazon RDS instance\nYou can optionally restrict outbound traffic from your database servers. For example, you might want to allow access to the internet for software updates, but restrict all other kinds of traffic. You must first remove the default outbound rule that allows all outbound traffic.\nProtocol type Protocol number Port Destination IP Notes\nTCP 6 80 (HTTP) 0.0.0.0/0 Allows outbound HTTP access to any IPv4 address\nTCP 6 443 (HTTPS) 0.0.0.0/0 Allows outbound HTTPS access to any IPv4 address\nTCP 6 80 (HTTP) ::/0 (IPv6-enabled VPC only) Allows outbound HTTP access to any IPv6 address\nTCP 6 443 (HTTPS) ::/0 (IPv6-enabled VPC only) Allows outbound HTTPS access to any IPv6 address\nRules to connect to instances from your computer\nTo connect to your instance, your security group must have inbound rules that allow SSH access (for Linux instances) or RDP access (for Windows instances).\nProtocol type Protocol number Port Source IP\nTCP 6 22 (SSH) The public IPv4 address of your computer, or a range of IP addresses in your local network. If your VPC is enabled for IPv6 and your instance has an IPv6 address, you can enter an IPv6 address or range.\nTCP 6 3389 (RDP) The public IPv4 address of your computer, or a range of IP addresses in your local network. If your VPC is enabled for IPv6 and your instance has an IPv6 address, you can enter an IPv6 address or range.\nRules to connect to instances from an instance with the same security group\nTo allow instances that are associated with the same security group to communicate with each other, you must explicitly add rules for this.\nNote\nIf you configure routes to forward the traffic between two instances in different subnets through a middlebox appliance, you must ensure that the security groups for both instances allow traffic to flow between the instances. The security group for each instance must reference the private IP address of the other instance, or the CIDR range of the subnet that contains the other instance, as the source. If you reference the security group of the other instance as the source, this does not allow traffic to flow between the instances.\nThe following table describes the inbound rule for a security group that enables associated instances to communicate with each other. The rule allows all types of traffic.\nProtocol type Protocol number Ports Source IP\n-1 (All) -1 (All) -1 (All) The ID of the security group, or the CIDR range of the subnet that contains the other instance (see note).\nRules for ping/ICMP\nThe ping command is a type of ICMP traffic. To ping your instance, you must add one of the following inbound ICMP rules.\nType Protocol Source\nCustom ICMP - IPv4 Echo request The public IPv4 address of your computer, a specific IPv4 address, or an IPv4 or IPv6 address from anywhere.\nAll ICMP - IPv4 IPv4 ICMP (1) The public IPv4 address of your computer, a specific IPv4 address, or an IPv4 or IPv6 address from anywhere.\nTo use the ping6 command to ping the IPv6 address for your instance, you must add the following inbound ICMPv6 rule.\nType Protocol Source\nAll ICMP - IPv6 IPv6 ICMP (58) The IPv6 address of your computer, a specific IPv4 address, or an IPv4 or IPv6 address from anywhere.\nDNS server rules\nIf you've set up your EC2 instance as a DNS server, you must ensure that TCP and UDP traffic can reach your DNS server over port 53.\nFor the source IP, specify one of the following:\nAn IP address or range of IP addresses (in CIDR block notation) in a network\nThe ID of a security group for the set of instances in your network that require access to the DNS server\nProtocol type Protocol number Port\nTCP 6 53\nUDP 17 53\nAmazon EFS rules\nIf you're using an Amazon EFS file system with your Amazon EC2 instances, the security group that you associate with your Amazon EFS mount targets must allow traffic over the NFS protocol.\nProtocol type Protocol number Ports Source IP Notes\nTCP 6 2049 (NFS) The ID of the security group Allows inbound NFS access from resources (including the mount target) associated with this security group\nTo mount an Amazon EFS file system on your Amazon EC2 instance, you must connect to your instance. Therefore, the security group associated with your instance must have rules that allow inbound SSH from your local computer or local network.\nProtocol type Protocol number Ports Source IP Notes\nTCP 6 22 (SSH) The IP address range of your local computer, or the range of IP addresses (in CIDR block notation) for your network. Allows inbound SSH access from your local computer.\nElastic Load Balancing rules\nIf you register your EC2 instances with a load balancer, the security group associated with your load balancer must allow communication with the instances. For more information, see the following in the Elastic Load Balancing documentation.\nSecurity groups for your Application Load Balancer\nSecurity groups for your Network Load Balancer\nConfigure security groups for your Classic Load Balancer"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html",
        "content": "Nitro Trusted Platform Module (NitroTPM) is a virtual device that is provided by the AWS Nitro System and conforms to the TPM 2.0 specification. It securely stores artifacts (such as passwords, certificates, or encryption keys) that are used to authenticate the instance. NitroTPM can generate keys and use them for cryptographic functions (such as hashing, signing, encryption, and decryption).\nNitroTPM provides measured boot, a process where the bootloader and operating system create cryptographic hashes of every boot binary and combine them with the previous values in NitroTPM internal Platform Configuration Registers (PCRs). With measured boot, you can obtain signed PCR values from NitroTPM and use them to prove to remote entities the integrity of the instance's boot software. This is known as remote attestation.\nWith NitroTPM, keys and secrets can be tagged with a specific PCR value so that they can never be accessed if the value of the PCR, and thus the instance integrity, changes. This special form of conditional access is referred to as sealing and unsealing. Operating system technologies, like BitLocker, can use NitroTPM to seal a drive decryption key so that the drive can only be decrypted when the operating system has booted correctly and is in a known good state.\nTo use NitroTPM, you must select an Amazon Machine Image (AMI) that has been configured for NitroTPM support, and then use the AMI to launch Nitro-based instances. You can select one of Amazon's prebuilt AMIs or create one yourself.\nPricing\nThere is no additional cost for using NitroTPM. You pay only for the underlying resources that you use.\nContents\nRequirements\nEnable a Linux AMI for NitroTPM\nVerify that an AMI is enabled for NitroTPM\nEnable or stop using NitroTPM\nVerify that an instance is enabled for NitroTPM\nRetrieve the public endorsement key"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/enable-nitrotpm-prerequisites.html",
        "content": "To launch an instance with NitroTPM enabled, you must meet the following requirements.\nTopics\nAMIs\nInstance types\nConsiderations\nAMIs\nThe AMI must have NitroTPM enabled.\nLinux AMIs\nThere are no preconfigured AMIs. You must configure your own AMI. For more information, see Enable a Linux AMI for NitroTPM.\nWindows AMIs\nThe following Windows AMIs are preconfigured to enable NitroTPM and UEFI Secure Boot with Microsoft keys:\nTPM-Windows_Server-2025-English-Core-Base\nTPM-Windows_Server-2025-English-Full-Base\nTPM-Windows_Server-2022-English-Core-Base\nTPM-Windows_Server-2022-English-Full-Base\nTPM-Windows_Server-2022-English-Full-SQL_2022_Enterprise\nTPM-Windows_Server-2022-English-Full-SQL_2022_Standard\nTPM-Windows_Server-2019-English-Core-Base\nTPM-Windows_Server-2019-English-Full-Base\nTPM-Windows_Server-2019-English-Full-SQL_2019_Enterprise\nTPM-Windows_Server-2019-English-Full-SQL_2019_Standard\nTPM-Windows_Server-2016-English-Core-Base\nTPM-Windows_Server-2016-English-Full-Base\nNote\nOperating system \u2014 The AMI must include an operating system with a TPM 2.0 Command Response Buffer (CRB) driver. Most current operating systems include a TPM 2.0 CRB driver.\nUEFI boot mode \u2014 The AMI must be configured for UEFI boot mode. For more information, see UEFI Secure Boot for Amazon EC2 instances.\nInstance types\nYou must use one of the following virtualized instance types:\nGeneral purpose: M5, M5a, M5ad, M5d, M5dn, M5n, M5zn, M6a, M6g, M6gd, M6i, M6id, M6idn, M6in, M7a, M7g, M7gd, M7i, M7i-flex, M8g, T3, T3a, T4g\nCompute optimized: C5, C5a, C5ad, C5d, C5n, C6a, C6g, C6gd, C6gn, C6i, C6id, C6in, C7a, C7g, C7gd, C7gn, C7i, C7i-flex, C8g\nMemory optimized: R5, R5a, R5ad, R5b, R5d, R5dn, R5n, R6a, R6g, R6gd, R6i, R6idn, R6in, R6id, R7a, R7g, R7gd, R7i, R7iz, R8g, X2idn, X2iedn, X2iezn, X8g, z1d\nStorage optimized: D3, D3en, I3en, I4i, I7ie, I8g\nAccelerated computing: F2, G4dn, G5, G6, G6e, Gr6, Inf1, Inf2, P5e\nHigh-performance computing: Hpc6a, Hpc6id\nConsiderations\nThe following considerations apply when using NitroTPM:\nAfter you launch an instance using an AMI with NitroTPM enabled, if you want to change the instance type, the new instance type that you choose must also support NitroTPM.\nBitLocker volumes that are encrypted with NitroTPM-based keys can only be used on the original instance.\nThe NitroTPM state is not displayed in the Amazon EC2 console.\nThe NitroTPM state is not included in Amazon EBS snapshots.\nThe NitroTPM state is not included in VM Import/Export images.\nNitroTPM is not supported on AWS Outposts., Local Zones, or Wavelength Zones."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/enable-nitrotpm-support-on-ami.html",
        "content": "To enable NitroTPM for an instance, you must launch the instance using an AMI with NitroTPM enabled. You must configure your Linux AMI with NitroTPM support when you register it. You can't configure NitroTPM support later on.\nFor the list of Windows AMIs that are preconfigured for NitroTPM support, see Requirements for using NitroTPM with Amazon EC2 instances.\nYou must create an AMI with NitroTPM configured by using the RegisterImage API. You can't use the Amazon EC2 console or VM Import/Export.\nTo enable a Linux AMI for NitroTPM\nLaunch a temporary instance with your required Linux AMI. Note the ID of its root volume, which you can find in the console on the Storage tab for the instance.\nAfter the instance reaches the running state, create a snapshot of the instance's root volume. You can use the console or the following create-snapshot command.\naws ec2 create-snapshot  \\\n    --volume-id vol-1234567890EXAMPLE \\\n    --description \"Snapshot of the root volume\"\nRegister the snapshot you created as an AMI. You must use the register-image command. For --tpm-support, specify v2.0. For --boot-mode, specify uefi. In the block device mapping, specify the snapshot that you created for the root volume.\naws ec2 register-image \\\n    --name my-image \\\n    --boot-mode uefi \\\n    --architecture x86_64 \\\n    --root-device-name /dev/xvda \\\n    --block-device-mappings DeviceName=/dev/xvda,Ebs={SnapshotId=snapshot_id} \\\n    --tpm-support v2.0\nThe following is example output.\n{\n    \"ImageId\": \"ami-0123456789example\"\n}\nTerminate the temporary instance that you launched in step 1."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/verify-nitrotpm-support-on-ami.html",
        "content": "To enable NitroTPM for an instance, you must launch the instance using an AMI with NitroTPM enabled. You can use either describe-images or describe-image-attributes to verify that an AMI is enabled for NitroTPM. If NitroTPM is enabled for the AMI, the value for TpmSupport is \"v2.0\".\nTo describe the image\nYou can use the describe-images command as follows.\naws ec2 describe-images --image-ids ami-0123456789example --query Images[*].TpmSupport\nIf NitroTPM is enabled for the AMI, the output is as follows.\n[\n    \"v2.0\"\n]\nIf TPM is not enabled, the output is empty.\n[\n]\nTo describe the image attribute\nAlternatively, if you are the AMI owner, you can use the describe-image-attribute command as follows, specifying tpmSupport as the attribute.\naws ec2 describe-image-attribute \\\n    --region us-east-1 \\\n    --image-id ami-0123456789example \\\n    --attribute tpmSupport\nThe following is example output.\n{\n    \"ImageId\": \"ami-0123456789example\",\n    \"TpmSupport\": {\n        \"Value\": \"v2.0\"\n    }\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm-instance.html",
        "content": "You can enable an Amazon EC2 instance for NitroTPM only at launch. Once an instance is enabled for NitroTPM, you can't disable it. If you no longer need to use NitroTPM, you must configure the operating system to stop using it.\nTopics\nLaunch an instance with NitroTPM enabled\nStop using NitroTPM on an instance\nLaunch an instance with NitroTPM enabled\nWhen you launch an instance with the prerequisites, NitroTPM is automatically enabled on the instance. You can enable NitroTPM on an instance only at launch. For information about launching an instance, see Launch an Amazon EC2 instance.\nStop using NitroTPM on an instance\nAfter launching an instance with NitroTPM enabled, you can't disable NitroTPM for the instance. However, you can configure the operating system to stop using NitroTPM by disabling the TPM 2.0 device driver on the instance by using the following tools:\nFor Linux instances, use tpm-tools.\nFor Windows instances, use the TPM management console (tpm.msc).\nFor more information about disabling the device driver, see the documentation for your operating system."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/verify-nitrotpm-support-on-instance.html",
        "content": "You can use one of the following methods to verify whether an Amazon EC2 instance is enabled for NitroTPM.\nTo verify whether an instance is enabled for NitroTPM\nUse the describe-instances command and specify the instance ID. The Amazon EC2 console does not display the TpmSupport field.\naws ec2 describe-instances --instance-ids i-0123456789example\nIf NitroTPM support is enabled on the instance, \"TpmSupport\": \"v2.0\" appears in the output. For example:\n\"Instances\": {\n  \"InstanceId\":\"0123456789example\",\n  \"InstanceType\":\"c5.large\",\n  ...\n  \"BootMode\": \"uefi\",\n  \"TpmSupport\": \"v2.0\"\n  ... \n}\n(Windows instances only) To verify whether the NitroTPM is accessible to Windows\nConnect to your EC2 Windows instance.\nOn the instance, run the tpm.msc program.\nThe TPM Management on Local Computer window opens.\nCheck the TPM Manufacturer Information field. It contains the manufacturer's name and the version of the NitroTPM on the instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/retrieve-ekpub.html",
        "content": "You can securely retrieve the public endorsement key for an instance at any time using the AWS CLI.\nTo retrieve the public endorsement key for an instance\nUse the get-instance-tpm-ek-pub command.\nExample 1\nThe following example command gets the rsa-2048 public endorsement key in tpmt format for the specified instance.\naws ec2 get-instance-tpm-ek-pub \\--instance-id i-01234567890abcdef \\\n--key-format tpmt \\ \n--key-type rsa-2048\nThe following is the example output.\n{\n    \"InstanceId\": \"i-01234567890abcdef\",\n    \"KeyFormat\": \"tpmt\",\n    \"KeyType\": \"rsa-2048\",\n    \"KeyValue\": \"AAEACwADALIAIINxl2dEhLEXAMPLEUal1yT9UtduBlILZPKh2hszFGmqAAYAgABDA\n    EXAMPLEAAABAOiRd7WmgtdGNoV1h/AxmW+CXExblG8pEUfNm0LOLiYnEXAMPLERqApiFa/UhvEYqN4\n    Z7jKMD/usbhsQaAB1gKA5RmzuhSazHQkax7EXAMPLEzDthlS7HNGuYn5eG7qnJndRcakS+iNxT8Hvf\n    0S1ZtNuItMs+Yp4SO6aU28MT/JZkOKsXIdMerY3GdWbNQz9AvYbMEXAMPLEPyHfzgVO0QTTJVGdDxh\n    vxtXCOu9GYf0crbjEXAMPLEd4YTbWdDdgOKWF9fjzDytJSDhrLAOUctNzHPCd/92l5zEXAMPLEOIFA\n    Ss50C0/802c17W2pMSVHvCCa9lYCiAfxH/vYKovAAE=\"\n}\nExample 2\nThe following example command gets the rsa-2048 public endorsement key in der format for the specified instance.\naws ec2 get-instance-tpm-ek-pub \\\n--instance-id i-01234567890abcdef \\\n--key-format der \\ \n--key-type rsa-2048\nThe following is the example output.\n{\n    \"InstanceId\": \"i-01234567890abcdef\",\n    \"KeyFormat\": \"der\",\n    \"KeyType\": \"rsa-2048\",\n    \"KeyValue\": \"MIIBIjANBgEXAMPLEw0BAQEFAAOCAQ8AMIIBCgKCAQEA6JF3taEXAMPLEXWH8DGZb4\n    JcTFuUbykRR82bQs4uJifaKSOv5NGoEXAMPLEG8Rio3hnuMowP+6xuGxBoAHWAoDlGbO6FJrMdEXAMP\n    LEnYUHvMO2GVLsc0a5ifl4buqcmd1FxqRL6I3FPwe9/REXAMPLE0yz5inhI7ppTbwxP8lmQ4qxch0x6\n    tjcZ1Zs1DP0EXAMPLERUYLQ/Id/OBU7RBNMlUZ0PGG/G1cI670Zh/RytuOdx9iEXAMPLEtZ0N2A4pYX\n    1+PMPK0lIOGssA5Ry03Mc8J3/3aXnOD2/ASRQ4gUBKznQLT/zTZEXAMPLEJUe8IJr2VgKIB/Ef+9gqi\n    8AAQIDAQAB\"\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/credential-guard.html",
        "content": "The AWS Nitro System supports Credential Guard for Amazon Elastic Compute Cloud (Amazon EC2) Windows instances. Credential Guard is a Windows virtualization-based security (VBS) feature that enables the creation of isolated environments to protect security assets, such as Windows user credentials and code integrity enforcement, beyond Windows kernel protections. When you run EC2 Windows instances, Credential Guard uses the AWS Nitro System to protect Windows login credentials from being extracted from the operating system's memory.\nContents\nPrerequisites\nLaunch a supported instance\nDisable memory integrity\nTurn on Credential Guard\nVerify that Credential Guard is running\nPrerequisites\nYour Windows instance must meet the following prerequisites to utilize Credential Guard.\nAmazon Machine Images (AMIs)\nThe AMI must be preconfigured to enable NitroTPM and UEFI Secure Boot. For more information on supported AMIs, see Requirements for using NitroTPM with Amazon EC2 instances.\nNote\nCredential Guard isn't supported for Windows Server 2025.\nMemory integrity\nMemory integrity, also known as hypervisor-protected code integrity (HVCI) or hypervisor enforced code integrity, isn't supported. Before you turn on Credential Guard, you must ensure this feature is disabled. For more information, see Disable memory integrity.\nInstance types\nThe following instance types support Credential Guard across all sizes unless noted otherwise: C5, C5d, C5n, C6i, C6id, C6in, C7i, C7i-flex, M5, M5d, M5dn, M5n, M5zn, M6i, M6id, M6idn, M6in, M7i, M7i-flex, R5, R5b, R5d, R5dn, R5n, R6i, R6id, R6idn, R6in R7i, R7iz, T3.\nNote\nThough NitroTPM has some required instance types in common, the instance type must be one of the preceding instance types to support Credential Guard.\nCredential Guard isn't supported for:\nBare metal instances.\nThe following instance types: C7i.48xlarge, M7i.48xlarge, and R7i.48xlarge.\nFor more information about instance types, see the Amazon EC2 Instance Types Guide.\nLaunch a supported instance\nYou can use the Amazon EC2 console or AWS Command Line Interface (AWS CLI) to launch an instance which can support Credential Guard. You will need a compatible AMI ID for launching your instance which is unique for each AWS Region.\nTip\nYou can use the following link to discover and launch instances with compatible Amazon provided AMIs in the Amazon EC2 console:\nhttps://console.aws.amazon.com/ec2/v2/home?#Images:visibility=public-images;v=3;search=:TPM-Windows_Server;ownerAlias=amazon\nAmazon EC2 console\nAWS CLI\nPowerShell\nTo launch an instance using the Amazon EC2 console\nFollow the steps to launch an instance, specifying a supported instance type and a preconfigured Windows AMI.\nDisable memory integrity\nYou can use the Local Group Policy Editor to disable memory integrity in supported scenarios. The following guidance can be applied for each configuration setting under Virtualization Based Protection of Code Integrity:\nEnabled without lock \u2013 Modify the setting to Disabled to disable memory integrity.\nEnabled with UEFI lock \u2013 Memory integrity has been enabled with UEFI lock. Memory integrity can't be disabled once it has been enabled with UEFI lock. We recommend creating a new instance with memory integrity disabled and terminating the unsupported instance if it's not in use.\nTo disable memory integrity with the Local Group Policy Editor\nConnect to your instance as a user account with administrator privileges using the Remote Desktop Protocol (RDP). For more information, see Connect to your Windows instance using an RDP client.\nOpen the Start menu and search for cmd to start a command prompt.\nRun the following command to open the Local Group Policy Editor: gpedit.msc\nIn the Local Group Policy Editor, choose Computer Configuration, Administrative Templates, System, Device Guard.\nSelect Turn On Virtualization Based Security, then select Edit policy setting.\nOpen the settings drop-down for Virtualization Based Protection of Code Integrity, choose Disabled, then choose Apply.\nReboot the instance to apply the changes.\nTurn on Credential Guard\nAfter you have launched a Windows instance with a supported instance type and compatible AMI, and confirmed that memory integrity is disabled, you can turn on Credential Guard.\nImportant\nAdministrator privileges are required to perform the following steps to turn on Credential Guard.\nTo turn on Credential Guard\nConnect to your instance as a user account with administrator privileges using the Remote Desktop Protocol (RDP). For more information, see Connect to your Windows instance using an RDP client.\nOpen the Start menu and search for cmd to start a command prompt.\nRun the following command to open the Local Group Policy Editor: gpedit.msc\nIn the Local Group Policy Editor, choose Computer Configuration, Administrative Templates, System, Device Guard.\nSelect Turn On Virtualization Based Security, then select Edit policy setting.\nChoose Enabled within the Turn On Virtualization Based Security menu.\nFor Select Platform Security Level, choose Secure Boot and DMA Protection.\nFor Credential Guard Configuration, choose Enabled with UEFI lock.\nNote\nThe remaining policy settings are not required to enable Credential Guard and can be left as Not Configured.\nThe following image displays the VBS settings configured as described previously:\nReboot the instance to apply the settings.\nVerify that Credential Guard is running\nYou can use the Microsoft System Information (Msinfo32.exe) tool to confirm that Credential Guard is running.\nImportant\nYou must first reboot the instance to finish applying the policy settings required to enable Credential Guard.\nTo verify Credential Guard is running\nConnect to your instance using the Remote Desktop Protocol (RDP). For more information, see Connect to your Windows instance using an RDP client.\nWithin the RDP session to your instance, open the Start menu and search for cmd to start a command prompt.\nOpen System Information by running the following command: msinfo32.exe\nThe Microsoft System Information tool lists the details for VBS configuration. Next to Virtualization-based security Services, confirm that Credential Guard appears as Running.\nThe following image displays VBS is running as described previously:"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/interface-vpc-endpoints.html",
        "content": "You can improve the security posture of your VPC by creating a private connection between your VPC and Amazon EC2. You can access Amazon EC2 as if it were in your VPC, without the use of an internet gateway, NAT device, VPN connection, or AWS Direct Connect connection. Instances in your VPC don't need public IP addresses to access Amazon EC2.\nFor more information, see Access AWS services through AWS PrivateLink in the AWS PrivateLink Guide.\nContents\nCreate an interface VPC endpoint\nCreate an endpoint policy\nCreate an interface VPC endpoint\nCreate an interface endpoint for Amazon EC2 using the following service name:\ncom.amazonaws.region.ec2 \u2014 Creates an endpoint for the Amazon EC2 API actions.\nFor more information, see Access an AWS service using an interface VPC endpoint in the AWS PrivateLink Guide.\nCreate an endpoint policy\nAn endpoint policy is an IAM resource that you can attach to your interface endpoint. The default endpoint policy allows full access to the Amazon EC2 API through the interface endpoint. To control the access allowed to the Amazon EC2 API from your VPC, attach a custom endpoint policy to the interface endpoint.\nAn endpoint policy specifies the following information:\nThe principals that can perform actions.\nThe actions that can be performed.\nThe resource on which the actions can be performed.\nImportant\nWhen a non-default policy is applied to an interface VPC endpoint for Amazon EC2, certain failed API requests, such as those failing from RequestLimitExceeded, might not be logged to AWS CloudTrail or Amazon CloudWatch.\nFor more information, see Control access to services using endpoint policies in the AWS PrivateLink Guide.\nThe following example shows a VPC endpoint policy that denies permission to create unencrypted volumes or to launch instances with unencrypted volumes. The example policy also grants permission to perform all other Amazon EC2 actions.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n    {\n        \"Action\": \"ec2:*\",\n        \"Effect\": \"Allow\",\n        \"Resource\": \"*\",\n        \"Principal\": \"*\"\n    },\n    {\n        \"Action\": [\n            \"ec2:CreateVolume\"\n        ],\n        \"Effect\": \"Deny\",\n        \"Resource\": \"*\",\n        \"Principal\": \"*\",\n        \"Condition\": {\n            \"Bool\": {\n                \"ec2:Encrypted\": \"false\"\n            }\n        }\n    },\n    {\n        \"Action\": [\n            \"ec2:RunInstances\"\n        ],\n        \"Effect\": \"Deny\",\n        \"Resource\": \"*\",\n        \"Principal\": \"*\",\n        \"Condition\": {\n            \"Bool\": {\n                \"ec2:Encrypted\": \"false\"\n            }\n        }\n    }]\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Storage.html",
        "content": "Amazon EC2 provides you with flexible, cost effective, and easy-to-use data storage options for your instances. Each option has a unique combination of performance and durability. These storage options can be used independently or in combination to suit your requirements.\nBlock storage\nAmazon EBS \u2014 Amazon EBS provides durable, block-level storage volumes that you can attach and detach from your instances. You can attach multiple EBS volumes to an instance. An EBS volume persists independently from the life of its associated instance. You can encrypt your EBS volumes. To keep a backup copy of your data, you can create snapshots from your EBS volumes. Snapshots are stored in Amazon S3. You can create an EBS volume from a snapshot.\nInstance store temporary block storage for EC2 instances \u2014 Instance store provides temporary block-level storage for instances. The number, size, and type of instance store volumes are determined by the instance type and instance size. The data on an instance store volume persists only during the life of the associated instance; if you stop, hibernate, or terminate an instance, any data on instance store volumes is lost.\nObject storage\nAmazon S3 \u2014 Amazon S3 provides access to reliable and inexpensive data storage infrastructure. It is designed to make web-scale computing easier by enabling you to store and retrieve any amount of data, at any time, from within Amazon EC2 or anywhere on the web. For example, you can use Amazon S3 to store backup copies of your data and applications. Amazon EC2 uses Amazon S3 to store EBS snapshots and instance store-backed AMIs.\nFile storage\nAmazon EFS (Linux instances only) \u2014 Amazon EFS provides scalable file storage for use with Amazon EC2. You can create an EFS file system and configure your instances to mount the file system. You can use an EFS file system as a common data source for workloads and applications running on multiple instances.\nAmazon FSx \u2014 With Amazon FSx, you can launch, run, and scale feature-rich, high-performance file systems in the cloud. Amazon FSx is a fully-managed service that supports a wide range of workloads. You can choose between these widely-used file systems: Lustre, NetApp ONTAP, OpenZFS, and Windows File Server.\nFile caching\nUse Amazon File Cache with Amazon EC2 instances \u2014 Amazon File Cache provides temporary, high-performance cache on AWS for processing file data. The cache provides read and write data access to compute workloads on Amazon EC2 with sub-millisecond latencies, up to hundreds of GB/s of throughput, and up to millions of IOPS.\nThe following figure shows the relationship between these storage options and your instance.\nAWS Storage pricing\nOpen AWS Pricing, scroll to Pricing for AWS products and select Storage. Choose the storage product to open its pricing page."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/storage_ebs.html",
        "content": "Amazon Elastic Block Store (Amazon EBS) provides scalable, high-performance block storage resources that can be used with Amazon EC2 instances. With Amazon EBS, you can create and manage the following block storage resources:\nAmazon EBS volumes \u2014 These are storage volumes that you attach to Amazon EC2 instances. After you attach a volume to an instance, you can use it in the same way you would use block storage. The instance can interact with the volume just as it would with a local drive.\nAmazon EBS snapshots \u2014 These are point-in-time backups of Amazon EBS volumes that persist independently from the volume itself. You can create snapshots to back up the data on your Amazon EBS volumes. You can then restore new volumes from those snapshots at any time.\nYou can create and attach EBS volumes to an instance during launch, and you can create and attach EBS volumes to an instance at any time after launch. You can also increase the size or performance of your EBS volumes without detaching the volume or restarting your instance.\nYou can create EBS snapshots from an EBS volume at any time after creation. You can use EBS snapshots to back up the data stored on your volumes. You can then use those snapshots to instantly restore volumes, or to migrate data across AWS accounts, AWS Regions, or Availability Zones. You can use Amazon Data Lifecycle Manager or AWS Backup to automate the creation, retention, and deletion of your EBS snapshots.\nA managed EBS volume is managed by a service provider, such as Amazon EKS Auto Mode. You can\u2019t directly modify the settings of a managed EBS volume. Managed EBS volumes are identified by a true value in the Managed field. For more information, see Amazon EC2 managed instances.\nFor more information about working with volumes and snapshots, see the Amazon EBS User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/volume_limits.html",
        "content": "The maximum number of Amazon EBS volumes that you can attach to an instance depends on the instance type and instance size. When considering how many volumes to attach to your instance, you should consider whether you need increased I/O bandwidth or increased storage capacity.\nBandwidth versus capacity\nFor consistent and predictable bandwidth use cases, use Amazon EBS-optimized instances with General Purpose SSD volumes or Provisioned IOPS SSD volumes. For maximum performance, match the IOPS you have provisioned for your volumes with the bandwidth available for your instance type.\nFor RAID configurations, you might find that arrays larger than 8 volumes have diminished performance returns due to increased I/O overhead. Test your individual application performance and tune it as required.\nContents\nVolume limits for instances built on the Nitro System\nDedicated EBS volume limit\nShared EBS volume limit\nVolume limits for Xen-based instances\nLinux instances\nWindows instances\nVolume limits for instances built on the Nitro System\nThe volume limits for instances built on the Nitro System depend on the instance type. Some Nitro instance types have a dedicated EBS volume limit, while most have a shared volume limit.\nFor more information, see Nitro-based instances.\nDedicated EBS volume limit\nThe following Nitro instance types have a dedicated EBS volume limit that varies depending on instance size. The limit is not shared with other device attachments. In other words, you can attach any number of EBS volumes up to the volume attachment limit, regardless of the number of attached devices, such as NVMe instance store volumes and network interfaces.\nGeneral purpose: M7a | M7i | M7i-flex | M8g\nCompute optimized: C7a | C7i | C7i-flex | C8g\nMemory optimized: R7a | R7i | R7iz | R8g | U7i | U7inh | X8g\nStorage optimized: I7ie | I8g\nAccelerated computing: G6 | G6e | Gr6\nFor these instance types that support dedicated volume limits, the volume limits depend on the instance size. The following table shows the limit for each instance size.\nInstance size Volume limit\nmedium | large | xlarge | 2xlarge | 4xlarge | 8xlarge | 12xlarge 32\n16xlarge 48\n24xlarge 64\n32xlarge 88\n48xlarge and larger 128\nmetal-16xl | metal-24xl 39\nmetal-32xl | metal-48xl 79\nShared EBS volume limit\nAll other Nitro instance types (not listed in Dedicated EBS volume limit) have a volume attachment limit that is shared between Amazon EBS volumes, network interfaces, and NVMe instance store volumes. You can attach any number of Amazon EBS volumes up to that limit, less the number of attached network interfaces and NVMe instance store volumes. Keep in mind that every instance must have at least one network interface, and that NVMe instance store volumes are automatically attached at launch.\nMost Nitro instances support a maximum of 28 attachments. The following examples demonstrate how to calculate how many EBS volumes you can attach.\nExamples\nWith an m5.xlarge instance with only the primary network interface, you can attach 27 EBS volumes.\n28 volumes - 1 network interface = 27\nWith an m5.xlarge instance with two additional network interfaces, you can attach 25 EBS volumes.\n28 volumes - 3 network interfaces = 25\nWith an m5d.xlarge instance with two additional network interfaces, you can attach 24 EBS volumes.\n28 volumes - 3 network interfaces - 1 NVMe instance store volume = 24\nThe following are the exceptions for instance types that have shared volume limits.\nExceptions\nd3.8xlarge and d3en.12xlarge instances support a maximum of 3 EBS volumes.\nDL2q instances support a maximum of 19 EBS volumes.\ng5.48xlarge instances support a maximum of 9 EBS volumes.\ninf1.xlarge and inf1.2xlarge instances support a maximum of 26 EBS volumes.\ninf1.6xlarge instances support a maximum of 23 EBS volumes.\ninf1.24xlarge instances support a maximum of 11 EBS volumes.\nMac2, Mac2-m2, Mac2-m2pro, and Mac2-m1ultra instances support a maximum of 10 EBS volumes.\nU-*tb1 virtualized instances support a maximum of 27 EBS volumes.\nFor vt1.3xlarge and vt1.6xlarge instances, each accelerator counts as two attachments.\nFor vt1.24xlarge instances, the accelerators do not count toward the shared volume limit.\nFor accelerated computing instances other than VT1 instances, each accelerator counts as an attachment. For example, p4d.24xlarge instances have a shared volume limit of 28, 8 GPUs, and 8 NVMe instance store volumes. This means that you can attach up to 11 EBS volumes (28 volumes - 1 network interface - 8 GPUs - 8 NVMe instance store volumes).\nMost bare metal instances support a maximum of 31 EBS volumes. The following are the exceptions:\nmac1.metal instances support a maximum of 16 EBS volumes.\nU-*tb1 bare metal instances support a maximum of 19 EBS volumes.\nVolume limits for Xen-based instances\nThe volume limits for Xen-based instances, such as T2, depend on the operating system.\nFor more information, see Xen-based instances.\nLinux instances\nAttaching more than 40 volumes to a Xen-based Linux instance can cause boot failures. This number includes the root volume, plus any attached instance store volumes and Amazon EBS volumes.\nIf you experience boot problems on an instance with a large number of volumes, stop the instance, detach any volumes that are not essential to the boot process, start the instance, and then reattach the volumes after the instance is running.\nImportant\nAttaching more than 40 volumes to a Xen-based Linux instance is supported on a best effort basis only and is not guaranteed.\nWindows instances\nThe following table shows the volume limits for Xen-based Windows instances based on the driver used. That these numbers include the root volume, plus any attached instance store volumes and Amazon EBS volumes.\nDriver Volume Limit\nAWS PV\n26\nCitrix PV\n26\nRed Hat PV\n17\nWe recommend that you do not that attach more than 26 volumes to a Xen-based Windows instance with AWS PV or Citrix PV drivers, as it is likely to cause performance issues. To determine which PV drivers your instance is using, or to upgrade your Windows instance from Red Hat to Citrix PV drivers, see Upgrade PV drivers on EC2 Windows instances.\nImportant\nAttaching more than the following number of volumes to a Xen-based Windows instance is supported on a best effort basis only and is not guaranteed.\nFor more information about how device names are related to volumes, see How volumes are attached and mapped for Amazon EC2 Windows instances."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html",
        "content": "An instance store provides temporary block-level storage for your EC2 instance. This storage is provided by disks that are physically attached to the host computer. Instance store is ideal for temporary storage of information that changes frequently, such as buffers, caches, scratch data, and other temporary content. It can also be used to store temporary data that you replicate across a fleet of instances, such as a load-balanced pool of web servers.\nAn instance store consists of one or more instance store volumes exposed as block devices. The size of an instance store as well as the number of devices available varies by instance type and instance size. For example, not every instance type provides instance store volumes. For more information, see Instance store volume limits for EC2 instances.\nThe virtual devices for instance store volumes are given virtual device names in order from ephemeral0 to ephemeral23. For example, with an instance type that supports one instance store volume, the virtual device name of the one volume is ephemeral0. With an instance type that supports four instance store volumes, the virtual device names of the four volumes are as follows: ephemeral0, ephemeral1, ephemeral2 and ephemeral3.\nInstance store pricing\nThere is no additional charge to use the instance store volumes provided for your instance. Instance store volumes are included as part of the usage cost of the instance.\nContents\nData persistence for Amazon EC2 instance store volumes\nInstance store volume limits for EC2 instances\nSSD instance store volumes for EC2 instances\nAdd instance store volumes to an EC2 instance\nEnable instance store swap volume for M1 and C1 EC2 instances\nInitialize instance store volumes on EC2 instances"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-store-lifetime.html",
        "content": "Instance store volumes are attached only at instance launch. You can't attach instance store volumes after launch. You can\u2019t detach an instance store volume from one instance and attach it to a different instance.\nAn instance store volume exists only during the lifetime of the instance to which it is attached. You can\u2019t configure an instance store volume to persist beyond the lifetime of its associated instance.\nThe data on an instance store volume persists even if the instance is rebooted. However, the data does not persist if the instance is stopped, hibernated, or terminated. When the instance is stopped, hibernated, or terminated, every block of the instance store volume is cryptographically erased.\nTherefore, do not rely on instance store volumes for valuable, long-term data. If you need to retain the data stored on an instance store volume beyond the lifetime of the instance, you need to manually copy that data to more persistent storage, such as an Amazon EBS volume, an Amazon S3 bucket, or an Amazon EFS file system.\nThere are some events that can result in your data not persisting throughout the lifetime of the instance. The following table indicates whether data on instance store volumes is persisted during specific events, for both virtualized and bare metal instances.\nEvent What happens to your data?\nUser-initiated instance lifecycle events\nThe instance is rebooted The data persists\nThe instance is stopped The data does not persist\nThe instance is hibernated The data does not persist\nThe instance is terminated The data does not persist\nThe instance type is changed The data does not persist *\nAn EBS-backed AMI is created from the instance The data does not persist in the created AMI **\nAn instance store-backed AMI is created from the instance (Linux instances) The data persists in the AMI bundle uploaded to Amazon S3 ***\nUser-initiated OS events\nA shutdown is initiated The data does not persist \u2020\nA restart is initiated The data persists\nAWS scheduled events\nInstance stop The data does not persist\nInstance reboot The data persists\nSystem reboot The data persists\nInstance retirement The data does not persist\nUnplanned events\nSimplified automatic recovery The data does not persist\nCloudWatch action based recovery The data does not persist\nThe underlying disk fails The data on the failed disk does not persist\nPower failure The data persists upon reboot\n* If the new instance type supports instance store, the instance gets the number of instance store volumes supported by the new instance type, but the data does not transfer to the new instance. If the new instance type does not support instance store, the instance does not get the instance store volumes.\n** The data is not included in the EBS-backed AMI, and it is not included on instance store volumes attached to instances launched from that AMI.\n*** The data is included in the AMI bundle that is uploaded to Amazon S3. When you launch an instance from that AMI, the instance gets the instance store volumes bundled in the AMI with the data they contained at the time the AMI was created.\n\u2020 Termination protection and stop protection do not protect instances against instance stops or terminations as a result of shutdowns initiated through the operating system on the instance. Data stored on instance store volumes does not persist in both instance stop and termination events."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-store-volumes.html",
        "content": "The number, size, and type of instance store volumes are determined by the instance type. Some instance types, such as M6, C6, and R6, do not support instance store volumes, while other instance types, such as M5d, C6gd, and R6gd, do support instance store volumes. You can\u2019t attach more instance store volumes to an instance than is supported by its instance type. For the instance types that do support instance store volumes, the number and size of the instance store volumes vary by instance size. For example, m5d.large supports 1 x 75 GB instance store volume, while m5d.24xlarge supports 4 x 900 GB instance store volumes.\nFor instance types with NVMe instance store volumes, all of the supported instance store volumes are automatically attached to the instance at launch. For instance types with non-NVMe instance store volumes, such as C1, C3, M1, M2, M3, R3, D2, H1, I2, X1, and X1e, you must manually specify the block device mappings for the instance store volumes that you want to attach at launch. Then, after the instance has launched, you must format and mount the attached instance store volumes before you can use them. You can't attach an instance store volume after you launch the instance.\nSome instance types use NVMe or SATA-based solid state drives (SSD), while others use SATA-based hard disk drives (HDD). SSDs deliver high random I/O performance with very low latency, but you don't need the data to persist when the instance terminates or you can take advantage of fault-tolerant architectures. For more information, see SSD instance store volumes for EC2 instances.\nThe data on NVMe instance store volumes and some HDD instance store volumes is encrypted at rest. For more information, see Data protection in Amazon EC2.\nAvailable instance store volumes\nThe Amazon EC2 Instance Types Guide provides the quantity, size, type, and performance optimizations of instance store volumes available on each supported instance type. For more information, see the following:\nInstance store specifications \u2013 General purpose\nInstance store specifications \u2013 Compute optimized\nInstance store specifications \u2013 Memory optimized\nInstance store specifications \u2013 Storage optimized\nInstance store specifications \u2013 Accelerated computing\nInstance store specifications \u2013 High-performance computing\nInstance store specifications \u2013 Previous generation\nTo retrieve instance store volume information using the AWS CLI\nYou can use the describe-instance-types command to display information about an instance type, such as its instance store volumes. The following example displays the total size of instance storage for all R5 instances with instance store volumes.\naws ec2 describe-instance-types \\\n    --filters \"Name=instance-type,Values=r5*\" \"Name=instance-storage-supported,Values=true\" \\\n    --query \"InstanceTypes[].[InstanceType, InstanceStorageInfo.TotalSizeInGB]\" \\\n    --output table\nExample output\n---------------------------\n|  DescribeInstanceTypes  |\n+----------------+--------+\n|  r5ad.24xlarge |  3600  |\n|  r5ad.12xlarge |  1800  |\n|  r5dn.8xlarge  |  1200  |\n|  r5ad.8xlarge  |  1200  |\n|  r5ad.large    |  75    |\n|  r5d.4xlarge   |  600   |\n   . . .\n|  r5dn.2xlarge  |  300   |\n|  r5d.12xlarge  |  1800  |\n+----------------+--------+\nThe following example displays the complete instance storage details for the specified instance type.\naws ec2 describe-instance-types \\\n    --filters \"Name=instance-type,Values=r5d.4xlarge\" \\\n    --query \"InstanceTypes[].InstanceStorageInfo\"\nThe example output shows that this instance type has two 300 GB NVMe SSD volumes, for a total of 600 GB of instance storage.\n[\n    {\n        \"TotalSizeInGB\": 600,\n        \"Disks\": [\n            {\n                \"SizeInGB\": 300,\n                \"Count\": 2,\n                \"Type\": \"ssd\"\n            }\n        ],\n        \"NvmeSupport\": \"required\"\n    }\n]"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ssd-instance-store.html",
        "content": "Like other instance store volumes, you must map the SSD instance store volumes for your instance when you launch it. The data on an SSD instance volume persists only for the life of its associated instance. For more information, see Add instance store volumes to an EC2 instance.\nNVMe SSD volumes\nSome instances offer non-volatile memory express (NVMe) solid state drives (SSD) instance store volumes. For more information about the type of instance store volume supported by each instance type, see Instance store volume limits for EC2 instances.\nThe data on NVMe instance storage is encrypted using an XTS-AES-256 block cipher implemented in a hardware module on the instance. The encryption keys are generated using the hardware module and are unique to each NVMe instance storage device. All encryption keys are destroyed when the instance is stopped or terminated and cannot be recovered. You cannot disable this encryption and you cannot provide your own encryption key.\nLinux instances\nWindows instances\nNon-NVMe SSD volumes\nThe following instances support instance store volumes that use non-NVMe SSDs to deliver high random I/O performance: C3, I2, M3, R3, and X1. For more information about the instance store volumes supported by each instance type, see Instance store volume limits for EC2 instances.\nSSD-based instance store volume I/O performance\nAs you fill the SSD-based instance store volumes for your instance, the number of write IOPS that you can achieve decreases. This is due to the extra work the SSD controller must do to find available space, rewrite existing data, and erase unused space so that it can be rewritten. This process of garbage collection results in internal write amplification to the SSD, expressed as the ratio of SSD write operations to user write operations. This decrease in performance is even larger if the write operations are not in multiples of 4,096 bytes or not aligned to a 4,096-byte boundary. If you write a smaller amount of bytes or bytes that are not aligned, the SSD controller must read the surrounding data and store the result in a new location. This pattern results in significantly increased write amplification, increased latency, and dramatically reduced I/O performance.\nSSD controllers can use several strategies to reduce the impact of write amplification. One such strategy is to reserve space in the SSD instance storage so that the controller can more efficiently manage the space available for write operations. This is called over-provisioning. The SSD-based instance store volumes provided to an instance do not have any space reserved for over-provisioning. To reduce write amplification, we recommend that you leave 10 percent of the volume unpartitioned so that the SSD controller can use it for over-provisioning. This decreases the storage that you can use, but increases performance even if the disk is close to full capacity.\nFor instance store volumes that support TRIM, you can use the TRIM command to notify the SSD controller whenever you no longer need data that you have written. This provides the controller with more free space, which can reduce write amplification and increase performance. For more information, see Instance store volume TRIM support.\nInstance store volume TRIM support\nSome instance types support SSD volumes with TRIM. For more information, see Instance store volume limits for EC2 instances.\nNote\n(Windows instances only) Instances running Windows Server 2012 R2 support TRIM as of AWS PV Driver version 7.3.0. Instances running earlier versions of Windows Server do not support TRIM.\nInstance store volumes that support TRIM are fully trimmed before they are allocated to your instance. These volumes are not formatted with a file system when an instance launches, so you must format them before they can be mounted and used. For faster access to these volumes, you should skip the TRIM operation when you format them.\n(Windows instances) To temporarily disable TRIM support during initial formatting, use the fsutil behavior set DisableDeleteNotify 1 command. After formatting is complete, re-enable TRIM support by using fsutil behavior set DisableDeleteNotify 0.\nWith instance store volumes that support TRIM, you can use the TRIM command to notify the SSD controller when you no longer need data that you've written. This provides the controller with more free space, which can reduce write amplification and increase performance. On Linux instances, use the fstrim command to enable periodic TRIM. On Windows instances, use the fsutil behavior set DisableDeleteNotify 0 command to ensure TRIM support is enabled during normal operation."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/add-instance-store-volumes.html",
        "content": "For instance types with NVMe instance store volumes, all of the supported instance store volumes are automatically attached to the instance at launch. They are automatically enumerated and assigned a device name on instance launch.\nFor instance types with non-NVMe instance store volumes, such as C1, C3, M1, M2, M3, R3, D2, H1, I2, X1, and X1e, you must manually specify the block device mappings for the instance store volumes that you want to attach at launch. Block device mappings can be specified in the instance launch request or in the AMI used to launch the instance. The block device mapping includes a device name and the volume that it maps to. For more information, see Block device mappings for volumes on Amazon EC2 instances\nImportant\nInstance store volumes can be attached to an instance only when you launch it. You can't attach instance store volumes to an instance after you've launched it.\nAfter you launch an instance, you must ensure that the instance store volumes for your instance are formatted and mounted before you can use them. The root volume of an instance store-backed instance is mounted automatically.\nConsideration for root volumes\nA block device mapping always specifies the root volume for the instance. The root volume is always mounted automatically.\nLinux instances \u2013 The root volume is either an Amazon EBS volume or an instance store volume. For instances with an instance store volume for the root volume, the size of this volume varies by AMI, but the maximum size is 10 GB. For more information, see Root device type.\nWindows instances \u2013 The root volume must be an Amazon EBS volume. Instance store is not supported for the root volume.\nContents\nAdd instance store volumes to an Amazon EC2 AMI\nAdd instance store volumes to an EC2 instance during launch\nMake instance store volume available for use on an EC2 instance"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/adding-instance-storage-ami.html",
        "content": "You can create an AMI with a block device mapping that includes instance store volumes.\nIf you launch an instance that supports non-NVMe instance store volumes using an AMI that specifies instance store volume block device mappings, the instance includes the instance store volumes. If the number of instance store volume block device mappings in the AMI exceeds the number of instance store volumes available to the instance, the additional instance store volume block device mappings are ignored.\nIf you launch an instance that supports NVMe instance store volumes using an AMI that specifies instance store volume block device mappings, the instance store volume block device mappings are ignored. Instances that support NVMe instance store volumes get all of their supported instance store volumes, regardless of the block device mappings specified in the instance launch request and the AMI.\nConsiderations\nFor M3 instances, specify instance store volumes in the block device mapping of the instance, not the AMI. Amazon EC2 might ignore instance store volume block device mappings in the AMI.\nWhen you launch an instance, you can omit non-NVMe instance store volumes specified in the AMI block device mapping or add instance store volumes.\nConsole\nAWS CLI\nTo add instance store volumes to an Amazon EBS-backed AMI using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances and select the instance.\nChoose Actions, Image and templates, Create image.\nOn the Create image page, enter a meaningful name and description for your image.\nFor each instance store volume to add, choose Add volume, from Volume type select an instance store volume, and from Device select a device name. (For more information, see Device names for volumes on Amazon EC2 instances.) The number of available instance store volumes depends on the instance type. For instances with NVMe instance store volumes, the device mapping of these volumes depends on the order in which the operating system enumerates the volumes.\nChoose Create image."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/adding-instance-storage-instance.html",
        "content": "When you launch an instance type with non-NVMe instance store volumes, such as C1, C3, M1, M2, M3, R3, D2, H1, I2, X1, and X1e, you must specify the block device mappings for the instance store volumes that you want to attach at launch. The block device mappings must be specified in the instance launch request or in the AMI used to launch the instance.\nIf the AMI includes block device mappings for the instance store volumes, you do not need to specify block device mappings in the instance launch request, unless you need more instance store volumes than is included in the AMI.\nIf the AMI does not include block device mappings for instance store volumes, then you must specify the block device mappings in the instance launch request.\nFor instance types with NVMe instance store volumes, all of the supported instance store volumes are automatically attached to the instance at launch.\nConsiderations\nFor M3 instances, you might receive instance store volumes even if you do not specify them in the block device mapping for the instance.\nTo specify block device mappings in the instance launch request, use one of the following methods.\nAmazon EC2 console\nCommand line\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nFrom the dashboard, choose Launch instance.\nIn the Application and OS Images section, select the AMI to use.\nIn the Configure storage section, the Instance store volumes section lists the instance store volumes that can be attached to the instance. The number of available instance store volumes depends on the instance type.\nFor each instance store volume to attach, for Device name, select the device name to use.\nConfigure the remaining instance settings as needed, and then choose Launch instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/making-instance-stores-available-on-your-instances.html",
        "content": "After you launch an instance with attached instance store volumes, you must mount the volumes before you can access them.\nLinux instances\nWindows instances\nFor instructions on how to mount an attached volume automatically after reboot, see Automatically mount an attached volume after reboot in the Amazon EBS User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-store-swap-volumes.html",
        "content": "Note\nThis topic applies to c1.medium and m1.small Linux instances only.\nThe c1.medium and m1.small instance types have a limited amount of physical memory. Therefore, they are given a 900 MiB swap volume at launch time to act as virtual memory, or swap space, for the Linux system. Swap space in Linux can be used when a system requires more memory than it has been physically allocated. When swap space is enabled, Linux systems can swap infrequently used memory pages from physical memory to swap space (either a dedicated partition or a swap file in an existing file system) and free up that space for memory pages that require high-speed access.\nNote\nUsing swap space for memory paging is not as fast or efficient as using RAM. If your workload is regularly paging memory into swap space, you should consider migrating to a larger instance type with more RAM. For more information, see Amazon EC2 instance type changes.\nAlthough the Linux kernel sees this swap space as a partition on the root device, it is actually a separate instance store volume, regardless of your root device type.\nAmazon Linux automatically enables and uses this swap space, but your AMI may require some additional steps to recognize and use this swap space. To see if your instance is using swap space, you can use the swapon -s command.\n[ec2-user ~]$ swapon -s\nFilename                                Type            Size    Used    Priority\n/dev/xvda3                              partition       917500  0       -1\nThe above instance has a 900 MiB swap volume attached and enabled. If you don't see a swap volume listed with this command, you may need to enable swap space for the device. Check your available disks using the lsblk command.\n[ec2-user ~]$ lsblk\nNAME  MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nxvda1 202:1    0    8G  0 disk /\nxvda3 202:3    0  896M  0 disk\nHere, the swap volume xvda3 is available to the instance, but it is not enabled (notice that the MOUNTPOINT field is empty). You can enable the swap volume with the swapon command.\nNote\nYou must prepend /dev/ to the device name listed by lsblk. Your device may be named differently, such as sda3, sde3, or xvde3. Use the device name for your system in the command below.\n[ec2-user ~]$ sudo swapon /dev/xvda3\nNow the swap space should show up in lsblk and swapon -s output.\n[ec2-user ~]$ lsblk\nNAME  MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nxvda1 202:1    0    8G  0 disk /\nxvda3 202:3    0  896M  0 disk [SWAP]\n[ec2-user ~]$ swapon -s\nFilename                                Type            Size    Used    Priority\n/dev/xvda3                              partition       917500  0       -1\nYou also need to edit your /etc/fstab file so that this swap space is automatically enabled at every system boot.\n[ec2-user ~]$ sudo vim /etc/fstab\nAppend the following line to your /etc/fstab file (using the swap device name for your system):\n/dev/xvda3       none    swap    sw  0       0\nTo use an instance store volume as swap space\nAny instance store volume can be used as swap space. For example, the m3.medium instance type includes a 4 GB SSD instance store volume that is appropriate for swap space. If your instance store volume is much larger (for example, 350 GB), you may consider partitioning the volume with a smaller swap partition of 4-8 GB and the rest for a data volume.\nNote\nThis procedure applies only to instance types that support instance storage. For a list of supported instance types, see Instance store volume limits for EC2 instances.\nList the block devices attached to your instance to get the device name for your instance store volume.\n[ec2-user ~]$ lsblk -p\nNAME       MAJ:MIN RM SIZE RO TYPE MOUNTPOINT\n/dev/xvdb  202:16   0   4G  0 disk /media/ephemeral0\n/dev/xvda1 202:1    0   8G  0 disk /\nIn this example, the instance store volume is /dev/xvdb. Because this is an Amazon Linux instance, the instance store volume is formatted and mounted at /media/ephemeral0; not all Linux operating systems do this automatically.\n(Optional) If your instance store volume is mounted (it lists a MOUNTPOINT in the lsblk command output), unmount it with the following command.\n[ec2-user ~]$ sudo umount /dev/xvdb\nSet up a Linux swap area on the device with the mkswap command.\n[ec2-user ~]$ sudo mkswap /dev/xvdb\nmkswap: /dev/xvdb: warning: wiping old ext3 signature.\nSetting up swapspace version 1, size = 4188668 KiB\nno label, UUID=b4f63d28-67ed-46f0-b5e5-6928319e620b\nEnable the new swap space.\n[ec2-user ~]$ sudo swapon /dev/xvdb\nVerify that the new swap space is being used.\n[ec2-user ~]$ swapon -s\nFilename    Type  Size Used Priority\n/dev/xvdb                               partition 4188668 0 -1\nEdit your /etc/fstab file so that this swap space is automatically enabled at every system boot.\n[ec2-user ~]$ sudo vim /etc/fstab\nIf your /etc/fstab file has an entry for /dev/xvdb (or /dev/sdb) change it to match the line below; if it does not have an entry for this device, append the following line to your /etc/fstab file (using the swap device name for your system):\n/dev/xvdb       none    swap    sw  0       0\nImportant\nInstance store volume data is lost when an instance is stopped or hibernated; this includes the instance store swap space formatting created in Step 3. If you stop and restart an instance that has been configured to use instance store swap space, you must repeat Step 1 through Step 5 on the new instance store volume."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/disk-performance.html",
        "content": "Because of the way that Amazon EC2 virtualizes disks, the first write to any location on some instance store volumes performs more slowly than subsequent writes. For most applications, amortizing this cost over the lifetime of the instance is acceptable. However, if you require high disk performance, we recommend that you initialize your drives by writing once to every drive location before production use.\nNote\nInstance types with direct-attached solid state drives (SSD) and TRIM support provide maximum performance at launch time, without initialization. For information about the instance store for each instance type, see Instance store volume limits for EC2 instances.\nIf you require greater flexibility in latency or throughput, we recommend using Amazon EBS.\nTo initialize the instance store volumes, use the following dd commands, depending on the store to initialize (for example, /dev/sdb or /dev/nvme1n1).\nNote\nMake sure to unmount the drive before performing this command.\nInitialization can take a long time (about 8 hours for an extra large instance).\nTo initialize the instance store volumes, use the following commands on the m1.large, m1.xlarge, c1.xlarge, m2.xlarge, m2.2xlarge, and m2.4xlarge instance types:\ndd if=/dev/zero of=/dev/sdb bs=1M          \ndd if=/dev/zero of=/dev/sdc bs=1M          \ndd if=/dev/zero of=/dev/sdd bs=1M          \ndd if=/dev/zero of=/dev/sde bs=1M\nTo perform initialization on all instance store volumes at the same time, use the following command:\ndd if=/dev/zero bs=1M|tee /dev/sdb|tee /dev/sdc|tee /dev/sde > /dev/sdd\nConfiguring drives for RAID initializes them by writing to every drive location. When configuring software-based RAID, make sure to change the minimum reconstruction speed:\necho $((30*1024)) > /proc/sys/dev/raid/speed_limit_min"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
        "content": "When you launch an instance, we create a root volume for the instance. The root volume contains the image used to boot the instance. Each instance has a single root volume. You can add storage volumes to your instances during or after launch.\nThe AMI that you use to launch an instance determines the type of root volume. You can launch an instance from either an Amazon EBS-backed AMI (Linux and Windows instances) or an instance store-backed AMI (Linux instances only). There are significant differences between what you can do with each type of AMI. For more information about these differences, see Root device type.\nWe recommend that you use AMIs backed by Amazon EBS, because these instances launch faster and use persistent storage.\nWe reserve specific device names for root volumes. For more information, see Device names for volumes on Amazon EC2 instances.\nContents\nAmazon EBS-backed instances\nInstance store-backed instances (Linux instances only)\nKeep an Amazon EBS root volume after an Amazon EC2 instance terminates\nReplace the root volume for an Amazon EC2 instance without stopping it\nAmazon EBS-backed instances\nInstances that use Amazon EBS for the root volume automatically have an Amazon EBS volume attached. When you launch an Amazon EBS-backed instance, we create an Amazon EBS volume for each Amazon EBS snapshot referenced by the AMI you use. You can optionally use other Amazon EBS volumes or instance store volumes, depending on the instance type.\nAn Amazon EBS-backed instance can be stopped and later restarted without affecting data stored in the attached volumes. There are various instance\u2013 and volume-related tasks you can do when an Amazon EBS-backed instance is in a stopped state. For example, you can modify the properties of the instance, change its size, or update the kernel it is using, or you can attach your root volume to a different running instance for debugging or any other purpose. For more information, see Amazon EBS volumes.\nLimitation\nYou can't use st1 or sc1 EBS volumes as root volumes.\nInstance failure\nIf an Amazon EBS-backed instance fails, you can restore your session by following one of these methods:\nStop and then start again (try this method first).\nAutomatically snapshot all relevant volumes and create a new AMI. For more information, see Create an Amazon EBS-backed AMI.\nAttach the volume to the new instance by following these steps:\nCreate a snapshot of the root volume.\nRegister a new AMI using the snapshot.\nLaunch a new instance from the new AMI.\nDetach the remaining Amazon EBS volumes from the old instance.\nReattach the Amazon EBS volumes to the new instance.\nInstance store-backed instances (Linux instances only)\nNote\nWindows instances do not support instance-store backed root volumes.\nInstances that use instance stores for the root volume automatically have one or more instance store volumes available, with one volume serving as the root volume. When an instance is launched, the image that is used to boot the instance is copied to the root volume. Note that you can optionally use additional instance store volumes, depending on the instance type.\nAny data on the instance store volumes persists as long as the instance is running, but this data is deleted when the instance is terminated (instance store-backed instances do not support the Stop action) or if it fails (such as if an underlying drive has issues). For more information, see Instance store temporary block storage for EC2 instances.\nSupported instance types\nOnly the following instance types support an instance store volume as the root volume: C1, C3, D2, I2, M1, M2, M3, R3, and X1.\nInstance failure\nAfter an instance store-backed instance fails or terminates, it cannot be restored. If you plan to use Amazon EC2 instance store-backed instances, we highly recommend that you distribute the data on your instance stores across multiple Availability Zones. You should also back up critical data from your instance store volumes to persistent storage on a regular basis."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configure-root-volume-delete-on-termination.html",
        "content": "By default, the Amazon EBS root volume for an instance is deleted when the instance terminates. You can change the default behavior to ensure that an Amazon EBS root volume persists after the instance terminates. To change the default behavior, set the DeleteOnTermination attribute to false. You can do so either at instance launch or later on.\nTasks\nConfigure the root volume to persist during instance launch\nConfigure the root volume to persist for an existing instance\nConfirm that a root volume is configured to persist\nConfigure the root volume to persist during instance launch\nYou can configure the root volume to persist when you launch an instance.\nConsole\nAWS CLI\nTools for Windows PowerShell\nTo configure the root volume to persist when you launch an instance using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances and then choose Launch instances.\nChoose an Amazon Machine Image (AMI), choose and instance type, choose a key pair, and configure your network settings.\nFor Configure storage, choose Advanced.\nExpand the root volume.\nFor Delete on termination, choose No.\nWhen you are finished configuring your instance, choose Launch instance.\nConfigure the root volume to persist for an existing instance\nYou can configure the root volume to persist for a running instance. Note that you can't complete this task using the Amazon EC2 console.\nAWS CLI\nTools for Windows PowerShell\nTo configure the root volume to persist for an existing instance using the AWS CLI\nUse the modify-instance-attribute command with a block device mapping that sets the DeleteOnTermination attribute to false.\naws ec2 modify-instance-attribute --instance-id i-1234567890abcdef0 --block-device-mappings file://mapping.json\nSpecify the following in mapping.json.\n[\n    {\n        \"DeviceName\": \"/dev/xvda\",\n        \"Ebs\": {\n            \"DeleteOnTermination\": false\n        }\n    }\n]\nConfirm that a root volume is configured to persist\nYou can confirm that a root volume is configured to persist using the Amazon EC2 console or the command line tools.\nConsole\nAWS CLI\nTools for Windows PowerShell\nTo confirm that a root volume is configured to persist using the Amazon EC2 console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances and then select the instance.\nIn the Storage tab, under Block devices, locate the entry for the root volume. If Delete on termination is No, the volume is configured to persist."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/replace-root.html",
        "content": "Amazon EC2 enables you to replace the root Amazon EBS volume for a running instance while retaining the following:\nData stored on instance store volumes \u2014 Instance store volumes remain attached to the instance after the root volume has been restored.\nData stored on data (non-root) Amazon EBS volumes \u2014 Non-root Amazon EBS volumes remain attached to the instance after the root volume has been restored.\nNetwork configuration \u2014 All network interfaces remain attached to the instance and they retain their IP addresses, identifiers, and attachment IDs. When the instance becomes available, all pending network traffic is flushed. Additionally, the instance remains on the same physical host, so it retains its public and private IP addresses and DNS name.\nIAM policies \u2014 IAM profiles and policies (such as tag-based policies) that are associated with the instance are retained and enforced.\nContents\nHow root volume replacement works\nConsiderations\nReplace a root volume\nHow root volume replacement works\nWhen you replace the root volume for an instance, we create root volume replacement task. The original root volume is detached from the instance, and the new root volume is attached to the instance in its place. The instance's block device mapping is updated to reflect the ID of the replacement root volume.\nWhen you replace the root volume for an instance, you must specify the source of the snapshot for the new volume. The following are the possible options.\nRestore a root volume to its original state\nReplace the root volume using a snapshot\nReplace the root volume using an AMI\nYou can choose whether to keep the original root volume after the root volume replacement process has completed. If you choose delete the original root volume after the replacement process completes, the original root volume is automatically deleted and becomes unrecoverable. If you choose to keep the original root volume after the process completes, the volume remains provisioned in your account; you must manually delete the volume when you no longer need it.\nThe root volume replacement task transitions through the following states:\npending \u2014 The replacement volume is being created.\nin-progress \u2014 The original volume is being detached and the replacement volume is being attached.\nsucceeded \u2014 The replacement volume has been successfully attached to the instance and the instance is available.\nfailing \u2014 The replacement task is in the process of failing.\nfailed \u2014 The replacement task has failed, but the root volume is still attached.\nfailing-detached \u2014 The replacement task is in the process of failing and the instance might not have a root volume attached.\nfailed-detached \u2014 The replacement task has failed and the instance doesn't have a root volume attached.\nIf the root volume replacement task fails, the instance is rebooted and the original root volume remains attached to the instance.\nConsiderations\nBefore you begin, consider the following.\nRequirements\nThe instance must be in the running state.\nThe instance is automatically rebooted during the process. The contents of the memory (RAM) is erased during the reboot. No manual reboots are required.\nYou can't replace the root volume if it is an instance store volume. Only instances with Amazon EBS root volumes are supported.\nYou can replace the root volume for all virtualized instance types and EC2 Mac bare metal instances. No other bare metal instance types are supported.\nYou can use any snapshot that belongs to the same lineage as any of the instance's previous root volumes.\nIf your account is enabled for Amazon EBS encryption by default in the current Region, the replacement root volume created by the root volume replacement task is always encrypted, regardless of the encryption status of the specified snapshot or the root volume of the specified AMI.\nEncryption outcomes\nThe following table summarizes the possible encryption outcomes.\nOriginal root volume Specified snapshot or AMI Encryption by default Replacement root volume Encryption key used for replacement root volume\nRestore replacement root volume to initial launch state Encrypted Not applicable Not considered Encrypted Same KMS key as original root volume\nUnencrypted Not applicable Disabled Unencrypted Not applicable\nUnencrypted Not applicable Enabled Encrypted Account's default KMS key for Amazon EBS encryption\nRestore replacement root volume from snapshot or AMI Encrypted Unencrypted Not considered Encrypted Same KMS key as original root volume\nEncrypted Encrypted Not considered Encrypted Same KMS key as original root volume\nUnencrypted Unencrypted Disabled Unencrypted Not applicable\nUnencrypted Unencrypted Enabled Encrypted Account's default KMS key for Amazon EBS encryption\nUnencrypted Encrypted Not considered Encrypted If the AMI or snapshot is owned by the account, the replacement volume is encrypted with the AMI or snapshot\u2019s KMS key. If AMI or snapshot is shared with the account, replacement volume is encrypted with the account's default KMS key for Amazon EBS encryption.\nReplace a root volume\nWhen you replace the root volume for an instance, a root volume replacement task is created. You can use the root volume replacement task to monitor the progress and outcome of the replacement process.\nConsole\nAWS CLI\nTools for Windows PowerShell\nTo replace the root volume\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance for which to replace the root volume and choose Actions, Monitor and troubleshoot, Replace root volume.\nNote\nThe Replace root volume action is disabled if the selected instance is not in the running state.\nIn the Replace root volume screen, for Restore, choose one of the following options:\nLaunch state \u2013 Restore the replacement root volume from the snapshot that was used to create the current root volume.\nSnapshot \u2013 Restore the replacement root volume to the snapshot that you specify. For Snapshot, select the snapshot to use.\nImage \u2013 Restore the replacement root volume using the AMI that you specify. For Image, select the AMI to use.\n(Optional) To delete the root volume that you are replacing, select Delete replaced root volume.\nChoose Create replacement task.\nTo monitor the replacement task, choose the Storage tab for the instance and expand Recent root volume replacement tasks."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html",
        "content": "When you attach a volume to your instance, you include a device name for the volume. This device name is used by Amazon EC2. The block device driver for the instance assigns the actual volume name when mounting the volume, and the name assigned can be different from the name that Amazon EC2 uses.\nThe number of volumes that your instance can support is determined by the operating system. For more information, see Amazon EBS volume limits for Amazon EC2 instances.\nContents\nAvailable device names\nDevice name considerations\nAvailable device names\nLinux instances\nWindows instances\nFor more information about instance store volumes, see Instance store temporary block storage for EC2 instances. For more information about NVMe EBS volumes (Nitro-based instances), including how to identify the EBS device, see Amazon EBS and NVMe in the Amazon EBS User Guide.\nDevice name considerations\nKeep the following in mind when selecting a device name:\nThe ending portion of device names that you use shouldn't overlap as it can cause issues when you start your instance. For example, avoid using combinations such as /dev/xvdf and xvdf for volumes attached to the same instance.\nAlthough you can attach your EBS volumes using the device names used to attach instance store volumes, we strongly recommend that you don't because the behavior can be unpredictable.\nThe number of NVMe instance store volumes for an instance depends on the size of the instance. NVMe instance store volumes are automatically enumerated and assigned an NVMe device name (Linux instances) or a Windows drive letter (Windows instances).\n(Windows instances) AWS Windows AMIs come with additional software that prepares an instance when it first boots up. This is either the EC2Config service (Windows AMIs prior to Windows Server 2016) or EC2Launch (Windows Server 2016 and later). After the devices have been mapped to drives, they are initialized and mounted. The root drive is initialized and mounted as C:\\. By default, when an EBS volume is attached to a Windows instance, it can show up as any drive letter on the instance. You can change the settings to set the drive letters of the volumes per your specifications. For instance store volumes, the default depends on the driver. AWS PV drivers and Citrix PV drivers assign instance store volumes drive letters going from Z: to A:. Red Hat drivers assign instance store volumes drive letters going from D: to Z:. For more information, see Windows launch agents on Amazon EC2 Windows instances, and How volumes are attached and mapped for Amazon EC2 Windows instances.\n(Linux instances) Depending on the block device driver of the kernel, the device could be attached with a different name than you specified. For example, if you specify a device name of /dev/sdh, your device could be renamed /dev/xvdh or /dev/hdh. In most cases, the trailing letter remains the same. In some versions of Red Hat Enterprise Linux (and its variants, such as CentOS), the trailing letter could change (/dev/sda could become /dev/xvde). In these cases, the trailing letter of each device name is incremented the same number of times. For example, if /dev/sdb is renamed /dev/xvdf, then /dev/sdc is renamed /dev/xvdg. Amazon Linux creates a symbolic link for the name you specified to the renamed device. Other operating systems could behave differently.\n(Linux instances) HVM AMIs do not support the use of trailing numbers on device names, except for /dev/sda1, which is reserved for the root device, and /dev/sda2. While using /dev/sda2 is possible, we do not recommend using this device mapping with HVM instances.\n(Linux instances) When using PV AMIs, you cannot attach volumes that share the same device letters both with and without trailing digits. For example, if you attach a volume as /dev/sdc and another volume as /dev/sdc1, only /dev/sdc is visible to the instance. To use trailing digits in device names, you must use trailing digits on all device names that share the same base letters (such as /dev/sdc1, /dev/sdc2, /dev/sdc3).\n(Linux instances) Some custom kernels might have restrictions that limit use to /dev/sd[f-p] or /dev/sd[f-p][1-6]. If you're having trouble using /dev/sd[q-z] or /dev/sd[q-z][1-6], try switching to /dev/sd[f-p] or /dev/sd[f-p][1-6].\nBefore you specify the device name that you've selected, verify that it is available. Otherwise, you'll get an error that the device name is already in use. To view the disk devices and their mount points, use the lsblk command (Linux instances), or the Disk Management utility or the diskpart command (Windows instances)."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html",
        "content": "Each instance that you launch has an associated root device volume, which is either an Amazon EBS volume or an instance store volume. You can use block device mapping to specify additional EBS volumes or instance store volumes to attach to an instance when it's launched. You can also attach additional EBS volumes to a running instance. However, the only way to attach instance store volumes to an instance is to use block device mapping to attach the volumes as the instance is launched.\nContents\nBlock device mapping concepts\nAdd block device mappings to an AMI\nAdd block device mappings to Amazon EC2 instance\nBlock device mapping concepts\nA block device is a storage device that moves data in sequences of bytes or bits (blocks). These devices support random access and generally use buffered I/O. Examples include hard disks, CD-ROM drives, and flash drives. A block device can be physically attached to a computer or accessed remotely as if it were physically attached to the computer.\nAmazon EC2 supports two types of block devices:\nInstance store volumes (virtual devices whose underlying hardware is physically attached to the host computer for the instance)\nEBS volumes (remote storage devices)\nA block device mapping defines the block devices (instance store volumes and EBS volumes) to attach to an instance. You can specify a block device mapping as part of creating an AMI so that the mapping is used by all instances launched from the AMI. Alternatively, you can specify a block device mapping when you launch an instance, so this mapping overrides the one specified in the AMI from which you launched the instance. Note that all NVMe instance store volumes supported by an instance type are automatically enumerated and assigned a device name on instance launch; including them in your block device mapping has no effect.\nContents\nBlock device mapping entries\nBlock device mapping instance store caveats\nExample block device mapping\nHow devices are made available in the operating system\nBlock device mapping entries\nWhen you create a block device mapping, you specify the following information for each block device that you need to attach to the instance:\nThe device name used within Amazon EC2. The block device driver for the instance assigns the actual volume name when mounting the volume. The name assigned can be different from the name that Amazon EC2 recommends. For more information, see Device names for volumes on Amazon EC2 instances.\nFor Instance store volumes, you also specify the following information:\nThe virtual device: ephemeral[0-23]. Note that the number and size of available instance store volumes for your instance varies by instance type.\nFor NVMe instance store volumes, the following information also applies:\nThese volumes are automatically enumerated and assigned a device name; including them in your block device mapping has no effect.\nFor EBS volumes, you also specify the following information:\nThe ID of the snapshot to use to create the block device (snap-xxxxxxxx). This value is optional as long as you specify a volume size. You can't specify the ID of an archived snapshot.\nThe size of the volume, in GiB. The specified size must be greater than or equal to the size of the specified snapshot.\nWhether to delete the volume on instance termination (true or false). The default value is true for the root device volume and false for attached volumes. When you create an AMI, its block device mapping inherits this setting from the instance. When you launch an instance, it inherits this setting from the AMI.\nThe volume type, which can be gp2 and gp3 for General Purpose SSD, io1 and io2 for Provisioned IOPS SSD, st1 for Throughput Optimized HDD, sc1 for Cold HDD, or standard for Magnetic.\nThe number of input/output operations per second (IOPS) that the volume supports. (Used only with io1 and io2 volumes.)\nBlock device mapping instance store caveats\nThere are several caveats to consider when launching instances with AMIs that have instance store volumes in their block device mappings.\nSome instance types include more instance store volumes than others, and some instance types contain no instance store volumes at all. If your instance type supports one instance store volume, and your AMI has mappings for two instance store volumes, then the instance launches with one instance store volume.\nInstance store volumes can only be mapped at launch time. You cannot stop an instance without instance store volumes (such as the t2.micro), change the instance to a type that supports instance store volumes, and then restart the instance with instance store volumes. However, you can create an AMI from the instance and launch it on an instance type that supports instance store volumes, and map those instance store volumes to the instance.\nIf you launch an instance with instance store volumes mapped, and then stop the instance and change it to an instance type with fewer instance store volumes and restart it, the instance store volume mappings from the initial launch still show up in the instance metadata. However, only the maximum number of supported instance store volumes for that instance type are available to the instance.\nNote\nWhen an instance is stopped, all data on the instance store volumes is lost.\nDepending on instance store capacity at launch time, M3 instances may ignore AMI instance store block device mappings at launch unless they are specified at launch. You should specify instance store block device mappings at launch time, even if the AMI you are launching has the instance store volumes mapped in the AMI, to ensure that the instance store volumes are available when the instance launches.\nExample block device mapping\nThis figure shows an example block device mapping for an EBS-backed instance. It maps /dev/sdb to ephemeral0 and maps two EBS volumes, one to /dev/sdh and the other to /dev/sdj. It also shows the EBS volume that is the root device volume, /dev/sda1.\nNote that this example block device mapping is used in the example commands and APIs in this topic. You can find example commands and APIs that create block device mappings in Specify a block device mapping for an AMI and Update the block device mapping when launching an instance.\nHow devices are made available in the operating system\nDevice names like /dev/sdh and xvdh are used by Amazon EC2 to describe block devices. The block device mapping is used by Amazon EC2 to specify the block devices to attach to an EC2 instance. After a block device is attached to an instance, it must be mounted by the operating system before you can access the storage device. When a block device is detached from an instance, it is unmounted by the operating system and you can no longer access the storage device.\nLinux instances \u2013 The device names specified in the block device mapping are mapped to their corresponding block devices when the instance first boots. The instance type determines which instance store volumes are formatted and mounted by default. You can mount additional instance store volumes at launch, as long as you don't exceed the number of instance store volumes available for your instance type. For more information, see Instance store temporary block storage for EC2 instances. The block device driver for the instance determines which devices are used when the volumes are formatted and mounted.\nWindows instances \u2013 The device names specified in the block device mapping are mapped to their corresponding block devices when the instance first boots, and then the Ec2Config service initializes and mounts the drives. The root device volume is mounted as C:\\. The instance store volumes are mounted as Z:\\, Y:\\, and so on. When an EBS volume is mounted, it can be mounted using any available drive letter. However, you can configure how drive letters are assigned to EBS volumes; for more information, see Windows launch agents on Amazon EC2 Windows instances."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-block-device-mapping.html",
        "content": "Each AMI has a block device mapping that specifies the block devices to attach to an instance when it is launched from the AMI. To add more block devices to an AMI, you must create your own AMI.\nContents\nSpecify a block device mapping for an AMI\nView the EBS volumes in an AMI block device mapping\nSpecify a block device mapping for an AMI\nThere are two ways to specify volumes in addition to the root volume when you create an AMI. If you've already attached volumes to a running instance before you create an AMI from the instance, the block device mapping for the AMI includes those same volumes. For EBS volumes, the existing data is saved to a new snapshot, and it's this new snapshot that's specified in the block device mapping. For instance store volumes, the data is not preserved.\nFor an EBS-backed AMI, you can add EBS volumes and instance store volumes using a block device mapping. For an instance store-backed AMI, you can add instance store volumes only by modifying the block device mapping entries in the image manifest file when registering the image.\nNote\nFor M3 instances, you must specify instance store volumes in the block device mapping for the instance when you launch it. When you launch an M3 instance, instance store volumes specified in the block device mapping for the AMI may be ignored if they are not specified as part of the instance block device mapping.\nConsole\nCommand line\nTo add volumes to an AMI using the console\nOpen the Amazon EC2 console.\nIn the navigation pane, choose Instances.\nSelect an instance and choose Actions, Image and templates, Create image.\nEnter a name and a description for the image.\nThe instance volumes appear under Instance volumes. To add another volume, choose Add volume.\nFor Volume type, choose the volume type. For Device choose the device name. For an EBS volume, you can specify additional details, such as a snapshot, volume size, volume type, IOPS, and encryption state.\nChoose Create image.\nView the EBS volumes in an AMI block device mapping\nYou can easily enumerate the EBS volumes in the block device mapping for an AMI.\nConsole\nCommand line\nTo view the EBS volumes for an AMI using the console\nOpen the Amazon EC2 console.\nIn the navigation pane, choose AMIs.\nChoose EBS images from the Filter list to get a list of EBS-backed AMIs.\nSelect the desired AMI, and look at the Details tab. At a minimum, the following information is available for the root device:\nRoot Device Type (ebs)\nRoot Device Name (for example, /dev/sda1)\nBlock Devices (for example, /dev/sda1=snap-1234567890abcdef0:8:true)\nIf the AMI was created with additional EBS volumes using a block device mapping, the Block Devices field displays the mapping for those additional volumes as well. (This screen doesn't display instance store volumes.)"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-block-device-mapping.html",
        "content": "By default, an instance that you launch includes any storage devices specified in the block device mapping of the AMI from which you launched the instance. You can specify changes to the block device mapping for an instance when you launch it, and these updates overwrite or merge with the block device mapping of the AMI.\nLimitations\nFor the root volume, you can only modify the following: volume size, volume type, and the Delete on Termination flag.\nWhen you modify an EBS volume, you can't decrease its size. Therefore, you must specify a snapshot whose size is equal to or greater than the size of the snapshot specified in the block device mapping of the AMI.\nContents\nUpdate the block device mapping when launching an instance\nUpdate the block device mapping of a running instance\nView the EBS volumes in an instance block device mapping\nView the instance block device mapping for instance store volumes\nUpdate the block device mapping when launching an instance\nYou can add EBS volumes and instance store volumes to an instance when you launch it. Note that updating the block device mapping for an instance doesn't make a permanent change to the block device mapping of the AMI from which it was launched.\nConsole\nCommand line\nTo add volumes to an instance using the console\nOpen the Amazon EC2 console.\nFrom the dashboard, choose Launch Instance.\nOn the Choose an Amazon Machine Image (AMI) page, select the AMI to use and choose Select.\nFollow the wizard to complete the Choose an Instance Type and Configure Instance Details pages.\nOn the Add Storage page, you can modify the root volume, EBS volumes, and instance store volumes as follows:\nTo change the size of the root volume, locate the Root volume under the Type column, and change its Size field.\nTo suppress an EBS volume specified by the block device mapping of the AMI used to launch the instance, locate the volume and click its Delete icon.\nTo add an EBS volume, choose Add New Volume, choose EBS from the Type list, and fill in the fields (Device, Snapshot, and so on).\nTo suppress an instance store volume specified by the block device mapping of the AMI used to launch the instance, locate the volume, and choose its Delete icon.\nTo add an instance store volume, choose Add New Volume, select Instance Store from the Type list, and select a device name from Device.\nComplete the remaining wizard pages, and choose Launch.\nUpdate the block device mapping of a running instance\nYou can use the modify-instance-attribute command to update the block device mapping of a running instance. You do not need to stop the instance before changing this attribute.\naws ec2 modify-instance-attribute --instance-id i-1a2b3c4d --block-device-mappings file://mapping.json\nFor example, to preserve the root volume at instance termination, specify the following in mapping.json.\n[\n  {\n    \"DeviceName\": \"/dev/sda1\",\n    \"Ebs\": {\n      \"DeleteOnTermination\": false\n    }\n  }\n]\nAlternatively, you can use the -BlockDeviceMapping parameter with the Edit-EC2InstanceAttribute command (AWS Tools for Windows PowerShell).\nView the EBS volumes in an instance block device mapping\nYou can easily enumerate the EBS volumes mapped to an instance.\nNote\nFor instances launched before the release of the 2009-10-31 API, AWS can't display the block device mapping. You must detach and reattach the volumes so that AWS can display the block device mapping.\nConsole\nCommand line\nTo view the EBS volumes for an instance using the console\nOpen the Amazon EC2 console.\nIn the navigation pane, choose Instances.\nIn the search box, enter Root device type, and then choose EBS. This displays a list of EBS-backed instances.\nSelect the desired instance and look at the details displayed in the Storage tab. At a minimum, the following information is available for the root device:\nRoot device type (for example, EBS)\nRoot device name (for example, /dev/xvda)\nBlock devices (for example, /dev/xvda, /dev/sdf, and /dev/sdj)\nIf the instance was launched with additional EBS volumes using a block device mapping, they appear under Block devices. Any instance store volumes do not appear on this tab.\nTo display additional information about an EBS volume, choose its volume ID to go to the volume page.\nView the instance block device mapping for instance store volumes\nThe instance type determines the number and type of instance store volumes that are available to the instance. If the number of instance store volumes in a block device mapping exceeds the number of instance store volumes available to an instance, the additional volumes are ignored. To view the instance store volumes for your instance, run the lsblk command (Linux instances) or open Windows Disk Management (Windows instances). To learn how many instance store volumes are supported by each instance type, see Amazon EC2 instance type specifications.\nWhen you view the block device mapping for your instance, you can see only the EBS volumes, not the instance store volumes. The method you use to view the instance store volumes for your instance depends on the volume type.\nNVMe instance store volumes\nLinux instances\nWindows instances\nHDD or SSD instance store volumes\nYou can use instance metadata to query the HDD or SSD instance store volumes in the block device mapping. NVMe instance store volumes are not included.\nThe base URI for all requests for instance metadata is http://169.254.169.254/latest/. For more information, see Use instance metadata to manage your EC2 instance.\nLinux instances\nWindows instances"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-windows-volumes.html",
        "content": "Note\nThis topic applies to Windows instances only.\nYour Windows instance comes with an EBS volume that serves as the root volume. If your Windows instance uses AWS PV or Citrix PV drivers, you can optionally add up to 25 volumes, making a total of 26 volumes. For more information, see Amazon EBS volume limits for Amazon EC2 instances.\nDepending on the instance type of your instance, you'll have from 0 to 24 possible instance store volumes available to the instance. To use any of the instance store volumes that are available to your instance, you must specify them when you create your AMI or launch your instance. You can also add EBS volumes when you create your AMI or launch your instance, or attach them while your instance is running.\nWhen you add a volume to your instance, you specify the device name that Amazon EC2 uses. For more information, see Device names for volumes on Amazon EC2 instances. AWS Windows Amazon Machine Images (AMIs) contain a set of drivers that are used by Amazon EC2 to map instance store and EBS volumes to Windows disks and drive letters.\nMethods to map disks to EBS volumes\nMap NVME disks to volumes\nMap non-NVME disks to volumes"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/windows-list-disks-nvme.html",
        "content": "With Nitro-based instances, EBS volumes are exposed as NVMe devices. This topic explains how to view the NVMe disks that are available to the Windows operating system on your instance. It also shows how to map those NVMe disks to the underlying Amazon EBS volumes and the device names specified for the block device mappings used by Amazon EC2.\nTopics\nList NVMe disks\nMap NVMe disks to volumes\nList NVMe disks\nYou can find the disks on your Windows instance using Disk Management or Powershell.\nDisk Management\nPowerShell\nTo find the disks on your Windows instance\nLog in to your Windows instance using Remote Desktop. For more information, see Connect to your Windows instance using RDP.\nStart the Disk Management utility.\nReview the disks. The root volume is an EBS volume mounted as C:\\. If there are no other disks shown, then you didn't specify additional volumes when you created the AMI or launched the instance.\nThe following is an example that shows the disks that are available if you launch an r5d.4xlarge instance with two additional EBS volumes.\nMap NVMe disks to volumes\nYou can use the Get-Disk command to map Windows disk numbers to EBS volume IDs.\nPS C:\\> Get-Disk\nNumber Friendly Name Serial Number                    HealthStatus         OperationalStatus      Total Size Partition\n                                                                                                             Style\n------ ------------- -------------                    ------------         -----------------      ---------- ----------\n3      NVMe Amazo... AWS6AAD8C2AEEE1193F0_00000001.   Healthy              Online                   279.4 GB MBR\n4      NVMe Amazo... AWS13E7299C2BD031A28_00000001.   Healthy              Online                   279.4 GB MBR\n2      NVMe Amazo... vol0a4064b39e5f534a2_00000001.   Healthy              Online                       8 GB MBR\n0      NVMe Amazo... vol03683f1d861744bc7_00000001.   Healthy              Online                      30 GB MBR\n1      NVMe Amazo... vol082b07051043174b9_00000001.   Healthy              Online                       8 GB MBR\nYou can also run the ebsnvme-id command to map NVMe disk numbers to EBS volume IDs and device names.\nPS C:\\> C:\\PROGRAMDATA\\Amazon\\Tools\\ebsnvme-id.exe\nDisk Number: 0\nVolume ID: vol-03683f1d861744bc7\nDevice Name: sda1\n\nDisk Number: 1\nVolume ID: vol-082b07051043174b9\nDevice Name: xvdb\n\nDisk Number: 2\nVolume ID: vol-0a4064b39e5f534a2\nDevice Name: xvdc"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/windows-list-disks.html",
        "content": "For instances launched from a Windows AMI that uses AWS PV or Citrix PV drivers, you can use the relationships described on this page to map your Windows disks to your instance store and EBS volumes. This topic explains how to view the non-NVMe disks that are available to the Windows operating system on your instance. It also shows how to map those non-NVMe disks to the underlying Amazon EBS volumes and the device names specified for the block device mappings used by Amazon EC2.\nNote\nIf you launch an instance If your Windows AMI uses Red Hat PV drivers, you can update your instance to use the Citrix drivers. For more information, see Upgrade PV drivers on EC2 Windows instances.\nTopics\nList non-NVMe disks\nMap non-NVMe disks to volumes\nList non-NVMe disks\nYou can find the disks on your Windows instance using Disk Management or PowerShell.\nDisk Management\nPowerShell\nTo find the disks on your Windows instance\nLog in to your Windows instance using Remote Desktop. For more information, see Connect to your Windows instance using RDP.\nStart the Disk Management utility.\nOn the taskbar, right-click the Windows logo, and then choose Disk Management.\nReview the disks. The root volume is an EBS volume mounted as C:\\. If there are no other disks shown, then you didn't specify additional volumes when you created the AMI or launched the instance.\nThe following is an example that shows the disks that are available if you launch an m3.medium instance with an instance store volume (Disk 2) and an additional EBS volume (Disk 1).\nRight-click the gray pane labeled Disk 1, and then select Properties. Note the value of Location and look it up in the tables in Map non-NVMe disks to volumes. For example, the following disk has the location Bus Number 0, Target Id 9, LUN 0. According to the table for EBS volumes, the device name for this location is xvdj.\nMap non-NVMe disks to volumes\nThe block device driver for the instance assigns the actual volume names when mounting volumes.\nMappings\nInstance store volumes\nEBS volumes\nInstance store volumes\nThe following table describes how the Citrix PV and AWS PV drivers map non-NVMe instance store volumes to Windows volumes. The number of available instance store volumes is determined by the instance type. For more information, see Instance store volume limits for EC2 instances.\nLocation Device name\nBus Number 0, Target ID 78, LUN 0\nxvdca\nBus Number 0, Target ID 79, LUN 0\nxvdcb\nBus Number 0, Target ID 80, LUN 0\nxvdcc\nBus Number 0, Target ID 81, LUN 0\nxvdcd\nBus Number 0, Target ID 82, LUN 0\nxvdce\nBus Number 0, Target ID 83, LUN 0\nxvdcf\nBus Number 0, Target ID 84, LUN 0\nxvdcg\nBus Number 0, Target ID 85, LUN 0\nxvdch\nBus Number 0, Target ID 86, LUN 0\nxvdci\nBus Number 0, Target ID 87, LUN 0\nxvdcj\nBus Number 0, Target ID 88, LUN 0\nxvdck\nBus Number 0, Target ID 89, LUN 0\nxvdcl\nEBS volumes\nThe following table describes how the Citrix PV and AWS PV drivers map non-NVME EBS volumes to Windows volumes.\nLocation Device name\nBus Number 0, Target ID 0, LUN 0\n/dev/sda1\nBus Number 0, Target ID 1, LUN 0\nxvdb\nBus Number 0, Target ID 2, LUN 0\nxvdc\nBus Number 0, Target ID 3, LUN 0\nxvdd\nBus Number 0, Target ID 4, LUN 0\nxvde\nBus Number 0, Target ID 5, LUN 0\nxvdf\nBus Number 0, Target ID 6, LUN 0\nxvdg\nBus Number 0, Target ID 7, LUN 0\nxvdh\nBus Number 0, Target ID 8, LUN 0\nxvdi\nBus Number 0, Target ID 9, LUN 0\nxvdj\nBus Number 0, Target ID 10, LUN 0\nxvdk\nBus Number 0, Target ID 11, LUN 0\nxvdl\nBus Number 0, Target ID 12, LUN 0\nxvdm\nBus Number 0, Target ID 13, LUN 0\nxvdn\nBus Number 0, Target ID 14, LUN 0\nxvdo\nBus Number 0, Target ID 15, LUN 0\nxvdp\nBus Number 0, Target ID 16, LUN 0\nxvdq\nBus Number 0, Target ID 17, LUN 0\nxvdr\nBus Number 0, Target ID 18, LUN 0\nxvds\nBus Number 0, Target ID 19, LUN 0\nxvdt\nBus Number 0, Target ID 20, LUN 0\nxvdu\nBus Number 0, Target ID 21, LUN 0\nxvdv\nBus Number 0, Target ID 22, LUN 0\nxvdw\nBus Number 0, Target ID 23, LUN 0\nxvdx\nBus Number 0, Target ID 24, LUN 0\nxvdy\nBus Number 0, Target ID 25, LUN 0\nxvdz"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/storage-twp.html",
        "content": "Note\nTorn write prevention is supported with Linux instances only.\nTorn write prevention is a block storage feature designed by AWS to improve the performance of your I/O-intensive relational database workloads and reduce latency without negatively impacting data resiliency. Relational databases that use InnoDB or XtraDB as the database engine, such as MySQL and MariaDB, will benefit from torn write prevention.\nTypically, relational databases that use pages larger than the power fail atomicity of the storage device use data logging mechanisms to protect against torn writes. MariaDB and MySQL use a doublewrite buffer file to log data before writing it to data tables. In the event of incomplete or torn writes, as a result of operating system crashes or power loss during write transactions, the database can recover the data from the doublewrite buffer. The additional I/O overhead associated with writing to the doublewrite buffer impacts database performance and application latency, and it reduces the number transactions that can be processed per second. For more information about doublewrite buffer, see the MariaDB and MySQL documentation.\nWith torn write prevention, data is written to storage in all-or-nothing write transactions, which eliminates the need for using the doublewrite buffer. This prevents partial, or torn, data from being written to storage in the event of operating system crashes or power loss during write transactions. The number of transactions processed per second can be increased by up to 30 percent, and write latency can be decreased by up to 50 percent, without compromising the resiliency of your workloads.\nPricing\nThere are no additional costs for using torn write prevention.\nContents\nSupported block sizes\nRequirements\nCheck instance support\nConfigure workload"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/supported-block-sizes.html",
        "content": "Torn write prevention supports write operations for 4 KiB, 8 KiB, and 16 KiB blocks of data. The data block start logical block address (LBA) must be aligned to the respective block boundary size of 4 KiB, 8 KiB, or 16 KiB. For example, for 16 KiB write operations, the data block start LBA must be aligned to a block boundary size of 16 KiB.\nThe following table shows support across storage and instance types.\n  4 KiB blocks 8 KiB blocks 16 KiB blocks\nInstance store volumes All NVMe instance store volumes attached to current generation I-family instances. I4i, Im4gn, Is4gen, and I7ie instances supported by AWS Nitro SSD.\nAmazon EBS volumes All Amazon EBS volumes attached to Nitro-based instances.\nTo confirm whether your instance and volume support torn write prevention, query to check if the instance supports torn write prevention and other details, like supported block and boundary sizes. For more information, see Check Amazon EC2 instance support for torn write prevention."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/twp-reqs.html",
        "content": "For torn write prevention to work properly, an I/O operation must meet size, alignment, and boundary requirements, as specified in the NTWPU, NTWGU, NTWBU fields. You must configure your operating system to ensure that the specific storage subsystem (file system, LVM, RAID, etc) does not modify I/O properties down the storage stack, including block merges, splits, or block address relocation, before being submitted to the device.\nTorn write prevent has been tested with the following configuration:\nAn instance type and storage type that supports the required block size.\nAmazon Linux 2 with kernel version 5.10 or later.\next4 with bigalloc enabled and a cluster size of 16 KiB, and the most recent ext4 utilities (e2fsprogs 1.46.5 or later).\nO_DIRECT file access mode to bypass Linux kernel buffer cache.\nNote\nYou do not need to disable I/O merging for MySQL and MariaDB workloads."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/twp-namespace.html",
        "content": "To confirm whether your instance and volume supports torn write prevention, and to view the NVMe namespace vendor specific data that contains torn write prevention information, use the following command.\n$ sudo nvme id-ns -v device_name\nNote\nThe command returns the vendor-specific information in hex with ASCII interpretation. You might need to build a tool, similar to ebsnvme-id, into your applications that can read and parse the output.\nFor example, the following command returns the NVMe namespace vendor specific data that contains torn write prevention information for /dev/nvme1n1.\n$ sudo nvme id-ns -v /dev/nvme1n1\nIf your instance and volume support torn write prevention, it returns the following AWS torn write prevention information in the NVMe namespace vendor specific data.\nNote\nThe bytes in the following table represent the offset in bytes from the beginning of the NVMe namespace vendor specific data.\nBytes Description\n0:31 The name of the device attachment mount point, for example /dev/xvda. You provide this during volume attachment request and it can be used by the Amazon EC2 instance to create a symlink to the NVMe block device(nvmeXn1).\n32:63 The volume ID. For example, vol01234567890abcdef. This field can be used to map the NVMe device to the attached volume.\n64:255 Reserved for future use.\n256:257 Namespace Torn Write Prevention Unit size (NTWPU). This field indicates the namespace specific size of the write operation guaranteed to be written atomically to the NVM during a power failure or error condition. This field is specified in logical blocks represented in zero based values.\n258:259 Namespace Torn Write Prevention Granularity size (NTWPG). This field indicates the namespace specific size increments below NTWPU of the write operation guaranteed to be written atomically to the NVM during a power failure or error condition. That is, size should be NTWPG * n <= NTWPU where n is positive integer. The write operation LBA offset also must be aligned to this field. This field is specified in logical blocks represented in zero based values.\n260:263 Namespace Torn Write Prevention Boundary size (NTWPB). This field indicates the atomic boundary size for this namespace for the NTWPU value. Writes to this namespace that cross atomic boundaries are not guaranteed to be written atomically to the NVM during a power failure or error condition. A value of 0h indicates that there are no atomic boundaries for power fail or error conditions. All other values specify a size in terms of logical blocks using the same encoding as the NTWPU field."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configure-twp.html",
        "content": "Torn write prevention is enabled by default on supported instance types with supported volumes. You do not need to enabled any additional settings to enable your volume or instance for torn write prevention.\nNote\nThere is no performance impact on workloads that do not support torn write prevention. You do not need to make any changes for these workloads.\nWorkloads that do support torn write prevention, but are not configured to use it, continue to use the doublewrite buffer and do not receive any performance benefits.\nTo configure your MySQL or MariaDB software stack to disable the doublewrite buffer and use torn write prevention, complete the following steps:\nConfigure your volume to use ext4 file system with the BigAlloc option and set the cluster size to 4 KiB, 8 KiB, or 16 KiB. Using BigAlloc with a cluster size of 4 KiB, 8 KiB, or 16 KiB ensures that the file system allocates files that align with the respective boundary.\n$  mkfs.ext4 -O bigalloc -C 4096|8192|16384 device_name\nNote\nFor MySQL and MariaDB, you must use -C 16384 to match the database page size. Setting allocation granularity to a value other than a multiple of the page size can result in allocations that might be mismatched with torn write prevention boundaries of the storage device.\nFor example:\n$  mkfs.ext4 -O bigalloc -C 16384 /dev/nvme1n1\nConfigure InnoDB to use the 0_DIRECT flushing method and turn off InnoDB doublewrite. Use your preferred text editor to open /etc/my.cnf, and update the innodb_flush_method and innodb_doublewrite parameters as follows:\ninnodb_flush_method=O_DIRECT\ninnodb_doublewrite=0\nImportant\nIf you are using Logical Volume Manager (LVM) or other storage virtualization layer, make sure that the starting offsets of the volumes are aligned on 16 KiB multiples. This is relative to the underlying NVMe storage to account for the metadata headers and superblocks used by the storage virtualization layer. If you add an offset to the LVM physical volume, it can cause misalignment between the file system allocations and the NVMe device's offsets, which would invalidate torn write prevention. For more information, see --dataalignmentoffset in the Linux manual page."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/application-consistent-snapshots.html",
        "content": "You can take application-consistent snapshots of all Amazon EBS volumes attached to your Amazon EC2 Windows instances using AWS Systems Manager Run Command. The snapshot process uses the Windows Volume Shadow Copy Service (VSS) to take EBS volume level backups of VSS-aware applications. The snapshots include data from pending transactions between these applications and the disk. You don't have to shut down your instances or disconnect them when you need to back up all attached volumes.\nThere is no additional cost to use VSS based EBS snapshots. You only pay for EBS snapshots created by the backup process. For more information, see How am I billed for my Amazon EBS snapshots?\nNote\nApplication consistent Windows VSS based snapshots are supported with Windows instances only.\nContents\nWhat is VSS?\nHow the VSS based Amazon EBS snapshot solution works\nVSS prerequisites\nCreate VSS snapshots\nTroubleshoot VSS snapshots\nRestore EBS volumes\nVersion history\nWhat is VSS?\nVolume Snapshot Copy Service (VSS) is a backup and recovery technology included in Microsoft Windows. It can create backup copies, or snapshots, of computer files or volumes while they are in use. For more information, see Volume Shadow Copy Service.\nTo create an application-consistent snapshot, the following software components are involved.\nVSS service \u2014 Part of the Windows operating system\nVSS requester \u2014 The software that requests the creation of shadow copies\nVSS writer \u2014 Typically provided as part of an application, such as SQL Server, to ensure a consistent data set to back up\nVSS provider \u2014 The component that creates the shadow copies of the underlying volumes\nThe Windows VSS based Amazon EBS snapshot solution consists of multiple Systems Manager (SSM) Run Command documents that facilitate backup creation, and a Systems Manager Distributor package, called AwsVssComponents, that includes an EC2 VSS requester and an EC2 VSS provider. The AwsVssComponents package must be installed on EC2 Windows instances to take application-consistent snapshots of EBS volumes. The following diagram illustrates the relationship between these software components.\nHow the VSS based Amazon EBS snapshot solution works\nThe process for taking application-consistent, VSS based EBS snapshot scripts consists of the following steps.\nComplete the Prerequisites to create Windows VSS based EBS snapshots.\nEnter parameters for the AWSEC2-VssInstallAndSnapshot SSM document and run this document by using Run Command. For more information, see Run the AWSEC2-VssInstallAndSnapshot command document (recommended).\nThe Windows VSS service on your instance coordinates all ongoing I/O operations for running applications.\nThe system flushes all I/O buffers and temporarily pauses all I/O operations. The pause lasts, at most, ten seconds.\nDuring the pause, the system creates snapshots of all volumes attached to the instance.\nThe pause is lifted and I/O resumes operation.\nThe system adds all newly-created snapshots to the list of EBS snapshots. The system tags all VSS based EBS snapshots successfully created by this process with AppConsistent:true.\nIf you need to restore from a snapshot, you can use the standard EBS process of creating a volume from a snapshot, or you can restore all volumes to an instance by using a sample script, as described in Restore EBS volumes for your Windows instance from VSS based snapshots."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/application-consistent-snapshots-prereqs.html",
        "content": "You can create VSS based EBS snapshots with Systems Manager Run Command, AWS Backup, or Amazon Data Lifecycle Manager. The following prerequisites apply for all solutions.\nSystem requirements\nEnsure that your EC2 Windows instance meets all of the system requirements to create VSS based snapshots, including supported versions of the Windows operating system, .NET framework, PowerShell, AWS Tools for Windows PowerShell, and the AWS Systems Manager Agent.\nIAM permissions\nThe IAM role that's attached to your Amazon EC2 Windows instance must have permission to create application-consistent snapshots with VSS. To grant the necessary permissions, you can attach the AWSEC2VssSnapshotPolicy managed policy to your instance profile.\nVSS components\nTo create application-consistent snapshots on Windows operating systems, the AwsVssComponents package must be installed on the instance. The package contains an on-instance EC2 VSS Agent that functions as the VSS requester, and an EC2 VSS provider for EBS volumes.\nSystem requirements\nInstall the Systems Manager Agent\nVSS is orchestrated by the Systems Manager Agent using PowerShell. Ensure that you have installed SSM Agent version 3.0.502.0 or later on your EC2 instance. If you are already using an older version of the SSM Agent, update it using Run Command. For more information, see Setting up Systems Manager for Amazon EC2 instances and Working with SSM Agent on Amazon EC2 instances for Windows Server in the AWS Systems Manager User Guide.\nAmazon EC2 Windows instance requirements\nVSS based EBS snapshots are supported for instances running Windows Server 2016 and later.\n.NET Framework version\nThe AwsVssComponents package requires .NET Framework version 4.6 or later. Windows operating system versions prior to Windows Server 2016 default to an earlier version of the .NET Framework. If your instance uses an earlier version of the .NET Framework, you must install version 4.6 or later using Windows Update.\nAWS Tools for Windows PowerShell version\nEnsure that your instance is running AWS Tools for Windows PowerShell version 3.3.48.0 or later. To check your version, run the following command in the PowerShell terminal on the instance.\nC:\\> Get-AWSPowerShellVersion\nIf you need to update AWS Tools for Windows PowerShell on your instance, see Installing the AWS Tools for Windows PowerShell in the AWS Tools for Windows PowerShell User Guide.\nWindows PowerShell version\nEnsure that your instance is running Windows PowerShell major version 3, 4, or 5. To check your version, run the following command in a PowerShell terminal on the instance.\nC:\\> $PSVersionTable.PSVersion\nPowerShell language mode\nEnsure that your instance has the PowerShell language mode set to FullLanguage. For more information, see about_Language_Modes in the Microsoft documentation."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vss-iam-reqs.html",
        "content": "The AWSEC2VssSnapshotPolicy managed policy enables Systems Manager to perform the following actions on your Windows instance:\nCreate and tag EBS snapshots\nCreate and tag Amazon Machine Images (AMIs)\nAttach metadata, such as the device ID, to the default snapshot tags that VSS creates.\nThis topic covers permission details for the VSS managed policy, and how to attach it to your EC2 instance profile IAM role.\nContents\nAWSEC2VssSnapshotPolicy managed policy details\nAttach the VSS snapshot managed policy to your instance profile role\nAWSEC2VssSnapshotPolicy managed policy details\nAn AWS managed policy is a standalone policy that Amazon provides for AWS customers. AWS managed policies are designed to grant permissions for common use cases. You can't change the permissions that are defined in AWS managed policies. However, you can copy the policy and use it as a baseline for a customer managed policy that is specific to your use case.\nFor more information about AWS managed policies, see AWS managed policies in the IAM User Guide.\nTo use the AWSEC2VssSnapshotPolicy managed policy, you can attach it to the IAM role that's attached to your EC2 Windows Instances. This policy enables the EC2 VSS solution to create and add tags to Amazon Machine Images (AMIs) and EBS Snapshots. To attach the policy, see Attach the VSS snapshot managed policy to your instance profile role.\nPermissions granted by AWSEC2VssSnapshotPolicy\nThe AWSEC2VssSnapshotPolicy policy includes the following Amazon EC2 permissions to allow Amazon EC2 to create and manage VSS snapshots on your behalf. You can attach this managed policy to the IAM instance profile role that you use for your EC2 Windows instances.\nec2:CreateTags \u2013 Add tags to EBS snapshots and AMIs to help identify and categorize the resources.\nec2:DescribeInstanceAttribute \u2013 Retrieve the EBS volumes and corresponding block device mappings that are attached to the target instance.\nec2:CreateSnapshots \u2013 Create snapshots of EBS volumes.\nec2:CreateImage \u2013 Create an AMI from a running EC2 instance.\nec2:DescribeImages \u2013 Retrieve the information for EC2 AMIs and snapshots.\nec2:DescribeSnapshots \u2013 Determine the create time and status of snapshots to verify application consistency.\nNote\nTo view permission details for this policy, see AWSEC2VssSnapshotPolicy in the AWS Managed Policy Reference.\nStreamline permissions for specific use cases - advanced\nThe AWSEC2VssSnapshotPolicy managed policy includes permissions for all of the ways that you can create VSS based snapshots. You can create a custom policy that includes only the permissions that you need.\nUse case: Create AMI, Use case: Use AWS Backup service\nIf you exclusively use the CreateAmi option, or if you create VSS based snapshots only through the AWS Backup service, then you can streamline the policy statements as follows.\nOmit policy statements identified by the following statement IDs (SIDs):\nCreateSnapshotsWithTag\nCreateSnapshotsAccessInstance\nCreateSnapshotsAccessVolume\nAdjust the CreateTagsOnResourceCreation statement as follows:\nRemove arn:aws:ec2:*:*:snapshot/* from the resources.\nRemove CreateSnapshots from the ec2:CreateAction condition.\nAdjust the CreateTagsAfterResourceCreation statement to remove arn:aws:ec2:*:*:snapshot/* from the resources.\nAdjust the DescribeImagesAndSnapshots statement to remove ec2:DescribeSnapshots from the statement action.\nUse case: Snapshot only\nIf you don't use the CreateAmi option, then you can streamline the policy statements as follows.\nOmit policy statements identified by the following statement IDs (SIDs):\nCreateImageAccessInstance\nCreateImageWithTag\nAdjust the CreateTagsOnResourceCreation statement as follows:\nRemove arn:aws:ec2:*:*:image/* from the resources.\nRemove CreateImage from the ec2:CreateAction condition.\nAdjust the CreateTagsAfterResourceCreation statement to remove arn:aws:ec2:*:*:image/* from the resources.\nAdjust the DescribeImagesAndSnapshots statement to remove ec2:DescribeImages from the statement action.\nNote\nTo ensure that your customized policy performs as expected, we recommend that you regularly review and incorporate updates to the managed policy.\nAttach the VSS snapshot managed policy to your instance profile role\nTo grant permissions for VSS based snapshots for your EC2 Windows instance, you can attach the AWSEC2VssSnapshotPolicy managed policy to your instance profile role as follows. It's important to ensure that your instance meets all System requirements.\nNote\nTo use the managed policy, your instance must have the AwsVssComponents package version 2.3.1 or later installed. For version history, see AwsVssComponents package versions.\nOpen the IAM console at https://console.aws.amazon.com/iam/.\nIn the navigation pane, choose Roles to see a list of IAM roles that you have access to.\nSelect the Role name link for the role that's attached to your instance. This opens the role detail page.\nTo attach the managed policy, choose Add permissions, located in the upper right corner of the list panel. Then select Attach policies from the dropdown list.\nTo streamline results, enter the policy name in the search bar (AWSEC2VssSnapshotPolicy).\nSelect the checkbox next to the name of the policy to attach, and choose Add permissions."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/application-consistent-snapshots-getting-started.html",
        "content": "Before you create VSS based EBS snapshots, ensure that you have the latest version of the VSS components package installed on your Windows instance. There are several ways that you can install the AwsVssComponents package onto an existing instance, as follows:\n(Recommended) Run the AWSEC2-VssInstallAndSnapshot command document (recommended). This automatically installs or updates if needed every time it runs.\nManually install the VSS components on an EC2 Windows instance.\nUpdate the VSS components package on your EC2 Windows instance.\nYou can also create an AMI with EC2 Image Builder that uses the aws-vss-components-windows managed component to install the AwsVssComponents package for the image. The managed component uses AWS Systems Manager Distributor to install the package. After Image Builder creates the image, every instance that you launch from the associated AMI will have the VSS package installed on it. For more information about how you can create an AMI with the VSS package installed, see Distributor package managed components for Windows in the EC2 Image Builder User Guide.\nContents\nManual install\nUpdate components\nManually install the VSS components on an EC2 Windows instance\nYour EC2 Windows instance must have VSS components installed before you can create application-consistent snapshots with Systems Manager. If you don't run the AWSEC2-VssInstallAndSnapshot command document to automatically install or update the package every time you create application-consistent snapshots, you must manually install the package.\nYou must also install manually if you plan to use one of the following methods to create application-consistent snapshots from your EC2 instance.\nCreate VSS snapshots using AWS Backup\nCreate VSS snapshots using Amazon Data Lifecycle Manager\nIf you need to perform a manual install, we recommend that you use the latest AWS VSS component package to improve the reliability and performance of application-consistent snapshots on your EC2 Windows instances.\nNote\nTo automatically install or update the AwsVssComponents package whenever you create application-consistent snapshots, we recommend that you use Systems Manager to run the AWSEC2-VssInstallAndSnapshot document. For more information, see Run the AWSEC2-VssInstallAndSnapshot command document (recommended).\nTo install the VSS components on an Amazon EC2 Windows instance, follow the steps for your preferred environment.\nConsole\nAWS CLI\nPowerShell\nTo install the VSS components using SSM Distributor\nOpen the AWS Systems Manager console at https://console.aws.amazon.com/systems-manager/.\nIn the navigation pane, choose Run Command.\nChoose Run command.\nFor Command document, choose the button next to AWS-ConfigureAWSPackage.\nFor Command parameters, do the following:\nVerify that Action is set to Install.\nFor Name, enter AwsVssComponents.\nFor Version, enter a version or leave the field empty so that Systems Manager installs the latest version.\nFor Targets, identify the instances on which you want to run this operation by specifying tags or selecting instances manually.\nNote\nIf you choose to select instances manually, and an instance you expect to see is not included in the list, see Where Are My Instances? in the AWS Systems Manager User Guide for troubleshooting tips.\nFor Other parameters:\n(Optional) For Comment, type information about this command.\nFor Timeout (seconds), specify the number of seconds for the system to wait before failing the overall command execution.\n(Optional) For Rate control:\nFor Concurrency, specify either a number or a percentage of instances on which to run the command at the same time.\nNote\nIf you selected targets by choosing Amazon EC2 tags, and you are not certain how many instances use the selected tags, then limit the number of instances that can run the document at the same time by specifying a percentage.\nFor Error threshold, specify when to stop running the command on other instances after it fails on either a number or a percentage of instances. For example, if you specify three errors, then Systems Manager stops sending the command when the fourth error is received. Instances still processing the command might also send errors.\n(Optional) For Output options section, if you want to save the command output to a file, select the box next to Enable writing to an S3 bucket. Specify the bucket and (optional) prefix (folder) names.\nNote\nThe S3 permissions that grant the ability to write the data to an S3 bucket are those of the instance profile assigned to the instance, not those of the user performing this task. For more information, see Configure EC2 instance permissions in the AWS Systems Manager User Guide.\n(Optional) Specify options for SNS notifications.\nFor information about configuring Amazon SNS notifications for Run Command, see Configuring Amazon SNS Notifications for AWS Systems Manager.\nChoose Run.\nVerify the signature on AWS VSS components\nUse the following procedure to verify the signature on the AwsVssComponents package.\nConnect to your Windows instance. For more information, see Connect to your Windows instance using RDP.\nNavigate to C:\\Program Files\\Amazon\\AwsVssComponents.\nOpen the context (right-click) menu for ec2-vss-agent.exe, and then choose Properties.\nNavigate to the Digital Signatures tab and verify that the name of the signer is Amazon Web Services Inc.\nUse the preceding steps to verify the signature on Ec2VssInstaller and Ec2VssProvider.dll.\nUpdate the VSS components package on your EC2 Windows instance\nWe recommend that you keep the VSS components updated with the latest recommended version. There are several different ways that you can update components when a new version of the AwsVssComponents package is released.\nUpdate methods\nYou can repeat the steps described in Manually install the VSS components on an EC2 Windows instance when a new version of the AWS VSS components is released.\nYou can configure a Systems Manager State Manager association to automatically download and install new or updated VSS components when the AwsVssComponents package becomes available.\nYou can automatically install or update the AwsVssComponents package whenever you create application-consistent snapshots, when you use Systems Manager to run the AWSEC2-VssInstallAndSnapshot document.\nNote\nWe recommend that you use Systems Manager to run the AWSEC2-VssInstallAndSnapshot command document, which automatically installs or updates the AwsVssComponents package before it creates the application-consistent snapshots. For more information, see Run the AWSEC2-VssInstallAndSnapshot command document (recommended).\nTo create a Systems Manager State Manager association, follow the steps for your preferred environment.\nConsole\nAWS CLI\nTo create a State Manager association using the console\nOpen the AWS Systems Manager console at https://console.aws.amazon.com/systems-manager/.\nIn the navigation pane, choose State Manager.\nOr, if the Systems Manager homepage opens first, open the navigation pane and then choose State Manager.\nChoose Create association.\nIn the Name field, enter a descriptive name.\nIn the Document list, choose AWS-ConfigureAWSPackage.\nIn the Parameters section, choose Install from the Action list.\nFor Installation type, choose Uninstall and reinstall.\nIn the Name field, enter AwsVssComponents. You can keep the Version and Additional Arguments fields empty.\nIn the Targets section, choose an option.\nNote\nIf you choose to target instances by using tags, and you specify tags that map to Linux instances, the association succeeds on the Windows instance but fails on the Linux instances. The overall status of the association shows Failed.\nIn the Specify schedule section, choose an option.\nIn the Advanced options section, for Compliance severity, choose a severity level for the association. For more information, see Learn about association compliance. For Change Calendars, select a preconfigured change calendar. For more information, see about AWS Systems Manager Change Calendar.\nFor Rate control, do the following:\nFor Concurrency, specify either a number or a percentage of managed nodes on which to run the command at the same time.\nFor Error threshold, specify when to stop running the command on other managed nodes after it fails on either a number or a percentage of nodes.\n(Optional) For Output options, to save the command output to a file, select Enable writing output to S3. Enter the bucket and prefix (folder) names in the boxes.\nChoose Create association, and then choose Close. The system attempts to create the association on the instances and immediately apply the state.\nNote\nIf EC2 instances for Windows Server show a status of Failed, verify that the SSM Agent is running on the instance, and verify that the instance is configured with an AWS Identity and Access Management (IAM) role for Systems Manager. For more information, see Setting up AWS Systems Manager."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/create-vss-snaps.html",
        "content": "After you've met all of the Prerequisites to create Windows VSS based EBS snapshots, you can use any of the following methods to create VSS based snapshots from your EC2 instance.\nAWS Systems Manager command documents\nUse Systems Manager command documents to create VSS based snapshots.\nTo automate backups, you can create an AWS Systems Manager maintenance window task that uses the AWSEC2-VssInstallAndSnapshot command document. For more information, see Working with Maintenance Windows (Console) in the AWS Systems Manager User Guide.\nAWS Backup\nYou can create a VSS backup when using AWS Backup by enabling VSS in the console or CLI. For more information, see Creating Windows VSS backups in the AWS Backup Developer Guide.\nNote\nAWS Backup doesn\u2019t automatically install the AwsVssComponents package on your instance. You must perform a manual install on your instance. For more information, see Manually install the VSS components on an EC2 Windows instance.\nAmazon Data Lifecycle Manager\nYou can create VSS snapshots using Amazon Data Lifecycle Manager by enabling pre and post scripts in your snapshot lifecycle policies. For more information, see Automating application-consistent snapshots in the Amazon EBS User Guide.\nNote\nAmazon Data Lifecycle Manager doesn\u2019t automatically install the AwsVssComponents package on your instance. You must perform a manual install on your instance. For more information, see Manually install the VSS components on an EC2 Windows instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/create-vss-snapshots-ssm.html",
        "content": "You can use AWS Systems Manager command documents to create VSS based snapshots. The following content introduces the command documents that are available, and the runtime parameters that the documents use to create your snapshots.\nBefore you use any of the Systems Manager command documents, ensure that you've met all Prerequisites to create Windows VSS based EBS snapshots.\nTopics\nParameters for Systems Manager VSS snapshot documents\nRun Systems Manager VSS snapshot command documents\nParameters for Systems Manager VSS snapshot documents\nThe Systems Manager documents that create VSS snapshots all use the following parameters, except where noted:\nAmiName (string, optional)\nIf the CreateAmi option is set to True, specify the name of the AMI that the backup creates.\ndescription (string, optional)\nSpecify a description for the snapshots or image that this process creates.\nCollectDiagnosticLogs (string, optional)\nTo collect more information during snapshot and AMI creation steps, set this parameter to \"True\". The default value for this parameter is \"False\". Consolidated diagnostic logs are saved as a .zip format archive at the following location on your instance:\nC:\\ProgramData\\Amazon\\AwsVss\\Logs\\timestamp.zip\nCopyOnly (string, optional)\nIf you use the native SQL Server backup in addition to AWS VSS, performing a Copy-only backup prevents AWS VSS from breaking the native differential backup chain. To perform a Copy-only backup operation, set this parameter to True.\nThe default value for this parameter is False, which causes AWS VSS to perform a full backup operation.\nCreateAmi (string, optional)\nTo create a VSS based Amazon Machine Image (AMI) to back up your instance, set this parameter to True. The default value for this parameter is False, which backs up your instance with an EBS snapshot instead.\nFor more information about creating an AMI from an instance, see Create an Amazon EBS-backed AMI.\nexecutionTimeout (string, optional)\nSpecify the maximum time in seconds to run the snapshot creation process on the instance, or to create an AMI from the instance. Increasing this timeout allows the command to wait longer for VSS to start its freeze and complete tagging of the resources it creates. This timeout only applies to the snapshot or AMI creation steps. The initial step to install or update the AwsVssComponents package is not included in the timeout.\nExcludeBootVolume (string, optional)\nThis setting excludes boot volumes from the backup process if you create snapshots. To exclude boot volumes from your snapshots, set ExcludeBootVolume to True, and CreateAmi to False.\nIf you create an AMI for your backup, this parameter should be set to False. The default value for this parameter is False.\nNoWriters (string, optional)\nTo exclude application VSS writers from the snapshot process, set this parameter to True. Excluding application VSS writers can help you resolve conflicts with third-party VSS backup components. The default value for this parameter is False.\nIf SaveVssMetadata is True, this parameter must be set to False.\nSaveVssMetadata (string, optional)\nTo save VSS metadata files during every snapshot, set this parameter to True. The default value is False. VSS Metadata files help provide insights into which components or writers were included in a backup operation, and the associated files for each component.\nMetadata files have the associated snapshot set id in their names. You can find them at the following location on your instance:\nC:\\ProgramData\\Amazon\\AwsVss\\VssMetadata\\\nWarning\nSaving VSS metadata files requires AwsVssComponents package version 2.4.0 or later. If your instance has an earlier version installed, setting SaveVssMetadata to True causes the snapshot creation to fail.\nThe NoWriters and SaveVssMetadata parameters are mutually exclusive. If both are set to True then snapshot creation fails.\ntags (string, optional)\nWe recommend that you tag your snapshots and images to help you locate and manage your resources, for example, to restore volumes from a list of snapshots. The system adds the Name key, with a blank value where you can specify the name that you want to apply to your output snapshots or images.\nIf you want to specify additional tags, separate tags with a semicolon in between. For example, Key=Environment,Value=Test;Key=User,Value=TestUser1.\nBy default, the system adds the following reserved tags for VSS based snapshots and images.\nDevice \u2013 For VSS based snapshots, this is the device name of the EBS volume that the snapshot captures.\nAppConsistent \u2013 This tag indicates the successful creation of a VSS based snapshot or AMI.\nAwsVssConfig \u2013 This identifies snapshots and AMIs that are created with VSS enabled. The tag includes meta information such as the AwsVssComponents version, and the Snapshot Set ID.\nWarning\nSpecifying any of these reserved tags in your parameter list will cause an error.\nVssVersion (string, optional)\nFor the AWSEC2-VssInstallAndSnapshot document only, you can specify the VssVersion parameter to install a specific version of AwsVssComponents package on your instance. Leave this parameter blank to install the recommended default version.\nIf the specified version of the AwsVssComponents package is already installed, the script skips the install step and moves on to the backup step. For a list of AwsVssComponents package versions and operating support, see AWS VSS solution version history.\nRun Systems Manager VSS snapshot command documents\nYou can create VSS based EBS snapshots with AWS Systems Manager command documents as follows.\nRun the AWSEC2-VssInstallAndSnapshot command document (recommended)\nWhen you use AWS Systems Manager to run the AWSEC2-VssInstallAndSnapshot document, the script runs the following steps.\nThe script first installs or updates the AwsVssComponents package on your instance, depending on whether it's already installed.\nThe script creates the application-consistent snapshots after the first step completes.\nTo run the AWSEC2-VssInstallAndSnapshot document, follow the steps for your preferred environment.\nConsole\nAWS CLI\nPowerShell\nCreate VSS based EBS snapshots from the console\nOpen the AWS Systems Manager console at https://console.aws.amazon.com/systems-manager/.\nSelect Run Command from the navigation pane. This shows a list of commands that are currently running in your account, if applicable.\nChoose Run command. This opens a list of command documents that you have access to.\nSelect AWSEC2-VssInstallAndSnapshot from the list of command documents. To streamline results, you can enter all or part of the document name. You can also filter by the owner, by platform types, or by tags.\nWhen you select a command document, details populate below the list.\nSelect Default version at runtime from the Document version list.\nConfigure the Command parameters to define how AWSEC2-VssInstallAndSnapshot will install the AwsVssComponents package and back up with VSS snapshots or an AMI. For parameter details, see Parameters for Systems Manager VSS snapshot documents.\nFor Target selection, specify tags or select instances manually to identify the instances on which to run this operation.\nNote\nIf you select instances manually, and an instance you expect to see is not included in the list, see Where Are My Instances? for troubleshooting tips.\nFor additional parameters to define Systems Manager Run Command behavior such as Rate control, enter values as described in Running commands from the console.\nChoose Run.\nIf successful, the command populates the list of EBS snapshots with the new snapshots. You can locate these snapshots in the list of EBS snapshots by searching for the tags you specified, or by searching for AppConsistent. If the command execution failed, view the Systems Manager command output for details about why the execution failed. If the command successfully completed, but a specific volume backup failed, you can troubleshoot the failure in the list of EBS volumes.\nRun the AWSEC2-CreateVssSnapshot command document\nRun command documents for a Windows Failover Cluster with shared EBS storage\nNote\nTo automate backups, you can create an AWS Systems Manager maintenance window task that uses the AWSEC2-VssInstallAndSnapshot document. For more information, see Working with Maintenance Windows (Console) in the AWS Systems Manager User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/application-consistent-snapshots-troubleshooting.html",
        "content": "Before you try any other troubleshooting steps, we recommend that you verify the following details.\nEnsure that you've met all Prerequisites to create Windows VSS based EBS snapshots.\nVerify that you're using the latest Windows OS version support of the AwsVssComponents package for your operating system. The issue that you've observed might have been addressed in newer versions.\nTopics\nCheck log files\nCollect additional diagnostic logs\nUse VSS on instances with proxy configured\nError: Thaw pipe connection timed out, error on thaw, timeout waiting for VSS Freeze, or other timeout errors\nError: Cannot invoke method. Method invocation is supported only on core types in this language mode\nCheck log files\nIf you experience problems or receive error messages when you create VSS based EBS snapshots, you can view the command output in the Systems Manager console.\nFor Systems Manager documents that create VSS snapshots, you can set the CollectDiagnosticLogs parameter to \"True\" at runtime. When the CollectDiagnosticLogs parameter is set to \"True\", VSS collects additional logs to aid in debugging. For more information, see Collect additional diagnostic logs.\nIf you collect diagnostic logs, the Systems Manager document stores them on your instance at the following location: C:\\ProgramData\\Amazon\\AwsVss\\Logs\\timestamp.zip. The default for the CollectDiagnosticLogs parameter is \"False\".\nNote\nFor additional debugging help, you can send the .zip file to Support.\nThe following additional logs are available, whether you collect diagnostic logs or not:\n%ProgramData%\\Amazon\\SSM\\InstanceData\\InstanceID\\document\\orchestration\\SSMCommandID\\awsrunPowerShellScript\\runPowerShellScript\\stdout\n%ProgramData%\\Amazon\\SSM\\InstanceData\\InstanceID\\document\\orchestration\\SSMCommandID\\awsrunPowerShellScript\\runPowerShellScript\\stderr\nYou can also open the Event Viewer Windows application and choose Windows Logs, Application to view additional logs. To see events specifically from the EC2 Windows VSS Provider and the Volume Shadow Copy Service, filter by Source on the terms Ec2VssSoftwareProvider and VSS.\nIf you're using Systems Manager with VPC endpoints, and the Systems Manager send-command API action (Run Command in the console) failed, verify that you configured the following endpoint correctly: com.amazonaws.region.ec2.\nWithout the Amazon EC2 endpoint defined, the call to enumerate attached EBS volumes fails, which causes the Systems Manager command to fail. For more information about setting up VPC endpoints with Systems Manager, see Create a Virtual Private Cloud Endpoint in the AWS Systems Manager User Guide.\nCollect additional diagnostic logs\nTo collect additional diagnostic logs when you use the Systems Manager send command to run the VSS snapshot document, set the CollectDiagnosticLogs input parameter to \"True\" at runtime. We recommend that you set this parameter to \"True\" when you troubleshoot.\nTo see a command line example, select one of the following tabs.\nAWS CLI\nPowerShell\nThe following example runs the AWSEC2-CreateVssSnapshot Systems Manager document in the AWS CLI:\naws ssm send-command \\ \n--document-name \"AWSEC2-CreateVssSnapshot\" \\\n--instance-ids \"i-1234567890abcdef0\" \\\n--parameters '{\"description\":[\"Example - create diagnostic logs at runtime.\"],\"tags\":[\"Key=tag_name,Value=tag_value\"],\"CollectDiagnosticLogs\":[\"True\"]}'\nUse VSS on instances with proxy configured\nIf you experience problems when creating VSS based EBS snapshots on instances that use a proxy to reach EC2 endpoints, verify the following settings on your instance:\nVerify that the proxy is configured so that the EC2 service endpoints in the instance\u2019s Region and IMDS are reachable by AWS Tools for Windows PowerShell running as SYSTEM.\nTo support using the system configured WinHTTP proxy, make sure that you've installed the latest AwsVssComponents version on your instance. For more information about configuring WinHTTP proxy, see Netsh Commands for Windows Hypertext Transfer Protocol (WINHTTP) on the Microsoft website.\nError: Thaw pipe connection timed out, error on thaw, timeout waiting for VSS Freeze, or other timeout errors\nThe EC2 Windows VSS Provider might time out due to activity or services on the instance preventing VSS based snapshots from proceeding in a timely manner. The Windows VSS Framework provides a non-configurable 10-second window during which communication to the file system is paused. During this time, AWSEC2-CreateVssSnapshot snapshots your volumes.\nThe following issues can cause the EC2 Windows VSS Provider to run into time limits during a snapshot:\nExcessive I/O to a volume\nSlow responsiveness of the EC2 API on the instance\nFragmented volumes\nIncompatibility with some antivirus software\nIssues with a VSS Application writer\nWhen Module Logging is enabled for a large number of PowerShell modules, that can cause PowerShell scripts to run slowly\nMost timeout issues that occur when you run the AWSEC2-CreateVssSnapshot command document are related to the workload on the instance being too high at the time of the backup. The following actions can help you take a successful snapshot:\nRetry the AWSEC2-CreateVssSnapshot command to see if the snapshot attempt is successful. If retrying succeeds in some cases, reducing the instance load might make snapshots more successful.\nWait a while for the workload on the instance to decrease, and retry the AWSEC2-CreateVssSnapshot command. Alternatively, you can attempt snapshots when the instance is known to be under low stress.\nAttempt VSS snapshots when the antivirus software on the system is turned off. If this resolves the issue, refer to the antivirus software instructions and configure it to allow VSS snapshots.\nIf there is a high volume of Amazon EC2 API calls in your account within the same Region where you're running a snapshot, API throttling might delay snapshot operations. To reduce throttling impact, use the latest AwsVssComponents package. This package utilizes the EC2 CreateSnapshots API action to reduce the number of mutating actions like per-volume snapshot creation and tagging.\nIf you have multiple AWSEC2-CreateVssSnapshot command scripts running at the same time, you can take the following steps to reduce concurrency issues.\nConsider scheduling snapshots during periods of lower API activity.\nIf you use Run Command in the Systems Manager console (or SendCommand in the API) to run the command script, you can use Systems Manager rate controls to reduce concurrency.\nYou can also use Systems Manager rate controls to reduce concurrency for services like AWS Backup that use Systems Manager to run the command script.\nRun the command vssadmin list writers in a shell and see if it reports any errors in the Last error field for any writers on the system. If any writers report a time out error, consider retrying snapshots when the instance is under less load.\nWhen you use smaller instance types like t2 | t3 | t3a.nano or t2 | t3 | t3a.micro, timeouts due to memory and CPU constraints can occur. The following actions might help reduce timeout issues.\nTry closing memory or CPU intensive applications before taking snapshots.\nTry taking snapshots during periods of lower instance activity.\nError: Cannot invoke method. Method invocation is supported only on core types in this language mode\nYou will encounter this error when the PowerShell language mode is not set to FullLanguage. The AWSEC2-CreateVssSnapshot SSM document requires PowerShell to be configured to FullLanguage mode.\nTo verify the language mode, run the following command on the instance in a PowerShell console:\n$ExecutionContext.SessionState.LanguageMode\nFor more information about language modes, see about_Language_Modes in the Microsoft documentation."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/application-consistent-snapshots-restore.html",
        "content": "You can use the RestoreVssSnapshotSampleScript.ps1 script to restore volumes on an instance from VSS based EBS snapshots. This script performs the following tasks:\nStops an instance\nRemoves all existing drives from the instance (except the boot volume, if it was excluded)\nCreates new volumes from the snapshots\nAttaches the volumes to the instance by using the device ID tag on the snapshot\nRestarts the instance\nImportant\nThe following script detaches all volumes attached to an instance, and then creates new volumes from a snapshot. Make sure that you have properly backed-up the instance. The old volumes are not deleted. If you want, you can edit the script to delete the old volumes.\nTo restore volumes from VSS based EBS snapshots\nDownload the RestoreVssSnapshotSampleScript.zip file and extract the file contents.\nOpen RestoreVssSnapshotSampleScript.ps1 in a text editor and edit the sample call at the bottom of the script with a valid EC2 instance ID and EBS snapshot ID, and then run the script from PowerShell."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vss-comps-history.html",
        "content": "This page includes release notes by version for the AWS VSS component package, as well as component and script version requirements for each supported version of Windows Server.\nTopics\nAwsVssComponents package versions\nWindows OS version support\nAwsVssComponents package versions\nThe following table describes the released versions of the AWS VSS component package.\nVersion Details Release date\n2.4.0\nAdded the capability to save VSS metadata files on snapshot creation. To enable this feature, see SaveVssMetadata in Parameters for Systems Manager VSS snapshot documents.\nOctober 7, 2024\n2.3.3\nUpdated the VSS agent to ensure that the Ec2VssProvider is used during snapshot creation.\nJune 25, 2024\n2.3.2\nFixed a case where VSS provider registration is not removed on uninstallation.\nMay 9, 2024\n2.3.1\nAdded new default tag AwsVssConfig to identify snapshots and AMIs created by AWS VSS.\nMarch 7, 2024\n2.2.1\nAdded support for using the DescribeInstanceAttribute API.\nBug fixes and reliability improvements.\nDeprecated support for Windows Server 2012 and 2012 R2. AWS VSS components version 2.2.1 installation on Windows Server 2012 and 2012 R2 will fail. AWS VSS components version 2.1.0 is the last version to support Windows Server 2012 and 2012 R2.\nJanuary 18, 2024\n2.1.0\nAdded support for using the CreateSnapshots API.\nNovember 6, 2023\n2.0.1\nAdded support for using the WinHTTP proxy settings.\nOctober 26, 2023\n2.0.0\nAdded capability to the AWS VSS component to create snapshots and AMIs, which enables compatibility with PowerShell module logging, script block logging, and transcription features.\nApril 28, 2023\n1.3.2.0\nFixed a case where installation failure is not reported correctly.\nMay 10, 2022\n1.3.1.0\nFixed snapshots failing on domain controllers in relation to an NTDS VSS writer logging error.\nFixed VSS agent error when uninstalling version 1.0 VSS provider.\nFebruary 6, 2020\n1.3.00\nImproved logging by reducing unwanted verbosity.\nFixed regionalization issues during installation.\nFixed return codes for some provider registration error conditions.\nFixed various installation issues.\nMarch 19, 2019\n1.2.00\nAdded command line parameters -nw (no-writers) and -copy (copy-only) to agent.\nFixed EventLog errors caused by improper memory allocation calls.\nNovember 15, 2018\n1.1 Fixed AWS VSS components that were being used incorrectly as the default Windows Backup and Restore provider. December 12, 2017\n1.0 Initial release. November 20, 2017\nWindows OS version support\nThe following table shows which AWS VSS solution versions you should run on each version of Windows Server on Amazon EC2.\nWindows Server version AwsVssComponents version AWSEC2-VssInstallAndSnapshot version name AWSEC2-CreateVssSnapshot version name\nWindows Server 2025 default default default\nWindows Server 2022 default default default\nWindows Server 2019 default default default\nWindows Server 2016 default default default\nWindows Server 2012 R2 2.1.0 not supported 2012R2\nWindows Server 2012 2.1.0 not supported 2012R2\nWindows Server 2008 R2 1.3.1.0 not supported 2008R2"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/file-storage.html",
        "content": "Cloud file storage is a method for storing data in the cloud that provides servers and applications access to data through shared file systems. This compatibility makes cloud file storage ideal for workloads that rely on shared file systems and provides simple integration without code changes.\nThere are many file storage solutions that exist, ranging from a single node file server on a compute instance using block storage as the underpinnings with no scalability or few redundancies to protect the data, to a do-it-yourself clustered solution, to a fully-managed solution. The following content introduces some of the storage services provided by AWS for use with Amazon EC2 instances.\nContents\nUse Amazon S3 with Amazon EC2 instances\nUse Amazon EFS with Amazon EC2 Linux instances\nUse Amazon FSx with Amazon EC2 instances\nUse Amazon File Cache with Amazon EC2 instances"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonS3.html",
        "content": "Amazon Simple Storage Service (Amazon S3) is an object storage service that offers industry-leading scalability, data availability, security, and performance. You can use Amazon S3 to store and retrieve any amount of data for a range of use cases, such as data lakes, websites, backups, and big data analytics, from an Amazon EC2 instance or from anywhere over the internet. For more information, see What is Amazon S3?\nObjects are the fundamental entities stored in Amazon S3. Every object stored in Amazon S3 is contained in a bucket. Buckets organize the Amazon S3 namespace at the highest level and identify the account responsible for that storage. Amazon S3 buckets are similar to internet domain names. Objects stored in the buckets have a unique key value and are retrieved using a URL. For example, if an object with a key value /photos/mygarden.jpg is stored in the amzn-s3-demo-bucket1 bucket, then it is addressable using the URL https://amzn-s3-demo-bucket1.s3.amazonaws.com/photos/mygarden.jpg. For more information, see How Amazon S3 works.\nUsage examples\nGiven the benefits of Amazon S3 for storage, you might decide to use this service to store files and data sets for use with EC2 instances. There are several ways to move data to and from Amazon S3 to your instances. In addition to the examples discussed below, there are a variety of tools that people have written that you can use to access your data in Amazon S3 from your computer or your instance. Some of the common ones are discussed in the AWS forums.\nIf you have permission, you can copy a file to or from Amazon S3 and your instance using one of the following methods.\nGET or wget (Linux)\nAWS Tools for Windows PowerShell (Windows)\nAWS CLI (Linux and Windows)\nAmazon S3 API\nNote\nThis method works for public objects only. If the object is not public, you receive an ERROR 403: Forbidden message. If you receive this error, you must use either the Amazon S3 console, AWS CLI, AWS API, AWS SDK, or AWS Tools for Windows PowerShell, and you must have the required permissions. For more information, see Identity and access management for Amazon S3 and Downloading an object in the Amazon S3 User Guide.\nThe wget utility is an HTTP and FTP client that allows you to download public objects from Amazon S3. It is installed by default in Amazon Linux and most other distributions, and available for download on Windows. To download an Amazon S3 object, use the following command, substituting the URL of the object to download.\n[ec2-user ~]$ wget https://my_bucket.s3.amazonaws.com/path-to-file"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEFS.html",
        "content": "Note\nAmazon EFS is not supported on Windows instances.\nAmazon EFS provides scalable file storage for use with Amazon EC2. You can use an EFS file system as a common data source for workloads and applications running on multiple instances. For more information, see the Amazon Elastic File System product page.\nThis tutorial shows you how to create and attach an Amazon EFS file system using the Amazon EFS Quick Create wizard during instance launch. For a tutorial on how to create a file system using the Amazon EFS console, see Getting started with Amazon Elastic File System in the Amazon Elastic File System User Guide.\nNote\nWhen you create an EFS file system using EFS Quick Create, the file system is created with the following service recommended settings:\nAutomatic backups enabled.\nManage mount targets in the selected VPC.\nGeneral Purpose performance mode.\nBursting throughput mode.\nEncryption of data at rest enabled using your default key for Amazon EFS (aws/elasticfilesystem).\nAmazon EFS lifecycle management enabled with a 30-day policy.\nTasks\nCreate an EFS file system using Amazon EFS Quick Create\nTest the EFS file system\nDelete the EFS file system\nCreate an EFS file system using Amazon EFS Quick Create\nYou can create an EFS file system and mount it to your instance when you launch your instance using the Amazon EFS Quick Create feature of the Amazon EC2 launch instance wizard.\nTo create an EFS file system using Amazon EFS Quick Create\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nChoose Launch instance.\n(Optional) Under Name and tags, for Name, enter a name to identify your instance.\nUnder Application and OS Images (Amazon Machine Image), choose a Linux operating system, and then for Amazon Machine Image (AMI), select a Linux AMI.\nUnder Instance type, for Instance type, select an instance type or keep the default.\nUnder Key pair (login), for Key pair name, choose an existing key pair or create a new one.\nUnder Network settings, choose Edit (at right), and then for Subnet, select a subnet.\nNote\nYou must select a subnet before you can add an EFS file system.\nUnder Configure storage, choose Edit (at bottom right), and then do the following:\nFor File systems, ensure that EFS is selected, and then choose Create new shared file system.\nFor File system name enter a name for the Amazon EFS file system, and then choose Create file system.\nFor Mount point, specify a custom mount point or keep the default.\nTo enable access to the file system, select Automatically create and attach security groups. By selecting this checkbox, the following security groups will be automatically created and attached to the instance and the mount targets of the file system:\nInstance security group \u2013 Includes an outbound rule that allows traffic over the NFS 2049port, but includes no inbound rules.\nFile system mount targets security group \u2013 Includes an inbound rule that allows traffic over the NFS 2049 port from the instance security group (described above), and an outbound rule that allows traffic over the NFS 2049 port.\nNote\nAlternatively, you can manually create and attach the security groups. If you want to manually create and attach the security groups, clear Automatically create and attach the required security groups.\nTo automatically mount the shared file system when the instance launches, select Automatically mount shared file system by attaching required user data script. To view the user data that is automatically generated, expand Advanced details, and scroll down to User data.\nNote\nIf you added user data before selecting this checkbox, the original user data is overwritten by the automatically generated user data.\nConfigure any other instance configuration settings as needed.\nIn the Summary panel, review your instance configuration, and then choose Launch instance. For more information, see Launch an EC2 instance using the launch instance wizard in the console.\nTest the EFS file system\nYou can connect to your instance and verify that the file system is mounted to the directory that you specified (for example, /mnt/efs).\nTo verify that the file system is mounted\nConnect to your instance. For more information, see Connect to your Linux instance using SSH.\nFrom the terminal window for the instance, run the df -T command to verify that the EFS file system is mounted.\n$ df -T\nFilesystem     Type              1K-blocks    Used          Available Use% Mounted on\n/dev/xvda1     ext4                8123812 1949800            6073764  25% /\ndevtmpfs       devtmpfs            4078468      56            4078412   1% /dev\ntmpfs          tmpfs               4089312       0            4089312   0% /dev/shm\nefs-dns        nfs4       9007199254740992       0   9007199254740992   0% /mnt/efs\nNote that the name of the file system, shown in the example output as efs-dns, has the following form.\nfile-system-id.efs.aws-region.amazonaws.com:/\n(Optional) Create a file in the file system from the instance, and then verify that you can view the file from another instance.\nFrom the instance, run the following command to create the file.\n$ sudo touch /mnt/efs/test-file.txt\nFrom the other instance, run the following command to view the file.\n$ ls /mnt/efs\ntest-file.txt\nDelete the EFS file system\nIf you no longer need your file system, you can delete it.\nTo delete the file system\nOpen the Amazon Elastic File System console at https://console.aws.amazon.com/efs/.\nSelect the file system to delete.\nChoose Actions, Delete file system.\nWhen prompted for confirmation, enter the file system ID and choose Delete file system."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/storage_fsx.html",
        "content": "The Amazon FSx family of services makes it easy to launch, run, and scale shared storage powered by popular commercial and open-source file systems. You can use the new launch instance wizard to automatically attach the following types of Amazon FSx file systems to your Amazon EC2 instances at launch:\nAmazon FSx for NetApp ONTAP provides fully managed shared storage in the AWS Cloud with the popular data access and management capabilities of NetApp ONTAP.\nAmazon FSx for OpenZFS provides fully managed cost-effective shared storage powered by the popular OpenZFS file system.\nNote\nThis functionality is available in the new launch instance wizard only. For more information, see Launch an EC2 instance using the launch instance wizard in the console\nAmazon FSx for Windows File Server and Amazon FSx for Lustre file systems can't be mounted at launch. You must mount these file systems manually after launch.\nYou can choose to mount an existing file system that you created previously, or you can create a new file system to mount to an instance at launch.\nTopics\nSecurity groups and user data script\nMount an Amazon FSx file system at launch\nSecurity groups and user data script\nWhen you mount an Amazon FSx file system to an instance using the launch instance wizard, you can choose whether to automatically create and attach the security groups needed to enable access to the file system, and whether to automatically include the user data scripts needed to mount the file system and make it available for use.\nTopics\nSecurity groups\nUser data script\nSecurity groups\nIf you choose to automatically create the security groups that are needed to enable access to the file system, the launch instance wizard creates and attaches two security groups - one security group is attached to the instance, and the other is attached to the file system. For more information about the security group requirements, see FSx for ONTAP file system access control with Amazon VPC and FSx for OpenZFS file system access control with Amazon VPC.\nWe add the tag Name=instance-sg-1 to the security group that is created and attached to the instance. The value in the tag is automatically incremented each time the launch instance wizard creates a security group for Amazon FSx file systems.\nThe security group includes the following output rules, but no inbound rules.\nOutbound rules\nProtocol type Port number Destination\nUDP 111 file system security group\nUDP 20001 - 20003 file system security group\nUDP 4049 file system security group\nUDP 2049 file system security group\nUDP 635 file system security group\nUDP 4045 - 4046 file system security group\nTCP 4049 file system security group\nTCP 635 file system security group\nTCP 2049 file system security group\nTCP 111 file system security group\nTCP 4045 - 4046 file system security group\nTCP 20001 - 20003 file system security group\nAll All file system security group\nThe security group that is created and attached to the file system is tagged with Name=fsx-sg-1. The value in the tag is automatically incremented each time the launch instance wizard creates a security group for Amazon FSx file systems.\nThe security group includes the following rules.\nInbound rules\nProtocol type Port number Source\nUDP 2049 instance security group\nUDP 20001 - 20003 instance security group\nUDP 4049 instance security group\nUDP 111 instance security group\nUDP 635 instance security group\nUDP 4045 - 4046 instance security group\nTCP 4045 - 4046 instance security group\nTCP 635 instance security group\nTCP 2049 instance security group\nTCP 4049 instance security group\nTCP 20001 - 20003 instance security group\nTCP 111 instance security group\nOutbound rules\nProtocol type Port number Destination\nAll All 0.0.0.0/0\nUser data script\nIf you choose to automatically attach user data scripts, the launch instance wizard adds the following user data to the instance. This script installs the necessary packages, mounts the file system, and updates your instance settings so that the file system will automatically re-mount whenever the instance restarts.\n#cloud-config\npackage_update: true\npackage_upgrade: true\nruncmd:\n- yum install -y nfs-utils\n- apt-get -y install nfs-common\n- svm_id_1=svm_id\n- file_system_id_1=file_system_id\n- vol_path_1=/vol1\n- fsx_mount_point_1=/mnt/fsx/fs1\n- mkdir -p \"${fsx_mount_point_1}\"\n- if [ -z \"$svm_id_1\" ]; then printf \"\\n${file_system_id_1}.fsx.eu-north-1.amazonaws.com:/${vol_path_1} ${fsx_mount_point_1} nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport,_netdev 0 0\\n\" >> /etc/fstab; else printf \"\\n${svm_id_1}.${file_system_id_1}.fsx.eu-north-1.amazonaws.com:/${vol_path_1} ${fsx_mount_point_1} nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport,_netdev 0 0\\n\" >> /etc/fstab; fi\n- retryCnt=15; waitTime=30; while true; do mount -a -t nfs4 defaults; if [ $? = 0 ] || [ $retryCnt -lt 1 ]; then echo File system mounted successfully; break; fi; echo File system not available, retrying to mount.; ((retryCnt--)); sleep $waitTime; done;\nMount an Amazon FSx file system at launch\nTo mount a new or existing Amazon FSx file system at launch\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances and then choose Launch instance to open the launch instance wizard.\nIn the Application and OS Images section, select the AMI to use.\nIn the Instance type section, select the instance type.\nIn the Key pair section, select an existing key pair or create a new one.\nIn the Network settings section, do the following:\nChoose Edit.\nIf you want to mount an existing file system, for Subnet, choose the file system's preferred subnet. We recommend that you launch the instance into the same Availability Zone as the file system's preferred subnet to optimize performance.\nIf you want to create a new file system to mount to an instance, for Subnet, choose the subnet into which to launch the instance.\nImportant\nYou must select a subnet to enable the Amazon FSx functionality in the new launch instance wizard. If you do not select a subnet, you will not be able to mount an existing file system or create a new one.\nIn the Storage section, do the following:\nConfigure the volumes as needed.\nExpand the File systems section and select FSx.\nChoose Add shared file system.\nFor File system, select the file system to mount.\nNote\nThe list displays all Amazon FSx for NetApp ONTAP and Amazon FSx for OpenZFS file systems in your account in the selected Region.\nTo automatically create and attach the security groups needed to enable access to the file system, select Automatically create and attach security groups. If you prefer to create the security groups manually, clear the checkbox. For more information, see Security groups.\nTo automatically attach the user data scripts needed to mount the file system, select Automatically mount shared file system by attaching required user data script. If you prefer to provide the user data scripts manually, clear the checkbox. For more information, see User data script.\nIn the Advanced section, configure the additional instance settings as needed.\nChoose Launch."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEFC.html",
        "content": "Amazon File Cache provides a fully managed, high-speed cache on AWS that makes it easier to process file data, regardless of where the data is stored. Amazon File Cache serves as a temporary, high-performance storage location for data that's stored in on-premises file systems, AWS file systems, and Amazon Simple Storage Service (Amazon S3) buckets. You can use this capability to make dispersed datasets available to file-based applications on AWS with a unified view, and at high speeds\u2014sub-millisecond latencies and high throughput. For more information, see the Amazon File Cache User Guide.\nAmazon File Cache works with the most popular Linux AMIs, and is compatible with x86-based instance types and Graviton instance types. You can access your cache from your Amazon EC2 instances using the open-source Lustre client. You can mount your cache and then work with the files and directories in your cache using standard Linux commands. Amazon EC2 instances can access your cache from other Availability Zones within the same virtual private cloud (VPC), provided that your network configuration allows access across subnets within the VPC. You can also create a cache in a shared VPC.\nTo get started, see Getting started with Amazon File Cache in the Amazon File Cache User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resources.html",
        "content": "A resource is an entity that you can work with. Amazon EC2 creates resources as you use the features of the service. For example, Amazon EC2 resources include images, instances, fleets, key pairs, and security groups. All Amazon EC2 resource types include attributes that describe the resources. For example, names, descriptions, resource identifiers, and Amazon Resource Names (ARN).\nAmazon EC2 resources are specific to the AWS Region or zone in which they reside. For example, an Amazon Machine Image (AMI) is specific to an AWS Region, but the instance that you launch from an AMI is specific to the zone in which you launch it. You can specify an Amazon EC2 resource in a permissions policy using its ARN.\nYour AWS account has default quotas for Amazon EC2. These quotas define the maximum number of resources that you can create. For example, there are quotas for the maximum number of vCPUs across your running instances. If launching an instance or starting a stopped instance would cause you to exceed your quota, the operation fails.\nYou can search for specific resources in your AWS account by Region, using resource IDs or tags. To search for specific resources or resource types across multiple Regions, use Amazon EC2 Global View.\nContents\nSelect a Region for your Amazon EC2 resources\nFind your Amazon EC2 resources\nView resources across Regions using Amazon EC2 Global View\nTag your Amazon EC2 resources\nAmazon EC2 service quotas"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones-setup.html",
        "content": "Amazon EC2 resources are specific to the AWS Region or zone in which they reside. When you create an Amazon EC2 resource, you select the Region for the resource.\nConsiderations\nSome AWS resources might not be available in all Regions. Ensure that you can create all the AWS resources that you need in the selected Region before you launch your Amazon EC2 instances.\nTo select a Region for a resource using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nFrom the navigation bar, choose the Regions selector and then choose the Region.\nThe Regions selector includes all resources that are available for use in your AWS account. Choose the underlined text near the bottom of the list to view the Regions that are not enabled for your account. To enable a Region that is not enabled, see Specify which AWS Regions your account can use in the AWS Account Management Reference Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html",
        "content": "You can get a list of some types of resources using the Amazon EC2 console. You can get a list of each type of resource using its corresponding command or API action. If you have many resources, you can filter the results to include, or exclude, only the resources that match certain criteria.\nContents\nConsole steps\nCLI and API steps\nGlobal View (cross-Region)\nList and filter resources using the console\nContents\nList resources using the console\nFilter resources using the console\nSupported filters\nSave filter sets using the console\nKey features\nCreate a filter set\nModify a filter set\nDelete a filter set\nList resources using the console\nYou can view the most common Amazon EC2 resource types using the console. To view additional resources, use the command line interface or the API actions.\nTo list EC2 resources using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nAmazon EC2 resources are specific to an AWS Region. From the navigation bar, choose a Region from the Regions selector.\nIn the navigation pane, choose the option that corresponds to the resource type. For example, to list all your instances, choose Instances.\nFilter resources using the console\nTo filter a list of resources\nIn the navigation pane, select a resource type (for example, Instances).\nChoose the search field.\nSelect the filter from the list.\nSelect an operator, for example, = (Equals). Some attributes have more available operators to select. Note that not all screens support selecting an operator.\nSelect a filter value.\nTo edit a selected filter, choose the filter token (blue box), make the required edits, and then choose Apply. Note that not all screens support editing the selected filter.\nWhen you are finished, remove the filter.\nSupported filters\nThe Amazon EC2 console supports two types of filtering.\nAPI filtering happens on the server side. The filtering is applied on the API call, which reduces the number of resources returned by the server. It allows for quick filtering across large sets of resources, and it can reduce data transfer time and cost between the server and the browser. API filtering supports = (equals) and : (contains) operators, and is always case sensitive.\nClient filtering happens on the client side. It enables you to filter down on data that is already available in the browser (in other words, data that has already been returned by the API). Client filtering works well in conjunction with an API filter to filter down to smaller data sets in the browser. In addition to = (equals) and : (contains) operators, client filtering can also support range operators, such as >= (greater than or equal), and negation (inverse) operators, such as != (does not equal).\nThe Amazon EC2 console supports the following types of searches:\nSearch by keyword\nSearching by keyword is a free text search that lets you search for a value across all of your resources' attributes or tags, without specifying an attribute or tag key to search.\nNote\nAll keyword searches use client filtering.\nTo search by keyword, enter or paste what you\u2019re looking for in the search field, and then choose Enter. For example, searching for 123 matches all instances that have 123 in any of their attributes, such as an IP address, instance ID, VPC ID, or AMI ID, or in any of their tags, such as the Name. If your free text search returns unexpected matches, apply additional filters.\nSearch by attribute\nSearching by an attribute lets you search a specific attribute across all of your resources.\nNote\nAttribute searches use either API filtering or client filtering, depending on the selected attribute. When performing an attribute search, the attributes are grouped accordingly.\nFor example, you can search the Instance state attribute for all of your instances to return only instances that are in the stopped state. To do this:\nIn the search field on the Instances screen, start entering Instance state. As you enter the characters, the two types of filters appear for Instance state: API filters and Client filters.\nTo search on the server side, choose Instance state under API filters. To search on the client side, choose Instance state (client) under Client filters.\nA list of possible operators for the selected attribute appears.\nChoose the = (Equals) operator.\nA list of possible values for the selected attribute and operator appears.\nChoose stopped from the list.\nSearch by tag\nSearching by a tag lets you filter the resources in the currently displayed table by a tag key or a tag value.\nTag searches use either API filtering or client filtering, depending on the settings in the Preferences window.\nTo ensure API filtering for tags\nOpen the Preferences window.\nClear the Use regular expression matching checkbox. If this checkbox is selected, client filtering is performed.\nSelect the Use case sensitive matching checkbox. If this checkbox is cleared, client filtering is performed.\nChoose Confirm.\nWhen searching by tag, you can use the following values:\n(empty) \u2013 Find all resources with the specified tag key, but there must be no tag value.\nAll values \u2013 Find all resources with the specified tag key and any tag value.\nNot tagged \u2013 Find all resources that do not have the specified tag key.\nThe displayed value \u2013 Find all resources with the specified tag key and the specified tag value.\nYou can use the following techniques to enhance or refine your searches:\nInverse search\nInverse searches let you search for resources that do not match a specified value. In the Instances and AMIs screens, inverse searches are performed by selecting the != (Does not equal) or !: (Does not contain) operator and then selecting a value. In other screens, inverse searches are performed by prefixing the search keyword with the exclamation mark (!) character.\nNote\nInverse search is supported with keyword searches and attribute searches on client filters only. It is not supported with attribute searches on API filters.\nFor example, you can search the Instance state attribute for all of your instances to exclude all instances that are in the terminated state. To do this:\nIn the search field on the Instances screen, start entering Instance state. As you enter the characters, the two types of filters appear for Instance state: API filters and Client filters.\nUnder Client filters, choose Instance state (client). Inverse search is only supported on client filters.\nA list of possible operators for the selected attribute appears.\nChoose != (Does not equal), and then choose terminated.\nTo filter instances based on an instance state attribute, you can also use the search icons ( ) in the Instance state column. The search icon with a plus sign ( + ) displays all the instances that match that attribute. The search icon with a minus sign ( - ) excludes all instances that match that attribute.\nHere is another example of using the inverse search: To list all instances that are not assigned the security group named launch-wizard-1, under Client filters, search by the Security group name attribute, choose !=, and in the search bar, enter launch-wizard-1.\nPartial search\nWith partial searches, you can search for partial string values. To perform a partial search, enter only a part of the keyword that you want to search for. On the Instances and AMIs screens, partial searches can only be performed with the : (Contains) operator. On other screens, you can select the client filter attribute and immediately enter only a part of the keyword that you want to search for. For example, on the Instance type screen, to search for all t2.micro, t2.small, and t2.medium instances, search by the Instance Type attribute, and for the keyword, enter t2.\nRegular expression search\nTo use regular expression searches, you must select the Use regular expression matching checkbox in the Preferences window.\nRegular expressions are useful when you need to match the values in a field with a specific pattern. For example, to search for a value that starts with s, search for ^s. To search for a value that ends with xyz, search for xyz$. Or to search for a value that starts with a number that is followed by one or more characters, search for [0-9]+.*.\nNote\nRegular expression search is supported with keyword searches and attribute searches on client filters only. It is not supported with attribute searches on API filters.\nCase-sensitive search\nTo use case-sensitive searches, you must select the Use case sensitive matching checkbox in the Preferences window. The case-sensitive preference only applies to client and tag filters.\nNote\nAPI filters are always case-sensitive.\nWildcard search\nUse the * wildcard to match zero or more characters. Use the ? wildcard to match zero or one character. For example, if you have a data set with the values prod, prods, and production, a search of prod* matches all values, whereas prod? matches only prod and prods. To use the literal values, escape them with a backslash (\\). For example, \"prod\\*\" would match prod*.\nNote\nWildcard search is supported with attribute and tag searches on API filters only. It is not supported with keyword searches, and with attribute and tag searches on client filters.\nCombining searches\nIn general, multiple filters with the same attribute are automatically joined with OR. For example, searching for Instance State : Running and Instance State : Stopped returns all instances that are either running OR stopped. To join search with AND, search across different attributes. For example, searching for Instance State : Running and Instance Type : c4.large returns only instances that are of type c4.large AND that are in the running state.\nSave filter sets using the console\nA saved filter set is a customized group of filters that you can create and reuse to efficiently view your Amazon EC2 resources. This feature helps streamline your workflow, enabling quick access to specific resource views.\nKey features\nCustomization: Create filter sets tailored to your needs. For example, you can create a filter set to display only your gp3 volumes that were created after a specified date.\nDefault filter: Set a default filter set for a page, and the default filters are automatically applied when you navigate to the page. If no default is set, no filters are applied.\nEasy application: Select a saved filter set to apply it instantly. Amazon EC2 then displays the relevant resources, with the active filters indicated by blue tokens.\nFlexibility: Create, modify, and delete filter sets as needed.\nSaved filter sets are only supported in the Amazon EC2 console and are currently only available for the Volumes page.\nCreate a filter set\nTo create a new filter set\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose a resource, for example, Volumes.\nIn the search field, select filters for your filter set.\nChoose the arrow next to the Clear filters button, and choose Save new filter set.\nIn the Save filter set window, do the following:\nFor Filter set name, enter a name for the filter set.\n(Optional) For Filter set description, enter a description for the filter set.\n(Optional) To set the filter set as the default filter, select the Set as default checkbox.\nNote\nThe default filter is automatically applied every time you open the console page.\nChoose Save.\nModify a filter set\nTo modify a filter set\nFrom the Saved filter sets list, select the filter to modify.\nTo add a filter, in the search field, select a filter to add to your filter set. To delete a filter in the set, choose the X on the filter token.\nChoose the arrow next to the Clear filters button, and choose Modify filter set.\nIn the Modify filter set window, do the following:\n(Optional) To set the filter set as the default filter, select the Set as default checkbox.\nNote\nThe default filter is automatically applied every time you open the console page.\nChoose Modify.\nDelete a filter set\nTo delete a filter set\nFrom the Saved filter sets list, select the filter to delete.\nChoose the arrow next to the Clear filters button, and choose Delete filter set.\nIn the Delete filter set window, review the filter to confirm this is the filter you want to delete, and then choose Delete.\nList and filter using the CLI and API\nEach resource type has a corresponding CLI command and API action that you use to list resources of that type. The resulting lists of resources can be long, so it can be faster and more useful to filter the results to include only the resources that match specific criteria.\nFiltering considerations\nYou can specify up to 50 filters and up to 200 values per filter in a single request.\nFilter strings can be up to 255 characters in length.\nYou can use wildcards with the filter values. An asterisk (*) matches zero or more characters, and a question mark (?) matches zero or one character.\nFilter values are case sensitive.\nYour search can include the literal values of the wildcard characters; you just need to escape them with a backslash before the character. For example, a value of \\*amazon\\?\\\\ searches for the literal string *amazon?\\.\nYou can't specify a filter value of null. Instead, use client-side filtering. For example, the following command uses the --query option and returns the IDs of the instances that were launched without a key pair.\naws ec2 describe-instances --query 'Reservations[*].Instances[?!not_null(KeyName)].InstanceId' --output text\nSupported filters\nTo see the supported filters for each Amazon EC2 resource, see the following documentation:\nAWS CLI: The describe commands in the AWS CLI Command Reference-Amazon EC2.\nTools for Windows PowerShell: The Get commands in the AWS Tools for PowerShell Cmdlet Reference-Amazon EC2.\nQuery API: The Describe API actions in the Amazon EC2 API Reference.\nExample: Specify a single filter\nYou can list your Amazon EC2 instances using describe-instances. Without filters, the response contains information for all of your resources. You can use the following command to include only the running instances in your output.\naws ec2 describe-instances --filters Name=instance-state-name,Values=running\nTo list only the instance IDs for your running instances, add the --query parameter as follows.\naws ec2 describe-instances --filters Name=instance-state-name,Values=running --query \"Reservations[*].Instances[*].InstanceId\" --output text\nThe following is example output.\ni-0ef1f57f78d4775a4\ni-0626d4edd54f1286d\ni-04a636d18e83cfacb\nExample: Specify multiple filters or filter values\nIf you specify multiple filters or multiple filter values, the resource must match all filters to be included in the results.\nYou can use the following command to list all instances whose type is either m5.large or m5d.large.\naws ec2 describe-instances --filters Name=instance-type,Values=m5.large,m5d.large\nYou can use the following command to list all stopped instances whose type is t2.micro.\naws ec2 describe-instances --filters Name=instance-state-name,Values=stopped Name=instance-type,Values=t2.micro\nExample: Use wildcards in a filter value\nIf you specify database as the filter value for the description filter when describing EBS snapshots using describe-snapshots, the command returns only the snapshots whose description is \"database\".\naws ec2 describe-snapshots --filters Name=description,Values=database\nThe * wildcard matches zero or more characters. If you specify *database* as the filter value, the command returns only snapshots whose description includes the word database.\naws ec2 describe-snapshots --filters Name=description,Values=*database*\nThe ? wildcard matches exactly 1 character. If you specify database? as the filter value, the command returns only snapshots whose description is \"database\" or \"database\" followed by one character.\naws ec2 describe-snapshots --filters Name=description,Values=database?\nIf you specify database????, the command returns only snapshots whose description is \"database\" followed by up to four characters. It excludes descriptions with \"database\" followed by five or more characters.\naws ec2 describe-snapshots --filters Name=description,Values=database????\nExample: Filter based on date\nWith the AWS CLI, you can use JMESPath to filter results using expressions. For example, the following describe-snapshots command displays the IDs of all snapshots created by your AWS account (represented by 123456789012) before the specified date (represented by 2020-03-31). If you do not specify the owner, the results include all public snapshots.\naws ec2 describe-snapshots --filters Name=owner-id,Values=123456789012 --query \"Snapshots[?(StartTime<='2020-03-31')].[SnapshotId]\" --output text\nThe following command displays the IDs of all snapshots created in the specified date range.\naws ec2 describe-snapshots --filters Name=owner-id,Values=123456789012 --query \"Snapshots[?(StartTime>='2019-01-01') && (StartTime<='2019-12-31')].[SnapshotId]\" --output text\nFilter based on tags\nFor examples of how to filter a list of resources according to their tags, see Filter Amazon EC2 resources by tag.\nView resources across Regions using Amazon EC2 Global View\nAmazon EC2 Global View enables you to view and search for Amazon EC2 and Amazon VPC resources in a single AWS Region, or across multiple Regions simultaneously in a single console. For more information, see View resources across Regions using Amazon EC2 Global View."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/global-view.html",
        "content": "Amazon EC2 Global View enables you to view some of your Amazon EC2 and Amazon VPC resources across a single AWS Region, or across multiple Regions in a single console. Amazon EC2 Global View also provides global search functionality that lets you search for specific resources or specific resource types across multiple Regions simultaneously.\nAmazon EC2 Global View does not let you modify resources in any way.\nSupported resources\nUsing Amazon EC2 Global View, you can view a global summary of the following resources across all of the Regions for which your AWS account is enabled.\nAuto Scaling groups\nCapacity Reservations and Capacity Blocks\nDHCP option set\nEgress-only internet gateways\nElastic IPs\nEndpoint services\nInstances\nInternet gateways\nManaged prefix lists\nNAT gateways\nNetwork ACLs\nNetwork interfaces\nRoute tables\nSecurity groups\nSubnets\nVolumes\nVPCs\nVPC endpoints\nVPC peering connections\nRequired permissions\nA user must have the following permissions to use Amazon EC2 Global View.\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n  {\n    \"Effect\": \"Allow\",\n    \"Action\": [\n    \"autoscaling:DescribeAutoScalingGroups\",\n    \"ec2:DescribeRegions\",\n    \"ec2:DescribeCapacityReservations\",\n    \"ec2:DescribeDhcpOptions\",\n    \"ec2:DescribeEgressOnlyInternetGateways\",    \n    \"ec2:DescribeAddresses\",\n    \"ec2:DescribeVpcEndpointServices\",\n    \"ec2:DescribeInstances\",\n    \"ec2:DescribeInternetGateways\",\n    \"ec2:DescribePrefixLists\",\n    \"ec2:DescribeNatGateways\",\n    \"ec2:DescribeNetworkAcls\",\n    \"ec2:DescribeNetworkInterfaces\",\n    \"ec2:DescribeRouteTables\",\n    \"ec2:DescribeSecurityGroups\",\n    \"ec2:DescribeSubnets\",\n    \"ec2:DescribeVolumes\",\n    \"ec2:DescribeVpcs\",\n    \"ec2:DescribeVpcEndpoints\",\n    \"ec2:DescribeVpcPeeringConnections\"\n  ],\n  \"Resource\": \"*\"\n  }]\n}\nTo use Amazon EC2 Global View\nOpen the Amazon EC2 Global View console at https://console.aws.amazon.com/ec2globalview/home.\nImportant\nYou cannot use a private window in Firefox to access Amazon EC2 Global View.\nThe console consists of the following:\nRegion explorer\u2014This tab includes the following sections:\nSummary\u2014Provides a high-level overview of your resources across all Regions.\nEnabled Regions indicates the number of Regions for which your AWS account is enabled. The remaining fields indicate the number of resources that you currently have in those Regions. Choose any of the links to view the resources of that type across all Regions. For example, if the link below the Instances label is 29 in 10 Regions, it indicates that you currently have 29 instances across 10 Regions. Choose the link to view a list of all 29 instances.\nResource region counts\u2014Lists all of the AWS Regions (including those for which your account is not enabled) and provides totals for each resource type for each Region.\nChoose a Region name to view all resources of all types for that specific Region. For example, choose Africa (Cape Town) af-south-1 to view all VPCs, subnets, instances, security groups, volumes, and Auto Scaling groups in that Region. Alternatively, select a Region and choose View resources for selected Region.\nChoose the value for a specific resource type in a specific Region to view only resources of that type in that Region. For example, choose the value for Instances for Africa (Cape Town) af-south-1 to view only the instances in that Region.\nGlobal search\u2014This tab enables you to search for specific resources or specific resource types across a single Region or across multiple Regions. It also enables you to view details for a specific resource.\nTo search for resources, enter the search criteria in the field preceding the grid. You can search by Region, by resource type, and by the tags assigned to resources.\nTo view the details for a specific resource, select it in the grid. You can also choose the resource ID of a resource to open it in its respective console. For example, choose an instance ID to open the instance in the Amazon EC2 console, or choose a subnet ID to open the subnet in the Amazon VPC console.\nTip\nIf you only use specific Regions or resource types, you can customize Amazon EC2 Global View to display only those Regions and resource types. To customize the displayed Regions and resource types, in the navigation panel, choose Settings, and then on the Resources and Regions tabs, select the Regions and resource types that you do not want to be displayed in Amazon EC2 Global View."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html",
        "content": "To help you manage your instances, images, and other Amazon EC2 resources, you can assign your own metadata to each resource in the form of tags. Tags enable you to categorize your AWS resources in different ways, for example, by purpose, owner, or environment. This is useful when you have many resources of the same type\u2014you can quickly identify a specific resource based on the tags that you've assigned to it. This topic describes tags and shows you how to create them.\nWarning\nTag keys and their values are returned by many different API calls. Denying access to DescribeTags doesn\u2019t automatically deny access to tags returned by other APIs. As a best practice, we recommend that you do not include sensitive data in your tags.\nContents\nTag basics\nTag your resources\nTag restrictions\nTags and access management\nTag your resources for billing\nTag resource permissions\nAdd and remove tags\nFilter resources by tag\nView tags using instance metadata\nTag basics\nA tag is a label that you assign to an AWS resource. Each tag consists of a key and an optional value, both of which you define.\nTags enable you to categorize your AWS resources in different ways, for example, by purpose, owner, or environment. For example, you could define a set of tags for your account's Amazon EC2 instances that helps you track each instance's owner and stack level.\nThe following diagram illustrates how tagging works. In this example, you've assigned two tags to each of your instances\u2014one tag with the key Owner and another with the key Stack. Each tag also has an associated value.\nWe recommend that you devise a set of tag keys that meets your needs for each resource type. Using a consistent set of tag keys makes it easier for you to manage your resources. You can search and filter the resources based on the tags you add. For more information about how to implement an effective resource tagging strategy, see the Tagging Best Practices AWS Whitepaper.\nTags don't have any semantic meaning to Amazon EC2 and are interpreted strictly as a string of characters. Also, tags are not automatically assigned to your resources. You can edit tag keys and values, and you can remove tags from a resource at any time. You can set the value of a tag to an empty string, but you can't set the value of a tag to null. If you add a tag that has the same key as an existing tag on that resource, the new value overwrites the old value. If you delete a resource, any tags for the resource are also deleted.\nNote\nAfter you delete a resource, its tags might remain visible in the console, API, and CLI output for a short period. These tags will be gradually disassociated from the resource and be permanently deleted.\nTag your resources\nWhen you use the Amazon EC2 console, you can apply tags to resources by using the Tags tab on the relevant resource screen, or you can use the Tags Editor in the AWS Resource Groups console. Some resource screens enable you to specify tags for a resource when you create the resource; for example, a tag with a key of Name and a value that you specify. In most cases, the console applies the tags immediately after the resource is created (rather than during resource creation). The console might organize resources according to the Name tag, but this tag doesn't have any semantic meaning to the Amazon EC2 service.\nIf you're using the Amazon EC2 API, the AWS CLI, or an AWS SDK, you can use the CreateTags EC2 API action to apply tags to existing resources. Additionally, some resource-creating actions enable you to specify tags for a resource when the resource is created. If tags cannot be applied during resource creation, we roll back the resource creation process. This ensures that resources are either created with tags or not created at all, and that no resources are left untagged at any time. By tagging resources at the time of creation, you can eliminate the need to run custom tagging scripts after resource creation. For more information about enabling users to tag resources on creation, see Grant permission to tag Amazon EC2 resources during creation.\nYou can apply tag-based resource-level permissions in your IAM policies to the Amazon EC2 API actions that support tagging on creation to implement granular control over the users and groups that can tag resources on creation. Your resources are properly secured from creation\u2014tags are applied immediately to your resources, therefore any tag-based resource-level permissions controlling the use of resources are immediately effective. Your resources can be tracked and reported on more accurately. You can enforce the use of tagging on new resources, and control which tag keys and values are set on your resources.\nYou can also apply resource-level permissions to the CreateTags and DeleteTags Amazon EC2 API actions in your IAM policies to control which tag keys and values are set on your existing resources. For more information, see Example: Tag resources.\nFor more information about tagging your resources for billing, see Using cost allocation tags in the AWS Billing User Guide.\nTag restrictions\nThe following basic restrictions apply to tags:\nMaximum number of tags per resource \u2013 50\nFor each resource, each tag key must be unique, and each tag key can have only one value.\nMaximum key length \u2013 128 Unicode characters in UTF-8\nMaximum value length \u2013 256 Unicode characters in UTF-8\nAllowed characters\nAlthough EC2 allows for any character in its tags, other AWS services are more restrictive. The allowed characters across all AWS services are: letters (a-z, A-Z), numbers (0-9), and spaces representable in UTF-8, and the following characters: + - = . _ : / @.\nIf you enable instance tags in instance metadata, instance tag keys can only use letters (a-z, A-Z), numbers (0-9), and the following characters: + - = . , _ : @. Instance tag keys can't contain spaces or /, and can't comprise only . (one period), .. (two periods), or _index. For more information, see View tags for your EC2 instances using instance metadata.\nTag keys and values are case-sensitive.\nThe aws: prefix is reserved for AWS use. If a tag has a tag key with this prefix, then you can't edit or delete the tag's key or value. Tags with the aws: prefix do not count against your tags per resource limit.\nYou can't terminate, stop, or delete a resource based solely on its tags; you must specify the resource identifier. For example, to delete snapshots that you tagged with a tag key called DeleteMe, you must use the DeleteSnapshots action with the resource identifiers of the snapshots, such as snap-1234567890abcdef0.\nWhen you tag public or shared resources, the tags you assign are available only to your AWS account; no other AWS account will have access to those tags. For tag-based access control to shared resources, each AWS account must assign its own set of tags to control access to the resource.\nTags and access management\nIf you're using AWS Identity and Access Management (IAM), you can control which users in your AWS account have permission to create, edit, or delete tags. For more information, see Grant permission to tag Amazon EC2 resources during creation.\nYou can also use resource tags to implement attribute-based control (ABAC). You can create IAM policies that allow operations based on the tags for the resource. For more information, see Control access using attribute-based access.\nTag your resources for billing\nYou can use tags to organize your AWS bill to reflect your own cost structure. To do this, sign up to get your AWS account bill with tag key values included. For more information about setting up a cost allocation report with tags, see Monthly cost allocation report in the AWS Billing User Guide. To see the cost of your combined resources, you can organize your billing information based on resources that have the same tag key values. For example, you can tag several resources with a specific application name, and then organize your billing information to see the total cost of that application across several services. For more information, see Using cost allocation tags in the AWS Billing User Guide.\nNote\nIf you've just enabled reporting, data for the current month is available for viewing after 24 hours.\nCost allocation tags can indicate which resources are contributing to costs, but deleting or deactivating resources doesn't always reduce costs. For example, snapshot data that is referenced by another snapshot is preserved, even if the snapshot that contains the original data is deleted. For more information, see Amazon Elastic Block Store volumes and snapshots in the AWS Billing User Guide.\nNote\nElastic IP addresses that are tagged do not appear on your cost allocation report."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/supported-iam-actions-tagging.html",
        "content": "Some resource-creating Amazon EC2 API actions enable you to specify tags when you create the resource. You can use resource tags to implement attribute-based control (ABAC). For more information, see Tag your resources and Control access using attribute-based access.\nTo enable users to tag resources on creation, they must have permissions to use the action that creates the resource, such as ec2:RunInstances or ec2:CreateVolume. If tags are specified in the resource-creating action, Amazon performs additional authorization on the ec2:CreateTags action to verify if users have permissions to create tags. Therefore, users must also have explicit permissions to use the ec2:CreateTags action.\nIn the IAM policy definition for the ec2:CreateTags action, use the Condition element with the ec2:CreateAction condition key to give tagging permissions to the action that creates the resource.\nThe following example demonstrates a policy that allows users to launch instances and apply any tags to instances and volumes during launch. Users are not permitted to tag any existing resources (they cannot call the ec2:CreateTags action directly).\n{\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n         \"ec2:RunInstances\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n         \"ec2:CreateTags\"\n      ],\n      \"Resource\": \"arn:aws:ec2:region:account:*/*\",\n      \"Condition\": {\n         \"StringEquals\": {\n             \"ec2:CreateAction\" : \"RunInstances\"\n          }\n       }\n    }\n  ]\n}\nSimilarly, the following policy allows users to create volumes and apply any tags to the volumes during volume creation. Users are not permitted to tag any existing resources (they cannot call the ec2:CreateTags action directly).\n{\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n         \"ec2:CreateVolume\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n         \"ec2:CreateTags\"\n      ],\n      \"Resource\": \"arn:aws:ec2:region:account:*/*\",\n      \"Condition\": {\n         \"StringEquals\": {\n             \"ec2:CreateAction\" : \"CreateVolume\"\n          }\n       }\n    }\n  ]\n}\nThe ec2:CreateTags action is only evaluated if tags are applied during the resource-creating action. Therefore, a user that has permissions to create a resource (assuming there are no tagging conditions) does not require permissions to use the ec2:CreateTags action if no tags are specified in the request. However, if the user attempts to create a resource with tags, the request fails if the user does not have permissions to use the ec2:CreateTags action.\nThe ec2:CreateTags action is also evaluated if tags are provided in a launch template. For an example policy, see Tags in a launch template.\nControl access to specific tags\nYou can use additional conditions in the Condition element of your IAM policies to control the tag keys and values that can be applied to resources.\nThe following condition keys can be used with the examples in the preceding section:\naws:RequestTag: To indicate that a particular tag key or tag key and value must be present in a request. Other tags can also be specified in the request.\nUse with the StringEquals condition operator to enforce a specific tag key and value combination, for example, to enforce the tag cost-center=cc123:\n\"StringEquals\": { \"aws:RequestTag/cost-center\": \"cc123\" }\nUse with the StringLike condition operator to enforce a specific tag key in the request; for example, to enforce the tag key purpose:\n\"StringLike\": { \"aws:RequestTag/purpose\": \"*\" }\naws:TagKeys: To enforce the tag keys that are used in the request.\nUse with the ForAllValues modifier to enforce specific tag keys if they are provided in the request (if tags are specified in the request, only specific tag keys are allowed; no other tags are allowed). For example, the tag keys environment or cost-center are allowed:\n\"ForAllValues:StringEquals\": { \"aws:TagKeys\": [\"environment\",\"cost-center\"] }\nUse with the ForAnyValue modifier to enforce the presence of at least one of the specified tag keys in the request. For example, at least one of the tag keys environment or webserver must be present in the request:\n\"ForAnyValue:StringEquals\": { \"aws:TagKeys\": [\"environment\",\"webserver\"] }\nThese condition keys can be applied to resource-creating actions that support tagging, as well as the ec2:CreateTags and ec2:DeleteTags actions. To learn whether an Amazon EC2 API action supports tagging, see Actions, resources, and condition keys for Amazon EC2.\nTo force users to specify tags when they create a resource, you must use the aws:RequestTag condition key or the aws:TagKeys condition key with the ForAnyValue modifier on the resource-creating action. The ec2:CreateTags action is not evaluated if a user does not specify tags for the resource-creating action.\nFor conditions, the condition key is not case-sensitive and the condition value is case-sensitive. Therefore, to enforce the case-sensitivity of a tag key, use the aws:TagKeys condition key, where the tag key is specified as a value in the condition.\nFor example IAM policies, see Example policies to control access the Amazon EC2 API. For more information, see Conditions with multiple context keys or values in the IAM User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags_Console.html",
        "content": "When you create an Amazon EC2 resource, such as an Amazon EC2 instance, you can specify the tags to add to the resource. You can also use the Amazon EC2 console to display the tags for a specific Amazon EC2 resource. You can also add or remove tags from an existing Amazon EC2 resource.\nYou can use the Tag Editor in the AWS Resource Groups console to view, add, or remove tags across of all of your AWS resources across all Regions. You can apply or remove tags from multiple types of resources at the same time. For more information, see the Tagging AWS Resources User Guide.\nTasks\nAdd and remove tags using the console\nAdd tags using the AWS CLI\nAdd tags using CloudFormation\nAdd and remove tags using the console\nYou can manage tags for an existing resource directly from the resource's page.\nTo manage tags for an existing resource\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nFrom the navigation bar, select the Region where the resource is located.\nIn the navigation pane, select a resource type (for example, Instances).\nSelect the resource from the list.\nFrom the Tags tab, choose Manage tags.\nTo add a tag, choose Add new tag and enter a key and a value for the tag. To remove a tag, choose Remove.\nChoose Save.\nAdd tags using the AWS CLI\nThe following examples demonstrate how to add tags to an existing resource using the create-tags command.\nExample: Add a tag to a resource\nThe following command adds the tag Stack=production to the specified image, or overwrites an existing tag for the AMI where the tag key is Stack. If the command succeeds, no output is returned.\naws ec2 create-tags \\\n    --resources ami-78a54011 \\\n    --tags Key=Stack,Value=production\nExample: Add tags to multiple resources\nThis example adds (or overwrites) two tags for an AMI and an instance. One of the tags contains just a key (webserver), with no value (we set the value to an empty string). The other tag consists of a key (stack) and value (Production). If the command succeeds, no output is returned.\naws ec2 create-tags \\\n    --resources ami-1a2b3c4d i-1234567890abcdef0 \\\n    --tags Key=webserver,Value=  Key=stack,Value=Production\nExample: Add tags with special characters\nThis example adds the tag [Group]=test to an instance. The square brackets ([ and ]) are special characters, which must be escaped.\nIf you are using Linux or OS X, to escape the special characters, enclose the element with the special character with double quotes (\"), and then enclose the entire key and value structure with single quotes (').\naws ec2 create-tags \\\n    --resources i-1234567890abcdef0 \\\n    --tags 'Key=\"[Group]\",Value=test'\nIf you are using Windows, to escape the special characters, enclose the element that has special characters with double quotes (\"), and then precede each double quote character with a backslash (\\) as follows:\naws ec2 create-tags ^\n    --resources i-1234567890abcdef0 ^\n    --tags Key=\\\"[Group]\\\",Value=test\nIf you are using Windows PowerShell, to escape the special characters, enclose the value that has special characters with double quotes (\"), precede each double quote character with a backslash (\\), and then enclose the entire key and value structure with single quotes (') as follows:\naws ec2 create-tags `\n    --resources i-1234567890abcdef0 `\n    --tags 'Key=\\\"[Group]\\\",Value=test'\nAdd tags using CloudFormation\nWith Amazon EC2 resource types, you specify tags using either a Tags or TagSpecifications property.\nThe following examples add the tag Stack=Production to AWS::EC2::Instance using its Tags property.\nExample: Tags in YAML\nTags:\n  - Key: \"Stack\"\n    Value: \"Production\"\nExample: Tags in JSON\n\"Tags\": [\n    {\n        \"Key\": \"Stack\",\n        \"Value\": \"Production\"\n    }\n]\nThe following examples add the tag Stack=Production to AWS::EC2::LaunchTemplate LaunchTemplateData using its TagSpecifications property.\nExample: TagSpecifications in YAML\nTagSpecifications:\n  - ResourceType: \"instance\"\n    Tags:\n    - Key: \"Stack\"\n      Value: \"Production\"\nExample: TagSpecifications in JSON\n\"TagSpecifications\": [\n    {\n        \"ResourceType\": \"instance\",\n        \"Tags\": [\n            {\n                \"Key\": \"Stack\",\n                \"Value\": \"Production\"\n            }\n        ]\n    }\n]"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/filtering-the-list-by-tag.html",
        "content": "After you add tags, you can filter your Amazon EC2 resources based tag keys and tag values.\nTo filter resources by tag using the Amazon EC2 console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, select a resource type (for example, Instances).\nChoose the search field.\nIn the list, under Tags, choose the tag key.\nChoose the corresponding tag value from the list.\nWhen you are finished, remove the filter.\nFor more information about using filters in the Amazon EC2 console, see Find your Amazon EC2 resources.\nTo filter resources by tag using the AWS CLI\nThe following examples show you how to use filters with the describe-instances to view instances with specific tags. All EC2 describe commands use this syntax to filter by tag across a single resource type. Alternatively, you can use the describe-tags command to filter by tag across EC2 resource types.\nExample 1: Describe instances with the specified tag key\nThe following command describes the instances with a Stack tag, regardless of the value of the tag.\naws ec2 describe-instances \\\n    --filters Name=tag-key,Values=Stack\nExample 2: Describe instances with the specified tag\nThe following command describes the instances with the tag Stack=production.\naws ec2 describe-instances \\\n    --filters Name=tag:Stack,Values=production\nExample 3: Describe instances with the specified tag value\nThe following command describes the instances with a tag with the value production, regardless of the tag key.\naws ec2 describe-instances \\\n    --filters Name=tag-value,Values=production\nExample 4: Describe all EC2 resources with the specified tag\nThe following command describes all EC2 resources with the tag Stack=Test.\naws ec2 describe-tags \\\n    --filters Name=key,Values=Stack Name=value,Values=Test"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/work-with-tags-in-IMDS.html",
        "content": "You can access an instance's tags from the instance metadata. By accessing tags from the instance metadata, you no longer need to use the DescribeInstances or DescribeTags API calls to retrieve tag information, which reduces your API transactions per second, and lets your tag retrievals scale with the number of instances that you control. Furthermore, local processes that are running on an instance can view the instance's tag information directly from the instance metadata.\nBy default, tags are not available from the instance metadata; you must explicitly allow access. You can allow access at instance launch, or after launch on a running or stopped instance. You can also allow access to tags by specifying this in a launch template. Instances that are launched by using the template allow access to tags in the instance metadata.\nIf you add or remove an instance tag, the instance metadata is updated while the instance is running, without needing to stop and then start the instance.\nTasks\nAllow access to tags in instance metadata\nRetrieve tags from instance metadata\nTurn off access to tags in instance metadata\nAllow access to tags in instance metadata\nBy default, there is no access to instance tags in the instance metadata. For each instance, you must explicitly allow access by using one of the following methods.\nNote\nIf you allow access to tags in instance metadata, instance tag keys are subject to specific restrictions. Non-compliance will result in failed launches for new instances or an error for existing instances. The restrictions are:\nCan only include letters (a-z, A-Z), numbers (0-9), and the following characters: + - = . , _ : @.\nCan't contain spaces or /.\nCan't consist only of . (one period), .. (two periods), or _index.\nFor more information, see Tag restrictions.\nConsole\nAWS CLI\nTo allow access to tags in instance metadata during instance launch\nFollow the procedure to launch an instance.\nExpand Advanced details, and for Allow tags in metadata, choose Enable.\nIn the Summary panel, review your instance configuration, and then choose Launch instance. For more information, see Launch an EC2 instance using the launch instance wizard in the console.\nConsole\nAWS CLI\nTo allow access to tags in instance metadata on a running or stopped instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect your instance, and then choose Actions, Instance settings, Allow tags in instance metadata.\nTo allow access to tags in instance metadata, select the Allow checkbox.\nChoose Save.\nRetrieve tags from instance metadata\nAfter you allow access to instance tags in the instance metadata, you can access the tags/instance category from the instance metadata. For more information, see Access instance metadata for an EC2 instance.\nInstance Metadata Service Version 2\nRun the following examples on your Amazon EC2 instance to retrieve the instance metadata for IMDSv2.\ncURL\nPowerShell\nThis example gets all the tag keys for an instance.\n[ec2-user ~]$ TOKEN=`curl -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 21600\"` \\\n&& curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/tags/instance\nName\nEnvironment\nThis example gets the value of the Name key that was obtained in the previous example. The IMDSv2 request uses the stored token that was created using the command in the previous example. The token must not be expired.\n[ec2-user ~]$ curl -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/tags/instance/Name\nMyInstance\nInstance Metadata Service Version 1\nRun the following examples on your Amazon EC2 instance to retrieve the instance metadata for IMDSv1.\ncURL\nPowerShell\nThis example gets all the tag keys for an instance.\n[ec2-user ~]$ curl http://169.254.169.254/latest/meta-data/tags/instance\nName\nEnvironment\nThis example gets the value of the Name key that was obtained in the previous example.\n[ec2-user ~]$ curl http://169.254.169.254/latest/meta-data/tags/instance/Name\nMyInstance\nTurn off access to tags in instance metadata\nTo turn off access to instance tags in the instance metadata, use one of the following methods. You don't need to turn off access to instance tags on instance metadata at launch because it's turned off by default.\nTo turn off access to tags in instance metadata using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect an instance, and then choose Actions, Instance settings, Allow tags in instance metadata.\nTo turn off access to tags in instance metadata, clear the Allow checkbox.\nChoose Save.\nTo turn off access to tags in instance metadata using the AWS CLI\nUse the modify-instance-metadata-options command and set --instance-metadata-tags to disabled.\naws ec2 modify-instance-metadata-options \\\n    --instance-id i-123456789example \\\n    --instance-metadata-tags disabled\nTo view whether access to tags in instance metadata is allowed using the AWS CLI\nUse the describe-instances command and specify the instance ID. Use the --query parameter to display only the instance metadata options in the results.\naws ec2 describe-instances \\\n    --instance-ids i-1234567890abcdef0 \\\n    --query \"Reservations[*].Instances[*].MetadataOptions\"\n    \nThe following is example output. The value of InstanceMetadataTags indicates whether access to tags in instance metadata is allowed. If the value is enabled, it is allowed. If the value is disabled, it is not allowed.\n[\n    [\n        {\n            \"State\": \"applied\",\n            \"HttpTokens\": \"required\",\n            \"HttpPutResponseHopLimit\": 2,\n            \"HttpEndpoint\": \"enabled\",\n            \"HttpProtocolIpv6\": \"disabled\",\n            \"InstanceMetadataTags\": \"enabled\"\n        }\n    ]\n]"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-resource-limits.html",
        "content": "When you create your AWS account, we set default quotas (also referred to as limits) on your AWS resources on a per-Region basis. If you attempt to exceed the quota for a resource, the request fails. For example, there is a maximum number of Amazon EC2 vCPUs that you can provision for On-Demand Instances in a Region. If you attempt to launch an instance in a Region and this request would cause your usage to exceed this quota, the request fails. If this happens, you can reduce your resource usage or request a quota increase.\nThe Service Quotas console is a central location where you can view and manage your quotas for AWS services, and request a quota increase for many of the resources that you use. Use the quota information that we provide to manage your AWS infrastructure. Plan to request any quota increases in advance of the time that you'll need them.\nFor more information, see Amazon EC2 endpoints and quotas and Amazon EBS endpoints and quotas in the Amazon Web Services General Reference.\nView your current quotas\nYou can view your quotas for each Region using the Service Quotas console.\nTo view your current quotas using the Service Quotas console\nOpen the Service Quotas console at https://console.aws.amazon.com/servicequotas/home/services/ec2/quotas/.\nFrom the navigation bar (at the top of the screen), select a Region.\nUse the filter field to filter the list by resource name. For example, enter On-Demand to locate the quotas for On-Demand Instances.\nTo view more information, choose the quota name to open the details page for the quota.\nRequest an increase\nYou can request a quota increase for each Region.\nTo request an increase using the Service Quotas console\nOpen the Service Quotas console at https://console.aws.amazon.com/servicequotas/home/services/ec2/quotas/.\nFrom the navigation bar (at the top of the screen), select a Region.\nUse the filter field to filter the list by resource name. For example, enter On-Demand to locate the quotas for On-Demand Instances.\nIf the quota is adjustable, choose the quota and then choose Request quota increase.\nFor Change quota value, enter the new quota value.\nChoose Request.\nTo view any pending or recently resolved requests in the console, choose Dashboard from the navigation pane. For pending requests, choose the status of the request to open the request receipt. The initial status of a request is Pending. After the status changes to Quota requested, you'll see the case number with Support. Choose the case number to open the ticket for your request.\nFor more information, including how to use the AWS CLI or SDKs to request a quota increase, see Requesting a quota increase in the Service Quotas User Guide.\nRestriction on email sent using port 25\nOn all instances, Amazon EC2 restricts outbound traffic to public IP addresses over port 25 by default. You can request that this restriction be removed. For more information, see How do I remove the restriction on port 25 from my Amazon EC2 instance or Lambda function?\nNote\nThis restriction does not apply to outbound traffic sent over port 25 to:\nIP addresses in the primary CIDR block of the VPC in which the originating network interface exists.\nIP addresses in the CIDRs defined in RFC 1918, RFC 6598, and RFC 4193."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring_ec2.html",
        "content": "Monitoring is an important part of maintaining the reliability, availability, and performance of your Amazon EC2 instances and your AWS solutions. You should collect monitoring data from all of the parts in your AWS solutions so that you can more easily debug a multi-point failure if one occurs.\nAWS provides various tools that you can use to monitor Amazon EC2. The Amazon EC2 and CloudWatch console dashboards provide an at-a-glance view of the state of your Amazon EC2 environment. In addition, we provide the following:\nSystem status checks \u2013 Monitor the AWS systems required to use your instance to ensure that they are working properly. These checks detect problems with your instance that require AWS involvement to repair. When a system status check fails, you can choose to wait for AWS to fix the issue or you can resolve it yourself (for example, by stopping and restarting or terminating and replacing an instance). Examples of problems that cause system status checks to fail include:\nLoss of network connectivity\nLoss of system power\nSoftware issues on the physical host\nHardware issues on the physical host that impact network reachability\nFor more information, see Status checks for Amazon EC2 instances.\nInstance status checks \u2013 Monitor the software and network configuration of your individual instance. These checks detect problems that require your involvement to repair. When an instance status check fails, typically you will need to address the problem yourself (for example, by rebooting the instance or by making modifications in your operating system). Examples of problems that may cause instance status checks to fail include:\nFailed system status checks\nMisconfigured networking or startup configuration\nExhausted memory\nCorrupted file system\nIncompatible kernel\nFor more information, see Status checks for Amazon EC2 instances.\nAmazon CloudWatch alarms \u2013 Watch a single metric over a time period you specify, and perform one or more actions based on the value of the metric relative to a given threshold over a number of time periods. The action is a notification sent to an Amazon Simple Notification Service (Amazon SNS) topic or Amazon EC2 Auto Scaling policy. Alarms invoke actions for sustained state changes only. CloudWatch alarms will not invoke actions simply because they are in a particular state; the state must have changed and been maintained for a specified number of periods. For more information, see Monitor your instances using CloudWatch.\nAmazon EventBridge events \u2013 Automate your AWS services and respond automatically to system events. Events from AWS services are delivered to EventBridge in near real time, and you can specify automated actions to take when an event matches a rule you write. For more information, see Automate Amazon EC2 using EventBridge.\nAWS CloudTrail logs \u2013 Capture detailed information about the calls made to the Amazon EC2 API and stores them as log files in Amazon S3. You can use CloudTrail logs to determine which calls were made, the source IP address for the call, who made the call, and when the call was made. For more information, see Log Amazon EC2 API calls using AWS CloudTrail.\nCloudWatch agent \u2013 Collect logs and system-level metrics from both hosts and guests on your EC2 instances and on-premises servers. For more information, see Collecting Metrics and Logs from Amazon EC2 Instances and On-Premises Servers with the CloudWatch Agent in the Amazon CloudWatch User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check.html",
        "content": "You can monitor the status of your instances by viewing status checks and scheduled events for your instances.\nA status check gives you the information that results from automated checks performed by Amazon EC2. These automated checks detect whether specific issues are affecting your instances. The status check information, together with the data provided by Amazon CloudWatch, gives you detailed operational visibility into each of your instances.\nYou can also see status of specific events that are scheduled for your instances. The status of events provides information about upcoming activities that are planned for your instances, such as rebooting or retirement. They also provide the scheduled start and end time of each event.\nContents\nStatus checks for Amazon EC2 instances\nState change events for Amazon EC2 instances\nScheduled events for Amazon EC2 instances"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-system-instance-status-check.html",
        "content": "With instance status monitoring, you can quickly determine whether Amazon EC2 has detected any problems that might prevent your instances from running applications. Amazon EC2 performs automated checks on every running EC2 instance to identify hardware and software issues. You can view the results of these status checks to identify specific and detectable problems. The event status data augments the information that Amazon EC2 already provides about the state of each instance (such as pending, running, stopping) and the utilization metrics that Amazon CloudWatch monitors (CPU utilization, network traffic, and disk activity).\nStatus checks are performed every minute, returning a pass or a fail status. If all checks pass, the overall status of the instance is OK. If one or more checks fail, the overall status is impaired. Status checks are built into Amazon EC2, so they cannot be disabled or deleted.\nWhen a status check fails, the corresponding CloudWatch metric for status checks is incremented. For more information, see Status check metrics. You can use these metrics to create CloudWatch alarms that are triggered based on the result of the status checks. For example, you can create an alarm to warn you if status checks fail on a specific instance. For more information, see Create CloudWatch alarms for Amazon EC2 instances that fail status checks.\nYou can also create an Amazon CloudWatch alarm that monitors an Amazon EC2 instance and automatically recovers the instance if it becomes impaired due to an underlying issue. For more information, see Automatic instance recovery.\nContents\nTypes of status checks\nView status checks for Amazon EC2 instances\nCreate CloudWatch alarms for Amazon EC2 instances that fail status checks\nTypes of status checks\nThere are three types of status checks.\nSystem status checks\nInstance status checks\nAttached EBS status checks\nSystem status checks\nSystem status checks monitor the AWS systems on which your instance runs. These checks detect underlying problems with your instance that require AWS involvement to repair. When a system status check fails, you can choose to wait for AWS to fix the issue, or you can resolve it yourself. For instances backed by Amazon EBS, you can stop and start the instance yourself, which in most cases results in the instance being migrated to a new host. For Linux instances backed by instance store, you can terminate and replace the instance. For Windows instances, the root volume must be an Amazon EBS volume; instance store is not supported for the root volume. Note that instance store volumes are ephemeral and all data is lost when the instance is stopped.\nThe following are examples of problems that can cause system status checks to fail:\nLoss of network connectivity\nLoss of system power\nSoftware issues on the physical host\nHardware issues on the physical host that impact network reachability\nIf a system status check fails, we increment the StatusCheckFailed_System metric.\nBare metal instances\nIf you perform a restart from the operating system on a bare metal instance, the system status check might temporarily return a fail status. When the instance becomes available, the system status check should return a pass status.\nInstance status checks\nInstance status checks monitor the software and network connectivity of your individual instance. Amazon EC2 checks the health of the instance by sending an address resolution protocol (ARP) request to the network interface (NIC). These checks detect problems that require your involvement to repair. When an instance status check fails, you typically must address the problem yourself (for example, by rebooting the instance or by making instance configuration changes).\nNote\nRecent Linux distributions that use systemd-networkd for network configuration might report on health checks differently from earlier distributions. During the boot process, this type of network can start earlier and potentially finish before other startup tasks that can also affect instance health. Status checks that depend on network availability can report a healthy status before other tasks complete.\nThe following are examples of problems that can cause instance status checks to fail:\nFailed system status checks\nIncorrect networking or startup configuration\nExhausted memory\nCorrupted file system\nIncompatible kernel\nDuring a reboot an instance status check reports a failure until the instance becomes available again.\nIf an instance status check fails, we increment the StatusCheckFailed_Instance metric.\nBare metal instances\nIf you perform a restart from the operating system on a bare metal instance, the instance status check might temporarily return a fail status. When the instance becomes available, the instance status check should return a pass status.\nAttached EBS status checks\nAttached EBS status checks monitor if the Amazon EBS volumes attached to an instance are reachable and able to complete I/O operations. The StatusCheckFailed_AttachedEBS metric is a binary value that indicates impairment if one or more of the EBS volumes attached to the instance are unable to complete I/O operations. These status checks detect underlying issues with the compute or Amazon EBS infrastructure. When the attached EBS status check metric fails, you can either wait for AWS to resolve the issue, or you can take actions, such as replacing the affected volumes or stopping and restarting the instance.\nThe following are examples of issues that can cause attached EBS status checks to fail:\nHardware or software issues on the storage subsystems underlying the EBS volumes\nHardware issues on the physical host that impact reachability of the EBS volumes\nConnectivity issues between the instance and EBS volumes\nYou can use the StatusCheckFailed_AttachedEBS metric to help improve the resilience of your workload. You can use this metric to create Amazon CloudWatch alarms that are triggered based on the result of the status check. For example, you could fail over to a secondary instance or Availability Zone when you detect a prolonged impact. Alternatively, you can monitor the I/O performance of each attached volume using EBS CloudWatch metrics to detect and replace the impaired volume. If your workload is not driving I/O to any of the EBS volumes attached to your instance, and the attached EBS status check indicates an impairment, you can stop and start the instance to address issues with the physical host that is impacting the reachability of the EBS volumes. For more information, see Amazon CloudWatch metrics for Amazon EBS.\nYou can also configure your Amazon EC2 Auto Scaling groups to detect attached EBS status check failures, and then replace the affected instance with a new one. For more information, see Monitor and replace Auto Scaling instances with impaired Amazon EBS volumes in the Amazon EC2 Auto Scaling User Guide.\nNote\nThe attached EBS status check metric is available only for Nitro instances."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/viewing_status.html",
        "content": "To view status checks, use one of the following methods.\nConsole\nCommand line\nTo view status checks\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nOn the Instances page, the Status check column lists the operational status of each instance.\nTo view the status of a specific instance, select the instance, and then choose the Status and alarms tab.\nIf your instance has a failed status check, you typically must address the problem yourself (for example, by rebooting the instance or by making instance configuration changes). To troubleshoot system or instance status check failures yourself, see Troubleshoot Amazon EC2 Linux instances with failed status checks.\nTo review the CloudWatch metrics for status checks, on the Status and alarms tab, expand Metrics to see the graphs for the following metrics:\nStatus check failed for system\nStatus check failed for instance\nStatus check failed for attached EBS\nFor more information, see Status check metrics."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating_status_check_alarms.html",
        "content": "You can use the status check metrics to create CloudWatch alarms to notify you when an instance has a failed status check.\nImportant\nStatus checks and status check alarms can temporarily enter an insufficient data state if there are missing metric data points. Although rare, this can happen when there is an interruption in the metric reporting systems, even when an instance is healthy. We recommend that you treat this state as missing data instead of a status check failure or alarm breach, especially when taking stop, terminate, reboot, or recover actions on the instance in response.\nTo create a status check alarm, use one of the following methods:\nConsole\nCommand line\nUse the following procedure to configure an alarm that sends you a notification by email, or stops, terminates, or recovers an instance when it fails a status check.\nTo create a status check alarm\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance, choose the Status Checks tab, and choose Actions, Create status check alarm.\nOn the Manage CloudWatch alarms page, under Add or edit alarm, choose Create an alarm.\nFor Alarm notification, turn the toggle on to configure Amazon Simple Notification Service (Amazon SNS) notifications. Select an existing Amazon SNS topic or enter a name to create a new topic.\nIf you add an email address to the list of recipients or created a new topic, Amazon SNS sends a subscription confirmation email message to each new address. Each recipient must confirm the subscription by choosing the link contained in that message. Alert notifications are sent only to confirmed addresses.\nFor Alarm action, turn the toggle on to specify an action to take when the alarm is triggered. Select the action.\nFor Alarm thresholds, specify the metric and criteria for the alarm.\nYou can leave the default settings for Group samples by (Average) and Type of data to sample (Status check failed:either), or you can change them to suit your needs.\nFor Consecutive period, set the number of periods to evaluate and, in Period, enter the evaluation period duration before triggering the alarm and sending an email.\n(Optional) For Sample metric data, choose Add to dashboard.\nChoose Create.\nIf you need to make changes to an instance status alarm, you can edit it.\nTo edit a status check alarm\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance and choose Actions, Monitoring, Manage CloudWatch alarms.\nOn the Manage CloudWatch alarms page, under Add or edit alarm, choose Edit an alarm.\nFor Search for alarm, choose the alarm.\nWhen you are finished making changes, choose Update."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instance-state-changes.html",
        "content": "Amazon EC2 sends an EC2 Instance State-change Notification event to Amazon EventBridge when the state of an instance changes.\nThe following is example data for this event. In this example, the instance entered the pending state.\n{\n   \"id\":\"7bf73129-1428-4cd3-a780-95db273d1602\",\n   \"detail-type\":\"EC2 Instance State-change Notification\",\n   \"source\":\"aws.ec2\",\n   \"account\":\"123456789012\",\n   \"time\":\"2021-11-11T21:29:54Z\",\n   \"region\":\"us-east-1\",\n   \"resources\":[\n      \"arn:aws:ec2:us-east-1:123456789012:instance/i-abcd1111\"\n   ],\n   \"detail\":{\n      \"instance-id\":\"i-abcd1111\",\n      \"state\":\"pending\"\n   }\n}\nThe possible values for state are:\npending\nrunning\nstopping\nstopped\nshutting-down\nterminated\nWhen you launch or start an instance, it enters the pending state and then the running state. When you stop an instance, it enters the stopping state and then the stopped state. When you terminate an instance, it enters the shutting-down state and then the terminated state."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-events-eventbridge-example.html",
        "content": "To receive email notifications when your instance changes state, create an Amazon SNS topic and then create an EventBridge rule for the EC2 Instance State-change Notification event.\nTo create an SNS topic\nOpen the Amazon SNS console at https://console.aws.amazon.com/sns/v3/home.\nIn the navigation pane, choose Topics.\nChoose Create topic.\nFor Type, choose Standard.\nFor Name, enter a name for your topic.\nChoose Create topic.\nChoose Create subscription.\nFor Protocol, choose Email.\nFor Endpoint, enter the email address that receives the notifications.\nChoose Create subscription.\nYou'll receive an email message with the following subject line: AWS Notification - Subscription Confirmation. Follow the directions to confirm your subscription.\nTo create an EventBridge rule\nOpen the Amazon EventBridge console at https://console.aws.amazon.com/events/.\nChoose Create rule.\nFor Name, enter a name for your rule.\nFor Rule type, choose Rule with an event pattern.\nChoose Next.\nFor Event pattern, do the following:\nFor Event source, choose AWS services.\nFor AWS service, choose EC2.\nFor Event type, choose EC2 Instance State-change Notification.\nBy default, we send notifications for any state change for any instance. If you prefer, you can select specific states or specific instances.\nChoose Next.\nSpecify a target as follows:\nFor Target types, choose AWS service.\nFor Select a target, choose SNS topic.\nFor Topic, choose the SNS topic that you created in the previous procedure.\nChoose Next.\n(Optional) Add tags to your rule.\nChoose Next.\nChoose Create rule.\nTo test your rule, initiate a state change. For example, start a stopped instance, stop a running instance, or launch an instance. You'll receive email messages with the following subject line: AWS Notification Message. The body of the email contains the event data."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html",
        "content": "AWS can schedule events for your instances, such as a reboot, stop/start, or retirement. These events do not occur frequently. If one of your instances will be affected by a scheduled event, AWS sends an email to the email address that's associated with your AWS account prior to the scheduled event. The email provides details about the event, including the start and end date. Depending on the event, you might be able to take action to control the timing of the event. AWS also sends an AWS Health event, which you can monitor and manage by using Amazon EventBridge. For more information about monitoring AWS Health events with Amazon EventBridge, see Monitoring events in AWS Health with Amazon EventBridge.\nScheduled events are managed by AWS; you can't schedule events for your instances. You can view the events scheduled by AWS, customize scheduled event notifications to include or remove tags from the email notification, reschedule scheduled events, create custom event windows for scheduled events, and perform actions when an instance is scheduled to reboot, retire, or stop.\nTo update the contact information for your account so that you can be sure to be notified about scheduled events, go to the Account Settings page.\nNote\nWhen an instance is affected by a scheduled event, and it is part of an Auto Scaling group, Amazon EC2 Auto Scaling eventually replaces it as part of its health checks, with no further action necessary on your part. For more information about the health checks performed by Amazon EC2 Auto Scaling, see Health checks for instances in an Auto Scaling group in the Amazon EC2 Auto Scaling User Guide.\nTypes of scheduled events\nAmazon EC2 can create the following types of events for your instances, where the event occurs at a scheduled time:\nInstance stop: At the scheduled time, the instance is stopped. When you start it again, it's migrated to a new host. Applies only to instances backed by Amazon EBS.\nInstance retirement: At the scheduled time, the instance is stopped if it is backed by Amazon EBS, or terminated if it is backed by instance store.\nInstance reboot: At the scheduled time, the instance is rebooted.\nSystem reboot: At the scheduled time, the host for the instance is rebooted.\nSystem maintenance: At the scheduled time, the instance might be temporarily affected by network maintenance or power maintenance.\nContents\nRecommended actions for Amazon EC2 instances affected by scheduled events\nView scheduled events that affect your Amazon EC2 instances\nCustomize email notifications for scheduled events that affect Amazon EC2 instances\nReschedule scheduled events that affect your Amazon EC2 instances\nCreate custom event windows for scheduled events that affect your Amazon EC2 instances"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/sched-events-actions.html",
        "content": "The following topic explains the actions you should take when your Amazon EC2 instance is affected by a scheduled event.\nTopics\nActions for instances scheduled to stop or retire\nActions for instances scheduled for reboot\nActions for instances scheduled for maintenance\nActions for instances scheduled to stop or retire\nWhen AWS detects irreparable failure of the underlying host for your instance, it schedules the instance to stop or terminate, depending on the type of root device for the instance. If the root device is an EBS volume, the instance is scheduled to stop. If the root device is an instance store volume, the instance is scheduled to terminate. For more information, see Instance retirement.\nImportant\nAny data stored on instance store volumes is lost when an instance is stopped, hibernated, or terminated. This includes instance store volumes that are attached to an instance that has an EBS volume as the root device. Be sure to save data from your instance store volumes that you might need later before the instance is stopped, hibernated, or terminated.\nActions for Instances Backed by Amazon EBS\nYou can wait for the instance to stop as scheduled. Alternatively, you can stop and start the instance yourself, which migrates it to a new host. For more information about stopping your instance, in addition to information about the changes to your instance configuration when it's stopped, see Stop and start Amazon EC2 instances.\nYou can automate an immediate stop and start in response to a scheduled instance stop event. For more information, see Running operations on EC2 instances automatically in response to events in AWS Health in the AWS Health User Guide.\nActions for Instances Backed by Instance Store\nWe recommend that you launch a replacement instance from your most recent AMI and migrate all necessary data to the replacement instance before the instance is scheduled to terminate. Then, you can terminate the original instance, or wait for it to terminate as scheduled.\nActions for instances scheduled for reboot\nWhen AWS must perform tasks such as installing updates or maintaining the underlying host, it can schedule the instance or the underlying host for a reboot. You can reschedule most reboot events so that your instance is rebooted at a specific date and time that suits you.\nView the reboot event type\nYou can view whether a reboot event is an instance reboot or a system reboot by using one of the following methods.\nConsole\nAWS CLI\nTo view the type of scheduled reboot event\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Events.\nChoose Resource type: instance from the filter list.\nFor each instance, view the value in the Event type column. The value is either system-reboot or instance-reboot.\nActions for instance reboot\nYou can wait for the instance reboot to occur within its scheduled maintenance window, reschedule the instance reboot to a date and time that suits you, or reboot the instance yourself at a time that is convenient for you.\nAfter your instance is rebooted, the scheduled event is cleared and the event's description is updated. The pending maintenance to the underlying host is completed, and you can begin using your instance again after it has fully booted.\nActions for system reboot\nIt is not possible for you to reboot the system yourself. You can wait for the system reboot to occur during its scheduled maintenance window, or you can reschedule the system reboot to a date and time that suits you. A system reboot typically completes in a matter of minutes. After the system reboot has occurred, the instance retains its IP address and DNS name, and any data on local instance store volumes is preserved. After the system reboot is complete, the scheduled event for the instance is cleared, and you can verify that the software on your instance is operating as expected.\nAlternatively, if it is necessary to maintain the instance at a different time and you can't reschedule the system reboot, then you can stop and start an Amazon EBS-backed instance, which migrates it to a new host. However, the data on the local instance store volumes is not preserved. You can also automate an immediate instance stop and start in response to a scheduled system reboot event. For more information, see Running operations on EC2 instances automatically in response to events in AWS Health in the AWS Health User Guide. For an instance store-backed instance, if you can't reschedule the system reboot, then you can launch a replacement instance from your most recent AMI, migrate all necessary data to the replacement instance before the scheduled maintenance window, and then terminate the original instance.\nActions for instances scheduled for maintenance\nWhen AWS must maintain the underlying host for an instance, it schedules the instance for maintenance. There are two types of maintenance events: network maintenance and power maintenance.\nDuring network maintenance, scheduled instances lose network connectivity for a brief period of time. Normal network connectivity to your instance is restored after maintenance is complete.\nDuring power maintenance, scheduled instances are taken offline for a brief period, and then rebooted. When a reboot is performed, all of your instance's configuration settings are retained.\nAfter your instance has rebooted (this normally takes a few minutes), verify that your application is working as expected. At this point, your instance should no longer have a scheduled event associated with it, or if it does, the description of the scheduled event begins with [Completed]. It sometimes takes up to 1 hour for the instance status description to refresh. Completed maintenance events are displayed on the Amazon EC2 console dashboard for up to a week.\nActions for Instances Backed by Amazon EBS\nYou can wait for the maintenance to occur as scheduled. Alternatively, you can stop and start the instance, which migrates it to a new host. For more information about stopping your instance, in addition to information about the changes to your instance configuration when it's stopped, see Stop and start Amazon EC2 instances.\nYou can automate an immediate stop and start in response to a scheduled maintenance event. For more information, see Running operations on EC2 instances automatically in response to events in AWS Health in the AWS Health User Guide.\nActions for instances backed by instance store\nYou can wait for the maintenance to occur as scheduled. Alternatively, if you want to maintain normal operation during a scheduled maintenance window, you can launch a replacement instance from your most recent AMI, migrate all necessary data to the replacement instance before the scheduled maintenance window, and then terminate the original instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/viewing_scheduled_events.html",
        "content": "In addition to receiving notification of scheduled events in email, you can check for scheduled events by using one of the following methods.\nConsole\nAWS CLI\nPowerShell\nInstance metadata\nAWS Health\nTo view scheduled events for your instances\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nThe dashboard displays any resources with an associated event under Scheduled events.\nFor more detail, choose Events in the navigation pane. Any resources with an associated event are displayed. You can filter by characteristics such as event type, resource type, and Availability Zone."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/customizing_scheduled_event_notifications.html",
        "content": "You can customize scheduled event notifications to include tags in the email notification. This makes it easier to identify the affected resource (instances or Dedicated Hosts) and to prioritize actions for the upcoming event.\nWhen you customize event notifications to include tags, you can choose to include:\nAll of the tags that are associated with the affected resource\nOnly specific tags that are associated with the affected resource\nFor example, suppose that you assign application, costcenter, project, and owner tags to all of your instances. You can choose to include all of the tags in event notifications. Alternatively, if you'd like to see only the owner and project tags in event notifications, then you can choose to include only those tags.\nAfter you select the tags to include, the event notifications will include the resource ID (instance ID or Dedicated Host ID) and the tag key and value pairs that are associated with the affected resource.\nTasks\nInclude tags in event notifications\nRemove tags from event notifications\nView the tags to be included in event notifications\nInclude tags in event notifications\nThe tags that you choose to include apply to all resources (instances and Dedicated Hosts) in the selected Region. To customize event notifications in other Regions, first select the required Region and then perform the following steps.\nYou can include tags in event notifications by using one of the following methods.\nConsole\nAWS CLI\nTo include tags in event notifications\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Events.\nChoose Actions, Manage event notifications.\nTurn on Include tags in event notifications.\nDo one of the following, depending on the tags that you want to include in event notifications:\nTo include all tags associated with the affected instance or Dedicated Host, select Include all tags.\nTo select the tags to include, select Choose the tags to include and then select or enter the tag keys.\nChoose Save.\nRemove tags from event notifications\nYou can remove tags from event notifications by using one of the following methods.\nConsole\nAWS CLI\nTo remove tags from event notifications\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Events.\nChoose Actions, Manage event notifications.\nTo remove all tags from event notifications, turn off Include tags in event notifications.\nTo remove specific tags from event notifications, choose the X) for the corresponding tag keys.\nChoose Save.\nView the tags to be included in event notifications\nYou can view the tags that are to be included in event notifications by using one of the following methods.\nConsole\nAWS CLI\nTo view the tags that are to be included in event notifications\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Events.\nChoose Actions, Manage event notifications."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/reschedule-event.html",
        "content": "You can reschedule an event so that it occurs at a specific date and time that suits you. Only events that have a deadline date can be rescheduled. There are other limitations for rescheduling an event.\nYou can reschedule an event by using one of the following methods.\nConsole\nAWS CLI\nTo reschedule an event\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Events.\nChoose Resource type: instance from the filter list.\nSelect one or more instances, and then choose Actions, Schedule event.\nOnly events that have an event deadline date, indicated by a value for Deadline, can be rescheduled. If one of the selected events does not have a deadline date, Actions, Schedule event is disabled.\nFor New start time, enter a new date and time for the event. The new date and time must occur before the Event deadline.\nChoose Save.\nIt might take a minute or two for the updated event start time to be reflected in the console.\nLimitations\nOnly events with an event deadline date can be rescheduled. The event can be rescheduled up to the event deadline date. The Deadline column in the console and the NotBeforeDeadline field in the AWS CLI indicate if the event has a deadline date.\nOnly events that have not yet started can be rescheduled. The Start time column in the console and the NotBefore field in the AWS CLI indicate the event start time. Events that are scheduled to start in the next 5 minutes cannot be rescheduled.\nThe new event start time must be at least 60 minutes from the current time.\nIf you reschedule multiple events using the console, the event deadline date is determined by the event with the earliest event deadline date."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/event-windows.html",
        "content": "You can define custom event windows that recur weekly for scheduled events that reboot, stop, or terminate your Amazon EC2 instances. You can associate one or more instances with an event window. If a scheduled event for those instances is planned, AWS will schedule the events within the associated event window.\nYou can use event windows to maximize workload availability by specifying event windows that occur during off-peak periods for your workload. You can also align the event windows with your internal maintenance schedules.\nYou define an event window by specifying a set of time ranges. The minimum time range is 2 hours. The combined time ranges must total at least 4 hours.\nYou can associate one or more instances with an event window by using either instance IDs or instance tags. You can also associate Dedicated Hosts with an event window by using the host ID.\nWarning\nEvent windows are applicable only for scheduled events that stop, reboot, or terminate instances.\nEvent windows are not applicable for:\nExpedited scheduled events and network maintenance events.\nUnscheduled maintenance such as AutoRecovery and unplanned reboots.\nWork with event windows\nConsiderations\nCreate event windows\nView event windows\nModify event windows\nDelete event windows\nTag event windows\nConsiderations\nAll event window times are in UTC.\nThe minimum weekly event window duration is 4 hours.\nThe time ranges within an event window must each be at least 2 hours.\nOnly one target type (instance ID, Dedicated Host ID, or instance tag) can be associated with an event window.\nA target (instance ID, Dedicated Host ID, or instance tag) can only be associated with one event window.\nA maximum of 100 instance IDs, or 50 Dedicated Host IDs, or 50 instance tags can be associated with an event window. The instance tags can be associated with any number of instances.\nA maximum of 200 event windows can be created per AWS Region.\nMultiple instances that are associated with event windows can potentially have scheduled events occur at the same time.\nIf AWS has already scheduled an event, modifying an event window won't change the time of the scheduled event. If the event has a deadline date, you can reschedule the event.\nYou can stop and start an instance prior to the scheduled event, which migrates the instance to a new host, and the scheduled event will no longer take place.\nCreate event windows\nYou can create one or more event windows. For each event window, you specify one or more blocks of time. For example, you can create an event window with blocks of time that occur every day at 4 AM for 2 hours. Or you can create an event window with blocks of time that occur on Sundays from 2 AM to 4 AM and on Wednesdays from 3 AM to 5 AM.\nFor the event window constraints, see Considerations earlier in this topic.\nEvent windows recur weekly until you delete them.\nUse one of the following methods to create an event window.\nConsole\nAWS CLI\nTo create an event window\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Events.\nChoose Actions, Manage event windows.\nChoose Create instance event window.\nFor Event window name, enter a descriptive name for the event window.\nFor Event window schedule, choose to specify the blocks of time in the event window by using the cron schedule builder or by specifying time ranges.\nIf you choose Cron schedule builder, specify the following:\nFor Days (UTC), specify the days of the week on which the event window occurs.\nFor Start time (UTC), specify the time when the event window begins.\nFor Duration, specify the duration of the blocks of time in the event window. The minimum duration per block of time is 2 hours. The minimum duration of the event window must equal or exceed 4 hours in total. All times are in UTC.\nIf you choose Time ranges, choose Add new time range and specify the start day and time and the end day and time. Repeat for each time range. The minimum duration per time range is 2 hours. The minimum duration for all time ranges combined must equal or exceed 4 hours in total.\n(Optional) For Target details, associate one or more instances with the event window so that if the instances are scheduled for maintenance, the scheduled event will occur during the associated event window. You can associate one or more instances with an event window by using instance IDs or instance tags. You can associate Dedicated Hosts with an event window by using the host ID.\nNote that you can create the event window without associating a target with the window. Later, you can modify the window to associate one or more targets.\n(Optional) For Event window tags, choose Add tag, and enter the key and value for the tag. Repeat for each tag.\nChoose Create event window.\nView event windows\nYou can view event windows by using one of the following methods.\nConsole\nAWS CLI\nTo view event windows\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Events.\nChoose Actions, Manage event windows.\nSelect an event window to view its details.\nModify event windows\nYou can modify all of the fields of an event window except its ID. For example, when daylight savings begin, you might want to modify the event window schedule. For existing event windows, you might want to add or remove targets.\nUse one of the following methods to modify an event window.\nConsole\nAWS CLI\nTo modify an event window\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Events.\nChoose Actions, Manage event windows.\nSelect the event window to modify, and then choose Actions, Modify instance event window.\nModify the fields in the event window, and then choose Modify event window.\nDelete event windows\nYou can delete one event window at a time by using one of the following methods.\nConsole\nAWS CLI\nTo delete an event window\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Events.\nChoose Actions, Manage event windows.\nSelect the event window to delete, and then choose Actions, Delete instance event window.\nWhen prompted, enter delete, and then choose Delete.\nTag event windows\nYou can tag an event window when you create it, or afterwards.\nTo tag an event window when you create it, see Create event windows.\nUse one of the following methods to tag an event window.\nConsole\nAWS CLI\nTo tag an existing event window\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Events.\nChoose Actions, Manage event windows.\nSelect the event window to tag, and then choose Actions, Manage instance event window tags.\nChoose Add tag to add a tag. Repeat for each tag.\nChoose Save."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html",
        "content": "You can monitor your instances using Amazon CloudWatch, which collects and processes raw data from Amazon EC2 into readable, near real-time metrics. These statistics are recorded for a period of 15 months, so that you can access historical information and gain a better perspective on how your web application or service is performing.\nBy default, Amazon EC2 sends metric data to CloudWatch in 5-minute periods. To send metric data for your instance to CloudWatch in 1-minute periods, you can enable detailed monitoring on the instance. For more information, see Manage detailed monitoring for your EC2 instances.\nThe Amazon EC2 console displays a series of graphs based on the raw data from Amazon CloudWatch. Depending on your needs, you might prefer to get data for your instances from Amazon CloudWatch instead of the graphs in the console.\nFor Amazon CloudWatch billing and cost information, see CloudWatch billing and cost in the Amazon CloudWatch User Guide.\nContents\nManage CloudWatch alarms for your EC2 instances in the Amazon EC2 console\nManage detailed monitoring for your EC2 instances\nCloudWatch metrics that are available for your instances\nInstall and configure the CloudWatch agent using the Amazon EC2 console to add additional metrics\nStatistics for CloudWatch metrics for your instances\nView the monitoring graphs for your instances\nCreate a CloudWatch alarm for an instance\nCreate alarms that stop, terminate, reboot, or recover an instance"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-alarms.html",
        "content": "From the Instances screen in the Amazon EC2 console, you can manage the Amazon CloudWatch alarms for your instances. In the Instances table, the Alarm status column provides two console controls: a control for viewing alarms, and another for creating or editing them. The following screenshot indicates these console controls, numbered 1 (View alarms) and 2 (a + sign for creating or editing an alarm).\nView alarms from the Instances screen\nYou can view each instance's alarms from the Instances screen.\nTo view an instance's alarm from the Instances screen\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nIn the Instances table, for your chosen instance, choose View alarms (numbered 1 in the preceding screenshot).\nIn the Alarm details for i-0123456789example window, choose the alarm name to view the alarm in the CloudWatch console.\nCreate alarms from the Instances screen\nYou can create an alarm for each instance from the Instances screen.\nTo create an alarm for an instance from the Instances screen\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nIn the Instances table, for your chosen instance, choose the plus sign (numbered 2 in the preceding screenshot).\nIn the Manage CloudWatch alarms screen, create your alarm. For more information, see Create a CloudWatch alarm for an instance.\nEdit alarms from the Instances screen\nYou can edit the alarm for an instance from the Instances screen.\nTo edit an alarm for an instance from the Instances screen\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nIn the Instances table, for your chosen instance, choose the plus sign (numbered 2 in the preceding screenshot).\nIn the Manage CloudWatch alarms screen, edit your alarm. For more information, see Edit or delete a CloudWatch alarm in the Amazon CloudWatch User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-detailed-monitoring.html",
        "content": "Amazon CloudWatch provides two categories of monitoring: basic monitoring and detailed monitoring. By default, your instance is configured for basic monitoring. You can optionally enable detailed monitoring to help you more quickly identify and act on operational issues. You can enable or turn off detailed monitoring at launch or when the instance is running or stopped.\nEnabling detailed monitoring on an instance does not affect the monitoring of its attached EBS volumes. For more information, see Amazon CloudWatch metrics for Amazon EBS.\nThe following table highlights the differences between basic monitoring and detailed monitoring for your instances.\nMonitoring type Description Charges\nBasic monitoring\nStatus check metrics are available in 1-minute periods. All other metrics are available in 5-minute periods.\nNo charge.\nDetailed monitoring All metrics, including status check metrics, are available in 1-minute periods. To get this level of data, you must specifically enable it for the instance. For the instances where you've enabled detailed monitoring, you can also get aggregated data across groups of similar instances. You are charged per metric that Amazon EC2 sends to CloudWatch. You are not charged for data storage. For more information, see Paid tier and Example 1 - EC2 Detailed Monitoring on the Amazon CloudWatch pricing page.\nContents\nRequired permissions\nEnable detailed monitoring at launch\nManage detailed monitoring\nRequired permissions\nTo enable detailed monitoring for an instance, your user must have permission to use the MonitorInstances API action. To turn off detailed monitoring for an instance, your user must have permission to use the UnmonitorInstances API action.\nEnable detailed monitoring at launch\nUse the following procedures to enable detailed monitoring at launch. By default, your instance uses basic monitoring.\nConsole\nAWS CLI\nTo enable detailed monitoring when launching an instance\nWhen launching an instance using the Amazon EC2 console, under Advanced details, select the Detailed CloudWatch monitoring checkbox.\nManage detailed monitoring\nUse the following procedures to manage detailed monitoring for a running or stopped instance.\nConsole\nAWS CLI\nTo manage detailed monitoring for an instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance.\nChoose Actions, Monitor and troubleshoot, Manage detailed monitoring.\nOn the Detailed monitoring page, for Detailed monitoring, do one of the following:\nDetailed monitoring \u2013 Select Enable.\nBasic monitoring \u2013 Clear Enable.\nChoose Confirm."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/viewing_metrics_with_cloudwatch.html",
        "content": "Amazon EC2 sends metrics to Amazon CloudWatch. You can use the AWS Management Console, the AWS CLI, or an API to list the metrics that Amazon EC2 sends to CloudWatch. By default, each data point covers the 5 minutes that follow the start time of activity for the instance. If you've enabled detailed monitoring, each data point covers the next minute of activity from the start time. Note that for the Minimum, Maximum, and Average statistics, the minimum granularity for the metrics that EC2 provides is 1 minute.\nFor information about how to view the available metrics using the AWS Management Console or the AWS CLI, see View available metrics in the Amazon CloudWatch User Guide.\nFor information about getting the statistics for these metrics, see Statistics for CloudWatch metrics for your instances.\nContents\nInstance metrics\nCPU credit metrics\nDedicated Host metrics\nAmazon EBS metrics for Nitro-based instances\nStatus check metrics\nTraffic mirroring metrics\nAuto Scaling group metrics\nAmazon EC2 metric dimensions\nAmazon EC2 usage metrics\nInstance metrics\nThe AWS/EC2 namespace includes the following instance metrics.\nMetric Description Unit Meaningful statistics\nCPUUtilization\nThe percentage of physical CPU time that Amazon EC2 uses to run the EC2 instance, which includes time spent to run both the user code and the Amazon EC2 code.\nAt a very high level, CPUUtilization is the sum of guest CPUUtilization and hypervisor CPUUtilization.\nTools in your operating system can show a different percentage than CloudWatch due to factors such as legacy device simulation, configuration of non-legacy devices, interrupt-heavy workloads, live migration, and live update.\nPercent\nAverage\nMinimum\nMaximum\nDiskReadOps\nCompleted read operations from all instance store volumes available to the instance in a specified period of time.\nTo calculate the average I/O operations per second (IOPS) for the period, divide the total operations in the period by the number of seconds in that period.\nIf there are no instance store volumes, either the value is 0 or the metric is not reported.\nCount\nSum\nAverage\nMinimum\nMaximum\nDiskWriteOps\nCompleted write operations to all instance store volumes available to the instance in a specified period of time.\nTo calculate the average I/O operations per second (IOPS) for the period, divide the total operations in the period by the number of seconds in that period.\nIf there are no instance store volumes, either the value is 0 or the metric is not reported.\nCount\nSum\nAverage\nMinimum\nMaximum\nDiskReadBytes\nBytes read from all instance store volumes available to the instance.\nThis metric is used to determine the volume of the data the application reads from the hard disk of the instance. This can be used to determine the speed of the application.\nThe number reported is the number of bytes received during the period. If you are using basic (5-minute) monitoring, you can divide this number by 300 to find Bytes/second. If you have detailed (1-minute) monitoring, divide it by 60. You can also use the CloudWatch metric math function DIFF_TIME to find the bytes per second. For example, if you have graphed DiskReadBytes in CloudWatch as m1, the metric math formula m1/(DIFF_TIME(m1)) returns the metric in bytes/second. For more information about DIFF_TIME and other metric math functions, see Use metric math in the Amazon CloudWatch User Guide.\nIf there are no instance store volumes, either the value is 0 or the metric is not reported.\nBytes\nSum\nAverage\nMinimum\nMaximum\nDiskWriteBytes\nBytes written to all instance store volumes available to the instance.\nThis metric is used to determine the volume of the data the application writes onto the hard disk of the instance. This can be used to determine the speed of the application.\nThe number reported is the number of bytes received during the period. If you are using basic (5-minute) monitoring, you can divide this number by 300 to find Bytes/second. If you have detailed (1-minute) monitoring, divide it by 60. You can also use the CloudWatch metric math function DIFF_TIME to find the bytes per second. For example, if you have graphed DiskWriteBytes in CloudWatch as m1, the metric math formula m1/(DIFF_TIME(m1)) returns the metric in bytes/second. For more information about DIFF_TIME and other metric math functions, see Use metric math in the Amazon CloudWatch User Guide.\nIf there are no instance store volumes, either the value is 0 or the metric is not reported.\nBytes\nSum\nAverage\nMinimum\nMaximum\nMetadataNoToken\nThe number of times the Instance Metadata Service (IMDS) was successfully accessed using a method that does not use a token.\nThis metric is used to determine if there are any processes accessing instance metadata that are using Instance Metadata Service Version 1 (IMDSv1), which does not use a token. If all requests use token-backed sessions, i.e., Instance Metadata Service Version 2 (IMDSv2), the value is 0. For more information, see Transition to using Instance Metadata Service Version 2.\nCount\nSum\nPercentiles\nMetadataNoTokenRejected\nThe number of times an IMDSv1 call was attempted after IMDSv1 was disabled.\nIf this metric appears, it indicates that an IMDSv1 call was attempted and rejected. You can either re-enable IMDSv1 or make sure all of your calls use IMDSv2. For more information, see Transition to using Instance Metadata Service Version 2.\nCount\nSum\nPercentiles\nNetworkIn\nThe number of bytes received by the instance on all network interfaces. This metric identifies the volume of incoming network traffic to a single instance.\nThe number reported is the number of bytes received during the period. If you are using basic (5-minute) monitoring and the statistic is Sum, you can divide this number by 300 to find Bytes/second. If you have detailed (1-minute) monitoring and the statistic is Sum, divide it by 60. You can also use the CloudWatch metric math function DIFF_TIME to find the bytes per second. For example, if you have graphed NetworkIn in CloudWatch as m1, the metric math formula m1/(DIFF_TIME(m1)) returns the metric in bytes/second. For more information about DIFF_TIME and other metric math functions, see Use metric math in the Amazon CloudWatch User Guide.\nBytes\nSum\nAverage\nMinimum\nMaximum\nNetworkOut\nThe number of bytes sent out by the instance on all network interfaces. This metric identifies the volume of outgoing network traffic from a single instance.\nThe number reported is the number of bytes sent during the period. If you are using basic (5-minute) monitoring and the statistic is Sum, you can divide this number by 300 to find Bytes/second. If you have detailed (1-minute) monitoring and the statistic is Sum, divide it by 60. You can also use the CloudWatch metric math function DIFF_TIME to find the bytes per second. For example, if you have graphed NetworkOut in CloudWatch as m1, the metric math formula m1/(DIFF_TIME(m1)) returns the metric in bytes/second. For more information about DIFF_TIME and other metric math functions, see Use metric math in the Amazon CloudWatch User Guide.\nBytes\nSum\nAverage\nMinimum\nMaximum\nNetworkPacketsIn\nThe number of packets received by the instance on all network interfaces. This metric identifies the volume of incoming traffic in terms of the number of packets on a single instance.\nThis metric is available for basic monitoring only (5-minute periods). To calculate the number of packets per second (PPS) your instance received for the 5 minutes, divide the Sum statistic value by 300. You can also use the CloudWatch metric math function DIFF_TIME to find the packets per second. For example, if you have graphed NetworkPacketsIn in CloudWatch as m1, the metric math formula m1/(DIFF_TIME(m1)) returns the metric in packets/second. For more information about DIFF_TIME and other metric math functions, see Use metric math in the Amazon CloudWatch User Guide.\nCount\nSum\nAverage\nMinimum\nMaximum\nNetworkPacketsOut\nThe number of packets sent out by the instance on all network interfaces. This metric identifies the volume of outgoing traffic in terms of the number of packets on a single instance.\nThis metric is available for basic monitoring only (5-minute periods). To calculate the number of packets per second (PPS) your instance sent for the 5 minutes, divide the Sum statistic value by 300. You can also use the CloudWatch metric math function DIFF_TIME to find the packets per second. For example, if you have graphed NetworkPacketsOut in CloudWatch as m1, the metric math formula m1/(DIFF_TIME(m1)) returns the metric in packets/second. For more information about DIFF_TIME and other metric math functions, see Use metric math in the Amazon CloudWatch User Guide.\nCount\nSum\nAverage\nMinimum\nMaximum\nCPU credit metrics\nThe AWS/EC2 namespace includes the following CPU credit metrics for your burstable performance instances.\nMetric Description Unit Meaningful statistics\nCPUCreditUsage\nThe number of CPU credits spent by the instance for CPU utilization. One CPU credit equals one vCPU running at 100% utilization for one minute or an equivalent combination of vCPUs, utilization, and time (for example, one vCPU running at 50% utilization for two minutes or two vCPUs running at 25% utilization for two minutes).\nCPU credit metrics are available at a 5-minute frequency only. If you specify a period greater than five minutes, use the Sum statistic instead of the Average statistic.\nCredits (vCPU-minutes)\nSum\nAverage\nMinimum\nMaximum\nCPUCreditBalance\nThe number of earned CPU credits that an instance has accrued since it was launched or started. For T2 Standard, the CPUCreditBalance also includes the number of launch credits that have been accrued.\nCredits are accrued in the credit balance after they are earned, and removed from the credit balance when they are spent. The credit balance has a maximum limit, determined by the instance size. After the limit is reached, any new credits that are earned are discarded. For T2 Standard, launch credits do not count towards the limit.\nThe credits in the CPUCreditBalance are available for the instance to spend to burst beyond its baseline CPU utilization.\nWhen an instance is running, credits in the CPUCreditBalance do not expire. When a T3 or T3a instance stops, the CPUCreditBalance value persists for seven days. Thereafter, all accrued credits are lost. When a T2 instance stops, the CPUCreditBalance value does not persist, and all accrued credits are lost.\nCPU credit metrics are available at a 5-minute frequency only.\nCredits (vCPU-minutes)\nSum\nAverage\nMinimum\nMaximum\nCPUSurplusCreditBalance\nThe number of surplus credits that have been spent by an unlimited instance when its CPUCreditBalance value is zero.\nThe CPUSurplusCreditBalance value is paid down by earned CPU credits. If the number of surplus credits exceeds the maximum number of credits that the instance can earn in a 24-hour period, the spent surplus credits above the maximum incur an additional charge.\nCPU credit metrics are available at a 5-minute frequency only.\nCredits (vCPU-minutes)\nSum\nAverage\nMinimum\nMaximum\nCPUSurplusCreditsCharged\nThe number of spent surplus credits that are not paid down by earned CPU credits, and which thus incur an additional charge.\nSpent surplus credits are charged when any of the following occurs:\nThe spent surplus credits exceed the maximum number of credits that the instance can earn in a 24-hour period. Spent surplus credits above the maximum are charged at the end of the hour.\nThe instance is stopped or terminated.\nThe instance is switched from unlimited to standard.\nCPU credit metrics are available at a 5-minute frequency only.\nCredits (vCPU-minutes)\nSum\nAverage\nMinimum\nMaximum\nDedicated Host metrics\nThe AWS/EC2 namespace includes the following metrics for T3 Dedicated Hosts.\nMetric Description Unit Meaningful statistics\nDedicatedHostCPUUtilization\nThe percentage of allocated compute capacity that is currently in use by the instances running on the Dedicated Host.\nPercent\nSum\nAverage\nMinimum\nMaximum\nAmazon EBS metrics for Nitro-based instances\nThe AWS/EC2 namespace includes additional Amazon EBS metrics for volumes that are attached to Nitro-based instances that are not bare metal instances.\nMetric Description Unit Meaningful statistics\nEBSReadOps\nCompleted read operations from all Amazon EBS volumes attached to the instance in a specified period of time.\nTo calculate the average read I/O operations per second (Read IOPS) for the period, divide the total operations in the period by the number of seconds in that period. If you are using basic (5-minute) monitoring, you can divide this number by 300 to calculate the Read IOPS. If you have detailed (1-minute) monitoring, divide it by 60. You can also use the CloudWatch metric math function DIFF_TIME to find the operations per second. For example, if you have graphed EBSReadOps in CloudWatch as m1, the metric math formula m1/(DIFF_TIME(m1)) returns the metric in operations/second. For more information about DIFF_TIME and other metric math functions, see Use metric math in the Amazon CloudWatch User Guide.\nCount\nSum\nAverage\nMinimum\nMaximum\nEBSWriteOps\nCompleted write operations to all EBS volumes attached to the instance in a specified period of time.\nTo calculate the average write I/O operations per second (Write IOPS) for the period, divide the total operations in the period by the number of seconds in that period. If you are using basic (5-minute) monitoring, you can divide this number by 300 to calculate the Write IOPS. If you have detailed (1-minute) monitoring, divide it by 60. You can also use the CloudWatch metric math function DIFF_TIME to find the operations per second. For example, if you have graphed EBSWriteOps in CloudWatch as m1, the metric math formula m1/(DIFF_TIME(m1)) returns the metric in operations/second. For more information about DIFF_TIME and other metric math functions, see Use metric math in the Amazon CloudWatch User Guide.\nCount\nSum\nAverage\nMinimum\nMaximum\nEBSReadBytes\nBytes read from all EBS volumes attached to the instance in a specified period of time.\nThe number reported is the number of bytes read during the period. If you are using basic (5-minute) monitoring, you can divide this number by 300 to find Read Bytes/second. If you have detailed (1-minute) monitoring, divide it by 60. You can also use the CloudWatch metric math function DIFF_TIME to find the bytes per second. For example, if you have graphed EBSReadBytes in CloudWatch as m1, the metric math formula m1/(DIFF_TIME(m1)) returns the metric in bytes/second. For more information about DIFF_TIME and other metric math functions, see Use metric math in the Amazon CloudWatch User Guide.\nBytes\nSum\nAverage\nMinimum\nMaximum\nEBSWriteBytes\nBytes written to all EBS volumes attached to the instance in a specified period of time.\nThe number reported is the number of bytes written during the period. If you are using basic (5-minute) monitoring, you can divide this number by 300 to find Write Bytes/second. If you have detailed (1-minute) monitoring, divide it by 60. You can also use the CloudWatch metric math function DIFF_TIME to find the bytes per second. For example, if you have graphed EBSWriteBytes in CloudWatch as m1, the metric math formula m1/(DIFF_TIME(m1)) returns the metric in bytes/second. For more information about DIFF_TIME and other metric math functions, see Use metric math in the Amazon CloudWatch User Guide.\nBytes\nSum\nAverage\nMinimum\nMaximum\nEBSIOBalance%\nProvides information about the percentage of I/O credits remaining in the burst bucket. This metric is available for basic monitoring only.\nThis metric is available only for some *.4xlarge instance sizes and smaller that burst to their maximum performance for only 30 minutes at least once every 24 hours.\nThe Sum statistic is not applicable to this metric.\nPercent\nMinimum\nMaximum\nEBSByteBalance%\nProvides information about the percentage of throughput credits remaining in the burst bucket. This metric is available for basic monitoring only.\nThis metric is available only for some *.4xlarge instance sizes and smaller that burst to their maximum performance for only 30 minutes at least once every 24 hours.\nThe Sum statistic is not applicable to this metric.\nPercent\nMinimum\nMaximum\nFor information about the metrics provided for your EBS volumes, see Metrics for Amazon EBS volumes in the Amazon EBS User Guide. For information about the metrics provided for your EC2 Fleets and Spot Fleets, see Monitor your EC2 Fleet or Spot Fleet using CloudWatch.\nStatus check metrics\nBy default, status check metrics are available at a 1-minute frequency at no charge. For a newly-launched instance, status check metric data is only available after the instance has completed the initialization state (within a few minutes of the instance entering the running state). For more information about EC2 status checks, see Status checks for Amazon EC2 instances.\nThe AWS/EC2 namespace includes the following status check metrics.\nMetric Description Unit Meaningful statistics\nStatusCheckFailed\nReports whether the instance has passed all status checks in the last minute.\nThis metric can be either 0 (passed) or 1 (failed).\nBy default, this metric is available at a 1-minute frequency at no charge.\nCount\nAverage\nMinimum\nMaximum\nStatusCheckFailed_Instance\nReports whether the instance has passed the instance status check in the last minute.\nThis metric can be either 0 (passed) or 1 (failed).\nBy default, this metric is available at a 1-minute frequency at no charge.\nCount\nAverage\nMinimum\nMaximum\nStatusCheckFailed_System\nReports whether the instance has passed the system status check in the last minute.\nThis metric can be either 0 (passed) or 1 (failed).\nBy default, this metric is available at a 1-minute frequency at no charge.\nCount\nAverage\nMinimum\nMaximum\nStatusCheckFailed_AttachedEBS\nReports whether the instance has passed the attached EBS status check in the last minute.\nThis metric can be either 0 (passed) or 1 (failed).\nBy default, this metric is available at a 1-minute frequency at no charge.\nCount\nAverage\nMinimum\nMaximum\nThe AWS/EBS namespace includes the following status check metric.\nMetric Description Unit Meaningful statistics\nVolumeStalledIOCheck\nNote: For Nitro instances only. Not published for volumes attached to Amazon ECS and AWS Fargate tasks.\nReports whether a volume has passed or failed a stalled IO check in the last minute. This metric can be either 0 (passed) or 1 (failed).\nNone\nAverage\nMinimum\nMaximum\nTraffic mirroring metrics\nThe AWS/EC2 namespace includes metrics for mirrored traffic. For more information, see Monitor mirrored traffic using Amazon CloudWatch in the Amazon VPC Traffic Mirroring Guide.\nAuto Scaling group metrics\nThe AWS/AutoScaling namespace includes metrics for Auto Scaling groups. For more information, see Monitor CloudWatch metrics for your Auto Scaling groups and instances in the Amazon EC2 Auto Scaling User Guide.\nAmazon EC2 metric dimensions\nYou can use the following dimensions to refine the metrics listed in the previous tables.\nDimension Description\nAutoScalingGroupName\nThis dimension filters the data you request for all instances in a specified capacity group. An Auto Scaling group is a collection of instances you define if you're using Auto Scaling. This dimension is available only for Amazon EC2 metrics when the instances are in such an Auto Scaling group. Available for instances with Detailed or Basic Monitoring enabled.\nImageId\nThis dimension filters the data you request for all instances running this Amazon EC2 Amazon Machine Image (AMI). Available for instances with Detailed Monitoring enabled.\nInstanceId\nThis dimension filters the data you request for the identified instance only. This helps you pinpoint an exact instance from which to monitor data.\nInstanceType\nThis dimension filters the data you request for all instances running with this specified instance type. This helps you categorize your data by the type of instance running. For example, you might compare data from an m1.small instance and an m1.large instance to determine which has the better business value for your application. Available for instances with Detailed Monitoring enabled.\nAmazon EC2 usage metrics\nYou can use CloudWatch usage metrics to provide visibility into your account's usage of resources. Use these metrics to visualize your current service usage on CloudWatch graphs and dashboards.\nAmazon EC2 usage metrics correspond to AWS service quotas. You can configure alarms that alert you when your usage approaches a service quota. For more information about CloudWatch integration with service quotas, see AWS usage metrics in the Amazon CloudWatch User Guide.\nAmazon EC2 publishes the following metrics in the AWS/Usage namespace.\nMetric Description\nResourceCount\nThe number of the specified resources running in your account. The resources are defined by the dimensions associated with the metric.\nThe most useful statistic for this metric is MAXIMUM, which represents the maximum number of resources used during the 1-minute period.\nThe following dimensions are used to refine the usage metrics that are published by Amazon EC2.\nDimension Description\nService\nThe name of the AWS service containing the resource. For Amazon EC2 usage metrics, the value for this dimension is EC2.\nType\nThe type of entity that is being reported. Currently, the only valid value for Amazon EC2 usage metrics is Resource.\nResource\nThe type of resource that is running. Currently, the only valid value for Amazon EC2 usage metrics is vCPU, which returns information on instances that are running.\nClass\nThe class of resource being tracked. For Amazon EC2 usage metrics with vCPU as the value of the Resource dimension, the valid values are Standard/OnDemand, F/OnDemand, G/OnDemand, Inf/OnDemand, P/OnDemand, and X/OnDemand.\nThe values for this dimension define the first letter of the instance types that are reported by the metric. For example, Standard/OnDemand returns information about all running instances with types that start with A, C, D, H, I, M, R, T, and Z, and G/OnDemand returns information about all running instances with types that start with G."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/install-and-configure-cloudwatch-agent-using-ec2-console.html",
        "content": "Installing and configuring the CloudWatch agent using the Amazon EC2 console is in beta for Amazon EC2 and is subject to change.\nBy default, Amazon CloudWatch provides basic metrics, such as CPUUtilization and NetworkIn, for monitoring your Amazon EC2 instances. To collect additional metrics, you can install the CloudWatch agent on your EC2 instances, and then configure the agent to emit selected metrics. Instead of manually installing and configuring the CloudWatch agent on every EC2 instance, you can use the Amazon EC2 console to do this for you.\nThis topic explains how you can use the Amazon EC2 console to install the CloudWatch agent on your instances and configure the agent to emit selected metrics.\nFor the manual steps for this process, see Installing the CloudWatch agent using AWS Systems Manager in the Amazon CloudWatch User Guide. For more information about the CloudWatch agent, see Collect metrics, logs, and traces with the CloudWatch agent.\nTopics\nPrerequisites\nHow it works\nCosts\nInstall and configure the CloudWatch agent\nPrerequisites\nTo use Amazon EC2 to install and configure the CloudWatch agent, you must meet the user and instance prerequisites described in this section.\nUser prerequisites\nTo use this feature, your IAM console user or role must have the permissions required for using Amazon EC2 and the following IAM permissions:\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssm:GetParameter\",\n                \"ssm:PutParameter\"\n            ],\n            \"Resource\": \"arn:aws:ssm:*:*:parameter/EC2-Custom-Metrics-*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ssm:SendCommand\",\n                \"ssm:ListCommandInvocations\",\n                \"ssm:DescribeInstanceInformation\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:GetInstanceProfile\",\n                \"iam:SimulatePrincipalPolicy\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\nInstance prerequisites\nInstance state: running\nSupported operating system: Linux\nAWS Systems Manager Agent (SSM Agent): Installed. Two notes about SSM Agent:\nSSM Agent is preinstalled on some Amazon Machine Images (AMIs) provided by AWS and trusted third-parties. For information about the supported AMIs and the instructions for installing SSM Agent, see Amazon Machine Images (AMIs) with SSM Agent preinstalled in the AWS Systems Manager User Guide.\nIf you experience issues with the SSM Agent, see Troubleshooting SSM Agent in the AWS Systems Manager User Guide.\nIAM permissions for the instance: The following AWS managed policies must be added to an IAM role that is attached to the instance:\nAmazonSSMManagedInstanceCore \u2013 Enables an instance to use Systems Manager to install and configure the CloudWatch agent.\nCloudWatchAgentServerPolicy \u2013 Enables an instance to use the CloudWatch agent to write data to CloudWatch.\nFor information about how to add IAM permissions to your instance, see Use instance profiles in the IAM User Guide.\nHow it works\nBefore you can use the Amazon EC2 console to install and configure the CloudWatch agent, you must make sure that your IAM user or role, and the instances on which you want to add metrics, meet certain prerequisites. Then, you can use the Amazon EC2 console to install and configure the CloudWatch agent on your selected instances.\nFirst meet the prerequisites\nYou need the required IAM permissions \u2013 Before you get started, make sure that your console user or role has the required IAM permissions to use this feature.\nInstances \u2013 To use the feature, your EC2 instances must be Linux instances, have the SSM Agent installed, have the required IAM permissions, and be running.\nThen you can use the feature\nSelect your instances \u2013 In the Amazon EC2 console, you select the instances on which to install and configure the CloudWatch agent. You then start the process by choosing Configure CloudWatch agent.\nValidate SSM Agent \u2013 Amazon EC2 checks that the SSM Agent is installed and started on each instance. Any instances that fail this check are excluded from the process. The SSM Agent is used for performing actions on the instance during this process.\nValidate IAM permissions \u2013 Amazon EC2 checks that each instance has the required IAM permissions for this process. Any instances that fail this check are excluded from the process. The IAM permissions enable the CloudWatch agent to collect metrics from the instance and integrate with AWS Systems Manager to use the SSM Agent.\nValidate CloudWatch agent \u2013 Amazon EC2 checks that the CloudWatch agent is installed and running on each instance. If any instances fail this check, Amazon EC2 offers to install and start the CloudWatch agent for you. The CloudWatch agent will collect the selected metrics on each instance once this process is completed.\nSelect metric configuration \u2013 You select the metrics for the CloudWatch agent to emit from your instances. Once selected, Amazon EC2 stores a configuration file in Parameter Store, where it remains until the process is completed. Amazon EC2 will delete the configuration file from Parameter Store unless the process is interrupted. Note that if you don't select a metric, but you previously added it to your instance, it will be removed from your instance when this process is completed.\nUpdate CloudWatch agent configuration \u2013 Amazon EC2 sends the metric configuration to the CloudWatch agent. This is the last step in the process. If it succeeds, your instances can emit data for the selected metrics and Amazon EC2 deletes the configuration file from Parameter Store.\nCosts\nAdditional metrics that you add during this process are billed as custom metrics. For more information about CloudWatch metrics pricing, see Amazon CloudWatch Pricing.\nInstall and configure the CloudWatch agent\nYou can use the Amazon EC2 console to install and configure the CloudWatch agent to add additional metrics.\nNote\nEvery time you perform this procedure, you overwrite the existing CloudWatch agent configuration. If you don't select a metric that was selected previously, it will be removed from the instance.\nTo install and configure the CloudWatch agent using the Amazon EC2 console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instances on which to install and configure the CloudWatch agent.\nChoose Actions, Monitor and troubleshoot, Configure CloudWatch agent.\nTip\nThis feature is not available in all AWS Regions. If Configure CloudWatch agent is not available, try another Region.\nFor each step in the process, read the console text, and then choose Next.\nTo complete the process, in the final step, choose Complete."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring_get_statistics.html",
        "content": "You can get statistics for the CloudWatch metrics for your instances. Statistics are metric data aggregations over specified periods of time. CloudWatch provides statistics based on the metric data points provided by your custom data or provided by other services in AWS to CloudWatch. Aggregations are made using the namespace, metric name, dimensions, and the data point unit of measure, within the time period you specify. The following table describes the available statistics.\nStatistic Description\nMinimum\nThe lowest value observed during the specified period. You can use this value to determine low volumes of activity for your application.\nMaximum\nThe highest value observed during the specified period. You can use this value to determine high volumes of activity for your application.\nSum\nAll values submitted for the matching metric added together. This statistic can be useful for determining the total volume of a metric.\nAverage\nThe value of Sum / SampleCount during the specified period. By comparing this statistic with the Minimum and Maximum, you can determine the full scope of a metric and how close the average use is to the Minimum and Maximum. This comparison helps you to know when to increase or decrease your resources as needed.\nSampleCount\nThe count (number) of data points used for the statistical calculation.\npNN.NN\nThe value of the specified percentile. You can specify any percentile, using up to two decimal places (for example, p95.45).\nContents\nGet statistics for a specific instance\nAggregate statistics across instances\nAggregate statistics by Auto Scaling group\nAggregate statistics by AMI"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/US_SingleMetricPerInstance.html",
        "content": "You can use the AWS Management Console or the AWS CLI to get statistics for a specific instance. The following examples show you how to use the AWS Management Console or the AWS CLI to determine the maximum CPU utilization of a specific EC2 instance.\nRequirements\nYou must have the ID of the instance. You can get the instance ID using the AWS Management Console or the describe-instances command.\nBy default, basic monitoring is enabled, but you can enable detailed monitoring. For more information, see Manage detailed monitoring for your EC2 instances.\nTo display the CPU utilization for a specific instance (console)\nOpen the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.\nIn the navigation pane, choose Metrics.\nChoose the EC2 metric namespace.\nChoose the Per-Instance Metrics dimension.\nIn the search field, enter CPUUtilization and press Enter. Choose the row for the specific instance, which displays a graph for the CPUUtilization metric for the instance. To name the graph, choose the pencil icon. To change the time range, select one of the predefined values or choose custom.\nTo change the statistic or the period for the metric, choose the Graphed metrics tab. Choose the column heading or an individual value, and then choose a different value.\nTo get the CPU utilization for a specific instance (AWS CLI)\nUse the following get-metric-statistics command to get the CPUUtilization metric for the specified instance, using the specified period and time interval:\naws cloudwatch get-metric-statistics --namespace AWS/EC2 --metric-name CPUUtilization  --period 3600 \\\n--statistics Maximum --dimensions Name=InstanceId,Value=i-1234567890abcdef0 \\\n--start-time 2022-10-18T23:18:00 --end-time 2022-10-19T23:18:00\nThe following is example output. Each value represents the maximum CPU utilization percentage for a single EC2 instance.\n{\n    \"Datapoints\": [\n        {\n            \"Timestamp\": \"2022-10-19T00:18:00Z\", \n            \"Maximum\": 0.33000000000000002, \n            \"Unit\": \"Percent\"\n        }, \n        {\n            \"Timestamp\": \"2022-10-19T03:18:00Z\", \n            \"Maximum\": 99.670000000000002, \n            \"Unit\": \"Percent\"\n        }, \n        {\n            \"Timestamp\": \"2022-10-19T07:18:00Z\", \n            \"Maximum\": 0.34000000000000002, \n            \"Unit\": \"Percent\"\n        }, \n        {\n            \"Timestamp\": \"2022-10-19T12:18:00Z\", \n            \"Maximum\": 0.34000000000000002, \n            \"Unit\": \"Percent\"\n        }, \n        ...\n    ], \n    \"Label\": \"CPUUtilization\"\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/GetSingleMetricAllDimensions.html",
        "content": "Aggregate statistics are available for instances that have detailed monitoring enabled. Instances that use basic monitoring are not included in the aggregates. Before you can get statistics aggregated across instances, you must enable detailed monitoring (at an additional charge), which provides data in 1-minute periods.\nNote that Amazon CloudWatch cannot aggregate data across AWS Regions. Metrics are completely separate between Regions.\nThis example shows you how to use detailed monitoring to get the average CPU usage for your EC2 instances. Because no dimension is specified, CloudWatch returns statistics for all dimensions in the AWS/EC2 namespace.\nImportant\nThis technique for retrieving all dimensions across an AWS namespace does not work for custom namespaces that you publish to Amazon CloudWatch. With custom namespaces, you must specify the complete set of dimensions that are associated with any given data point to retrieve statistics that include the data point.\nTo display average CPU utilization across your instances (console)\nOpen the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.\nIn the navigation pane, choose Metrics.\nChoose the EC2 namespace and then choose Across All Instances.\nChoose the row that contains CPUUtilization, which displays a graph for the metric for all your EC2 instances. To name the graph, choose the pencil icon. To change the time range, select one of the predefined values or choose custom.\nTo change the statistic or the period for the metric, choose the Graphed metrics tab. Choose the column heading or an individual value, and then choose a different value.\nTo get average CPU utilization across your instances (AWS CLI)\nUse the get-metric-statistics command as follows to get the average of the CPUUtilization metric across your instances.\naws cloudwatch get-metric-statistics \\\n    --namespace AWS/EC2 \\\n    --metric-name CPUUtilization \\ \n    --period 3600  --statistics \"Average\" \"SampleCount\" \\ \n    --start-time 2022-10-11T23:18:00 \\\n    --end-time 2022-10-12T23:18:00\nThe following is example output:\n{\n    \"Datapoints\": [\n        {\n            \"SampleCount\": 238.0, \n            \"Timestamp\": \"2022-10-12T07:18:00Z\", \n            \"Average\": 0.038235294117647062, \n            \"Unit\": \"Percent\"\n        }, \n        {\n            \"SampleCount\": 240.0, \n            \"Timestamp\": \"2022-10-12T09:18:00Z\", \n            \"Average\": 0.16670833333333332, \n            \"Unit\": \"Percent\"\n        }, \n        {\n            \"SampleCount\": 238.0, \n            \"Timestamp\": \"2022-10-11T23:18:00Z\", \n            \"Average\": 0.041596638655462197, \n            \"Unit\": \"Percent\"\n        },\n        ...\n    ], \n    \"Label\": \"CPUUtilization\"\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/GetMetricAutoScalingGroup.html",
        "content": "You can aggregate statistics for the EC2 instances in an Auto Scaling group. Note that Amazon CloudWatch cannot aggregate data across AWS Regions. Metrics are completely separate between Regions.\nThis example shows you how to retrieve the total bytes written to disk for one Auto Scaling group. The total is computed for 1-minute periods for a 24-hour interval across all EC2 instances in the specified Auto Scaling group.\nTo display DiskWriteBytes for the instances in an Auto Scaling group (console)\nOpen the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.\nIn the navigation pane, choose Metrics.\nChoose the EC2 namespace and then choose By Auto Scaling Group.\nChoose the row for the DiskWriteBytes metric and the specific Auto Scaling group, which displays a graph for the metric for the instances in the Auto Scaling group. To name the graph, choose the pencil icon. To change the time range, select one of the predefined values or choose custom.\nTo change the statistic or the period for the metric, choose the Graphed metrics tab. Choose the column heading or an individual value, and then choose a different value.\nTo display DiskWriteBytes for the instances in an Auto Scaling group (AWS CLI)\nUse the get-metric-statistics command as follows.\naws cloudwatch get-metric-statistics --namespace AWS/EC2 --metric-name DiskWriteBytes --period 360 \\\n--statistics \"Sum\" \"SampleCount\" --dimensions Name=AutoScalingGroupName,Value=my-asg --start-time 2022-10-16T23:18:00 --end-time 2022-10-18T23:18:00\nThe following is example output:\n{\n    \"Datapoints\": [\n        {\n            \"SampleCount\": 18.0, \n            \"Timestamp\": \"2022-10-19T21:36:00Z\", \n            \"Sum\": 0.0, \n            \"Unit\": \"Bytes\"\n        }, \n        {\n            \"SampleCount\": 5.0, \n            \"Timestamp\": \"2022-10-19T21:42:00Z\", \n            \"Sum\": 0.0, \n            \"Unit\": \"Bytes\"\n        }\n    ], \n    \"Label\": \"DiskWriteBytes\"\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/US_SingleMetricPerAMI.html",
        "content": "You can aggregate statistics by AMI for your instances that have detailed monitoring enabled. Instances that use basic monitoring are not included in the aggregates. Before you can get statistics aggregated across instances, you must enable detailed monitoring (at an additional charge), which provides data in 1-minute periods.\nNote that Amazon CloudWatch cannot aggregate data across AWS Regions. Metrics are completely separate between Regions.\nThis example shows you how to determine average CPU utilization for all instances that use a specific Amazon Machine Image (AMI). The average is over 60-second time intervals for a one-day period.\nTo display the average CPU utilization by AMI (console)\nOpen the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.\nIn the navigation pane, choose Metrics.\nChoose the EC2 namespace and then choose By Image (AMI) Id.\nChoose the row for the CPUUtilization metric and the specific AMI, which displays a graph for the metric for the specified AMI. To name the graph, choose the pencil icon. To change the time range, select one of the predefined values or choose custom.\nTo change the statistic or the period for the metric, choose the Graphed metrics tab. Choose the column heading or an individual value, and then choose a different value.\nTo get the average CPU utilization for an image ID (AWS CLI)\nUse the get-metric-statistics command as follows.\naws cloudwatch get-metric-statistics --namespace AWS/EC2 --metric-name CPUUtilization  --period 3600 \\\n--statistics Average --dimensions Name=ImageId,Value=ami-3c47a355 --start-time 2022-10-10T00:00:00 --end-time 2022-10-11T00:00:00\nThe following is example output. Each value represents an average CPU utilization percentage for the EC2 instances running the specified AMI.\n{\n    \"Datapoints\": [\n        {\n            \"Timestamp\": \"2022-10-10T07:00:00Z\", \n            \"Average\": 0.041000000000000009, \n            \"Unit\": \"Percent\"\n        }, \n        {\n            \"Timestamp\": \"2022-10-10T14:00:00Z\", \n            \"Average\": 0.079579831932773085, \n            \"Unit\": \"Percent\"\n        }, \n        {\n            \"Timestamp\": \"2022-10-10T06:00:00Z\", \n            \"Average\": 0.036000000000000011, \n            \"Unit\": \"Percent\"\n        }, \n        ...\n    ], \n    \"Label\": \"CPUUtilization\"\n}"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/graphs-in-the-aws-management-console.html",
        "content": "After you launch an instance, you can open the Amazon EC2 console and view the monitoring graphs for the instance on the Monitoring tab. Each graph is based on one of the available Amazon EC2 metrics.\nThe following graphs are available:\nAverage CPU Utilization (Percent)\nAverage Disk Reads (Bytes)\nAverage Disk Writes (Bytes)\nMaximum Network In (Bytes)\nMaximum Network Out (Bytes)\nSummary Disk Read Operations (Count)\nSummary Disk Write Operations (Count)\nSummary Status (Any)\nSummary Status Instance (Count)\nSummary Status System (Count)\nFor more information about the metrics and the data they provide to the graphs, see CloudWatch metrics that are available for your instances.\nGraph metrics using the CloudWatch console\nYou can also use the CloudWatch console to graph metric data generated by Amazon EC2 and other AWS services. For more information, see Graphing metrics in the Amazon CloudWatch User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch-createalarm.html",
        "content": "You can create a CloudWatch alarm that monitors CloudWatch metrics for one of your instances. CloudWatch will automatically send you a notification when the metric reaches a threshold you specify. You can create a CloudWatch alarm using the Amazon EC2 console, or using the more advanced options provided by the CloudWatch console.\nTo create an alarm using the CloudWatch console\nFor examples, see Creating Amazon CloudWatch Alarms in the Amazon CloudWatch User Guide.\nTo create an alarm using the Amazon EC2 console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance and choose Actions, Monitor and troubleshoot, Manage CloudWatch alarms.\nOn the Manage CloudWatch alarms detail page, under Add or edit alarm, select Create an alarm.\nFor Alarm notification, choose whether to configure Amazon Simple Notification Service (Amazon SNS) notifications. Enter an existing Amazon SNS topic or enter a name to create a new topic.\nFor Alarm action, choose whether to specify an action to take when the alarm is triggered. Choose an action from the list.\nFor Alarm thresholds, select the metric and criteria for the alarm. For example, to create an alarm that is triggered when CPU utilization reaches 80% for a 5 minute period, do the following:\nKeep the default setting for Group samples by (Average) and Type of data to sample (CPU utilization).\nChoose >= for Alarm when and enter 0.80 for Percent.\nEnter 1 for Consecutive period and select 5 minutes for Period.\n(Optional) For Sample metric data, choose Add to dashboard.\nChoose Create.\nYou can edit your CloudWatch alarm settings from the Amazon EC2 console or the CloudWatch console. If you want to delete your alarm, you can do so from the CloudWatch console. For more information, see Edit or delete a CloudWatch alarm in the Amazon CloudWatch User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UsingAlarmActions.html",
        "content": "Using Amazon CloudWatch alarm actions, you can create alarms that automatically stop, terminate, reboot, or recover your instances. You can use the stop or terminate actions to help you save money when you no longer need an instance to be running. You can use the reboot and recover actions to automatically reboot those instances or recover them onto new hardware if a system impairment occurs.\nNote\nFor Amazon CloudWatch alarms billing and pricing information, see CloudWatch billing and cost in the Amazon CloudWatch User Guide.\nThe AWSServiceRoleForCloudWatchEvents service-linked role enables AWS to perform alarm actions on your behalf. The first time you create an alarm in the AWS Management Console, the AWS CLI, or the IAM API, CloudWatch creates the service-linked role for you.\nThere are a number of scenarios in which you might want to automatically stop or terminate your instance. For example, you might have instances dedicated to batch payroll processing jobs or scientific computing tasks that run for a period of time and then complete their work. Rather than letting those instances sit idle (and accrue charges), you can stop or terminate them, which can help you to save money. The main difference between using the stop and the terminate alarm actions is that you can easily start a stopped instance if you need to run it again later, and you can keep the same instance ID and root volume. However, you cannot start a terminated instance. Instead, you must launch a new instance. When an instance is stopped or terminated, data on instance store volumes is lost.\nYou can add the stop, terminate, reboot, or recover actions to any alarm that is set on an Amazon EC2 per-instance metric, including basic and detailed monitoring metrics provided by Amazon CloudWatch (in the AWS/EC2 namespace), as well as any custom metrics that include the InstanceId dimension, as long as its value refers to a valid running Amazon EC2 instance.\nImportant\nStatus check alarms can temporarily enter the INSUFFICIENT_DATA state if there are missing metric data points. Although rare, this can happen when there is an interruption in the metric reporting systems, even when an instance is healthy. We recommend that you treat the INSUFFICIENT_DATA state as missing data instead of an alarm breach, especially when configuring the alarm to stop, terminate, reboot, or recover an instance.\nConsole support\nYou can create alarms using the Amazon EC2 console or the CloudWatch console. The procedures in this documentation use the Amazon EC2 console. For procedures that use the CloudWatch console, see Create alarms that stop, terminate, reboot, or recover an instance in the Amazon CloudWatch User Guide.\nPermissions\nYou must have the iam:CreateServiceLinkedRole to create or modify an alarm that performs EC2 alarm actions. A service role is an IAM role that a service assumes to perform actions on your behalf. An IAM administrator can create, modify, and delete a service role from within IAM. For more information, see Create a role to delegate permissions to an AWS service in the IAM User Guide.\nContents\nAdd stop actions to Amazon CloudWatch alarms\nAdd terminate actions to Amazon CloudWatch alarms\nAdd reboot actions to Amazon CloudWatch alarms\nAdd recover actions to Amazon CloudWatch alarms\nAmazon CloudWatch alarm action scenarios\nAdd stop actions to Amazon CloudWatch alarms\nYou can create an alarm that stops an Amazon EC2 instance when a certain threshold has been met. For example, you may run development or test instances and occasionally forget to shut them off. You can create an alarm that is triggered when the average CPU utilization percentage has been lower than 10 percent for 24 hours, signaling that it is idle and no longer in use. You can adjust the threshold, duration, and period to suit your needs, plus you can add an Amazon Simple Notification Service (Amazon SNS) notification so that you receive an email when the alarm is triggered.\nInstances that use an Amazon EBS volume as the root device can be stopped or terminated, whereas instances that use the instance store as the root device can only be terminated. Data on instance store volumes is lost when the instance is terminated or stopped.\nTo create an alarm to stop an idle instance (Amazon EC2 console)\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance and choose Actions, Monitor and troubleshoot, Manage CloudWatch alarms.\nAlternatively, you can choose the plus sign ( ) in the Alarm status column.\nOn the Manage CloudWatch alarms page, do the following:\nChoose Create an alarm.\nTo receive an email when the alarm is triggered, for Alarm notification, choose an existing Amazon SNS topic. You first need to create an Amazon SNS topic using the Amazon SNS console. For more information, see Using Amazon SNS for application-to-person (A2P) messaging in the Amazon Simple Notification Service Developer Guide.\nToggle on Alarm action, and choose Stop.\nFor Group samples by and Type of data to sample, choose a statistic and a metric. In this example, choose Average and CPU utilization.\nFor Alarm When and Percent, specify the metric threshold. In this example, specify <= and 10 percent.\nFor Consecutive period and Period, specify the evaluation period for the alarm. In this example, specify 1 consecutive period of 5 Minutes.\nAmazon CloudWatch automatically creates an alarm name for you. To change the name, for Alarm name, enter a new name. Alarm names must contain only ASCII characters.\nNote\nYou can adjust the alarm configuration based on your own requirements before creating the alarm, or you can edit them later. This includes the metric, threshold, duration, action, and notification settings. However, after you create an alarm, you cannot edit its name later.\nChoose Create.\nAdd terminate actions to Amazon CloudWatch alarms\nYou can create an alarm that terminates an EC2 instance automatically when a certain threshold has been met (as long as termination protection is not enabled for the instance). For example, you might want to terminate an instance when it has completed its work, and you don\u2019t need the instance again. If you might want to use the instance later, you should stop the instance instead of terminating it. Data on instance store volumes is lost when the instance is terminated. For information about enabling and disabling termination protection for an instance, see Enable termination protection.\nTo create an alarm to terminate an idle instance (Amazon EC2 console)\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance and choose Actions, Monitor and troubleshoot, Manage CloudWatch alarms.\nAlternatively, you can choose the plus sign ( ) in the Alarm status column.\nOn the Manage CloudWatch alarms page, do the following:\nChoose Create an alarm.\nTo receive an email when the alarm is triggered, for Alarm notification, choose an existing Amazon SNS topic. You first need to create an Amazon SNS topic using the Amazon SNS console. For more information, see Using Amazon SNS for application-to-person (A2P) messaging in the Amazon Simple Notification Service Developer Guide.\nToggle on Alarm action, and choose Terminate.\nFor Group samples by and Type of data to sample, choose a statistic and a metric. In this example, choose Average and CPU utilization.\nFor Alarm When and Percent, specify the metric threshold. In this example, specify => and 10 percent.\nFor Consecutive period and Period, specify the evaluation period for the alarm. In this example, specify 24 consecutive periods of 1 Hour.\nAmazon CloudWatch automatically creates an alarm name for you. To change the name, for Alarm name, enter a new name. Alarm names must contain only ASCII characters.\nNote\nYou can adjust the alarm configuration based on your own requirements before creating the alarm, or you can edit them later. This includes the metric, threshold, duration, action, and notification settings. However, after you create an alarm, you cannot edit its name later.\nChoose Create.\nAdd reboot actions to Amazon CloudWatch alarms\nYou can create an Amazon CloudWatch alarm that monitors an Amazon EC2 instance and automatically reboots the instance. The reboot alarm action is recommended for Instance Health Check failures (as opposed to the recover alarm action, which is suited for System Health Check failures). An instance reboot is equivalent to an operating system reboot. In most cases, it takes only a few minutes to reboot your instance. When you reboot an instance, it remains on the same physical host, so your instance keeps its public DNS name, private IP address, and any data on its instance store volumes.\nRebooting an instance doesn't start a new instance billing period (with a minimum one-minute charge), unlike stopping and restarting your instance. Data on instance store volumes is retained when the instance is rebooted. The instance store volumes must be re-mounted into the filesystem after a reboot. For more information, see Reboot your instance.\nImportant\nTo avoid a race condition between the reboot and recover actions, avoid setting the same number of evaluation periods for a reboot alarm and a recover alarm. We recommend that you set reboot alarms to three evaluation periods of one minute each. For more information, see Evaluating an alarm in the Amazon CloudWatch User Guide.\nTo create an alarm to reboot an instance (Amazon EC2 console)\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance and choose Actions, Monitor and troubleshoot, Manage CloudWatch alarms.\nAlternatively, you can choose the plus sign ( ) in the Alarm status column.\nOn the Manage CloudWatch alarms page, do the following:\nChoose Create an alarm.\nTo receive an email when the alarm is triggered, for Alarm notification, choose an existing Amazon SNS topic. You first need to create an Amazon SNS topic using the Amazon SNS console. For more information, see Using Amazon SNS for application-to-person (A2P) messaging in the Amazon Simple Notification Service Developer Guide.\nToggle on Alarm action, and choose Reboot.\nFor Group samples by and Type of data to sample, choose a statistic and a metric. In this example, choose Average and Status check failed: instance.\nFor Consecutive period and Period, specify the evaluation period for the alarm. In this example, enter 3 consecutive periods of 1 Minute. If 1 Minute is disabled, you must enable detailed monitoring, or you can choose 5 Minutes instead.\nAmazon CloudWatch automatically creates an alarm name for you. To change the name, for Alarm name, enter a new name. Alarm names must contain only ASCII characters.\nChoose Create.\nAdd recover actions to Amazon CloudWatch alarms\nYou can create an Amazon CloudWatch alarm that monitors an Amazon EC2 instance. If the instance becomes impaired due to an underlying hardware failure or a problem that requires AWS involvement to repair, you can automatically recover the instance. Terminated instances cannot be recovered. A recovered instance is identical to the original instance, including the instance ID, private IP addresses, Elastic IP addresses, and all instance metadata.\nCloudWatch prevents you from adding a recovery action to an alarm that is on an instance which does not support recovery actions.\nWhen the StatusCheckFailed_System alarm is triggered, and the recover action is initiated, you are notified by the Amazon SNS topic that you chose when you created the alarm and associated the recover action. During instance recovery, the instance is migrated during an instance reboot, and any data that is in-memory is lost. When the process is complete, information is published to the SNS topic you've configured for the alarm. Anyone who is subscribed to this SNS topic receives an email notification that includes the status of the recovery attempt and any further instructions. You notice an instance reboot on the recovered instance.\nNote\nThe recover action can be used only with StatusCheckFailed_System, not with StatusCheckFailed_Instance.\nThe following problems can cause system status checks to fail:\nLoss of network connectivity\nLoss of system power\nSoftware issues on the physical host\nHardware issues on the physical host that impact network reachability\nThe recover action is supported only on instances that meet certain characteristics. For more information, see Automatic instance recovery.\nIf your instance has a public IP address, it retains the public IP address after recovery.\nImportant\nTo avoid a race condition between the reboot and recover actions, avoid setting the same number of evaluation periods for a reboot alarm and a recover alarm. We recommend that you set recover alarms to two evaluation periods of one minute each. For more information, see Evaluating an alarm in the Amazon CloudWatch User Guide.\nTo create an alarm to recover an instance (Amazon EC2 console)\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance and choose Actions, Monitor and troubleshoot, Manage CloudWatch alarms.\nAlternatively, you can choose the plus sign ( ) in the Alarm status column.\nOn the Manage CloudWatch alarms page, do the following:\nChoose Create an alarm.\nTo receive an email when the alarm is triggered, for Alarm notification, choose an existing Amazon SNS topic. You first need to create an Amazon SNS topic using the Amazon SNS console. For more information, see Using Amazon SNS for application-to-person (A2P) messaging in the Amazon Simple Notification Service Developer Guide.\nNote\nUsers must subscribe to the specified SNS topic to receive email notifications when the alarm is triggered. The AWS account root user always receives email notifications when automatic instance recovery actions occur, even if an SNS topic is not specified or the root user is not subscribed to the specified SNS topic.\nToggle on Alarm action, and choose Recover.\nFor Group samples by and Type of data to sample, choose a statistic and a metric. In this example, choose Average and Status check failed: system.\nFor Consecutive period and Period, specify the evaluation period for the alarm. In this example, enter 2 consecutive periods of 1 Minute. If 1 Minute is disabled, you must enable detailed monitoring, or you can choose 5 Minutes instead.\nAmazon CloudWatch automatically creates an alarm name for you. To change the name, for Alarm name, enter a new name. Alarm names must contain only ASCII characters.\nChoose Create."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AlarmActionScenarios.html",
        "content": "You can use the Amazon EC2 console to create alarm actions that stop or terminate an Amazon EC2 instance when certain conditions are met. In the following screen capture of the console page where you set the alarm actions, we've numbered the settings. We've also numbered the settings in the scenarios that follow, to help you create the appropriate actions.\nScenario 1: Stop idle development and test instances\nCreate an alarm that stops an instance used for software development or testing when it has been idle for at least an hour.\nSetting Value\n1\nStop\n2\nMaximum\n3\nCPU Utilization\n4\n<=\n5\n10%\n6\n1\n7\n1 Hour\nScenario 2: Stop idle instances\nCreate an alarm that stops an instance and sends an email when the instance has been idle for 24 hours.\nSetting Value\n1\nStop and email\n2\nAverage\n3\nCPU Utilization\n4\n<=\n5\n5%\n6\n24\n7\n1 Hour\nScenario 3: Send email about web servers with unusually high traffic\nCreate an alarm that sends email when an instance exceeds 10 GB of outbound network traffic per day.\nSetting Value\n1\nEmail\n2\nSum\n3\nNetwork Out\n4\n>\n5\n10 GB\n6\n24\n7\n1 Hour\nScenario 4: Stop web servers with unusually high traffic\nCreate an alarm that stops an instance and send a text message (SMS) if outbound traffic exceeds 1 GB per hour.\nSetting Value\n1\nStop and send SMS\n2\nSum\n3\nNetwork Out\n4\n>\n5\n1 GB\n6\n1\n7\n1 Hour\nScenario 5: Stop an impaired instance\nCreate an alarm that stops an instance that fails three consecutive status checks (performed at 5-minute intervals).\nSetting Value\n1\nStop\n2\nAverage\n3\nStatus Check Failed: System\n4\n-\n5\n-\n6\n1\n7\n15 Minutes\nScenario 6: Terminate instances when batch processing jobs are complete\nCreate an alarm that terminates an instance that runs batch jobs when it is no longer sending results data.\nSetting Value\n1\nTerminate\n2\nMaximum\n3\nNetwork Out\n4\n<=\n5\n100,000 bytes\n6\n1\n7\n5 Minutes"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/automating_with_eventbridge.html",
        "content": "You can use Amazon EventBridge to automate your AWS services and respond automatically to system events, such as application availability issues or resource changes. Events from AWS services are delivered to EventBridge in near real time. You can create rules to indicate which events you're interested in, and the actions to take when an event matches a rule. The actions that can be automatically triggered include the following:\nInvoke an AWS Lambda function\nInvoke Amazon EC2 Run Command\nRelay the event to Amazon Kinesis Data Streams\nActivate an AWS Step Functions state machine\nNotify an Amazon SNS topic\nNotify an Amazon SQS queue\nThe following are examples of how you can use EventBridge with Amazon EC2:\nActivate a Lambda function whenever an instance enters the running state.\nNotify an Amazon SNS topic when an Amazon EBS volume is created or modified.\nSend a command to one or more Amazon EC2 instances using Amazon EC2 Run Command whenever a certain event in another AWS service occurs.\nFor more information, see the Amazon EventBridge User Guide.\nAmazon EC2 event types\nAmazon EC2 supports the following event types:\nEC2 AMI State Change\nEC2 Fast Launch State-change Notification\nEC2 Fleet Error\nEC2 Fleet Information\nEC2 Fleet Instance Change\nEC2 Fleet Spot Instance Request Change\nEC2 Fleet State Change\nEC2 Instance Rebalance Recommendation\nEC2 Instance State-change Notification\nEC2 Spot Fleet Error\nEC2 Spot Fleet Information\nEC2 Spot Fleet Instance Change\nEC2 Spot Fleet Spot Instance Request Change\nEC2 Spot Fleet State Change\nEC2 Spot Instance Interruption Warning\nEC2 Spot Instance Request Fulfillment\nEC2 ODCR Underutilization Notification\nFor information about the event types supported by Amazon EBS, see Amazon EventBridge for Amazon EBS."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitor-with-cloudtrail.html",
        "content": "The Amazon EC2 API is integrated with AWS CloudTrail, a service that provides a record of actions taken by a user, role, or an AWS service. CloudTrail captures all Amazon EC2 API calls as events. The calls captured include calls made by the console. Using the information collected by CloudTrail, you can determine the request that was made to the Amazon EC2 API, the IP address from which the request was made, and when it was made.\nEvery event or log entry contains information about who generated the request. The identity information helps you determine the following:\nWhether the request was made with root user or user credentials.\nWhether the request was made on behalf of an IAM Identity Center user.\nWhether the request was made with temporary security credentials for a role or federated user.\nWhether the request was made by another AWS service.\nCloudTrail is active in your AWS account when you create the account and you automatically have access to the CloudTrail Event history. The CloudTrail Event history provides a viewable, searchable, downloadable, and immutable record of the past 90 days of recorded management events in an AWS Region. For more information, see Working with CloudTrail Event history in the AWS CloudTrail User Guide. There are no CloudTrail charges for viewing the Event history.\nFor an ongoing record of events in your AWS account past 90 days, create a trail or a CloudTrail Lake event data store.\nCloudTrail trails\nA trail enables CloudTrail to deliver log files to an Amazon S3 bucket. All trails created using the AWS Management Console are multi-Region. You can create a single-Region or a multi-Region trail by using the AWS CLI. Creating a multi-Region trail is recommended because you capture activity in all AWS Regions in your account. If you create a single-Region trail, you can view only the events logged in the trail's AWS Region. For more information about trails, see Creating a trail for your AWS account and Creating a trail for an organization in the AWS CloudTrail User Guide.\nYou can deliver one copy of your ongoing management events to your Amazon S3 bucket at no charge from CloudTrail by creating a trail, however, there are Amazon S3 storage charges. For more information about CloudTrail pricing, see AWS CloudTrail Pricing. For information about Amazon S3 pricing, see Amazon S3 Pricing.\nCloudTrail Lake event data stores\nCloudTrail Lake lets you run SQL-based queries on your events. CloudTrail Lake converts existing events in row-based JSON format to Apache ORC format. ORC is a columnar storage format that is optimized for fast retrieval of data. Events are aggregated into event data stores, which are immutable collections of events based on criteria that you select by applying advanced event selectors. The selectors that you apply to an event data store control which events persist and are available for you to query. For more information about CloudTrail Lake, see Working with AWS CloudTrail Lake in the AWS CloudTrail User Guide.\nCloudTrail Lake event data stores and queries incur costs. When you create an event data store, you choose the pricing option you want to use for the event data store. The pricing option determines the cost for ingesting and storing events, and the default and maximum retention period for the event data store. For more information about CloudTrail pricing, see AWS CloudTrail Pricing.\nAmazon EC2 API management events in CloudTrail\nManagement events provide information about management operations that are performed on resources in your AWS account. These are also known as control plane operations. By default, CloudTrail logs management events.\nAll Amazon EC2 API actions are logged as management events. For a list of the API actions that are logged to CloudTrail, see the Amazon EC2 API Reference. For example, calls to the RunInstances, DescribeInstances, and StopInstances actions are logged as management events.\nAmazon EC2 API event examples\nAn event represents a single request from any source and includes information about the requested API operation, the date and time of the operation, request parameters, and so on. CloudTrail log files aren't an ordered stack trace of the public API calls, so events don't appear in any specific order.\nThe following log file record shows that a user terminated an instance.\n{\n   \"Records\":[\n      {\n         \"eventVersion\":\"1.03\",\n         \"userIdentity\":{\n            \"type\":\"Root\",\n            \"principalId\":\"123456789012\",\n            \"arn\":\"arn:aws:iam::123456789012:root\",\n            \"accountId\":\"123456789012\",\n            \"accessKeyId\":\"AKIAIOSFODNN7EXAMPLE\",\n            \"userName\":\"user\"\n         },\n         \"eventTime\":\"2016-05-20T08:27:45Z\",\n         \"eventSource\":\"ec2.amazonaws.com\",\n         \"eventName\":\"TerminateInstances\",\n         \"awsRegion\":\"us-west-2\",\n         \"sourceIPAddress\":\"198.51.100.1\",\n         \"userAgent\":\"aws-cli/1.10.10 Python/2.7.9 Windows/7botocore/1.4.1\",\n         \"requestParameters\":{\n            \"instancesSet\":{\n               \"items\":[{\n                  \"instanceId\":\"i-1a2b3c4d\"\n               }]\n            }\n         },\n         \"responseElements\":{\n            \"instancesSet\":{\n               \"items\":[{\n                  \"instanceId\":\"i-1a2b3c4d\",\n                  \"currentState\":{\n                     \"code\":32,\n                     \"name\":\"shutting-down\"\n                  },\n                  \"previousState\":{\n                     \"code\":16,\n                     \"name\":\"running\"\n                  }\n               }]\n            }\n         },\n         \"requestID\":\"be112233-1ba5-4ae0-8e2b-1c302EXAMPLE\",\n         \"eventID\":\"6e12345-2a4e-417c-aa78-7594fEXAMPLE\",\n         \"eventType\":\"AwsApiCall\",\n         \"recipientAccountId\":\"123456789012\"\n     }\n   ]\n}\nFor information about CloudTrail record contents, see CloudTrail record contents in the AWS CloudTrail User Guide.\nAudit connections made using EC2 Instance Connect\nYou can use AWS CloudTrail to audit the users that connect to your instances using EC2 Instance Connect.\nTo audit SSH activity via EC2 Instance Connect using the AWS CloudTrail console\nOpen the CloudTrail console at https://console.aws.amazon.com/cloudtrail/.\nVerify that you are in the correct Region.\nIn the navigation pane, choose Event history.\nFor Filter, choose Event source, ec2-instance-connect.amazonaws.com.\n(Optional) For Time range, select a time range.\nChoose the Refresh events icon.\nThe page displays the events that correspond to the SendSSHPublicKey API calls. Expand an event using the arrow to view additional details, such as the user name and AWS access key that was used to make the SSH connection, and the source IP address.\nTo display the full event information in JSON format, choose View event. The requestParameters field contains the destination instance ID, OS username, and public key that were used to make the SSH connection.\n{\n    \"eventVersion\": \"1.05\",\n    \"userIdentity\": {\n        \"type\": \"IAMUser\",\n        \"principalId\": \"ABCDEFGONGNOMOOCB6XYTQEXAMPLE\",\n        \"arn\": \"arn:aws:iam::1234567890120:user/IAM-friendly-name\",\n        \"accountId\": \"123456789012\",\n        \"accessKeyId\": \"ABCDEFGUKZHNAW4OSN2AEXAMPLE\",\n        \"userName\": \"IAM-friendly-name\",\n        \"sessionContext\": {\n            \"attributes\": {\n                \"mfaAuthenticated\": \"false\",\n                \"creationDate\": \"2018-09-21T21:37:58Z\"}\n        }\n    },\n    \"eventTime\": \"2018-09-21T21:38:00Z\",\n    \"eventSource\": \"ec2-instance-connect.amazonaws.com\",\n    \"eventName\": \"SendSSHPublicKey \",\n    \"awsRegion\": \"us-west-2\",\n    \"sourceIPAddress\": \"123.456.789.012\",\n    \"userAgent\": \"aws-cli/1.15.61 Python/2.7.10 Darwin/16.7.0 botocore/1.10.60\",\n    \"requestParameters\": {\n        \"instanceId\": \"i-0123456789EXAMPLE\",\n        \"osUser\": \"ec2-user\",\n        \"SSHKey\": {\n            \"publicKey\": \"ssh-rsa ABCDEFGHIJKLMNO01234567890EXAMPLE\"\n        }\n     },\n    \"responseElements\": null,\n    \"requestID\": \"1a2s3d4f-bde6-11e8-a892-f7ec64543add\",\n    \"eventID\": \"1a2w3d4r5-a88f-4e28-b3bf-30161f75be34\",\n    \"eventType\": \"AwsApiCall\",\n    \"recipientAccountId\": \"0987654321\"\n}\nIf you have configured your AWS account to collect CloudTrail events in an S3 bucket, you can download and audit the information programmatically. For more information, see Getting and viewing your CloudTrail log files in the AWS CloudTrail User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-appinsights.html",
        "content": "CloudWatch Application Insights helps you monitor your .NET and SQL Server applications that use Amazon EC2 instances along with other AWS application resources. It identifies and sets up key metrics logs and alarms across your application resources and technology stack (for example, your Microsoft SQL Server database, web (IIS) and application servers, OS, load balancers, and queues). It continuously monitors the metrics and logs to detect and correlate anomalies and errors. When errors and anomalies are detected, Application Insights generates events that you can use to set up notifications or take actions. To aid with troubleshooting, it creates automated dashboards for the detected problems, which include correlated metric anomalies and log errors, along with additional insights to point you to the potential root cause. The automated dashboards help you to take swift remedial actions to keep your applications healthy and to prevent impact to the end users of your application.\nInformation provided about detected problems:\nA short summary of the problem\nThe start time and date of the problem\nThe problem severity: High/Medium/Low\nThe status of the detected problem: In\u2010progress/Resolved\nInsights: Automatically generated insights on the detected problem and possible root cause\nFeedback on insights: Feedback you have provided about the usefulness of the insights generated by CloudWatch Application Insights for .NET and SQL Server\nRelated observations: A detailed view of the metric anomalies and error snippets of relevant logs related to the problem across various application components\nFeedback\nYou can provide feedback on automatically generated insights on detected problems by designating them useful or not useful. Your feedback on the insights, along with your application diagnostics (metric anomalies and log exceptions), are used to improve the future detection of similar problems.\nFor more information, see the CloudWatch Application Insights documentation in the Amazon CloudWatch User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-free-tier-usage.html",
        "content": "You can use Amazon EC2 without incurring charges if you've been an AWS customer for less than 12 months and you stay within the AWS Free Tier usage limits. It's important to track your Free Tier usage to avoid billing surprises. If you exceed the Free Tier limits, you'll incur standard pay-as-go charges. For more information, see AWS Free Tier.\nNote\nIf you've been an AWS customer for more than 12 months, you're no longer eligible for Free Tier usage and you won't see the EC2 Free Tier box that is described in the following procedure.\nTo track your Free Tier usage\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose EC2 Dashboard.\nFind the EC2 Free Tier box (at top right).\nIn the EC2 Free Tier box, check your Free Tier usage, as follows:\nUnder EC2 Free Tier offers in use, take note of the warnings:\nEnd of month forecast \u2013 This warns that you will incur charges this month if you continue with your current usage pattern.\nExceeds Free Tier \u2013 This warns that you've exceeded your Free Tier limits and you're already incurring charges.\nUnder Offer usage (monthly), take note of your usage of Linux instances, Windows instances, and EBS storage. The percentage indicates how much of your Free Tier limits you've used this month. If you're at 100%, you will incur charges for further use.\nNote\nThis information appears only after you've created an instance. However, usage information is not updated in real time; it's updated three times a day.\nTo avoid incurring further charges, delete any resources that are either incurring charges now, or will incur charges if you exceed your Free Tier limit usage.\nFor the instructions to delete your instance, see Terminate Amazon EC2 instances.\nTo check if you have resources in other Regions that might be incurring charges, in the EC2 Free Tier box, choose View Global EC2 resources to open the EC2 Global View. For more information, see View resources across Regions using Amazon EC2 Global View.\nTo view your resource usage for all AWS services under the AWS Free Tier, at the bottom of the EC2 Free Tier box, choose View all AWS Free Tier offers. For more information, see Trying services using AWS Free Tier in the AWS Billing User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-troubleshoot.html",
        "content": "The following procedures and tips can help you troubleshoot issues with your Amazon EC2 instances.\nIssues\nInstance launch issues\nInstance stop issues\nInstance termination issues\nUnreachable instances\nLinux instance SSH issues\nLinux instance failed status checks\nLinux instance boots from wrong volume\nWindows instance RDP issues\nWindows instance start issues\nWindows instance issues\nReset Windows administrator password\nTroubleshoot Sysprep issues\nEC2Rescue for Linux instances\nEC2Rescue for Windows instances\nEC2 Serial Console\nSend diagnostic interrupts"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/troubleshooting-launch.html",
        "content": "The following are troubleshooting tips to help you solve issues when launching an Amazon EC2 instance.\nLaunch Issues\nInvalid device name\nInstance limit exceeded\nInsufficient instance capacity\nThe requested configuration is currently not supported. Please check the documentation for supported configurations.\nInstance terminates immediately\nInsufficient permissions\nHigh CPU usage shortly after Windows starts (Windows instances only)\nInvalid device name\nDescription\nYou get the Invalid device name device_name error when you try to launch a new instance.\nCause\nIf you get this error when you try to launch an instance, the device name specified for one or more volumes in the request has an invalid device name. Possible causes include:\nThe device name might be in use by the selected AMI.\nThe device name might be reserved for root volumes.\nThe device name might be used for another volume in the request.\nThe device name might not be valid for the operating system.\nSolution\nTo resolve the issue:\nEnsure that the device name is not used in the AMI that you selected. Run the following command to view the device names used by the AMI.\naws ec2 describe-images --image-id ami_id --query 'Images[*].BlockDeviceMappings[].DeviceName'\nEnsure that you are not using a device name that is reserved for root volumes. For more information, see Available device names.\nEnsure that each volume specified in your request has a unique device name.\nEnsure that the device names that you specified are in the correct format. For more information, see Available device names.\nInstance limit exceeded\nDescription\nYou get the InstanceLimitExceeded error when you try to launch a new instance or restart a stopped instance.\nCause\nIf you get an InstanceLimitExceeded error when you try to launch a new instance or restart a stopped instance, you have reached the limit on the number of instances that you can launch in a Region. When you create your AWS account, we set default limits on the number of instances you can run on a per-Region basis.\nSolution\nYou can request an instance limit increase on a per-region basis. For more information, see Amazon EC2 service quotas.\nInsufficient instance capacity\nDescription\nYou get the InsufficientInstanceCapacity error when you try to launch a new instance or restart a stopped instance.\nCause\nIf you get this error when you try to launch an instance or restart a stopped instance, AWS does not currently have enough available On-Demand capacity to fulfill your request.\nSolution\nTo resolve the issue, try the following:\nWait a few minutes and then submit your request again; capacity can shift frequently.\nSubmit a new request with a reduced number of instances. For example, if you're making a single request to launch 15 instances, try making 3 requests for 5 instances, or 15 requests for 1 instance instead.\nIf you're launching an instance, submit a new request without specifying an Availability Zone.\nIf you're launching an instance, submit a new request using a different instance type (which you can resize at a later stage). For more information, see Amazon EC2 instance type changes.\nIf you are launching instances into a cluster placement group, you can get an insufficient capacity error.\nThe requested configuration is currently not supported. Please check the documentation for supported configurations.\nDescription\nYou get the Unsupported error when you try to launch a new instance because the instance configuration is not supported.\nCause\nThe error message provides additional details. For example, an instance type or instance purchasing option might not be supported in the specified Region or Availability Zone.\nSolution\nTry a different instance configuration. To search for an instance type that meets your requirements, see Find an Amazon EC2 instance type.\nInstance terminates immediately\nDescription\nYour instance goes from the pending state to the terminated state.\nCause\nThe following are a few reasons why an instance might immediately terminate:\nYou've exceeded your EBS volume limits. For more information, see Amazon EBS volume limits for Amazon EC2 instances.\nAn EBS snapshot is corrupted.\nThe root EBS volume is encrypted and you do not have permissions to access the KMS key for decryption.\nA snapshot specified in the block device mapping for the AMI is encrypted and you do not have permissions to access the KMS key for decryption or you do not have access to the KMS key to encrypt the restored volumes.\nThe instance store-backed AMI that you used to launch the instance is missing a required part (an image.part.xx file).\nFor more information, get the termination reason using one of the following methods.\nTo get the termination reason using the Amazon EC2 console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances, and select the instance.\nOn the first tab, find the reason next to State transition reason.\nTo get the termination reason using the AWS CLI\nUse the describe-instances command and specify the instance ID.\naws ec2 describe-instances --instance-id instance_id\nReview the JSON response returned by the command and note the values in the StateReason response element.\nThe following code block shows an example of a StateReason response element.\n\"StateReason\": {\n  \"Message\": \"Client.VolumeLimitExceeded: Volume limit exceeded\", \n  \"Code\": \"Server.InternalError\"\n},\nTo get the termination reason using AWS CloudTrail\nFor more information, see Viewing events with CloudTrail event history in the AWS CloudTrail User Guide.\nSolution\nDepending on the termination reason, take one of the following actions:\nClient.VolumeLimitExceeded: Volume limit exceeded \u2014 Delete unused volumes. You can submit a request to increase your volume limit.\nClient.InternalError: Client error on launch \u2014 Ensure that you have the permissions required to access the AWS KMS keys used to decrypt and encrypt volumes. For more information, see Using key policies in AWS KMS in the AWS Key Management Service Developer Guide.\nInsufficient permissions\nDescription\nYou get the \"errorMessage\": \"You are not authorized to perform this operation.\" error when you try to launch a new instance, and the launch fails.\nCause\nIf you get this error when you try to launch an instance, you don't have the required IAM permissions to launch the instance.\nPossible missing permissions include:\nec2:RunInstances\niam:PassRole\nOther permissions might also be missing. For the list of permissions required to launch an instance, see the example IAM policies under Example: Use the EC2 launch instance wizard and Launch instances (RunInstances).\nSolution\nTo resolve the issue:\nIf you are making requests as an IAM user, verify that you have the following permissions:\nec2:RunInstances with a wildcard resource (\"*\")\niam:PassRole with the resource matching the role ARN (for example, arn:aws:iam::999999999999:role/ExampleRoleName)\nIf you don't have the preceding permissions, edit the IAM policy associated with the IAM role or user to add the missing required permissions.\nIf your issue is not resolved and you continue receiving a launch failure error, you can decode the authorization failure message included in the error. The decoded message includes the permissions that are missing from the IAM policy. For more information, see How do I decode an authorization failure message after I receive an \"UnauthorizedOperation\" error during an EC2 instance launch?\nHigh CPU usage shortly after Windows starts (Windows instances only)\nNote\nThis troubleshooting tip is for Windows instances only.\nIf Windows Update is set to Check for updates but let me choose whether to download and install them (the default instance setting) this check can consume anywhere from 50 - 99% of the CPU on the instance. If this CPU consumption causes problems for your applications, you can manually change Windows Update settings in Control Panel or you can use the following script in the Amazon EC2 user data field:\nreg add \"HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WindowsUpdate\\Auto Update\" /v AUOptions /t REG_DWORD /d 3 /f net stop wuauserv net start wuauserv\nWhen you run this script, specify a value for /d. The default value is 3. Possible values include the following:\nNever check for updates\nCheck for updates but let me choose whether to download and install them\nDownload updates but let me choose whether to install them\nInstall updates automatically\nAfter you modify the user data for your instance, you can run it. For more information, see Run commands on your Windows instance at launch."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesStopping.html",
        "content": "If your Amazon EBS-backed instance appears stuck in the stopping state, the issue might be with the underlying host computer.\nTo resolve the issue, follow these steps:\nForce stop the instance\nUse the Amazon EC2 console or the AWS CLI to force stop the instance. For the steps, see Force stop an instance.\nThe instance will first attempt a graceful shutdown, which includes flushing file system caches and metadata. If the graceful shutdown fails to complete within the timeout period, the instance shuts down forcibly without flushing the file system caches and metadata.\nAfter force stop\nPerform file system check and repair procedures.\nImportant\nPerforming these procedures is crucial because a forced stop prevents flushing of file system caches and metadata.\nIf force stop fails\nIf, after 10 minutes, the instance has not stopped, do the following:\nPost a request for help on AWS re:Post. To help expedite a resolution, include the instance ID, and describe the steps that you've already taken.\nAlternatively, if you have a support plan, create a technical support case in the Support Center.\nWhile waiting for assistance, you can create a replacement instance if needed. For the steps, see (Optional) Create a replacement instance.\nThere is no cost for instance usage while an instance is in the stopping state or in any other state except running. You are only charged for instance usage when an instance is in the running state.\nContents\nForce stop an instance\n(Optional) Create a replacement instance\nForce stop an instance\nForce the instance to stop using either the console or the AWS CLI.\nNote\nYou can force an instance to stop using the console only while the instance is in the stopping state. You can force an instance to stop using the AWS CLI while the instance is in any state, except shutting-down and terminated.\nConsole\nAWS CLI\nTo force stop the instance using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances and select the stuck instance.\nChoose Instance state, Force stop instance, Stop.\nNote that Force stop instance is only available in the console if your instance is in the stopping state. If your instance is in another state (except shutting-down and terminated) you can use the AWS CLI to force stop your instance.\nIf, after 10 minutes, the instance has not stopped, post a request for help on AWS re:Post. To help expedite a resolution, include the instance ID, and describe the steps that you've already taken. Alternatively, if you have a support plan, create a technical support case in the Support Center.\n(Optional) Create a replacement instance\nWhile you are waiting for assistance from AWS re:Post or the Support Center, you can create a replacement instance if needed. Create an AMI from the stuck instance, and launch a new instance using the new AMI.\nImportant\nYou can create a replacement instance if the stuck instance produces system status checks only, as instance status checks will result in the AMI copying over an exact replica of the broken operating system. After you've confirmed the status message, create the AMI and launch a new instance using the new AMI.\nConsole\nAWS CLI\nTo create a replacement instance using the console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances and select the stuck instance.\nChoose Actions, Image and templates, Create image.\nOn the Create image page, do the following:\nEnter a name and description for the AMI.\nClear Reboot instance.\nChoose Create image.\nFor more information, see Create an AMI from an instance.\nLaunch a new instance from the AMI and verify that the new instance is working.\nSelect the stuck instance, and choose Actions, Instance state, Terminate (delete) instance. If the instance also gets stuck terminating, Amazon EC2 automatically forces it to terminate within a few hours.\nIf you are unable to create an AMI from the instance as described in the previous procedure, you can set up a replacement instance as follows:\n(Alternate) To create a replacement instance using the console\nSelect the instance and choose Description, Block devices. Select each volume and make note of its volume ID. Be sure to note which volume is the root volume.\nIn the navigation pane, choose Volumes. Select each volume for the instance, and choose Actions, Create Snapshot.\nIn the navigation pane, choose Snapshots. Select the snapshot that you just created, and choose Actions, Create Volume.\nLaunch an instance with the same operating system as the stuck instance. Note the volume ID and device name of its root volume.\nIn the navigation pane, choose Instances, select the instance that you just launched, and choose Instance state, Stop instance.\nIn the navigation pane, choose Volumes, select the root volume of the stopped instance, and choose Actions, Detach Volume.\nSelect the root volume that you created from the stuck instance, choose Actions, Attach Volume, and attach it to the new instance as its root volume (using the device name that you made note of). Attach any additional non-root volumes to the instance.\nIn the navigation pane, choose Instances and select the replacement instance. Choose Instance state, Start instance. Verify that the instance is working.\nSelect the stuck instance, choose Instance state, Terminate (delete) instance. If the instance also gets stuck terminating, Amazon EC2 automatically forces it to terminate within a few hours."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesShuttingDown.html",
        "content": "Shutting down or deleting your instance is known as instance termination. The following information can help you troubleshoot issues when you terminate your instance.\nYou are not billed for any instance usage while an instance is not in the running state. In other words, when you terminate an instance, you stop incurring charges for that instance as soon as its state changes to shutting-down.\nInstance terminates immediately\nSeveral issues can cause your instance to terminate immediately on start-up. See Instance terminates immediately for more information.\nDelayed instance termination\nIf your instance remains in the shutting-down state longer than a few minutes, it might be delayed due to shutdown scripts being run by the instance.\nAnother possible cause is a problem with the underlying host computer. If your instance remains in the shutting-down state for several hours, Amazon EC2 treats it as a stuck instance and forcibly terminates it.\nIf it appears that your instance is stuck terminating and it has been longer than several hours, post a request for help to AWS re:Post. To help expedite a resolution, include the instance ID and describe the steps that you've already taken. Alternatively, if you have a support plan, create a technical support case in the Support Center.\nTerminated instance still displayed\nAfter you terminate an instance, it remains visible for a short while before being deleted. The state shows as terminated. If the entry is not deleted after several hours, contact Support.\nError: The instance may not be terminated. Modify its 'disableApiTermination' instance attribute\nIf you try to terminate an instance and get the The instance instance_id may not be terminated. Modify its 'disableApiTermination' instance attribute error message, it indicates that the instance has been enabled for termination protection. Termination protection prevents the instance from being accidentally terminated. For more information, see Enable termination protection.\nYou must disable termination protection before you can terminate the instance.\nTo disable termination protection using the Amazon EC2 console, select the instance and then choose Actions, Instance Settings, Change Termination Protection.\nTo disable termination protection using the AWS CLI, use the following command.\naws ec2 modify-instance-attribute --instance-id instance_id --no-disable-api-termination\nInstances automatically launched or terminated\nGenerally, the following behaviors mean that you've used Amazon EC2 Auto Scaling, EC2 Fleet, or Spot Fleet to scale your computing resources automatically based on criteria that you've defined:\nYou terminate an instance and a new instance launches automatically.\nYou launch an instance and one of your instances terminates automatically.\nYou stop an instance and it terminates and a new instance launches automatically.\nTo stop automatic scaling, find the Auto Scaling group or the fleet that is launching the instances and either set its capacity to 0 or delete it."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/troubleshoot-unreachable-instance.html",
        "content": "The following information can help you troubleshoot unreachable Amazon EC2 instances. You can capture screenshots or access console output to help diagnose problems and determine if you should reboot your instance. For unreachable Windows instances, troubleshoot by reviewing screenshots returned by the service.\nContents\nInstance reboot\nInstance console output\nCapture a screenshot of an unreachable instance\nCommon screenshots for Windows instances\nInstance recovery when a host computer fails\nInstance appeared offline and unexpectedly rebooted\nInstance reboot\nThe ability to reboot instances that are otherwise unreachable is valuable for both troubleshooting and general instance management.\nJust as you can reset a computer by pressing the reset button, you can reset EC2 instances using the Amazon EC2 console, CLI, or API. For more information, see Reboot your instance.\nInstance console output\nConsole output is a valuable tool for problem diagnosis. It is especially useful for troubleshooting kernel problems and service configuration issues that could cause an instance to terminate or become unreachable before its SSH daemon can be started.\nLinux instances \u2013 The instance console output displays the exact console output that would normally be displayed on a physical monitor attached to a computer. The console output returns buffered information that was posted shortly after an instance transition state (start, stop, reboot, and terminate). The posted output is not continuously updated; only when it is likely to be of the most value.\nWindows instances \u2013 The instance console output includes the last three system event log errors.\nOnly the instance owner can access the console output.\nYou can retrieve the latest serial console output during the instance lifecycle. This option is only supported on Nitro-based instances.\nConsole\nCommand line\nTo get console output\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigation pane, choose Instances.\nSelect the instance and then choose Actions, Monitor and troubleshoot, Get system log.\nCapture a screenshot of an unreachable instance\nIf you are unable to connect to your instance, you can capture a screenshot of your instance and view it as an image. The image can provide visibility as to the status of the instance, and allows for quicker troubleshooting.\nYou can generate screenshots while the instance is running or after it has crashed. The image is generated in JPG format and is no larger than 100 kb. There is no data transfer cost for the screenshot.\nLimitations\nThis feature is not supported for the following:\nBare metal instances (instances of type *.metal)\nInstance is using an NVIDIA GRID driver\nInstances powered by Arm-based Graviton processors\nWindows instances on AWS Outposts\nWindows instances on AWS Local Zones\nSupported Regions\nThis feature is available in the following Regions:\nUS East (N. Virginia) Region\nUS East (Ohio) Region\nUS West (N. California) Region\nUS West (Oregon) Region\nAfrica (Cape Town) Region\nAsia Pacific (Hong Kong) Region\nAsia Pacific (Hyderabad) Region\nAsia Pacific (Jakarta) Region\nAsia Pacific (Melbourne) Region\nAsia Pacific (Mumbai) Region\nAsia Pacific (Osaka) Region\nAsia Pacific (Seoul) Region\nAsia Pacific (Singapore) Region\nAsia Pacific (Sydney) Region\nAsia Pacific (Tokyo) Region\nCanada (Central) Region\nCanada West (Calgary) Region\nChina (Beijing) Region\nChina (Ningxia) Region\nEurope (Frankfurt) Region\nEurope (Ireland) Region\nEurope (London) Region\nEurope (Milan) Region\nEurope (Paris) Region\nEurope (Spain) Region\nEurope (Stockholm) Region\nEurope (Zurich) Region\nIsrael (Tel Aviv) Region\nSouth America (S\u00e3o Paulo) Region\nMiddle East (Bahrain) Region\nMiddle East (UAE) Region\nConsole\nCommand line\nTo get a screenshot of an instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the left navigation pane, choose Instances.\nSelect the instance to capture.\nChoose Actions, Monitor and troubleshoot, Get instance screenshot.\nChoose Download, or right-click the image to download and save it.\nInstance recovery when a host computer fails\nIf there is an unrecoverable issue with the hardware of an underlying host computer, AWS may schedule an instance stop event. You are notified of such an event ahead of time by email.\nTo recover an Amazon EBS-backed instance running on a host computer that failed\nBack up any important data on your instance store volumes to Amazon EBS or Amazon S3.\nStop the instance.\nStart the instance.\nRestore any important data.\nFor more information, see Stop and start Amazon EC2 instances.\nTo recover an instance store-backed instance running on a host computer that failed\nCreate an AMI from the instance.\nUpload the image to Amazon S3.\nBack up important data to Amazon EBS or Amazon S3.\nTerminate the instance.\nLaunch a new instance from the AMI.\nRestore any important data to the new instance.\nInstance appeared offline and unexpectedly rebooted\nIf your instance appears to have been offline and then unexpectedly rebooted, it might have undergone automatic instance recovery. This happens when AWS detects that the instance is unavailable due to an underlying hardware or software issue, and either simplified automatic recovery or CloudWatch action based recovery is enabled on the instance.\nDuring the recovery process, AWS attempts to restore the instance's availability by migrating it to different hardware. To verify whether automatic instance recovery occurred for your instance, see Verify if automatic instance recovery occurred.\nNote\nIf your workload or application is unresponsive, check whether it's running on the instance. If it's not, start it manually. To prevent this issue in the future, implement a recovery plan to ensure your workload or application functions properly after instance recovery."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ics-common.html",
        "content": "You can use the following information to help you troubleshoot an unreachable Windows instance based on screenshots returned by the service.\nLog on screen (Ctrl+Alt+Delete)\nRecovery console screen\nWindows boot manager screen\nSysprep screen\nGetting ready screen\nWindows Update screen\nChkdsk\nLog on screen (Ctrl+Alt+Delete)\nConsole Screenshot Service returned the following.\nIf an instance becomes unreachable during logon, there could be a problem with your network configuration or Windows Remote Desktop Services. An instance can also be unresponsive if a process is using large amounts of CPU.\nNetwork configuration\nUse the following information to verify that your AWS, Microsoft Windows, and local (or on-premises) network configurations aren't blocking access to the instance.\nAWS network configuration\nConfiguration Verify\nSecurity group configuration Verify that port 3389 is open for your security group. Verify you are connecting to the right public IP address. If the instance was not associated with an Elastic IP, the public IP changes after the instance stops/starts. For more information, see Remote Desktop can't connect to the remote computer.\nVPC configuration (Network ACLs) Verify that the access control list (ACL) for your Amazon VPC is not blocking access. For information, see Network ACLs in the Amazon VPC User Guide.\nVPN configuration If you are connecting to your VPC using a virtual private network (VPN), verify VPN tunnel connectivity. For more information, see How do I troubleshoot VPN tunnel connectivity to an Amazon VPC?\nWindows network configuration\nConfiguration Verify\nWindows Firewall Verify that Windows Firewall isn't blocking connections to your instance. Disable Windows Firewall as described in bullet 7 of the remote desktop troubleshooting section, Remote Desktop can't connect to the remote computer.\nAdvanced TCP/IP configuration (Use of static IP) The instance may be unresponsive because you configured a static IP address. For a VPC, create a network interface and attach it to the instance.\nLocal or on-premises network configuration\nVerify that a local network configuration isn't blocking access. Try to connect to another instance in the same VPC as your unreachable instance. If you can't access another instance, work with your local network administrator to determine whether a local policy is restricting access.\nRemote Desktop Services issues\nIf the instance can't be reached during logon, there could a problem with Remote Desktop Services (RDS) on the instance.\nTip\nYou can use the AWSSupport-TroubleshootRDP runbook to check and modify various settings that might affect Remote Desktop Protocol (RDP) connections. For more information, see AWSSupport-TroubleshootRDP in the AWS Systems Manager Automation runbook reference.\nRemote Desktop Services configuration\nConfiguration Verify\nRDS is running Verify that RDS is running on the instance. Connect to the instance using the Microsoft Management Console (MMC) Services snap-in (services.msc). In the list of services, verify that Remote Desktop Services is Running. If it isn't, start it and then set the startup type to Automatic. If you can't connect to the instance by using the Services snap-in, detach the root volume from the instance, take a snapshot of the volume or create an AMI from it, attach the original volume to another instance in the same Availability Zone as a secondary volume, and modify the Start registry key. When you are finished, reattach the root volume to the original instance.\nRDS is enabled\nEven if the service is started, it might be disabled. Detach the root volume from the instance, take a snapshot of the volume or create an AMI from it, attach the original volume to another instance in the same Availability Zone as a secondary volume, and enable the service by modifying the Terminal Server registry key as described in Enable Remote Desktop on an EC2 instance with remote registry.\nWhen you are finished, reattach the root volume to the original instance.\nHigh CPU usage\nCheck the CPUUtilization (Maximum) metric on your instance by using Amazon CloudWatch. If CPUUtilization (Maximum) is a high number, wait for the CPU to go down and try connecting again. High CPU usage can be caused by:\nWindows Update\nSecurity Software Scan\nCustom Startup Script\nTask Scheduler\nFor more information, see Get Statistics for a Specific Resource in the Amazon CloudWatch User Guide. For additional troubleshooting tips, see High CPU usage shortly after Windows starts (Windows instances only).\nRecovery console screen\nConsole Screenshot Service returned the following.\nThe operating system might boot into the Recovery console and get stuck in this state if the bootstatuspolicy is not set to ignoreallfailures. Use the following procedure to change the bootstatuspolicy configuration to ignoreallfailures.\nBy default, the policy configuration for public Windows AMIs provided by AWS is set to ignoreallfailures.\nStop the unreachable instance.\nCreate a snapshot of the root volume. The root volume is attached to the instance as /dev/sda1.\nDetach the root volume from the unreachable instance, take a snapshot of the volume or create an AMI from it, and attach it to another instance in the same Availability Zone as a secondary volume.\nWarning\nIf your temporary instance and the original instance were launched using the same AMI, you must complete additional steps or you won't be able to boot the original instance after you restore its root volume because of a disk signature collision. If you must create a temporary instance using the same AMI, to avoid a disk signature collision, complete the steps in Disk signature collision.\nAlternatively, select a different AMI for the temporary instance. For example, if the original instance uses an AMI for Windows Server 2016, launch the temporary instance using an AMI for Windows Server 2019.\nLog in to the instance and run the following command from a command prompt to change the bootstatuspolicy configuration to ignoreallfailures.\nbcdedit /store Drive Letter:\\boot\\bcd /set {default} bootstatuspolicy ignoreallfailures\nReattach the volume to the unreachable instance and start the instance again.\nWindows boot manager screen\nConsole Screenshot Service returned the following.\nThe operating system experienced a fatal corruption in the system file and/or the registry. When the instance is stuck in this state, you should recover the instance from a recent backup AMI or launch a replacement instance. If you need to access data on the instance, detach any root volumes from the unreachable instance, take a snapshot of those volume or create an AMI from them, and attach them to another instance in the same Availability Zone as a secondary volume.\nSysprep screen\nConsole Screenshot Service returned the following.\nYou may see this screen if you did not use the EC2Config Service to call Sysprep or if the operating system failed while running Sysprep. You can reset the password using EC2Rescue. Otherwise, see Create an Amazon EC2 AMI using Windows Sysprep.\nGetting ready screen\nConsole Screenshot Service returned the following.\nRefresh the Instance Console Screenshot Service repeatedly to verify that the progress ring is spinning. If the ring is spinning, wait for the operating system to start up. You can also check the CPUUtilization (Maximum) metric on your instance by using Amazon CloudWatch to see if the operating system is active. If the progress ring is not spinning, the instance may be stuck at the boot process. Reboot the instance. If rebooting does not solve the problem, recover the instance from a recent backup AMI or launch a replacement instance. If you need to access data on the instance, detach the root volume from the unreachable instance, take a snapshot of the volume or create an AMI from it. Then attach it to another instance in the same Availability Zone as a secondary volume.\nWindows Update screen\nConsole Screenshot Service returned the following.\nThe Windows Update process is updating the registry. Wait for the update to finish. Do not reboot or stop the instance as this may cause data corruption during the update.\nNote\nThe Windows Update process can consume resources on the server during the update. If you experience this problem often, consider using faster instance types and faster EBS volumes.\nChkdsk\nConsole Screenshot Service returned the following.\nWindows is running the chkdsk system tool on the drive to verify file system integrity and fix logical file system errors. Wait for process to complete."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesConnecting.html",
        "content": "The following information and common errors can help you troubleshoot connecting to your Linux instance.\nConnection issues\nCommon causes for connection issues\nError connecting to your instance: Connection timed out\nError: unable to load key ... Expecting: ANY PRIVATE KEY\nError: User key not recognized by server\nError: Permission denied or connection closed by [instance] port 22\nError: Unprotected private key file\nError: Private key must begin with \"-----BEGIN RSA PRIVATE KEY-----\" and end with \"-----END RSA PRIVATE KEY-----\"\nError: Server refused our key or No supported authentication methods available\nCannot ping instance\nError: Server unexpectedly closed network connection\nError: Host key validation failed for EC2 Instance Connect\nCan't connect to Ubuntu instance using EC2 Instance Connect\nI've lost my private key. How can I connect to my instance?\nCommon causes for connection issues\nWe recommend that you start to troubleshoot instance connection problems by verifying that you have accurately performed the following tasks.\nVerify the username for your instance\nYou can connect to your instance using the username for your user account or the default username for the AMI that you used to launch your instance.\nGet the username for your user account.\nFor more information about how to create a user account, see Manage system users on your Amazon EC2 Linux instance.\nGet the default username for the AMI that you used to launch your instance.\nAMI used to launch instance Default username\nAmazon Linux\nec2-user\nCentOS centos or ec2-user\nDebian admin\nFedora fedora or ec2-user\nRHEL ec2-user or root\nSUSE ec2-user or root\nUbuntu ubuntu\nOracle ec2-user\nBitnami bitnami\nRocky Linux rocky\nOther Check with the AMI provider\nVerify that your security group rules allow traffic\nEnsure that the security group associated with your instance allows incoming SSH traffic from your IP address. The default security group for the VPC does not allow incoming SSH traffic by default. The security group created by the launch instance wizard enables SSH traffic by default. For steps to add a rule for inbound SSH traffic to your Linux instance, see Rules to connect to instances from your computer. For steps to verify, see Error connecting to your instance: Connection timed out.\nVerify that your instance is ready\nAfter you launch an instance, it can take a few minutes for the instance to be ready to accept connection requests. Check your instance to make sure it is running and has passed its status checks.\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances, and then select your instance.\nVerify the following:\nIn the Instance state column, verify that your instance is in the running state.\nIn the Status check column, verify that your instance has passed the two status checks.\nVerify that you've satisfied all prerequisites to connect\nEnsure that you have all the information that you need to connect. For more information, see Connect to your Linux instance using SSH.\nConnect from Linux or macOS X\nIf your local computer operating system is Linux or macOS X, check the following for specific prerequisites for connecting to a Linux instance:\nSSH client\nEC2 Instance Connect\nAWS Systems Manager Session Manager\nConnect from Windows\nIf your local computer operating system is Windows, check the following for specific prerequisites for connecting to a Linux instance:\nOpenSSH\nPuTTY\nAWS Systems Manager Session Manager\nWindows Subsystem for Linux\nCheck if the instance is a managed instance\nUser-initiated connections to managed instances are not allowed. To determine if the instance is managed, find the Managed field for the instance. If the value is true, it's a managed instance. For more information, see Amazon EC2 managed instances.\nError connecting to your instance: Connection timed out\nIf you try to connect to your instance and get the error message Network error: Connection timed out or Error connecting to [instance], reason: -> Connection timed out: connect, try the following:\nCheck your security group rules.\nYou need a security group rule that allows inbound traffic from your local computer's public IPv4 address on the proper port.\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances, and then select your instance.\nOn the Security tab at the bottom of the console page, under Inbound rules, check the list of rules that are in effect for the selected instance. Verify that there is a rule that allows traffic from your local computer to port 22 (SSH).\nIf your security group does not have a rule that allows inbound traffic from your local computer, add a rule to your security group. For more information, see Rules to connect to instances from your computer.\nFor the rule that allows inbound traffic, check the Source field. If the value is a single IP address, and if the IP address is not static, a new IP address will be assigned each time you restart your computer. This will result in the rule not including your computer's IP address traffic. The IP address might not be static if your computer is on a corporate network, or you're connecting through an internet service provider (ISP), or your computer IP address is dynamic and changes each time you restart your computer. To ensure that your security group rule allows inbound traffic from your local computer, instead of specifying a single IP address for Source, rather specify the range of IP addresses used by your client computers.\nFor more information about security group rules, see Security group rules in the Amazon VPC User Guide.\nCheck the route table for the subnet.\nYou need a route that sends all traffic destined outside the VPC to the internet gateway for the VPC.\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances, and then select your instance.\nOn the Networking tab, make note of the values for VPC ID and Subnet ID.\nOpen the Amazon VPC console at https://console.aws.amazon.com/vpc/.\nIn the navigation pane, choose Internet Gateways. Verify that there is an internet gateway attached to your VPC. Otherwise, choose Create internet gateway, enter a name for the internet gateway, and choose Create internet gateway. Then, for the internet gateway you created, choose Actions, Attach to VPC, select your VPC, and then choose Attach internet gateway to attach it to your VPC.\nIn the navigation pane, choose Subnets, and then select your subnet.\nOn the Route table tab, verify that there is a route with 0.0.0.0/0 as the destination and the internet gateway for your VPC as the target. If you're connecting to your instance using its IPv6 address, verify that there is a route for all IPv6 traffic (::/0) that points to the internet gateway. Otherwise, do the following:\nChoose the ID of the route table (rtb-xxxxxxxx) to navigate to the route table.\nOn the Routes tab, choose Edit routes. Choose Add route, use 0.0.0.0/0 as the destination and the internet gateway as the target. For IPv6, choose Add route, use ::/0 as the destination and the internet gateway as the target.\nChoose Save routes.\nCheck the network access control list (ACL) for the subnet.\nThe network ACLs must allow inbound SSH traffic from your local IP address on port 22. It must also allow outbound traffic to the ephemeral ports (1024-65535).\nOpen the Amazon VPC console at https://console.aws.amazon.com/vpc/.\nIn the navigation pane, choose Subnets.\nSelect your subnet.\nOn the Network ACL tab, for Inbound rules, verify that the rules allow inbound traffic from your computer on the required port. Otherwise, delete or modify the rule that is blocking the traffic.\nFor Outbound rules, verify that the rules allow outbound traffic to your computer on the ephemeral ports. Otherwise, delete or modify the rule that is blocking the traffic.\nIf your computer is on a corporate network\nAsk your network administrator whether the internal firewall allows inbound and outbound traffic from your computer on port 22.\nIf you have a firewall on your computer, verify that it allows inbound and outbound traffic from your computer on port 22.\nCheck that your instance has a public IPv4 address.\nIf not, you can associate an Elastic IP address with your instance. For more information, see Elastic IP addresses.\nCheck the CPU load on your instance; the server may be overloaded.\nAWS automatically provides data such as Amazon CloudWatch metrics and instance status, which you can use to see how much CPU load is on your instance and, if necessary, adjust how your loads are handled. For more information, see Monitor your instances using CloudWatch.\nIf your load is variable, you can automatically scale your instances up or down using Auto Scaling and Elastic Load Balancing.\nIf your load is steadily growing, you can move to a larger instance type. For more information, see Amazon EC2 instance type changes.\nTo connect to your instance using an IPv6 address, check the following:\nYour subnet must be associated with a route table that has a route for IPv6 traffic (::/0) to an internet gateway.\nYour security group rules must allow inbound traffic from your local IPv6 address on port 22.\nYour network ACL rules must allow inbound and outbound IPv6 traffic.\nIf you launched your instance from an older AMI, it might not be configured for DHCPv6 (IPv6 addresses are not automatically recognized on the network interface). For more information, see Configure IPv6 on your instances in the Amazon VPC User Guide.\nYour local computer must have an IPv6 address, and must be configured to use IPv6.\nError: unable to load key ... Expecting: ANY PRIVATE KEY\nIf you try to connect to your instance and get the error message, unable to load key ... Expecting: ANY PRIVATE KEY, the file in which the private key is stored is incorrectly configured. If the private key file ends in .pem, it might still be incorrectly configured. A possible cause for an incorrectly configured private key file is a missing certificate.\nIf the private key file is incorrectly configured, follow these steps to resolve the error\nCreate a new key pair. For more information, see Create a key pair using Amazon EC2.\nNote\nAlternatively, you can create a new key pair using a third-party tool. For more information, see Create a key pair using a third-party tool and import the public key to Amazon EC2.\nAdd the new key pair to your instance. For more information, see I've lost my private key. How can I connect to my instance?.\nConnect to your instance using the new key pair.\nError: User key not recognized by server\nIf you use SSH to connect to your instance\nUse ssh -vvv to get triple verbose debugging information while connecting:\nssh -vvv -i path/key-pair-name.pem instance-user-name@ec2-203-0-113-25.compute-1.amazonaws.com\nThe following sample output demonstrates what you might see if you were trying to connect to your instance with a key that was not recognized by the server:\nopen/ANT/myusername/.ssh/known_hosts).\ndebug2: bits set: 504/1024\ndebug1: ssh_rsa_verify: signature correct\ndebug2: kex_derive_keys\ndebug2: set_newkeys: mode 1\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug2: set_newkeys: mode 0\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: Roaming not allowed by server\ndebug1: SSH2_MSG_SERVICE_REQUEST sent\ndebug2: service_accept: ssh-userauth\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug2: key: boguspem.pem ((nil))\ndebug1: Authentications that can continue: publickey\ndebug3: start over, passed a different list publickey\ndebug3: preferred gssapi-keyex,gssapi-with-mic,publickey,keyboard-interactive,password\ndebug3: authmethod_lookup publickey\ndebug3: remaining preferred: keyboard-interactive,password\ndebug3: authmethod_is_enabled publickey\ndebug1: Next authentication method: publickey\ndebug1: Trying private key: boguspem.pem\ndebug1: read PEM private key done: type RSA\ndebug3: sign_and_send_pubkey: RSA 9c:4c:bc:0c:d0:5c:c7:92:6c:8e:9b:16:e4:43:d8:b2\ndebug2: we sent a publickey packet, wait for reply\ndebug1: Authentications that can continue: publickey\ndebug2: we did not send a packet, disable method\ndebug1: No more authentication methods to try.\nPermission denied (publickey).\nIf you use PuTTY to connect to your instance\nVerify that your private key (.pem) file has been converted to the format recognized by PuTTY (.ppk). For more information about converting your private key, see Connect to your Linux instance using PuTTY.\nNote\nIn PuTTYgen, load your private key file and select Save Private Key rather than Generate.\nVerify that you are connecting with the appropriate username for your AMI. Enter the username in the Host name box in the PuTTY Configuration window.\nAMI used to launch instance Default username\nAmazon Linux\nec2-user\nCentOS centos or ec2-user\nDebian admin\nFedora fedora or ec2-user\nRHEL ec2-user or root\nSUSE ec2-user or root\nUbuntu ubuntu\nOracle ec2-user\nBitnami bitnami\nRocky Linux rocky\nOther Check with the AMI provider\nVerify that you have an inbound security group rule to allow inbound traffic to the appropriate port. For more information, see Rules to connect to instances from your computer.\nError: Permission denied or connection closed by [instance] port 22\nIf you connect to your instance using SSH and get any of the following errors, Host key not found in [directory], Permission denied (publickey), Authentication failed, permission denied, or Connection closed by [instance] port 22, verify that you are connecting with the appropriate username for your AMI and that you have specified the proper private key (.pem) file for your instance.\nThe appropriate usernames are as follows:\nAMI used to launch instance Default username\nAmazon Linux\nec2-user\nCentOS centos or ec2-user\nDebian admin\nFedora fedora or ec2-user\nRHEL ec2-user or root\nSUSE ec2-user or root\nUbuntu ubuntu\nOracle ec2-user\nBitnami bitnami\nRocky Linux rocky\nOther Check with the AMI provider\nFor example, to use an SSH client to connect to an Amazon Linux instance, use the following command:\nssh -i /path/key-pair-name.pem instance-user-name@ec2-203-0-113-25.compute-1.amazonaws.com\nConfirm that you are using the private key file that corresponds to the key pair that you selected when you launched the instance.\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances and then select your instance.\nOn the Details tab, under Instance details, verify the value of Key pair name.\nIf you did not specify a key pair when you launched the instance, you can terminate the instance and launch a new instance, ensuring that you specify a key pair. If this is an instance that you have been using but you no longer have the .pem file for your key pair, you can replace the key pair with a new one. For more information, see I've lost my private key. How can I connect to my instance?.\nIf you generated your own key pair, ensure that your key generator is set up to create RSA keys. DSA keys are not accepted.\nIf you get a Permission denied (publickey) error and none of the above applies (for example, you were able to connect previously), the permissions on the home directory of your instance may have been changed. Permissions for /home/instance-user-name/.ssh/authorized_keys must be limited to the owner only.\nTo verify the permissions on your instance\nStop your instance and detach the root volume. For more information, see Stop and start Amazon EC2 instances.\nLaunch a temporary instance in the same Availability Zone as your current instance (use a similar or the same AMI as you used for your current instance), and attach the root volume to the temporary instance.\nConnect to the temporary instance, create a mount point, and mount the volume that you attached.\nFrom the temporary instance, check the permissions of the /home/instance-user-name/ directory of the attached volume. If necessary, adjust the permissions as follows:\n[ec2-user ~]$ chmod 600 mount_point/home/instance-user-name/.ssh/authorized_keys\n[ec2-user ~]$ chmod 700 mount_point/home/instance-user-name/.ssh\n[ec2-user ~]$ chmod 700 mount_point/home/instance-user-name\nUnmount the volume, detach it from the temporary instance, and re-attach it to the original instance. Ensure that you specify the correct device name for the root volume; for example, /dev/xvda.\nStart your instance. If you no longer require the temporary instance, you can terminate it.\nError: Unprotected private key file\nYour private key file must be protected from read and write operations from any other users. If your private key can be read or written to by anyone but you, then SSH ignores your key and you see the following warning message below.\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nPermissions 0777 for '.ssh/my_private_key.pem' are too open.\nIt is required that your private key files are NOT accessible by others.\nThis private key will be ignored.\nbad permissions: ignore key: .ssh/my_private_key.pem\nPermission denied (publickey).\nIf you see a similar message when you try to log in to your instance, examine the first line of the error message to verify that you are using the correct public key for your instance. The above example uses the private key .ssh/my_private_key.pem with file permissions of 0777, which allow anyone to read or write to this file. This permission level is very insecure, and so SSH ignores this key.\nIf you are connecting from macOS or Linux, run the following command to fix this error, substituting the path for your private key file.\n[ec2-user ~]$ chmod 0400 .ssh/my_private_key.pem\nIf you are connecting to a Linux instance from Windows, perform the following steps on your local computer.\nNavigate to your .pem file.\nRight-click on the .pem file and select Properties.\nChoose the Security tab.\nSelect Advanced.\nVerify that you are the owner of the file. If not, change the owner to your username.\nSelect Disable inheritance and Remove all inherited permissions from this object.\nSelect Add, Select a principal, enter your username, and select OK.\nFrom the Permission Entry window, grant Read permissions and select OK.\nClick Apply to ensure all settings are saved.\nSelect OK to close the Advanced Security Settings window.\nSelect OK to close the Properties window.\nYou should be able to connect to your Linux instance from Windows using SSH.\nFrom a Windows command prompt, run the following commands.\nFrom the command prompt, navigate to the file path location of your .pem file.\nRun the following command to reset and remove explicit permissions:\nicacls.exe $path /reset\nRun the following command to grant Read permissions to the current user:\nicacls.exe $path /GRANT:R \"$($env:USERNAME):(R)\"\nRun the following command to disable inheritance and remove inherited permissions.\nicacls.exe $path /inheritance:r\nYou should be able to connect to your Linux instance from Windows using SSH.\nError: Private key must begin with \"-----BEGIN RSA PRIVATE KEY-----\" and end with \"-----END RSA PRIVATE KEY-----\"\nIf you use a third-party tool, such as ssh-keygen, to create an RSA key pair, it generates the private key in the OpenSSH key format. When you connect to your instance, if you use the private key in the OpenSSH format to decrypt the password, you'll get the error Private key must begin with \"-----BEGIN RSA PRIVATE KEY-----\" and end with \"-----END RSA PRIVATE KEY-----\".\nTo resolve the error, the private key must be in the PEM format. Use the following command to create the private key in the PEM format:\nssh-keygen -m PEM\nError: Server refused our key or No supported authentication methods available\nIf you use PuTTY to connect to your instance and get either of the following errors, Error: Server refused our key or Error: No supported authentication methods available, verify that you are connecting with the appropriate username for your AMI. Type the username in User name in the PuTTY Configuration window.\nThe appropriate usernames are as follows:\nAMI used to launch instance Default username\nAmazon Linux\nec2-user\nCentOS centos or ec2-user\nDebian admin\nFedora fedora or ec2-user\nRHEL ec2-user or root\nSUSE ec2-user or root\nUbuntu ubuntu\nOracle ec2-user\nBitnami bitnami\nRocky Linux rocky\nOther Check with the AMI provider\nYou should also verify that:\nYou are using the latest version of PuTTY. For more information, see the PuTTY web page.\nYour private key (.pem) file has been correctly converted to the format recognized by PuTTY (.ppk). For more information about converting your private key, see Connect to your Linux instance using PuTTY.\nCannot ping instance\nThe ping command is a type of ICMP traffic \u2014 if you are unable to ping your instance, ensure that your inbound security group rules allow ICMP traffic for the Echo Request message from all sources, or from the computer or instance from which you are issuing the command.\nIf you are unable to issue a ping command from your instance, ensure that your outbound security group rules allow ICMP traffic for the Echo Request message to all destinations, or to the host that you are attempting to ping.\nPing commands can also be blocked by a firewall or time out due to network latency or hardware issues. You should consult your local network or system administrator for help with further troubleshooting.\nError: Server unexpectedly closed network connection\nIf you are connecting to your instance with PuTTY and you receive the error \"Server unexpectedly closed network connection,\" verify that you have enabled keepalives on the Connection page of the PuTTY Configuration to avoid being disconnected. Some servers disconnect clients when they do not receive any data within a specified period of time. Set the Seconds between keepalives to 59 seconds.\nIf you still experience issues after enabling keepalives, try to disable Nagle's algorithm on the Connection page of the PuTTY Configuration.\nError: Host key validation failed for EC2 Instance Connect\nIf you rotate your instance host keys, the new host keys are not automatically uploaded to the AWS trusted host keys database. This causes host key validation to fail when you try to connect to your instance using the EC2 Instance Connect browser-based client, and you're unable to connect to your instance.\nTo resolve the error, you must run the eic_harvest_hostkeys script on your instance, which uploads your new host key to EC2 Instance Connect. The script is located at /opt/aws/bin/ on Amazon Linux 2 instances, and at /usr/share/ec2-instance-connect/ on Ubuntu instances.\nAmazon Linux 2\nUbuntu\nTo resolve the host key validation failed error on an Amazon Linux 2 instance\nConnect to your instance using SSH.\nYou can connect by using the EC2 Instance Connect CLI or by using the SSH key pair that was assigned to your instance when you launched it and the default username of the AMI that you used to launch your instance. For Amazon Linux 2, the default username is ec2-user.\nFor example, if your instance was launched using Amazon Linux 2, your instance's public DNS name is ec2-a-b-c-d.us-west-2.compute.amazonaws.com, and the key pair is my_ec2_private_key.pem, use the following command to SSH into your instance:\n$ ssh -i my_ec2_private_key.pem ec2-user@ec2-a-b-c-d.us-west-2.compute.amazonaws.com\nFor more information about connecting to your instance, see Connect to your Linux instance using an SSH client.\nNavigate to the following folder.\n[ec2-user ~]$ cd /opt/aws/bin/\nRun the following command on your instance.\n[ec2-user ~]$ ./eic_harvest_hostkeys\nNote that a successful call results in no output.\nYou can now use the EC2 Instance Connect browser-based client to connect to your instance.\nCan't connect to Ubuntu instance using EC2 Instance Connect\nIf you use EC2 Instance Connect to connect to your Ubuntu instance and you get an error when attempting to connect, you can use the following information to try to fix the issue.\nPossible cause\nThe ec2-instance-connect package on the instance is not the latest version.\nSolution\nUpdate the ec2-instance-connect package on the instance to the latest version, as follows:\nConnect to your instance using a method other than EC2 Instance Connect.\nRun the following command on your instance to update the ec2-instance-connect package to the latest version.\napt update && apt upgrade\nI've lost my private key. How can I connect to my instance?\nIf you lose the private key for an EBS-backed instance, you can regain access to your instance. You must stop the instance, detach its root volume and attach it to another instance as a data volume, modify the authorized_keys file with a new public key, move the volume back to the original instance, and restart the instance. For more information about launching, connecting to, and stopping instances, see Amazon EC2 instance state changes.\nThis procedure is only supported for instances with EBS root volumes. If the root device is an instance store volume, you cannot use this procedure to regain access to your instance; you must have the private key to connect to the instance. To determine the root device type of your instance, open the Amazon EC2 console, choose Instances, select the instance, choose the Storage tab, and in the Root device details section, check the value of Root device type.\nThe value is either EBS or INSTANCE-STORE.\nIn addition to the following steps, there are other ways to connect to your Linux instance if you lose your private key. For more information, see How can I connect to my Amazon EC2 instance if I lost my SSH key pair after its initial launch?\nSteps for connecting to an EBS-backed instance with a different key pair\nStep 1: Create a new key pair\nStep 2: Get information about the original instance and its root volume\nStep 3: Stop the original instance\nStep 4: Launch a temporary instance\nStep 5: Detach the root volume from the original instance and attach it to the temporary instance\nStep 6: Add the new public key to authorized_keys on the original volume mounted to the temporary instance\nStep 7: Unmount and detach the original volume from the temporary instance, and reattach it to the original instance\nStep 8: Connect to the original instance using the new key pair\nStep 9: Clean up\nStep 1: Create a new key pair\nCreate a new key pair using either the Amazon EC2 console or a third-party tool. If you want to name your new key pair exactly the same as the lost private key, you must first delete the existing key pair. For information about creating a new key pair, see Create a key pair using Amazon EC2 or Create a key pair using a third-party tool and import the public key to Amazon EC2.\nStep 2: Get information about the original instance and its root volume\nMake note of the following information because you'll need it to complete this procedure.\nTo get information about your original instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nChoose Instances in the navigation pane, and then select the instance that you'd like to connect to. (We'll refer to this as the original instance.)\nOn the Details tab, make note of the instance ID and AMI ID.\nOn the Networking tab, make note of the Availability Zone.\nOn the Storage tab, under Root device name, make note of the device name for the root volume (for example, /dev/xvda). Then, under Block devices, find this device name and make note of the volume ID (for example, vol-0a1234b5678c910de).\nStep 3: Stop the original instance\nChoose Instance state, Stop instance. If this option is disabled, either the instance is already stopped or its root device is an instance store volume.\nWarning\nWhen you stop an instance, the data on any instance store volumes is erased. To keep data from instance store volumes, be sure to back it up to persistent storage.\nStep 4: Launch a temporary instance\nTo launch a temporary instance\nIn the navigation pane, choose Instances, and then choose Launch instances.\nIn the Name and tags section, for Name, enter Temporary.\nIn the Application and OS Images section, select the same AMI that you used to launch the original instance. If this AMI is unavailable, you can create an AMI that you can use from the stopped instance. For more information, see Create an Amazon EBS-backed AMI.\nIn the Instance type section, keep the default instance type.\nIn the Key pair section, for Key pair name, select the existing key pair to use or create a new one.\nIn the Network settings section, choose Edit, and then for Subnet, select a subnet in the same Availability Zone as the original instance.\nIn the Summary panel, choose Launch.\nStep 5: Detach the root volume from the original instance and attach it to the temporary instance\nIn the navigation pane, choose Volumes and select the root device volume for the original instance (you made note of its volume ID in a previous step). Choose Actions, Detach volume, and then choose Detach. Wait for the state of the volume to become available. (You might need to choose the Refresh icon.)\nWith the volume still selected, choose Actions, and then choose Attach volume. Select the instance ID of the temporary instance, make note of the device name specified under Device name (for example, /dev/sdf), and then choose Attach volume.\nNote\nIf you launched your original instance from an AWS Marketplace AMI and your volume contains AWS Marketplace codes, you must first stop the temporary instance before you can attach the volume.\nStep 6: Add the new public key to authorized_keys on the original volume mounted to the temporary instance\nConnect to the temporary instance.\nFrom the temporary instance, mount the volume that you attached to the instance so that you can access its file system. For example, if the device name is /dev/sdf, use the following commands to mount the volume as /mnt/tempvol.\nNote\nThe device name might appear differently on your instance. For example, devices mounted as /dev/sdf might show up as /dev/xvdf on the instance. Some versions of Red Hat (or its variants, such as CentOS) might even increment the trailing letter by 4 characters, where /dev/sdf becomes /dev/xvdk.\nUse the lsblk command to determine if the volume is partitioned.\n[ec2-user ~]$ lsblk\nNAME    MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nxvda    202:0    0    8G  0 disk\n\u2514\u2500xvda1 202:1    0    8G  0 part /\nxvdf    202:80   0  101G  0 disk\n\u2514\u2500xvdf1 202:81   0  101G  0 part\nxvdg    202:96   0   30G  0 disk\nIn the preceding example, /dev/xvda and /dev/xvdf are partitioned volumes, and /dev/xvdg is not. If your volume is partitioned, you mount the partition (/dev/xvdf1) instead of the raw device (/dev/xvdf) in the next steps.\nCreate a temporary directory to mount the volume.\n[ec2-user ~]$ sudo mkdir /mnt/tempvol\nMount the volume (or partition) at the temporary mount point, using the volume name or device name that you identified earlier. The required command depends on your operating system's file system. Note that the device name might appear differently on your instance. See the note in Step 6 for more information.\nAmazon Linux, Ubuntu, and Debian\n[ec2-user ~]$ sudo mount /dev/xvdf1 /mnt/tempvol\nAmazon Linux 2, CentOS, SUSE Linux 12, and RHEL 7.x\n[ec2-user ~]$ sudo mount -o nouuid /dev/xvdf1 /mnt/tempvol\nNote\nIf you get an error stating that the file system is corrupt, run the following command to use the fsck utility to check the file system and repair any issues:\n[ec2-user ~]$ sudo fsck /dev/xvdf1\nFrom the temporary instance, use the following command to update authorized_keys on the mounted volume with the new public key from the authorized_keys for the temporary instance.\nImportant\nThe following examples use the Amazon Linux username ec2-user. You might need to substitute a different username, such as ubuntu for Ubuntu instances.\n[ec2-user ~]$ cp .ssh/authorized_keys /mnt/tempvol/home/ec2-user/.ssh/authorized_keys\nIf this copy succeeded, you can go to the next step.\n(Optional) Otherwise, if you don't have permission to edit files in /mnt/tempvol, you must update the file using sudo and then check the permissions on the file to verify that you are able to log into the original instance. Use the following command to check the permissions on the file.\n[ec2-user ~]$ sudo ls -l /mnt/tempvol/home/ec2-user/.ssh\ntotal 4\n-rw------- 1 222 500 398 Sep 13 22:54 authorized_keys\nIn this example output, 222 is the user ID and 500 is the group ID. Next, use sudo to re-run the copy command that failed.\n[ec2-user ~]$ sudo cp .ssh/authorized_keys /mnt/tempvol/home/ec2-user/.ssh/authorized_keys\nRun the following command again to determine whether the permissions changed.\n[ec2-user ~]$ sudo ls -l /mnt/tempvol/home/ec2-user/.ssh\nIf the user ID and group ID have changed, use the following command to restore them.\n[ec2-user ~]$ sudo chown 222:500 /mnt/tempvol/home/ec2-user/.ssh/authorized_keys\nStep 7: Unmount and detach the original volume from the temporary instance, and reattach it to the original instance\nFrom the temporary instance, unmount the volume that you attached so that you can reattach it to the original instance. For example, use the following command to unmount the volume at /mnt/tempvol.\n[ec2-user ~]$ sudo umount /mnt/tempvol\nDetach the volume from the temporary instance (you unmounted it in the previous step): From the Amazon EC2 console, choose Volumes in the navigation pane, select the root device volume for the original instance (you made note of the volume ID in a previous step), choose Actions, Detach volume, and then choose Detach. Wait for the state of the volume to become available. (You might need to choose the Refresh icon.)\nReattach the volume to the original instance: With the volume still selected, choose Actions, Attach volume. Select the instance ID of the original instance, specify the device name that you noted earlier in Step 2 for the original root device attachment (/dev/sda1 or /dev/xvda), and then choose Attach volume.\nImportant\nIf you don't specify the same device name as the original attachment, you cannot start the original instance. Amazon EC2 expects the root device volume at sda1 or /dev/xvda.\nStep 8: Connect to the original instance using the new key pair\nSelect the original instance, choose Instance state, Start instance. After the instance enters the running state, you can connect to it using the private key file for your new key pair.\nNote\nIf the name of your new key pair and corresponding private key file is different from the name of the original key pair, ensure that you specify the name of the new private key file when you connect to your instance.\nStep 9: Clean up\n(Optional) You can terminate the temporary instance if you have no further use for it. Select the temporary instance, and choose Instance state, Terminate (delete) instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstances.html",
        "content": "The following information can help you troubleshoot issues if your Linux instance fails a status check. First determine whether your applications are exhibiting any problems. If you verify that the instance is not running your applications as expected, review the status check information and the system logs.\nFor examples of problems that can cause status checks to fail, see Status checks for Amazon EC2 instances.\nContents\nReview status check information\nRetrieve the system logs\nTroubleshoot system log errors for Linux instances\nOut of memory: kill process\nERROR: mmu_update failed (Memory management update failed)\nI/O error (block device failure)\nI/O ERROR: neither local nor remote disk (Broken distributed block device)\nrequest_module: runaway loop modprobe (Looping legacy kernel modprobe on older Linux versions)\n\"FATAL: kernel too old\" and \"fsck: No such file or directory while trying to open /dev\" (Kernel and AMI mismatch)\n\"FATAL: Could not load /lib/modules\" or \"BusyBox\" (Missing kernel modules)\nERROR Invalid kernel (EC2 incompatible kernel)\nfsck: No such file or directory while trying to open... (File system not found)\nGeneral error mounting filesystems (failed mount)\nVFS: Unable to mount root fs on unknown-block (Root filesystem mismatch)\nError: Unable to determine major/minor number of root device... (Root file system/device mismatch)\nXENBUS: Device with no driver...\n... days without being checked, check forced (File system check required)\nfsck died with exit status... (Missing device)\nGRUB prompt (grubdom>)\nBringing up interface eth0: Device eth0 has different MAC address than expected, ignoring. (Hard-coded MAC address)\nUnable to load SELinux Policy. Machine is in enforcing mode. Halting now. (SELinux misconfiguration)\nXENBUS: Timeout connecting to devices (Xenbus timeout)\nReview status check information\nTo investigate impaired instances using the Amazon EC2 console\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances, and then select your instance.\nSelect the Status and alarms tab to see the individual results for all System status checks, Instance status checks, and Attached EBS status checks.\nIf a status check has failed, you can try one of the following options:\nCreate an alarm to recover the instance in response to the failed status check. For more information, see Create alarms that stop, terminate, reboot, or recover an instance.\n(Instance status checks) If you changed the instance type to a Nitro-based instance, status checks fail if you migrated from an instance that does not have the required ENA and NVMe drivers. For more information, see Compatibility for changing the instance type.\nFor an EBS-backed instance, stop and restart the instance. For more information, see Stop and start Amazon EC2 instances.\nFor an instance-store backed instance, terminate the instance and launch a replacement instance. For more information, see Terminate Amazon EC2 instances.\nWait for Amazon EC2 to resolve the issue.\nContact Support or post your issue to AWS re:Post.\nIf your instance is in an Auto Scaling group:\n(System status checks and instance status checks) By default, Amazon EC2 Auto Scaling automatically launches a replacement instance. For more information, see Health checks for instances in an Auto Scaling group in the Amazon EC2 Auto Scaling User Guide.\n(Attached EBS status checks) You must configure Amazon EC2 Auto Scaling to automatically launch a replacement instance. For more information, see Monitor and replace Auto Scaling instances with impaired Amazon EBS volumes in the Amazon EC2 Auto Scaling User Guide.\nRetrieve the system log and look for errors. For more information, see Retrieve the system logs.\nRetrieve the system logs\nIf an instance status check fails, you can reboot the instance and retrieve the system logs. The logs may reveal an error that can help you troubleshoot the issue. Rebooting clears unnecessary information from the logs.\nTo reboot an instance and retrieve the system log\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances, and select your instance.\nChoose Instance state, Reboot instance. It might take a few minutes for your instance to reboot.\nVerify that the problem still exists; in some cases, rebooting may resolve the problem.\nWhen the instance is in the running state, choose Actions, Monitor and troubleshoot, Get system log.\nReview the log that appears on the screen, and use the list of known system log error statements below to troubleshoot your issue.\nIf your issue is not resolved, you can post your issue to AWS re:Post.\nTroubleshoot system log errors for Linux instances\nFor Linux instances that have failed an instance status check, such as the instance reachability check, verify that you followed the steps above to retrieve the system log. The following list contains some common system log errors and suggested actions you can take to resolve the issue for each error.\nMemory Errors\nOut of memory: kill process\nERROR: mmu_update failed (Memory management update failed)\nDevice Errors\nI/O error (block device failure)\nI/O ERROR: neither local nor remote disk (Broken distributed block device)\nKernel Errors\nrequest_module: runaway loop modprobe (Looping legacy kernel modprobe on older Linux versions)\n\"FATAL: kernel too old\" and \"fsck: No such file or directory while trying to open /dev\" (Kernel and AMI mismatch)\n\"FATAL: Could not load /lib/modules\" or \"BusyBox\" (Missing kernel modules)\nERROR Invalid kernel (EC2 incompatible kernel)\nFile System Errors\nfsck: No such file or directory while trying to open... (File system not found)\nGeneral error mounting filesystems (failed mount)\nVFS: Unable to mount root fs on unknown-block (Root filesystem mismatch)\nError: Unable to determine major/minor number of root device... (Root file system/device mismatch)\nXENBUS: Device with no driver...\n... days without being checked, check forced (File system check required)\nfsck died with exit status... (Missing device)\nOperating System Errors\nGRUB prompt (grubdom>)\nBringing up interface eth0: Device eth0 has different MAC address than expected, ignoring. (Hard-coded MAC address)\nUnable to load SELinux Policy. Machine is in enforcing mode. Halting now. (SELinux misconfiguration)\nXENBUS: Timeout connecting to devices (Xenbus timeout)\nOut of memory: kill process\nAn out-of-memory error is indicated by a system log entry similar to the one shown below.\n[115879.769795] Out of memory: kill process 20273 (httpd) score 1285879\nor a child \n[115879.769795] Killed process 1917 (php-cgi) vsz:467184kB, anon-\nrss:101196kB, file-rss:204kB\nPotential cause\nExhausted memory\nSuggested actions\nFor this instance type Do this\nAmazon EBS-backed\nDo one of the following:\nStop the instance, and modify the instance to use a different instance type, and start the instance again. For example, a larger or a memory-optimized instance type.\nReboot the instance to return it to a non-impaired status. The problem will probably occur again unless you change the instance type.\nInstance store-backed\nDo one of the following:\nTerminate the instance and launch a new instance, specifying a different instance type. For example, a larger or a memory-optimized instance type.\nReboot the instance to return it to an unimpaired status. The problem will probably occur again unless you change the instance type.\nERROR: mmu_update failed (Memory management update failed)\nMemory management update failures are indicated by a system log entry similar to the following:\n...\nPress `ESC' to enter the menu... 0   [H[J  Booting 'Amazon Linux 2011.09 (2.6.35.14-95.38.amzn1.i686)'\n\n\nroot (hd0)\n\n Filesystem type is ext2fs, using whole disk\n\nkernel /boot/vmlinuz-2.6.35.14-95.38.amzn1.i686 root=LABEL=/ console=hvc0 LANG=\n\nen_US.UTF-8 KEYTABLE=us\n\ninitrd /boot/initramfs-2.6.35.14-95.38.amzn1.i686.img\n\nERROR: mmu_update failed with rc=-22\nPotential cause\nIssue with Amazon Linux\nSuggested action\nPost your issue to AWS re:Post or contact Support.\nI/O error (block device failure)\nAn input/output error is indicated by a system log entry similar to the following example:\n[9943662.053217] end_request: I/O error, dev sde, sector 52428288\n[9943664.191262] end_request: I/O error, dev sde, sector 52428168\n[9943664.191285] Buffer I/O error on device md0, logical block 209713024\n[9943664.191297] Buffer I/O error on device md0, logical block 209713025\n[9943664.191304] Buffer I/O error on device md0, logical block 209713026\n[9943664.191310] Buffer I/O error on device md0, logical block 209713027\n[9943664.191317] Buffer I/O error on device md0, logical block 209713028\n[9943664.191324] Buffer I/O error on device md0, logical block 209713029\n[9943664.191332] Buffer I/O error on device md0, logical block 209713030\n[9943664.191339] Buffer I/O error on device md0, logical block 209713031\n[9943664.191581] end_request: I/O error, dev sde, sector 52428280\n[9943664.191590] Buffer I/O error on device md0, logical block 209713136\n[9943664.191597] Buffer I/O error on device md0, logical block 209713137\n[9943664.191767] end_request: I/O error, dev sde, sector 52428288\n[9943664.191970] end_request: I/O error, dev sde, sector 52428288\n[9943664.192143] end_request: I/O error, dev sde, sector 52428288\n[9943664.192949] end_request: I/O error, dev sde, sector 52428288\n[9943664.193112] end_request: I/O error, dev sde, sector 52428288\n[9943664.193266] end_request: I/O error, dev sde, sector 52428288\n...\nPotential causes\nInstance type Potential cause\nAmazon EBS-backed\nA failed Amazon EBS volume\nInstance store-backed\nA failed physical drive\nSuggested actions\nFor this instance type Do this\nAmazon EBS-backed\nUse the following procedure:\nStop the instance.\nDetach the volume.\nAttempt to recover the volume.\nNote\nIt's good practice to snapshot your Amazon EBS volumes often. This dramatically decreases the risk of data loss as a result of failure.\nRe-attach the volume to the instance.\nStart the instance.\nInstance store-backed\nTerminate the instance and launch a new instance.\nNote\nData cannot be recovered. Recover from backups.\nNote\nIt's a good practice to use either Amazon S3 or Amazon EBS for backups. Instance store volumes are directly tied to single host and single disk failures.\nI/O ERROR: neither local nor remote disk (Broken distributed block device)\nAn input/output error on the device is indicated by a system log entry similar to the following example:\n...\nblock drbd1: Local IO failed in request_timer_fn. Detaching...\n\nAborting journal on device drbd1-8.\n\nblock drbd1: IO ERROR: neither local nor remote disk\n\nBuffer I/O error on device drbd1, logical block 557056\n\nlost page write due to I/O error on drbd1\n\nJBD2: I/O error detected when updating journal superblock for drbd1-8.\nPotential causes\nInstance type Potential cause\nAmazon EBS-backed\nA failed Amazon EBS volume\nInstance store-backed\nA failed physical drive\nSuggested action\nTerminate the instance and launch a new instance.\nFor an Amazon EBS-backed instance you can recover data from a recent snapshot by creating an image from it. Any data added after the snapshot cannot be recovered.\nrequest_module: runaway loop modprobe (Looping legacy kernel modprobe on older Linux versions)\nThis condition is indicated by a system log similar to the one shown below. Using an unstable or old Linux kernel (for example, 2.6.16-xenU) can cause an interminable loop condition at startup.\nLinux version 2.6.16-xenU (builder@xenbat.amazonsa) (gcc version 4.0.1 \n20050727 (Red Hat 4.0.1-5)) #1 SMP Mon May 28 03:41:49 SAST 2007\n\nBIOS-provided physical RAM map:\n\n Xen: 0000000000000000 - 0000000026700000 (usable)\n\n0MB HIGHMEM available.\n...\n\nrequest_module: runaway loop modprobe binfmt-464c\n\nrequest_module: runaway loop modprobe binfmt-464c\n\nrequest_module: runaway loop modprobe binfmt-464c\n\nrequest_module: runaway loop modprobe binfmt-464c\n\nrequest_module: runaway loop modprobe binfmt-464c\nSuggested actions\nFor this instance type Do this\nAmazon EBS-backed\nUse a newer kernel, either GRUB-based or static, using one of the following options:\nOption 1: Terminate the instance and launch a new instance, specifying the -kernel and -ramdisk parameters.\nOption 2:\nStop the instance.\nModify the kernel and ramdisk attributes to use a newer kernel.\nStart the instance.\nInstance store-backed\nTerminate the instance and launch a new instance, specifying the -kernel and -ramdisk parameters.\n\"FATAL: kernel too old\" and \"fsck: No such file or directory while trying to open /dev\" (Kernel and AMI mismatch)\nThis condition is indicated by a system log similar to the one shown below.\nLinux version 2.6.16.33-xenU (root@dom0-0-50-45-1-a4-ee.z-2.aes0.internal) \n(gcc version 4.1.1 20070105 (Red Hat 4.1.1-52)) #2 SMP Wed Aug 15 17:27:36 SAST 2007\n...\nFATAL: kernel too old\nKernel panic - not syncing: Attempted to kill init!\nPotential causes\nIncompatible kernel and userland\nSuggested actions\nFor this instance type Do this\nAmazon EBS-backed\nUse the following procedure:\nStop the instance.\nModify the configuration to use a newer kernel.\nStart the instance.\nInstance store-backed\nUse the following procedure:\nCreate an AMI that uses a newer kernel.\nTerminate the instance.\nStart a new instance from the AMI you created.\n\"FATAL: Could not load /lib/modules\" or \"BusyBox\" (Missing kernel modules)\nThis condition is indicated by a system log similar to the one shown below.\n[    0.370415] Freeing unused kernel memory: 1716k freed \nLoading, please wait...\nWARNING: Couldn't open directory /lib/modules/2.6.34-4-virtual: No such file or directory\nFATAL: Could not open /lib/modules/2.6.34-4-virtual/modules.dep.temp for writing: No such file or directory\nFATAL: Could not load /lib/modules/2.6.34-4-virtual/modules.dep: No such file or directory\nCouldn't get a file descriptor referring to the console\nBegin: Loading essential drivers... ...\nFATAL: Could not load /lib/modules/2.6.34-4-virtual/modules.dep: No such file or directory\nFATAL: Could not load /lib/modules/2.6.34-4-virtual/modules.dep: No such file or directory\nDone.\nBegin: Running /scripts/init-premount ...\nDone.\nBegin: Mounting root file system... ...\nBegin: Running /scripts/local-top ...\nDone.\nBegin: Waiting for root file system... ...\nDone.\nGave up waiting for root device.  Common problems:\n - Boot args (cat /proc/cmdline)\n   - Check rootdelay= (did the system wait long enough?)\n   - Check root= (did the system wait for the right device?)\n - Missing modules (cat /proc/modules; ls /dev)\nFATAL: Could not load /lib/modules/2.6.34-4-virtual/modules.dep: No such file or directory\nFATAL: Could not load /lib/modules/2.6.34-4-virtual/modules.dep: No such file or directory\nALERT! /dev/sda1 does not exist. Dropping to a shell!\n\n\nBusyBox v1.13.3 (Ubuntu 1:1.13.3-1ubuntu5) built-in shell (ash)\nEnter 'help' for a list of built-in commands.\n\n(initramfs)\nPotential causes\nOne or more of the following conditions can cause this problem:\nMissing ramdisk\nMissing correct modules from ramdisk\nAmazon EBS root volume not correctly attached as /dev/sda1\nSuggested actions\nFor this instance type Do this\nAmazon EBS-backed\nUse the following procedure:\nSelect corrected ramdisk for the Amazon EBS volume.\nStop the instance.\nDetach the volume and repair it.\nAttach the volume to the instance.\nStart the instance.\nModify the AMI to use the corrected ramdisk.\nInstance store-backed\nUse the following procedure:\nTerminate the instance and launch a new instance with the correct ramdisk.\nCreate a new AMI with the correct ramdisk.\nERROR Invalid kernel (EC2 incompatible kernel)\nThis condition is indicated by a system log similar to the one shown below.\n...\nroot (hd0)\n\n Filesystem type is ext2fs, using whole disk\n\nkernel /vmlinuz root=/dev/sda1 ro\n\ninitrd /initrd.img\n\nERROR Invalid kernel: elf_xen_note_check: ERROR: Will only load images \nbuilt for the generic loader or Linux images\nxc_dom_parse_image returned -1\n\nError 9: Unknown boot failure\n\n  Booting 'Fallback'\n  \nroot (hd0)\n\n Filesystem type is ext2fs, using whole disk\n\nkernel /vmlinuz.old root=/dev/sda1 ro\n\nError 15: File not found\nPotential causes\nOne or both of the following conditions can cause this problem:\nSupplied kernel is not supported by GRUB\nFallback kernel does not exist\nSuggested actions\nFor this instance type Do this\nAmazon EBS-backed\nUse the following procedure:\nStop the instance.\nReplace with working kernel.\nInstall a fallback kernel.\nModify the AMI by correcting the kernel.\nInstance store-backed\nUse the following procedure:\nTerminate the instance and launch a new instance with the correct kernel.\nCreate an AMI with the correct kernel.\n(Optional) Seek technical assistance for data recovery using Support.\nfsck: No such file or directory while trying to open... (File system not found)\nThis condition is indicated by a system log similar to the one shown below.\n  Welcome to Fedora \n  Press 'I' to enter interactive startup.\nSetting clock : Wed Oct 26 05:52:05 EDT 2011 [  OK  ]\n\nStarting udev: [  OK  ]\n\nSetting hostname localhost:  [  OK  ]\n\nNo devices found\nSetting up Logical Volume Management: File descriptor 7 left open\n  No volume groups found\n[  OK  ]\n\nChecking filesystems\nChecking all file systems.\n[/sbin/fsck.ext3 (1) -- /] fsck.ext3 -a /dev/sda1 \n/dev/sda1: clean, 82081/1310720 files, 2141116/2621440 blocks\n[/sbin/fsck.ext3 (1) -- /mnt/dbbackups] fsck.ext3 -a /dev/sdh \nfsck.ext3: No such file or directory while trying to open /dev/sdh\n\n/dev/sdh: \nThe superblock could not be read or does not describe a correct ext2\nfilesystem.  If the device is valid and it really contains an ext2\nfilesystem (and not swap or ufs or something else), then the superblock\nis corrupt, and you might try running e2fsck with an alternate superblock:\n    e2fsck -b 8193 <device>\n\n[FAILED]\n\n\n*** An error occurred during the file system check.\n*** Dropping you to a shell; the system will reboot\n*** when you leave the shell.\nGive root password for maintenance\n(or type Control-D to continue):\nPotential causes\nA bug exists in ramdisk filesystem definitions /etc/fstab\nMisconfigured filesystem definitions in /etc/fstab\nMissing/failed drive\nSuggested actions\nFor this instance type Do this\nAmazon EBS-backed\nUse the following procedure:\nStop the instance, detach the root volume, repair/modify /etc/fstab the volume, attach the volume to the instance, and start the instance.\nFix ramdisk to include modified /etc/fstab (if applicable).\nModify the AMI to use a newer ramdisk.\nThe sixth field in the fstab defines availability requirements of the mount \u2013 a nonzero value implies that an fsck will be done on that volume and must succeed. Using this field can be problematic in Amazon EC2 because a failure typically results in an interactive console prompt that is not currently available in Amazon EC2. Use care with this feature and read the Linux man page for fstab.\nInstance store-backed\nUse the following procedure:\nTerminate the instance and launch a new instance.\nDetach any errant Amazon EBS volumes and the reboot instance.\n(Optional) Seek technical assistance for data recovery using Support.\nGeneral error mounting filesystems (failed mount)\nThis condition is indicated by a system log similar to the one shown below.\nLoading xenblk.ko module \nxen-vbd: registered block device major 8\n\nLoading ehci-hcd.ko module\nLoading ohci-hcd.ko module\nLoading uhci-hcd.ko module\nUSB Universal Host Controller Interface driver v3.0\n\nLoading mbcache.ko module\nLoading jbd.ko module\nLoading ext3.ko module\nCreating root device.\nMounting root filesystem.\nkjournald starting.  Commit interval 5 seconds\n\nEXT3-fs: mounted filesystem with ordered data mode.\n\nSetting up other filesystems.\nSetting up new root fs\nno fstab.sys, mounting internal defaults\nSwitching to new root and running init.\nunmounting old /dev\nunmounting old /proc\nunmounting old /sys\nmountall:/proc: unable to mount: Device or resource busy\nmountall:/proc/self/mountinfo: No such file or directory\nmountall: root filesystem isn't mounted\ninit: mountall main process (221) terminated with status 1\n\nGeneral error mounting filesystems.\nA maintenance shell will now be started.\nCONTROL-D will terminate this shell and re-try.\nPress enter for maintenance\n(or type Control-D to continue):\nPotential causes\nInstance type Potential cause\nAmazon EBS-backed\nDetached or failed Amazon EBS volume.\nCorrupted filesystem.\nMismatched ramdisk and AMI combination (such as Debian ramdisk with a SUSE AMI).\nInstance store-backed\nA failed drive.\nA corrupted file system.\nA mismatched ramdisk and combination (for example, a Debian ramdisk with a SUSE AMI).\nSuggested actions\nFor this instance type Do this\nAmazon EBS-backed\nUse the following procedure:\nStop the instance.\nDetach the root volume.\nAttach the root volume to a known working instance.\nRun filesystem check (fsck -a /dev/...).\nFix any errors.\nDetach the volume from the known working instance.\nAttach the volume to the stopped instance.\nStart the instance.\nRecheck the instance status.\nInstance store-backed\nTry one of the following:\nStart a new instance.\n(Optional) Seek technical assistance for data recovery using Support.\nVFS: Unable to mount root fs on unknown-block (Root filesystem mismatch)\nThis condition is indicated by a system log similar to the one shown below.\nLinux version 2.6.16-xenU (builder@xenbat.amazonsa) (gcc version 4.0.1 \n 20050727 (Red Hat 4.0.1-5)) #1 SMP Mon May 28 03:41:49 SAST 2007\n...\nKernel command line:  root=/dev/sda1 ro 4\n...\nRegistering block device major 8\n...\nKernel panic - not syncing: VFS: Unable to mount root fs on unknown-block(8,1)\nPotential causes\nInstance type Potential cause\nAmazon EBS-backed\nDevice not attached correctly.\nRoot device not attached at correct device point.\nFilesystem not in expected format.\nUse of legacy kernel (such as 2.6.16-XenU).\nA recent kernel update on your instance (faulty update, or an update bug)\nInstance store-backed\nHardware device failure.\nSuggested actions\nFor this instance type Do this\nAmazon EBS-backed\nDo one of the following:\nStop and then restart the instance.\nModify root volume to attach at the correct device point, possible /dev/sda1 instead of /dev/sda.\nStop and modify to use modern kernel.\nRefer to the documentation for your Linux distribution to check for known update bugs. Change or reinstall the kernel.\nInstance store-backed\nTerminate the instance and launch a new instance using a modern kernel.\nError: Unable to determine major/minor number of root device... (Root file system/device mismatch)\nThis condition is indicated by a system log similar to the one shown below.\n...\nXENBUS: Device with no driver: device/vif/0\nXENBUS: Device with no driver: device/vbd/2048\ndrivers/rtc/hctosys.c: unable to open rtc device (rtc0)\nInitializing network drop monitor service\nFreeing unused kernel memory: 508k freed\n:: Starting udevd...\ndone.\n:: Running Hook [udev]\n:: Triggering uevents...<30>udevd[65]: starting version 173\ndone.\nWaiting 10 seconds for device /dev/xvda1 ...\nRoot device '/dev/xvda1' doesn't exist. Attempting to create it.\nERROR: Unable to determine major/minor number of root device '/dev/xvda1'.\nYou are being dropped to a recovery shell\n    Type 'exit' to try and continue booting\nsh: can't access tty; job control turned off\n[ramfs /]#\nPotential causes\nMissing or incorrectly configured virtual block device driver\nDevice enumeration clash (sda versus xvda or sda instead of sda1)\nIncorrect choice of instance kernel\nSuggested actions\nFor this instance type Do this\nAmazon EBS-backed\nUse the following procedure:\nStop the instance.\nDetach the volume.\nFix the device mapping problem.\nStart the instance.\nModify the AMI to address device mapping issues.\nInstance store-backed\nUse the following procedure:\nCreate a new AMI with the appropriate fix (map block device correctly).\nTerminate the instance and launch a new instance from the AMI you created.\nXENBUS: Device with no driver...\nThis condition is indicated by a system log similar to the one shown below.\nXENBUS: Device with no driver: device/vbd/2048\ndrivers/rtc/hctosys.c: unable to open rtc device (rtc0)\nInitializing network drop monitor service\nFreeing unused kernel memory: 508k freed\n:: Starting udevd...\ndone.\n:: Running Hook [udev]\n:: Triggering uevents...<30>udevd[65]: starting version 173\ndone.\nWaiting 10 seconds for device /dev/xvda1 ...\nRoot device '/dev/xvda1' doesn't exist. Attempting to create it.\nERROR: Unable to determine major/minor number of root device '/dev/xvda1'.\nYou are being dropped to a recovery shell\n    Type 'exit' to try and continue booting\nsh: can't access tty; job control turned off\n[ramfs /]#\nPotential causes\nMissing or incorrectly configured virtual block device driver\nDevice enumeration clash (sda versus xvda)\nIncorrect choice of instance kernel\nSuggested actions\nFor this instance type Do this\nAmazon EBS-backed\nUse the following procedure:\nStop the instance.\nDetach the volume.\nFix the device mapping problem.\nStart the instance.\nModify the AMI to address device mapping issues.\nInstance store-backed\nUse the following procedure:\nCreate an AMI with the appropriate fix (map block device correctly).\nTerminate the instance and launch a new instance using the AMI you created.\n... days without being checked, check forced (File system check required)\nThis condition is indicated by a system log similar to the one shown below.\n...\nChecking filesystems\nChecking all file systems.\n[/sbin/fsck.ext3 (1) -- /] fsck.ext3 -a /dev/sda1 \n/dev/sda1 has gone 361 days without being checked, check forced\nPotential causes\nFilesystem check time passed; a filesystem check is being forced.\nSuggested actions\nWait until the filesystem check completes. A filesystem check can take a long time depending on the size of the root filesystem.\nModify your filesystems to remove the filesystem check (fsck) enforcement using tune2fs or tools appropriate for your filesystem.\nfsck died with exit status... (Missing device)\nThis condition is indicated by a system log similar to the one shown below.\nCleaning up ifupdown....\nLoading kernel modules...done.\n...\nActivating lvm and md swap...done.\nChecking file systems...fsck from util-linux-ng 2.16.2\n/sbin/fsck.xfs: /dev/sdh does not exist\nfsck died with exit status 8\n[31mfailed (code 8).[39;49m\nPotential causes\nRamdisk looking for missing drive\nFilesystem consistency check forced\nDrive failed or detached\nSuggested actions\nFor this instance type Do this\nAmazon EBS-backed\nTry one or more of the following to resolve the issue:\nStop the instance, attach the volume to an existing running instance.\nManually run consistency checks.\nFix ramdisk to include relevant utilities.\nModify filesystem tuning parameters to remove consistency requirements (not recommended).\nInstance store-backed\nTry one or more of the following to resolve the issue:\nRebundle ramdisk with correct tooling.\nModify file system tuning parameters to remove consistency requirements (not recommended).\nTerminate the instance and launch a new instance.\n(Optional) Seek technical assistance for data recovery using Support.\nGRUB prompt (grubdom>)\nThis condition is indicated by a system log similar to the one shown below.\n    GNU GRUB  version 0.97  (629760K lower / 0K upper memory)\n\n       [ Minimal BASH-like line editing is supported.   For\n\n         the   first   word,  TAB  lists  possible  command\n\n         completions.  Anywhere else TAB lists the possible\n\n         completions of a device/filename. ]\n\ngrubdom> \nPotential causes\nInstance type Potential causes\nAmazon EBS-backed\nMissing GRUB configuration file.\nIncorrect GRUB image used, expecting GRUB configuration file at a different location.\nUnsupported filesystem used to store your GRUB configuration file (for example, converting your root file system to a type that is not supported by an earlier version of GRUB).\nInstance store-backed\nMissing GRUB configuration file.\nIncorrect GRUB image used, expecting GRUB configuration file at a different location.\nUnsupported filesystem used to store your GRUB configuration file (for example, converting your root file system to a type that is not supported by an earlier version of GRUB).\nSuggested actions\nFor this instance type Do this\nAmazon EBS-backed\nOption 1: Modify the AMI and relaunch the instance:\nModify the source AMI to create a GRUB configuration file at the standard location (/boot/grub/menu.lst).\nVerify that your version of GRUB supports the underlying file system type and upgrade GRUB if necessary.\nPick the appropriate GRUB image, (hd0-1st drive or hd00 \u2013 1st drive, 1st partition).\nTerminate the instance and launch a new one using the AMI that you created.\nOption 2: Fix the existing instance:\nStop the instance.\nDetach the root filesystem.\nAttach the root filesystem to a known working instance.\nMount filesystem.\nCreate a GRUB configuration file.\nVerify that your version of GRUB supports the underlying file system type and upgrade GRUB if necessary.\nDetach filesystem.\nAttach to the original instance.\nModify kernel attribute to use the appropriate GRUB image (1st disk or 1st partition on 1st disk).\nStart the instance.\nInstance store-backed\nOption 1: Modify the AMI and relaunch the instance:\nCreate the new AMI with a GRUB configuration file at the standard location (/boot/grub/menu.lst).\nPick the appropriate GRUB image, (hd0-1st drive or hd00 \u2013 1st drive, 1st partition).\nVerify that your version of GRUB supports the underlying file system type and upgrade GRUB if necessary.\nTerminate the instance and launch a new instance using the AMI you created.\nOption 2: Terminate the instance and launch a new instance, specifying the correct kernel.\nNote\nTo recover data from the existing instance, contact Support.\nBringing up interface eth0: Device eth0 has different MAC address than expected, ignoring. (Hard-coded MAC address)\nThis condition is indicated by a system log similar to the one shown below.\n... \nBringing up loopback interface:  [  OK  ]\n\nBringing up interface eth0:  Device eth0 has different MAC address than expected, ignoring.\n[FAILED]\n\nStarting auditd: [  OK  ]\nPotential causes\nThere is a hardcoded interface MAC in the AMI configuration\nSuggested actions\nFor this instance type Do this\nAmazon EBS-backed\nDo one of the following:\nModify the AMI to remove the hardcoding and relaunch the instance.\nModify the instance to remove the hardcoded MAC address.\nOR\nUse the following procedure:\nStop the instance.\nDetach the root volume.\nAttach the volume to another instance and modify the volume to remove the hardcoded MAC address.\nAttach the volume to the original instance.\nStart the instance.\nInstance store-backed\nDo one of the following:\nModify the instance to remove the hardcoded MAC address.\nTerminate the instance and launch a new instance.\nUnable to load SELinux Policy. Machine is in enforcing mode. Halting now. (SELinux misconfiguration)\nThis condition is indicated by a system log similar to the one shown below.\naudit(1313445102.626:2): enforcing=1 old_enforcing=0 auid=4294967295\nUnable to load SELinux Policy. Machine is in enforcing mode. Halting now.\nKernel panic - not syncing: Attempted to kill init!\nPotential causes\nSELinux has been enabled in error:\nSupplied kernel is not supported by GRUB\nFallback kernel does not exist\nSuggested actions\nFor this instance type Do this\nAmazon EBS-backed\nUse the following procedure:\nStop the failed instance.\nDetach the failed instance's root volume.\nAttach the root volume to another running Linux instance (later referred to as a recovery instance).\nConnect to the recovery instance and mount the failed instance's root volume.\nDisable SELinux on the mounted root volume. This process varies across Linux distributions; for more information, consult your OS-specific documentation.\nNote\nOn some systems, you disable SELinux by setting SELINUX=disabled in the /mount_point/etc/sysconfig/selinux file, where mount_point is the location that you mounted the volume on your recovery instance.\nUnmount and detach the root volume from the recovery instance and reattach it to the original instance.\nStart the instance.\nInstance store-backed\nUse the following procedure:\nTerminate the instance and launch a new instance.\n(Optional) Seek technical assistance for data recovery using Support.\nXENBUS: Timeout connecting to devices (Xenbus timeout)\nThis condition is indicated by a system log similar to the one shown below.\nLinux version 2.6.16-xenU (builder@xenbat.amazonsa) (gcc version 4.0.1 \n20050727 (Red Hat 4.0.1-5)) #1 SMP Mon May 28 03:41:49 SAST 2007\n...\nXENBUS: Timeout connecting to devices!\n...\nKernel panic - not syncing: No init found.  Try passing init= option to kernel.\nPotential causes\nThe block device is not connected to the instance\nThis instance is using an old instance kernel\nSuggested actions\nFor this instance type Do this\nAmazon EBS-backed\nDo one of the following:\nModify the AMI and instance to use a modern kernel and relaunch the instance.\nReboot the instance.\nInstance store-backed\nDo one of the following:\nTerminate the instance.\nModify the AMI to use a modern kernel, and launch a new instance using this AMI."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-booting-from-wrong-volume.html",
        "content": "In some situations, a volume other than the volume attached to /dev/xvda or /dev/sda becomes the root volume of a Linux instance. This can happen when you have attached the root volume of another instance, or a volume created from the snapshot of a root volume, to an instance with an existing root volume.\nThis is due to how the initial ramdisk in Linux works. It chooses the volume defined as / in the /etc/fstab, and in some distributions, this is determined by the label attached to the volume partition. Specifically, you find that your /etc/fstab looks something like the following:\nLABEL=/ / ext4 defaults,noatime 1 1 \ntmpfs /dev/shm tmpfs defaults 0 0 \ndevpts /dev/pts devpts gid=5,mode=620 0 0 \nsysfs /sys sysfs defaults 0 0 \nproc /proc proc defaults 0 0\nIf you check the label of both volumes, you see that they both contain the / label:\n[ec2-user ~]$ sudo e2label /dev/xvda1 \n/ \n[ec2-user ~]$ sudo e2label /dev/xvdf1 \n/\nIn this example, you could end up having /dev/xvdf1 become the root device that your instance boots to after the initial ramdisk runs, instead of the /dev/xvda1 volume from which you had intended to boot. To solve this, use the same e2label command to change the label of the attached volume that you do not want to boot from.\nIn some cases, specifying a UUID in /etc/fstab can resolve this. However, if both volumes come from the same snapshot, or the secondary is created from a snapshot of the primary volume, they share a UUID.\n[ec2-user ~]$ sudo blkid \n/dev/xvda1: LABEL=\"/\" UUID=73947a77-ddbe-4dc7-bd8f-3fe0bc840778 TYPE=\"ext4\" PARTLABEL=\"Linux\" PARTUUID=d55925ee-72c8-41e7-b514-7084e28f7334 \n/dev/xvdf1: LABEL=\"old/\" UUID=73947a77-ddbe-4dc7-bd8f-3fe0bc840778 TYPE=\"ext4\" PARTLABEL=\"Linux\" PARTUUID=d55925ee-72c8-41e7-b514-7084e28f7334\nTo change the label of an attached ext4 volume\nUse the e2label command to change the label of the volume to something other than /.\n[ec2-user ~]$ sudo e2label /dev/xvdf1 old/ \nVerify that the volume has the new label.\n[ec2-user ~]$ sudo e2label /dev/xvdf1 \nold/\nTo change the label of an attached xfs volume\nUse the xfs_admin command to change the label of the volume to something other than /.\n[ec2-user ~]$ sudo xfs_admin -L old/ /dev/xvdf1\nwriting all SBs\nnew label = \"old/\"\nAfter changing the volume label as shown, you should be able to reboot the instance and have the proper volume selected by the initial ramdisk when the instance boots.\nImportant\nIf you intend to detach the volume with the new label and return it to another instance to use as the root volume, you must perform the above procedure again and change the volume label back to its original value. Otherwise, the other instance does not boot because the ramdisk is unable to find the volume with the label /."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/troubleshoot-connect-windows-instance.html",
        "content": "The following information and common errors can help you troubleshoot issues when connecting to your Windows instance.\nConnection issues\nRemote Desktop can't connect to the remote computer\nError using the macOS RDP client\nRDP displays a black screen instead of the desktop\nUnable to remotely log on to an instance with a user that is not an administrator\nTroubleshooting Remote Desktop issues using AWS Systems Manager\nEnable Remote Desktop on an EC2 instance with remote registry\nI've lost my private key. How can I connect to my Windows instance?\nRemote Desktop can't connect to the remote computer\nTry the following to resolve issues related to connecting to your instance:\nVerify that you're using the correct public DNS hostname. (In the Amazon EC2 console, select the instance and check Public DNS (IPv4) in the details pane.) If your instance is in a VPC and you do not see a public DNS name, you must enable DNS hostnames. For more information, see DNS attributes for your VPC in the Amazon VPC User Guide.\nVerify that your instance has a public IPv4 address. If not, you can associate an Elastic IP address with your instance. For more information, see Elastic IP addresses.\nTo connect to your instance using an IPv6 address, check that your local computer has an IPv6 address and is configured to use IPv6. For more information, see Configure IPv6 on your instances in the Amazon VPC User Guide.\nVerify that your security group has a rule that allows RDP access on port 3389.\nIf you copied the password but get the error Your credentials did not work, try typing them manually when prompted. It's possible that you missed a character or got an extra white space character when you copied the password.\nVerify that the instance has passed status checks. For more information, see Status checks for Amazon EC2 instances and Troubleshoot Amazon EC2 Linux instances with failed status checks.\nVerify that the route table for the subnet has a route that sends all traffic destined outside the VPC to the internet gateway for the VPC. For more information, see Creating a custom route table (Internet Gateways) in the Amazon VPC User Guide.\nVerify that Windows Firewall, or other firewall software, is not blocking RDP traffic to the instance. We recommend that you disable Windows Firewall and control access to your instance using security group rules. You can use AWSSupport-TroubleshootRDP to disable the Windows Firewall profiles using SSM Agent . To disable Windows Firewall on a Windows instance that is not configured for AWS Systems Manager, use AWSSupport-ExecuteEC2Rescue, or use the following manual steps:\nManual steps\nVerify that Network Level Authentication is disabled on instances that are not part of an Active Directory domain (use AWSSupport-TroubleshootRDP to disable NLA).\nVerify that the Remote Desktop Service (TermService) Startup Type is Automatic and the service is started (use AWSSupport-TroubleshootRDP to enable and start the RDP service).\nVerify that you are connecting to the correct Remote Desktop Protocol port, which by default is 3389 (use AWSSupport-TroubleshootRDP to read the current RDP port and change it back to 3389).\nVerify that Remote Desktop connections are allowed on your instance (use AWSSupport-TroubleshootRDP to enable Remote Desktop connections).\nVerify that the password has not expired. If the password has expired, you can reset it. For more information, see Reset the Windows administrator password for an Amazon EC2 Windows instance.\nIf you attempt to connect using a user that you created on the instance and receive the error The user cannot connect to the server due to insufficient access privileges, verify that you granted the user the right to log on locally. For more information, see Grant a Member the Right to Logon Locally.\nIf you attempt more than the maximum allowed concurrent RDP sessions, your session is terminated with the message Your Remote Desktop Services session has ended. Another user connected to the remote computer, so your connection was lost. By default, you are allowed two concurrent RDP sessions to your instance.\nError using the macOS RDP client\nIf you are connecting to a Windows Server instance using the Remote Desktop Connection client from the Microsoft website, you may get the following error:\nRemote Desktop Connection cannot verify the identity of the computer that you want to connect to.\nDownload the Microsoft Remote Desktop app from the Mac App Store and use the app to connect to your instance.\nRDP displays a black screen instead of the desktop\nTry the following to resolve this issue:\nCheck the console output for additional information. To get the console output for your instance using the Amazon EC2 console, select the instance, and then choose Actions, Monitor and troubleshoot, Get system log.\nVerify that you are running the latest version of your RDP client.\nTry the default settings for the RDP client.\nIf you are using Remote Desktop Connection, try starting it with the /admin option as follows.\nmstsc /v:instance /admin\nIf the server is running a full-screen application, it might have stopped responding. Use Ctrl+Shift+Esc to start Windows Task Manager, and then close the application.\nIf the server is over-utilized, it might have stopped responding. To monitor the instance using the Amazon EC2 console, select the instance and then select the Monitoring tab. If you need to change the instance type to a larger size, see Amazon EC2 instance type changes.\nUnable to remotely log on to an instance with a user that is not an administrator\nIf you are not able to remotely log on to a Windows instance with a user that is not an administrator account, ensure that you have granted the user the right to log on locally. See Grant a user or group the right to log on locally to the domain controllers in the domain.\nTroubleshooting Remote Desktop issues using AWS Systems Manager\nYou can use AWS Systems Manager to troubleshoot issues connecting to your Windows instance using RDP.\nAWSSupport-TroubleshootRDP\nThe AWSSupport-TroubleshootRDP automation document allows the user to check or modify common settings on the target instance that can impact Remote Desktop Protocol (RDP) connections, such as the RDP Port, Network Layer Authentication (NLA), and Windows Firewall profiles. By default, the document reads and outputs the values of these settings.\nThe AWSSupport-TroubleshootRDP automation document can be used with EC2 instances, on-premises instances, and virtual machines (VMs) that are enabled for use with AWS Systems Manager (managed instances). In addition, it can also be used with EC2 instances for Windows Server that are not enabled for use with Systems Manager. For information about enabling instances for use with AWS Systems Manager, see Managed nodes in theAWS Systems Manager User Guide.\nTo troubleshoot using the AWSSupport-TroubleshootRDP document\nLog in to the Systems Manager Console.\nVerify that you are in the same Region as the impaired instance.\nChoose Documents from the left navigation pane.\nOn the Owned by Amazon tab, enter AWSSupport-TroubleshootRDP in the search field. When the AWSSupport-TroubleshootRDP document appears, select it.\nChoose Execute automation.\nFor Execution Mode, choose Simple execution.\nFor Input parameters, InstanceId, enable Show interactive instance picker.\nChoose your Amazon EC2 instance.\nReview the examples, then choose Execute.\nTo monitor the execution progress, for Execution status, wait for the status to change from Pending to Success. Expand Outputs to view the results. To view the output of individual steps, in Executed Steps, choose an item from Step ID.\nAWSSupport-TroubleshootRDP examples\nThe following examples show you how to accomplish common troubleshooting tasks using AWSSupport-TroubleshootRDP. You can use either the example AWS CLI start-automation-execution command or the provided link to the AWS Management Console.\nExample: Check the current RDP status\nAWS CLI:\naws ssm start-automation-execution --document-name \"AWSSupport-TroubleshootRDP\" --parameters \"InstanceId=instance_id, Action=Custom\" --region region_code\nAWS Systems Manager console:\nhttps://console.aws.amazon.com/systems-manager/automation/execute/AWSSupport-TroubleshootRDP?region=region#documentVersion=$LATEST\nExample: Disable the Windows Firewall\nAWS CLI:\naws ssm start-automation-execution --document-name \"AWSSupport-TroubleshootRDP\" --parameters \"InstanceId=instance_id, Action=Custom, Firewall=Disable\" --region region_code\nAWS Systems Manager console:\nhttps://console.aws.amazon.com/systems-manager/automation/execute/AWSSupport-TroubleshootRDP?region=region_code#documentVersion=$LATEST&Firewall=Disable\nExample: Disable Network Level Authentication\nAWS CLI:\naws ssm start-automation-execution --document-name \"AWSSupport-TroubleshootRDP\" --parameters \"InstanceId=instance_id, Action=Custom, NLASettingAction=Disable\" --region region_code\nAWS Systems Manager console:\nhttps://console.aws.amazon.com/systems-manager/automation/execute/AWSSupport-TroubleshootRDP?region=region_code#documentVersion\nExample: Set RDP Service Startup Type to Automatic and start the RDP service\nAWS CLI:\naws ssm start-automation-execution --document-name \"AWSSupport-TroubleshootRDP\" --parameters \"InstanceId=instance_id, Action=Custom, RDPServiceStartupType=Auto, RDPServiceAction=Start\" --region region_code\nAWS Systems Manager console:\nhttps://console.aws.amazon.com/systems-manager/automation/execute/AWSSupport-TroubleshootRDP?region=region_code#documentVersion=$LATEST&RDPServiceStartupType=Auto&RDPServiceAction=Start\nExample: Restore the default RDP Port (3389)\nAWS CLI:\naws ssm start-automation-execution --document-name \"AWSSupport-TroubleshootRDP\" --parameters \"InstanceId=instance_id, Action=Custom, RDPPortAction=Modify\" --region region_code\nAWS Systems Manager console:\nhttps://console.aws.amazon.com/systems-manager/automation/execute/AWSSupport-TroubleshootRDP?region=region_code#documentVersion=$LATEST&RDPPortAction=Modify\nExample: Allow remote connections\nAWS CLI:\naws ssm start-automation-execution --document-name \"AWSSupport-TroubleshootRDP\" --parameters \"InstanceId=instance_id, Action=Custom, RemoteConnections=Enable\" --region region_code\nAWS Systems Manager console:\nhttps://console.aws.amazon.com/systems-manager/automation/execute/AWSSupport-TroubleshootRDP?region=region_code#documentVersion=$LATEST&RemoteConnections=Enable\nAWSSupport-ExecuteEC2Rescue\nThe AWSSupport-ExecuteEC2Rescue automation document uses EC2Rescue for Windows Server to automatically troubleshoot and restore EC2 instance connectivity and RDP issues. For more information, see Run the EC2Rescue tool on unreachable instances.\nThe AWSSupport-ExecuteEC2Rescue automation document requires a stop and restart of the instance. Systems Manager Automation stops the instance and creates an Amazon Machine Image (AMI). Data stored in instance store volumes is lost. The public IP address changes if you are not using an Elastic IP address. For more information, see Run the EC2Rescue tool on unreachable instances in the AWS Systems Manager User Guide.\nTo troubleshoot using the AWSSupport-ExecuteEC2Rescue document\nOpen the Systems Manager console.\nVerify that you are in the same Region as the impaired Amazon EC2 instance.\nIn the navigation panel, choose Documents.\nSearch for and select the AWSSupport-ExecuteEC2Rescue document, and then choose Execute automation.\nIn Execution Mode, choose Simple execution.\nIn the Input parameters section, for UnreachableInstanceId, enter the Amazon EC2 instance ID of the unreachable instance.\n(Optional) For LogDestination, enter the Amazon Simple Storage Service (Amazon S3) bucket name if you want to collect operating system logs for troubleshooting your Amazon EC2 instance. Logs are automatically uploaded to the specified bucket.\nChoose Execute.\nTo monitor the execution progress, in Execution status, wait for the status to change from Pending to Success. Expand Outputs to view the results. To view the output of individual steps, in Executed Steps, choose the Step ID.\nEnable Remote Desktop on an EC2 instance with remote registry\nIf your unreachable instance is not managed by AWS Systems Manager Session Manager, then you can use remote registry to enable Remote Desktop.\nFrom the EC2 console, stop the unreachable instance.\nDetach the root volume of the unreachable instance and attach it to a reachable instance in the same Availability Zone as a storage volume. If you don't have a reachable instance in the same Availability Zone, launch one. Note the device name of the root volume on the unreachable instance.\nOn the reachable instance, open Disk Management. You can do so by running the following command in the Command Prompt window.\ndiskmgmt.msc\nRight click the newly attached volume that came from the unreachable instance, and then choose Online.\nOpen the Windows Registry Editor. You can do so by running the following command in the Command Prompt window.\nregedit\nIn Registry Editor, choose HKEY_LOCAL_MACHINE, then select File, Load Hive.\nSelect the drive of the attached volume, navigate to \\Windows\\System32\\config\\, select SYSTEM, and then choose Open.\nFor Key Name, enter a unique name for the hive and choose OK.\nBack up the registry hive before making any changes to the registry.\nIn the Registry Editor console tree, select the hive that you loaded: HKEY_LOCAL_MACHINE\\your-key-name.\nChoose File, Export.\nIn the Export Registry File dialog box, choose the location to which you want to save the backup copy, and then type a name for the backup file in the File name field.\nChoose Save.\nIn Registry Editor, navigate to HKEY_LOCAL_MACHINE\\your key name\\ControlSet001\\Control\\Terminal Server, and then, in the details pane, double-click fDenyTSConnections.\nIn the Edit DWORD value box, enter 0 in the Value data field.\nChoose OK.\nNote\nIf the value in the Value data field is 1, then the instance will deny remote desktop connections. A value of 0 allows remote desktop connections.\nIn Registry Editor, choose HKEY_LOCAL_MACHINE\\your-key-name, then select File, Unload Hive.\nClose Registry Editor and Disk Management.\nFrom the EC2 console, detach the volume from the reachable instance and then reattach it to the unreachable instance. When attaching the volume to the unreachable instance, enter the device name that you saved earlier in the device field.\nRestart the unreachable instance.\nI've lost my private key. How can I connect to my Windows instance?\nWhen you connect to a newly-launched Windows instance, you decrypt the password for the Administrator account using the private key for the key pair that you specified when you launched the instance.\nIf you lose the Administrator password and you no longer have the private key, you must reset the password or create a new instance. For more information, see Reset the Windows administrator password for an Amazon EC2 Windows instance. For steps to reset the password using an Systems Manager document, see Reset passwords and SSH keys on EC2 instances in the AWS Systems Manager User Guide."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/common-messages.html",
        "content": "The following are troubleshooting tips to help you solve password and activation issues with Amazon EC2 Windows instances.\nIssues\n\"Password is not available\"\n\"Password not available yet\"\n\"Cannot retrieve Windows password\"\n\"Waiting for the metadata service\"\n\"Unable to activate Windows\"\n\"Windows is not genuine (0x80070005)\"\n\"No Terminal Server License Servers available to provide a license\"\n\"Some settings are managed by your organization\"\n\"Password is not available\"\nTo connect to a Windows instance using Remote Desktop, you must specify an account and password. The accounts and passwords provided are based on the AMI that you used to launch the instance. You can either retrieve the auto-generated password for the Administrator account, or use the account and password that were in use in the original instance from which the AMI was created.\nYou can generate a password for the Administrator account for instances launched using a custom Windows AMI. To generate the password, you will need to configure some settings in the operating system before the AMI is created. For more information, see Create an Amazon EBS-backed AMI.\nIf your Windows instance isn't configured to generate a random password, you'll receive the following message when you retrieve the auto-generated password using the console:\nPassword is not available.\nThe instance was launched from a custom AMI, or the default password has changed. A\npassword cannot be retrieved for this instance. If you have forgotten your password, you can\nreset it using the Amazon EC2 configuration service. For more information, see Passwords for a\nWindows Server instance.\nCheck the console output for the instance to see whether the AMI that you used to launch it was created with password generation disabled. If password generation is disabled, the console output contains the following:\nEc2SetPassword: Disabled\nIf password generation is disabled and you don't remember the password for the original instance, you can reset the password for this instance. For more information, see Reset the Windows administrator password for an Amazon EC2 Windows instance.\n\"Password not available yet\"\nTo connect to a Windows instance using Remote Desktop, you must specify an account and password. The accounts and passwords provided are based on the AMI that you used to launch the instance. You can either retrieve the auto-generated password for the Administrator account, or use the account and password that were in use in the original instance from which the AMI was created.\nYour password should be available within a few minutes. If the password isn't available, you'll receive the following message when you retrieve the auto-generated password using the console:\nPassword not available yet.\nPlease wait at least 4 minutes after launching an instance before trying to retrieve the \nauto-generated password.\nIf it's been longer than four minutes and you still can't get the password, it's possible that the launch agent for your instance is not configured to generate a password. Verify by checking whether the console output is empty. For more information, see Unable to get console output.\nAlso verify that the AWS Identity and Access Management (IAM) account being used to access the Management Portal has the ec2:GetPasswordData action allowed. For more information about IAM permissions, see What is IAM?.\n\"Cannot retrieve Windows password\"\nTo retrieve the auto-generated password for the Administrator account, you must use the private key for the key pair that you specified when you launched the instance. If you didn't specify a key pair when you launched the instance, you'll receive the following message.\nCannot retrieve Windows password\nYou can terminate this instance and launch a new instance using the same AMI, making sure to specify a key pair.\n\"Waiting for the metadata service\"\nA Windows instance must obtain information from its instance metadata before it can activate itself. By default, the WaitForMetaDataAvailable setting ensures that the EC2Config service waits for the instance metadata to be accessible before continuing with the boot process. For more information, see Use instance metadata to manage your EC2 instance.\nIf the instance is failing the instance reachability test, try the following to resolve this issue.\nCheck the CIDR block for your VPC. A Windows instance cannot boot correctly if it's launched into a VPC that has an IP address range from 224.0.0.0 to 255.255.255.255 (Class D and Class E IP address ranges). These IP address ranges are reserved, and should not be assigned to host devices. We recommend that you create a VPC with a CIDR block from the private (non-publicly routable) IP address ranges as specified in RFC 1918.\nIt's possible that the system has been configured with a static IP address. Try creating a network interface and attaching it to the instance.\nTo enable DHCP on a Windows instance that you can't connect to\nStop the affected instance and detach its root volume.\nLaunch a temporary instance in the same Availability Zone as the affected instance.\nWarning\nIf your temporary instance is based on the same AMI that the original instance is based on, you must complete additional steps or you won't be able to boot the original instance after you restore its root volume because of a disk signature collision. Alternatively, select a different AMI for the temporary instance. For example, if the original instance uses the AWS Windows AMI for Windows Server 2016, launch the temporary instance using the AWS Windows AMI for Windows Server 2019.\nAttach the root volume from the affected instance to this temporary instance. Connect to the temporary instance, open the Disk Management utility, and bring the drive online.\nFrom the temporary instance, open Regedit and select HKEY_LOCAL_MACHINE. From the File menu, choose Load Hive. Select the drive, open the file Windows\\System32\\config\\SYSTEM, and specify a key name when prompted (you can use any name).\nSelect the key that you just loaded and navigate to ControlSet001\\Services\\Tcpip\\Parameters\\Interfaces. Each network interface is listed by a GUID. Select the correct network interface. If DHCP is disabled and a static IP address assigned, EnableDHCP is set to 0. To enable DHCP, set EnableDHCP to 1, and delete the following keys if they exist: NameServer, SubnetMask, IPAddress, and DefaultGateway. Select the key again, and from the File menu, choose Unload Hive.\nNote\nIf you have multiple network interfaces, you'll need to identify the correct interface to enable DHCP. To identify the correct network interface, review the following key values NameServer, SubnetMask, IPAddress, and DefaultGateway. These values display the static configuration of the previous instance.\n(Optional) If DHCP is already enabled, it's possible that you don't have a route to the metadata service. Updating EC2Config can resolve this issue.\nDownload and install the latest version of the EC2Config service. For more information about installing this service, see Install the latest version of EC2Config.\nExtract the files from the .zip file to the Temp directory on the drive you attached.\nOpen Regedit and select HKEY_LOCAL_MACHINE. From the File menu, choose Load Hive. Select the drive, open the file Windows\\System32\\config\\SOFTWARE, and specify a key name when prompted (you can use any name).\nSelect the key that you just loaded and navigate to Microsoft\\Windows\\CurrentVersion. Select the RunOnce key. (If this key doesn't exist, right-click CurrentVersion, point to New, select Key, and name the key RunOnce.) Right-click, point to New, and select String Value. Enter Ec2Install as the name and C:\\Temp\\Ec2Install.exe -q as the data.\nSelect the key again, and from the File menu, choose Unload Hive.\n(Optional) If your temporary instance is based on the same AMI that the original instance is based on, you must complete the following steps or you won't be able to boot the original instance after you restore its root volume because of a disk signature collision.\nWarning\nThe following procedure describes how to edit the Windows Registry using Registry Editor. If you are not familiar with the Windows Registry or how to safely make changes using Registry Editor, see Configure the Registry.\nOpen a command prompt, type regedit.exe, and press Enter.\nIn the Registry Editor, choose HKEY_LOCAL_MACHINE from the context menu (right-click), and then choose Find.\nType Windows Boot Manager and then choose Find Next.\nChoose the key named 11000001. This key is a sibling of the key you found in the previous step.\nIn the right pane, choose Element and then choose Modify from the context menu (right-click).\nLocate the four-byte disk signature at offset 0x38 in the data. Reverse the bytes to create the disk signature, and write it down. For example, the disk signature represented by the following data is E9EB3AA5:\n...\n0030  00 00 00 00 01 00 00 00\n0038  A5 3A EB E9 00 00 00 00\n0040  00 00 00 00 00 00 00 00\n...\nIn a Command Prompt window, run the following command to start Microsoft DiskPart.\ndiskpart\nRun the following DiskPart command to select the volume. (You can verify that the disk number is 1 using the Disk Management utility.)\nDISKPART> select disk 1\n\nDisk 1 is now the selected disk.\nRun the following DiskPart command to get the disk signature.\nDISKPART>  uniqueid disk\n\nDisk ID: 0C764FA8\nIf the disk signature shown in the previous step doesn't match the disk signature from BCD that you wrote down earlier, use the following DiskPart command to change the disk signature so that it matches:\nDISKPART> uniqueid disk id=E9EB3AA5\nUsing the Disk Management utility, bring the drive offline.\nNote\nThe drive is automatically offline if the temporary instance is running the same operating system as the affected instance, so you won't need to bring it offline manually.\nDetach the volume from the temporary instance. You can terminate the temporary instance if you have no further use for it.\nRestore the root volume of the affected instance by attaching the volume as /dev/sda1.\nStart the affected instance.\nIf you are connected to the instance, open an Internet browser from the instance and enter the following URL for the metadata server:\nhttp://169.254.169.254/latest/meta-data/\nIf you can't contact the metadata server, try the following to resolve the issue:\nDownload and install the latest version of the EC2Config service. For more information about installing this service, see Install the latest version of EC2Config.\nCheck whether the Windows instance is running Red Hat PV drivers. If so, update to Citrix PV drivers. For more information, see Upgrade PV drivers on EC2 Windows instances.\nVerify that the firewall, IPSec, and proxy settings do not block outgoing traffic to the metadata service (169.254.169.254) or the AWS KMS servers (the addresses are specified in TargetKMSServer elements in C:\\Program Files\\Amazon\\Ec2ConfigService\\Settings\\ActivationSettings.xml).\nVerify that you have a route to the metadata service (169.254.169.254) using the following command.\nroute print\nCheck for network issues that might affect the Availability Zone for your instance. Go to http://status.aws.amazon.com/.\n\"Unable to activate Windows\"\nWindows instances use Windows AWS KMS activation. You can receive this message: A problem occurred when Windows tried to activate. Error Code 0xC004F074, if your instance can't reach the AWS KMS server. Windows must be activated every 180 days. EC2Config attempts to contact the AWS KMS server before the activation period expires to ensure that Windows remains activated.\nIf you encounter a Windows activation issue, use the following procedure to resolve the issue.\nFor EC2Config (Windows Server 2012 R2 AMIs and earlier)\nDownload and install the latest version of the EC2Config service. For more information about installing this service, see Install the latest version of EC2Config.\nLog onto the instance and open the following file: C:\\Program Files\\Amazon\\Ec2ConfigService\\Settings\\config.xml.\nLocate the Ec2WindowsActivate plugin in the config.xml file. Change the state to Enabled and save your changes.\nIn the Windows Services snap-in, restart the EC2Config service or reboot the instance.\nIf this does not resolve the activation issue, follow these additional steps.\nSet the AWS KMS target: C:\\> slmgr.vbs /skms 169.254.169.250:1688\nActivate Windows: C:\\> slmgr.vbs /ato\nFor EC2Launch (Windows Server 2016 AMIs and later)\nFrom a PowerShell prompt with administrative rights, import the EC2Launch module:\nPS C:\\> Import-Module \"C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Module\\Ec2Launch.psd1\"\nCall the Add-Routes function to see the list of new routes:\nPS C:\\> Add-Routes\nCall the Set-ActivationSettings function:\nPS C:\\> Set-Activationsettings\nThen, run the following script to activate Windows:\nPS C:\\> cscript \"${env:SYSTEMROOT}\\system32\\slmgr.vbs\" /ato\nFor both EC2Config and EC2Launch, if you are still receiving an activation error, verify the following information.\nVerify that you have routes to the AWS KMS servers. Open C:\\Program Files\\Amazon\\Ec2ConfigService\\Settings\\ActivationSettings.xml and locate the TargetKMSServer elements. Run the following command and check whether the addresses for these AWS KMS servers are listed.\nroute print\nVerify that the AWS KMS client key is set. Run the following command and check the output.\nC:\\Windows\\System32\\slmgr.vbs /dlv\nIf the output contains Error: product key not found, the AWS KMS client key isn't set. If the AWS KMS client key isn't set, look up the client key as described in this Microsoft article: AWS KMS client activation and product keys, and then run the following command to set the AWS KMS client key.\nC:\\Windows\\System32\\slmgr.vbs /ipk client_key\nVerify that the system has the correct time and time zone. If you are using a time zone other than UTC, add the following registry key and set it to 1 to ensure that the time is correct: HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation\\RealTimeIsUniversal.\nIf Windows Firewall is enabled, temporarily disable it using the following command.\nnetsh advfirewall set allprofiles state off\n\"Windows is not genuine (0x80070005)\"\nWindows instances use Windows AWS KMS activation. If an instance is unable to complete the activation process, it reports that the copy of Windows is not genuine.\nTry the suggestions for \"Unable to activate Windows\".\n\"No Terminal Server License Servers available to provide a license\"\nBy default, Windows Server is licensed for two simultaneous users through Remote Desktop. If you need to provide more than two users with simultaneous access to your Windows instance through Remote Desktop, you can purchase a Remote Desktop Services client access license (CAL) and install the Remote Desktop Session Host and Remote Desktop Licensing Server roles.\nCheck for the following issues:\nYou've exceeded the maximum number of concurrent RDP sessions.\nYou've installed the Windows Remote Desktop Services role.\nLicensing has expired. If the licensing has expired, you can't connect to your Windows instance as a user. You can try the following:\nConnect to the instance from the command line using an /admin parameter, for example:\nmstsc /v:instance /admin\nFor more information, see the following Microsoft article: Access Remote Desktop Via Command Line.\nStop the instance, detach its Amazon EBS volumes, and attach them to another instance in the same Availability Zone to recover your data.\n\"Some settings are managed by your organization\"\nInstances launched from the latest Windows Server AMIs might show a Windows Update dialog message stating \"Some settings are managed by your organization.\" This message appears as a result of changes in Windows Server and does not impact the behavior of Windows Update or your ability to manage update settings.\nTo remove the warning\nOpen gpedit.msc and navigate to Computer Configuration, Administrative Templates, Windows Components, Windows updates. Edit Configure Automatic Update, and set it to enabled.\nIn a command prompt, update group policy using gpupdate /force.\nClose and reopen the Windows Update Settings. You will see the above message about your settings being managed by your organization, followed by \"We'll automatically download updates, except on metered connections (where charges may apply). In that case, we'll automatically download those updates required to keep Windows running smoothly.\"\nReturn to gpedit.msc and set the group policy back to not configured. Run gpupdate /force again.\nClose the command prompt and wait a few minutes.\nReopen the Windows Update Settings. You should not see the message \"Some settings are managed by your organization.\""
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/win-ts-common-issues.html",
        "content": "The following are troubleshooting tips to help you solve the issues with Amazon EC2 Windows instances.\nIssues\nUnable to connect AWS Systems Manager Sessions Manager to a Windows Server 2025 instance\nEBS volumes don't initialize on Windows Server 2016 and 2019\nBoot an EC2 Windows instance into Directory Services Restore Mode (DSRM)\nInstance loses network connectivity or scheduled tasks don't run when expected\nUnable to get console output\nWindows Server 2012 R2 not available on the network\nDisk signature collision\nUnable to connect AWS Systems Manager Sessions Manager to a Windows Server 2025 instance\nYou may encounter an issue connecting AWS Systems Manager Sessions Manager to a Windows Server 2025 instance. To address this issue, log onto the instance, then navigate to Settings > Apps > Optional Features, and add WMIC. Restart the SSM Agent service or reboot the instance, and Sessions Manager should connect.\nYou can also use the following PowerShell command to perform the same action:\nStart-Process -FilePath \"$env:SystemRoot\\system32\\Dism.exe\" -ArgumentList @('/Online', '/Add-Capability', '/CapabilityName:WMIC~~~~') -Wait; Restart-Service -Name AmazonSSMAgent\nEBS volumes don't initialize on Windows Server 2016 and 2019\nInstances created from Amazon Machine Images (AMIs) for Windows Server 2016 and 2019 use the EC2Launch v1 agent for a variety of startup tasks, including initializing EBS volumes. By default, EC2Launch v1 doesn't initialize secondary volumes. However, you can configure EC2Launch v1 to initialize these disks automatically, as follows.\nMap drive letters to volumes\nConnect to the instance to configure and open the C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Config\\DriveLetterMappingConfig.json file in a text editor.\nSpecify the volume settings as follows:\n{\n\"driveLetterMapping\": [\n {\n   \"volumeName\": \"sample volume\",\n   \"driveLetter\": \"H\"\n }]\n}\nSave your changes and close the file.\nOpen Windows PowerShell and use the following command to run the EC2Launch v1 script that initializes the disks:\nPS C:\\>  C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Scripts\\InitializeDisks.ps1\nTo initialize the disks each time the instance boots, add the -Schedule flag as follows:\nPS C:\\>  C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Scripts\\InitializeDisks.ps1 -Schedule\nThe EC2Launch v1 agent can run instance initialization scripts such as initializeDisks.ps1 in parallel with the InitializeInstance.ps1 script. If the InitializeInstance.ps1 script reboots the instance, it might interrupt other scheduled tasks that run at instance startup. To avoid any potential conflicts, we recommend that you add logic to your initializeDisks.ps1 script to ensure that instance initialization has finished first.\nNote\nIf the EC2Launch script does not initialize the volumes, ensure that the volumes are online. If the volumes are offline, run the following command to bring all disks online.\nPS C:\\> Get-Disk | Where-Object IsOffline -Eq $True | Set-Disk -IsOffline $False\nBoot an EC2 Windows instance into Directory Services Restore Mode (DSRM)\nIf an instance running Microsoft Active Directory experiences a system failure or other critical issues you can troubleshoot the instance by booting into a special version of Safe Mode called Directory Services Restore Mode (DSRM). In DSRM you can repair or recover Active Directory.\nDriver support for DSRM\nHow you enable DSRM and boot into the instance depends on the drivers the instance is running. In the EC2 console you can view driver version details for an instance from the System Log. The following table shows which drivers are supported for DSRM.\nDriver Versions DSRM Supported? Next Steps\nCitrix PV 5.9 No Restore the instance from a backup. You cannot enable DSRM.\nAWS PV 7.2.0 No Though DSRM is not supported for this driver, you can still detach the root volume from the instance, take a snapshot of the volume or create an AMI from it, and attach it to another instance in the same Availability Zone as a secondary volume. You can then enable DSRM (as described in this section).\nAWS PV 7.2.2 and later Yes Detach the root volume, attach it to another instance, and enable DSRM (as described in this section).\nEnhanced Networking Yes Detach the root volume, attach it to another instance, and enable DSRM (as described in this section).\nFor information about how to enable enhanced networking, see Enable enhanced networking with ENA on your EC2 instances. For information about upgrading AWS PV drivers, see Upgrade PV drivers on Windows instances.\nConfigure an instance to boot into DSRM\nEC2 Windows instances do not have network connectivity before the operating system is running. For this reason, you cannot press the F8 button on your keyboard to select a boot option. You must use one of the following procedures to boot an EC2 Windows Server instance into DSRM.\nIf you suspect that Active Directory has been corrupted and the instance is still running, you can configure the instance to boot into DSRM using either the System Configuration dialog box or the command prompt.\nTo boot an online instance into DSRM using the System Configuration dialog box\nIn the Run dialog box, type msconfig and press Enter.\nChoose the Boot tab.\nUnder Boot options choose Safe boot.\nChoose Active Directory repair and then choose OK. The system prompts you to reboot the server.\nTo boot an online instance into DSRM using the command line\nFrom a Command Prompt window, run the following command:\nbcdedit /set safeboot dsrepair\nIf an instance is offline and unreachable, you must detach the root volume and attach it to another instance to enable DSRM mode.\nTo boot an offline instance into DSRM\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nLocate and select the affected instance. Choose Instance state, Stop instance.\nChoose Launch instances and create a temporary instance in the same Availability Zone as the affected instance. Choose an instance type that uses a different version of Windows. For example, if your instance is Windows Server 2016, then choose a Windows Server 2019 instance.\nImportant\nIf you do not create the instance in the same Availability Zone as the affected instance you will not be able to attach the root volume of the affected instance to the new instance.\nIn the navigation pane, choose Volumes.\nLocate the root volume of the affected instance. Detach the volume and attach it to the temporary instance you created earlier. Attach it with the default device name (xvdf).\nUse Remote Desktop to connect to the temporary instance, and then use the Disk Management utility to make the volume available for use.\nOpen a command prompt and run the following command. Replace D with the actual drive letter of the secondary volume you just attached:\nbcdedit /store D:\\Boot\\BCD /set {default} safeboot dsrepair\nIn the Disk Management Utility, choose the drive you attached earlier, open the context (right-click) menu, and choose Offline.\nIn the EC2 console, detach the affected volume from the temporary instance and reattach it to your original instance with the device name /dev/sda1. You must specify this device name to designate the volume as a root volume.\nStart the instance.\nAfter the instance passes the health checks in the EC2 console, connect to the instance using Remote Desktop and verify that it boots into DSRM mode.\n(Optional) Delete or stop the temporary instance you created in this procedure.\nInstance loses network connectivity or scheduled tasks don't run when expected\nIf you restart your instance and it loses network connectivity, it's possible that the instance has the wrong time.\nBy default, Windows instances use Coordinated Universal Time (UTC). If you set the time for your instance to a different time zone and then restart it, the time becomes offset and the instance temporarily loses its IP address. The instance regains network connectivity eventually, but this can take several hours. The amount of time that it takes for the instance to regain network connectivity depends on the difference between UTC and the other time zone.\nThis same time issue can also result in scheduled tasks not running when you expect them to. In this case, the scheduled tasks do not run when expected because the instance has the incorrect time.\nTo use a time zone other than UTC persistently, you must set the RealTimeIsUniversal registry key. Without this key, an instance uses UTC after you restart it.\nTo resolve time issues that cause a loss of network connectivity\nEnsure that you are running the recommended PV drivers. For more information, see Upgrade PV drivers on EC2 Windows instances.\nVerify that the following registry key exists and is set to 1: HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation\\RealTimeIsUniversal\nUnable to get console output\nFor Windows instances, the instance console displays the output from tasks performed during the Windows boot process. If Windows boots successfully, the last message logged is Windows is Ready to use. You can also display event log messages in the console, but this feature might not be enabled by default depending on your version of Windows. For more information, see Windows launch agents on Amazon EC2 Windows instances.\nTo get the console output for your instance using the Amazon EC2 console, select the instance, and then choose Actions, Monitor and troubleshoot, Get system log. To get the console output using the command line, use one of the following commands: get-console-output (AWS CLI) or Get-EC2ConsoleOutput (AWS Tools for Windows PowerShell).\nFor instances running Windows Server 2012 R2 and earlier, if the console output is empty, it could indicate an issue with the EC2Config service, such as a misconfigured configuration file, or that Windows failed to boot properly. To fix the issue, download and install the latest version of EC2Config. For more information, see Install the latest version of EC2Config.\nWindows Server 2012 R2 not available on the network\nFor information about troubleshooting a Windows Server 2012 R2 instance that is not available on the network, see Windows Server 2012 R2 loses network and storage connectivity after an instance reboot.\nDisk signature collision\nYou can check for and resolve disk signature collisions using EC2Rescue for Windows Server. Or, you can manually resolve disk signature issues by performing the following steps.\nWarning\nThe following procedure describes how to edit the Windows Registry using Registry Editor. If you are not familiar with the Windows Registry or how to safely make changes using Registry Editor, see Configure the Registry.\nOpen a command prompt, type regedit.exe, and press Enter.\nIn the Registry Editor, choose HKEY_LOCAL_MACHINE from the context menu (right-click), and then choose Find.\nType Windows Boot Manager and then choose Find Next.\nChoose the key named 11000001. This key is a sibling of the key you found in the previous step.\nIn the right pane, choose Element and then choose Modify from the context menu (right-click).\nLocate the four-byte disk signature at offset 0x38 in the data. This is the Boot Configuration Database signature (BCD). Reverse the bytes to create the disk signature, and write it down. For example, the disk signature represented by the following data is E9EB3AA5:\n...\n0030  00 00 00 00 01 00 00 00\n0038  A5 3A EB E9 00 00 00 00\n0040  00 00 00 00 00 00 00 00\n...\nIn a Command Prompt window, run the following command to start Microsoft DiskPart.\ndiskpart\nRun the select disk DiskPart command and specify the disk number for the volume with the disk signature collision.\nTip\nTo check the disk number for the volume with the disk signature collision, use the Disk Management utility. Open a command prompt, type compmgmt.msc and press Enter. In the left-hand navigation panel, double-click Disk Management. In the Disk Management utility, check the disk number for the offline volume with the disk signature collision.\nDISKPART> select disk 1\nDisk 1 is now the selected disk.\nRun the following DiskPart command to get the disk signature.\nDISKPART>  uniqueid disk\nDisk ID: 0C764FA8\nIf the disk signature shown in the previous step doesn't match the disk signature that you wrote down earlier, use the following DiskPart command to change the disk signature so that it matches:\nDISKPART> uniqueid disk id=E9EB3AA5"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ResettingAdminPassword.html",
        "content": "If you are no longer able to connect to your Amazon EC2 Windows instance because the Windows administrator password is lost or expired, you can reset the password.\nNote\nThere is an AWS Systems Manager Automation document that automatically applies the manual steps necessary to reset the local administrator password. For more information, see Reset passwords and SSH keys on EC2 instances in the AWS Systems Manager User Guide.\nThe manual methods to reset the administrator password use EC2Launch v2, EC2Config, or EC2Launch.\nFor all supported Windows AMIs that include the EC2Launch v2 agent, use EC2Launch v2.\nFor Windows AMIs before Windows Server 2016, use the EC2Config service.\nFor Windows Server 2016 and later AMIs, use the EC2Launch service.\nThese procedures also describe how to connect to an instance if you lost the key pair that was used to create the instance. Amazon EC2 uses a public key to encrypt a piece of data, such as a password, and a private key to decrypt the data. The public and private keys are known as a key pair. With Windows instances, you use a key pair to obtain the administrator password and then log in using RDP.\nNote\nIf you have disabled the local administrator account on the instance and your instance is configured for Systems Manager, you can also re-enable and reset your local administrator password by using EC2Rescue and Run Command. For more information, see Use EC2Rescue for Windows Server with Systems Manager Run Command.\nContents\nReset Windows admin password for EC2 instance using EC2Launch v2\nReset Windows admin password for EC2 instance using EC2Launch\nReset Windows admin password for EC2 instance using EC2Config"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ResettingAdminPassword_EC2Launchv2.html",
        "content": "If you have lost your Windows administrator password and are using a supported Windows AMI that includes the EC2Launch v2 agent, you can use EC2Launch v2 to generate a new password.\nIf you are using a Windows Server 2016 or later AMI that does not include the EC2Launch v2 agent, see Reset Windows admin password for EC2 instance using EC2Launch.\nIf you are using a Windows Server AMI earlier than Windows Server 2016 that does not include the EC2Launch v2 agent, see Reset Windows admin password for EC2 instance using EC2Config.\nNote\nIf you have disabled the local administrator account on the instance and your instance is configured for Systems Manager, you can also re-enable and reset your local administrator password by using EC2Rescue and Run Command. For more information, see Use EC2Rescue for Windows Server with Systems Manager Run Command.\nNote\nThere is an AWS Systems Manager Automation document that automatically applies the manual steps necessary to reset the local administrator password. For more information, see Reset passwords and SSH keys on EC2 instances in the AWS Systems Manager User Guide.\nTo reset your Windows administrator password using EC2Launch v2, you need to do the following:\nStep 1: Verify that the EC2Launch v2 agent is running\nStep 2: Detach the root volume from the instance\nStep 3: Attach the volume to a temporary instance\nStep 4: Delete the .run-once file\nStep 5: Restart the original instance\nStep 1: Verify that the EC2Launch v2 agent is running\nBefore you attempt to reset the administrator password, verify that the EC2Launch v2 agent is installed and running. You use the EC2Launch v2 agent to reset the administrator password later in this section.\nTo verify that the EC2Launch v2 agent is running\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances and then select the instance that requires a password reset. This instance is referred to as the original instance in this procedure.\nChoose Actions, Monitor and troubleshoot, Get system log.\nLocate the EC2 Launch entry, for example, Launch: EC2Launch v2 service v2.0.124. If you see this entry, the EC2Launch v2 service is running.\nIf the system log output is empty, or if the EC2Launch v2 agent is not running, troubleshoot the instance using the Instance Console Screenshot service. For more information, see Capture a screenshot of an unreachable instance.\nStep 2: Detach the root volume from the instance\nYou can't use EC2Launch v2 to reset an administrator password if the volume on which the password is stored is attached to an instance as the root volume. You must detach the volume from the original instance before you can attach it to a temporary instance as a secondary volume.\nTo detach the root volume from the instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance that requires a password reset and choose Instance state, Stop instance. After the status of the instance changes to Stopped, continue with the next step.\n(Optional) If you have the private key that you specified when you launched this instance, continue with the next step. Otherwise, use the following steps to replace the instance with a new instance that you launch with a new key pair.\nCreate a new key pair using the Amazon EC2 console. To give your new key pair the same name as the one for which you lost the private key, you must first delete the existing key pair.\nSelect the instance to replace. Note the instance type, VPC, subnet, security group, and IAM role of the instance.\nWith the instance selected, choose Actions, Image and templates, Create image. Type a name and a description for the image and choose Create image.\nIn the navigation pane, choose AMIs. Wait for the image status to change to available. Then, select the image and choose Launch instance from AMI.\nComplete the fields to launch an instance, making sure to select the same instance type, VPC, subnet, security group, and IAM role as the instance to replace, and then choose Launch instance.\nWhen prompted, choose the key pair that you created for the new instance, and then choose Launch instance.\n(Optional) If the original instance has an associated Elastic IP address, transfer it to the new instance. If the original instance has EBS volumes in addition to the root volume, transfer them to the new instance.\nDetach the root volume from the original instance as follows:\nSelect the original instance and choose the Storage tab. Note the name of the root device under Root device name. Find the volume with this device name under Block devices, and note the volume ID.\nIn the navigation pane, choose Volumes.\nIn the list of volumes, select the volume that you noted as the root device, and choose Actions, Detach Volume. After the volume status changes to available, continue with the next step.\nIf you created a new instance to replace your original instance, you can terminate the original instance now. It's no longer needed. For the remainder of this procedure, all references to the original instance apply to the new instance that you created.\nStep 3: Attach the volume to a temporary instance\nNext, launch a temporary instance and attach the volume to it as a secondary volume. This is the instance you use to modify the configuration file.\nTo launch a temporary instance and attach the volume\nLaunch the temporary instance as follows:\nIn the navigation pane, choose Instances, choose Launch instances, and then select an AMI.\nImportant\nTo avoid disk signature collisions, you must select an AMI for a different version of Windows. For example, if the original instance runs Windows Server 2019, launch the temporary instance using the base AMI for Windows Server 2016.\nLeave the default instance type and choose Next: Configure Instance Details.\nOn the Configure Instance Details page, for Subnet, select the same Availability Zone as the original instance and choose Review and Launch.\nImportant\nThe temporary instance must be in the same Availability Zone as the original instance. If your temporary instance is in a different Availability Zone, you can't attach the original instance's root volume to it.\nOn the Review Instance Launch page, choose Launch.\nWhen prompted, create a new key pair, download it to a safe location on your computer, and then choose Launch Instances.\nAttach the volume to the temporary instance as a secondary volume as follows:\nIn the navigation pane, choose Volumes, select the volume that you detached from the original instance, and then choose Actions, Attach Volume.\nIn the Attach Volume dialog box, for Instances, start typing the name or ID of your temporary instance and select the instance from the list.\nFor Device, type xvdf (if it isn't already there), and choose Attach.\nStep 4: Delete the .run-once file\nYou must now delete the .run-once file from the offline volume attached to the instance. This directs EC2Launch v2 to run all tasks with a frequency of once, which includes setting the administrator password. The file path in the secondary volume that you attached will be similar to D:\\ProgramData\\Amazon\\EC2Launch\\state\\.run-once.\nTo delete the .run-once file\nOpen the Disk Management utility, and bring the drive online using these instructions: Make an Amazon EBS volume available for use.\nLocate the .run-once file in the disk you brought online.\nDelete the .run-once file.\nImportant\nAny scripts set to run once will be triggered by this action.\nStep 5: Restart the original instance\nAfter you have deleted the .run-once file, reattach the volume to the original instance as the root volume and connect to the instance using its key pair to retrieve the administrator password.\nReattach the volume to the original instance as follows:\nIn the navigation pane, choose Volumes, select the volume that you detached from the temporary instance, and then choose Actions, Attach Volume.\nIn the Attach Volume dialog box, for Instances, start typing the name or ID of your original instance and then select the instance.\nFor Device, type /dev/sda1.\nChoose Attach. After the volume status changes to in-use, continue to the next step.\nIn the navigation pane, choose Instances. Select the original instance and choose Instance state, Start instance. After the instance state changes to Running, continue to the next step.\nRetrieve your new Windows administrator password using the private key for the new key pair and connect to the instance. For more information, see Connect to your Windows instance using RDP.\nImportant\nThe instance gets a new public IP address after you stop and start it. Make sure to connect to the instance using its current public DNS name. For more information, see Amazon EC2 instance state changes.\n(Optional) If you have no further use for the temporary instance, you can terminate it. Select the temporary instance, and choose Instance State, Terminate instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ResettingAdminPassword_EC2Launch.html",
        "content": "If you have lost your Windows administrator password and are using a Windows Server 2016 or later AMI, you can use the EC2Rescue tool, which uses the EC2Launch service to generate a new password.\nIf you are using a Windows Server 2016 or later AMI that does not include the EC2Launch v2 agent, you can use EC2Launch v2 to generate a new password.\nIf you are using a Windows Server AMI earlier than Windows Server 2016, see Reset Windows admin password for EC2 instance using EC2Config.\nWarning\nWhen you stop an instance, the data on any instance store volumes is erased. To keep data from instance store volumes, be sure to back it up to persistent storage.\nNote\nIf you have disabled the local administrator account on the instance and your instance is configured for Systems Manager, you can also re-enable and reset your local administrator password by using EC2Rescue and Run Command. For more information, see Use EC2Rescue for Windows Server with Systems Manager Run Command.\nNote\nThere is an AWS Systems Manager Automation document that automatically applies the manual steps necessary to reset the local administrator password. For more information, see Reset passwords and SSH keys on EC2 instances in the AWS Systems Manager User Guide.\nTo reset your Windows administrator password using EC2Launch, you need to do the following:\nStep 1: Detach the root volume from the instance\nStep 2: Attach the volume to a temporary instance\nStep 3: Reset the administrator password\nStep 4: Restart the original instance\nStep 1: Detach the root volume from the instance\nYou can't use EC2Launch to reset an administrator password if the volume on which the password is stored is attached to an instance as the root volume. You must detach the volume from the original instance before you can attach it to a temporary instance as a secondary volume.\nTo detach the root volume from the instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance that requires a password reset and choose Instance state, Stop instance. After the status of the instance changes to Stopped, continue with the next step.\n(Optional) If you have the private key that you specified when you launched this instance, continue with the next step. Otherwise, use the following steps to replace the instance with a new instance that you launch with a new key pair.\nCreate a new key pair using the Amazon EC2 console. To give your new key pair the same name as the one for which you lost the private key, you must first delete the existing key pair.\nSelect the instance to replace. Note the instance type, VPC, subnet, security group, and IAM role of the instance.\nWith the instance selected, choose Actions, Image and templates, Create image. Type a name and a description for the image and choose Create image.\nIn the navigation pane, choose AMIs. Wait for the image status to change to available. Then, select the image and choose Launch instance from AMI.\nComplete the fields to launch an instance, making sure to select the same instance type, VPC, subnet, security group, and IAM role as the instance to replace, and then choose Launch instance.\nWhen prompted, choose the key pair that you created for the new instance, and then choose Launch instance.\n(Optional) If the original instance has an associated Elastic IP address, transfer it to the new instance. If the original instance has EBS volumes in addition to the root volume, transfer them to the new instance.\nDetach the root volume from the original instance as follows:\nSelect the original instance and choose the Storage tab. Note the name of the root device under Root device name. Find the volume with this device name under Block devices, and note the volume ID.\nIn the navigation pane, choose Volumes.\nIn the list of volumes, select the volume that you noted as the root device, and choose Actions, Detach Volume. After the volume status changes to available, continue with the next step.\nIf you created a new instance to replace your original instance, you can terminate the original instance now. It's no longer needed. For the remainder of this procedure, all references to the original instance apply to the new instance that you created.\nStep 2: Attach the volume to a temporary instance\nNext, launch a temporary instance and attach the volume to it as a secondary volume. This is the instance you use to run EC2Launch.\nTo launch a temporary instance and attach the volume\nLaunch the temporary instance as follows:\nIn the navigation pane, choose Instances, choose Launch instances, and then select an AMI.\nImportant\nTo avoid disk signature collisions, you must select an AMI for a different version of Windows. For example, if the original instance runs Windows Server 2019, launch the temporary instance using the base AMI for Windows Server 2016.\nLeave the default instance type and choose Next: Configure Instance Details.\nOn the Configure Instance Details page, for Subnet, select the same Availability Zone as the original instance and choose Review and Launch.\nImportant\nThe temporary instance must be in the same Availability Zone as the original instance. If your temporary instance is in a different Availability Zone, you can't attach the original instance's root volume to it.\nOn the Review Instance Launch page, choose Launch.\nWhen prompted, create a new key pair, download it to a safe location on your computer, and then choose Launch Instances.\nAttach the volume to the temporary instance as a secondary volume as follows:\nIn the navigation pane, choose Volumes, select the volume that you detached from the original instance, and then choose Actions, Attach Volume.\nIn the Attach Volume dialog box, for Instances, start typing the name or ID of your temporary instance and select the instance from the list.\nFor Device, type xvdf (if it isn't already there), and choose Attach.\nStep 3: Reset the administrator password\nNext, connect to the temporary instance and use EC2Launch to reset the administrator password.\nTo reset the administrator password\nConnect to the temporary instance and use the EC2Rescue for Windows Server tool on the instance to reset the administrator password as follows:\nDownload the EC2Rescue for Windows Server zip file, extract the contents, and run EC2Rescue.exe.\nOn the License Agreement screen, read the license agreement, and, if you accept the terms, choose I Agree.\nOn the Welcome to EC2Rescue for Windows Server screen, choose Next.\nOn the Select mode screen, choose Offline instance.\nOn the Select a disk screen, select the xvdf device and choose Next.\nConfirm the disk selection and choose Yes.\nAfter the volume has loaded, choose OK.\nOn the Select Offline Instance Option screen, choose Diagnose and Rescue.\nOn the Summary screen, review the information and choose Next.\nOn the Detected possible issues screen, select Reset Administrator Password and choose Next.\nOn the Confirm screen, choose Rescue, OK.\nOn the Done screen, choose Finish.\nClose the EC2Rescue for Windows Server tool, disconnect from the temporary instance, and then return to the Amazon EC2 console.\nDetach the secondary (xvdf) volume from the temporary instance as follows:\nIn the navigation pane, choose Instances and select the temporary instance.\nOn the Storage tab for the temporary instance, note the ID of the EBS volume listed as xvdf.\nIn the navigation pane, choose Volumes.\nIn the list of volumes, select the volume noted in the previous step, and choose Actions, Detach Volume. After the volume status changes to available, continue with the next step.\nStep 4: Restart the original instance\nAfter you have reset the administrator password using EC2Launch, reattach the volume to the original instance as the root volume and connect to the instance using its key pair to retrieve the administrator password.\nTo restart the original instance\nReattach the volume to the original instance as follows:\nIn the navigation pane, choose Volumes, select the volume that you detached from the temporary instance, and then choose Actions, Attach Volume.\nIn the Attach Volume dialog box, for Instances, start typing the name or ID of your original instance and then select the instance.\nFor Device, type /dev/sda1.\nChoose Attach. After the volume status changes to in-use, continue to the next step.\nIn the navigation pane, choose Instances. Select the original instance and choose Instance state, Start instance. After the instance state changes to Running, continue to the next step.\nRetrieve your new Windows administrator password using the private key for the new key pair and connect to the instance. For more information, see Connect to your Windows instance using RDP.\n(Optional) If you have no further use for the temporary instance, you can terminate it. Select the temporary instance, and choose Instance State, Terminate instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ResettingAdminPassword_EC2Config.html",
        "content": "If you have lost your Windows administrator password and are using a Windows AMI before Windows Server 2016, you can use the EC2Config agent to generate a new password.\nIf you are using a Windows Server 2016 or later AMI, see Reset Windows admin password for EC2 instance using EC2Launch or, you can use the EC2Rescue tool, which uses the EC2Launch service to generate a new password.\nNote\nIf you have disabled the local administrator account on the instance and your instance is configured for Systems Manager, you can also re-enable and reset your local administrator password by using EC2Rescue and Run Command. For more information, see Use EC2Rescue for Windows Server with Systems Manager Run Command.\nNote\nThere is an AWS Systems Manager Automation document that automatically applies the manual steps necessary to reset the local administrator password. For more information, see Reset passwords and SSH keys on EC2 instances in the AWS Systems Manager User Guide.\nTo reset your Windows administrator password using EC2Config, you need to do the following:\nStep 1: Verify that the EC2Config service is running\nStep 2: Detach the root volume from the instance\nStep 3: Attach the volume to a temporary instance\nStep 4: Modify the configuration file\nStep 5: Restart the original instance\nStep 1: Verify that the EC2Config service is running\nBefore you attempt to reset the administrator password, verify that the EC2Config service is installed and running. You use the EC2Config service to reset the administrator password later in this section.\nTo verify that the EC2Config service is running\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances and then select the instance that requires a password reset. This instance is referred to as the original instance in this procedure.\nChoose Actions, Monitor and troubleshoot, Get system log.\nLocate the EC2 Agent entry, for example, EC2 Agent: Ec2Config service v3.18.1118. If you see this entry, the EC2Config service is running.\nIf the system log output is empty, or if the EC2Config service is not running, troubleshoot the instance using the Instance Console Screenshot service. For more information, see Capture a screenshot of an unreachable instance.\nStep 2: Detach the root volume from the instance\nYou can't use EC2Config to reset an administrator password if the volume on which the password is stored is attached to an instance as the root volume. You must detach the volume from the original instance before you can attach it to a temporary instance as a secondary volume.\nTo detach the root volume from the instance\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance that requires a password reset and choose Instance state, Stop instance. After the status of the instance changes to Stopped, continue with the next step.\n(Optional) If you have the private key that you specified when you launched this instance, continue with the next step. Otherwise, use the following steps to replace the instance with a new instance that you launch with a new key pair.\nCreate a new key pair using the Amazon EC2 console. To give your new key pair the same name as the one for which you lost the private key, you must first delete the existing key pair.\nSelect the instance to replace. Note the instance type, VPC, subnet, security group, and IAM role of the instance.\nWith the instance selected, choose Actions, Image and templates, Create image. Type a name and a description for the image and choose Create image.\nIn the navigation pane, choose AMIs. Wait for the image status to change to available. Then, select the image and choose Launch instance from AMI.\nComplete the fields to launch an instance, making sure to select the same instance type, VPC, subnet, security group, and IAM role as the instance to replace, and then choose Launch instance.\nWhen prompted, choose the key pair that you created for the new instance, and then choose Launch instance.\n(Optional) If the original instance has an associated Elastic IP address, transfer it to the new instance. If the original instance has EBS volumes in addition to the root volume, transfer them to the new instance.\nDetach the root volume from the original instance as follows:\nSelect the original instance and choose the Storage tab. Note the name of the root device under Root device name. Find the volume with this device name under Block devices, and note the volume ID.\nIn the navigation pane, choose Volumes.\nIn the list of volumes, select the volume that you noted as the root device, and choose Actions, Detach Volume. After the volume status changes to available, continue with the next step.\nIf you created a new instance to replace your original instance, you can terminate the original instance now. It's no longer needed. For the remainder of this procedure, all references to the original instance apply to the new instance that you created.\nStep 3: Attach the volume to a temporary instance\nNext, launch a temporary instance and attach the volume to it as a secondary volume. This is the instance you use to modify the configuration file.\nTo launch a temporary instance and attach the volume\nLaunch the temporary instance as follows:\nIn the navigation pane, choose Instances, choose Launch instances, and then select an AMI.\nImportant\nTo avoid disk signature collisions, you must select an AMI for a different version of Windows. For example, if the original instance runs Windows Server 2019, launch the temporary instance using the base AMI for Windows Server 2016.\nLeave the default instance type and choose Next: Configure Instance Details.\nOn the Configure Instance Details page, for Subnet, select the same Availability Zone as the original instance and choose Review and Launch.\nImportant\nThe temporary instance must be in the same Availability Zone as the original instance. If your temporary instance is in a different Availability Zone, you can't attach the original instance's root volume to it.\nOn the Review Instance Launch page, choose Launch.\nWhen prompted, create a new key pair, download it to a safe location on your computer, and then choose Launch Instances.\nAttach the volume to the temporary instance as a secondary volume as follows:\nIn the navigation pane, choose Volumes, select the volume that you detached from the original instance, and then choose Actions, Attach Volume.\nIn the Attach Volume dialog box, for Instances, start typing the name or ID of your temporary instance and select the instance from the list.\nFor Device, type xvdf (if it isn't already there), and choose Attach.\nStep 4: Modify the configuration file\nAfter you have attached the volume to the temporary instance as a secondary volume, modify the Ec2SetPassword plugin in the configuration file.\nTo modify the configuration file\nFrom the temporary instance, modify the configuration file on the secondary volume as follows:\nLaunch and connect to the temporary instance.\nUse the following instructions to bring the drive online: Make an Amazon EBS volume available for use.\nNavigate to the secondary volume, and open \\Program Files\\Amazon\\Ec2ConfigService\\Settings\\config.xml using a text editor, such as Notepad.\nAt the top of the file, find the plugin with the name Ec2SetPassword, as shown in the screenshot. Change the state from Disabled to Enabled and save the file.\nAfter you have modified the configuration file, detach the secondary volume from the temporary instance as follows:\nUsing the Disk Management utility, bring the volume offline.\nDisconnect from the temporary instance and return to the Amazon EC2 console.\nIn the navigation pane, choose Volumes, select the volume, and then choose Actions, Detach Volume. After the volume's status changes to available, continue with the next step.\nStep 5: Restart the original instance\nAfter you have modified the configuration file, reattach the volume to the original instance as the root volume and connect to the instance using its key pair to retrieve the administrator password.\nReattach the volume to the original instance as follows:\nIn the navigation pane, choose Volumes, select the volume that you detached from the temporary instance, and then choose Actions, Attach Volume.\nIn the Attach Volume dialog box, for Instances, start typing the name or ID of your original instance and then select the instance.\nFor Device, type /dev/sda1.\nChoose Attach. After the volume status changes to in-use, continue to the next step.\nIn the navigation pane, choose Instances. Select the original instance and choose Instance state, Start instance. After the instance state changes to Running, continue to the next step.\nRetrieve your new Windows administrator password using the private key for the new key pair and connect to the instance. For more information, see Connect to your Windows instance using RDP.\nImportant\nThe instance gets a new public IP address after you stop and start it. Make sure to connect to the instance using its current public DNS name. For more information, see Amazon EC2 instance state changes.\n(Optional) If you have no further use for the temporary instance, you can terminate it. Select the temporary instance, and choose Instance State, Terminate instance."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/sysprep-troubleshoot.html",
        "content": "If you experience problems or receive error messages during image preparations, review the following logs. Log location varies depending on whether you are running EC2Config, EC2Launch v1, or EC2Launch v2 with Sysprep.\n%WINDIR%\\Panther\\Unattendgc (EC2Config, EC2Launch v1, and EC2Launch v2)\n%WINDIR%\\System32\\Sysprep\\Panther (EC2Config, EC2Launch v1, and EC2Launch v2)\nC:\\Program Files\\Amazon\\Ec2ConfigService\\Logs\\Ec2ConfigLog.txt (EC2Config only)\nC:\\ProgramData\\Amazon\\Ec2Config\\Logs (EC2Config only)\nC:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Log\\EC2Launch.log (EC2Launch v1 only)\n%ProgramData%\\Amazon\\EC2Launch\\log\\agent.log (EC2Launch v2 only)\nIf you receive an error message during image preparation with Sysprep, the OS might not be reachable. To review the log files, you must stop the instance, attach its root volume to another healthy instance as a secondary volume, and then review the logs mentioned earlier on the secondary volume. For more information about the purpose of the log files by name, see Windows Setup-Related Log Files in the Microsoft documentation.\nIf you locate errors in the Unattendgc log file, use the Microsoft Error Lookup Tool to get more details about the error. The following issue reported in the Unattendgc log file is typically the result of one or more corrupted user profiles on the instance:\nError [Shell Unattend] _FindLatestProfile failed (0x80070003) [gle=0x00000003]\nError [Shell Unattend] CopyProfile failed (0x80070003) [gle=0x00000003]\nThere are two options for resolving this issue:\nOption 1\nUse Regedit on the instance to search for the following key. Verify that there are no profile registry keys for a deleted user.\n[HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\\\nOption 2\nEdit the relevant file, as follows:\nWindows Server 2012 R2 and earlier \u2013 Edit the EC2Config answer file (C:\\Program Files\\Amazon\\Ec2ConfigService\\sysprep2008.xml).\nWindows Server 2016 and 2019 \u2013 Edit the unattend.xml answer file (C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Sysprep\\Unattend.xml).\nWindows Server 2022 \u2013 Edit the unattend.xml answer file (C:\\ProgramData\\Amazon\\EC2Launch\\sysprep\\unattend.xml).\nChange <CopyProfile>true</CopyProfile> to <CopyProfile>false</CopyProfile>.\nRun Sysprep again. Note that this configuration change will delete the built-in administrator user profile after Sysprep completes."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Linux-Server-EC2Rescue.html",
        "content": "EC2Rescue for Linux is an easy-to-use, open-source tool that can be run on an Amazon EC2 Linux instance to diagnose, troubleshoot, and remediate common issues using its library of over 100 modules. Modules are YAML files that contain either a BASH or a Python script and the necessary metadata.\nSome generalized use cases for EC2Rescue for Linux instances include:\nGathering syslog and package manager logs\nCollecting resource utilization data\nDiagnosing and remediating known problematic kernel parameters and common OpenSSH issues\nNote\nThe AWSSupport-TroubleshootSSH AWS Systems Manager Automation runbook installs EC2Rescue for Linux and then uses the tool to check or attempt to fix common issues that prevent an SSH connection to a Linux instance. For more information, see AWSSupport-TroubleshootSSH.\nIf you are using a Windows instance, see Troubleshoot impaired Amazon EC2 Windows instance using EC2Rescue.\nTopics\nInstall EC2Rescue\nRun EC2Rescue commands\nDevelop EC2Rescue modules"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2rl_install.html",
        "content": "The EC2Rescue for Linux tool can be installed on an Amazon EC2 Linux instance that meets the following prerequisites.\nPrerequisites\nSupported operating systems:\nAmazon Linux 2\nAmazon Linux 2016.09+\nSUSE Linux Enterprise Server 12+\nRHEL 7+\nUbuntu 16.04+\nSoftware requirements:\nPython 2.7.9+ or 3.2+\nInstall EC2Rescue\nThe AWSSupport-TroubleshootSSH runbook installs EC2Rescue for Linux and then uses the tool to check or attempt to fix common issues that prevent a remote connection to a Linux machine via SSH. For more information, and to run this automation, see Support-TroubleshootSSH.\nIf your system has the required Python version, you can install the standard build. Otherwise, you can install the bundled build, which includes a minimal copy of Python.\nTo install the standard build\nFrom a working Linux instance, download the EC2Rescue for Linux tool:\ncurl -O https://s3.amazonaws.com/ec2rescuelinux/ec2rl.tgz\n(Optional) Verify the signature of the EC2Rescue for Linux installation file. For more information, see (Optional) Verify the signature of EC2Rescue for Linux.\nDownload the sha256 hash file:\ncurl -O https://s3.amazonaws.com/ec2rescuelinux/ec2rl.tgz.sha256\nVerify the integrity of the tarball:\nsha256sum -c ec2rl.tgz.sha256\nUnpack the tarball:\ntar -xzvf ec2rl.tgz\nVerify the installation by listing out the help file:\ncd ec2rl-<version_number>\n./ec2rl help\nTo install the bundled build\nFor a link to the download and a list of limitations, see EC2Rescue for Linux on github.\n(Optional) Verify the signature of EC2Rescue for Linux\nThe following is the recommended process of verifying the validity of the EC2Rescue for Linux package for Linux-based operating systems.\nWhen you download an application from the internet, we recommend that you authenticate the identity of the software publisher and check that the application has not been altered or corrupted after it was published. This protects you from installing a version of the application that contains a virus or other malicious code.\nIf, after running the steps in this topic, you determine that the software for EC2Rescue for Linux is altered or corrupted, do not run the installation file. Instead, contact Amazon Web Services.\nEC2Rescue for Linux files for Linux-based operating systems are signed using GnuPG, an open-source implementation of the Pretty Good Privacy (OpenPGP) standard for secure digital signatures. GnuPG (also known as GPG) provides authentication and integrity checking through a digital signature. AWS publishes a public key and signatures that you can use to verify the downloaded EC2Rescue for Linux package. For more information about PGP and GnuPG (GPG), see https://www.gnupg.org/.\nThe first step is to establish trust with the software publisher. Download the public key of the software publisher, check that the owner of the public key is who they claim to be, and then add the public key to your keyring. Your keyring is a collection of known public keys. After you establish the authenticity of the public key, you can use it to verify the signature of the application.\nTasks\nAuthenticate and import the public key\nVerify the signature of the package\nAuthenticate and import the public key\nThe next step in the process is to authenticate the EC2Rescue for Linux public key and add it as a trusted key in your GPG keyring.\nTo authenticate and import the EC2Rescue for Linux public key\nAt a command prompt, use the following command to obtain a copy of our public GPG build key:\ncurl -O https://s3.amazonaws.com/ec2rescuelinux/ec2rl.key\nAt a command prompt in the directory where you saved ec2rl.key, use the following command to import the EC2Rescue for Linux public key into your keyring:\ngpg2 --import ec2rl.key\nThe command returns results similar to the following:\ngpg: /home/ec2-user/.gnupg/trustdb.gpg: trustdb created\ngpg: key 2FAE2A1C: public key \"ec2autodiag@amazon.com <EC2 Rescue for Linux>\" imported\ngpg: Total number processed: 1\ngpg:               imported: 1  (RSA: 1)\nTip\nIf you see an error stating that the command cannot be found, install the GnuPG utility with apt-get install gnupg2 (Debian-based Linux) or yum install gnupg2 (Red Hat- based Linux).\nVerify the signature of the package\nAfter you've installed the GPG tools, authenticated and imported the EC2Rescue for Linux public key, and verified that the EC2Rescue for Linux public key is trusted, you are ready to verify the signature of the EC2Rescue for Linux installation script.\nTo verify the EC2Rescue for Linux installation script signature\nAt a command prompt, run the following command to download the signature file for the installation script:\ncurl -O https://s3.amazonaws.com/ec2rescuelinux/ec2rl.tgz.sig\nVerify the signature by running the following command at a command prompt in the directory where you saved ec2rl.tgz.sig and the EC2Rescue for Linux installation file. Both files must be present.\ngpg2 --verify ./ec2rl.tgz.sig\nThe output should look something like the following:\ngpg: Signature made Thu 12 Jul 2018 01:57:51 AM UTC using RSA key ID 6991ED45\ngpg: Good signature from \"ec2autodiag@amazon.com <EC2 Rescue for Linux>\"\ngpg: WARNING: This key is not certified with a trusted signature!\ngpg:          There is no indication that the signature belongs to the owner.\nPrimary key fingerprint: E528 BCC9 0DBF 5AFA 0F6C  C36A F780 4843 2FAE 2A1C\n     Subkey fingerprint: 966B 0D27 85E9 AEEC 1146  7A9D 8851 1153 6991 ED45\nIf the output contains the phrase Good signature from \"ec2autodiag@amazon.com <EC2 Rescue for Linux>\", it means that the signature has successfully been verified, and you can proceed to run the EC2Rescue for Linux installation script.\nIf the output includes the phrase BAD signature, check whether you performed the procedure correctly. If you continue to get this response, contact Amazon Web Services and do not run the installation file that you downloaded previously.\nThe following are details about the warnings that you might see:\nWARNING: This key is not certified with a trusted signature! There is no indication that the signature belongs to the owner. This refers to your personal level of trust in your belief that you possess an authentic public key for EC2Rescue for Linux. In an ideal world, you would visit an Amazon Web Services office and receive the key in person. However, more often you download it from a website. In this case, the website is an Amazon Web Services website.\ngpg2: no ultimately trusted keys found. This means that the specific key is not \"ultimately trusted\" by you (or by other people whom you trust).\nFor more information, see https://www.gnupg.org/."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2rl_working.html",
        "content": "EC2Rescue is a command line tool. After you have installed EC2Rescue on your Linux instance, you can get general help on how to use the tool by running ./ec2rl help. You can view the available modules by running ./ec2rl list, and you can get help on a specific module by running ./ec2rl help module_name.\nThe following are common tasks you can perform to get started using this tool.\nTasks\nRun EC2Rescue modules\nUpload the EC2Rescue module results\nCreate backups of an Amazon EC2 Linux instance\nRun EC2Rescue modules\nTo run all EC2Rescue modules\nUse the ./ec2rl run command without specifying any additional parameters. Some modules require root access. If you are not a root user, use sudo when you run the command.\n./ec2rl run\nTo run a specific EC2Rescue module\nUse the ./ec2rl run command and for --only-modules, specify the name of the module to run. Some modules require arguments to use them.\n./ec2rl run --only-modules=module_name --arguments\nFor example, to run the dig module to query the amazon.com domain, use the following command.\n./ec2rl run --only-modules=dig --domain=amazon.com\nTo view the results of an EC2Rescue module\nRun the module then view the log file in cat /var/tmp/ec2rl/logfile_location. For example, the log file for the dig module can be found in the following location:\ncat /var/tmp/ec2rl/timestamp/mod_out/run/dig.log\nUpload the EC2Rescue module results\nIf Support has requested the results for a EC2Rescue module, you can upload the log file using the EC2Rescue tool. You can upload the results either to a location provided by Support or to an Amazon S3 bucket that you own.\nTo upload results to a location provided by Support\nUse the ./ec2rl upload command. For --upload-directory, specify the location of the log file. For --support-url, specify the URL provided by Support.\n./ec2rl upload --upload-directory=/var/tmp/ec2rl/logfile_location --support-url=\"url_provided_by_aws_support\"\nTo upload results to an Amazon S3 bucket\nUse the ./ec2rl upload command. For --upload-directory, specify the location of the log file. For --presigned-url, specify a presigned URL for the S3 bucket. For more information about generating pre-signed URLs for Amazon S3, see Uploading Objects Using Pre-Signed URLs.\n./ec2rl upload --upload-directory=/var/tmp/ec2rl/logfile_location --presigned-url=\"presigned_s3_url\"\nCreate backups of an Amazon EC2 Linux instance\nYou can use EC2Rescue to backup your Linux instance by creating an AMI or by creating snapshots of it's attached volumes.\nTo create an AMI\nUse the ./ec2rl run command and for --backup, specify ami.\n./ec2rl run --backup=ami\nTo create multi-volume snapshots of all attached volumes\nUse the ./ec2rl run command and for --backup, specify allvolumes.\n./ec2rl run --backup=allvolumes\nTo create a snapshot of a specific attached volume\nUse the ./ec2rl run command and for --backup, specify the ID of the volume to back up.\n./ec2rl run --backup=volume_id"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2rl_moduledev.html",
        "content": "Modules are written in YAML, a data serialization standard. A module's YAML file consists of a single document, representing the module and its attributes.\nAdd module attributes\nThe following table lists the available module attributes.\nAttribute\nDescription\nname\nThe name of the module. The name should be less than or equal to 18 characters in length.\nversion\nThe version number of the module.\ntitle\nA short, descriptive title for the module. This value should be less than or equal to 50 characters in length.\nhelptext\nThe extended description of the module. Each line should be less than or equal to 75 characters in length. If the module consumes arguments, required or optional, include them in the helptext value.\nFor example:\nhelptext: !!str |\n  Collect output from ps for system analysis\n  Consumes --times= for number of times to repeat\n  Consumes --period= for time period between repetition\nplacement\nThe stage in which the module should be run. Supported values:\nprediagnostic\nrun\npostdiagnostic\nlanguage\nThe language that the module code is written in. Supported values:\nbash\npython\nNote\nPython code must be compatible with both Python 2.7.9+ and Python 3.2+.\nremediation\nIndicates whether the module supports remediation. Supported values are True or False.\nThe module defaults to False if this is absent, making it an optional attribute for those modules that do not support remediation.\ncontent\nThe entirety of the script code.\nconstraint\nThe name of the object containing the constraint values.\ndomain\nA descriptor of how the module is grouped or classified. The set of included modules uses the following domains:\napplication\nnet\nos\nperformance\nclass\nA descriptor of the type of task performed by the module. The set of included modules uses the following classes:\ncollect (collects output from programs)\ndiagnose (pass/fail based on a set of criteria)\ngather (copies files and writes to specific file)\ndistro\nThe list of Linux distributions that this module supports. The set of included modules uses the following distributions:\nalami (Amazon Linux)\nrhel\nubuntu\nsuse\nrequired\nThe required arguments that the module is consuming from the CLI options.\noptional\nThe optional arguments that the module can use.\nsoftware\nThe software executables used in the module. This attribute is intended to specify software that is not installed by default. The EC2Rescue for Linux logic ensures that these programs are present and executable before running the module.\npackage\nThe source software package for an executable. This attribute is intended to provide extended details on the package with the software, including a URL for downloading or getting further information.\nsudo\nIndicates whether root access is required to run the module.\nYou do not need to implement sudo checks in the module script. If the value is true, then the EC2Rescue for Linux logic only runs the module when the executing user has root access.\nperfimpact\nIndicates whether the module can have significant performance impact upon the environment in which it is run. If the value is true and the --perfimpact=true argument is not present, then the module is skipped.\nparallelexclusive\nSpecifies a program that requires mutual exclusivity. For example, all modules specifying \"bpf\" run in a serial manner.\nAdd environment variables\nThe following table lists the available environment variables.\nEnvironment Variable Description\nEC2RL_CALLPATH\nThe path to ec2rl.py. This path can be used to locate the lib directory and use vendored Python modules.\nEC2RL_WORKDIR\nThe main tmp directory for the diagnostic tool.\nDefault value: /var/tmp/ec2rl.\nEC2RL_RUNDIR\nThe directory where all output is stored.\nDefault value: /var/tmp/ec2rl/<date&timestamp>.\nEC2RL_GATHEREDDIR\nThe root directory for placing gathered module data.\nDefault value:/var/tmp/ec2rl/<date&timestamp>/mod_out/gathered/.\nEC2RL_NET_DRIVER\nThe driver in use for the first, alphabetically ordered, non-virtual network interface on the instance.\nExamples:\nxen_netfront\nixgbevf\nena\nEC2RL_SUDO\nTrue if EC2Rescue for Linux is running as root; otherwise, false.\nEC2RL_VIRT_TYPE\nThe virtualization type as provided by the instance metadata.\nExamples:\ndefault-hvm\ndefault-paravirtual\nEC2RL_INTERFACES\nAn enumerated list of interfaces on the system. The value is a string containing names, such as eth0, eth1, etc. This is generated via the functions.bash and is only available for modules that have sourced it.\nUse YAML syntax\nThe following should be noted when constructing your module YAML files:\nThe triple hyphen (---) denotes the explicit start of a document.\nThe !ec2rlcore.module.Module tag tells the YAML parser which constructor to call when creating the object from the data stream. You can find the constructor inside the module.py file.\nThe !!str tag tells the YAML parser to not attempt to determine the type of data, and instead interpret the content as a string literal.\nThe pipe character (|) tells the YAML parser that the value is a literal-style scalar. In this case, the parser includes all whitespace. This is important for modules because indentation and newline characters are kept.\nThe YAML standard indent is two spaces, which can be seen in the following examples. Ensure that you maintain standard indentation (for example, four spaces for Python) for your script and then indent the entire content two spaces inside the module file.\nExample modules\nExample one (mod.d/ps.yaml):\n--- !ec2rlcore.module.Module\n# Module document. Translates directly into an almost-complete Module object\nname: !!str ps\npath: !!str\nversion: !!str 1.0\ntitle: !!str Collect output from ps for system analysis\nhelptext: !!str |\n  Collect output from ps for system analysis\n  Requires --times= for number of times to repeat\n  Requires --period= for time period between repetition\nplacement: !!str run\npackage: \n  - !!str\nlanguage: !!str bash\ncontent: !!str |\n  #!/bin/bash\n  error_trap()\n  {\n      printf \"%0.s=\" {1..80}\n      echo -e \"\\nERROR: \"$BASH_COMMAND\" exited with an error on line ${BASH_LINENO[0]}\"\n      exit 0\n  }\n  trap error_trap ERR\n\n  # read-in shared function\n  source functions.bash\n  echo \"I will collect ps output from this $EC2RL_DISTRO box for $times times every $period seconds.\"\n  for i in $(seq 1 $times); do\n      ps auxww\n      sleep $period\n  done\nconstraint:\n  requires_ec2: !!str False\n  domain: !!str performance\n  class: !!str collect\n  distro: !!str alami ubuntu rhel suse\n  required: !!str period times\n  optional: !!str\n  software: !!str\n  sudo: !!str False\n  perfimpact: !!str False\n  parallelexclusive: !!str"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Windows-Server-EC2Rescue.html",
        "content": "EC2Rescue for Windows Server is an easy-to-use tool that you run on an Amazon EC2 Windows Server instance to diagnose and troubleshoot possible problems. It is valuable for collecting log files and troubleshooting issues and also proactively searching for possible areas of concern. It can even examine Amazon EBS root volumes from other instances and collect relevant logs for troubleshooting Windows Server instances using that volume. The following are some common issues that EC2Rescue can address:\nInstance connectivity issues due to firewall, Remote Desktop Protocol (RDP), or network interface configuration\nOperating system boot issues due to a stop error, boot loop, or corrupted registry\nIssues that might need advanced log analysis and troubleshooting\nEC2Rescue for Windows Server has two different modules:\nA data collector module that collects data from all different sources\nAn analyzer module that parses the data collected against a series of predefined rules to identify issues and provide suggestions\nThe EC2Rescue for Windows Server tool only runs on Amazon EC2 instances running Windows Server 2012 and later. When the tool starts, it checks whether it is running on an Amazon EC2 instance.\nNote\nThe AWSSupport-ExecuteEC2Rescue AWS Systems Manager Automation runbook uses the EC2Rescue tool to troubleshoot and, where possible, fix common connectivity issues with the specified EC2 instance. For more information, and to run this automation, see >AWSSupport-ExecuteEC2Rescue.\nIf you are using a Linux instance, see Troubleshoot impaired Amazon EC2 Linux instance using EC2Rescue.\nTopics\nTroubleshoot using EC2Rescue GUI\nTroubleshoot using EC2Rescue CLI\nTroubleshoot using EC2Rescue and Systems Manager"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2rw-gui.html",
        "content": "EC2Rescue for Windows Server can perform the following analysis on offline instances:\nOption Description\nDiagnose and Rescue\nEC2Rescue for Windows Server can detect and address issues with the following service settings:\nSystem Time\nRealTimeisUniversal \u2010 Detects whether the RealTimeisUniversal registry key is enabled. If disabled, Windows system time drifts when the timezone is set to a value other than UTC.\nWindows Firewall\nDomain networks \u2010 Detects whether this Windows Firewall profile is enabled or disabled.\nPrivate networks \u2010 Detects whether this Windows Firewall profile is enabled or disabled.\nGuest or public networks \u2010 Detects whether this Windows Firewall profile is enabled or disabled.\nRemote Desktop\nService Start \u2010 Detects whether the Remote Desktop service is enabled.\nRemote Desktop Connections \u2010 Detects whether this is enabled.\nTCP Port \u2010 Detects which port the Remote Desktop service is listening on.\nEC2Config (Windows Server 2012 R2 and earlier)\nInstallation \u2010 Detects which EC2Config version is installed.\nService Start \u2010 Detects whether the EC2Config service is enabled.\nEc2SetPassword \u2010 Generates a new administrator password.\nEc2HandleUserData \u2010 Allows you to run a user data script on the next boot of the instance.\nEC2Launch (Windows Server 2016 and later)\nInstallation \u2010 Detects which EC2Launch version is installed.\nEc2SetPassword \u2010 Generates a new administrator password.\nNetwork Interface\nDHCP Service Startup \u2010 Detects whether the DHCP service is enabled.\nEthernet detail \u2010 Displays information about the network driver version, if detected.\nDHCP on Ethernet \u2010 Detects whether DHCP is enabled.\nDisk signature status\nSignature on disk and Signature on Boot Configuration Database (BCD) \u2010 Detects whether the disk signature and the BCD signature are the same. If the values are different, EC2Rescue attempts to overwrite the disk signature with the signature on BCD.\nRestore\nPerform one of the following actions:\nLast Known Good Configuration \u2010 Attempts to boot the instance into the last known bootable state.\nRestore registry from backup \u2010 Restores the registry from \\Windows\\System32\\config\\RegBack.\nCapture Logs\nAllows you to capture logs on the instance for analysis.\nEC2Rescue for Windows Server can collect the following data from active and offline instances:\nItem Description\nEvent Log Collects application, system, and EC2Config event logs.\nRegistry Collects SYSTEM and SOFTWARE hives.\nWindows Update Log\nCollects log files generated by Windows Update.\nNote\nIn Windows Server 2016 and later, the log is collected in Event Tracing for Windows (ETW) format.\nSysprep Log Collects log files generated by the Windows System Preparation tool.\nDriver Setup Log Collects Windows SetupAPI logs (setupapi.dev.log and setupapi.setup.log).\nBoot Configuration Collects HKEY_LOCAL_MACHINE\\BCD00000000 hive.\nMemory Dump Collects any memory dump files that exist on the instance.\nEC2Config File Collects log files generated by the EC2Config service.\nEC2Launch File Collects log files generated by the EC2Launch scripts.\nSSM Agent File Collects log files generated by SSM Agent and Patch Manager logs.\nEC2 ElasticGPUs File Collects event logs related to elastic GPUs.\nECS Collects logs related to Amazon ECS.\nCloudEndure Collects log files related to CloudEndure Agent.\nAWS Replication Agent for MGN or DRS Log Files Collects log files related to AWS Application Migration Service or AWS Elastic Disaster Recovery.\nEC2Rescue for Windows Server can collect the following additional data from active instances:\nItem Description\nSystem Information Collects MSInfo32.\nGroup Policy Result Collects a Group Policy report.\nAnalyze an offline instance\nThe Offline Instance option is useful for debugging boot issues with Windows instances.\nTo perform an action on an offline instance\nFrom a working Windows Server instance, download the EC2Rescue for Windows Server tool and extract the files.\nYou can run the following PowerShell command to download EC2Rescue without changing your Internet Explorer Enhanced Security Configuration (ESC):\nInvoke-WebRequest https://s3.amazonaws.com/ec2rescue/windows/EC2Rescue_latest.zip -OutFile $env:USERPROFILE\\Desktop\\EC2Rescue_latest.zip\nThis command will download the EC2Rescue .zip file to the desktop of the currently logged in user.\nNote\nIf you receive an error when downloading the file, and you are using Windows Server 2016 or earlier, TLS 1.2 might need to be enabled for your PowerShell terminal. You can enable TLS 1.2 for the current PowerShell session with the following command and then try again:\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nStop the faulty instance, if it is not stopped already.\nDetach the EBS root volume from the faulty instance and attach the volume to a working Windows instance that has EC2Rescue for Windows Server installed.\nRun the EC2Rescue for Windows Server tool on the working instance and choose Offline Instance.\nSelect the disk of the newly mounted volume and choose Next.\nConfirm the disk selection and choose Yes.\nChoose the offline instance option to perform and choose Next.\nThe EC2Rescue for Windows Server tool scans the volume and collects troubleshooting information based on the selected log files.\nCollect data from an active instance\nYou can collect logs and other data from an active instance.\nTo collect data from an active instance\nConnect to your Windows instance.\nDownload the EC2Rescue for Windows Server tool to your Windows instance and extract the files.\nYou can run the following PowerShell command to download EC2Rescue without changing your Internet Explorer Enhanced Security Configuration (ESC):\nInvoke-WebRequest https://s3.amazonaws.com/ec2rescue/windows/EC2Rescue_latest.zip -OutFile $env:USERPROFILE\\Desktop\\EC2Rescue_latest.zip\nThis command will download the EC2Rescue .zip file to the desktop of the currently logged in user.\nNote\nIf you receive an error when downloading the file, and you are using Windows Server 2016 or earlier, TLS 1.2 might need to be enabled for your PowerShell terminal. You can enable TLS 1.2 for the current PowerShell session with the following command and then try again:\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nOpen the EC2Rescue for Windows Server application and accept the license agreement.\nChoose Next, Current instance, Capture logs.\nSelect the data items to collect and choose Collect.... Read the warning and choose Yes to continue.\nChoose a file name and location for the ZIP file and choose Save.\nAfter EC2Rescue for Windows Server completes, choose Open Containing Folder to view the ZIP file.\nChoose Finish."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2rw-cli.html",
        "content": "The EC2Rescue for Windows Server command line interface (CLI) allows you to run an EC2Rescue for Windows Server plugin (referred as an \"action\") programmatically.\nThe EC2Rescue for Windows Server tool has two execution modes:\n/online\u2014This allows you to take action on the instance that EC2Rescue for Windows Server is installed on, such as collect log files.\n/offline:<device_id>\u2014This allows you to take action on the offline root volume that is attached to a separate Amazon EC2 Windows instance, on which you have installed EC2Rescue for Windows Server.\nDownload the EC2Rescue for Windows Server tool to your Windows instance and extract the files. You can view the help file using the following command:\nEC2RescueCmd.exe /help\nEC2Rescue for Windows Server can perform the following actions on an Amazon EC2 Windows instance:\nCollect action\nRescue action\nRestore action\nCollect action\nNote\nYou can collect all logs, an entire log group, or an individual log within a group.\nEC2Rescue for Windows Server can collect the following data from active and offline instances.\nLog group Available logs Description\nall Collects all available logs.\neventlog\n'Application'\n'System'\n'EC2ConfigService'\nCollects application, system, and EC2Config event logs.\nmemory-dump\n'Memory Dump File'\n'Mini Dump Files'\nCollects any memory dump files that exist on the instance.\nec2config\n'Log Files'\n'Configuration Files'\nCollects log files generated by the EC2Config service.\nec2launch\n'Logs'\n'Config'\nCollects log files generated by the EC2Launch scripts.\nssm-agent\n'Log Files'\n'Patch Baseline Logs'\n'InstanceData'\nCollects log files generated by SSM Agent and Patch Manager logs.\nsysprep 'Log Files' Collects log files generated by the Windows System Preparation tool.\ndriver-setup\n'SetupAPI Log Files'\n'DPInst Log File'\n'AWS PV Setup Log File'\nCollects Windows SetupAPI logs (setupapi.dev.log and setupapi.setup.log).\nregistry\n'SYSTEM'\n'SOFTWARE'\n'BCD'\nCollects SYSTEM and SOFTWARE hives.\negpu\n'Event Log'\n'System Files'\nCollects event logs related to elastic GPUs.\nboot-config 'BCDEDIT Output' Collects HKEY_LOCAL_MACHINE\\BCD00000000 hive.\nwindows-update 'Log Files'\nCollects log files generated by Windows Update.\nNote\nIn Windows Server 2016 and later, the log is collected in Event Tracing for Windows (ETW) format.\ncloudendure\n'Migrate Script Logs'\n'Driver Logs'\n'CloudEndure File List'\nCollects log files related to CloudEndure Agent.\nEC2Rescue for Windows Server can collect the following additional data from active instances.\nLog group Available logs Description\nsystem-info 'MSInfo32 Output' Collects MSInfo32.\ngpresult 'GPResult Output'\nCollects a Group Policy report.\nThe following are the available options:\n/output:<outputFilePath> \u2010 Required destination file path location to save collected log files in zip format.\n/no-offline \u2010 Optional attribute used in offline mode. Does not set the volume offline after completing the action.\n/no-fix-signature \u2010 Optional attribute used in offline mode. Does not fix a possible disk signature collision after completing the action.\nExamples\nThe following are examples using the EC2Rescue for Windows Server CLI.\nOnline mode examples\nCollect all available logs:\nEC2RescueCmd /accepteula /online /collect:all /output:<outputFilePath>\nCollect only a specific log group:\nEC2RescueCmd /accepteula /online /collect:ec2config /output:<outputFilePath>\nCollect individual logs within a log group:\nEC2RescueCmd /accepteula /online /collect:'ec2config.Log Files,driver-setup.SetupAPI Log Files' /output:<outputFilePath>\nOffline mode examples\nCollect all available logs from an EBS volume. The volume is specified by the device_id value.\nEC2RescueCmd /accepteula /offline:xvdf /collect:all /output:<outputFilePath>\nCollect only a specific log group:\nEC2RescueCmd /accepteula /offline:xvdf /collect:ec2config /output:<outputFilePath>\nRescue action\nEC2Rescue for Windows Server can detect and address issues with the following service settings:\nService group\nAvailable actions\nDescription\nall\nsystem-time 'RealTimeIsUniversal' System Time\nRealTimeisUniversal \u2010 Detects whether the RealTimeisUniversal registry key is enabled. If disabled, Windows system time drifts when the timezone is set to a value other than UTC.\nfirewall\n'Domain networks'\n'Private networks'\n'Guest or public networks'\nWindows Firewall\nDomain networks \u2010 Detects whether this Windows Firewall profile is enabled or disabled.\nPrivate networks \u2010 Detects whether this Windows Firewall profile is enabled or disabled.\nGuest or public networks \u2010 Detects whether this Windows Firewall profile is enabled or disabled.\nrdp\n'Service Start'\n'Remote Desktop Connections'\n'TCP Port'\nRemote Desktop\nService Start \u2010 Detects whether the Remote Desktop service is enabled.\nRemote Desktop Connections \u2010 Detects whether this is enabled.\nTCP Port \u2010 Detects which port the Remote Desktop service is listening on.\nec2config\n'Service Start'\n'Ec2SetPassword'\n'Ec2HandleUserData'\nEC2Config\nService Start \u2010 Detects whether the EC2Config service is enabled.\nEc2SetPassword \u2010 Generates a new administrator password.\nEc2HandleUserData \u2010 Allows you to run a user data script on the next boot of the instance.\nec2launch 'Reset Administrator Password' Generates a new Windows administrator password.\nnetwork 'DHCP Service Startup'\nNetwork Interface\nDHCP Service Startup \u2010 Detects whether the DHCP service is enabled.\nThe following are the available options:\n/level:<level> \u2010 Optional attribute for the check level that the action should trigger. Allowed values are: information, warning, error, all. By default, it is set to error.\n/check-only \u2010 Optional attribute that generates a report but makes no modifications to the offline volume.\nNote\nIf EC2Rescue for Windows Server detects a possible disk signature collision, it corrects the signature after the offline process completes by default, even when you use the /check-only option. You must use the /no-fix-signature option to prevent the correction.\n/no-offline \u2010 Optional attribute that prevents the volume from being set offline after completing the action.\n/no-fix-signature \u2010 Optional attribute that does not fix a possible disk signature collision after completing the action.\nRescue examples\nThe following are examples using the EC2Rescue for Windows Server CLI. The volume is specified using the device_id value.\nAttempt to fix all identified issues on a volume:\nEC2RescueCmd /accepteula /offline:xvdf /rescue:all\nAttempt to fix all issues within a service group on a volume:\nEC2RescueCmd /accepteula /offline:xvdf /rescue:firewall\nAttempt to fix a specific item within a service group on a volume:\nEC2RescueCmd /accepteula /offline:xvdf /rescue:rdp.'Service Start'\nSpecify multiple issues to attempt to fix on a volume:\nEC2RescueCmd /accepteula /offline:xvdf /rescue:'system-time.RealTimeIsUniversal,ec2config.Service Start'\nRestore action\nEC2Rescue for Windows Server can detect and address issues with the following service settings:\nService Group\nAvailable Actions\nDescription\nRestore Last Known Good Configuration\nlkgc Last Known Good Configuration \u2010 Attempts to boot the instance into the last known bootable state.\nRestore Windows registry from latest backup regback Restore registry from backup \u2010 Restores the registry from \\Windows\\System32\\config\\RegBack.\nThe following are the available options:\n/no-offline\u2014Optional attribute that prevents the volume from being set offline after completing the action.\n/no-fix-signature\u2014Optional attribute that does not fix a possible disk signature collision after completing the action.\nRestore examples\nThe following are examples using the EC2Rescue for Windows Server CLI. The volume is specified using the device_id value.\nRestore last known good configuration on a volume:\nEC2RescueCmd /accepteula /offline:xvdf /restore:lkgc\nRestore the last Windows registry backup on a volume:\nEC2RescueCmd /accepteula /offline:xvdf /restore:regback"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2rw-ssm.html",
        "content": "Support provides you with a Systems Manager Run Command document to interface with your Systems Manager-enabled instance to run EC2Rescue for Windows Server. The Run Command document is called AWSSupport-RunEC2RescueForWindowsTool.\nThis Systems Manager Run Command document performs the following tasks:\nDownloads and verifies EC2Rescue for Windows Server.\nImports a PowerShell module to ease your interaction with the tool.\nRuns EC2RescueCmd with the provided command and parameters.\nThe Systems Manager Run Command document accepts three parameters:\nCommand\u2014The EC2Rescue for Windows Server action. The current allowed values are:\nResetAccess\u2014Resets the local Administrator password. The local Administrator password of the current instance will be reset and the randomly generated password will be securely stored in Parameter Store as /EC2Rescue/Password/<INSTANCE_ID>. If you select this action and provide no parameters, passwords are encrypted automatically with the default KMS key. Optionally, you can specify a KMS key ID in Parameters to encrypt the password with your own key.\nCollectLogs\u2014Runs EC2Rescue for Windows Server with the /collect:all action. If you select this action, Parameters must include an Amazon S3 bucket name to upload the logs to.\nFixAll\u2014Runs EC2Rescue for Windows Server with the /rescue:all action. If you select this action, Parameters must include the block device name to rescue.\nParameters\u2014The PowerShell parameters to pass for the specified command.\nNote\nIn order for the ResetAccess action to work, your Amazon EC2 instance needs to have the following policy attached in order to write the encrypted password to Parameter Store. Please wait a few minutes before attempting to reset the password of an instance after you have attached this policy to the related IAM role.\nUsing the default KMS key:\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ssm:PutParameter\"\n      ],\n      \"Resource\": [\n        \"arn:aws:ssm:region:account_id:parameter/EC2Rescue/Passwords/<instanceid>\"\n      ]\n    }\n  ]\n}\nUsing a custom KMS key:\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ssm:PutParameter\"\n      ],\n      \"Resource\": [\n        \"arn:aws:ssm:region:account_id:parameter/EC2Rescue/Passwords/<instanceid>\"\n        ] \n      }, \n      { \n      \"Effect\": \"Allow\",\n      \"Action\": [\n      \"kms:Encrypt\"\n      ],\n      \"Resource\": [\n        \"arn:aws:kms:region:account_id:key/<kmskeyid>\"\n      ]\n    }\n  ]\n}\nThe following procedure describes how to view the JSON for this document in the Amazon EC2 console.\nTo view the JSON for the Systems Manager Run Command document\nOpen the AWS Systems Manager console at https://console.aws.amazon.com/systems-manager/.\nIn the navigation pane, expand Shared Services and choose Documents.\nIn the search bar, set Owner as Owned by Me or Amazon and set the Document name prefix to AWSSupport-RunEC2RescueForWindowsTool.\nSelect the AWSSupport-RunEC2RescueForWindowsTool document, choose Contents, and then view the JSON.\nExamples\nHere are some examples on how to use the Systems Manager Run Command document to run EC2Rescue for Windows Server, using the AWS CLI. For more information about sending commands using the AWS CLI, see send-command.\nAttempt to fix all identified issues on an offline root volume\nAttempt to fix all identified issues on an offline root volume attached to an Amazon EC2 Windows instance:\naws ssm send-command --instance-ids \"i-0cb2b964d3e14fd9f\" --document-name \"AWSSupport-RunEC2RescueForWindowsTool\" --comment \"EC2Rescue offline volume xvdf\" --parameters \"Command=FixAll, Parameters='xvdf'\" --output text\nCollect logs from the current Amazon EC2 Windows instance\nCollect all logs from the current online Amazon EC2 Windows instance and upload them to an Amazon S3 bucket:\naws ssm send-command --instance-ids \"i-0cb2b964d3e14fd9f\" --document-name \"AWSSupport-RunEC2RescueForWindowsTool\" --comment \"EC2Rescue online log collection to S3\" --parameters \"Command=CollectLogs, Parameters='amzn-s3-demo-bucket'\" --output text\nCollect logs from an offline Amazon EC2 Windows instance volume\nCollect all logs from an offline volume attached to an Amazon EC2 Windows instance and upload them to Amazon S3 with a presigned URL:\naws ssm send-command --instance-ids \"i-0cb2b964d3e14fd9f\" --document-name \"AWSSupport-RunEC2RescueForWindowsTool\" --comment \"EC2Rescue offline log collection to S3\" --parameters \"Command=CollectLogs, Parameters=\\\"-Offline -BlockDeviceName xvdf -S3PreSignedUrl 'YOURS3PRESIGNEDURL'\\\"\" --output text\nReset the local Administrator password\nThe following examples show methods you can use to reset the local Administrator password. The output provides a link to Parameter Store, where you can find the randomly generated secure password you can then use to RDP to your Amazon EC2 Windows instance as the local Administrator.\nReset the local Administrator password of an online instance using the default AWS KMS key alias/aws/ssm:\naws ssm send-command --instance-ids \"i-0cb2b964d3e14fd9f\" --document-name \"AWSSupport-RunEC2RescueForWindowsTool\" --comment \"EC2Rescue online password reset\" --parameters \"Command=ResetAccess\" --output text\nReset the local Administrator password of an online instance using a KMS key:\naws ssm send-command --instance-ids \"i-0cb2b964d3e14fd9f\" --document-name \"AWSSupport-RunEC2RescueForWindowsTool\" --comment \"EC2Rescue online password reset\" --parameters \"Command=ResetAccess, Parameters=a133dc3c-a2g4-4fc6-a873-6c0720104bf0\" --output text\nNote\nIn this example, the KMS key is a133dc3c-a2g4-4fc6-a873-6c0720104bf0."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-serial-console.html",
        "content": "With the EC2 serial console, you have access to your Amazon EC2 instance's serial port, which you can use to troubleshoot boot, network configuration, and other issues. The serial console does not require your instance to have any networking capabilities. With the serial console, you can enter commands to an instance as if your keyboard and monitor are directly attached to the instance's serial port. The serial console session lasts during instance reboot and stop. During reboot, you can view all of the boot messages from the start.\nAccess to the serial console is not available by default. Your organization must grant account access to the serial console and configure IAM policies to grant your users access to the serial console. Serial console access can be controlled at a granular level by using instance IDs, resource tags, and other IAM levers. For more information, see Configure access to the EC2 Serial Console.\nThe serial console can be accessed by using the EC2 console or the AWS CLI.\nThe serial console is available at no additional cost.\nTopics\nPrerequisites for the EC2 Serial Console\nConfigure access to the EC2 Serial Console\nConnect to the EC2 Serial Console\nDisconnect from the EC2 Serial Console\nTroubleshoot your Amazon EC2 instance using the EC2 Serial Console"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-serial-console-prerequisites.html",
        "content": "To connect to the EC2 Serial Console and use your chosen tool for troubleshooting, the following prerequisites must be in place:\nAWS Regions\nWavelength Zones and AWS Outposts\nLocal Zones\nInstance types\nGrant access\nSupport for browser-based client\nInstance state\nAmazon EC2 Systems Manager\nConfigure your chosen troubleshooting tool\nAWS Regions\nSupported in all AWS Regions except the Asia Pacific (Malaysia) Region.\nWavelength Zones and AWS Outposts\nNot supported.\nLocal Zones\nSupported in all Local Zones.\nInstance types\nSupported instance types:\nLinux\nAll virtualized instances built on the Nitro System.\nAll bare metal instances except:\nGeneral purpose: a1.metal, mac1.metal, mac2.metal\nAccelerated computing: g5g.metal\nMemory optimized: u-6tb1.metal, u-9tb1.metal, u-12tb1.metal, u-18tb1.metal, u-24tb1.metal\nWindows\nAll virtualized instances built on the Nitro System. Not supported on bare metal instances.\nGrant access\nYou must complete the configuration tasks to grant access to the EC2 Serial Console. For more information, see Configure access to the EC2 Serial Console.\nSupport for browser-based client\nTo connect to the serial console using the browser-based client, your browser must support WebSocket. If your browser does not support WebSocket, connect to the serial console using your own key and an SSH client.\nInstance state\nMust be running.\nYou can't connect to the serial console if the instance is in the pending, stopping, stopped, shutting-down, or terminated state.\nFor more information about the instance states, see Amazon EC2 instance state changes.\nAmazon EC2 Systems Manager\nIf the instance uses Amazon EC2 Systems Manager, then SSM Agent version 3.0.854.0 or later must be installed on the instance. For information about SSM Agent, see Working with SSM Agent in the AWS Systems Manager User Guide.\nConfigure your chosen troubleshooting tool\nTo troubleshoot your instance via the serial console, you can use GRUB or SysRq on Linux instances, and Special Admin Console (SAC) on Windows instances. Before you can use these tools, you must first perform configuration steps on every instance on which you'll use them.\nUse the instructions for your instance's operating system to configure your chosen troubleshooting tool.\n(Linux instances) Configure GRUB\n(Linux instances) Configure SysRq\n(Windows instances) Enable SAC and the boot menu"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configure-access-to-serial-console.html",
        "content": "To configure access to the serial console, you must grant serial console access at the account level and then configure IAM policies to grant access to your users. For Linux instances you must also configure a password-based user on every instance so that your users can use the serial console for troubleshooting.\nBefore commencing, be sure to check the prerequisites.\nTopics\nLevels of access to the EC2 Serial Console\nManage account access to the EC2 Serial Console\nConfigure IAM policies for EC2 Serial Console access\nSet an OS user password on a Linux instance\nLevels of access to the EC2 Serial Console\nBy default, there is no access to the serial console at the account level. You need to explicitly grant access to the serial console at the account level. For more information, see Manage account access to the EC2 Serial Console.\nYou can use a service control policy (SCP) to allow access to the serial console within your organization. You can then have granular access control at the user level by using an IAM policy to control access. By using a combination of SCP and IAM policies, you have different levels of access control to the serial console.\nOrganization level\nYou can use a service control policy (SCP) to allow access to the serial console for member accounts within your organization. For more information about SCPs, see Service control policies in the AWS Organizations User Guide.\nInstance level\nYou can configure the serial console access policies by using IAM PrincipalTag and ResourceTag constructions and by specifying instances by their ID. For more information, see Configure IAM policies for EC2 Serial Console access.\nUser level\nYou can configure access at the user level by configuring an IAM policy to allow or deny a specified user the permission to push the SSH public key to the serial console service of a particular instance. For more information, see Configure IAM policies for EC2 Serial Console access.\nOS level (Linux instances only)\nYou can set a user password at the guest OS level. This provides access to the serial console for some use cases. However, to monitor the logs, you don't need a password-based user. For more information, see Set an OS user password on a Linux instance.\nManage account access to the EC2 Serial Console\nBy default, there is no access to the serial console at the account level. You need to explicitly grant access to the serial console at the account level.\nNote\nThis setting is configured at the account level, either directly in the account or by using a declarative policy. It must be configured in each AWS Region where you want to grant access to the serial console. Using a declarative policy allows you to apply the setting across multiple Regions simultaneously, as well as across multiple accounts simultaneously. When a declarative policy is in use, you can't modify the setting directly within an account. This topic describes how to configure the setting directly within an account. For information about using declarative policies, see Declarative policies in the AWS Organizations User Guide.\nTopics\nGrant permission to users to manage account access\nView account access status to the serial console\nGrant account access to the serial console\nDeny account access to the serial console\nGrant permission to users to manage account access\nTo allow your users to manage account access to the EC2 serial console, you need to grant them the required IAM permissions.\nThe following policy grants permissions to view the account status, and to allow and prevent account access to the EC2 serial console.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:GetSerialConsoleAccessStatus\",\n                \"ec2:EnableSerialConsoleAccess\",\n                \"ec2:DisableSerialConsoleAccess\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\nFor more information, see Creating IAM policies in the IAM User Guide.\nView account access status to the serial console\nTo view account access status to the serial console (console)\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nOn the left navigation pane, choose EC2 Dashboard.\nFrom Account attributes, choose EC2 Serial Console.\nThe EC2 Serial Console access field indicates whether account access is Allowed or Prevented.\nThe following screenshot shows that the account is prevented from using the EC2 serial console.\nTo view account access status to the serial console (AWS CLI)\nUse the get-serial-console-access-status command to view account access status to the serial console.\naws ec2 get-serial-console-access-status --region us-east-1\nIn the following output, true indicates that the account is allowed access to the serial console.\nThe ManagedBy field indicates the entity that configured the setting. In this example, account indicates that the setting was configured directly in the account. A value of declarative-policy would mean the setting was configured by a declarative policy. For more information, see Declarative policies in the AWS Organizations User Guide.\n{\n    \"SerialConsoleAccessEnabled\": true,\n    \"ManagedBy\": \"account\"\n}\nGrant account access to the serial console\nTo grant account access to the serial console (console)\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nOn the left navigation pane, choose EC2 Dashboard.\nFrom Account attributes, choose EC2 Serial Console.\nChoose Manage.\nTo allow access to the EC2 serial console of all instances in the account, select the Allow checkbox.\nChoose Update.\nTo grant account access to the serial console (AWS CLI)\nUse the enable-serial-console-access command to allow account access to the serial console.\naws ec2 enable-serial-console-access --region us-east-1\nIn the following output, true indicates that the account is allowed access to the serial console.\n{\n    \"SerialConsoleAccessEnabled\": true\n}\nDeny account access to the serial console\nTo deny account access to the serial console (console)\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nOn the left navigation pane, choose EC2 Dashboard.\nFrom Account attributes, choose EC2 Serial Console.\nChoose Manage.\nTo prevent access to the EC2 serial console of all instances in the account, clear the Allow checkbox.\nChoose Update.\nTo deny account access to the serial console (AWS CLI)\nUse the disable-serial-console-access command to prevent account access to the serial console.\naws ec2 disable-serial-console-access --region us-east-1\nIn the following output, false indicates that the account is denied access to the serial console.\n{\n    \"SerialConsoleAccessEnabled\": false\n}\nConfigure IAM policies for EC2 Serial Console access\nBy default, your users do not have access to the serial console. Your organization must configure IAM policies to grant your users the required access. For more information, see Creating IAM policies in the IAM User Guide.\nFor serial console access, create a JSON policy document that includes the ec2-instance-connect:SendSerialConsoleSSHPublicKey action. This action grants a user permission to push the public key to the serial console service, which starts a serial console session. We recommend restricting access to specific EC2 instances. Otherwise, all users with this permission can connect to the serial console of all EC2 instances.\nExample IAM policies\nExplicitly allow access to the serial console\nExplicitly deny access to the serial console\nUse resource tags to control access to the serial console\nExplicitly allow access to the serial console\nBy default, no one has access to the serial console. To grant access to the serial console, you need to configure a policy to explicitly allow access. We recommend configuring a policy that restricts access to specific instances.\nThe following policy allows access to the serial console of a specific instance, identified by its instance ID.\nNote that the DescribeInstances, DescribeInstanceTypes, and GetSerialConsoleAccessStatus actions do not support resource-level permissions, and therefore all resources, indicated by the * (asterisk), must be specified for these actions.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowDescribeInstances\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:DescribeInstances\",\n                \"ec2:DescribeInstanceTypes\",\n                \"ec2:GetSerialConsoleAccessStatus\"\n            ],\n             \"Resource\": \"*\"\n        },\n        {\n            \"Sid\": \"AllowinstanceBasedSerialConsoleAccess\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2-instance-connect:SendSerialConsoleSSHPublicKey\"\n            ],\n            \"Resource\": \"arn:aws:ec2:region:account-id:instance/i-0598c7d356eba48d7\"\n        }\n    ]\n}\nExplicitly deny access to the serial console\nThe following IAM policy allows access to the serial console of all instances, denoted by the * (asterisk), and explicitly denies access to the serial console of a specific instance, identified by its ID.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowSerialConsoleAccess\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2-instance-connect:SendSerialConsoleSSHPublicKey\",\n                \"ec2:DescribeInstances\",\n                \"ec2:DescribeInstanceTypes\",\n                \"ec2:GetSerialConsoleAccessStatus\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Sid\": \"DenySerialConsoleAccess\",\n            \"Effect\": \"Deny\",\n            \"Action\": [\n                \"ec2-instance-connect:SendSerialConsoleSSHPublicKey\"\n            ],\n            \"Resource\": \"arn:aws:ec2:region:account-id:instance/i-0598c7d356eba48d7\"\n        }\n    ]\n}\nUse resource tags to control access to the serial console\nYou can use resource tags to control access to the serial console of an instance.\nAttribute-based access control is an authorization strategy that defines permissions based on tags that can be attached to users and AWS resources. For example, the following policy allows a user to initiate a serial console connection for an instance only if that instance's resource tag and the principal's tag have the same SerialConsole value for the tag key.\nFor more information about using tags to control access to your AWS resources, see Controlling access to AWS resources in the IAM User Guide.\nNote that the DescribeInstances, DescribeInstanceTypes, and GetSerialConsoleAccessStatus actions do not support resource-level permissions, and therefore all resources, indicated by the * (asterisk), must be specified for these actions.\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowDescribeInstances\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:DescribeInstances\",\n                \"ec2:DescribeInstanceTypes\",\n                \"ec2:GetSerialConsoleAccessStatus\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Sid\": \"AllowTagBasedSerialConsoleAccess\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2-instance-connect:SendSerialConsoleSSHPublicKey\"\n            ],\n            \"Resource\": \"arn:aws:ec2:region:account-id:instance/*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"aws:ResourceTag/SerialConsole\": \"${aws:PrincipalTag/SerialConsole}\"\n                }\n            }\n        }\n    ]\n}\nSet an OS user password on a Linux instance\nNote\nThis section applies to Linux instances only.\nYou can connect to the serial console without a password. However, to use the serial console for troubleshooting a Linux instance, the instance must have a password-based OS user.\nYou can set the password for any OS user, including the root user. Note that the root user can modify all files, while each OS user might have limited permissions.\nYou must set a user password for every instance for which you will use the serial console. This is a one-time requirement for each instance.\nNote\nThe following instructions are applicable only if you launched your instance using a Linux AMI provided by AWS because, by default, AMIs provided by AWS are not configured with a password-based user. If you launched your instance using an AMI that already has the root user password configured, you can skip these instructions.\nTo set an OS user password on a Linux instance\nConnect to your instance. You can use any method for connecting to your instance, except the EC2 Serial Console connection method.\nTo set the password for a user, use the passwd command. In the following example, the user is root.\n[ec2-user ~]$ sudo passwd root\nThe following is example output.\nChanging password for user root.\nNew password:\nAt the New password prompt, enter the new password.\nAt the prompt, re-enter the password."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/connect-to-serial-console.html",
        "content": "You can connect to the serial console of your EC2 instance by using the Amazon EC2 console or via SSH. After connecting to the serial console, you can use it for troubleshooting boot, network configuration, and other issues. For more information about troubleshooting, see Troubleshoot your Amazon EC2 instance using the EC2 Serial Console.\nConsiderations\nOnly 1 active serial console connection is supported per instance.\nThe serial console connection typically lasts for 1 hour unless you disconnect from it. However, during system maintenance, Amazon EC2 will disconnect the serial console session.\nIt takes 30 seconds to tear down a session after you've disconnected from the serial console in order to allow a new session.\nSupported serial console ports: ttyS0 (Linux instances) and COM1 (Windows instances)\nWhen you connect to the serial console, you might observe a slight drop in your instance\u2019s throughput.\nTopics\nConnect using the browser-based client\nConnect using your own key and SSH client\nEC2 Serial Console endpoints and fingerprints\nConnect using the browser-based client\nYou can connect to your EC2 instance's serial console by using the browser-based client. You do this by selecting the instance in the Amazon EC2 console and choosing to connect to the serial console. The browser-based client handles the permissions and provides a successful connection.\nEC2 serial console works from most browsers, and supports keyboard and mouse input.\nBefore connecting, make sure you have completed the prerequisites.\nTo connect to your instance's serial port using the browser-based client (Amazon EC2 console)\nOpen the Amazon EC2 console at https://console.aws.amazon.com/ec2/.\nIn the navigation pane, choose Instances.\nSelect the instance and choose Actions, Monitor and troubleshoot, EC2 Serial Console, Connect.\nAlternatively, select the instance and choose Connect, EC2 Serial Console, Connect.\nAn in-browser terminal window opens.\nPress Enter. If a login prompt returns, you are connected to the serial console.\nIf the screen remains black, you can use the following information to help resolve issues with connecting to the serial console:\nCheck that you have configured access to the serial console. For more information, see Configure access to the EC2 Serial Console.\n(Linux instances only) Use SysRq to connect to the serial console. SysRq does not require that you connect via the browser-based client. For more information, see (Linux instances) Use SysRq to troubleshoot your instance.\n(Linux instances only) Restart getty. If you have SSH access to your instance, then connect to your instance using SSH, and restart getty using the following command.\n[ec2-user ~]$ sudo systemctl restart serial-getty@ttyS0\nReboot your instance. You can reboot your instance by using SysRq (Linux instances), the EC2 console, or the AWS CLI. For more information, see (Linux instances) Use SysRq to troubleshoot your instance (Linux instances) or Reboot your instance.\n(Linux instances only) At the login prompt, enter the username of the password-based user that you set up previously, and then press Enter.\n(Linux instances only) At the Password prompt, enter the password, and then press Enter.\nYou are now logged onto the instance and can use the serial console for troubleshooting.\nConnect using your own key and SSH client\nYou can use your own SSH key and connect to your instance from the SSH client of your choice while using the serial console API. This enables you to benefit from the serial console capability to push a public key to the instance.\nBefore connecting, make sure you have completed the prerequisites.\nTo connect to an instance's serial console using SSH\nPush your SSH public key to the instance to start a serial console session\nUse the send-serial-console-ssh-public-key command to push your SSH public key to the instance. This starts a serial console session.\nIf a serial console session has already been started for this instance, the command fails because you can only have one session open at a time. It takes 30 seconds to tear down a session after you've disconnected from the serial console in order to allow a new session.\naws ec2-instance-connect send-serial-console-ssh-public-key \\\n    --instance-id i-001234a4bf70dec41EXAMPLE \\\n    --serial-port 0 \\\n    --ssh-public-key file://my_key.pub \\\n    --region us-east-1\nConnect to the serial console using your private key\nUse the ssh command to connect to the serial console before the public key is removed from the serial console service. You have 60 seconds before it is removed.\nUse the private key that corresponds to the public key.\nThe username format is instance-id.port0, which comprises the instance ID and port 0. In the following example, the username is i-001234a4bf70dec41EXAMPLE.port0.\nThe endpoint of the serial console service is different for each Region. See the EC2 Serial Console endpoints and fingerprints table for each Region's endpoint. In the following example, the serial console service is in the us-east-1 Region.\nssh -i my_key i-001234a4bf70dec41EXAMPLE.port0@serial-console.ec2-instance-connect.us-east-1.aws\n(Optional) Verify the fingerprint\nWhen you connect for the first time to the serial console, you are prompted to verify the fingerprint. You can compare the serial console fingerprint with the fingerprint that's displayed for verification. If these fingerprints don't match, someone might be attempting a \"man-in-the-middle\" attack. If they match, you can confidently connect to the serial console.\nThe following fingerprint is for the serial console service in the us-east-1 Region. For the fingerprints for each Region, see EC2 Serial Console endpoints and fingerprints.\nSHA256:dXwn5ma/xadVMeBZGEru5l2gx+yI5LDiJaLUcz0FMmw\nNote\nThe fingerprint only appears the first time you connect to the serial console.\nPress Enter. If a prompt returns, you are connected to the serial console.\nIf the screen remains black, you can use the following information to help resolve issues with connecting to the serial console:\nCheck that you have configured access to the serial console. For more information, see Configure access to the EC2 Serial Console.\n(Linux instances only) Use SysRq to connect to the serial console. SysRq does not require that you connect via SSH. For more information, see (Linux instances) Use SysRq to troubleshoot your instance.\n(Linux instances only) Restart getty. If you have SSH access to your instance, then connect to your instance using SSH, and restart getty using the following command.\n[ec2-user ~]$ sudo systemctl restart serial-getty@ttyS0\nReboot your instance. You can reboot your instance by using SysRq (Linux instances only), the EC2 console, or the AWS CLI. For more information, see (Linux instances) Use SysRq to troubleshoot your instance (Linux instances only) or Reboot your instance.\n(Linux instances only) At the login prompt, enter the username of the password-based user that you set up previously, and then press Enter.\n(Linux instances only) At the Password prompt, enter the password, and then press Enter.\nYou are now logged onto the instance and can use the serial console for troubleshooting.\nEC2 Serial Console endpoints and fingerprints\nThe following are the service endpoints and fingerprints for EC2 Serial Console. To connect programmatically to an instance's serial console, you use an EC2 Serial Console endpoint. The EC2 Serial Console endpoints and fingerprints are unique for each AWS Region.\nRegion Name Region Endpoint Fingerprint\nUS East (Ohio)\nus-east-2\nserial-console.ec2-instance-connect.us-east-2.aws\nSHA256:EhwPkTzRtTY7TRSzz26XbB0/HvV9jRM7mCZN0xw/d/0\nUS East (N. Virginia)\nus-east-1\nserial-console.ec2-instance-connect.us-east-1.aws\nSHA256:dXwn5ma/xadVMeBZGEru5l2gx+yI5LDiJaLUcz0FMmw\nUS West (N. California)\nus-west-1\nserial-console.ec2-instance-connect.us-west-1.aws\nSHA256:OHldlcMET8u7QLSX3jmRTRAPFHVtqbyoLZBMUCqiH3Y\nUS West (Oregon)\nus-west-2\nserial-console.ec2-instance-connect.us-west-2.aws\nSHA256:EMCIe23TqKaBI6yGHainqZcMwqNkDhhAVHa1O2JxVUc\nAfrica (Cape Town)\naf-south-1\nec2-serial-console.af-south-1.api.aws\nSHA256:RMWWZ2fVePeJUqzjO5jL2KIgXsczoHlz21Ed00biiWI\nAsia Pacific (Hong Kong)\nap-east-1\nec2-serial-console.ap-east-1.api.aws\nSHA256:T0Q1lpiXxChoZHplnAkjbP7tkm2xXViC9bJFsjYnifk\nAsia Pacific (Hyderabad)\nap-south-2\nec2-serial-console.ap-south-2.api.aws\nSHA256:WJgPBSwV4/shN+OPITValoewAuYj15DVW845JEhDKRs\nAsia Pacific (Jakarta)\nap-southeast-3\nec2-serial-console.ap-southeast-3.api.aws\nSHA256:5ZwgrCh+lfns32XITqL/4O0zIfbx4bZgsYFqy3o8mIk\nAsia Pacific (Melbourne)\nap-southeast-4\nec2-serial-console.ap-southeast-4.api.aws\nSHA256:Avaq27hFgLvjn5gTSShZ0oV7h90p0GG46wfOeT6ZJvM\nAsia Pacific (Mumbai)\nap-south-1\nserial-console.ec2-instance-connect.ap-south-1.aws\nSHA256:oBLXcYmklqHHEbliARxEgH8IsO51rezTPiSM35BsU40\nAsia Pacific (Osaka)\nap-northeast-3\nec2-serial-console.ap-northeast-3.api.aws\nSHA256:Am0/jiBKBnBuFnHr9aXsgEV3G8Tu/vVHFXE/3UcyjsQ\nAsia Pacific (Seoul)\nap-northeast-2\nserial-console.ec2-instance-connect.ap-northeast-2.aws\nSHA256:FoqWXNX+DZ++GuNTztg9PK49WYMqBX+FrcZM2dSrqrI\nAsia Pacific (Singapore)\nap-southeast-1\nserial-console.ec2-instance-connect.ap-southeast-1.aws\nSHA256:PLFNn7WnCQDHx3qmwLu1Gy/O8TUX7LQgZuaC6L45CoY\nAsia Pacific (Sydney)\nap-southeast-2\nserial-console.ec2-instance-connect.ap-southeast-2.aws\nSHA256:yFvMwUK9lEUQjQTRoXXzuN+cW9/VSe9W984Cf5Tgzo4\nAsia Pacific (Tokyo)\nap-northeast-1\nserial-console.ec2-instance-connect.ap-northeast-1.aws\nSHA256:RQfsDCZTOfQawewTRDV1t9Em/HMrFQe+CRlIOT5um4k\nCanada (Central)\nca-central-1\nserial-console.ec2-instance-connect.ca-central-1.aws\nSHA256:P2O2jOZwmpMwkpO6YW738FIOTHdUTyEv2gczYMMO7s4\nCanada West (Calgary)\nca-west-1\nec2-serial-console.ca-west-1.api.aws\nSHA256:s3rc8lI2xhbhr3iedjJNxGAFLPGOLjx7IxxXrGckk6Q\nChina (Beijing)\ncn-north-1\nec2-serial-console.cn-north-1.api.amazonwebservices.com.cn\nSHA256:2gHVFy4H7uU3+WaFUxD28v/ggMeqjvSlgngpgLgGT+Y\nChina (Ningxia)\ncn-northwest-1\nec2-serial-console.cn-northwest-1.api.amazonwebservices.com.cn\nSHA256:TdgrNZkiQOdVfYEBUhO4SzUA09VWI5rYOZGTogpwmiM\nEurope (Frankfurt)\neu-central-1\nserial-console.ec2-instance-connect.eu-central-1.aws\nSHA256:aCMFS/yIcOdOlkXvOl8AmZ1Toe+bBnrJJ3Fy0k0De2c\nEurope (Ireland)\neu-west-1\nserial-console.ec2-instance-connect.eu-west-1.aws\nSHA256:h2AaGAWO4Hathhtm6ezs3Bj7udgUxi2qTrHjZAwCW6E\nEurope (London)\neu-west-2\nserial-console.ec2-instance-connect.eu-west-2.aws\nSHA256:a69rd5CE/AEG4Amm53I6lkD1ZPvS/BCV3tTPW2RnJg8\nEurope (Milan)\neu-south-1\nec2-serial-console.eu-south-1.api.aws\nSHA256:lC0kOVJnpgFyBVrxn0A7n99ecLbXSX95cuuS7X7QK30\nEurope (Paris)\neu-west-3\nserial-console.ec2-instance-connect.eu-west-3.aws\nSHA256:q8ldnAf9pymeNe8BnFVngY3RPAr/kxswJUzfrlxeEWs\nEurope (Spain)\neu-south-2\nec2-serial-console.eu-south-2.api.aws\nSHA256:GoCW2DFRlu669QNxqFxEcsR6fZUz/4F4n7T45ZcwoEc\nEurope (Stockholm)\neu-north-1\nserial-console.ec2-instance-connect.eu-north-1.aws\nSHA256:tkGFFUVUDvocDiGSS3Cu8Gdl6w2uI32EPNpKFKLwX84\nEurope (Zurich)\neu-central-2\nec2-serial-console.eu-central-2.api.aws\nSHA256:8Ppx2mBMf6WdCw0NUlzKfwM4/IfRz4OaXFutQXWp6mk\nIsrael (Tel Aviv)\nil-central-1\nec2-serial-console.il-central-1.api.aws\nSHA256:JR6q8v6kNNPi8+QSFQ4dj5dimNmZPTgwgsM1SNvtYyU\nMiddle East (Bahrain)\nme-south-1\nec2-serial-console.me-south-1.api.aws\nSHA256:nPjLLKHu2QnLdUq2kVArsoK5xvPJOMRJKCBzCDqC3k8\nMiddle East (UAE)\nme-central-1\nec2-serial-console.me-central-1.api.aws\nSHA256:zpb5duKiBZ+l0dFwPeyykB4MPBYhI/XzXNeFSDKBvLE\nSouth America (S\u00e3o Paulo)\nsa-east-1\nserial-console.ec2-instance-connect.sa-east-1.aws\nSHA256:rd2+/32Ognjew1yVIemENaQzC+Botbih62OqAPDq1dI\nAWS GovCloud (US-East)\nus-gov-east-1\nserial-console.ec2-instance-connect.us-gov-east-1.amazonaws.com\nSHA256:tIwe19GWsoyLClrtvu38YEEh+DHIkqnDcZnmtebvF28\nAWS GovCloud (US-West)\nus-gov-west-1\nserial-console.ec2-instance-connect.us-gov-west-1.amazonaws.com\nSHA256:kfOFRWLaOZfB+utbd3bRf8OlPf8nGO2YZLqXZiIw5DQ"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/disconnect-serial-console-session.html",
        "content": "If you no longer need to be connected to your instance's EC2 Serial Console, you can disconnect from it. When you disconnect from the serial console, any shell session running on the instance will continue to run. If you want to end the shell session, you'll need to end it before disconnecting from the serial console.\nConsiderations\nThe serial console connection typically lasts for 1 hour unless you disconnect from it. However, during system maintenance, Amazon EC2 will disconnect the serial console session.\nIt takes 30 seconds to tear down a session after you've disconnected from the serial console in order to allow a new session.\nThe way to disconnect from the serial console depends on the client.\nBrowser-based client\nTo disconnect from the serial console, close the serial console in-browser terminal window.\nStandard OpenSSH client\nTo disconnect from the serial console, use the following command to close the SSH connection. This command must be run immediately following a new line.\n~.\nThe command that you use for closing an SSH connection might be different depending on the SSH client that you're using."
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/troubleshoot-using-serial-console.html",
        "content": "By using EC2 Serial Console, you can troubleshoot boot, network configuration, and other issues by connecting to your instance's serial port.\nUse the instructions for your instance's operating system and for the tool you've configured on your instance.\nNote\nBefore commencing, make sure you have completed the prerequisites, including configuring your chosen troubleshooting tool.\n(Linux instances) Use GRUB to troubleshoot your instance\n(Linux instances) Use SysRq to troubleshoot your instance\n(Windows instances) Use SAC to troubleshoot your instance"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/diagnostic-interrupt.html",
        "content": "Warning\nDiagnostic interrupts are intended for use by advanced users. Incorrect usage could negatively impact your instance. Sending a diagnostic interrupt to an instance could trigger an instance to crash and reboot, which could lead to the loss of data.\nYou can send a diagnostic interrupt to an unreachable or unresponsive instance to manually trigger a kernel panic for a Linux instance, or a stop error (commonly referred to as a blue screen error) for a Windows instance.\nLinux instances\nLinux operating systems typically crash and reboot when a kernel panic occurs. The specific behavior of the operating system depends on its configuration. A kernel panic can also be used to cause the instance's operating system kernel to perform tasks, such as generating a crash dump file. You can then use the information in the crash dump file to conduct root cause analysis and debug the instance. The crash dump data is generated locally by the operating system on the instance itself.\nWindows instances\nIn general, Windows operating systems crash and reboot when a stop error occurs, but the specific behavior depends on its configuration. A stop error can also cause the operating system to write debugging information, such as a kernel memory dump, to a file. You can then use this information to conduct root cause analysis to debug the instance. The memory dump data is generated locally by the operating system on the instance itself.\nBefore sending a diagnostic interrupt to your instance, we recommend that you consult the documentation for your operating system and then make the necessary configuration changes.\nContents\nSupported instance types\nPrerequisites\nSend a diagnostic interrupt\nSupported instance types\nDiagnostic interrupt is supported on all Nitro-based instance types, except those powered by AWS Graviton processors. For more information, see instances built on the AWS Nitro System and AWS Graviton.\nPrerequisites\nBefore using a diagnostic interrupt, you must configure your instance's operating system. This ensures that it performs the actions that you need when a kernel panic (Linux instances) or stop error (Windows instances) occurs.\nLinux instances\nWindows instances\nSend a diagnostic interrupt\nAfter you have completed the necessary configuration changes, you can send a diagnostic interrupt to your instance using the AWS CLI or Amazon EC2 API.\nAWS CLI\nPowerShell\nTo send a diagnostic interrupt to your instance (AWS CLI)\nUse the send-diagnostic-interrupt command and specify the instance ID.\naws ec2 send-diagnostic-interrupt --instance-id i-1234567890abcdef0"
    },
    {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/DocumentHistory.html",
        "content": "The following table describes important additions to the Amazon EC2 User Guide starting in 2019. We also update the guide frequently to address the feedback that you send us.\nChange Description Date\nUpdated AmazonEC2ReadOnlyAccess policy\nAmazon EC2 added the GetSecurityGroupsForVpc operation to the existing AmazonEC2ReadOnlyAccess policy.\nDecember 27, 2024\nManaged instances\nYou can now view Amazon EC2 managed instances in the EC2 console.\nDecember 1, 2024\nDeclarative policies\nYou can now use declarative policies to apply account-level settings across multiple Regions and accounts simultaneously. Declarative policies are supported for configuring EC2 serial console access, Allowed AMIs, IMDS defaults, and block public access settings for VPCs, AMIs, and snapshots. For more information, see Declarative policies in the AWS Organizations User Guide, as well as the specific documentation for each supported feature.\nDecember 1, 2024\nAllowed AMIs\nYou can now control the discovery and use of AMIs in Amazon EC2 by specifying criteria that AMIs must meet.\nDecember 1, 2024\nInstant Capacity Blocks\nYou can now reserve Capacity Blocks for ML, that can start as soon as 30 minutes.\nNovember 21, 2024\nFuture-dated Capacity Reservations\nYou can now request Capacity Reservations for a future date.\nNovember 21, 2024\nExtend Capacity Block\nYou can now extend the duration of existing Capacity Blocks.\nNovember 21, 2024\n6 month Capacity Blocks\nYou can now reserve Capacity Blocks for ML for up to 6 months (182 days).\nNovember 21, 2024\nSaved filter sets\nYou can now create customized groups of filters and reuse them to efficiently view your EC2 resources.\nNovember 20, 2024\nPerformance protection\nWhen using attribute-based instance type selection for your EC2 Fleet or Spot Fleet, you can now enable performance protection to ensure that the selected instance types are similar to or exceed a specified performance baseline.\nNovember 20, 2024\nCapacity Reservations only\nYou can now specify that instances will only run in a Capacity Reservation or Capacity Reservation resource group.\nNovember 20, 2024\nIdentify source AMI\nYou can now identify the source AMI that was used to create an AMI.\nNovember 13, 2024\nSplit capacity\nYou can split off capacity from an existing Capacity Reservation to create a new reservation.\nOctober 30, 2024\nMove capacity\nYou can now move capacity from one Capacity Reservation to another.\nOctober 30, 2024\nBeginner tutorials\nTwo new tutorials for beginners: Launch my very first EC2 instance and Launch a test EC2 instance and connect to it.\nOctober 21, 2024\nWindows Server 2025 support\nAdd support for Windows Server 2025.\nOctober 16, 2024\nEC2 Global View\nEC2 Global View now enables you to view Capacity Reservations and Capacity Blocks in your account across all Regions.\nOctober 16, 2024\nLive migration host maintenance\nAmazon EC2 Dedicated Hosts now support live migration host maintenance, which automatically migrates supported instances from an impaired Dedicated Host to a replacement Dedicated Host without stopping and restarting them.\nOctober 15, 2024\nBilling assignment for shared Capacity Reservations\nYou can now assign the billing of any available capacity of a shared Capacity Reservation to a consumer account that belongs to the same AWS organization.\nOctober 14, 2024\nPTP hardware clock - additional Region support\nThe PTP hardware clock is now also available in US East (Ohio) and Asia Pacific (Malaysia).\nSeptember 23, 2024\nEC2 Instance Connect supports IPv6\nYou can now use EC2 Instance Connect to connect to the public IPv6 address of your instance.\nSeptember 23, 2024\nEC2 Instance Connect prefix lists\nYou can now select a managed prefix list for IPv4 or IPv6 addresses when creating rules in your security groups to allow SSH traffic from the EC2 Instance Connect service.\nSeptember 23, 2024\nNew capabilities to manage On-Demand Capacity Reservations\nYou can now split your Capacity Reservation, move capacity between Capacity Reservations, and modify the instance eligibility attribute of your Capacity Reservation.\nAugust 14, 2024\nHibernation support for C6g, C6gn, C6gd, C7g, C7gd, M6g, M6gd, M7g, M7gd, R6g, and R6gd\nHibernate your newly-launched instances running on C6g, C6gn, C6gd, C7g, C7gd, M6g, M6gd, M7g, M7gd, R6g, and R6gd instance types.\nJuly 30, 2024\nHibernation support for AMIs that support Graviton instance types\nHibernate your newly-launched instances that were launched from an Amazon Linux or Ubuntu AMI that supports Graviton instance types.\nJuly 30, 2024\nAdditional instance types supported for Credential Guard\nYou can now enable Credential Guard for C7i, C7-flex, M7i, M7i-flex, R7i, R7i-flex, and T3 instances.\nJune 26, 2024\nEC2 M1 Ultra Mac instances\nNew general purpose instance type that features Apple M1 Ultra processors.\nJune 17, 2024\nEC2 instance type finder \u2013 additional parameters\nThe EC2 instance type finder now provides additional parameters for you to specify more detailed requirements for your workload.\nJune 5, 2024\nU7i-12tb, U7in-16tb, U7in-24tb, and U7in-32tb instances\nNew high memory instance types that feature 4th generation Intel Xeon Scalable processors.\nMay 28, 2024\nNew managed policy for EC2 Fast Launch\nAdded the EC2FastLaunchFullAccess policy to perform API actions related to the EC2 Fast Launch feature from an instance.\nMay 14, 2024\nAMI deregistration protection\nYou can turn on deregistration protection on an AMI to prevent accidental or malicious deletion.\nApril 23, 2024\nPTP hardware clock \u2013 instance type support\nThe PTP hardware clock is now available on C7a, C7i, M7a, M7g, M7i, R7a, and R7i instance types.\nApril 22, 2024\nAdded Nitro performance considerations for enhanced networking\nThis page focuses on network considerations to help with performance tuning for your Nitro based Amazon EC2 instances.\nApril 4, 2024\nNew managed policy for VSS based EBS snapshots\nAmazon EC2 VSS has a new IAM managed policy available that you can add to your instance profile role to ensure that your permissions stay up-to-date and follow best practices.\nMarch 28, 2024\nPTP hardware clock \u2013 US East (N. Virginia)\nThe PTP hardware clock is now available in the US East (N. Virginia) Region.\nMarch 26, 2024\nSet IMDSv2 as the account default\nYou can set all new EC2 instance launches in your account to use Instance Metadata Service Version 2 (IMDSv2) by default.\nMarch 25, 2024\nTag new Linux AMIs created from a snapshot\nWhen you create a Linux AMI from a snapshot, you can tag the new AMI.\nMarch 7, 2024\nTag new AMIs and snapshots when copying\nWhen you copy an AMI, you can tag the new AMI and the new snapshots with the same tags, or you can tag them with different tags.\nMarch 7, 2024\nRemove AWS Management Pack pages\nThe AWS Management Pack was primarily used with Windows Server 2012 and prior. Those legacy OS platform versions are no longer supported. To manage and troubleshoot your fleet of servers running on AWS and on-premises, see AWS Systems Manager Fleet Manager.\nFebruary 12, 2024\nEC2 Instance Connect preinstalled on macOS AMIs\nEC2 Instance Connect now comes preinstalled on macOS Sonoma 14.2.1 or later, macOS Ventura 13.6.3 or later, and macOS Monterey 12.7.2 or later AMIs.\nJanuary 26, 2024\nEC2 Instance Connect support for CentOS, macOS, and RHEL\nYou can now install EC2 Instance Connect on supported CentOS, macOS, and RHEL AMIs.\nDecember 6, 2023\nHibernation support for C7a, C7i, R7a, R7i, and R7iz\nHibernate your newly-launched instances running on C7a, C7i, R7a, R7i, and R7iz instance types.\nDecember 1, 2023\nAmazon Q EC2 instance type selector\nAmazon Q EC2 instance type selector considers your use case, workload type, and CPU manufacturer preference, as well as how you prioritize price and performance. It then uses this data to provide guidance and suggestions for Amazon EC2 instance types that are best suited for your new workloads.\nNovember 28, 2023\nEC2 Free Tier\nYou can track your EC2 Free Tier usage from the EC2 Dashboard.\nNovember 26, 2023\nConsole-to-Code\nConsole-to-Code can help you get started with your automation code. Console-to-Code records your console actions, and then uses generative AI to suggest code in your preferred infrastructure-as code format. You can use the code as a starting point, customizing it to make it production-ready for your specific use case.\nNovember 26, 2023\nConfigurable idle connection tracking timeouts\nSecurity group connections that remain idle can lead to connection tracking exhaustion and cause connections not to be tracked and packets to be dropped. You can now set the timeout in seconds for security group connection tracking on an Elastic network interface.\nNovember 17, 2023\nPTP hardware clock\nSupported instances now have a Precision Time Protocol (PTP) hardware clock. The PTP hardware clock supports either NTP or a direct PTP connection.\nNovember 16, 2023\nChange instance type of instance enabled for hibernation\nYou can now change the instance type of an instance enabled for hibernation when it is in the stopped state.\nNovember 16, 2023\nInstance topology\nYou can use the DescribeInstanceTopology API to detect the location of your instances, and then use this information to optimize HPC and ML jobs by running them on instances that are physically closer to each other.\nNovember 13, 2023\nEC2 Fast Launch shared AMI support\nYou can now enable EC2 Fast Launch on an AMI that's shared with you. When you enable EC2 Fast Launch on a shared AMI, the pre-provisioned snapshots for faster launching are created in your account.\nNovember 6, 2023\nCapacity Blocks for ML\nYou can now reserve GPU instances on a future date to support your short duration machine learning (ML) workloads.\nOctober 31, 2023\nSpot Instance hibernation\nYou can now hibernate your Spot Instances using the same hibernation experience and instance families that are currently available for On-Demand Instances.\nOctober 24, 2023\nDefault settings for block public access for AMIs\nBlock public access for AMIs is now enabled by default for all new accounts and for existing accounts with no public AMIs.\nOctober 20, 2023\nAmazon EC2 Global View\nAmazon EC2 Global View supports additional resource types and customizable display options.\nOctober 18, 2023\nHibernation support for Ubuntu 22.04.2 LTS (Jammy Jellyfish)\nHibernate your newly-launched instances that were launched from the Ubuntu 22.04.2 LTS (Jammy Jellyfish) AMI.\nOctober 16, 2023\nDisable an AMI\nYou can disable an AMI to prevent it from being used for instance launches.\nOctober 12, 2023\nAttached EBS status checks\nYou can use the attached EBS status checks to monitor if the Amazon EBS volumes attached to an instance are reachable.\nOctober 11, 2023\nHibernation support for Red Hat Enterprise Linux 9\nHibernate your newly-launched instances that were launched from the Red Hat Enterprise Linux 9 AMI.\nOctober 2, 2023\nHibernation support for Microsoft Windows Server 2022\nHibernate your newly-launched instances that were launched from the Microsoft Windows Server 2022 AMI.\nOctober 2, 2023\nHibernation support for AL2023\nHibernate your newly-launched instances that were launched from the AL2023 AMI.\nOctober 2, 2023\nInitiate interruption of Spot Instances in a Spot Fleet\nYou can select a Spot Fleet in the Amazon EC2 console and initiate an interruption of Spot Instances in the fleet so that you can test how the applications on your Spot Instances handle being interrupted.\nSeptember 21, 2023\nBlock public access to AMIs\nYou can enable block public access for AMIs at the account level to block any attempts to make your AMIs public.\nSeptember 12, 2023\nHibernation support for M7i and M7i-flex\nHibernate your newly-launched instances running on M7i and M7i-flex instance types.\nAugust 22, 2023\nEC2-Classic has been deprecated\nWith EC2-Classic, EC2 instances ran in a single, flat network shared with other customers. Amazon VPC replaces EC2-Classic. With Amazon VPC, your instances run in a virtual private cloud (VPC) that's logically isolated to your AWS account.\nAugust 8, 2023\nDedicated Hosts\nYou can allocate Dedicated Hosts on specific hardware assets on an Outpost.\nJune 20, 2023\nEC2 Instance Connect Endpoint\nYou can now connect to an instance via SSH or RDP without requiring the instance to have a public IPv4 address.\nJune 13, 2023\nIMDS Package Analyzer\nYou can now use the IMDS Packet Analyzer to identify sources of IMDSv1 calls on your EC2 instances.\nJune 1, 2023\nEC2 Serial Console bare metal instances\nThe EC2 serial console now supports connectivity to the serial port of selected bare metal instances.\nApril 11, 2023\nLaunch template quotas\nYou can now view your quotas for launch templates and launch template versions in the Service Quotas console and by using the Service Quotas CLI.\nApril 3, 2023\nCapacity Reservation utilization notifications\nAWS Health now sends notifications when capacity utilization for Capacity Reservations in your account drops below 20 percent.\nApril 3, 2023\nCapacity Reservation groups\nYou can now add Capacity Reservations that are shared with you to Capacity Reservation groups that you own.\nMarch 30, 2023\nModify instance metadata options\nYou can now use the Amazon EC2 console to modify instance metadata options.\nMarch 20, 2023\nIn-place macOS operating system updates\nYou can now perform in-place Apple macOS operating system updates on M1 Mac instances.\nMarch 14, 2023\nUEFI preferred\nYou can now create a single AMI that supports both Unified Extensible Firmware Interface (UEFI) and Legacy BIOS boot modes.\nMarch 3, 2023\nModify an AMI for IMDSv2\nModify your existing AMI so that instances launched from the AMI require IMDSv2 by default.\nFebruary 28, 2023\nWindows Virtualization-based security - Credential Guard\nYou can enable Credential Guard, a Virtualization-based security (VBS) feature, on supported Amazon EC2 instances.\nJanuary 31, 2023\nAMI alias in launch templates\nYou can specify an AWS Systems Manager parameter instead of the AMI ID in your launch templates to avoid having to update the templates every time the AMI ID changes.\nJanuary 19, 2023\nHibernation support for C6i, I3en, and M6i\nHibernate your newly-launched instances running on C6i, I3en, and M6i instance types.\nDecember 19, 2022\nTorn write prevention\nImprove the performance of your I/O-intensive relational database workloads and reduce latency without negatively impacting data resiliency with torn write prevention, a block storage feature.\nNovember 29, 2022\nENA Express\nIncrease throughput and minimize tail latency of network traffic between EC2 instances with ENA Express.\nNovember 28, 2022\nCopy AMI tags\nWhen you copy an AMI, you can copy your user-defined AMI tags at the same time.\nNovember 18, 2022\nAMI size for store and restore\nThe size of an AMI (before compression) that can be stored and restored to and from an Amazon S3 bucket can now be up to 5,000 GB.\nNovember 16, 2022\npriceCapacityOptimized allocation strategy for Spot Instances\nA Spot Fleet that uses the priceCapacityOptimized allocation strategy looks at both price and capacity to select the Spot Instances pools that are the least likely to be interrupted and have the lowest possible price.\nNovember 10, 2022\nprice-capacity-optimized allocation strategy for Spot Instances\nAn EC2 Fleet that uses the price-capacity-optimized allocation strategy looks at both price and capacity to select the Spot Instances pools that are the least likely to be interrupted and have the lowest possible price.\nNovember 10, 2022\nCancel having an AMI shared with your account\nIf an AMI has been shared with your AWS account and you no longer want it shared with your account, you can remove your account from the AMI's launch permissions.\nNovember 4, 2022\nTransfer Elastic IP addresses\nYou can now transfer Elastic IP addresses from one AWS account to another.\nOctober 31, 2022\nReplace root volume\nYou can replace the root Amazon EBS volume for a running instance using an AMI.\nOctober 27, 2022\nAutomatically connect instance to database\nUse the automatic connection feature to quickly connect one or more EC2 instances to an RDS database to allow traffic between them.\nOctober 10, 2022\nAMI quotas\nQuotas now apply to creating and sharing AMIs.\nOctober 10, 2022\nConfigure AMI for IMDSv2\nConfigure your AMI so that instances launched from the AMI require IMDSv2 by default.\nOctober 3, 2022\nInitiate Spot Instance interruption\nYou can select a Spot Instance in the Amazon EC2 console and initiate an interruption so that you can test how the applications on your Spot Instances handle being interrupted.\nSeptember 26, 2022\nVerified AMI provider\nIn the Amazon EC2 console, public AMIs that are owned by Amazon or a verified Amazon partner are marked Verified provider.\nJuly 22, 2022\nPlacement groups on AWS Outposts\nAdded a host spread strategy for placement groups on an Outpost.\nJune 30, 2022\nDedicated Hosts on AWS Outposts\nYou can allocate Dedicated Hosts on AWS Outposts.\nMay 31, 2022\nInstance stop protection\nTo prevent your instance from being accidentally stopped, you can enable stop protection for the instance.\nMay 24, 2022\nUEFI Secure Boot\nUEFI Secure Boot builds on the long-standing secure boot process of Amazon EC2 and provides additional defense-in-depth that helps customers secure software from threats that persist across reboots.\nMay 10, 2022\nNitroTPM\nNitro Trusted Platform Module (NitroTPM) is a virtual device that is provided by the AWS Nitro System and conforms to the TPM 2.0 specification.\nMay 10, 2022\nAMI state change events\nAmazon EC2 now generates an event when an AMI changes state. You can use Amazon EventBridge to detect and react to these events.\nMay 9, 2022\nDescribe public keys\nYou can query the public key and creation date of an Amazon EC2 key pair.\nApril 28, 2022\nCreate key pairs\nYou can specify the key format (PEM or PPK) when creating a new key pair.\nApril 28, 2022\nMount Amazon FSx file systems at launch\nYou can mount a new or existing Amazon FSx for NetApp ONTAP or Amazon FSx for OpenZFS file system at launch using the new launch instance wizard.\nApril 12, 2022\nNew launch instance wizard\nA new and improved launch experience in the Amazon EC2 console, providing a quicker and easier way to launch an EC2 instance.\nApril 5, 2022\nAutomatically deprecate public AMIs\nBy default, the deprecation date of all public AMIs is set to two years from the AMI creation date.\nMarch 31, 2022\nInstance metadata category: autoscaling/target-lifecycle-state\nWhen using Auto Scaling groups, you can access an instance's target lifecycle state from the instance metadata.\nMarch 24, 2022\nAMI last launched time\nThe lastLaunchedTime indicates when your AMI was last used to launch an instance.\nFebruary 28, 2022\nED25519 keys\nED25519 keys are now supported for EC2 Instance Connect and EC2 Serial Console.\nJanuary 20, 2022\nAdditional RHEL platforms for Capacity Reservations\nAdditional Red Hat Enterprise Linux platforms for On-Demand Capacity Reservations.\nJanuary 11, 2022\nConfigure Windows AMIs for faster launching\nConfigure Windows AMIs to launch instances up to 65% faster, using pre-provisioned snapshots.\nJanuary 10, 2022\nInstance tags in instance metadata\nYou can access an instance's tags from the instance metadata.\nJanuary 6, 2022\nCapacity Reservations in cluster placement groups\nYou can create Capacity Reservations in cluster placement groups.\nJanuary 6, 2022\nSpot Fleet launch-before-terminate\nSpot Fleet can terminate the Spot Instances that receive a rebalance notification after new replacement Spot Instances are launched.\nNovember 4, 2021\nEC2 Fleet launch-before-terminate\nEC2 Fleet can terminate the Spot Instances that receive a rebalance notification after new replacement Spot Instances are launched.\nNovember 4, 2021\nCompare timestamps\nYou can determine the true time of an event by comparing the timestamp of your Amazon EC2 Linux instance with ClockBound.\nNovember 2, 2021\nShare AMIs with organizations and OUs\nYou can now share AMIs with the following AWS resources: organizations and organizational units (OUs).\nOctober 29, 2021\nSpot placement score\nGet a recommendation for an AWS Region or Availability Zone based on your Spot capacity requirements.\nOctober 27, 2021\nAttribute-based instance type selection for Spot Fleet\nSpecify the attributes that an instance must have, and Amazon EC2 will identify all the instance types with those attributes.\nOctober 27, 2021\nAttribute-based instance type selection for EC2 Fleet\nSpecify the attributes that an instance must have, and Amazon EC2 will identify all the instance types with those attributes.\nOctober 27, 2021\nOn-Demand Capacity Reservation Fleet\nYou can use a Capacity Reservation Fleet to launch a group, or fleet, of Capacity Reservations.\nOctober 5, 2021\nHibernation support for Ubuntu 20.04 LTS - Focal\nHibernate your newly-launched instances that were launched from the Ubuntu 20.04 LTS - Focal AMI.\nOctober 4, 2021\nEC2 Fleet and targeted On-Demand Capacity Reservations\nEC2 Fleet can launch On-Demand Instances into targeted Capacity Reservations.\nSeptember 22, 2021\nT3 instances on Dedicated Hosts\nSupport for T3 instances on Amazon EC2 Dedicated Host.\nSeptember 14, 2021\nHibernation support for RHEL, Fedora, and CentOS\nHibernate your newly-launched instances that were launched from RHEL, Fedora, and CentOS AMIs.\nSeptember 9, 2021\nAmazon EC2 Global View\nAmazon EC2 Global View enables you to view VPCs, subnets, instances, security groups, and volumes across multiple AWS Regions in a single console.\nSeptember 1, 2021\nHibernation support for C5d, M5d, and R5d\nHibernate your newly-launched instances running on C5d, M5d, and R5d instance types.\nAugust 19, 2021\nAmazon EC2 key pairs\nAmazon EC2 now supports ED25519 keys on Linux and Mac instances.\nAugust 17, 2021\nPrefixes for network interfaces\nYou can assign a private IPv4 or IPv6 CIDR range, either automatically or manually, to your network interfaces.\nJuly 22, 2021\nEvent windows\nYou can define custom, weekly-recurring event windows for scheduled events that reboot, stop, or terminate your Amazon EC2 instances.\nJuly 15, 2021\nResource IDs and tagging support for security group rules\nYou can refer to security group rules by resource ID. You can also add tags to your security group rules.\nJuly 7, 2021\nDeprecate an AMI\nYou can now specify when an AMI is deprecated.\nJune 11, 2021\nWindows per-second billing\nAmazon EC2 charges for Windows- and SQL Server-based usage by the second, with a one-minute minimum charge.\nJune 10, 2021\nCapacity Reservations on AWS Outposts\nYou can now use Capacity Reservations on AWS Outposts.\nMay 24, 2021\nCapacity Reservation sharing\nYou can now share Capacity Reservations created in Local Zones and Wavelength Zones.\nMay 24, 2021\nRoot volume replacement\nYou can now use root volume replacement tasks to replace the root EBS volume for running instances.\nApril 22, 2021\nStore and restore an AMI using S3\nStore EBS-backed AMIs in S3 and restore them from S3 to enable cross-partition copying of AMIs.\nApril 6, 2021\nEC2 Serial Console\nTroubleshoot boot and network connectivity issues by establishing a connection to the serial port of an instance.\nMarch 30, 2021\nBoot modes\nAmazon EC2 now supports UEFI boot on selected AMD- and Intel-based EC2 instances.\nMarch 22, 2021\nCreate a reverse DNS record\nYou can now set up reverse DNS lookup for your Elastic IP addresses.\nFebruary 3, 2021\nTag AMIs and snapshots on AMI creation\nWhen you create an AMI, you can tag the AMI and the snapshots with the same tags, or you can tag them with different tags.\nDecember 4, 2020\nUse Amazon EventBridge to monitor Spot Fleet events\nCreate EventBridge rules that trigger programmatic actions in response to Spot Fleet state changes and errors.\nNovember 20, 2020\nUse Amazon EventBridge to monitor EC2 Fleet events\nCreate EventBridge rules that trigger programmatic actions in response to EC2 Fleet state changes and errors.\nNovember 20, 2020\nDelete instant fleets\nDelete an EC2 Fleet of type instant and terminate all the instances in the fleet in a single API call.\nNovember 18, 2020\nHibernation support for T3 and T3a\nHibernate your newly-launched instances running on T3 and T3a instance types.\nNovember 17, 2020\nAmazon EFS Quick Create\nYou can create and mount an Amazon EFS file system to an instance at launch using Amazon EFS Quick Create.\nNovember 9, 2020\nInstance metadata category: events/recommendations/rebalance\nThe approximate time, in UTC, when the EC2 instance rebalance recommendation notification is emitted for the instance.\nNovember 4, 2020\nEC2 instance rebalance recommendation\nA signal that notifies you when a Spot Instance is at elevated risk of interruption.\nNovember 4, 2020\nCapacity Reservations in Wavelength Zones\nCapacity Reservations can now be created and used in Wavelength Zones.\nNovember 4, 2020\nCapacity Rebalancing\nConfigure Spot Fleet or EC2 Fleet to launch a replacement Spot Instance when Amazon EC2 emits a rebalance recommendation.\nNovember 4, 2020\nHibernation support for I3, M5ad, and R5ad\nHibernate your newly-launched instances running on I3, M5ad, and R5ad instance types.\nOctober 21, 2020\nSpot Instance vCPU limits\nSpot Instance limits are now managed in terms of the number of vCPUs that your running Spot Instances are either using or will use pending the fulfillment of open requests.\nOctober 1, 2020\nCapacity Reservations in Local Zones\nCapacity Reservations can now be created and used in Local Zones.\nSeptember 30, 2020\nHibernation support for M5a and R5a\nHibernate your newly-launched instances running on M5a and R5a instance types.\nAugust 28, 2020\nInstance metadata provides instance location and placement information\nNew instance metadata fields under the placement category: Region, placement group name, partition number, host ID, and Availability Zone ID.\nAugust 24, 2020\nCapacity Reservation groups\nYou can use AWS Resource Groups to create logical collections of Capacity Reservations, and then target instance launches into those groups.\nJuly 29, 2020\nEC2Launch v2\nYou can use EC2Launch v2 to perform tasks during instance startup, if an instance is stopped and later started, if an instance is restarted, and on demand. EC2Launch v2 supports all versions of Windows Server and replaces EC2Launch and EC2Config.\nJune 30, 2020\nBring your own IPv6 addresses\nYou can bring part or all of your IPv6 address range from your on-premises network to your AWS account.\nMay 21, 2020\nLaunch instances using a Systems Manager parameter\nYou can specify a AWS Systems Manager parameter instead of an AMI when you launch an instance.\nMay 5, 2020\nCustomize scheduled event notifications\nYou can customize scheduled event notifications to include tags in the email notification.\nMay 4, 2020\nWindows Server on Dedicated Hosts\nYou can use Windows Server AMIs provided by Amazon to run the latest versions of Windows Server on Dedicated Hosts.\nApril 7, 2020\nStop and start a Spot Instance\nStop your Spot Instances backed by Amazon EBS and start them at will, instead of relying on the stop interruption behavior.\nJanuary 13, 2020\nResource tagging\nYou can tag egress-only internet gateways, local gateways, local gateway route tables, local gateway virtual interfaces, local gateway virtual interface groups, local gateway route table VPC associations, and local gateway route table virtual interface group associations.\nJanuary 10, 2020\nConnect to your instance using Session Manager\nYou can start a Session Manager session with an instance from the Amazon EC2 console.\nDecember 18, 2019\nDedicated Hosts and host resource groups\nDedicated Hosts can now be used with host resource groups.\nDecember 2, 2019\nDedicated Host sharing\nYou can now share your Dedicated Hosts across AWS accounts.\nDecember 2, 2019\nDefault credit specification at the account level\nYou can set the default credit specification per burstable performance instance family at the account level per AWS Region.\nNovember 25, 2019\nInstance type discovery\nYou can find an instance type that meets your needs.\nNovember 22, 2019\nDedicated Hosts\nYou can now configure a Dedicated Host to support multiple instance types in an instance family.\nNovember 21, 2019\nInstance Metadata Service Version 2\nYou can use Instance Metadata Service Version 2, which is a session-oriented method for requesting instance metadata.\nNovember 19, 2019\nElastic Fabric Adapter\nElastic Fabric Adapters can now be used with Intel MPI 2019 Update 6.\nNovember 15, 2019\nHibernation support for On-Demand Windows instances\nYou can hibernate On-Demand Windows instances.\nOctober 14, 2019\nQueued purchases of Reserved Instances\nYou can queue the purchase of a Reserved Instance up to three years in advance.\nOctober 4, 2019\nDiagnostic interrupt\nYou can send a diagnostic interrupt to an unreachable or unresponsive instance to trigger a kernel panic.\nAugust 14, 2019\nCapacity optimized allocation strategy\nUsing EC2 Fleet or Spot Fleet, you can launch Spot Instances from Spot pools with optimal capacity for the number of instances that are launching.\nAugust 12, 2019\nOn-Demand Capacity Reservation sharing\nYou can now share your Capacity Reservations across AWS accounts.\nJuly 29, 2019\nElastic Fabric Adapter\nEFA now supports Open MPI 3.1.4 and Intel MPI 2019 Update 4.\nJuly 26, 2019\nEC2 Instance Connect\nEC2 Instance Connect is a simple and secure way to connect to your instances using Secure Shell (SSH).\nJune 27, 2019\nHost recovery\nAutomatically restart your instances on a new host in the event of an unexpected hardware failure on a Dedicated Host.\nJune 5, 2019\nVSS application-consistent snapshots\nTake application-consistent snapshots of all Amazon EBS volumes attached to your Windows instances using AWS Systems Manager Run Command.\nMay 13, 2019\nWindows to Linux Replatforming Assistant for Microsoft SQL Server Databases\nMove existing Microsoft SQL Server workloads from a Windows to a Linux operating system. Updated link points to the Microsoft SQL Server on Amazon EC2 User Guide.\nMay 8, 2019\nWindows Automated Upgrade\nPerform automated upgrades of EC2 Windows instances using AWS Systems Manager.\nMay 6, 2019\nElastic Fabric Adapter\nYou can attach an Elastic Fabric Adapter to your instances to accelerate High Performance Computing (HPC) applications.\nApril 29, 2019\nFor information about the instance type releases for Amazon EC2, see Document history in the Amazon EC2 Instance Types Guide.\nHistory for 2018 and earlier\nThe following table describes important additions to the Amazon EC2 User Guide in 2018 and earlier years.\nFeature API version Description Release date\nPartition placement groups 2016-11-15 Partition placement groups spread instances across logical partitions, ensuring that instances in one partition do not share underlying hardware with instances in other partitions. For more information, see Partition placement groups. 20 December 2018\nHibernate EC2 Linux instances 2016-11-15 You can hibernate a Linux instance if it's enabled for hibernation and it meets the hibernation prerequisites. For more information, see Hibernate your Amazon EC2 instance. 28 November 2018\nAmazon Elastic Inference Accelerators 2016-11-15 You can attach an Amazon EI accelerator to your instances to add GPU-powered acceleration to reduce the cost of running deep learning inference. 28 November 2018\nSpot console recommends a fleet of instances 2016-11-15\nThe Spot console recommends a fleet of instances based on Spot best practice (instance diversification) to meet the minimum hardware specifications (vCPUs, memory, and storage) for your application need. For more information, see Create a Spot Fleet.\n20 November 2018\nNew EC2 Fleet request type: instant 2016-11-15 EC2 Fleet now supports a new request type, instant, that you can use to synchronously provision capacity across instance types and purchase models. The instant request returns the launched instances in the API response, and takes no further action, enabling you to control if and when instances are launched. For more information, see EC2 Fleet and Spot Fleet request types. 14 November 2018\nSpot savings information 2016-11-15 You can view the savings made from using Spot Instances for a single Spot Fleet or for all Spot Instances. For more information, see Savings from purchasing Spot Instances. 5 November 2018\nConsole support for optimizing CPU options 2016-11-15 When you launch an instance, you can optimize the CPU options to suit specific workloads or business needs using the Amazon EC2 console. For more information, see CPU options for Amazon EC2 instances. 31 October 2018\nConsole support for creating a launch template from an instance 2016-11-15 You can create a launch template using an instance as the basis for a new launch template using the Amazon EC2 console. For more information, see Create an Amazon EC2 launch template. 30 October 2018\nOn-Demand Capacity Reservations 2016-11-15 You can reserve capacity for your Amazon EC2 instances in a specific Availability Zone for any duration. This allows you to create and manage capacity reservations independently from the billing discounts offered by Reserved Instances (RI). For more information, see Reserve compute capacity with EC2 On-Demand Capacity Reservations. 25 October 2018\nBring Your Own IP Addresses (BYOIP) 2016-11-15 You can bring part or all of your public IPv4 address range from your on-premises network to your AWS account. After you bring the address range to AWS, it appears in your account as an address pool. You can create an Elastic IP address from your address pool and use it with your AWS resources. For more information, see Bring your own IP addresses (BYOIP) to Amazon EC2. 23 October 2018\nDedicated Host tag on create and console support\n2016-11-15\nYou can tag your Dedicated Hosts on creation, and you can manage your Dedicated Host tags using the Amazon EC2 console. For more information, see Allocate an Amazon EC2 Dedicated Host for use in your account.\n08 October 2018\nConsole support for scheduled scaling for Spot Fleet 2016-11-15 Increase or decrease the current capacity of the fleet based on the date and time. For more information, see Scheduled scaling: Scale Spot Fleet on a schedule. 20 September 2018\nAllocation strategies for EC2 Fleets\n2016-11-15\nYou can specify whether On-Demand capacity is fulfilled by price (lowest price first) or priority (highest priority first). You can specify the number of Spot pools across which to allocate your target Spot capacity. For more information, see Use allocation strategies to determine how EC2 Fleet or Spot Fleet fulfills Spot and On-Demand capacity.\n26 July 2018\nAllocation strategies for Spot Fleets\n2016-11-15\nYou can specify whether On-Demand capacity is fulfilled by price (lowest price first) or priority (highest priority first). You can specify the number of Spot pools across which to allocate your target Spot capacity. For more information, see Use allocation strategies to determine how EC2 Fleet or Spot Fleet fulfills Spot and On-Demand capacity.\n26 July 2018\nAutomate snapshot lifecycle\n2016-11-15\nYou can use Amazon Data Lifecycle Manager to automate creation and deletion of snapshots for your EBS volumes. For more information, see Amazon Data Lifecycle Manager.\n12 July 2018\nLaunch template CPU options\n2016-11-15\nWhen you create a launch template using the command line tools, you can optimize the CPU options to suit specific workloads or business needs. For more information, see Create an Amazon EC2 launch template.\n11 July 2018\nTag Dedicated Hosts\n2016-11-15\nYou can tag your Dedicated Hosts.\n3 July 2018\nGet latest console output\n2016-11-15\nYou can retrieve the latest console output for some instance types when you use the get-console-output AWS CLI command.\n9 May 2018\nOptimize CPU options\n2016-11-15\nWhen you launch an instance, you can optimize the CPU options to suit specific workloads or business needs. For more information, see CPU options for Amazon EC2 instances.\n8 May 2018\nEC2 Fleet\n2016-11-15\nYou can use EC2 Fleet to launch a group of instances across different EC2 instance types and Availability Zones, and across On-Demand Instance, Reserved Instance, and Spot Instance purchasing models. For more information, see EC2 Fleet and Spot Fleet.\n2 May 2018\nOn-Demand Instances in Spot Fleets\n2016-11-15\nYou can include a request for On-Demand capacity in your Spot Fleet request to ensure that you always have instance capacity. For more information, see EC2 Fleet and Spot Fleet.\n2 May 2018\nTag EBS snapshots on creation\n2016-11-15\nYou can apply tags to snapshots during creation.\n2 April 2018\nChange placement groups\n2016-11-15\nYou can move an instance in or out of a placement group, or change its placement group. For more information, see Change the placement for an EC2 instance.\n1 March 2018\nLonger resource IDs\n2016-11-15\nYou can enable the longer ID format for more resource types.\n9 February 2018\nNetwork performance improvements\n2016-11-15\nInstances outside of a cluster placement group can now benefit from increased bandwidth when sending or receiving network traffic between other instances or Amazon S3.\n24 January 2018\nTag Elastic IP addresses\n2016-11-15\nYou can tag your Elastic IP addresses.\n21 December 2017\nAmazon Time Sync Service\n2016-11-15\nYou can use the Amazon Time Sync Service to keep accurate time on your instance. For more information, see Precision clock and time synchronization on your EC2 instance.\n29 November 2017\nT2 Unlimited\n2016-11-15\nT2 Unlimited instances can burst above the baseline for as long as required. For more information, see Burstable performance instances.\n29 November 2017\nLaunch templates\n2016-11-15\nA launch template can contain all or some of the parameters to launch an instance, so that you don't have to specify them every time you launch an instance. For more information, see Store instance launch parameters in Amazon EC2 launch templates.\n29 November 2017\nSpread placement\n2016-11-15\nSpread placement groups are recommended for applications that have a small number of critical instances that should be kept separate from each other. For more information, see Spread placement groups.\n29 November 2017\nSpot Instance hibernation\n2016-11-15\nThe Spot service can hibernate Spot Instances in the event of an interruption.\n28 November 2017\nSpot Fleet target tracking\n2016-11-15\nYou can set up target tracking scaling policies for your Spot Fleet. For more information, see Target tracking scaling: Scale Spot Fleet by targeting a value for a specific metric.\n17 November 2017\nSpot Fleet integrates with Elastic Load Balancing\n2016-11-15\nYou can attach one or more load balancers to a Spot Fleet.\n10 November 2017\nMerge and split Convertible Reserved Instances\n2016-11-15\nYou can exchange (merge) two or more Convertible Reserved Instances for a new Convertible Reserved Instance. You can also use the modification process to split a Convertible Reserved Instance into smaller reservations. For more information, see Exchange Convertible Reserved Instances.\n6 November 2017\nModify VPC tenancy\n2016-11-15\nYou can change the instance tenancy attribute of a VPC from dedicated to default. For more information, see Change the instance tenancy of a VPC.\n16 October 2017\nPer second billing\n2016-11-15\nAmazon EC2 charges for Linux-based usage by the second, with a one-minute minimum charge.\n2 October 2017\nStop on interruption\n2016-11-15\nYou can specify whether Amazon EC2 should stop or terminate Spot Instances when they are interrupted. For more information, see Behavior of Spot Instance interruptions.\n18 September 2017\nTag NAT gateways\n2016-11-15\nYou can tag your NAT gateway. For more information, see Tag your resources.\n7 September 2017\nSecurity group rule descriptions\n2016-11-15\nYou can add descriptions to your security group rules.\n31 August 2017\nElastic Graphics\n2016-11-15\nAttach Elastic Graphics accelerators to your instances to accelerate the graphics performance of your applications.\n29 August 2017\nRecover Elastic IP addresses\n2016-11-15\nIf you release an Elastic IP address for use in a VPC, you might be able to recover it.\n11 August 2017\nTag Spot Fleet instances\n2016-11-15\nYou can configure your Spot Fleet to automatically tag the instances that it launches.\n24 July 2017\nTag resources during creation\n2016-11-15\nYou can apply tags to instances and volumes during creation. For more information, see Tag your resources. In addition, you can use tag-based resource-level permissions to control the tags that are applied. For more information see, Grant permission to tag Amazon EC2 resources during creation.\n28 March 2017\nPerform modifications on attached EBS volumes\n2016-11-15\nWith most EBS volumes attached to most EC2 instances, you can modify volume size, type, and IOPS without detaching the volume or stopping the instance.\n13 February 2017\nAttach an IAM role\n2016-11-15\nYou can attach, detach, or replace an IAM role for an existing instance. For more information, see IAM roles for Amazon EC2.\n9 February 2017\nDedicated Spot Instances\n2016-11-15\nYou can run Spot Instances on single-tenant hardware in a virtual private cloud (VPC). For more information, see Launch on single-tenant hardware.\n19 January 2017\nIPv6 support\n2016-11-15\nYou can associate an IPv6 CIDR with your VPC and subnets, and assign IPv6 addresses to instances in your VPC. For more information, see Amazon EC2 instance IP addressing.\n1 December 2016\nAutomatic scaling for Spot Fleet\nYou can now set up scaling policies for your Spot Fleet. For more information, see Understand automatic scaling for Spot Fleet.\n1 September 2016\nElastic Network Adapter (ENA)\n2016-04-01\nYou can now use ENA for enhanced networking. For more information, see Enhanced networking on Amazon EC2 instances.\n28 June 2016\nEnhanced support for viewing and modifying longer IDs\n2016-04-01\nYou can now view and modify longer ID settings for other IAM users, IAM roles, or the root user.\n23 June 2016\nCopy encrypted Amazon EBS snapshots between AWS accounts\n2016-04-01\nYou can now copy encrypted EBS snapshots between AWS accounts.\n21 June 2016\nCapture a screenshot of an instance console\n2015-10-01\nYou can now obtain additional information when debugging instances that are unreachable. For more information, see Capture a screenshot of an unreachable instance.\n24 May 2016\nTwo new EBS volume types\n2015-10-01\nYou can now create Throughput Optimized HDD (st1) and Cold HDD (sc1) volumes.\n19 April 2016\nAdded new NetworkPacketsIn and NetworkPacketsOut metrics for Amazon EC2\nAdded new NetworkPacketsIn and NetworkPacketsOut metrics for Amazon EC2. For more information, see Instance metrics.\n23 March 2016\nCloudWatch metrics for Spot Fleet\nYou can now get CloudWatch metrics for your Spot Fleet. For more information, see Monitor your EC2 Fleet or Spot Fleet using CloudWatch.\n21 March 2016\nScheduled Instances\n2015-10-01\nScheduled Reserved Instances (Scheduled Instances) enable you to purchase capacity reservations that recur on a daily, weekly, or monthly basis, with a specified start time and duration.\n13 January 2016\nLonger resource IDs\n2015-10-01\nWe're gradually introducing longer length IDs for some Amazon EC2 and Amazon EBS resource types. During the opt-in period, you can enable the longer ID format for supported resource types.\n13 January 2016\nClassicLink DNS support\n2015-10-01\nYou can enable ClassicLink DNS support for your VPC so that DNS hostnames that are addressed between linked EC2-Classic instances and instances in the VPC resolve to private IP addresses and not public IP addresses.\n11 January 2016\nDedicated hosts\n2015-10-01\nAn Amazon EC2 Dedicated host is a physical server with instance capacity dedicated for your use. For more information, see Amazon EC2 Dedicated Hosts.\n23 November 2015\nSpot Instance duration\n2015-10-01\nYou can now specify a duration for your Spot Instances. Spot blocks is not supported (January 2023).\n6 October 2015\nSpot Fleet modify request\n2015-10-01\nYou can now modify the target capacity of your Spot Fleet request. For more information, see Modify a Spot Fleet request.\n29 September 2015\nSpot Fleet diversified allocation strategy\n2015-04-15\nYou can now allocate Spot Instances in multiple Spot pools using a single Spot Fleet request. For more information, see Use allocation strategies to determine how EC2 Fleet or Spot Fleet fulfills Spot and On-Demand capacity.\n15 September 2015\nSpot Fleet instance weighting\n2015-04-15\nYou can now define the capacity units that each instance type contributes to your application's performance, and adjust the amount you are willing to pay for Spot Instances for each Spot pool accordingly. For more information, see Use instance weighting to manage cost and performance of your EC2 Fleet or Spot Fleet.\n31 August 2015\nNew reboot alarm action and new IAM role for use with alarm actions\nAdded the reboot alarm action and new IAM role for use with alarm actions. For more information, see Create alarms that stop, terminate, reboot, or recover an instance.\n23 July 2015\nSpot Fleets\n2015-04-15\nYou can manage a collection, or fleet, of Spot Instances instead of managing separate Spot Instance requests. For more information, see EC2 Fleet and Spot Fleet.\n18 May 2015\nMigrate Elastic IP addresses to EC2-Classic\n2015-04-15\nYou can migrate an Elastic IP address that you've allocated for use in EC2-Classic to be used in a VPC..\n15 May 2015\nImporting VMs with multiple disks as AMIs\n2015-03-01\nThe VM Import process now supports importing VMs with multiple disks as AMIs. For more information, see Importing a VM as an Image Using VM Import/Export in the VM Import/Export User Guide .\n23 April 2015\nSystems Manager\nSystems Manager enables you to configure and manage your EC2 instances.\n17 February 2015\nSystems Manager for Microsoft SCVMM 1.5\nYou can now use Systems Manager for Microsoft SCVMM to launch an instance and to import a VM from SCVMM to Amazon EC2.\n21 January 2015\nAutomatic recovery for EC2 instances\nYou can create an Amazon CloudWatch alarm that monitors an Amazon EC2 instance and automatically recovers the instance if it becomes impaired due to an underlying hardware failure or a problem that requires AWS involvement to repair. A recovered instance is identical to the original instance, including the instance ID, IP addresses, and all instance metadata.\nFor more information, see Automatic instance recovery.\n12 January 2015\nClassicLink\n2014-10-01\nClassicLink enables you to link your EC2-Classic instance to a VPC in your account. You can associate VPC security groups with the EC2-Classic instance, enabling communication between your EC2-Classic instance and instances in your VPC using private IP addresses.\n7 January 2015\nSpot Instance termination notices\nThe best way to protect against Spot Instance interruption is to architect your application to be fault tolerant. In addition, you can take advantage of Spot Instance termination notices, which provide a two-minute warning before Amazon EC2 must terminate your Spot Instance.\nFor more information, see Spot Instance interruption notices.\n5 January 2015\nSystems Manager for Microsoft SCVMM\nSystems Manager for Microsoft SCVMM provides a simple, easy-to-use interface for managing AWS resources, such as EC2 instances, from Microsoft SCVMM.\n29 October 2014\nDescribeVolumes pagination support\n2014-09-01\nThe DescribeVolumes API call now supports the pagination of results with the MaxResults and NextToken parameters. For more information, see DescribeVolumes in the Amazon EC2 API Reference.\n23 October 2014\nAdded support for Amazon CloudWatch Logs\nYou can use Amazon CloudWatch Logs to monitor, store, and access your system, application, and custom log files from your instances or other sources. You can then retrieve the associated log data from CloudWatch Logs using the Amazon CloudWatch console, the CloudWatch Logs commands in the AWS CLI, or the CloudWatch Logs SDK.\n10 July 2014\nNew EC2 Service Limits page\nUse the EC2 Service Limits page in the Amazon EC2 console to view the current limits for resources provided by Amazon EC2 and Amazon VPC, on a per-region basis.\n19 June 2014\nAmazon EBS General Purpose SSD Volumes\n2014-05-01\nGeneral Purpose SSD volumes offer cost-effective storage that is ideal for a broad range of workloads. These volumes deliver single-digit millisecond latencies, the ability to burst to 3,000 IOPS for extended periods of time, and a base performance of 3 IOPS/GiB. General Purpose SSD volumes can range in size from 1 GiB to 1 TiB.\n16 June 2014\nAWS Management Pack\nAWS Management Pack now supports for System Center Operations Manager 2012 R2.\n22 May 2014\nAmazon EBS encryption\n2014-05-01\nAmazon EBS encryption offers seamless encryption of EBS data volumes and snapshots, eliminating the need to build and maintain a secure key management infrastructure. EBS encryption enables data at rest security by encrypting your data using AWS managed keys. The encryption occurs on the servers that host EC2 instances, providing encryption of data as it moves between EC2 instances and EBS storage.\n21 May 2014\nAmazon EC2 Usage Reports\nAmazon EC2 Usage Reports is a set of reports that shows cost and usage data of your usage of EC2.\n28 January 2014\nImporting Linux virtual machines\n2013-10-15\nThe VM Import process now supports the importation of Linux instances. For more information, see the VM Import/Export User Guide.\n16 December 2013\nResource-level permissions for RunInstances\n2013-10-15\nYou can now create policies in AWS Identity and Access Management to control resource-level permissions for the Amazon EC2 RunInstances API action. For more information and example policies, see Identity and access management for Amazon EC2.\n20 November 2013\nLaunching an instance from the AWS Marketplace\nYou can now launch an instance from the AWS Marketplace using the Amazon EC2 launch wizard. For more information, see Launch an Amazon EC2 instance from an AWS Marketplace AMI.\n11 November 2013\nNew launch wizard\nThere is a new and redesigned EC2 launch wizard. For more information, see Launch an EC2 instance using the launch instance wizard in the console.\n10 October 2013\nModifying instance types of Reserved Instances\n2013-10-01\nYou can now modify the instance type of Linux Reserved Instances within the same family (for example, M1, M2, M3, C1). For more information, see Modify Reserved Instances.\n09 October 2013\nModifying Amazon EC2 Reserved Instances\n2013-08-15\nYou can now modify Reserved Instances in a Region. For more information, see Modify Reserved Instances.\n11 September 2013\nAssigning a public IP address\n2013-07-15\nYou can now assign a public IP address when you launch an instance in a VPC. For more information, see Assign a public IPv4 address during instance launch.\n20 August 2013\nGranting resource-level permissions\n2013-06-15\nAmazon EC2 supports new Amazon Resource Names (ARNs) and condition keys. For more information, see Identity-based policies for Amazon EC2.\n8 July 2013\nIncremental Snapshot Copies\n2013-02-01\nYou can now perform incremental snapshot copies.\n11 June 2013\nAWS Management Pack\nThe AWS Management Pack links Amazon EC2 instances and the Windows or Linux operating systems running inside them. The AWS Management Pack is an extension to Microsoft System Center Operations Manager.\n8 May 2013\nNew Tags page\nThere is a new Tags page in the Amazon EC2 console. For more information, see Tag your Amazon EC2 resources.\n04 April 2013\nCopy an AMI from one Region to another\n2013-02-01\nYou can copy an AMI from one Region to another, enabling you to launch consistent instances in more than one AWS Region quickly and easily.\nFor more information, see Copy an Amazon EC2 AMI.\n11 March 2013\nLaunch instances into a default VPC\n2013-02-01\nYour AWS account is capable of launching instances into either EC2-Classic or a VPC, or only into a VPC, on a region-by-region basis. If you can launch instances only into a VPC, we create a default VPC for you. When you launch an instance, we launch it into your default VPC, unless you create a nondefault VPC and specify it when you launch the instance.\n11 March 2013\nEBS snapshot copy\n2012-12-01\nYou can use snapshot copies to create backups of data, to create new Amazon EBS volumes, or to create Amazon Machine Images (AMIs).\n17 December 2012\nUpdated EBS metrics and status checks for Provisioned IOPS SSD volumes\n2012-10-01\nUpdated the EBS metrics to include two new metrics for Provisioned IOPS SSD volumes. Also added new status checks for Provisioned IOPS SSD volumes.\n20 November 2012\nSpot Instance request status\n2012-10-01\nSpot Instance request status makes it easy to determine the state of your Spot requests.\n14 October 2012\nAmazon EC2 Reserved Instance Marketplace 2012-08-15 The Reserved Instance Marketplace matches sellers who have Amazon EC2 Reserved Instances that they no longer need with buyers who are looking to purchase additional capacity. Reserved Instances bought and sold through the Reserved Instance Marketplace work like any other Reserved Instances, except that they can have less than a full standard term remaining and can be sold at different prices.\n11 September 2012\nProvisioned IOPS SSD for Amazon EBS\n2012-07-20\nProvisioned IOPS SSD volumes deliver predictable, high performance for I/O intensive workloads, such as database applications, that rely on consistent and fast response times.\n31 July 2012\nIAM roles on Amazon EC2 instances\n2012-06-01\nIAM roles for Amazon EC2 provide:\nAWS access keys for applications running on Amazon EC2 instances.\nAutomatic rotation of the AWS access keys on the Amazon EC2 instance.\nGranular permissions for applications running on Amazon EC2 instances that make requests to your AWS services.\n11 June 2012\nSpot Instance features that make it easier to get started and handle the potential of interruption.\nYou can now manage your Spot Instances as follows:\nSpecify the amount you are willing to pay for Spot Instances using Auto Scaling launch configurations, and set up a schedule for specifying the amount you are willing to pay for Spot Instances. F or more information, see Request Spot Instances in the Amazon EC2 Auto Scaling User Guide.\nGet notifications when instances are launched or terminated.\nUse AWS CloudFormation templates to launch Spot Instances in a stack with AWS resources.\n7 June 2012\nEC2 instance export and timestamps for status checks for Amazon EC2\n2012-05-01\nAdded support for exporting Windows Server instances that you originally imported into EC2.\nAdded support for timestamps on instance status and system status to indicate the date and time that a status check failed.\n25 May 2012\nEC2 instance export, and timestamps in instance and system status checks for Amazon VPC\n2012-05-01\nAdded support for EC2 instance export to Citrix Xen, Microsoft Hyper-V, and VMware vSphere.\nAdded support for timestamps in instance and system status checks.\n25 May 2012\nAWS Marketplace AMIs\n2012-04-01\nAdded support for AWS Marketplace AMIs.\n19 April 2012\nReserved Instance pricing tiers\n2011-12-15\nAdded a new section discussing how to take advantage of the discount pricing that is built into the Reserved Instance pricing tiers.\n5 March 2012\nElastic Network Interfaces (ENIs) for EC2 instances in Amazon Virtual Private Cloud\n2011-12-01\nAdded new section about elastic network interfaces (ENIs) for EC2 instances in a VPC. For more information, see Elastic network interfaces.\n21 December 2011\nNew offering types for Amazon EC2 Reserved Instances\n2011-11-01\nYou can choose from a variety of Reserved Instance offerings that address your projected use of the instance.\n01 December 2011\nAmazon EC2 instance status\n2011-11-01\nYou can view additional details about the status of your instances, including scheduled events planned by AWS that might have an impact on your instances. These operational activities include instance reboots required to apply software updates or security patches, or instance retirements required where there are hardware issues. For more information, see Monitor the status of your Amazon EC2 instances.\n16 November 2011\nSpot Instances in Amazon VPC\n2011-07-15\nAdded information about the support for Spot Instances in Amazon VPC. With this update, users can launch Spot Instances a virtual private cloud (VPC). By launching Spot Instances in a VPC, users of Spot Instances can enjoy the benefits of Amazon VPC.\n11 October 2011\nSimplified VM import process for users of the CLI tools\n2011-07-15\nThe VM Import process is simplified with the enhanced functionality of ImportInstance and ImportVolume, which now will perform the upload of the images into Amazon EC2 after creating the import task. In addition, with the introduction of ResumeImport, users can restart an incomplete upload at the point the task stopped.\n15 September 2011\nSupport for importing in VHD file format\nVM Import can now import virtual machine image files in VHD format. The VHD file format is compatible with the Citrix Xen and Microsoft Hyper-V virtualization platforms. With this release, VM Import now supports RAW, VHD and VMDK (VMware ESX-compatible) image formats. For more information, see the VM Import/Export User Guide.\n24 August 2011\nUpdate to the Amazon EC2 VM Import Connector for VMware vCenter\nAdded information about the 1.1 version of the Amazon EC2 VM Import Connector for VMware vCenter virtual appliance (Connector). This update includes proxy support for Internet access, better error handling, improved task progress bar accuracy, and several bug fixes.\n27 June 2011\nSpot Instances Availability Zone pricing changes\n2011-05-15\nAdded information about the Spot Instances Availability Zone pricing feature. In this release, we've added new Availability Zone pricing options as part of the information returned when you query for Spot Instance requests and Spot price history. These additions make it easier to determine the price required to launch a Spot Instance into a particular Availability Zone.\n26 May 2011\nAWS Identity and Access Management\nAdded information about AWS Identity and Access Management (IAM), which enables users to specify which Amazon EC2 actions a user can use with Amazon EC2 resources in general. For more information, see Identity and access management for Amazon EC2.\n26 April 2011\nDedicated instances\nLaunched within your Amazon Virtual Private Cloud (Amazon VPC), Dedicated Instances are instances that are physically isolated at the host hardware level. Dedicated Instances let you take advantage of Amazon VPC and the AWS cloud, with benefits including on-demand elastic provisioning and pay only for what you use, while isolating your Amazon EC2 compute instances at the hardware level. For more information, see Amazon EC2 Dedicated Instances.\n27 March 2011\nReserved Instances updates to the AWS Management Console\nUpdates to the AWS Management Console make it easier for users to view their Reserved Instances and purchase additional Reserved Instances, including Dedicated Reserved Instances.\n27 March 2011\nMetadata information\n2011-01-01\nAdded information about metadata to reflect changes in the 2011-01-01 release. For more information, see Use instance metadata to manage your EC2 instance and Instance metadata categories.\n11 March 2011\nAmazon EC2 VM Import Connector for VMware vCenter\nAdded information about the Amazon EC2 VM Import Connector for VMware vCenter virtual appliance (Connector). The Connector is a plug-in for VMware vCenter that integrates with VMware vSphere Client and provides a graphical user interface that you can use to import your VMware virtual machines to Amazon EC2.\n3 March 2011\nForce volume detachment\nYou can now use the AWS Management Console to force the detachment of an Amazon EBS volume from an instance.\n23 February 2011\nInstance termination protection\nYou can now use the AWS Management Console to prevent an instance from being terminated. For more information, see Enable termination protection.\n23 February 2011\nVM Import\n2010-11-15\nAdded information about VM Import, which allows you to import a virtual machine or volume into Amazon EC2. For more information, see the VM Import/Export User Guide.\n15 December 2010\nBasic monitoring for instances\n2010-08-31\nAdded information about basic monitoring for EC2 instances.\n12 December 2010\nFilters and Tags\n2010-08-31\nAdded information about listing, filtering, and tagging resources. For more information, see Find your Amazon EC2 resources and Tag your Amazon EC2 resources.\n19 September 2010\nIdempotent Instance Launch\n2010-08-31\nAdded information about ensuring idempotency when running instances.\n19 September 2010\nAWS Identity and Access Management for Amazon EC2\nAmazon EC2 now integrates with AWS Identity and Access Management (IAM). For more information, see Identity and access management for Amazon EC2.\n2 September 2010\nAmazon VPC IP Address Designation\n2010-06-15\nAmazon VPC users can now specify the IP address to assign an instance launched in a VPC.\n12 July 2010\nAmazon CloudWatch monitoring for Amazon EBS Volumes\nAmazon CloudWatch monitoring is now automatically available for Amazon EBS volumes.\n14 June 2010\nReserved Instances with Windows\nAmazon EC2 now supports Reserved Instances with Windows.\n22 February 2010"
    }
]